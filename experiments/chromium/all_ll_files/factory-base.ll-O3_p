; ModuleID = '../../v8/src/heap/factory-base.cc'
source_filename = "../../v8/src/heap/factory-base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.970"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1191, i32, [4 x i8] }>
%union.anon.1191 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.957, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.957 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"** }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.v8::internal::Handle.972"*, %"class.v8::internal::Handle.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.v8::internal::Handle.972" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::Handle.972"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.978", [128 x i8] }
%"class.v8::internal::Vector.978" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type <{ %"class.v8::internal::Logger"*, i8, i8, [6 x i8] }>
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FactoryBase.1052" = type { i8 }
%"class.v8::internal::SequentialStringKey" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector", i8, [7 x i8] }>
%"class.v8::internal::StringTableKey" = type { i32 (...)**, i32, i32 }
%"class.v8::internal::SequentialStringKey.1132" = type <{ %"class.v8::internal::StringTableKey", %"class.v8::internal::Vector.1134", i8, [7 x i8] }>
%"class.v8::internal::Vector.1134" = type { i16*, i64 }
%"class.v8::internal::SeqSubStringKey" = type opaque
%"class.v8::internal::SeqSubStringKey.1133" = type opaque
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.958", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.958", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle.958" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::TorqueGeneratedFactory" = type { i8 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1164" }
%"class.std::__1::vector.1164" = type { %"class.std::__1::__vector_base.1165" }
%"class.std::__1::__vector_base.1165" = type { %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"*, %"class.std::__1::__compressed_pair.1166" }
%"struct.v8::internal::SourceRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167", %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.v8::internal::SourceRange"* }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::CoverageInfo" = type { %"class.v8::internal::TorqueGeneratedCoverageInfo" }
%"class.v8::internal::TorqueGeneratedCoverageInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1154", i32, i32, i32, %"class.v8::internal::Handle.1156" }
%"class.v8::internal::Handle.1154" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1156" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::StringShape" = type { i32 }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1170" }
%"class.v8::base::Optional.1170" = type { %"class.v8::base::internal::OptionalBase.1171" }
%"class.v8::base::internal::OptionalBase.1171" = type { %"struct.v8::base::internal::OptionalStorage.1172" }
%"struct.v8::base::internal::OptionalStorage.1172" = type { %"struct.v8::base::internal::OptionalStorageBase.1173" }
%"struct.v8::base::internal::OptionalStorageBase.1173" = type { i8, %union.anon.1174 }
%union.anon.1174 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::SwissNameDictionary" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::TorqueGeneratedFactory.1053" = type { i8 }
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE15read_only_rootsEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE26AllocateRawWithImmortalMapEiNS0_14AllocationTypeENS0_3MapENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE7isolateEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15read_only_rootsEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE26AllocateRawWithImmortalMapEiNS0_14AllocationTypeENS0_3MapENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE7isolateEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE9ToBooleanEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE4implEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewStructInternalENS0_13ReadOnlyRootsENS0_3MapEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE16AllocateRawArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE16NewBytecodeArrayEiPKhiiNS0_6HandleINS0_10FixedArrayEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewObjectBoilerplateDescriptionEiiib = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE30NewArrayBoilerplateDescriptionENS0_12ElementsKindENS0_6HandleINS0_14FixedArrayBaseEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTemplateObjectDescriptionENS0_6HandleINS0_10FixedArrayEEES6_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewSharedFunctionInfoForLiteralEPNS0_15FunctionLiteralENS0_6HandleINS0_6ScriptEEEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewCoverageInfoERKNS0_10ZoneVectorINS0_11SourceRangeEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKtEEb = comdat any

$_ZN2v88internal14StringTableKeyD2Ev = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawTwoByteInternalizedStringEij = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE28MakeOrFindTwoCharacterStringEtt = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewWithImmortalMapENS0_3MapENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewBigIntEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewScopeInfoEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewSourceTextModuleInfoEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewClassPositionsEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewSwissNameDictionaryEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal19SwissNameDictionary10InitializeINS0_7IsolateEEEvPT_NS0_9ByteArrayEi = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE27NewFunctionTemplateRareDataEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE21AllocateRawFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE24AllocateRawWeakArrayListEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_7FactoryEE21NewSharedFunctionInfoEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9ToBooleanEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE4implEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewStructInternalENS0_13ReadOnlyRootsENS0_3MapEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE16AllocateRawArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewByteArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE16NewBytecodeArrayEiPKhiiNS0_6HandleINS0_10FixedArrayEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewObjectBoilerplateDescriptionEiiib = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE30NewArrayBoilerplateDescriptionENS0_12ElementsKindENS0_6HandleINS0_14FixedArrayBaseEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTemplateObjectDescriptionENS0_6HandleINS0_10FixedArrayEEES6_ = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewSharedFunctionInfoForLiteralEPNS0_15FunctionLiteralENS0_6HandleINS0_6ScriptEEEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewCoverageInfoERKNS0_10ZoneVectorINS0_11SourceRangeEEE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17InternalizeStringERKNS0_6VectorIKhEEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17InternalizeStringERKNS0_6VectorIKtEEb = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36AllocateRawOneByteInternalizedStringEij = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36AllocateRawTwoByteInternalizedStringEij = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal12LocalFactory27NewInvalidStringLengthErrorEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28MakeOrFindTwoCharacterStringEtt = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewWithImmortalMapENS0_3MapENS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewBigIntEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewScopeInfoEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewSourceTextModuleInfoEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewClassPositionsEii = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewSwissNameDictionaryEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal19SwissNameDictionary10InitializeINS0_12LocalIsolateEEEvPT_NS0_9ByteArrayEi = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE27NewFunctionTemplateRareDataEv = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21AllocateRawFixedArrayEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24AllocateRawWeakArrayListEiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoEv = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im = comdat any

$_ZN2v88internal19SequentialStringKeyIhED0Ev = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im = comdat any

$_ZN2v88internal19SequentialStringKeyItED0Ev = comdat any

$_ZTVN2v88internal19SequentialStringKeyIhEE = comdat any

$_ZTVN2v88internal19SequentialStringKeyItEE = comdat any

@.str = private unnamed_addr constant [39 x i8] c"Fatal JavaScript invalid size error %d\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"String::kMaxLength >= length\00", align 1
@_ZN2v88internal29FLAG_use_marking_progress_barE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Smi::IsValid(backing_store_size)\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZTVN2v88internal19SequentialStringKeyIhEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SequentialStringKey"*)* @_ZN2v88internal19SequentialStringKeyIhED0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal19SequentialStringKeyItEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SequentialStringKey.1132"*)* @_ZN2v88internal19SequentialStringKeyItED0Ev to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@switch.table._ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE = private unnamed_addr constant [24 x i32] [i32 194, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 194, i32 194, i32 194, i32 194, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192], align 4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 320
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 12, i8 zeroext 0, i32 2) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %12 = bitcast %"class.v8::internal::FactoryBase"* %11 to %"class.v8::internal::CanonicalHandleScope"**
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %6) #6
  br label %32

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %19 = bitcast %"class.v8::internal::FactoryBase"* %18 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %22 = bitcast %"class.v8::internal::FactoryBase"* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %20, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #6
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i64* [ %26, %25 ], [ %20, %17 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %19, align 8
  store i64 %6, i64* %28, align 8
  br label %32

32:                                               ; preds = %15, %27
  %33 = phi i64* [ %16, %15 ], [ %28, %27 ]
  ret i64* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15read_only_rootsEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  ret i64* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE26AllocateRawWithImmortalMapEiNS0_14AllocationTypeENS0_3MapENS0_19AllocationAlignmentE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %7 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %6, i32 %1, i8 zeroext %2, i32 %4) #6
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %3 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  ret i64 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Isolate"* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE7isolateEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  ret %"class.v8::internal::Isolate"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 320
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 12, i8 zeroext 1, i32 2) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %12 = bitcast %"class.v8::internal::FactoryBase"* %11 to %"class.v8::internal::CanonicalHandleScope"**
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %6) #6
  br label %32

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %19 = bitcast %"class.v8::internal::FactoryBase"* %18 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %22 = bitcast %"class.v8::internal::FactoryBase"* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %20, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #6
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i64* [ %26, %25 ], [ %20, %17 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %19, align 8
  store i64 %6, i64* %28, align 8
  br label %32

32:                                               ; preds = %15, %27
  %33 = phi i64* [ %16, %15 ], [ %28, %27 ]
  ret i64* %33
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 320
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 12, i8 zeroext 4, i32 2) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %12 = bitcast %"class.v8::internal::FactoryBase"* %11 to %"class.v8::internal::CanonicalHandleScope"**
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %6) #6
  br label %32

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %19 = bitcast %"class.v8::internal::FactoryBase"* %18 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %22 = bitcast %"class.v8::internal::FactoryBase"* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %20, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #6
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i64* [ %26, %25 ], [ %20, %17 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %19, align 8
  store i64 %6, i64* %28, align 8
  br label %32

32:                                               ; preds = %15, %27
  %33 = phi i64* [ %16, %15 ], [ %28, %27 ]
  ret i64* %33
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 24
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %7 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %6, i32 12, i8 zeroext 1, i32 2) #6
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %5 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  %11 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %16 = bitcast %"class.v8::internal::FactoryBase.1052"* %15 to %"class.v8::internal::LocalHeap"*
  %17 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %16, i64 %7) #6
  br label %34

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %20 = bitcast %"class.v8::internal::FactoryBase.1052"* %19 to %"class.v8::internal::LocalHandles"**
  %21 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %21, i64 0, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %21, i64 0, i32 0, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %18
  %28 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %21) #6
  %29 = load i64*, i64** %22, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi i64* [ %29, %27 ], [ %23, %18 ]
  %32 = phi i64* [ %28, %27 ], [ %23, %18 ]
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  store i64* %33, i64** %22, align 8
  store i64 %7, i64* %32, align 8
  br label %34

34:                                               ; preds = %14, %30
  %35 = phi i64* [ %17, %14 ], [ %32, %30 ]
  ret i64* %35
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15read_only_rootsEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE26AllocateRawWithImmortalMapEiNS0_14AllocationTypeENS0_3MapENS0_19AllocationAlignmentE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %7 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %6, i32 %1, i8 zeroext %2, i32 %4) #6
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %3 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::LocalIsolate"* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE7isolateEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  ret %"class.v8::internal::LocalIsolate"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to %"class.v8::internal::StringTable"**
  %6 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %5, align 8
  %7 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %6, %"class.v8::internal::Isolate"* %3, %"class.v8::internal::SequentialStringKey"* %1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SequentialStringKey.1132"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to %"class.v8::internal::StringTable"**
  %6 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %5, align 8
  %7 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %6, %"class.v8::internal::Isolate"* %3, %"class.v8::internal::SequentialStringKey.1132"* %1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SequentialStringKey.1132"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SeqSubStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to %"class.v8::internal::StringTable"**
  %6 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %5, align 8
  %7 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %6, %"class.v8::internal::Isolate"* %3, %"class.v8::internal::SeqSubStringKey"* %1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqOneByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SeqSubStringKey"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24InternalizeStringWithKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::SeqSubStringKey.1133"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to %"class.v8::internal::StringTable"**
  %6 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %5, align 8
  %7 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %6, %"class.v8::internal::Isolate"* %3, %"class.v8::internal::SeqSubStringKey.1133"* %1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_15SeqSubStringKeyINS0_16SeqTwoByteStringEEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SeqSubStringKey.1133"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyIhEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %4 to %"class.v8::internal::Isolate"**
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %7, align 8
  %9 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %8, %"class.v8::internal::LocalIsolate"* %3, %"class.v8::internal::SequentialStringKey"* %1) #6
  ret i64* %9
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::SequentialStringKey"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24InternalizeStringWithKeyINS0_19SequentialStringKeyItEEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::SequentialStringKey.1132"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %4 to %"class.v8::internal::Isolate"**
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %7, align 8
  %9 = tail call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %8, %"class.v8::internal::LocalIsolate"* %3, %"class.v8::internal::SequentialStringKey.1132"* %1) #6
  ret i64* %9
}

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::SequentialStringKey.1132"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9ToBooleanEb(%"class.v8::internal::FactoryBase"*, i1 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = select i1 %1, i64 184, i64 192
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 %3
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Factory"* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE4implEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  ret %"class.v8::internal::Factory"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i16 zeroext, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext %1) #6
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i8*
  %9 = load atomic i8, i8* %8 monotonic, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 2
  %12 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %13 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %12, i32 %11, i8 zeroext %2, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %6 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %18 = bitcast %"class.v8::internal::FactoryBase"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i32 %10, -1
  %21 = add i64 %13, 3
  %22 = sext i32 %20 to i64
  %23 = inttoptr i64 %21 to i32*
  %24 = trunc i64 %19 to i32
  %25 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %24, i64 %22, i32* %23) #6, !srcloc !3
  %26 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %28 = bitcast %"class.v8::internal::FactoryBase"* %27 to %"class.v8::internal::CanonicalHandleScope"**
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %13) #6
  br label %48

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #6
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %36, %33 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %35, align 8
  store i64 %13, i64* %44, align 8
  br label %48

48:                                               ; preds = %31, %43
  %49 = phi i64* [ %32, %31 ], [ %44, %43 ]
  ret i64* %49
}

declare i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewStructInternalENS0_13ReadOnlyRootsENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %7 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %6, i32 %3, i8 zeroext %4, i32 0) #6
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %2 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  %11 = getelementptr inbounds i64, i64* %1, i64 4
  %12 = load i64, i64* %11, align 8
  %13 = ashr i32 %3, 2
  %14 = add nsw i32 %13, -1
  %15 = add i64 %7, 3
  %16 = sext i32 %14 to i64
  %17 = inttoptr i64 %15 to i32*
  %18 = trunc i64 %12 to i32
  %19 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %18, i64 %16, i32* %17) #6, !srcloc !3
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %3, i16 zeroext 87) #6
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 12, i8 zeroext 1, i32 0) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %11 = bitcast %"class.v8::internal::FactoryBase"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %6, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %12 to i32
  %16 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %15, i64 2, i32* %14) #6, !srcloc !3
  %17 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 176
  %18 = bitcast %"class.v8::internal::FactoryBase"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  store atomic volatile i32 %20, i32* %14 monotonic, align 4
  %21 = load i64, i64* %18, align 8
  %22 = add i64 %6, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = trunc i64 %21 to i32
  store atomic volatile i32 %24, i32* %23 monotonic, align 4
  %25 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %27 = bitcast %"class.v8::internal::FactoryBase"* %26 to %"class.v8::internal::CanonicalHandleScope"**
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %1
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %6) #6
  br label %47

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %34 = bitcast %"class.v8::internal::FactoryBase"* %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %37 = bitcast %"class.v8::internal::FactoryBase"* %36 to i64**
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %35, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %25) #6
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i64* [ %41, %40 ], [ %35, %32 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %34, align 8
  store i64 %6, i64* %43, align 8
  br label %47

47:                                               ; preds = %30, %42
  %48 = phi i64* [ %31, %30 ], [ %43, %42 ]
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 360
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  br label %17

8:                                                ; preds = %3
  %9 = icmp ugt i32 %1, 134217725
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 224
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %15 = bitcast %"class.v8::internal::FactoryBase"* %14 to i64*
  %16 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %13, i32 %1, i64* %15, i8 zeroext %2)
  br label %17

17:                                               ; preds = %11, %5
  %18 = phi i64* [ %7, %5 ], [ %16, %11 ]
  ret i64* %18
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i32, i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp ugt i32 %2, 134217725
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %2) #7
  unreachable

8:                                                ; preds = %5
  %9 = shl i32 %2, 2
  %10 = add nuw nsw i32 %9, 8
  %11 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %12 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %11, i32 %10, i8 zeroext %4, i32 0) #6
  %13 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %4) #6
  %14 = icmp sge i32 %13, %10
  %15 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %16 = icmp eq i8 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %8
  %19 = and i64 %12, -262144
  %20 = inttoptr i64 %19 to %"class.v8::internal::BasicMemoryChunk"*
  %21 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %20, i64 0, i32 1
  %22 = load atomic i64, i64* %21 monotonic, align 8
  br label %23

23:                                               ; preds = %27, %18
  %24 = phi i64 [ %22, %18 ], [ %30, %27 ]
  %25 = and i64 %24, 256
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = or i64 %24, 256
  %29 = cmpxchg volatile i64* %21, i64 %24, i64 %28 release monotonic
  %30 = extractvalue { i64, i1 } %29, 0
  %31 = extractvalue { i64, i1 } %29, 1
  br i1 %31, label %32, label %23

32:                                               ; preds = %23, %27, %8
  %33 = load i64, i64* %1, align 8
  %34 = add i64 %12, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = trunc i64 %33 to i32
  store atomic volatile i32 %36, i32* %35 monotonic, align 4
  %37 = shl i32 %2, 1
  %38 = add i64 %12, 3
  %39 = inttoptr i64 %38 to i32*
  store atomic volatile i32 %37, i32* %39 monotonic, align 4
  %40 = add i64 %12, 7
  %41 = load i64, i64* %3, align 8
  %42 = sext i32 %2 to i64
  %43 = inttoptr i64 %40 to i32*
  %44 = trunc i64 %41 to i32
  %45 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %44, i64 %42, i32* %43) #6, !srcloc !3
  %46 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %47 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %48 = bitcast %"class.v8::internal::FactoryBase"* %47 to %"class.v8::internal::CanonicalHandleScope"**
  %49 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %32
  %52 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %49, i64 %12) #6
  br label %68

53:                                               ; preds = %32
  %54 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %55 = bitcast %"class.v8::internal::FactoryBase"* %54 to i64**
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %58 = bitcast %"class.v8::internal::FactoryBase"* %57 to i64**
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %56, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %46) #6
  br label %63

63:                                               ; preds = %61, %53
  %64 = phi i64* [ %62, %61 ], [ %56, %53 ]
  %65 = ptrtoint i64* %64 to i64
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  store i64* %67, i64** %55, align 8
  store i64 %12, i64* %64, align 8
  br label %68

68:                                               ; preds = %51, %63
  %69 = phi i64* [ %52, %51 ], [ %64, %63 ]
  ret i64* %69
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %6 = bitcast %"class.v8::internal::FactoryBase"* %5 to i64*
  %7 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %1, i32 %2, i64* %6, i8 zeroext %3)
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 360
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  br label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 224
  %10 = bitcast %"class.v8::internal::FactoryBase"* %9 to i64*
  %11 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 168
  %12 = bitcast %"class.v8::internal::FactoryBase"* %11 to i64*
  %13 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %10, i32 %1, i64* %12, i8 zeroext %2)
  br label %14

14:                                               ; preds = %8, %5
  %15 = phi i64* [ %7, %5 ], [ %13, %8 ]
  ret i64* %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 360
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  br label %47

8:                                                ; preds = %3
  %9 = icmp ugt i32 %1, 67108862
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

11:                                               ; preds = %8
  %12 = shl i32 %1, 3
  %13 = add nuw nsw i32 %12, 8
  %14 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 488
  %15 = bitcast %"class.v8::internal::FactoryBase"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %17, i32 %13, i8 zeroext %2, i32 1) #6
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = trunc i64 %16 to i32
  store atomic volatile i32 %21, i32* %20 monotonic, align 4
  %22 = shl i32 %1, 1
  %23 = add i64 %18, 3
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 %22, i32* %24 monotonic, align 4
  %25 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %27 = bitcast %"class.v8::internal::FactoryBase"* %26 to %"class.v8::internal::CanonicalHandleScope"**
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %18) #6
  br label %47

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %34 = bitcast %"class.v8::internal::FactoryBase"* %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %37 = bitcast %"class.v8::internal::FactoryBase"* %36 to i64**
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %35, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %25) #6
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i64* [ %41, %40 ], [ %35, %32 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %34, align 8
  store i64 %18, i64* %43, align 8
  br label %47

47:                                               ; preds = %42, %30, %5
  %48 = phi i64* [ %7, %5 ], [ %31, %30 ], [ %43, %42 ]
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = shl i32 %2, 2
  %6 = add nsw i32 %5, 8
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %7, i32 %6, i8 zeroext %3, i32 0) #6
  %9 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %3) #6
  %10 = icmp sge i32 %9, %6
  %11 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %12 = icmp eq i8 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %28, label %14

14:                                               ; preds = %4
  %15 = and i64 %8, -262144
  %16 = inttoptr i64 %15 to %"class.v8::internal::BasicMemoryChunk"*
  %17 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %16, i64 0, i32 1
  %18 = load atomic i64, i64* %17 monotonic, align 8
  br label %19

19:                                               ; preds = %23, %14
  %20 = phi i64 [ %18, %14 ], [ %26, %23 ]
  %21 = and i64 %20, 256
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = or i64 %20, 256
  %25 = cmpxchg volatile i64* %17, i64 %20, i64 %24 release monotonic
  %26 = extractvalue { i64, i1 } %25, 0
  %27 = extractvalue { i64, i1 } %25, 1
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %23, %4
  %29 = add i64 %8, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = trunc i64 %1 to i32
  store atomic volatile i32 %31, i32* %30 monotonic, align 4
  %32 = shl i32 %2, 1
  %33 = add i64 %8, 3
  %34 = inttoptr i64 %33 to i32*
  store atomic volatile i32 %32, i32* %34 monotonic, align 4
  %35 = add i64 %8, 7
  %36 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %37 = bitcast %"class.v8::internal::FactoryBase"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sext i32 %2 to i64
  %40 = inttoptr i64 %35 to i32*
  %41 = trunc i64 %38 to i32
  %42 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %41, i64 %39, i32* %40) #6, !srcloc !3
  %43 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %44 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %45 = bitcast %"class.v8::internal::FactoryBase"* %44 to %"class.v8::internal::CanonicalHandleScope"**
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %28
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %8) #6
  br label %65

50:                                               ; preds = %28
  %51 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %52 = bitcast %"class.v8::internal::FactoryBase"* %51 to i64**
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %55 = bitcast %"class.v8::internal::FactoryBase"* %54 to i64**
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %53, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %50
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #6
  br label %60

60:                                               ; preds = %58, %50
  %61 = phi i64* [ %59, %58 ], [ %53, %50 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %52, align 8
  store i64 %8, i64* %61, align 8
  br label %65

65:                                               ; preds = %48, %60
  %66 = phi i64* [ %49, %48 ], [ %61, %60 ]
  ret i64* %66
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE16AllocateRawArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %5 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %4, i32 %1, i8 zeroext %2, i32 0) #6
  %6 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %7 = icmp sge i32 %6, %1
  %8 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %9 = icmp eq i8 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = and i64 %5, -262144
  %13 = inttoptr i64 %12 to %"class.v8::internal::BasicMemoryChunk"*
  %14 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %13, i64 0, i32 1
  %15 = load atomic i64, i64* %14 monotonic, align 8
  br label %16

16:                                               ; preds = %20, %11
  %17 = phi i64 [ %15, %11 ], [ %23, %20 ]
  %18 = and i64 %17, 256
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = or i64 %17, 256
  %22 = cmpxchg volatile i64* %14, i64 %17, i64 %21 release monotonic
  %23 = extractvalue { i64, i1 } %22, 0
  %24 = extractvalue { i64, i1 } %22, 1
  br i1 %24, label %25, label %16

25:                                               ; preds = %16, %20, %3
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1080
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  br label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 712
  %10 = bitcast %"class.v8::internal::FactoryBase"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64 %11, i32 %1, i8 zeroext %2)
  br label %13

13:                                               ; preds = %8, %5
  %14 = phi i64* [ %7, %5 ], [ %12, %8 ]
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870900
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = add nuw nsw i32 %1, 11
  %8 = and i32 %7, -4
  %9 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 216
  %10 = bitcast %"class.v8::internal::FactoryBase"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %13 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %12, i32 %8, i8 zeroext %2, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %11 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = shl i32 %1, 1
  %18 = add i64 %13, 3
  %19 = inttoptr i64 %18 to i32*
  store atomic volatile i32 %17, i32* %19 monotonic, align 4
  %20 = ashr exact i32 %17, 1
  %21 = add nuw nsw i32 %20, 8
  %22 = sext i32 %21 to i64
  %23 = add i64 %14, %22
  %24 = inttoptr i64 %23 to i8*
  %25 = add nuw nsw i32 %20, 11
  %26 = and i32 %25, -4
  %27 = sub nsw i32 %26, %21
  %28 = sext i32 %27 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 0, i64 %28, i1 false) #6
  %29 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %31 = bitcast %"class.v8::internal::FactoryBase"* %30 to %"class.v8::internal::CanonicalHandleScope"**
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %6
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %13) #6
  br label %51

36:                                               ; preds = %6
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %41 = bitcast %"class.v8::internal::FactoryBase"* %40 to i64**
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %39, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %36
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #6
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i64* [ %45, %44 ], [ %39, %36 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %38, align 8
  store i64 %13, i64* %47, align 8
  br label %51

51:                                               ; preds = %34, %46
  %52 = phi i64* [ %35, %34 ], [ %47, %46 ]
  ret i64* %52
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE16NewBytecodeArrayEiPKhiiNS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FactoryBase"*, i32, i8*, i32, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = icmp ugt i32 %1, 536870878
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

9:                                                ; preds = %6
  %10 = add nuw nsw i32 %1, 37
  %11 = and i32 %10, -4
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 464
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %16 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %15, i32 %11, i8 zeroext 1, i32 0) #6
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = trunc i64 %14 to i32
  store atomic volatile i32 %19, i32* %18 monotonic, align 4
  %20 = shl i32 %1, 1
  %21 = add i64 %16, 3
  %22 = inttoptr i64 %21 to i32*
  store atomic volatile i32 %20, i32* %22 monotonic, align 4
  %23 = add i64 %16, 19
  %24 = inttoptr i64 %23 to i32*
  store i32 %3, i32* %24, align 4
  %25 = shl i32 %4, 3
  %26 = add i64 %16, 23
  %27 = inttoptr i64 %26 to i32*
  store i32 %25, i32* %27, align 4
  %28 = add i64 %16, 27
  %29 = inttoptr i64 %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = add i64 %16, 31
  %31 = inttoptr i64 %30 to i8*
  store i8 0, i8* %31, align 1
  %32 = add i64 %16, 32
  %33 = inttoptr i64 %32 to i8*
  store atomic volatile i8 0, i8* %33 monotonic, align 1
  %34 = load i64, i64* %5, align 8
  %35 = add i64 %16, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %34 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  %38 = and i64 %34, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %9
  %41 = and i64 %16, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %16, i64 %35, i64 %34) #6
  br label %51

51:                                               ; preds = %47, %40, %9
  %52 = and i64 %34, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = and i64 %16, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %16, i64 %35, i64 %34) #6
  br label %66

66:                                               ; preds = %51, %58, %65
  %67 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 984
  %68 = bitcast %"class.v8::internal::FactoryBase"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %16, 11
  %71 = inttoptr i64 %70 to i32*
  %72 = trunc i64 %69 to i32
  store atomic volatile i32 %72, i32* %71 monotonic, align 4
  %73 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %74 = bitcast %"class.v8::internal::FactoryBase"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %16, 15
  %77 = inttoptr i64 %76 to i32*
  %78 = trunc i64 %75 to i32
  store atomic volatile i32 %78, i32* %77 release, align 4
  %79 = add i64 %16, 33
  %80 = inttoptr i64 %79 to i8*
  %81 = sext i32 %1 to i64
  %82 = icmp eq i32 %1, 0
  br i1 %82, label %149, label %83

83:                                               ; preds = %66
  %84 = icmp ult i32 %1, 8
  br i1 %84, label %85, label %135

85:                                               ; preds = %83
  %86 = add nsw i64 %81, -1
  %87 = and i64 %81, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %85, %89
  %90 = phi i8* [ %95, %89 ], [ %2, %85 ]
  %91 = phi i64 [ %94, %89 ], [ %81, %85 ]
  %92 = phi i8* [ %97, %89 ], [ %80, %85 ]
  %93 = phi i64 [ %98, %89 ], [ %87, %85 ]
  %94 = add i64 %91, -1
  %95 = getelementptr inbounds i8, i8* %90, i64 1
  %96 = load i8, i8* %90, align 1
  %97 = getelementptr inbounds i8, i8* %92, i64 1
  store i8 %96, i8* %92, align 1
  %98 = add i64 %93, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %89, !llvm.loop !4

100:                                              ; preds = %89, %85
  %101 = phi i8* [ %2, %85 ], [ %95, %89 ]
  %102 = phi i64 [ %81, %85 ], [ %94, %89 ]
  %103 = phi i8* [ %80, %85 ], [ %97, %89 ]
  %104 = icmp ult i64 %86, 7
  br i1 %104, label %149, label %105

105:                                              ; preds = %100, %105
  %106 = phi i8* [ %131, %105 ], [ %101, %100 ]
  %107 = phi i64 [ %130, %105 ], [ %102, %100 ]
  %108 = phi i8* [ %133, %105 ], [ %103, %100 ]
  %109 = getelementptr inbounds i8, i8* %106, i64 1
  %110 = load i8, i8* %106, align 1
  %111 = getelementptr inbounds i8, i8* %108, i64 1
  store i8 %110, i8* %108, align 1
  %112 = getelementptr inbounds i8, i8* %106, i64 2
  %113 = load i8, i8* %109, align 1
  %114 = getelementptr inbounds i8, i8* %108, i64 2
  store i8 %113, i8* %111, align 1
  %115 = getelementptr inbounds i8, i8* %106, i64 3
  %116 = load i8, i8* %112, align 1
  %117 = getelementptr inbounds i8, i8* %108, i64 3
  store i8 %116, i8* %114, align 1
  %118 = getelementptr inbounds i8, i8* %106, i64 4
  %119 = load i8, i8* %115, align 1
  %120 = getelementptr inbounds i8, i8* %108, i64 4
  store i8 %119, i8* %117, align 1
  %121 = getelementptr inbounds i8, i8* %106, i64 5
  %122 = load i8, i8* %118, align 1
  %123 = getelementptr inbounds i8, i8* %108, i64 5
  store i8 %122, i8* %120, align 1
  %124 = getelementptr inbounds i8, i8* %106, i64 6
  %125 = load i8, i8* %121, align 1
  %126 = getelementptr inbounds i8, i8* %108, i64 6
  store i8 %125, i8* %123, align 1
  %127 = getelementptr inbounds i8, i8* %106, i64 7
  %128 = load i8, i8* %124, align 1
  %129 = getelementptr inbounds i8, i8* %108, i64 7
  store i8 %128, i8* %126, align 1
  %130 = add i64 %107, -8
  %131 = getelementptr inbounds i8, i8* %106, i64 8
  %132 = load i8, i8* %127, align 1
  %133 = getelementptr inbounds i8, i8* %108, i64 8
  store i8 %132, i8* %129, align 1
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %149, label %105, !llvm.loop !6

135:                                              ; preds = %83
  switch i64 %81, label %148 [
    i64 16, label %147
    i64 15, label %146
    i64 14, label %145
    i64 13, label %144
    i64 12, label %143
    i64 11, label %142
    i64 10, label %141
    i64 8, label %136
    i64 9, label %140
  ]

136:                                              ; preds = %135
  %137 = bitcast i8* %2 to i64*
  %138 = inttoptr i64 %79 to i64*
  %139 = load i64, i64* %137, align 1
  store i64 %139, i64* %138, align 1
  br label %149

140:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 9, i1 false) #6
  br label %149

141:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 10, i1 false) #6
  br label %149

142:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 11, i1 false) #6
  br label %149

143:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 12, i1 false) #6
  br label %149

144:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 13, i1 false) #6
  br label %149

145:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 14, i1 false) #6
  br label %149

146:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 15, i1 false) #6
  br label %149

147:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 16, i1 false) #6
  br label %149

148:                                              ; preds = %135
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %2, i64 %81, i1 false) #6
  br label %149

149:                                              ; preds = %100, %105, %66, %136, %140, %141, %142, %143, %144, %145, %146, %147, %148
  %150 = load i32, i32* %22, align 4
  %151 = ashr i32 %150, 1
  %152 = add nsw i32 %151, 34
  %153 = sext i32 %152 to i64
  %154 = add i64 %17, %153
  %155 = inttoptr i64 %154 to i8*
  %156 = add nsw i32 %151, 37
  %157 = and i32 %156, -4
  %158 = sub nsw i32 %157, %152
  %159 = sext i32 %158 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %155, i8 0, i64 %159, i1 false) #6
  %160 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %161 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %162 = bitcast %"class.v8::internal::FactoryBase"* %161 to %"class.v8::internal::CanonicalHandleScope"**
  %163 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %162, align 8
  %164 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %149
  %166 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %163, i64 %16) #6
  br label %182

167:                                              ; preds = %149
  %168 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %169 = bitcast %"class.v8::internal::FactoryBase"* %168 to i64**
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %172 = bitcast %"class.v8::internal::FactoryBase"* %171 to i64**
  %173 = load i64*, i64** %172, align 8
  %174 = icmp eq i64* %170, %173
  br i1 %174, label %175, label %177

175:                                              ; preds = %167
  %176 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %160) #6
  br label %177

177:                                              ; preds = %175, %167
  %178 = phi i64* [ %176, %175 ], [ %170, %167 ]
  %179 = ptrtoint i64* %178 to i64
  %180 = add i64 %179, 8
  %181 = inttoptr i64 %180 to i64*
  store i64* %181, i64** %169, align 8
  store i64 %16, i64* %178, align 8
  br label %182

182:                                              ; preds = %165, %177
  %183 = phi i64* [ %166, %165 ], [ %178, %177 ]
  ret i64* %183
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewObjectBoilerplateDescriptionEiiib(%"class.v8::internal::FactoryBase"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = sub nsw i32 %2, %3
  %7 = zext i1 %4 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ne i32 %8, %1
  %10 = shl nsw i32 %1, 1
  %11 = or i32 %10, 1
  %12 = zext i1 %9 to i32
  %13 = add nsw i32 %11, %12
  %14 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 456
  %15 = bitcast %"class.v8::internal::FactoryBase"* %14 to i64*
  %16 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %17 = bitcast %"class.v8::internal::FactoryBase"* %16 to i64*
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %15, i32 %13, i64* %17, i8 zeroext 1) #6
  br i1 %9, label %19, label %37

19:                                               ; preds = %5
  %20 = load i64, i64* %18, align 8
  %21 = sext i32 %8 to i64
  %22 = add nsw i64 %21, 1073741824
  %23 = icmp ult i64 %22, 2147483648
  br i1 %23, label %25, label %24, !prof !8

24:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

25:                                               ; preds = %19
  %26 = add i64 %20, 3
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 1
  %30 = shl i32 %8, 1
  %31 = shl i32 %29, 2
  %32 = add i32 %31, -4
  %33 = sext i32 %32 to i64
  %34 = add i64 %20, 7
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i32*
  store atomic volatile i32 %30, i32* %36 monotonic, align 4
  br label %37

37:                                               ; preds = %25, %5
  %38 = load i64, i64* %18, align 8
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  store atomic volatile i32 0, i32* %40 monotonic, align 4
  ret i64* %18
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE30NewArrayBoilerplateDescriptionENS0_12ElementsKindENS0_6HandleINS0_14FixedArrayBaseEEE(%"class.v8::internal::FactoryBase"*, i8 zeroext, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 91) #6
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %8, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %14 to i32
  %18 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %17, i64 2, i32* %16) #6, !srcloc !3
  %19 = zext i8 %1 to i32
  %20 = shl nuw nsw i32 %19, 1
  store atomic volatile i32 %20, i32* %16 monotonic, align 4
  %21 = load i64, i64* %2, align 8
  %22 = add i64 %8, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = trunc i64 %21 to i32
  store atomic volatile i32 %24, i32* %23 monotonic, align 4
  %25 = and i64 %21, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %3
  %28 = and i64 %8, -262144
  %29 = or i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 262144
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = or i64 %28, 16
  %36 = inttoptr i64 %35 to %"class.v8::internal::Heap"**
  %37 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %36, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %37, i64 %8, i64 %22, i64 %21) #6
  br label %38

38:                                               ; preds = %34, %27, %3
  %39 = and i64 %21, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %38
  %46 = and i64 %8, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %22, i64 %21) #6
  br label %53

53:                                               ; preds = %38, %45, %52
  %54 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %55 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %56 = bitcast %"class.v8::internal::FactoryBase"* %55 to %"class.v8::internal::CanonicalHandleScope"**
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %8) #6
  br label %76

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %63 = bitcast %"class.v8::internal::FactoryBase"* %62 to i64**
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %66 = bitcast %"class.v8::internal::FactoryBase"* %65 to i64**
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %64, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %61
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %54) #6
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i64* [ %70, %69 ], [ %64, %61 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %63, align 8
  store i64 %8, i64* %72, align 8
  br label %76

76:                                               ; preds = %59, %71
  %77 = phi i64* [ %60, %59 ], [ %72, %71 ]
  ret i64* %77
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %6 = bitcast %"class.v8::internal::FactoryBase"* %5 to i64*
  %7 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %6, i16 zeroext 111) #6
  %8 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %9 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %8, i32 16, i8 zeroext 1, i32 0) #6
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %7 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  %13 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %14 = bitcast %"class.v8::internal::FactoryBase"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %9, 3
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %15 to i32
  %19 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %18, i64 3, i32* %17) #6, !srcloc !3
  %20 = load i64, i64* %1, align 8
  %21 = trunc i64 %20 to i32
  store atomic volatile i32 %21, i32* %17 monotonic, align 4
  %22 = and i64 %20, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %4
  %25 = and i64 %9, -262144
  %26 = or i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 262144
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %24
  %32 = or i64 %25, 16
  %33 = inttoptr i64 %32 to %"class.v8::internal::Heap"**
  %34 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %33, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %34, i64 %9, i64 %16, i64 %20) #6
  br label %35

35:                                               ; preds = %31, %24, %4
  %36 = and i64 %20, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %35
  %43 = and i64 %9, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 24
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %42
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %9, i64 %16, i64 %20) #6
  br label %50

50:                                               ; preds = %35, %42, %49
  %51 = load i64, i64* %2, align 8
  %52 = add i64 %9, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = trunc i64 %51 to i32
  store atomic volatile i32 %54, i32* %53 monotonic, align 4
  %55 = and i64 %51, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %50
  %58 = and i64 %9, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 262144
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = or i64 %58, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::Heap"**
  %67 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %66, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %67, i64 %9, i64 %52, i64 %51) #6
  br label %68

68:                                               ; preds = %64, %57, %50
  %69 = and i64 %51, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %68
  %76 = and i64 %9, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %9, i64 %52, i64 %51) #6
  br label %83

83:                                               ; preds = %68, %75, %82
  %84 = trunc i64 %3 to i32
  %85 = and i32 %84, -2
  %86 = add i64 %9, 11
  %87 = inttoptr i64 %86 to i32*
  store atomic volatile i32 %85, i32* %87 monotonic, align 4
  %88 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %89 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %90 = bitcast %"class.v8::internal::FactoryBase"* %89 to %"class.v8::internal::CanonicalHandleScope"**
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %83
  %94 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %9) #6
  br label %110

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %97 = bitcast %"class.v8::internal::FactoryBase"* %96 to i64**
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %100 = bitcast %"class.v8::internal::FactoryBase"* %99 to i64**
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %98, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %95
  %104 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %88) #6
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i64* [ %104, %103 ], [ %98, %95 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %97, align 8
  store i64 %9, i64* %106, align 8
  br label %110

110:                                              ; preds = %93, %105
  %111 = phi i64* [ %94, %93 ], [ %106, %105 ]
  ret i64* %111
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTemplateObjectDescriptionENS0_6HandleINS0_10FixedArrayEEES6_(%"class.v8::internal::FactoryBase"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 115) #6
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %8, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %14 to i32
  %18 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %17, i64 2, i32* %16) #6, !srcloc !3
  %19 = load i64, i64* %1, align 8
  %20 = trunc i64 %19 to i32
  store atomic volatile i32 %20, i32* %16 monotonic, align 4
  %21 = and i64 %19, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %3
  %24 = and i64 %8, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 262144
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = or i64 %24, 16
  %32 = inttoptr i64 %31 to %"class.v8::internal::Heap"**
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %32, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %33, i64 %8, i64 %15, i64 %19) #6
  br label %34

34:                                               ; preds = %30, %23, %3
  %35 = and i64 %19, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %34
  %42 = and i64 %8, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %15, i64 %19) #6
  br label %49

49:                                               ; preds = %34, %41, %48
  %50 = load i64, i64* %2, align 8
  %51 = add i64 %8, 7
  %52 = inttoptr i64 %51 to i32*
  %53 = trunc i64 %50 to i32
  store atomic volatile i32 %53, i32* %52 monotonic, align 4
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  %57 = and i64 %8, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 262144
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = or i64 %57, 16
  %65 = inttoptr i64 %64 to %"class.v8::internal::Heap"**
  %66 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %65, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %66, i64 %8, i64 %51, i64 %50) #6
  br label %67

67:                                               ; preds = %63, %56, %49
  %68 = and i64 %50, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = and i64 %8, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %51, i64 %50) #6
  br label %82

82:                                               ; preds = %67, %74, %81
  %83 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %84 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %85 = bitcast %"class.v8::internal::FactoryBase"* %84 to %"class.v8::internal::CanonicalHandleScope"**
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %85, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %8) #6
  br label %105

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %92 = bitcast %"class.v8::internal::FactoryBase"* %91 to i64**
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %95 = bitcast %"class.v8::internal::FactoryBase"* %94 to i64**
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %93, %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %90
  %99 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %83) #6
  br label %100

100:                                              ; preds = %98, %90
  %101 = phi i64* [ %99, %98 ], [ %93, %90 ]
  %102 = ptrtoint i64* %101 to i64
  %103 = add i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  store i64* %104, i64** %92, align 8
  store i64 %8, i64* %101, align 8
  br label %105

105:                                              ; preds = %88, %100
  %106 = phi i64* [ %89, %88 ], [ %101, %100 ]
  ret i64* %106
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %4 = tail call i32 @_ZN2v88internal7Isolate15GetNextScriptIdEv(%"class.v8::internal::Isolate"* %3) #6
  %5 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase"* %0, i64* %1, i32 %4)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 112) #6
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %7, i32 64, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %8, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %14 to i32
  %18 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %17, i64 15, i32* %16) #6, !srcloc !3
  %19 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %21 = bitcast %"class.v8::internal::FactoryBase"* %20 to %"class.v8::internal::CanonicalHandleScope"**
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %3
  %25 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %8) #6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 3
  %28 = inttoptr i64 %27 to i32*
  br label %44

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %31 = bitcast %"class.v8::internal::FactoryBase"* %30 to i64**
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %34 = bitcast %"class.v8::internal::FactoryBase"* %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %32, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %19) #6
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i64* [ %38, %37 ], [ %32, %29 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %31, align 8
  store i64 %8, i64* %40, align 8
  br label %44

44:                                               ; preds = %24, %39
  %45 = phi i32* [ %28, %24 ], [ %16, %39 ]
  %46 = phi i64 [ %27, %24 ], [ %15, %39 ]
  %47 = phi i64 [ %26, %24 ], [ %8, %39 ]
  %48 = phi i64* [ %25, %24 ], [ %40, %39 ]
  %49 = load i64, i64* %1, align 8
  %50 = trunc i64 %49 to i32
  store atomic volatile i32 %50, i32* %45 monotonic, align 4
  %51 = and i64 %49, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %44
  %54 = and i64 %47, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %47, i64 %46, i64 %49) #6
  br label %64

64:                                               ; preds = %60, %53, %44
  %65 = and i64 %49, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %64
  %72 = and i64 %47, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %47, i64 %46, i64 %49) #6
  br label %79

79:                                               ; preds = %64, %71, %78
  %80 = load i64, i64* %13, align 8
  %81 = add i64 %47, 7
  %82 = inttoptr i64 %81 to i32*
  %83 = trunc i64 %80 to i32
  store atomic volatile i32 %83, i32* %82 monotonic, align 4
  %84 = shl i32 %2, 1
  %85 = add i64 %47, 31
  %86 = inttoptr i64 %85 to i32*
  store atomic volatile i32 %84, i32* %86 monotonic, align 4
  %87 = add i64 %47, 11
  %88 = inttoptr i64 %87 to i32*
  store atomic volatile i32 0, i32* %88 monotonic, align 4
  %89 = add i64 %47, 15
  %90 = inttoptr i64 %89 to i32*
  store atomic volatile i32 0, i32* %90 monotonic, align 4
  %91 = load i64, i64* %13, align 8
  %92 = add i64 %47, 19
  %93 = inttoptr i64 %92 to i32*
  %94 = trunc i64 %91 to i32
  store atomic volatile i32 %94, i32* %93 monotonic, align 4
  %95 = add i64 %47, 23
  %96 = inttoptr i64 %95 to i32*
  store atomic volatile i32 4, i32* %96 monotonic, align 4
  %97 = load i64, i64* %13, align 8
  %98 = add i64 %47, 27
  %99 = inttoptr i64 %98 to i32*
  %100 = trunc i64 %97 to i32
  store atomic volatile i32 %100, i32* %99 monotonic, align 4
  %101 = load i64, i64* %13, align 8
  %102 = add i64 %47, 35
  %103 = inttoptr i64 %102 to i32*
  %104 = trunc i64 %101 to i32
  store atomic volatile i32 %104, i32* %103 monotonic, align 4
  %105 = add i64 %47, 39
  %106 = inttoptr i64 %105 to i32*
  store atomic volatile i32 0, i32* %106 monotonic, align 4
  %107 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1080
  %108 = bitcast %"class.v8::internal::FactoryBase"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %47, 43
  %111 = inttoptr i64 %110 to i32*
  %112 = trunc i64 %109 to i32
  store atomic volatile i32 %112, i32* %111 monotonic, align 4
  %113 = add i64 %47, 47
  %114 = inttoptr i64 %113 to i32*
  store atomic volatile i32 0, i32* %114 monotonic, align 4
  %115 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 360
  %116 = bitcast %"class.v8::internal::FactoryBase"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %47, 59
  %119 = inttoptr i64 %118 to i32*
  %120 = trunc i64 %117 to i32
  store atomic volatile i32 %120, i32* %119 monotonic, align 4
  %121 = icmp eq i32 %2, -2
  br i1 %121, label %123, label %122

122:                                              ; preds = %79
  tail call void @_ZN2v88internal7Factory15AddToScriptListENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Factory"* %7, i64* %48) #6
  br label %123

123:                                              ; preds = %79, %122
  %124 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45512
  %128 = bitcast %"class.v8::internal::FactoryBase"* %127 to %"class.v8::internal::Logger"**
  %129 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %128, align 8
  tail call void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"* %129, i32 1, i32 %2) #6
  br label %130

130:                                              ; preds = %123, %126
  ret i64* %48
}

declare i32 @_ZN2v88internal7Isolate15GetNextScriptIdEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal7Factory15AddToScriptListENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE31NewSharedFunctionInfoForLiteralEPNS0_15FunctionLiteralENS0_6HandleINS0_6ScriptEEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::FunctionLiteral"*, i64*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %6 = tail call zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"* %1) #6
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 7
  %9 = load %"class.v8::internal::AstConsString"*, %"class.v8::internal::AstConsString"** %8, align 8
  %10 = icmp eq %"class.v8::internal::AstConsString"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = tail call i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"* nonnull %9, %"class.v8::internal::Isolate"* %7) #6
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i64* [ %12, %11 ], [ null, %4 ]
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE(%"class.v8::internal::FactoryBase"* %0, i64* %14, i64* null, i32 85, i8 zeroext %6)
  tail call void @_ZN2v88internal18SharedFunctionInfo23InitFromFunctionLiteralINS0_7IsolateEEEvPT_NS0_6HandleIS1_EEPNS0_15FunctionLiteralEb(%"class.v8::internal::Isolate"* %7, i64* %15, %"class.v8::internal::FunctionLiteral"* %1, i1 zeroext %3) #6
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = load i64, i64* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %21 = bitcast %"class.v8::internal::FactoryBase"* %20 to i64*
  %22 = load i64, i64* %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  call void @_ZN2v88internal18SharedFunctionInfo9SetScriptENS0_13ReadOnlyRootsENS0_10HeapObjectEib(%"class.v8::internal::SharedFunctionInfo"* nonnull %19, i64* %21, i64 %22, i32 %24, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  ret i64* %15
}

declare zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::ScopeInfo", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %9 = bitcast %"class.v8::internal::FactoryBase"* %8 to i64*
  %10 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 280
  %11 = bitcast %"class.v8::internal::FactoryBase"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %14 = add i64 %12, 3
  %15 = inttoptr i64 %14 to i8*
  %16 = load atomic i8, i8* %15 monotonic, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 2
  %19 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %20 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %19, i32 %18, i8 zeroext 1, i32 0) #6
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %12 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %24, align 8
  call void @_ZN2v88internal18SharedFunctionInfo4InitENS0_13ReadOnlyRootsEi(%"class.v8::internal::SharedFunctionInfo"* nonnull %7, i64* %9, i32 -1) #6
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %28 = bitcast %"class.v8::internal::FactoryBase"* %27 to %"class.v8::internal::CanonicalHandleScope"**
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %5
  %32 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %25) #6
  br label %48

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #6
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %36, %33 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %35, align 8
  store i64 %25, i64* %44, align 8
  br label %48

48:                                               ; preds = %31, %43
  %49 = phi i64* [ %32, %31 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64* %1, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %48
  %53 = load i64, i64* %1, align 8
  %54 = add i64 %50, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = trunc i64 %53 to i32
  store atomic volatile i32 %56, i32* %55 release, align 4
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %82, label %59

59:                                               ; preds = %52
  %60 = and i64 %50, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 262144
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %59
  %67 = or i64 %60, 16
  %68 = inttoptr i64 %67 to %"class.v8::internal::Heap"**
  %69 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %68, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %69, i64 %50, i64 %54, i64 %53) #6
  br label %70

70:                                               ; preds = %66, %59
  %71 = and i64 %53, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = load i64, i64* %62, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %50, i64 %54, i64 %53) #6
  br label %82

82:                                               ; preds = %81, %77, %70, %52, %48
  %83 = icmp eq i64* %2, null
  br i1 %83, label %114, label %84

84:                                               ; preds = %82
  %85 = load i64, i64* %2, align 8
  %86 = add i64 %50, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %85 to i32
  store atomic volatile i32 %88, i32* %87 release, align 4
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %123, label %91

91:                                               ; preds = %84
  %92 = and i64 %50, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %50, i64 %86, i64 %85) #6
  br label %102

102:                                              ; preds = %98, %91
  %103 = and i64 %85, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %123, label %109

109:                                              ; preds = %102
  %110 = load i64, i64* %94, align 8
  %111 = and i64 %110, 24
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %123

113:                                              ; preds = %109
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %50, i64 %86, i64 %85) #6
  br label %123

114:                                              ; preds = %82
  %115 = icmp ult i32 %3, 1711
  br i1 %115, label %119, label %116

116:                                              ; preds = %114
  %117 = add i64 %50, 3
  %118 = inttoptr i64 %117 to i32*
  br label %123

119:                                              ; preds = %114
  %120 = shl i32 %3, 1
  %121 = add i64 %50, 3
  %122 = inttoptr i64 %121 to i32*
  store atomic volatile i32 %120, i32* %122 release, align 4
  br label %123

123:                                              ; preds = %116, %113, %109, %102, %84, %119
  %124 = phi i32* [ %118, %116 ], [ %87, %113 ], [ %87, %109 ], [ %87, %102 ], [ %87, %84 ], [ %122, %119 ]
  %125 = load atomic i32, i32* %124 acquire, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %123
  %129 = load atomic i32, i32* %124 acquire, align 4
  %130 = ashr i32 %129, 1
  switch i32 %130, label %131 [
    i32 159, label %151
    i32 85, label %151
  ]

131:                                              ; preds = %128
  br label %151

132:                                              ; preds = %123
  %133 = and i64 %50, -4294967296
  %134 = load atomic i32, i32* %124 acquire, align 4
  %135 = zext i32 %134 to i64
  %136 = and i64 %135, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %151, label %138

138:                                              ; preds = %132
  %139 = or i64 %133, %135
  %140 = add i64 %139, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %133, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = icmp eq i16 %147, 83
  %149 = zext i1 %148 to i32
  %150 = shl nuw nsw i32 %149, 24
  br label %151

151:                                              ; preds = %128, %128, %131, %132, %138
  %152 = phi i32 [ 16777216, %131 ], [ 0, %128 ], [ 0, %128 ], [ 0, %132 ], [ %150, %138 ]
  %153 = add i64 %50, 27
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, -16777217
  %157 = or i32 %156, %152
  store atomic volatile i32 %157, i32* %154 monotonic, align 4
  %158 = load atomic i32, i32* %154 monotonic, align 4
  %159 = and i32 %158, -1056
  %160 = zext i8 %4 to i32
  %161 = add i8 %4, -3
  %162 = icmp ult i8 %161, 4
  %163 = zext i1 %162 to i32
  %164 = shl nuw nsw i32 %163, 10
  %165 = or i32 %164, %160
  %166 = or i32 %165, %159
  store atomic volatile i32 %166, i32* %154 monotonic, align 4
  %167 = load atomic i32, i32* %154 monotonic, align 4
  %168 = and i32 %167, 64
  %169 = icmp eq i32 %168, 0
  %170 = load atomic i32, i32* %154 monotonic, align 4
  %171 = trunc i32 %170 to i8
  %172 = and i8 %171, 31
  %173 = and i64 %50, -4294967296
  %174 = add i64 %50, 7
  %175 = inttoptr i64 %174 to i32*
  %176 = load atomic i32, i32* %175 acquire, align 4
  %177 = zext i32 %176 to i64
  %178 = or i64 %173, %177
  %179 = and i64 %177, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %195, label %181

181:                                              ; preds = %151
  %182 = add i64 %178, -1
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = zext i32 %184 to i64
  %186 = or i64 %173, %185
  %187 = add i64 %186, 7
  %188 = inttoptr i64 %187 to i16*
  %189 = load atomic i16, i16* %188 monotonic, align 2
  %190 = icmp eq i16 %189, 178
  br i1 %190, label %191, label %195

191:                                              ; preds = %181
  %192 = bitcast %"class.v8::internal::ScopeInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #6
  %193 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %193, align 8
  %194 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #6
  br label %197

195:                                              ; preds = %181, %151
  %196 = icmp ne i32 %176, 0
  br label %197

197:                                              ; preds = %195, %191
  %198 = phi i1 [ %194, %191 ], [ %196, %195 ]
  %199 = add nsw i8 %172, -3
  %200 = icmp ult i8 %199, 4
  br i1 %200, label %229, label %201

201:                                              ; preds = %197
  %202 = add nsw i8 %172, -16
  %203 = icmp ult i8 %202, 6
  br i1 %203, label %204, label %208

204:                                              ; preds = %201
  %205 = add nsw i8 %172, -12
  %206 = icmp ult i8 %205, 7
  %207 = select i1 %206, i32 198, i32 196
  br label %222

208:                                              ; preds = %201
  %209 = add nsw i8 %172, -2
  %210 = icmp ult i8 %209, 24
  br i1 %210, label %213, label %211

211:                                              ; preds = %213, %208
  %212 = select i1 %169, i32 185, i32 189
  br label %222

213:                                              ; preds = %208
  %214 = zext i8 %209 to i32
  %215 = lshr i32 15744993, %214
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %211, label %218

218:                                              ; preds = %213
  %219 = sext i8 %209 to i64
  %220 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  br label %222

222:                                              ; preds = %218, %211, %204
  %223 = phi i32 [ %207, %204 ], [ %212, %211 ], [ %221, %218 ]
  %224 = xor i1 %198, true
  %225 = zext i1 %224 to i32
  %226 = add nuw nsw i32 %223, %225
  %227 = shl nuw nsw i32 %226, 14
  %228 = add nsw i32 %227, -3031040
  br label %229

229:                                              ; preds = %197, %222
  %230 = phi i32 [ %228, %222 ], [ 245760, %197 ]
  %231 = load atomic i32, i32* %154 monotonic, align 4
  %232 = and i32 %231, -507905
  %233 = or i32 %232, %230
  store atomic volatile i32 %233, i32* %154 monotonic, align 4
  ret i64* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal18SharedFunctionInfo23InitFromFunctionLiteralINS0_7IsolateEEEvPT_NS0_6HandleIS1_EEPNS0_15FunctionLiteralEb(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::FunctionLiteral"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo9SetScriptENS0_13ReadOnlyRootsENS0_10HeapObjectEib(%"class.v8::internal::SharedFunctionInfo"*, i64*, i64, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = add i32 %1, 15
  %5 = and i32 %4, -4
  %6 = shl i32 %2, 2
  %7 = add nsw i32 %5, %6
  %8 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 584
  %9 = bitcast %"class.v8::internal::FactoryBase"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %12 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %11, i32 %7, i8 zeroext 1, i32 0) #6
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %10 to i32
  store atomic volatile i32 %15, i32* %14 monotonic, align 4
  %16 = add i64 %12, 3
  %17 = inttoptr i64 %16 to i32*
  store i32 %1, i32* %17, align 4
  %18 = add i64 %12, 7
  %19 = inttoptr i64 %18 to i32*
  store i32 %2, i32* %19, align 4
  %20 = load i32, i32* %17, align 4
  %21 = add i32 %20, 15
  %22 = and i32 %21, -4
  %23 = sext i32 %22 to i64
  %24 = add i64 %13, %23
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 176
  %26 = bitcast %"class.v8::internal::FactoryBase"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sext i32 %2 to i64
  %29 = inttoptr i64 %24 to i32*
  %30 = trunc i64 %27 to i32
  %31 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %30, i64 %28, i32* %29) #6, !srcloc !3
  %32 = load i32, i32* %17, align 4
  %33 = add i32 %32, 15
  %34 = and i32 %33, -4
  %35 = sub i32 -12, %32
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %3
  %39 = sext i32 %32 to i64
  %40 = add i64 %12, 11
  %41 = add i64 %40, %39
  %42 = inttoptr i64 %41 to i8*
  %43 = sext i32 %36 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 %43, i1 false) #6
  br label %44

44:                                               ; preds = %3, %38
  %45 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %46 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %47 = bitcast %"class.v8::internal::FactoryBase"* %46 to %"class.v8::internal::CanonicalHandleScope"**
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %12) #6
  br label %67

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %54 = bitcast %"class.v8::internal::FactoryBase"* %53 to i64**
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %57 = bitcast %"class.v8::internal::FactoryBase"* %56 to i64**
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %55, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %52
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %45) #6
  br label %62

62:                                               ; preds = %60, %52
  %63 = phi i64* [ %61, %60 ], [ %55, %52 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %54, align 8
  store i64 %12, i64* %63, align 8
  br label %67

67:                                               ; preds = %50, %62
  %68 = phi i64* [ %51, %50 ], [ %63, %62 ]
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::FactoryBase"*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::TorqueGeneratedFactory"*
  %6 = tail call i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_7FactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEiiNS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory"* %5, i64* %1, i32 %2, i32 %3, i8 zeroext 1) #6
  ret i64* %6
}

declare i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_7FactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEiiNS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory"*, i64*, i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEE(%"class.v8::internal::FactoryBase"*, i64*, i32, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::TorqueGeneratedFactory"*
  %7 = tail call i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_7FactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEENS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory"* %6, i64* %1, i32 %2, i32 %3, i64* %4, i8 zeroext 1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_7FactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEENS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory"*, i64*, i32, i32, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %4
  %7 = add nsw i32 %1, -1
  %8 = sdiv i32 %7, 6
  %9 = shl nsw i32 %8, 2
  %10 = add i32 %9, 19
  %11 = and i32 %10, -4
  br label %12

12:                                               ; preds = %4, %6
  %13 = phi i32 [ %11, %6 ], [ 12, %4 ]
  %14 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 432
  %15 = bitcast %"class.v8::internal::FactoryBase"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %17, i32 %13, i8 zeroext %3, i32 0) #6
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = trunc i64 %16 to i32
  store atomic volatile i32 %21, i32* %20 monotonic, align 4
  %22 = add i64 %18, 3
  %23 = inttoptr i64 %22 to i32*
  store i32 %1, i32* %23, align 4
  %24 = add i64 %18, 7
  %25 = inttoptr i64 %24 to i32*
  store i32 %2, i32* %25, align 4
  %26 = add nsw i32 %13, -12
  %27 = add i64 %18, 11
  %28 = inttoptr i64 %27 to i8*
  %29 = sext i32 %26 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 %29, i1 false)
  %30 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %32 = bitcast %"class.v8::internal::FactoryBase"* %31 to %"class.v8::internal::CanonicalHandleScope"**
  %33 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %12
  %36 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %33, i64 %18) #6
  br label %52

37:                                               ; preds = %12
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %39 = bitcast %"class.v8::internal::FactoryBase"* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %42 = bitcast %"class.v8::internal::FactoryBase"* %41 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %40, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %30) #6
  br label %47

47:                                               ; preds = %45, %37
  %48 = phi i64* [ %46, %45 ], [ %40, %37 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %39, align 8
  store i64 %18, i64* %48, align 8
  br label %52

52:                                               ; preds = %35, %47
  %53 = phi i64* [ %36, %35 ], [ %48, %47 ]
  ret i64* %53
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewCoverageInfoERKNS0_10ZoneVectorINS0_11SourceRangeEEE(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::ZoneVector"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::CoverageInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::SourceRange"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = or i32 %13, 8
  %15 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 480
  %16 = bitcast %"class.v8::internal::FactoryBase"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::CoverageInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %20 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %19, i32 %14, i8 zeroext 1, i32 0) #6
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %17 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = getelementptr inbounds %"class.v8::internal::CoverageInfo", %"class.v8::internal::CoverageInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %24, align 8
  %25 = add i64 %20, 3
  %26 = inttoptr i64 %25 to i32*
  store i32 %11, i32* %26, align 4
  %27 = icmp sgt i32 %11, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = and i64 %10, 4294967295
  br label %57

31:                                               ; preds = %57, %2
  %32 = load i64, i64* %24, align 8
  %33 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to %"class.v8::internal::CanonicalHandleScope"**
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %32) #6
  br label %55

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %42 = bitcast %"class.v8::internal::FactoryBase"* %41 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %45 = bitcast %"class.v8::internal::FactoryBase"* %44 to i64**
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %43, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %33) #6
  br label %50

50:                                               ; preds = %48, %40
  %51 = phi i64* [ %49, %48 ], [ %43, %40 ]
  %52 = ptrtoint i64* %51 to i64
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  store i64* %54, i64** %42, align 8
  store i64 %32, i64* %51, align 8
  br label %55

55:                                               ; preds = %38, %50
  %56 = phi i64* [ %39, %38 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  ret i64* %56

57:                                               ; preds = %57, %28
  %58 = phi i64 [ 0, %28 ], [ %65, %57 ]
  %59 = load %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"** %29, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %59, i64 %58, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %59, i64 %58, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = trunc i64 %58 to i32
  call void @_ZN2v88internal12CoverageInfo14InitializeSlotEiii(%"class.v8::internal::CoverageInfo"* nonnull %3, i32 %64, i32 %61, i32 %63) #6
  %65 = add nuw nsw i64 %58, 1
  %66 = icmp eq i64 %65, %30
  br i1 %66, label %31, label %57
}

declare void @_ZN2v88internal12CoverageInfo14InitializeSlotEiii(%"class.v8::internal::CoverageInfo"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %5 = bitcast %"class.v8::internal::SequentialStringKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1200
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %13, i32 %16, i64 %11) #6
  %18 = zext i1 %2 to i8
  %19 = load i64, i64* %14, align 8
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 1
  store i32 %17, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 2
  store i32 %20, i32* %23, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1
  %25 = bitcast %"class.v8::internal::Vector"* %24 to i8*
  %26 = bitcast %"class.v8::internal::Vector"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false) #6
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 2
  store i8 %18, i8* %27, align 8
  %28 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %30 = bitcast %"class.v8::internal::FactoryBase"* %29 to %"class.v8::internal::StringTable"**
  %31 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %30, align 8
  %32 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %31, %"class.v8::internal::Isolate"* %28, %"class.v8::internal::SequentialStringKey"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret i64* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKtEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1134"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey.1132", align 8
  %5 = bitcast %"class.v8::internal::SequentialStringKey.1132"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1200
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %13, i32 %16, i64 %11) #6
  %18 = zext i1 %2 to i8
  %19 = load i64, i64* %14, align 8
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 1
  store i32 %17, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 2
  store i32 %20, i32* %23, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 1
  %25 = bitcast %"class.v8::internal::Vector.1134"* %24 to i8*
  %26 = bitcast %"class.v8::internal::Vector.1134"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false) #6
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 2
  store i8 %18, i8* %27, align 8
  %28 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %30 = bitcast %"class.v8::internal::FactoryBase"* %29 to %"class.v8::internal::StringTable"**
  %31 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %30, align 8
  %32 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %31, %"class.v8::internal::Isolate"* %28, %"class.v8::internal::SequentialStringKey.1132"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret i64* %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14StringTableKeyD2Ev(%"class.v8::internal::StringTableKey"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase"* %0, i32 %6, i32 %2)
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load i64, i64* %4, align 8
  %14 = shl i64 %13, 32
  %15 = ashr exact i64 %14, 32
  switch i64 %15, label %42 [
    i64 1, label %16
    i64 2, label %18
    i64 3, label %22
    i64 4, label %23
    i64 5, label %27
    i64 6, label %28
    i64 7, label %29
    i64 8, label %30
    i64 9, label %34
    i64 10, label %35
    i64 11, label %36
    i64 12, label %37
    i64 13, label %38
    i64 14, label %39
    i64 15, label %40
    i64 16, label %41
  ]

16:                                               ; preds = %3
  %17 = load i8, i8* %12, align 1
  store i8 %17, i8* %10, align 1
  br label %43

18:                                               ; preds = %3
  %19 = bitcast i8* %12 to i16*
  %20 = inttoptr i64 %9 to i16*
  %21 = load i16, i16* %19, align 1
  store i16 %21, i16* %20, align 1
  br label %43

22:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 3, i1 false) #6
  br label %43

23:                                               ; preds = %3
  %24 = bitcast i8* %12 to i32*
  %25 = inttoptr i64 %9 to i32*
  %26 = load i32, i32* %24, align 1
  store i32 %26, i32* %25, align 1
  br label %43

27:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 5, i1 false) #6
  br label %43

28:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 6, i1 false) #6
  br label %43

29:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 7, i1 false) #6
  br label %43

30:                                               ; preds = %3
  %31 = bitcast i8* %12 to i64*
  %32 = inttoptr i64 %9 to i64*
  %33 = load i64, i64* %31, align 1
  store i64 %33, i64* %32, align 1
  br label %43

34:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 9, i1 false) #6
  br label %43

35:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 10, i1 false) #6
  br label %43

36:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 11, i1 false) #6
  br label %43

37:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 12, i1 false) #6
  br label %43

38:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 13, i1 false) #6
  br label %43

39:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 14, i1 false) #6
  br label %43

40:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 15, i1 false) #6
  br label %43

41:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 16, i1 false) #6
  br label %43

42:                                               ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 %15, i1 false) #6
  br label %43

43:                                               ; preds = %42, %41, %40, %39, %38, %37, %36, %35, %34, %30, %29, %28, %27, %23, %22, %18, %16
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 536870889
  br i1 %4, label %6, label %5, !prof !8

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 264
  %8 = bitcast %"class.v8::internal::FactoryBase"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i32 %1, 15
  %11 = and i32 %10, -4
  %12 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %13 = tail call zeroext i1 @_ZN2v88internal7Factory26CanAllocateInReadOnlySpaceEv(%"class.v8::internal::Factory"* %12) #6
  %14 = select i1 %13, i8 4, i8 1
  %15 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %12, i32 %11, i8 zeroext %14, i32 0) #6
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %9 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = add i64 %15, 7
  %20 = inttoptr i64 %19 to i32*
  store i32 %1, i32* %20, align 4
  %21 = add i64 %15, 3
  %22 = inttoptr i64 %21 to i32*
  store i32 %2, i32* %22, align 4
  %23 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %25 = bitcast %"class.v8::internal::FactoryBase"* %24 to %"class.v8::internal::CanonicalHandleScope"**
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %6
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %15) #6
  br label %45

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %32 = bitcast %"class.v8::internal::FactoryBase"* %31 to i64**
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %33, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #6
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i64* [ %39, %38 ], [ %33, %30 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %32, align 8
  store i64 %15, i64* %41, align 8
  br label %45

45:                                               ; preds = %28, %40
  %46 = phi i64* [ %29, %28 ], [ %41, %40 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1134"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %6, 536870889
  br i1 %7, label %9, label %8, !prof !8

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 824
  %11 = bitcast %"class.v8::internal::FactoryBase"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i32 %6, 1
  %14 = add i32 %13, 15
  %15 = and i32 %14, -4
  %16 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %17 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %16, i32 %15, i8 zeroext 1, i32 0) #6
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = trunc i64 %12 to i32
  store atomic volatile i32 %20, i32* %19 monotonic, align 4
  %21 = add i64 %17, 7
  %22 = inttoptr i64 %21 to i32*
  store i32 %6, i32* %22, align 4
  %23 = add i64 %17, 3
  %24 = inttoptr i64 %23 to i32*
  store i32 %2, i32* %24, align 4
  %25 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %27 = bitcast %"class.v8::internal::FactoryBase"* %26 to %"class.v8::internal::CanonicalHandleScope"**
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %9
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %17) #6
  %32 = load i64, i64* %31, align 8
  br label %48

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %25) #6
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %36, %33 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %35, align 8
  store i64 %17, i64* %44, align 8
  br label %48

48:                                               ; preds = %30, %43
  %49 = phi i64 [ %32, %30 ], [ %17, %43 ]
  %50 = phi i64* [ %31, %30 ], [ %44, %43 ]
  %51 = add i64 %49, 11
  %52 = inttoptr i64 %51 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 0
  %54 = load i16*, i16** %53, align 8
  %55 = bitcast i16* %54 to i8*
  %56 = load i64, i64* %4, align 8
  %57 = trunc i64 %56 to i32
  %58 = shl nsw i32 %57, 1
  %59 = sext i32 %58 to i64
  switch i64 %59, label %76 [
    i64 16, label %75
    i64 2, label %60
    i64 12, label %73
    i64 4, label %63
    i64 14, label %74
    i64 6, label %67
    i64 10, label %72
    i64 8, label %68
  ]

60:                                               ; preds = %48
  %61 = inttoptr i64 %51 to i16*
  %62 = load i16, i16* %54, align 1
  store i16 %62, i16* %61, align 1
  br label %77

63:                                               ; preds = %48
  %64 = bitcast i16* %54 to i32*
  %65 = inttoptr i64 %51 to i32*
  %66 = load i32, i32* %64, align 1
  store i32 %66, i32* %65, align 1
  br label %77

67:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 6, i1 false) #6
  br label %77

68:                                               ; preds = %48
  %69 = bitcast i16* %54 to i64*
  %70 = inttoptr i64 %51 to i64*
  %71 = load i64, i64* %69, align 1
  store i64 %71, i64* %70, align 1
  br label %77

72:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 10, i1 false) #6
  br label %77

73:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 12, i1 false) #6
  br label %77

74:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 14, i1 false) #6
  br label %77

75:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 16, i1 false) #6
  br label %77

76:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %55, i64 %59, i1 false) #6
  br label %77

77:                                               ; preds = %76, %75, %74, %73, %72, %68, %67, %63, %60
  ret i64* %50
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE36AllocateRawTwoByteInternalizedStringEij(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 536870889
  br i1 %4, label %6, label %5, !prof !8

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 824
  %8 = bitcast %"class.v8::internal::FactoryBase"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = shl i32 %1, 1
  %11 = add i32 %10, 15
  %12 = and i32 %11, -4
  %13 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %14 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %13, i32 %12, i8 zeroext 1, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %9 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = add i64 %14, 7
  %19 = inttoptr i64 %18 to i32*
  store i32 %1, i32* %19, align 4
  %20 = add i64 %14, 3
  %21 = inttoptr i64 %20 to i32*
  store i32 %2, i32* %21, align 4
  %22 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %24 = bitcast %"class.v8::internal::FactoryBase"* %23 to %"class.v8::internal::CanonicalHandleScope"**
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %6
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %14) #6
  br label %44

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %31 = bitcast %"class.v8::internal::FactoryBase"* %30 to i64**
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %34 = bitcast %"class.v8::internal::FactoryBase"* %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %32, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %22) #6
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i64* [ %38, %37 ], [ %32, %29 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %31, align 8
  store i64 %14, i64* %40, align 8
  br label %44

44:                                               ; preds = %27, %39
  %45 = phi i64* [ %28, %27 ], [ %40, %39 ]
  ret i64* %45
}

declare zeroext i1 @_ZN2v88internal7Factory26CanAllocateInReadOnlySpaceEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870888
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"* %7) #6
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %6, i64 %9, %"class.v8::internal::MessageLocation"* null) #6
  br label %48

11:                                               ; preds = %3
  %12 = add nuw nsw i32 %1, 15
  %13 = and i32 %12, -4
  %14 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 256
  %15 = bitcast %"class.v8::internal::FactoryBase"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %17, i32 %13, i8 zeroext %2, i32 0) #6
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = trunc i64 %16 to i32
  store atomic volatile i32 %21, i32* %20 monotonic, align 4
  %22 = add i64 %18, 7
  %23 = inttoptr i64 %22 to i32*
  store i32 %1, i32* %23, align 4
  %24 = add i64 %18, 3
  %25 = inttoptr i64 %24 to i32*
  store i32 3, i32* %25, align 4
  %26 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %28 = bitcast %"class.v8::internal::FactoryBase"* %27 to %"class.v8::internal::CanonicalHandleScope"**
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %11
  %32 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %18) #6
  br label %48

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #6
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %36, %33 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %35, align 8
  store i64 %18, i64* %44, align 8
  br label %48

48:                                               ; preds = %43, %31, %5
  %49 = phi i64* [ null, %5 ], [ %32, %31 ], [ %44, %43 ]
  ret i64* %49
}

declare i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870888
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"* %7) #6
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %6, i64 %9, %"class.v8::internal::MessageLocation"* null) #6
  br label %49

11:                                               ; preds = %3
  %12 = shl i32 %1, 1
  %13 = add nuw nsw i32 %12, 15
  %14 = and i32 %13, -4
  %15 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 752
  %16 = bitcast %"class.v8::internal::FactoryBase"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %19 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %18, i32 %14, i8 zeroext %2, i32 0) #6
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %17 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = add i64 %19, 7
  %24 = inttoptr i64 %23 to i32*
  store i32 %1, i32* %24, align 4
  %25 = add i64 %19, 3
  %26 = inttoptr i64 %25 to i32*
  store i32 3, i32* %26, align 4
  %27 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %29 = bitcast %"class.v8::internal::FactoryBase"* %28 to %"class.v8::internal::CanonicalHandleScope"**
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %11
  %33 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %19) #6
  br label %49

34:                                               ; preds = %11
  %35 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %36 = bitcast %"class.v8::internal::FactoryBase"* %35 to i64**
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %39 = bitcast %"class.v8::internal::FactoryBase"* %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %37, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %27) #6
  br label %44

44:                                               ; preds = %42, %34
  %45 = phi i64* [ %43, %42 ], [ %37, %34 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %36, align 8
  store i64 %19, i64* %45, align 8
  br label %49

49:                                               ; preds = %44, %32, %5
  %50 = phi i64* [ null, %5 ], [ %33, %32 ], [ %45, %44 ]
  ret i64* %50
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::StringShape", align 4
  %8 = alloca %"class.v8::internal::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::StringShape", align 4
  %11 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %12 = load i64, i64* %1, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp ult i16 %21, 64
  br i1 %22, label %23, label %60

23:                                               ; preds = %4
  %24 = load atomic i32, i32* %15 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %13, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = and i16 %29, 7
  %31 = icmp eq i16 %30, 5
  br i1 %31, label %32, label %60

32:                                               ; preds = %23
  %33 = add i64 %12, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %13, %36
  %38 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %39 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %40 = bitcast %"class.v8::internal::FactoryBase"* %39 to %"class.v8::internal::CanonicalHandleScope"**
  %41 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %42 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %32
  %44 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %41, i64 %37) #6
  br label %60

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %47 = bitcast %"class.v8::internal::FactoryBase"* %46 to i64**
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %50 = bitcast %"class.v8::internal::FactoryBase"* %49 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %48, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %45
  %54 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %38) #6
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i64* [ %54, %53 ], [ %48, %45 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %47, align 8
  store i64 %37, i64* %56, align 8
  br label %60

60:                                               ; preds = %4, %55, %43, %23
  %61 = phi i64* [ %1, %23 ], [ %44, %43 ], [ %56, %55 ], [ %1, %4 ]
  %62 = load i64, i64* %2, align 8
  %63 = and i64 %62, -4294967296
  %64 = add i64 %62, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp ult i16 %71, 64
  br i1 %72, label %73, label %110

73:                                               ; preds = %60
  %74 = load atomic i32, i32* %65 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %63, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = and i16 %79, 7
  %81 = icmp eq i16 %80, 5
  br i1 %81, label %82, label %110

82:                                               ; preds = %73
  %83 = add i64 %62, 11
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %63, %86
  %88 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %89 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %90 = bitcast %"class.v8::internal::FactoryBase"* %89 to %"class.v8::internal::CanonicalHandleScope"**
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  %94 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %87) #6
  br label %110

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %97 = bitcast %"class.v8::internal::FactoryBase"* %96 to i64**
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %100 = bitcast %"class.v8::internal::FactoryBase"* %99 to i64**
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %98, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %95
  %104 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %88) #6
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i64* [ %104, %103 ], [ %98, %95 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %97, align 8
  store i64 %87, i64* %106, align 8
  br label %110

110:                                              ; preds = %60, %105, %93, %73
  %111 = phi i64* [ %2, %73 ], [ %94, %93 ], [ %106, %105 ], [ %2, %60 ]
  %112 = load i64, i64* %61, align 8
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %386, label %117

117:                                              ; preds = %110
  %118 = load i64, i64* %111, align 8
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %386, label %123

123:                                              ; preds = %117
  %124 = add nsw i32 %121, %115
  %125 = icmp eq i32 %124, 2
  br i1 %125, label %126, label %161

126:                                              ; preds = %123
  %127 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #6
  store i32 0, i32* %6, align 4
  %128 = bitcast %"class.v8::internal::StringShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #6
  %129 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %7, i64 0, i32 0
  %130 = and i64 %112, -4294967296
  %131 = add i64 %112, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 acquire, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %130, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = zext i16 %138 to i32
  store i32 %139, i32* %129, align 4
  %140 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #6
  %141 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %112, i64* %141, align 8
  %142 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %7, %"class.v8::internal::String"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #6
  %143 = load i64, i64* %111, align 8
  %144 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #6
  store i32 0, i32* %9, align 4
  %145 = bitcast %"class.v8::internal::StringShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #6
  %146 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %10, i64 0, i32 0
  %147 = and i64 %143, -4294967296
  %148 = add i64 %143, -1
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 acquire, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %147, %151
  %153 = add i64 %152, 7
  %154 = inttoptr i64 %153 to i16*
  %155 = load atomic i16, i16* %154 monotonic, align 2
  %156 = zext i16 %155 to i32
  store i32 %156, i32* %146, align 4
  %157 = bitcast %"class.v8::internal::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #6
  %158 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %143, i64* %158, align 8
  %159 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %10, %"class.v8::internal::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #6
  %160 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28MakeOrFindTwoCharacterStringEtt(%"class.v8::internal::FactoryBase"* %0, i16 zeroext %142, i16 zeroext %159)
  br label %386

161:                                              ; preds = %123
  %162 = icmp ugt i32 %124, 536870888
  br i1 %162, label %163, label %169

163:                                              ; preds = %161
  %164 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %165 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %166 = tail call i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"* %165) #6
  %167 = load i64, i64* %166, align 8
  %168 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %164, i64 %167, %"class.v8::internal::MessageLocation"* null) #6
  br label %386

169:                                              ; preds = %161
  %170 = and i64 %112, -4294967296
  %171 = add i64 %112, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = and i64 %118, -4294967296
  %180 = add i64 %118, -1
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %179, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = and i16 %178, 8
  %189 = and i16 %188, %187
  %190 = icmp ne i16 %189, 0
  %191 = icmp slt i32 %124, 13
  br i1 %191, label %192, label %384

192:                                              ; preds = %169
  br i1 %190, label %193, label %353

193:                                              ; preds = %192
  %194 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i32 %124, i8 zeroext %3)
  %195 = icmp eq i64* %194, null
  br i1 %195, label %196, label %197, !prof !9

196:                                              ; preds = %193
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

197:                                              ; preds = %193
  %198 = load i64, i64* %194, align 8
  %199 = add i64 %198, 11
  %200 = inttoptr i64 %199 to i8*
  %201 = load i64, i64* %61, align 8
  %202 = and i64 %201, -4294967296
  %203 = add i64 %201, -1
  %204 = inttoptr i64 %203 to i32*
  %205 = load atomic i32, i32* %204 acquire, align 4
  %206 = zext i32 %205 to i64
  %207 = or i64 %202, %206
  %208 = add i64 %207, 7
  %209 = inttoptr i64 %208 to i16*
  %210 = load atomic i16, i16* %209 monotonic, align 2
  %211 = and i16 %210, 7
  %212 = icmp eq i16 %211, 2
  br i1 %212, label %213, label %243

213:                                              ; preds = %197
  %214 = load atomic i32, i32* %204 monotonic, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %202, %215
  %217 = add i64 %216, 7
  %218 = inttoptr i64 %217 to i16*
  %219 = load atomic i16, i16* %218 monotonic, align 2
  %220 = and i16 %219, 16
  %221 = icmp eq i16 %220, 0
  %222 = add i64 %201, 11
  %223 = inttoptr i64 %222 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %221, label %236, label %224

224:                                              ; preds = %213
  %225 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %223, align 1
  %226 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %225, i64 0, i32 0
  %227 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %225 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %228 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %227, align 8
  %229 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %228, i64 2
  %230 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %229, align 8
  %231 = tail call zeroext i1 %230(%"class.v8::String::ExternalStringResourceBase"* %226) #6
  br i1 %231, label %232, label %236

232:                                              ; preds = %224
  %233 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %223, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %233) #6
  %234 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %233, i64 0, i32 1
  %235 = load i8*, i8** %234, align 8
  br label %246

236:                                              ; preds = %224, %213
  %237 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %223, align 1
  %238 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %237 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %239 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %238, align 8
  %240 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %239, i64 6
  %241 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %240, align 8
  %242 = tail call i8* %241(%"class.v8::String::ExternalOneByteStringResource"* %237) #6
  br label %246

243:                                              ; preds = %197
  %244 = add i64 %201, 11
  %245 = inttoptr i64 %244 to i8*
  br label %246

246:                                              ; preds = %232, %236, %243
  %247 = phi i8* [ %245, %243 ], [ %235, %232 ], [ %242, %236 ]
  %248 = sext i32 %115 to i64
  switch i64 %248, label %275 [
    i64 1, label %249
    i64 2, label %251
    i64 3, label %255
    i64 4, label %256
    i64 5, label %260
    i64 6, label %261
    i64 7, label %262
    i64 8, label %263
    i64 9, label %267
    i64 10, label %268
    i64 11, label %269
    i64 12, label %270
    i64 13, label %271
    i64 14, label %272
    i64 15, label %273
    i64 16, label %274
    i64 0, label %276
  ]

249:                                              ; preds = %246
  %250 = load i8, i8* %247, align 1
  store i8 %250, i8* %200, align 1
  br label %276

251:                                              ; preds = %246
  %252 = bitcast i8* %247 to i16*
  %253 = inttoptr i64 %199 to i16*
  %254 = load i16, i16* %252, align 1
  store i16 %254, i16* %253, align 1
  br label %276

255:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 3, i1 false) #6
  br label %276

256:                                              ; preds = %246
  %257 = bitcast i8* %247 to i32*
  %258 = inttoptr i64 %199 to i32*
  %259 = load i32, i32* %257, align 1
  store i32 %259, i32* %258, align 1
  br label %276

260:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 5, i1 false) #6
  br label %276

261:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 6, i1 false) #6
  br label %276

262:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 7, i1 false) #6
  br label %276

263:                                              ; preds = %246
  %264 = bitcast i8* %247 to i64*
  %265 = inttoptr i64 %199 to i64*
  %266 = load i64, i64* %264, align 1
  store i64 %266, i64* %265, align 1
  br label %276

267:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 9, i1 false) #6
  br label %276

268:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 10, i1 false) #6
  br label %276

269:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 11, i1 false) #6
  br label %276

270:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 12, i1 false) #6
  br label %276

271:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 13, i1 false) #6
  br label %276

272:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 14, i1 false) #6
  br label %276

273:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 15, i1 false) #6
  br label %276

274:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 16, i1 false) #6
  br label %276

275:                                              ; preds = %246
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %247, i64 %248, i1 false) #6
  br label %276

276:                                              ; preds = %246, %249, %251, %255, %256, %260, %261, %262, %263, %267, %268, %269, %270, %271, %272, %273, %274, %275
  %277 = load i64, i64* %111, align 8
  %278 = and i64 %277, -4294967296
  %279 = add i64 %277, -1
  %280 = inttoptr i64 %279 to i32*
  %281 = load atomic i32, i32* %280 acquire, align 4
  %282 = zext i32 %281 to i64
  %283 = or i64 %278, %282
  %284 = add i64 %283, 7
  %285 = inttoptr i64 %284 to i16*
  %286 = load atomic i16, i16* %285 monotonic, align 2
  %287 = and i16 %286, 7
  %288 = icmp eq i16 %287, 2
  br i1 %288, label %289, label %319

289:                                              ; preds = %276
  %290 = load atomic i32, i32* %280 monotonic, align 4
  %291 = zext i32 %290 to i64
  %292 = or i64 %278, %291
  %293 = add i64 %292, 7
  %294 = inttoptr i64 %293 to i16*
  %295 = load atomic i16, i16* %294 monotonic, align 2
  %296 = and i16 %295, 16
  %297 = icmp eq i16 %296, 0
  %298 = add i64 %277, 11
  %299 = inttoptr i64 %298 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %297, label %312, label %300

300:                                              ; preds = %289
  %301 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %299, align 1
  %302 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %301, i64 0, i32 0
  %303 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %301 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %304 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %303, align 8
  %305 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %304, i64 2
  %306 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %305, align 8
  %307 = tail call zeroext i1 %306(%"class.v8::String::ExternalStringResourceBase"* %302) #6
  br i1 %307, label %308, label %312

308:                                              ; preds = %300
  %309 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %299, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %309) #6
  %310 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %309, i64 0, i32 1
  %311 = load i8*, i8** %310, align 8
  br label %322

312:                                              ; preds = %300, %289
  %313 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %299, align 1
  %314 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %313 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %315 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %314, align 8
  %316 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %315, i64 6
  %317 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %316, align 8
  %318 = tail call i8* %317(%"class.v8::String::ExternalOneByteStringResource"* %313) #6
  br label %322

319:                                              ; preds = %276
  %320 = add i64 %277, 11
  %321 = inttoptr i64 %320 to i8*
  br label %322

322:                                              ; preds = %308, %312, %319
  %323 = phi i8* [ %321, %319 ], [ %311, %308 ], [ %318, %312 ]
  %324 = getelementptr inbounds i8, i8* %200, i64 %248
  %325 = sext i32 %121 to i64
  switch i64 %325, label %352 [
    i64 1, label %326
    i64 2, label %328
    i64 3, label %332
    i64 4, label %333
    i64 5, label %337
    i64 6, label %338
    i64 7, label %339
    i64 8, label %340
    i64 9, label %344
    i64 10, label %345
    i64 11, label %346
    i64 12, label %347
    i64 13, label %348
    i64 14, label %349
    i64 15, label %350
    i64 16, label %351
    i64 0, label %386
  ]

326:                                              ; preds = %322
  %327 = load i8, i8* %323, align 1
  store i8 %327, i8* %324, align 1
  br label %386

328:                                              ; preds = %322
  %329 = bitcast i8* %323 to i16*
  %330 = bitcast i8* %324 to i16*
  %331 = load i16, i16* %329, align 1
  store i16 %331, i16* %330, align 1
  br label %386

332:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 3, i1 false) #6
  br label %386

333:                                              ; preds = %322
  %334 = bitcast i8* %323 to i32*
  %335 = bitcast i8* %324 to i32*
  %336 = load i32, i32* %334, align 1
  store i32 %336, i32* %335, align 1
  br label %386

337:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 5, i1 false) #6
  br label %386

338:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 6, i1 false) #6
  br label %386

339:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 7, i1 false) #6
  br label %386

340:                                              ; preds = %322
  %341 = bitcast i8* %323 to i64*
  %342 = bitcast i8* %324 to i64*
  %343 = load i64, i64* %341, align 1
  store i64 %343, i64* %342, align 1
  br label %386

344:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 9, i1 false) #6
  br label %386

345:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 10, i1 false) #6
  br label %386

346:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 11, i1 false) #6
  br label %386

347:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 12, i1 false) #6
  br label %386

348:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 13, i1 false) #6
  br label %386

349:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 14, i1 false) #6
  br label %386

350:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 15, i1 false) #6
  br label %386

351:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 16, i1 false) #6
  br label %386

352:                                              ; preds = %322
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 %323, i64 %325, i1 false) #6
  br label %386

353:                                              ; preds = %192
  %354 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i32 %124, i8 zeroext %3)
  %355 = icmp eq i64* %354, null
  br i1 %355, label %356, label %357, !prof !9

356:                                              ; preds = %353
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %358) #6
  store i8 0, i8* %358, align 8
  %359 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %360 = bitcast %union.anon.1174* %359 to i8*
  store i8 0, i8* %360, align 8
  %361 = load i64, i64* %354, align 8
  %362 = add i64 %361, 11
  %363 = inttoptr i64 %362 to i16*
  %364 = load i64, i64* %61, align 8
  %365 = add i64 %364, 7
  %366 = inttoptr i64 %365 to i32*
  %367 = load i32, i32* %366, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %364, i16* %363, i32 0, i32 %367, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %11) #6
  %368 = load i64, i64* %111, align 8
  %369 = load i64, i64* %61, align 8
  %370 = add i64 %369, 7
  %371 = inttoptr i64 %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds i16, i16* %363, i64 %373
  %375 = add i64 %368, 7
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %368, i16* %374, i32 0, i32 %377, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %11) #6
  %378 = load i8, i8* %358, align 8, !range !2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %357
  %381 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %382 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %381, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %382) #6
  br label %383

383:                                              ; preds = %357, %380
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %358) #6
  br label %386

384:                                              ; preds = %169
  %385 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %61, i64* %111, i32 %124, i1 zeroext %190, i8 zeroext %3)
  br label %386

386:                                              ; preds = %322, %326, %328, %332, %333, %337, %338, %339, %340, %344, %345, %346, %347, %348, %349, %350, %351, %352, %117, %110, %383, %384, %163, %126
  %387 = phi i64* [ %160, %126 ], [ null, %163 ], [ %354, %383 ], [ %385, %384 ], [ %111, %110 ], [ %61, %117 ], [ %194, %352 ], [ %194, %351 ], [ %194, %350 ], [ %194, %349 ], [ %194, %348 ], [ %194, %347 ], [ %194, %346 ], [ %194, %345 ], [ %194, %344 ], [ %194, %340 ], [ %194, %339 ], [ %194, %338 ], [ %194, %337 ], [ %194, %333 ], [ %194, %332 ], [ %194, %328 ], [ %194, %326 ], [ %194, %322 ]
  ret i64* %387
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE28MakeOrFindTwoCharacterStringEtt(%"class.v8::internal::FactoryBase"*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %5 = alloca %"class.v8::internal::SequentialStringKey.1132", align 8
  %6 = alloca [2 x i8], align 1
  %7 = alloca [2 x i16], align 2
  %8 = or i16 %2, %1
  %9 = icmp ult i16 %8, 256
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #6
  %12 = trunc i16 %1 to i8
  store i8 %12, i8* %11, align 1
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  %14 = trunc i16 %2 to i8
  store i8 %14, i8* %13, align 1
  %15 = bitcast %"class.v8::internal::SequentialStringKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1200
  %17 = bitcast %"class.v8::internal::FactoryBase"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* nonnull %11, i32 2, i64 %21) #6
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1, i32 0
  store i8* %11, i8** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1, i32 1
  store i64 2, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 2
  store i8 0, i8* %28, align 8
  %29 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %31 = bitcast %"class.v8::internal::FactoryBase"* %30 to %"class.v8::internal::StringTable"**
  %32 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %31, align 8
  %33 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %32, %"class.v8::internal::Isolate"* %29, %"class.v8::internal::SequentialStringKey"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #6
  br label %57

34:                                               ; preds = %3
  %35 = bitcast [2 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #6
  %36 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 0
  store i16 %1, i16* %36, align 2
  %37 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 1
  store i16 %2, i16* %37, align 2
  %38 = bitcast %"class.v8::internal::SequentialStringKey.1132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #6
  %39 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1200
  %40 = bitcast %"class.v8::internal::FactoryBase"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 1
  %45 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* nonnull %36, i32 2, i64 %44) #6
  %46 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 2
  store i32 2, i32* %48, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 1, i32 0
  store i16* %36, i16** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 1, i32 1
  store i64 2, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 2
  store i8 0, i8* %51, align 8
  %52 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45008
  %54 = bitcast %"class.v8::internal::FactoryBase"* %53 to %"class.v8::internal::StringTable"**
  %55 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %54, align 8
  %56 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %55, %"class.v8::internal::Isolate"* %52, %"class.v8::internal::SequentialStringKey.1132"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  br label %57

57:                                               ; preds = %34, %10
  %58 = phi i64* [ %33, %10 ], [ %56, %34 ]
  ret i64* %58
}

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64, i16*, i32, i32, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  br i1 %4, label %7, label %18

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 760
  %9 = bitcast %"class.v8::internal::FactoryBase"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 2
  %16 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %17 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %16, i32 %15, i8 zeroext %5, i32 0) #6
  br label %29

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 768
  %20 = bitcast %"class.v8::internal::FactoryBase"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i8*
  %24 = load atomic i8, i8* %23 monotonic, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 2
  %27 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %28 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %27, i32 %26, i8 zeroext %5, i32 0) #6
  br label %29

29:                                               ; preds = %18, %7
  %30 = phi i64 [ %28, %18 ], [ %17, %7 ]
  %31 = phi i64 [ %21, %18 ], [ %10, %7 ]
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = trunc i64 %31 to i32
  store atomic volatile i32 %34, i32* %33 monotonic, align 4
  %35 = and i64 %30, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 262144
  %40 = icmp ne i64 %39, 0
  %41 = and i64 %38, 24
  %42 = icmp eq i64 %41, 0
  %43 = or i1 %40, %42
  %44 = add i64 %30, 3
  %45 = inttoptr i64 %44 to i32*
  store i32 3, i32* %45, align 4
  %46 = add i64 %30, 7
  %47 = inttoptr i64 %46 to i32*
  store i32 %3, i32* %47, align 4
  %48 = load i64, i64* %1, align 8
  %49 = add i64 %30, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %48 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  br i1 %43, label %52, label %75

52:                                               ; preds = %29
  %53 = and i64 %48, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = load i64, i64* %37, align 8
  %57 = and i64 %56, 262144
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = or i64 %35, 16
  %61 = inttoptr i64 %60 to %"class.v8::internal::Heap"**
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %61, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %62, i64 %30, i64 %49, i64 %48) #6
  br label %63

63:                                               ; preds = %59, %55, %52
  %64 = and i64 %48, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %63
  %71 = load i64, i64* %37, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %49, i64 %48) #6
  br label %80

75:                                               ; preds = %29
  %76 = load i64, i64* %2, align 8
  %77 = add i64 %30, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = trunc i64 %76 to i32
  store atomic volatile i32 %79, i32* %78 monotonic, align 4
  br label %107

80:                                               ; preds = %63, %70, %74
  %81 = load i64, i64* %2, align 8
  %82 = add i64 %30, 15
  %83 = inttoptr i64 %82 to i32*
  %84 = trunc i64 %81 to i32
  store atomic volatile i32 %84, i32* %83 monotonic, align 4
  %85 = and i64 %81, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %80
  %88 = load i64, i64* %37, align 8
  %89 = and i64 %88, 262144
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = or i64 %35, 16
  %93 = inttoptr i64 %92 to %"class.v8::internal::Heap"**
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %93, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %94, i64 %30, i64 %82, i64 %81) #6
  br label %95

95:                                               ; preds = %91, %87, %80
  %96 = and i64 %81, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %95
  %103 = load i64, i64* %37, align 8
  %104 = and i64 %103, 24
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %82, i64 %81) #6
  br label %107

107:                                              ; preds = %75, %95, %102, %106
  %108 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %109 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %110 = bitcast %"class.v8::internal::FactoryBase"* %109 to %"class.v8::internal::CanonicalHandleScope"**
  %111 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %110, align 8
  %112 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %111, i64 %30) #6
  br label %130

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %117 = bitcast %"class.v8::internal::FactoryBase"* %116 to i64**
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %120 = bitcast %"class.v8::internal::FactoryBase"* %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %118, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %115
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %108) #6
  br label %125

125:                                              ; preds = %123, %115
  %126 = phi i64* [ %124, %123 ], [ %118, %115 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %117, align 8
  store i64 %30, i64* %126, align 8
  br label %130

130:                                              ; preds = %113, %125
  %131 = phi i64* [ %114, %113 ], [ %126, %125 ]
  ret i64* %131
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewWithImmortalMapENS0_3MapENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = add i64 %1, 3
  %5 = inttoptr i64 %4 to i8*
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw nsw i32 %7, 2
  %9 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %10 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %1 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewBigIntEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 16777216
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 3
  %8 = add nuw nsw i32 %7, 8
  %9 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 448
  %10 = bitcast %"class.v8::internal::FactoryBase"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %13 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %12, i32 %8, i8 zeroext %2, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %11 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %19 = bitcast %"class.v8::internal::FactoryBase"* %18 to %"class.v8::internal::CanonicalHandleScope"**
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %6
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %13) #6
  br label %39

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %26 = bitcast %"class.v8::internal::FactoryBase"* %25 to i64**
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %29 = bitcast %"class.v8::internal::FactoryBase"* %28 to i64**
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %27, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #6
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i64* [ %33, %32 ], [ %27, %24 ]
  %36 = ptrtoint i64* %35 to i64
  %37 = add i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  store i64* %38, i64** %26, align 8
  store i64 %13, i64* %35, align 8
  br label %39

39:                                               ; preds = %22, %34
  %40 = phi i64* [ %23, %22 ], [ %35, %34 ]
  ret i64* %40
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewScopeInfoEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = add nsw i32 %4, 4
  %6 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 272
  %7 = bitcast %"class.v8::internal::FactoryBase"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %10 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %9, i32 %5, i8 zeroext %2, i32 0) #6
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %8 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  %14 = add i64 %10, 3
  %15 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %16 = bitcast %"class.v8::internal::FactoryBase"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sext i32 %1 to i64
  %19 = inttoptr i64 %14 to i32*
  %20 = trunc i64 %17 to i32
  %21 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %20, i64 %18, i32* %19) #6, !srcloc !3
  %22 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %24 = bitcast %"class.v8::internal::FactoryBase"* %23 to %"class.v8::internal::CanonicalHandleScope"**
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %3
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %10) #6
  br label %44

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %31 = bitcast %"class.v8::internal::FactoryBase"* %30 to i64**
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %34 = bitcast %"class.v8::internal::FactoryBase"* %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %32, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %22) #6
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i64* [ %38, %37 ], [ %32, %29 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %31, align 8
  store i64 %10, i64* %40, align 8
  br label %44

44:                                               ; preds = %27, %39
  %45 = phi i64* [ %28, %27 ], [ %40, %39 ]
  ret i64* %45
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewSourceTextModuleInfoEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 520
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i64* %3, i32 5, i64* %5, i8 zeroext 1) #6
  ret i64* %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::DescriptorArray", align 8
  %6 = add nsw i32 %2, %1
  %7 = mul i32 %6, 12
  %8 = add nsw i32 %7, 16
  %9 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 4624
  %10 = bitcast %"class.v8::internal::FactoryBase"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %13 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %12, i32 %8, i8 zeroext %3, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %11 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = bitcast %"class.v8::internal::DescriptorArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 968
  %20 = bitcast %"class.v8::internal::FactoryBase"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %23 = bitcast %"class.v8::internal::FactoryBase"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  call void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"* nonnull %5, i64 %21, i64 %24, i32 %1, i32 %2) #6
  %25 = load i64, i64* %18, align 8
  %26 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %28 = bitcast %"class.v8::internal::FactoryBase"* %27 to %"class.v8::internal::CanonicalHandleScope"**
  %29 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %4
  %32 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %29, i64 %25) #6
  br label %48

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %38 = bitcast %"class.v8::internal::FactoryBase"* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #6
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64* [ %42, %41 ], [ %36, %33 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %35, align 8
  store i64 %25, i64* %44, align 8
  br label %48

48:                                               ; preds = %31, %43
  %49 = phi i64* [ %32, %31 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  ret i64* %49
}

declare void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"*, i64, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %5 = bitcast %"class.v8::internal::FactoryBase"* %4 to i64*
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 99) #6
  %7 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %8 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %13 = bitcast %"class.v8::internal::FactoryBase"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %8, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %14 to i32
  %18 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %17, i64 2, i32* %16) #6, !srcloc !3
  %19 = shl i32 %1, 1
  store atomic volatile i32 %19, i32* %16 monotonic, align 4
  %20 = shl i32 %2, 1
  %21 = add i64 %8, 7
  %22 = inttoptr i64 %21 to i32*
  store atomic volatile i32 %20, i32* %22 monotonic, align 4
  %23 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %25 = bitcast %"class.v8::internal::FactoryBase"* %24 to %"class.v8::internal::CanonicalHandleScope"**
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %3
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %8) #6
  br label %45

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %32 = bitcast %"class.v8::internal::FactoryBase"* %31 to i64**
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %33, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #6
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i64* [ %39, %38 ], [ %33, %30 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %32, align 8
  store i64 %8, i64* %41, align 8
  br label %45

45:                                               ; preds = %28, %40
  %46 = phi i64* [ %29, %28 ], [ %41, %40 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewSwissNameDictionaryEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 5
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = icmp eq i32 %1, 0
  %7 = select i1 %6, i32 0, i32 4
  br label %12

8:                                                ; preds = %3
  %9 = udiv i32 %1, 7
  %10 = add nuw nsw i32 %9, %1
  %11 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %10) #6
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi i32 [ %11, %8 ], [ %7, %5 ]
  %14 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i32 %13, i8 zeroext %2)
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SwissNameDictionary", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 1064
  %8 = bitcast %"class.v8::internal::FactoryBase"* %7 to i64*
  br label %61

9:                                                ; preds = %3
  %10 = icmp ugt i32 %1, 38347919
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

12:                                               ; preds = %9
  %13 = icmp slt i32 %1, 257
  %14 = icmp slt i32 %1, 65537
  %15 = select i1 %14, i32 2, i32 4
  %16 = select i1 %13, i32 1, i32 %15
  %17 = sdiv i32 %1, -8
  %18 = add nuw nsw i32 %1, 2
  %19 = add nsw i32 %18, %17
  %20 = mul nsw i32 %16, %19
  %21 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %0, i32 %20, i8 zeroext %2)
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 664
  %24 = bitcast %"class.v8::internal::FactoryBase"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = mul i32 %1, 9
  %27 = add nuw nsw i32 %1, 32
  %28 = add nuw nsw i32 %27, %26
  %29 = bitcast %"class.v8::internal::SwissNameDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %21, i32 %28, i8 zeroext %2, i32 0) #6
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = trunc i64 %25 to i32
  store atomic volatile i32 %33, i32* %32 monotonic, align 4
  %34 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %36 = load i64, i64* %22, align 8
  call void @_ZN2v88internal19SwissNameDictionary10InitializeINS0_7IsolateEEEvPT_NS0_9ByteArrayEi(%"class.v8::internal::SwissNameDictionary"* nonnull %4, %"class.v8::internal::Isolate"* %35, i64 %36, i32 %1)
  %37 = load i64, i64* %34, align 8
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %39 = bitcast %"class.v8::internal::FactoryBase"* %38 to %"class.v8::internal::CanonicalHandleScope"**
  %40 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %12
  %43 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %40, i64 %37) #6
  br label %59

44:                                               ; preds = %12
  %45 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %46 = bitcast %"class.v8::internal::FactoryBase"* %45 to i64**
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %49 = bitcast %"class.v8::internal::FactoryBase"* %48 to i64**
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %47, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %35) #6
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i64* [ %53, %52 ], [ %47, %44 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %46, align 8
  store i64 %37, i64* %55, align 8
  br label %59

59:                                               ; preds = %42, %54
  %60 = phi i64* [ %43, %42 ], [ %55, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %61

61:                                               ; preds = %59, %6
  %62 = phi i64* [ %8, %6 ], [ %60, %59 ]
  ret i64* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SwissNameDictionary10InitializeINS0_7IsolateEEEvPT_NS0_9ByteArrayEi(%"class.v8::internal::SwissNameDictionary"*, %"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  store i32 %3, i32* %8, align 4
  %9 = load i64, i64* %5, align 8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = shl i32 %15, 3
  %17 = sext i32 %16 to i64
  %18 = add i64 %12, 15
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i8*
  %21 = add nsw i32 %3, 16
  %22 = sext i32 %21 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 -128, i64 %22, i1 false)
  %23 = load i64, i64* %5, align 8
  %24 = add i64 %23, 15
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = shl nsw i32 %3, 1
  %28 = sext i32 %27 to i64
  %29 = inttoptr i64 %24 to i32*
  %30 = trunc i64 %26 to i32
  %31 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %30, i64 %28, i32* %29) #6, !srcloc !3
  %32 = load i64, i64* %5, align 8
  %33 = add i64 %32, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = trunc i64 %2 to i32
  store atomic volatile i32 %35, i32* %34 monotonic, align 4
  %36 = load i64, i64* %5, align 8
  %37 = add i64 %36, 11
  %38 = and i64 %2, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %4
  %41 = and i64 %36, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %36, i64 %37, i64 %2) #6
  %51 = load i64, i64* %5, align 8
  %52 = add i64 %51, 11
  br label %53

53:                                               ; preds = %47, %40, %4
  %54 = phi i64 [ %52, %47 ], [ %37, %40 ], [ %37, %4 ]
  %55 = phi i64 [ %51, %47 ], [ %36, %40 ], [ %36, %4 ]
  %56 = and i64 %2, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %53
  %63 = and i64 %55, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %55, i64 %54, i64 %2) #6
  %70 = load i64, i64* %5, align 8
  %71 = add i64 %70, 11
  br label %72

72:                                               ; preds = %53, %62, %69
  %73 = phi i64 [ %54, %53 ], [ %54, %62 ], [ %71, %69 ]
  %74 = phi i64 [ %55, %53 ], [ %55, %62 ], [ %70, %69 ]
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = and i64 %74, -4294967296
  %79 = inttoptr i64 %73 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %78, %81
  %83 = icmp slt i32 %77, 257
  br i1 %83, label %84, label %87

84:                                               ; preds = %72
  %85 = add i64 %82, 7
  %86 = inttoptr i64 %85 to i8*
  store i8 0, i8* %86, align 1
  br label %94

87:                                               ; preds = %72
  %88 = icmp slt i32 %77, 65537
  %89 = add i64 %82, 7
  br i1 %88, label %90, label %92

90:                                               ; preds = %87
  %91 = inttoptr i64 %89 to i16*
  store i16 0, i16* %91, align 2
  br label %94

92:                                               ; preds = %87
  %93 = inttoptr i64 %89 to i32*
  store i32 0, i32* %93, align 4
  br label %94

94:                                               ; preds = %84, %90, %92
  %95 = load i64, i64* %5, align 8
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = add i64 %95, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = icmp slt i32 %98, 257
  br i1 %105, label %106, label %110

106:                                              ; preds = %94
  %107 = add i64 %104, 7
  %108 = inttoptr i64 %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 1
  store i8 0, i8* %109, align 1
  br label %119

110:                                              ; preds = %94
  %111 = icmp slt i32 %98, 65537
  %112 = add i64 %104, 7
  br i1 %111, label %113, label %116

113:                                              ; preds = %110
  %114 = inttoptr i64 %112 to i16*
  %115 = getelementptr inbounds i16, i16* %114, i64 1
  store i16 0, i16* %115, align 2
  br label %119

116:                                              ; preds = %110
  %117 = inttoptr i64 %112 to i32*
  %118 = getelementptr inbounds i32, i32* %117, i64 1
  store i32 0, i32* %118, align 4
  br label %119

119:                                              ; preds = %106, %113, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE27NewFunctionTemplateRareDataEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %3 = bitcast %"class.v8::internal::FactoryBase"* %2 to i64*
  %4 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %3, i16 zeroext 103) #6
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 40, i8 zeroext 1, i32 0) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 160
  %11 = bitcast %"class.v8::internal::FactoryBase"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %6, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %12 to i32
  %16 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %15, i64 9, i32* %14) #6, !srcloc !3
  %17 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 360
  %18 = bitcast %"class.v8::internal::FactoryBase"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %6, 35
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %19 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %25 = bitcast %"class.v8::internal::FactoryBase"* %24 to %"class.v8::internal::CanonicalHandleScope"**
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %1
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %6) #6
  br label %45

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %32 = bitcast %"class.v8::internal::FactoryBase"* %31 to i64**
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %35 = bitcast %"class.v8::internal::FactoryBase"* %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %33, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #6
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i64* [ %39, %38 ], [ %33, %30 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %32, align 8
  store i64 %6, i64* %41, align 8
  br label %45

45:                                               ; preds = %28, %40
  %46 = phi i64* [ %29, %28 ], [ %41, %40 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %6 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %5, i32 %1, i8 zeroext %2, i32 %3) #6
  ret i64 %6
}

declare i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE21AllocateRawFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 134217725
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 2
  %8 = add nuw nsw i32 %7, 8
  %9 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %10 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %12 = icmp sge i32 %11, %8
  %13 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %6
  %17 = and i64 %10, -262144
  %18 = inttoptr i64 %17 to %"class.v8::internal::BasicMemoryChunk"*
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %18, i64 0, i32 1
  %20 = load atomic i64, i64* %19 monotonic, align 8
  br label %21

21:                                               ; preds = %25, %16
  %22 = phi i64 [ %20, %16 ], [ %28, %25 ]
  %23 = and i64 %22, 256
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = or i64 %22, 256
  %27 = cmpxchg volatile i64* %19, i64 %22, i64 %26 release monotonic
  %28 = extractvalue { i64, i1 } %27, 0
  %29 = extractvalue { i64, i1 } %27, 1
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %25, %6
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_7FactoryEE24AllocateRawWeakArrayListEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 134217724
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 2
  %8 = add nuw nsw i32 %7, 12
  %9 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %10 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %12 = icmp sge i32 %11, %8
  %13 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %6
  %17 = and i64 %10, -262144
  %18 = inttoptr i64 %17 to %"class.v8::internal::BasicMemoryChunk"*
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %18, i64 0, i32 1
  %20 = load atomic i64, i64* %19 monotonic, align 8
  br label %21

21:                                               ; preds = %25, %16
  %22 = phi i64 [ %20, %16 ], [ %28, %25 ]
  %23 = and i64 %22, 256
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = or i64 %22, 256
  %27 = cmpxchg volatile i64* %19, i64 %22, i64 %26 release monotonic
  %28 = extractvalue { i64, i1 } %27, 0
  %29 = extractvalue { i64, i1 } %27, 1
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %25, %6
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE21NewSharedFunctionInfoEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 128
  %4 = bitcast %"class.v8::internal::FactoryBase"* %3 to i64*
  %5 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 280
  %6 = bitcast %"class.v8::internal::FactoryBase"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = add i64 %7, 3
  %10 = inttoptr i64 %9 to i8*
  %11 = load atomic i8, i8* %10 monotonic, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 2
  %14 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Factory"*
  %15 = tail call i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"* %14, i32 %13, i8 zeroext 1, i32 0) #6
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %7 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %19, align 8
  call void @_ZN2v88internal18SharedFunctionInfo4InitENS0_13ReadOnlyRootsEi(%"class.v8::internal::SharedFunctionInfo"* nonnull %2, i64* %4, i32 -1) #6
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.v8::internal::FactoryBase"* %0 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45608
  %23 = bitcast %"class.v8::internal::FactoryBase"* %22 to %"class.v8::internal::CanonicalHandleScope"**
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %1
  %27 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %20) #6
  br label %43

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45584
  %30 = bitcast %"class.v8::internal::FactoryBase"* %29 to i64**
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %0, i64 45592
  %33 = bitcast %"class.v8::internal::FactoryBase"* %32 to i64**
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %31, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %38

38:                                               ; preds = %36, %28
  %39 = phi i64* [ %37, %36 ], [ %31, %28 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %30, align 8
  store i64 %20, i64* %39, align 8
  br label %43

43:                                               ; preds = %26, %38
  %44 = phi i64* [ %27, %26 ], [ %39, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  ret i64* %44
}

declare void @_ZN2v88internal18SharedFunctionInfo4InitENS0_13ReadOnlyRootsEi(%"class.v8::internal::SharedFunctionInfo"*, i64*, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Factory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::Factory"*, i32, i8 zeroext, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9ToBooleanEb(%"class.v8::internal::FactoryBase.1052"*, i1 zeroext) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = select i1 %1, i64 7, i64 8
  %6 = getelementptr inbounds i64, i64* %4, i64 %5
  ret i64* %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::LocalFactory"* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE4implEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  ret %"class.v8::internal::LocalFactory"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i16 zeroext, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext %1) #6
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i8*
  %9 = load atomic i8, i8* %8 monotonic, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 2
  %12 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %13 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %12, i32 %11, i8 zeroext %2, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %6 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = getelementptr inbounds i64, i64* %5, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i32 %10, -1
  %20 = add i64 %13, 3
  %21 = sext i32 %19 to i64
  %22 = inttoptr i64 %20 to i32*
  %23 = trunc i64 %18 to i32
  %24 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %23, i64 %21, i32* %22) #6, !srcloc !3
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %30 = bitcast %"class.v8::internal::FactoryBase.1052"* %29 to %"class.v8::internal::LocalHeap"*
  %31 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %30, i64 %13) #6
  br label %48

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %34 = bitcast %"class.v8::internal::FactoryBase.1052"* %33 to %"class.v8::internal::LocalHandles"**
  %35 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %35, i64 0, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %35, i64 0, i32 0, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %32
  %42 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %35) #6
  %43 = load i64*, i64** %36, align 8
  br label %44

44:                                               ; preds = %41, %32
  %45 = phi i64* [ %43, %41 ], [ %37, %32 ]
  %46 = phi i64* [ %42, %41 ], [ %37, %32 ]
  %47 = getelementptr inbounds i64, i64* %45, i64 1
  store i64* %47, i64** %36, align 8
  store i64 %13, i64* %46, align 8
  br label %48

48:                                               ; preds = %28, %44
  %49 = phi i64* [ %31, %28 ], [ %46, %44 ]
  ret i64* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewStructInternalENS0_13ReadOnlyRootsENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64*, i64, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %7 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %6, i32 %3, i8 zeroext %4, i32 0) #6
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %2 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  %11 = getelementptr inbounds i64, i64* %1, i64 4
  %12 = load i64, i64* %11, align 8
  %13 = ashr i32 %3, 2
  %14 = add nsw i32 %13, -1
  %15 = add i64 %7, 3
  %16 = sext i32 %14 to i64
  %17 = inttoptr i64 %15 to i32*
  %18 = trunc i64 %12 to i32
  %19 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %18, i64 %16, i32* %17) #6, !srcloc !3
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %3, i16 zeroext 87) #6
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %6 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %5, i32 12, i8 zeroext 1, i32 0) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = getelementptr inbounds i64, i64* %3, i64 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %6, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %11 to i32
  %15 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %14, i64 2, i32* %13) #6, !srcloc !3
  %16 = load i64*, i64** %2, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 6
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  store atomic volatile i32 %19, i32* %13 monotonic, align 4
  %20 = load i64*, i64** %2, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 6
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %6, 7
  %24 = inttoptr i64 %23 to i32*
  %25 = trunc i64 %22 to i32
  store atomic volatile i32 %25, i32* %24 monotonic, align 4
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHeap"*
  %32 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %31, i64 %6) #6
  br label %49

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %35 = bitcast %"class.v8::internal::FactoryBase.1052"* %34 to %"class.v8::internal::LocalHandles"**
  %36 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %36) #6
  %44 = load i64*, i64** %37, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i64* [ %44, %42 ], [ %38, %33 ]
  %47 = phi i64* [ %43, %42 ], [ %38, %33 ]
  %48 = getelementptr inbounds i64, i64* %46, i64 1
  store i64* %48, i64** %37, align 8
  store i64 %6, i64* %47, align 8
  br label %49

49:                                               ; preds = %29, %45
  %50 = phi i64* [ %32, %29 ], [ %47, %45 ]
  ret i64* %50
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 29
  br label %18

9:                                                ; preds = %3
  %10 = icmp ugt i32 %1, 134217725
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

12:                                               ; preds = %9
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 12
  %16 = getelementptr inbounds i64, i64* %14, i64 4
  %17 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %15, i32 %1, i64* %16, i8 zeroext %2)
  br label %18

18:                                               ; preds = %12, %5
  %19 = phi i64* [ %8, %5 ], [ %17, %12 ]
  ret i64* %19
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64*, i32, i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp ugt i32 %2, 134217725
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %2) #7
  unreachable

8:                                                ; preds = %5
  %9 = shl i32 %2, 2
  %10 = add nuw nsw i32 %9, 8
  %11 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %12 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %11, i32 %10, i8 zeroext %4, i32 0) #6
  %13 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %4) #6
  %14 = icmp sge i32 %13, %10
  %15 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %16 = icmp eq i8 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %8
  %19 = and i64 %12, -262144
  %20 = inttoptr i64 %19 to %"class.v8::internal::BasicMemoryChunk"*
  %21 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %20, i64 0, i32 1
  %22 = load atomic i64, i64* %21 monotonic, align 8
  br label %23

23:                                               ; preds = %27, %18
  %24 = phi i64 [ %22, %18 ], [ %30, %27 ]
  %25 = and i64 %24, 256
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = or i64 %24, 256
  %29 = cmpxchg volatile i64* %21, i64 %24, i64 %28 release monotonic
  %30 = extractvalue { i64, i1 } %29, 0
  %31 = extractvalue { i64, i1 } %29, 1
  br i1 %31, label %32, label %23

32:                                               ; preds = %23, %27, %8
  %33 = load i64, i64* %1, align 8
  %34 = add i64 %12, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = trunc i64 %33 to i32
  store atomic volatile i32 %36, i32* %35 monotonic, align 4
  %37 = shl i32 %2, 1
  %38 = add i64 %12, 3
  %39 = inttoptr i64 %38 to i32*
  store atomic volatile i32 %37, i32* %39 monotonic, align 4
  %40 = add i64 %12, 7
  %41 = load i64, i64* %3, align 8
  %42 = sext i32 %2 to i64
  %43 = inttoptr i64 %40 to i32*
  %44 = trunc i64 %41 to i32
  %45 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %44, i64 %42, i32* %43) #6, !srcloc !3
  %46 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %51 = bitcast %"class.v8::internal::FactoryBase.1052"* %50 to %"class.v8::internal::LocalHeap"*
  %52 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %51, i64 %12) #6
  br label %69

53:                                               ; preds = %32
  %54 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %55 = bitcast %"class.v8::internal::FactoryBase.1052"* %54 to %"class.v8::internal::LocalHandles"**
  %56 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %53
  %63 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %56) #6
  %64 = load i64*, i64** %57, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi i64* [ %64, %62 ], [ %58, %53 ]
  %67 = phi i64* [ %63, %62 ], [ %58, %53 ]
  %68 = getelementptr inbounds i64, i64* %66, i64 1
  store i64* %68, i64** %57, align 8
  store i64 %12, i64* %67, align 8
  br label %69

69:                                               ; preds = %49, %65
  %70 = phi i64* [ %52, %49 ], [ %67, %65 ]
  ret i64* %70
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 4
  %8 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %1, i32 %2, i64* %7, i8 zeroext %3)
  ret i64* %8
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %6 = load i64*, i64** %5, align 8
  br i1 %4, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds i64, i64* %6, i64 29
  br label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %6, i64 12
  %11 = getelementptr inbounds i64, i64* %6, i64 5
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %10, i32 %1, i64* %11, i8 zeroext %2)
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i64* [ %8, %7 ], [ %12, %9 ]
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 29
  br label %50

9:                                                ; preds = %3
  %10 = icmp ugt i32 %1, 67108862
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

12:                                               ; preds = %9
  %13 = shl i32 %1, 3
  %14 = add nuw nsw i32 %13, 8
  %15 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 45
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %20 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %19, i32 %14, i8 zeroext %2, i32 1) #6
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %18 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = shl i32 %1, 1
  %25 = add i64 %20, 3
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 %24, i32* %26 monotonic, align 4
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %32 = bitcast %"class.v8::internal::FactoryBase.1052"* %31 to %"class.v8::internal::LocalHeap"*
  %33 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %32, i64 %20) #6
  br label %50

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %36 = bitcast %"class.v8::internal::FactoryBase.1052"* %35 to %"class.v8::internal::LocalHandles"**
  %37 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %37, i64 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %37, i64 0, i32 0, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = icmp eq i64* %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %37) #6
  %45 = load i64*, i64** %38, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i64* [ %45, %43 ], [ %39, %34 ]
  %48 = phi i64* [ %44, %43 ], [ %39, %34 ]
  %49 = getelementptr inbounds i64, i64* %47, i64 1
  store i64* %49, i64** %38, align 8
  store i64 %20, i64* %48, align 8
  br label %50

50:                                               ; preds = %46, %30, %5
  %51 = phi i64* [ %8, %5 ], [ %33, %30 ], [ %48, %46 ]
  ret i64* %51
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = shl i32 %2, 2
  %6 = add nsw i32 %5, 8
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %8 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %7, i32 %6, i8 zeroext %3, i32 0) #6
  %9 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %3) #6
  %10 = icmp sge i32 %9, %6
  %11 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %12 = icmp eq i8 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %28, label %14

14:                                               ; preds = %4
  %15 = and i64 %8, -262144
  %16 = inttoptr i64 %15 to %"class.v8::internal::BasicMemoryChunk"*
  %17 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %16, i64 0, i32 1
  %18 = load atomic i64, i64* %17 monotonic, align 8
  br label %19

19:                                               ; preds = %23, %14
  %20 = phi i64 [ %18, %14 ], [ %26, %23 ]
  %21 = and i64 %20, 256
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = or i64 %20, 256
  %25 = cmpxchg volatile i64* %17, i64 %20, i64 %24 release monotonic
  %26 = extractvalue { i64, i1 } %25, 0
  %27 = extractvalue { i64, i1 } %25, 1
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %23, %4
  %29 = add i64 %8, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = trunc i64 %1 to i32
  store atomic volatile i32 %31, i32* %30 monotonic, align 4
  %32 = shl i32 %2, 1
  %33 = add i64 %8, 3
  %34 = inttoptr i64 %33 to i32*
  store atomic volatile i32 %32, i32* %34 monotonic, align 4
  %35 = add i64 %8, 7
  %36 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = sext i32 %2 to i64
  %41 = inttoptr i64 %35 to i32*
  %42 = trunc i64 %39 to i32
  %43 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %42, i64 %40, i32* %41) #6, !srcloc !3
  %44 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %49 = bitcast %"class.v8::internal::FactoryBase.1052"* %48 to %"class.v8::internal::LocalHeap"*
  %50 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %49, i64 %8) #6
  br label %67

51:                                               ; preds = %28
  %52 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %53 = bitcast %"class.v8::internal::FactoryBase.1052"* %52 to %"class.v8::internal::LocalHandles"**
  %54 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %54, i64 0, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %54, i64 0, i32 0, i32 1
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %54) #6
  %62 = load i64*, i64** %55, align 8
  br label %63

63:                                               ; preds = %60, %51
  %64 = phi i64* [ %62, %60 ], [ %56, %51 ]
  %65 = phi i64* [ %61, %60 ], [ %56, %51 ]
  %66 = getelementptr inbounds i64, i64* %64, i64 1
  store i64* %66, i64** %55, align 8
  store i64 %8, i64* %65, align 8
  br label %67

67:                                               ; preds = %47, %63
  %68 = phi i64* [ %50, %47 ], [ %65, %63 ]
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE16AllocateRawArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %5 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %4, i32 %1, i8 zeroext %2, i32 0) #6
  %6 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %7 = icmp sge i32 %6, %1
  %8 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %9 = icmp eq i8 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = and i64 %5, -262144
  %13 = inttoptr i64 %12 to %"class.v8::internal::BasicMemoryChunk"*
  %14 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %13, i64 0, i32 1
  %15 = load atomic i64, i64* %14 monotonic, align 8
  br label %16

16:                                               ; preds = %20, %11
  %17 = phi i64 [ %15, %11 ], [ %23, %20 ]
  %18 = and i64 %17, 256
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = or i64 %17, 256
  %22 = cmpxchg volatile i64* %14, i64 %17, i64 %21 release monotonic
  %23 = extractvalue { i64, i1 } %22, 0
  %24 = extractvalue { i64, i1 } %22, 1
  br i1 %24, label %25, label %16

25:                                               ; preds = %16, %20, %3
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %6 = load i64*, i64** %5, align 8
  br i1 %4, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds i64, i64* %6, i64 119
  br label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds i64, i64* %6, i64 73
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24NewWeakFixedArrayWithMapENS0_3MapEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64 %11, i32 %1, i8 zeroext %2)
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i64* [ %8, %7 ], [ %12, %9 ]
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870900
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = add nuw nsw i32 %1, 11
  %8 = and i32 %7, -4
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 11
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %8, i8 zeroext %2, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %12 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = shl i32 %1, 1
  %19 = add i64 %14, 3
  %20 = inttoptr i64 %19 to i32*
  store atomic volatile i32 %18, i32* %20 monotonic, align 4
  %21 = ashr exact i32 %18, 1
  %22 = add nuw nsw i32 %21, 8
  %23 = sext i32 %22 to i64
  %24 = add i64 %15, %23
  %25 = inttoptr i64 %24 to i8*
  %26 = add nuw nsw i32 %21, 11
  %27 = and i32 %26, -4
  %28 = sub nsw i32 %27, %22
  %29 = sext i32 %28 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 %29, i1 false) #6
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %35 = bitcast %"class.v8::internal::FactoryBase.1052"* %34 to %"class.v8::internal::LocalHeap"*
  %36 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %35, i64 %14) #6
  br label %53

37:                                               ; preds = %6
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %39 = bitcast %"class.v8::internal::FactoryBase.1052"* %38 to %"class.v8::internal::LocalHandles"**
  %40 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %40, i64 0, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %40, i64 0, i32 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %37
  %47 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %40) #6
  %48 = load i64*, i64** %41, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi i64* [ %48, %46 ], [ %42, %37 ]
  %51 = phi i64* [ %47, %46 ], [ %42, %37 ]
  %52 = getelementptr inbounds i64, i64* %50, i64 1
  store i64* %52, i64** %41, align 8
  store i64 %14, i64* %51, align 8
  br label %53

53:                                               ; preds = %33, %49
  %54 = phi i64* [ %36, %33 ], [ %51, %49 ]
  ret i64* %54
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE16NewBytecodeArrayEiPKhiiNS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::FactoryBase.1052"*, i32, i8*, i32, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = icmp ugt i32 %1, 536870878
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

9:                                                ; preds = %6
  %10 = add nuw nsw i32 %1, 37
  %11 = and i32 %10, -4
  %12 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds i64, i64* %13, i64 42
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %17 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %16, i32 %11, i8 zeroext 1, i32 0) #6
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = trunc i64 %15 to i32
  store atomic volatile i32 %20, i32* %19 monotonic, align 4
  %21 = shl i32 %1, 1
  %22 = add i64 %17, 3
  %23 = inttoptr i64 %22 to i32*
  store atomic volatile i32 %21, i32* %23 monotonic, align 4
  %24 = add i64 %17, 19
  %25 = inttoptr i64 %24 to i32*
  store i32 %3, i32* %25, align 4
  %26 = shl i32 %4, 3
  %27 = add i64 %17, 23
  %28 = inttoptr i64 %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = add i64 %17, 27
  %30 = inttoptr i64 %29 to i32*
  store i32 0, i32* %30, align 4
  %31 = add i64 %17, 31
  %32 = inttoptr i64 %31 to i8*
  store i8 0, i8* %32, align 1
  %33 = add i64 %17, 32
  %34 = inttoptr i64 %33 to i8*
  store atomic volatile i8 0, i8* %34 monotonic, align 1
  %35 = load i64, i64* %5, align 8
  %36 = add i64 %17, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = trunc i64 %35 to i32
  store atomic volatile i32 %38, i32* %37 monotonic, align 4
  %39 = and i64 %35, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %9
  %42 = and i64 %17, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 262144
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = or i64 %42, 16
  %50 = inttoptr i64 %49 to %"class.v8::internal::Heap"**
  %51 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %50, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %51, i64 %17, i64 %36, i64 %35) #6
  br label %52

52:                                               ; preds = %48, %41, %9
  %53 = and i64 %35, -262144
  %54 = or i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 24
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %52
  %60 = and i64 %17, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 24
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %59
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %17, i64 %36, i64 %35) #6
  br label %67

67:                                               ; preds = %52, %59, %66
  %68 = load i64*, i64** %12, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 107
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %17, 11
  %72 = inttoptr i64 %71 to i32*
  %73 = trunc i64 %70 to i32
  store atomic volatile i32 %73, i32* %72 monotonic, align 4
  %74 = load i64*, i64** %12, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %17, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = trunc i64 %76 to i32
  store atomic volatile i32 %79, i32* %78 release, align 4
  %80 = add i64 %17, 33
  %81 = inttoptr i64 %80 to i8*
  %82 = sext i32 %1 to i64
  %83 = icmp eq i32 %1, 0
  br i1 %83, label %150, label %84

84:                                               ; preds = %67
  %85 = icmp ult i32 %1, 8
  br i1 %85, label %86, label %136

86:                                               ; preds = %84
  %87 = add nsw i64 %82, -1
  %88 = and i64 %82, 7
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %86, %90
  %91 = phi i8* [ %96, %90 ], [ %2, %86 ]
  %92 = phi i64 [ %95, %90 ], [ %82, %86 ]
  %93 = phi i8* [ %98, %90 ], [ %81, %86 ]
  %94 = phi i64 [ %99, %90 ], [ %88, %86 ]
  %95 = add i64 %92, -1
  %96 = getelementptr inbounds i8, i8* %91, i64 1
  %97 = load i8, i8* %91, align 1
  %98 = getelementptr inbounds i8, i8* %93, i64 1
  store i8 %97, i8* %93, align 1
  %99 = add i64 %94, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %90, !llvm.loop !10

101:                                              ; preds = %90, %86
  %102 = phi i8* [ %2, %86 ], [ %96, %90 ]
  %103 = phi i64 [ %82, %86 ], [ %95, %90 ]
  %104 = phi i8* [ %81, %86 ], [ %98, %90 ]
  %105 = icmp ult i64 %87, 7
  br i1 %105, label %150, label %106

106:                                              ; preds = %101, %106
  %107 = phi i8* [ %132, %106 ], [ %102, %101 ]
  %108 = phi i64 [ %131, %106 ], [ %103, %101 ]
  %109 = phi i8* [ %134, %106 ], [ %104, %101 ]
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  store i8 %111, i8* %109, align 1
  %113 = getelementptr inbounds i8, i8* %107, i64 2
  %114 = load i8, i8* %110, align 1
  %115 = getelementptr inbounds i8, i8* %109, i64 2
  store i8 %114, i8* %112, align 1
  %116 = getelementptr inbounds i8, i8* %107, i64 3
  %117 = load i8, i8* %113, align 1
  %118 = getelementptr inbounds i8, i8* %109, i64 3
  store i8 %117, i8* %115, align 1
  %119 = getelementptr inbounds i8, i8* %107, i64 4
  %120 = load i8, i8* %116, align 1
  %121 = getelementptr inbounds i8, i8* %109, i64 4
  store i8 %120, i8* %118, align 1
  %122 = getelementptr inbounds i8, i8* %107, i64 5
  %123 = load i8, i8* %119, align 1
  %124 = getelementptr inbounds i8, i8* %109, i64 5
  store i8 %123, i8* %121, align 1
  %125 = getelementptr inbounds i8, i8* %107, i64 6
  %126 = load i8, i8* %122, align 1
  %127 = getelementptr inbounds i8, i8* %109, i64 6
  store i8 %126, i8* %124, align 1
  %128 = getelementptr inbounds i8, i8* %107, i64 7
  %129 = load i8, i8* %125, align 1
  %130 = getelementptr inbounds i8, i8* %109, i64 7
  store i8 %129, i8* %127, align 1
  %131 = add i64 %108, -8
  %132 = getelementptr inbounds i8, i8* %107, i64 8
  %133 = load i8, i8* %128, align 1
  %134 = getelementptr inbounds i8, i8* %109, i64 8
  store i8 %133, i8* %130, align 1
  %135 = icmp eq i64 %131, 0
  br i1 %135, label %150, label %106, !llvm.loop !11

136:                                              ; preds = %84
  switch i64 %82, label %149 [
    i64 16, label %148
    i64 15, label %147
    i64 14, label %146
    i64 13, label %145
    i64 12, label %144
    i64 11, label %143
    i64 10, label %142
    i64 8, label %137
    i64 9, label %141
  ]

137:                                              ; preds = %136
  %138 = bitcast i8* %2 to i64*
  %139 = inttoptr i64 %80 to i64*
  %140 = load i64, i64* %138, align 1
  store i64 %140, i64* %139, align 1
  br label %150

141:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 9, i1 false) #6
  br label %150

142:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 10, i1 false) #6
  br label %150

143:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 11, i1 false) #6
  br label %150

144:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 12, i1 false) #6
  br label %150

145:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 13, i1 false) #6
  br label %150

146:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 14, i1 false) #6
  br label %150

147:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 15, i1 false) #6
  br label %150

148:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 16, i1 false) #6
  br label %150

149:                                              ; preds = %136
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %2, i64 %82, i1 false) #6
  br label %150

150:                                              ; preds = %101, %106, %67, %137, %141, %142, %143, %144, %145, %146, %147, %148, %149
  %151 = load i32, i32* %23, align 4
  %152 = ashr i32 %151, 1
  %153 = add nsw i32 %152, 34
  %154 = sext i32 %153 to i64
  %155 = add i64 %18, %154
  %156 = inttoptr i64 %155 to i8*
  %157 = add nsw i32 %152, 37
  %158 = and i32 %157, -4
  %159 = sub nsw i32 %158, %153
  %160 = sext i32 %159 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %156, i8 0, i64 %160, i1 false) #6
  %161 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %150
  %165 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %166 = bitcast %"class.v8::internal::FactoryBase.1052"* %165 to %"class.v8::internal::LocalHeap"*
  %167 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %166, i64 %17) #6
  br label %184

168:                                              ; preds = %150
  %169 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %170 = bitcast %"class.v8::internal::FactoryBase.1052"* %169 to %"class.v8::internal::LocalHandles"**
  %171 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %171, i64 0, i32 0, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %171, i64 0, i32 0, i32 1
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %173, %175
  br i1 %176, label %177, label %180

177:                                              ; preds = %168
  %178 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %171) #6
  %179 = load i64*, i64** %172, align 8
  br label %180

180:                                              ; preds = %177, %168
  %181 = phi i64* [ %179, %177 ], [ %173, %168 ]
  %182 = phi i64* [ %178, %177 ], [ %173, %168 ]
  %183 = getelementptr inbounds i64, i64* %181, i64 1
  store i64* %183, i64** %172, align 8
  store i64 %17, i64* %182, align 8
  br label %184

184:                                              ; preds = %164, %180
  %185 = phi i64* [ %167, %164 ], [ %182, %180 ]
  ret i64* %185
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewObjectBoilerplateDescriptionEiiib(%"class.v8::internal::FactoryBase.1052"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = sub nsw i32 %2, %3
  %7 = zext i1 %4 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ne i32 %8, %1
  %10 = shl nsw i32 %1, 1
  %11 = or i32 %10, 1
  %12 = zext i1 %9 to i32
  %13 = add nsw i32 %11, %12
  %14 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 41
  %17 = getelementptr inbounds i64, i64* %15, i64 4
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %16, i32 %13, i64* %17, i8 zeroext 1) #6
  br i1 %9, label %19, label %37

19:                                               ; preds = %5
  %20 = load i64, i64* %18, align 8
  %21 = sext i32 %8 to i64
  %22 = add nsw i64 %21, 1073741824
  %23 = icmp ult i64 %22, 2147483648
  br i1 %23, label %25, label %24, !prof !8

24:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

25:                                               ; preds = %19
  %26 = add i64 %20, 3
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 1
  %30 = shl i32 %8, 1
  %31 = shl i32 %29, 2
  %32 = add i32 %31, -4
  %33 = sext i32 %32 to i64
  %34 = add i64 %20, 7
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i32*
  store atomic volatile i32 %30, i32* %36 monotonic, align 4
  br label %37

37:                                               ; preds = %25, %5
  %38 = load i64, i64* %18, align 8
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  store atomic volatile i32 0, i32* %40 monotonic, align 4
  ret i64* %18
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE30NewArrayBoilerplateDescriptionENS0_12ElementsKindENS0_6HandleINS0_14FixedArrayBaseEEE(%"class.v8::internal::FactoryBase.1052"*, i8 zeroext, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 91) #6
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %8 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds i64, i64* %5, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %8, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %13 to i32
  %17 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %16, i64 2, i32* %15) #6, !srcloc !3
  %18 = zext i8 %1 to i32
  %19 = shl nuw nsw i32 %18, 1
  store atomic volatile i32 %19, i32* %15 monotonic, align 4
  %20 = load i64, i64* %2, align 8
  %21 = add i64 %8, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %20 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = and i64 %20, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %3
  %27 = and i64 %8, -262144
  %28 = or i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 262144
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = or i64 %27, 16
  %35 = inttoptr i64 %34 to %"class.v8::internal::Heap"**
  %36 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %35, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %36, i64 %8, i64 %21, i64 %20) #6
  br label %37

37:                                               ; preds = %33, %26, %3
  %38 = and i64 %20, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = and i64 %8, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 24
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %44
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %21, i64 %20) #6
  br label %52

52:                                               ; preds = %37, %44, %51
  %53 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %58 = bitcast %"class.v8::internal::FactoryBase.1052"* %57 to %"class.v8::internal::LocalHeap"*
  %59 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %58, i64 %8) #6
  br label %76

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %62 = bitcast %"class.v8::internal::FactoryBase.1052"* %61 to %"class.v8::internal::LocalHandles"**
  %63 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %63, i64 0, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %63, i64 0, i32 0, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %60
  %70 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %63) #6
  %71 = load i64*, i64** %64, align 8
  br label %72

72:                                               ; preds = %69, %60
  %73 = phi i64* [ %71, %69 ], [ %65, %60 ]
  %74 = phi i64* [ %70, %69 ], [ %65, %60 ]
  %75 = getelementptr inbounds i64, i64* %73, i64 1
  store i64* %75, i64** %64, align 8
  store i64 %8, i64* %74, align 8
  br label %76

76:                                               ; preds = %56, %72
  %77 = phi i64* [ %59, %56 ], [ %74, %72 ]
  ret i64* %77
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewRegExpBoilerplateDescriptionENS0_6HandleINS0_10FixedArrayEEENS4_INS0_6StringEEENS0_3SmiE(%"class.v8::internal::FactoryBase.1052"*, i64*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %6 = load i64*, i64** %5, align 8
  %7 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %6, i16 zeroext 111) #6
  %8 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %9 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %8, i32 16, i8 zeroext 1, i32 0) #6
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %7 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  %13 = getelementptr inbounds i64, i64* %6, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %9, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %14 to i32
  %18 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %17, i64 3, i32* %16) #6, !srcloc !3
  %19 = load i64, i64* %1, align 8
  %20 = trunc i64 %19 to i32
  store atomic volatile i32 %20, i32* %16 monotonic, align 4
  %21 = and i64 %19, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %4
  %24 = and i64 %9, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 262144
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = or i64 %24, 16
  %32 = inttoptr i64 %31 to %"class.v8::internal::Heap"**
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %32, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %33, i64 %9, i64 %15, i64 %19) #6
  br label %34

34:                                               ; preds = %30, %23, %4
  %35 = and i64 %19, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %34
  %42 = and i64 %9, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %9, i64 %15, i64 %19) #6
  br label %49

49:                                               ; preds = %34, %41, %48
  %50 = load i64, i64* %2, align 8
  %51 = add i64 %9, 7
  %52 = inttoptr i64 %51 to i32*
  %53 = trunc i64 %50 to i32
  store atomic volatile i32 %53, i32* %52 monotonic, align 4
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  %57 = and i64 %9, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 262144
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = or i64 %57, 16
  %65 = inttoptr i64 %64 to %"class.v8::internal::Heap"**
  %66 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %65, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %66, i64 %9, i64 %51, i64 %50) #6
  br label %67

67:                                               ; preds = %63, %56, %49
  %68 = and i64 %50, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = and i64 %9, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %9, i64 %51, i64 %50) #6
  br label %82

82:                                               ; preds = %67, %74, %81
  %83 = trunc i64 %3 to i32
  %84 = and i32 %83, -2
  %85 = add i64 %9, 11
  %86 = inttoptr i64 %85 to i32*
  store atomic volatile i32 %84, i32* %86 monotonic, align 4
  %87 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %92 = bitcast %"class.v8::internal::FactoryBase.1052"* %91 to %"class.v8::internal::LocalHeap"*
  %93 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %92, i64 %9) #6
  br label %110

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %96 = bitcast %"class.v8::internal::FactoryBase.1052"* %95 to %"class.v8::internal::LocalHandles"**
  %97 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %97, i64 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %97, i64 0, i32 0, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %99, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %97) #6
  %105 = load i64*, i64** %98, align 8
  br label %106

106:                                              ; preds = %103, %94
  %107 = phi i64* [ %105, %103 ], [ %99, %94 ]
  %108 = phi i64* [ %104, %103 ], [ %99, %94 ]
  %109 = getelementptr inbounds i64, i64* %107, i64 1
  store i64* %109, i64** %98, align 8
  store i64 %9, i64* %108, align 8
  br label %110

110:                                              ; preds = %90, %106
  %111 = phi i64* [ %93, %90 ], [ %108, %106 ]
  ret i64* %111
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTemplateObjectDescriptionENS0_6HandleINS0_10FixedArrayEEES6_(%"class.v8::internal::FactoryBase.1052"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 115) #6
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %8 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds i64, i64* %5, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %8, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %13 to i32
  %17 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %16, i64 2, i32* %15) #6, !srcloc !3
  %18 = load i64, i64* %1, align 8
  %19 = trunc i64 %18 to i32
  store atomic volatile i32 %19, i32* %15 monotonic, align 4
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %3
  %23 = and i64 %8, -262144
  %24 = or i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = or i64 %23, 16
  %31 = inttoptr i64 %30 to %"class.v8::internal::Heap"**
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %32, i64 %8, i64 %14, i64 %18) #6
  br label %33

33:                                               ; preds = %29, %22, %3
  %34 = and i64 %18, -262144
  %35 = or i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %33
  %41 = and i64 %8, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %14, i64 %18) #6
  br label %48

48:                                               ; preds = %33, %40, %47
  %49 = load i64, i64* %2, align 8
  %50 = add i64 %8, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = trunc i64 %49 to i32
  store atomic volatile i32 %52, i32* %51 monotonic, align 4
  %53 = and i64 %49, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %48
  %56 = and i64 %8, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 262144
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = or i64 %56, 16
  %64 = inttoptr i64 %63 to %"class.v8::internal::Heap"**
  %65 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %64, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %65, i64 %8, i64 %50, i64 %49) #6
  br label %66

66:                                               ; preds = %62, %55, %48
  %67 = and i64 %49, -262144
  %68 = or i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 24
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %66
  %74 = and i64 %8, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %73
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %8, i64 %50, i64 %49) #6
  br label %81

81:                                               ; preds = %66, %73, %80
  %82 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %87 = bitcast %"class.v8::internal::FactoryBase.1052"* %86 to %"class.v8::internal::LocalHeap"*
  %88 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %87, i64 %8) #6
  br label %105

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %91 = bitcast %"class.v8::internal::FactoryBase.1052"* %90 to %"class.v8::internal::LocalHandles"**
  %92 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %92, i64 0, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %92, i64 0, i32 0, i32 1
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %94, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %89
  %99 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %92) #6
  %100 = load i64*, i64** %93, align 8
  br label %101

101:                                              ; preds = %98, %89
  %102 = phi i64* [ %100, %98 ], [ %94, %89 ]
  %103 = phi i64* [ %99, %98 ], [ %94, %89 ]
  %104 = getelementptr inbounds i64, i64* %102, i64 1
  store i64* %104, i64** %93, align 8
  store i64 %8, i64* %103, align 8
  br label %105

105:                                              ; preds = %85, %101
  %106 = phi i64* [ %88, %85 ], [ %103, %101 ]
  ret i64* %106
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase.1052"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %4 = tail call i32 @_ZN2v88internal12LocalIsolate15GetNextScriptIdEv(%"class.v8::internal::LocalIsolate"* %3) #6
  %5 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase.1052"* %0, i64* %1, i32 %4)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase.1052"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 112) #6
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %8 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %7, i32 64, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds i64, i64* %5, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %8, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %13 to i32
  %17 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %16, i64 15, i32* %15) #6, !srcloc !3
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %23 = bitcast %"class.v8::internal::FactoryBase.1052"* %22 to %"class.v8::internal::LocalHeap"*
  %24 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %23, i64 %8) #6
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 3
  %27 = inttoptr i64 %26 to i32*
  br label %44

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %30 = bitcast %"class.v8::internal::FactoryBase.1052"* %29 to %"class.v8::internal::LocalHandles"**
  %31 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %31, i64 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %31, i64 0, i32 0, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %31) #6
  %39 = load i64*, i64** %32, align 8
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i64* [ %39, %37 ], [ %33, %28 ]
  %42 = phi i64* [ %38, %37 ], [ %33, %28 ]
  %43 = getelementptr inbounds i64, i64* %41, i64 1
  store i64* %43, i64** %32, align 8
  store i64 %8, i64* %42, align 8
  br label %44

44:                                               ; preds = %21, %40
  %45 = phi i32* [ %27, %21 ], [ %15, %40 ]
  %46 = phi i64 [ %26, %21 ], [ %14, %40 ]
  %47 = phi i64 [ %25, %21 ], [ %8, %40 ]
  %48 = phi i64* [ %24, %21 ], [ %42, %40 ]
  %49 = load i64, i64* %1, align 8
  %50 = trunc i64 %49 to i32
  store atomic volatile i32 %50, i32* %45 monotonic, align 4
  %51 = and i64 %49, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %44
  %54 = and i64 %47, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %47, i64 %46, i64 %49) #6
  br label %64

64:                                               ; preds = %60, %53, %44
  %65 = and i64 %49, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %64
  %72 = and i64 %47, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %47, i64 %46, i64 %49) #6
  br label %79

79:                                               ; preds = %64, %71, %78
  %80 = load i64, i64* %12, align 8
  %81 = add i64 %47, 7
  %82 = inttoptr i64 %81 to i32*
  %83 = trunc i64 %80 to i32
  store atomic volatile i32 %83, i32* %82 monotonic, align 4
  %84 = shl i32 %2, 1
  %85 = add i64 %47, 31
  %86 = inttoptr i64 %85 to i32*
  store atomic volatile i32 %84, i32* %86 monotonic, align 4
  %87 = add i64 %47, 11
  %88 = inttoptr i64 %87 to i32*
  store atomic volatile i32 0, i32* %88 monotonic, align 4
  %89 = add i64 %47, 15
  %90 = inttoptr i64 %89 to i32*
  store atomic volatile i32 0, i32* %90 monotonic, align 4
  %91 = load i64, i64* %12, align 8
  %92 = add i64 %47, 19
  %93 = inttoptr i64 %92 to i32*
  %94 = trunc i64 %91 to i32
  store atomic volatile i32 %94, i32* %93 monotonic, align 4
  %95 = add i64 %47, 23
  %96 = inttoptr i64 %95 to i32*
  store atomic volatile i32 4, i32* %96 monotonic, align 4
  %97 = load i64, i64* %12, align 8
  %98 = add i64 %47, 27
  %99 = inttoptr i64 %98 to i32*
  %100 = trunc i64 %97 to i32
  store atomic volatile i32 %100, i32* %99 monotonic, align 4
  %101 = load i64, i64* %12, align 8
  %102 = add i64 %47, 35
  %103 = inttoptr i64 %102 to i32*
  %104 = trunc i64 %101 to i32
  store atomic volatile i32 %104, i32* %103 monotonic, align 4
  %105 = add i64 %47, 39
  %106 = inttoptr i64 %105 to i32*
  store atomic volatile i32 0, i32* %106 monotonic, align 4
  %107 = getelementptr inbounds i64, i64* %5, i64 119
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %47, 43
  %110 = inttoptr i64 %109 to i32*
  %111 = trunc i64 %108 to i32
  store atomic volatile i32 %111, i32* %110 monotonic, align 4
  %112 = add i64 %47, 47
  %113 = inttoptr i64 %112 to i32*
  store atomic volatile i32 0, i32* %113 monotonic, align 4
  %114 = getelementptr inbounds i64, i64* %5, i64 29
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %47, 59
  %117 = inttoptr i64 %116 to i32*
  %118 = trunc i64 %115 to i32
  store atomic volatile i32 %118, i32* %117 monotonic, align 4
  %119 = icmp eq i32 %2, -2
  br i1 %119, label %121, label %120

120:                                              ; preds = %79
  tail call void @_ZN2v88internal12LocalFactory15AddToScriptListENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::LocalFactory"* %7, i64* %48) #6
  br label %121

121:                                              ; preds = %79, %120
  %122 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 152
  %126 = bitcast %"class.v8::internal::FactoryBase.1052"* %125 to %"class.v8::internal::LocalLogger"**
  %127 = load %"class.v8::internal::LocalLogger"*, %"class.v8::internal::LocalLogger"** %126, align 8
  tail call void @_ZN2v88internal11LocalLogger11ScriptEventENS0_6Logger15ScriptEventTypeEi(%"class.v8::internal::LocalLogger"* %127, i32 1, i32 %2) #6
  br label %128

128:                                              ; preds = %121, %124
  ret i64* %48
}

declare i32 @_ZN2v88internal12LocalIsolate15GetNextScriptIdEv(%"class.v8::internal::LocalIsolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal12LocalFactory15AddToScriptListENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::LocalFactory"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal11LocalLogger11ScriptEventENS0_6Logger15ScriptEventTypeEi(%"class.v8::internal::LocalLogger"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE31NewSharedFunctionInfoForLiteralEPNS0_15FunctionLiteralENS0_6HandleINS0_6ScriptEEEb(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::FunctionLiteral"*, i64*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %6 = tail call zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"* %1) #6
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %8 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 7
  %9 = load %"class.v8::internal::AstConsString"*, %"class.v8::internal::AstConsString"** %8, align 8
  %10 = icmp eq %"class.v8::internal::AstConsString"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = tail call i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"* nonnull %9, %"class.v8::internal::LocalIsolate"* %7) #6
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i64* [ %12, %11 ], [ null, %4 ]
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %14, i64* null, i32 85, i8 zeroext %6)
  tail call void @_ZN2v88internal18SharedFunctionInfo23InitFromFunctionLiteralINS0_12LocalIsolateEEEvPT_NS0_6HandleIS1_EEPNS0_15FunctionLiteralEb(%"class.v8::internal::LocalIsolate"* %7, i64* %15, %"class.v8::internal::FunctionLiteral"* %1, i1 zeroext %3) #6
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = load i64, i64* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %5, i64 0, i32 0
  %20 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  call void @_ZN2v88internal18SharedFunctionInfo9SetScriptENS0_13ReadOnlyRootsENS0_10HeapObjectEib(%"class.v8::internal::SharedFunctionInfo"* nonnull %19, i64* %21, i64 %22, i32 %24, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  ret i64* %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE(%"class.v8::internal::FactoryBase.1052"*, i64*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::ScopeInfo", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 19
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = add i64 %11, 3
  %14 = inttoptr i64 %13 to i8*
  %15 = load atomic i8, i8* %14 monotonic, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 2
  %18 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %19 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %18, i32 %17, i8 zeroext 1, i32 0) #6
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %11 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %23, align 8
  %24 = load i64*, i64** %8, align 8
  call void @_ZN2v88internal18SharedFunctionInfo4InitENS0_13ReadOnlyRootsEi(%"class.v8::internal::SharedFunctionInfo"* nonnull %7, i64* %24, i32 -1) #6
  %25 = load i64, i64* %23, align 8
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHeap"*
  %32 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %31, i64 %25) #6
  br label %49

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %35 = bitcast %"class.v8::internal::FactoryBase.1052"* %34 to %"class.v8::internal::LocalHandles"**
  %36 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %36) #6
  %44 = load i64*, i64** %37, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i64* [ %44, %42 ], [ %38, %33 ]
  %47 = phi i64* [ %43, %42 ], [ %38, %33 ]
  %48 = getelementptr inbounds i64, i64* %46, i64 1
  store i64* %48, i64** %37, align 8
  store i64 %25, i64* %47, align 8
  br label %49

49:                                               ; preds = %29, %45
  %50 = phi i64* [ %32, %29 ], [ %47, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64* %1, null
  br i1 %52, label %83, label %53

53:                                               ; preds = %49
  %54 = load i64, i64* %1, align 8
  %55 = add i64 %51, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = trunc i64 %54 to i32
  store atomic volatile i32 %57, i32* %56 release, align 4
  %58 = and i64 %54, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 262144
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = or i64 %61, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::Heap"**
  %70 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %69, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %70, i64 %51, i64 %55, i64 %54) #6
  br label %71

71:                                               ; preds = %67, %60
  %72 = and i64 %54, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %71
  %79 = load i64, i64* %63, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %51, i64 %55, i64 %54) #6
  br label %83

83:                                               ; preds = %82, %78, %71, %53, %49
  %84 = icmp eq i64* %2, null
  br i1 %84, label %115, label %85

85:                                               ; preds = %83
  %86 = load i64, i64* %2, align 8
  %87 = add i64 %51, 3
  %88 = inttoptr i64 %87 to i32*
  %89 = trunc i64 %86 to i32
  store atomic volatile i32 %89, i32* %88 release, align 4
  %90 = and i64 %86, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %124, label %92

92:                                               ; preds = %85
  %93 = and i64 %51, -262144
  %94 = or i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 262144
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %92
  %100 = or i64 %93, 16
  %101 = inttoptr i64 %100 to %"class.v8::internal::Heap"**
  %102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %101, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %102, i64 %51, i64 %87, i64 %86) #6
  br label %103

103:                                              ; preds = %99, %92
  %104 = and i64 %86, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 24
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %124, label %110

110:                                              ; preds = %103
  %111 = load i64, i64* %95, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %110
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %51, i64 %87, i64 %86) #6
  br label %124

115:                                              ; preds = %83
  %116 = icmp ult i32 %3, 1711
  br i1 %116, label %120, label %117

117:                                              ; preds = %115
  %118 = add i64 %51, 3
  %119 = inttoptr i64 %118 to i32*
  br label %124

120:                                              ; preds = %115
  %121 = shl i32 %3, 1
  %122 = add i64 %51, 3
  %123 = inttoptr i64 %122 to i32*
  store atomic volatile i32 %121, i32* %123 release, align 4
  br label %124

124:                                              ; preds = %117, %114, %110, %103, %85, %120
  %125 = phi i32* [ %119, %117 ], [ %88, %114 ], [ %88, %110 ], [ %88, %103 ], [ %88, %85 ], [ %123, %120 ]
  %126 = load atomic i32, i32* %125 acquire, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = load atomic i32, i32* %125 acquire, align 4
  %131 = ashr i32 %130, 1
  switch i32 %131, label %132 [
    i32 159, label %152
    i32 85, label %152
  ]

132:                                              ; preds = %129
  br label %152

133:                                              ; preds = %124
  %134 = and i64 %51, -4294967296
  %135 = load atomic i32, i32* %125 acquire, align 4
  %136 = zext i32 %135 to i64
  %137 = and i64 %136, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = or i64 %134, %136
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %134, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = icmp eq i16 %148, 83
  %150 = zext i1 %149 to i32
  %151 = shl nuw nsw i32 %150, 24
  br label %152

152:                                              ; preds = %129, %129, %132, %133, %139
  %153 = phi i32 [ 16777216, %132 ], [ 0, %129 ], [ 0, %129 ], [ 0, %133 ], [ %151, %139 ]
  %154 = add i64 %51, 27
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, -16777217
  %158 = or i32 %157, %153
  store atomic volatile i32 %158, i32* %155 monotonic, align 4
  %159 = load atomic i32, i32* %155 monotonic, align 4
  %160 = and i32 %159, -1056
  %161 = zext i8 %4 to i32
  %162 = add i8 %4, -3
  %163 = icmp ult i8 %162, 4
  %164 = zext i1 %163 to i32
  %165 = shl nuw nsw i32 %164, 10
  %166 = or i32 %165, %161
  %167 = or i32 %166, %160
  store atomic volatile i32 %167, i32* %155 monotonic, align 4
  %168 = load atomic i32, i32* %155 monotonic, align 4
  %169 = and i32 %168, 64
  %170 = icmp eq i32 %169, 0
  %171 = load atomic i32, i32* %155 monotonic, align 4
  %172 = trunc i32 %171 to i8
  %173 = and i8 %172, 31
  %174 = and i64 %51, -4294967296
  %175 = add i64 %51, 7
  %176 = inttoptr i64 %175 to i32*
  %177 = load atomic i32, i32* %176 acquire, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %174, %178
  %180 = and i64 %178, 1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %196, label %182

182:                                              ; preds = %152
  %183 = add i64 %179, -1
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %174, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = icmp eq i16 %190, 178
  br i1 %191, label %192, label %196

192:                                              ; preds = %182
  %193 = bitcast %"class.v8::internal::ScopeInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #6
  %194 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %179, i64* %194, align 8
  %195 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #6
  br label %198

196:                                              ; preds = %182, %152
  %197 = icmp ne i32 %177, 0
  br label %198

198:                                              ; preds = %196, %192
  %199 = phi i1 [ %195, %192 ], [ %197, %196 ]
  %200 = add nsw i8 %173, -3
  %201 = icmp ult i8 %200, 4
  br i1 %201, label %230, label %202

202:                                              ; preds = %198
  %203 = add nsw i8 %173, -16
  %204 = icmp ult i8 %203, 6
  br i1 %204, label %205, label %209

205:                                              ; preds = %202
  %206 = add nsw i8 %173, -12
  %207 = icmp ult i8 %206, 7
  %208 = select i1 %207, i32 198, i32 196
  br label %223

209:                                              ; preds = %202
  %210 = add nsw i8 %173, -2
  %211 = icmp ult i8 %210, 24
  br i1 %211, label %214, label %212

212:                                              ; preds = %214, %209
  %213 = select i1 %170, i32 185, i32 189
  br label %223

214:                                              ; preds = %209
  %215 = zext i8 %210 to i32
  %216 = lshr i32 15744993, %215
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %212, label %219

219:                                              ; preds = %214
  %220 = sext i8 %210 to i64
  %221 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoENS0_11MaybeHandleINS0_6StringEEENS4_INS0_10HeapObjectEEEiNS0_12FunctionKindE, i64 0, i64 %220
  %222 = load i32, i32* %221, align 4
  br label %223

223:                                              ; preds = %219, %212, %205
  %224 = phi i32 [ %208, %205 ], [ %213, %212 ], [ %222, %219 ]
  %225 = xor i1 %199, true
  %226 = zext i1 %225 to i32
  %227 = add nuw nsw i32 %224, %226
  %228 = shl nuw nsw i32 %227, 14
  %229 = add nsw i32 %228, -3031040
  br label %230

230:                                              ; preds = %198, %223
  %231 = phi i32 [ %229, %223 ], [ 245760, %198 ]
  %232 = load atomic i32, i32* %155 monotonic, align 4
  %233 = and i32 %232, -507905
  %234 = or i32 %233, %231
  store atomic volatile i32 %234, i32* %155 monotonic, align 4
  ret i64* %50
}

declare void @_ZN2v88internal18SharedFunctionInfo23InitFromFunctionLiteralINS0_12LocalIsolateEEEvPT_NS0_6HandleIS1_EEPNS0_15FunctionLiteralEb(%"class.v8::internal::LocalIsolate"*, i64*, %"class.v8::internal::FunctionLiteral"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase.1052"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = add i32 %1, 15
  %5 = and i32 %4, -4
  %6 = shl i32 %2, 2
  %7 = add nsw i32 %5, %6
  %8 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 57
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %13 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %12, i32 %7, i8 zeroext 1, i32 0) #6
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %11 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = add i64 %13, 3
  %18 = inttoptr i64 %17 to i32*
  store i32 %1, i32* %18, align 4
  %19 = add i64 %13, 7
  %20 = inttoptr i64 %19 to i32*
  store i32 %2, i32* %20, align 4
  %21 = load i32, i32* %18, align 4
  %22 = add i32 %21, 15
  %23 = and i32 %22, -4
  %24 = sext i32 %23 to i64
  %25 = add i64 %14, %24
  %26 = load i64*, i64** %8, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 6
  %28 = load i64, i64* %27, align 8
  %29 = sext i32 %2 to i64
  %30 = inttoptr i64 %25 to i32*
  %31 = trunc i64 %28 to i32
  %32 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %31, i64 %29, i32* %30) #6, !srcloc !3
  %33 = load i32, i32* %18, align 4
  %34 = add i32 %33, 15
  %35 = and i32 %34, -4
  %36 = sub i32 -12, %33
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %3
  %40 = sext i32 %33 to i64
  %41 = add i64 %13, 11
  %42 = add i64 %41, %40
  %43 = inttoptr i64 %42 to i8*
  %44 = sext i32 %37 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 %44, i1 false) #6
  br label %45

45:                                               ; preds = %3, %39
  %46 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %51 = bitcast %"class.v8::internal::FactoryBase.1052"* %50 to %"class.v8::internal::LocalHeap"*
  %52 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %51, i64 %13) #6
  br label %69

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %55 = bitcast %"class.v8::internal::FactoryBase.1052"* %54 to %"class.v8::internal::LocalHandles"**
  %56 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %56, i64 0, i32 0, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %53
  %63 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %56) #6
  %64 = load i64*, i64** %57, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi i64* [ %64, %62 ], [ %58, %53 ]
  %67 = phi i64* [ %63, %62 ], [ %58, %53 ]
  %68 = getelementptr inbounds i64, i64* %66, i64 1
  store i64* %68, i64** %57, align 8
  store i64 %13, i64* %67, align 8
  br label %69

69:                                               ; preds = %49, %65
  %70 = phi i64* [ %52, %49 ], [ %67, %65 ]
  ret i64* %70
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::FactoryBase.1052"*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::TorqueGeneratedFactory.1053"*
  %6 = tail call i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_12LocalFactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEiiNS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory.1053"* %5, i64* %1, i32 %2, i32 %3, i8 zeroext 1) #6
  ret i64* %6
}

declare i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_12LocalFactoryEE36NewUncompiledDataWithoutPreparseDataENS0_6HandleINS0_6StringEEEiiNS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory.1053"*, i64*, i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEE(%"class.v8::internal::FactoryBase.1052"*, i64*, i32, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::TorqueGeneratedFactory.1053"*
  %7 = tail call i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_12LocalFactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEENS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory.1053"* %6, i64* %1, i32 %2, i32 %3, i64* %4, i8 zeroext 1) #6
  ret i64* %7
}

declare i64* @_ZN2v88internal22TorqueGeneratedFactoryINS0_12LocalFactoryEE33NewUncompiledDataWithPreparseDataENS0_6HandleINS0_6StringEEEiiNS4_INS0_12PreparseDataEEENS0_14AllocationTypeE(%"class.v8::internal::TorqueGeneratedFactory.1053"*, i64*, i32, i32, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %4
  %7 = add nsw i32 %1, -1
  %8 = sdiv i32 %7, 6
  %9 = shl nsw i32 %8, 2
  %10 = add i32 %9, 19
  %11 = and i32 %10, -4
  br label %12

12:                                               ; preds = %4, %6
  %13 = phi i32 [ %11, %6 ], [ 12, %4 ]
  %14 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 38
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %19 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %18, i32 %13, i8 zeroext %3, i32 0) #6
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %17 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = add i64 %19, 3
  %24 = inttoptr i64 %23 to i32*
  store i32 %1, i32* %24, align 4
  %25 = add i64 %19, 7
  %26 = inttoptr i64 %25 to i32*
  store i32 %2, i32* %26, align 4
  %27 = add nsw i32 %13, -12
  %28 = add i64 %19, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %27 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %30, i1 false)
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %36 = bitcast %"class.v8::internal::FactoryBase.1052"* %35 to %"class.v8::internal::LocalHeap"*
  %37 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %36, i64 %19) #6
  br label %54

38:                                               ; preds = %12
  %39 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %40 = bitcast %"class.v8::internal::FactoryBase.1052"* %39 to %"class.v8::internal::LocalHandles"**
  %41 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %41, i64 0, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %41, i64 0, i32 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %41) #6
  %49 = load i64*, i64** %42, align 8
  br label %50

50:                                               ; preds = %47, %38
  %51 = phi i64* [ %49, %47 ], [ %43, %38 ]
  %52 = phi i64* [ %48, %47 ], [ %43, %38 ]
  %53 = getelementptr inbounds i64, i64* %51, i64 1
  store i64* %53, i64** %42, align 8
  store i64 %19, i64* %52, align 8
  br label %54

54:                                               ; preds = %34, %50
  %55 = phi i64* [ %37, %34 ], [ %52, %50 ]
  ret i64* %55
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewCoverageInfoERKNS0_10ZoneVectorINS0_11SourceRangeEEE(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::ZoneVector"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::CoverageInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.v8::internal::SourceRange"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = or i32 %13, 8
  %15 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 44
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::CoverageInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %21 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %20, i32 %14, i8 zeroext 1, i32 0) #6
  %22 = add i64 %21, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = trunc i64 %18 to i32
  store atomic volatile i32 %24, i32* %23 monotonic, align 4
  %25 = getelementptr inbounds %"class.v8::internal::CoverageInfo", %"class.v8::internal::CoverageInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %25, align 8
  %26 = add i64 %21, 3
  %27 = inttoptr i64 %26 to i32*
  store i32 %11, i32* %27, align 4
  %28 = icmp sgt i32 %11, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = and i64 %10, 4294967295
  br label %59

32:                                               ; preds = %59, %2
  %33 = load i64, i64* %25, align 8
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %39 = bitcast %"class.v8::internal::FactoryBase.1052"* %38 to %"class.v8::internal::LocalHeap"*
  %40 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %39, i64 %33) #6
  br label %57

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %43 = bitcast %"class.v8::internal::FactoryBase.1052"* %42 to %"class.v8::internal::LocalHandles"**
  %44 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %44, i64 0, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %44, i64 0, i32 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %41
  %51 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %44) #6
  %52 = load i64*, i64** %45, align 8
  br label %53

53:                                               ; preds = %50, %41
  %54 = phi i64* [ %52, %50 ], [ %46, %41 ]
  %55 = phi i64* [ %51, %50 ], [ %46, %41 ]
  %56 = getelementptr inbounds i64, i64* %54, i64 1
  store i64* %56, i64** %45, align 8
  store i64 %33, i64* %55, align 8
  br label %57

57:                                               ; preds = %37, %53
  %58 = phi i64* [ %40, %37 ], [ %55, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  ret i64* %58

59:                                               ; preds = %59, %29
  %60 = phi i64 [ 0, %29 ], [ %67, %59 ]
  %61 = load %"struct.v8::internal::SourceRange"*, %"struct.v8::internal::SourceRange"** %30, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %61, i64 %60, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.v8::internal::SourceRange", %"struct.v8::internal::SourceRange"* %61, i64 %60, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = trunc i64 %60 to i32
  call void @_ZN2v88internal12CoverageInfo14InitializeSlotEiii(%"class.v8::internal::CoverageInfo"* nonnull %3, i32 %66, i32 %63, i32 %65) #6
  %67 = add nuw nsw i64 %60, 1
  %68 = icmp eq i64 %67, %31
  br i1 %68, label %32, label %59
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::Vector"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %5 = bitcast %"class.v8::internal::SequentialStringKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %14, i32 %17, i64 %12) #6
  %19 = zext i1 %2 to i8
  %20 = load i64, i64* %15, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 1
  store i32 %18, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 2
  store i32 %21, i32* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1
  %26 = bitcast %"class.v8::internal::Vector"* %25 to i8*
  %27 = bitcast %"class.v8::internal::Vector"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #6
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 2
  store i8 %19, i8* %28, align 8
  %29 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::Isolate"**
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %33, align 8
  %35 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %34, %"class.v8::internal::LocalIsolate"* %29, %"class.v8::internal::SequentialStringKey"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret i64* %35
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17InternalizeStringERKNS0_6VectorIKtEEb(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::Vector.1134"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey.1132", align 8
  %5 = bitcast %"class.v8::internal::SequentialStringKey.1132"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %14, i32 %17, i64 %12) #6
  %19 = zext i1 %2 to i8
  %20 = load i64, i64* %15, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 1
  store i32 %18, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 0, i32 2
  store i32 %21, i32* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 1
  %26 = bitcast %"class.v8::internal::Vector.1134"* %25 to i8*
  %27 = bitcast %"class.v8::internal::Vector.1134"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #6
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %4, i64 0, i32 2
  store i8 %19, i8* %28, align 8
  %29 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::Isolate"**
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %33, align 8
  %35 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %34, %"class.v8::internal::LocalIsolate"* %29, %"class.v8::internal::SequentialStringKey.1132"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret i64* %35
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewOneByteInternalizedStringERKNS0_6VectorIKhEEj(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::Vector"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %6, 536870889
  br i1 %7, label %9, label %8, !prof !8

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 17
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i32 %6, 15
  %15 = and i32 %14, -4
  %16 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %17 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %16, i32 %15, i8 zeroext 1, i32 0) #6
  %18 = add i64 %17, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = trunc i64 %13 to i32
  store atomic volatile i32 %20, i32* %19 monotonic, align 4
  %21 = add i64 %17, 7
  %22 = inttoptr i64 %21 to i32*
  store i32 %6, i32* %22, align 4
  %23 = add i64 %17, 3
  %24 = inttoptr i64 %23 to i32*
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %30 = bitcast %"class.v8::internal::FactoryBase.1052"* %29 to %"class.v8::internal::LocalHeap"*
  %31 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %30, i64 %17) #6
  %32 = load i64, i64* %31, align 8
  br label %49

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %35 = bitcast %"class.v8::internal::FactoryBase.1052"* %34 to %"class.v8::internal::LocalHandles"**
  %36 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %36) #6
  %44 = load i64*, i64** %37, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i64* [ %44, %42 ], [ %38, %33 ]
  %47 = phi i64* [ %43, %42 ], [ %38, %33 ]
  %48 = getelementptr inbounds i64, i64* %46, i64 1
  store i64* %48, i64** %37, align 8
  store i64 %17, i64* %47, align 8
  br label %49

49:                                               ; preds = %28, %45
  %50 = phi i64 [ %32, %28 ], [ %17, %45 ]
  %51 = phi i64* [ %31, %28 ], [ %47, %45 ]
  %52 = add i64 %50, 11
  %53 = inttoptr i64 %52 to i8*
  %54 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %1, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = load i64, i64* %4, align 8
  %57 = shl i64 %56, 32
  %58 = ashr exact i64 %57, 32
  switch i64 %58, label %85 [
    i64 1, label %59
    i64 2, label %61
    i64 3, label %65
    i64 4, label %66
    i64 5, label %70
    i64 6, label %71
    i64 7, label %72
    i64 8, label %73
    i64 9, label %77
    i64 10, label %78
    i64 11, label %79
    i64 12, label %80
    i64 13, label %81
    i64 14, label %82
    i64 15, label %83
    i64 16, label %84
  ]

59:                                               ; preds = %49
  %60 = load i8, i8* %55, align 1
  store i8 %60, i8* %53, align 1
  br label %86

61:                                               ; preds = %49
  %62 = bitcast i8* %55 to i16*
  %63 = inttoptr i64 %52 to i16*
  %64 = load i16, i16* %62, align 1
  store i16 %64, i16* %63, align 1
  br label %86

65:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 3, i1 false) #6
  br label %86

66:                                               ; preds = %49
  %67 = bitcast i8* %55 to i32*
  %68 = inttoptr i64 %52 to i32*
  %69 = load i32, i32* %67, align 1
  store i32 %69, i32* %68, align 1
  br label %86

70:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 5, i1 false) #6
  br label %86

71:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 6, i1 false) #6
  br label %86

72:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 7, i1 false) #6
  br label %86

73:                                               ; preds = %49
  %74 = bitcast i8* %55 to i64*
  %75 = inttoptr i64 %52 to i64*
  %76 = load i64, i64* %74, align 1
  store i64 %76, i64* %75, align 1
  br label %86

77:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 9, i1 false) #6
  br label %86

78:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 10, i1 false) #6
  br label %86

79:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 11, i1 false) #6
  br label %86

80:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 12, i1 false) #6
  br label %86

81:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 13, i1 false) #6
  br label %86

82:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 14, i1 false) #6
  br label %86

83:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 15, i1 false) #6
  br label %86

84:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 16, i1 false) #6
  br label %86

85:                                               ; preds = %49
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %55, i64 %58, i1 false) #6
  br label %86

86:                                               ; preds = %85, %84, %83, %82, %81, %80, %79, %78, %77, %73, %72, %71, %70, %66, %65, %61, %59
  ret i64* %51
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36AllocateRawOneByteInternalizedStringEij(%"class.v8::internal::FactoryBase.1052"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 536870889
  br i1 %4, label %6, label %5, !prof !8

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 17
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i32 %1, 15
  %12 = and i32 %11, -4
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %12, i8 zeroext 1, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %10 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = add i64 %14, 7
  %19 = inttoptr i64 %18 to i32*
  store i32 %1, i32* %19, align 4
  %20 = add i64 %14, 3
  %21 = inttoptr i64 %20 to i32*
  store i32 %2, i32* %21, align 4
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %26 to %"class.v8::internal::LocalHeap"*
  %28 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %27, i64 %14) #6
  br label %45

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHandles"**
  %32 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %32) #6
  %40 = load i64*, i64** %33, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i64* [ %40, %38 ], [ %34, %29 ]
  %43 = phi i64* [ %39, %38 ], [ %34, %29 ]
  %44 = getelementptr inbounds i64, i64* %42, i64 1
  store i64* %44, i64** %33, align 8
  store i64 %14, i64* %43, align 8
  br label %45

45:                                               ; preds = %25, %41
  %46 = phi i64* [ %28, %25 ], [ %43, %41 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28NewTwoByteInternalizedStringERKNS0_6VectorIKtEEj(%"class.v8::internal::FactoryBase.1052"*, %"class.v8::internal::Vector.1134"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %6, 536870889
  br i1 %7, label %9, label %8, !prof !8

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 87
  %13 = load i64, i64* %12, align 8
  %14 = shl i32 %6, 1
  %15 = add i32 %14, 15
  %16 = and i32 %15, -4
  %17 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %18 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %17, i32 %16, i8 zeroext 1, i32 0) #6
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = trunc i64 %13 to i32
  store atomic volatile i32 %21, i32* %20 monotonic, align 4
  %22 = add i64 %18, 7
  %23 = inttoptr i64 %22 to i32*
  store i32 %6, i32* %23, align 4
  %24 = add i64 %18, 3
  %25 = inttoptr i64 %24 to i32*
  store i32 %2, i32* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHeap"*
  %32 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %31, i64 %18) #6
  %33 = load i64, i64* %32, align 8
  br label %50

34:                                               ; preds = %9
  %35 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %36 = bitcast %"class.v8::internal::FactoryBase.1052"* %35 to %"class.v8::internal::LocalHandles"**
  %37 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %37, i64 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %37, i64 0, i32 0, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = icmp eq i64* %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %37) #6
  %45 = load i64*, i64** %38, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i64* [ %45, %43 ], [ %39, %34 ]
  %48 = phi i64* [ %44, %43 ], [ %39, %34 ]
  %49 = getelementptr inbounds i64, i64* %47, i64 1
  store i64* %49, i64** %38, align 8
  store i64 %18, i64* %48, align 8
  br label %50

50:                                               ; preds = %29, %46
  %51 = phi i64 [ %33, %29 ], [ %18, %46 ]
  %52 = phi i64* [ %32, %29 ], [ %48, %46 ]
  %53 = add i64 %51, 11
  %54 = inttoptr i64 %53 to i8*
  %55 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %1, i64 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = bitcast i16* %56 to i8*
  %58 = load i64, i64* %4, align 8
  %59 = trunc i64 %58 to i32
  %60 = shl nsw i32 %59, 1
  %61 = sext i32 %60 to i64
  switch i64 %61, label %78 [
    i64 16, label %77
    i64 2, label %62
    i64 12, label %75
    i64 4, label %65
    i64 14, label %76
    i64 6, label %69
    i64 10, label %74
    i64 8, label %70
  ]

62:                                               ; preds = %50
  %63 = inttoptr i64 %53 to i16*
  %64 = load i16, i16* %56, align 1
  store i16 %64, i16* %63, align 1
  br label %79

65:                                               ; preds = %50
  %66 = bitcast i16* %56 to i32*
  %67 = inttoptr i64 %53 to i32*
  %68 = load i32, i32* %66, align 1
  store i32 %68, i32* %67, align 1
  br label %79

69:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 6, i1 false) #6
  br label %79

70:                                               ; preds = %50
  %71 = bitcast i16* %56 to i64*
  %72 = inttoptr i64 %53 to i64*
  %73 = load i64, i64* %71, align 1
  store i64 %73, i64* %72, align 1
  br label %79

74:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 10, i1 false) #6
  br label %79

75:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 12, i1 false) #6
  br label %79

76:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 14, i1 false) #6
  br label %79

77:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 16, i1 false) #6
  br label %79

78:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %57, i64 %61, i1 false) #6
  br label %79

79:                                               ; preds = %78, %77, %76, %75, %74, %70, %69, %65, %62
  ret i64* %52
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE36AllocateRawTwoByteInternalizedStringEij(%"class.v8::internal::FactoryBase.1052"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 536870889
  br i1 %4, label %6, label %5, !prof !8

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 87
  %10 = load i64, i64* %9, align 8
  %11 = shl i32 %1, 1
  %12 = add i32 %11, 15
  %13 = and i32 %12, -4
  %14 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %15 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %14, i32 %13, i8 zeroext 1, i32 0) #6
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %10 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = add i64 %15, 7
  %20 = inttoptr i64 %19 to i32*
  store i32 %1, i32* %20, align 4
  %21 = add i64 %15, 3
  %22 = inttoptr i64 %21 to i32*
  store i32 %2, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %28 = bitcast %"class.v8::internal::FactoryBase.1052"* %27 to %"class.v8::internal::LocalHeap"*
  %29 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %28, i64 %15) #6
  br label %46

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %32 = bitcast %"class.v8::internal::FactoryBase.1052"* %31 to %"class.v8::internal::LocalHandles"**
  %33 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %33) #6
  %41 = load i64*, i64** %34, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i64* [ %41, %39 ], [ %35, %30 ]
  %44 = phi i64* [ %40, %39 ], [ %35, %30 ]
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  store i64* %45, i64** %34, align 8
  store i64 %15, i64* %44, align 8
  br label %46

46:                                               ; preds = %26, %42
  %47 = phi i64* [ %29, %26 ], [ %44, %42 ]
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870888
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = add nuw nsw i32 %1, 15
  %8 = and i32 %7, -4
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 16
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %8, i8 zeroext %2, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %12 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = add i64 %14, 7
  %19 = inttoptr i64 %18 to i32*
  store i32 %1, i32* %19, align 4
  %20 = add i64 %14, 3
  %21 = inttoptr i64 %20 to i32*
  store i32 3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %26 to %"class.v8::internal::LocalHeap"*
  %28 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %27, i64 %14) #6
  br label %45

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHandles"**
  %32 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %32) #6
  %40 = load i64*, i64** %33, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i64* [ %40, %38 ], [ %34, %29 ]
  %43 = phi i64* [ %39, %38 ], [ %34, %29 ]
  %44 = getelementptr inbounds i64, i64* %42, i64 1
  store i64* %44, i64** %33, align 8
  store i64 %14, i64* %43, align 8
  br label %45

45:                                               ; preds = %41, %25
  %46 = phi i64* [ %28, %25 ], [ %43, %41 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal12LocalFactory27NewInvalidStringLengthErrorEv(%"class.v8::internal::LocalFactory"*) local_unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 536870888
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 1
  %8 = add nuw nsw i32 %7, 15
  %9 = and i32 %8, -4
  %10 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 78
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %15 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %14, i32 %9, i8 zeroext %2, i32 0) #6
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %13 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = add i64 %15, 7
  %20 = inttoptr i64 %19 to i32*
  store i32 %1, i32* %20, align 4
  %21 = add i64 %15, 3
  %22 = inttoptr i64 %21 to i32*
  store i32 3, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %28 = bitcast %"class.v8::internal::FactoryBase.1052"* %27 to %"class.v8::internal::LocalHeap"*
  %29 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %28, i64 %15) #6
  br label %46

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %32 = bitcast %"class.v8::internal::FactoryBase.1052"* %31 to %"class.v8::internal::LocalHandles"**
  %33 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %33) #6
  %41 = load i64*, i64** %34, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i64* [ %41, %39 ], [ %35, %30 ]
  %44 = phi i64* [ %40, %39 ], [ %35, %30 ]
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  store i64* %45, i64** %34, align 8
  store i64 %15, i64* %44, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi i64* [ %29, %26 ], [ %44, %42 ]
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64*, i64*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::StringShape", align 4
  %8 = alloca %"class.v8::internal::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::StringShape", align 4
  %11 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %12 = load i64, i64* %1, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp ult i16 %21, 64
  br i1 %22, label %23, label %61

23:                                               ; preds = %4
  %24 = load atomic i32, i32* %15 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %13, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = and i16 %29, 7
  %31 = icmp eq i16 %30, 5
  br i1 %31, label %32, label %61

32:                                               ; preds = %23
  %33 = add i64 %12, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %13, %36
  %38 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %43 = bitcast %"class.v8::internal::FactoryBase.1052"* %42 to %"class.v8::internal::LocalHeap"*
  %44 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %43, i64 %37) #6
  br label %61

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %47 = bitcast %"class.v8::internal::FactoryBase.1052"* %46 to %"class.v8::internal::LocalHandles"**
  %48 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %48, i64 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %48, i64 0, i32 0, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %45
  %55 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %48) #6
  %56 = load i64*, i64** %49, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi i64* [ %56, %54 ], [ %50, %45 ]
  %59 = phi i64* [ %55, %54 ], [ %50, %45 ]
  %60 = getelementptr inbounds i64, i64* %58, i64 1
  store i64* %60, i64** %49, align 8
  store i64 %37, i64* %59, align 8
  br label %61

61:                                               ; preds = %4, %57, %41, %23
  %62 = phi i64* [ %1, %23 ], [ %44, %41 ], [ %59, %57 ], [ %1, %4 ]
  %63 = load i64, i64* %2, align 8
  %64 = and i64 %63, -4294967296
  %65 = add i64 %63, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp ult i16 %72, 64
  br i1 %73, label %74, label %112

74:                                               ; preds = %61
  %75 = load atomic i32, i32* %66 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %64, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = and i16 %80, 7
  %82 = icmp eq i16 %81, 5
  br i1 %82, label %83, label %112

83:                                               ; preds = %74
  %84 = add i64 %63, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %64, %87
  %89 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %94 = bitcast %"class.v8::internal::FactoryBase.1052"* %93 to %"class.v8::internal::LocalHeap"*
  %95 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %94, i64 %88) #6
  br label %112

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %98 = bitcast %"class.v8::internal::FactoryBase.1052"* %97 to %"class.v8::internal::LocalHandles"**
  %99 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %99, i64 0, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %99, i64 0, i32 0, i32 1
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %101, %103
  br i1 %104, label %105, label %108

105:                                              ; preds = %96
  %106 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %99) #6
  %107 = load i64*, i64** %100, align 8
  br label %108

108:                                              ; preds = %105, %96
  %109 = phi i64* [ %107, %105 ], [ %101, %96 ]
  %110 = phi i64* [ %106, %105 ], [ %101, %96 ]
  %111 = getelementptr inbounds i64, i64* %109, i64 1
  store i64* %111, i64** %100, align 8
  store i64 %88, i64* %110, align 8
  br label %112

112:                                              ; preds = %61, %108, %92, %74
  %113 = phi i64* [ %2, %74 ], [ %95, %92 ], [ %110, %108 ], [ %2, %61 ]
  %114 = load i64, i64* %62, align 8
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %519, label %119

119:                                              ; preds = %112
  %120 = load i64, i64* %113, align 8
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %519, label %125

125:                                              ; preds = %119
  %126 = add nsw i32 %123, %117
  %127 = icmp eq i32 %126, 2
  br i1 %127, label %128, label %192

128:                                              ; preds = %125
  %129 = icmp eq %"class.v8::internal::FactoryBase.1052"* %0, null
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %136 = bitcast %"class.v8::internal::FactoryBase.1052"* %135 to %"class.v8::internal::Isolate"**
  %137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 17
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %138) #6
  br label %139

139:                                              ; preds = %134, %130, %128
  %140 = phi %"class.v8::base::SharedMutex"* [ null, %128 ], [ %138, %134 ], [ null, %130 ]
  %141 = phi i1 [ true, %128 ], [ false, %134 ], [ true, %130 ]
  %142 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #6
  store i32 0, i32* %9, align 4
  %143 = bitcast %"class.v8::internal::StringShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #6
  %144 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %10, i64 0, i32 0
  %145 = and i64 %114, -4294967296
  %146 = add i64 %114, -1
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 acquire, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %145, %149
  %151 = add i64 %150, 7
  %152 = inttoptr i64 %151 to i16*
  %153 = load atomic i16, i16* %152 monotonic, align 2
  %154 = zext i16 %153 to i32
  store i32 %154, i32* %144, align 4
  %155 = bitcast %"class.v8::internal::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #6
  %156 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %114, i64* %156, align 8
  %157 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %10, %"class.v8::internal::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #6
  br i1 %141, label %159, label %158

158:                                              ; preds = %139
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %140) #6
  br label %159

159:                                              ; preds = %139, %158
  %160 = load i64, i64* %113, align 8
  br i1 %129, label %170, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %170

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %167 = bitcast %"class.v8::internal::FactoryBase.1052"* %166 to %"class.v8::internal::Isolate"**
  %168 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %168, i64 0, i32 17
  call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %169) #6
  br label %170

170:                                              ; preds = %165, %161, %159
  %171 = phi %"class.v8::base::SharedMutex"* [ null, %159 ], [ %169, %165 ], [ null, %161 ]
  %172 = phi i1 [ true, %159 ], [ false, %165 ], [ true, %161 ]
  %173 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #6
  store i32 0, i32* %6, align 4
  %174 = bitcast %"class.v8::internal::StringShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #6
  %175 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %7, i64 0, i32 0
  %176 = and i64 %160, -4294967296
  %177 = add i64 %160, -1
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 acquire, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %176, %180
  %182 = add i64 %181, 7
  %183 = inttoptr i64 %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = zext i16 %184 to i32
  store i32 %185, i32* %175, align 4
  %186 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #6
  %187 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %160, i64* %187, align 8
  %188 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %7, %"class.v8::internal::String"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #6
  br i1 %172, label %190, label %189

189:                                              ; preds = %170
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %171) #6
  br label %190

190:                                              ; preds = %170, %189
  %191 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28MakeOrFindTwoCharacterStringEtt(%"class.v8::internal::FactoryBase.1052"* %0, i16 zeroext %157, i16 zeroext %188)
  br label %519

192:                                              ; preds = %125
  %193 = icmp ugt i32 %126, 536870888
  br i1 %193, label %194, label %197

194:                                              ; preds = %192
  %195 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %196 = tail call i64* @_ZN2v88internal12LocalFactory27NewInvalidStringLengthErrorEv(%"class.v8::internal::LocalFactory"* %195)
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

197:                                              ; preds = %192
  %198 = and i64 %114, -4294967296
  %199 = add i64 %114, -1
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %198, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = and i64 %120, -4294967296
  %208 = add i64 %120, -1
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = zext i32 %210 to i64
  %212 = or i64 %207, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load atomic i16, i16* %214 monotonic, align 2
  %216 = and i16 %206, 8
  %217 = and i16 %216, %215
  %218 = icmp ne i16 %217, 0
  %219 = icmp slt i32 %126, 13
  br i1 %219, label %220, label %517

220:                                              ; preds = %197
  br i1 %218, label %221, label %435

221:                                              ; preds = %220
  %222 = add nuw nsw i32 %126, 15
  %223 = and i32 %222, -4
  %224 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %225 = load i64*, i64** %224, align 8
  %226 = getelementptr inbounds i64, i64* %225, i64 16
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %229 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %228, i32 %223, i8 zeroext %3, i32 0) #6
  %230 = add i64 %229, -1
  %231 = inttoptr i64 %230 to i32*
  %232 = trunc i64 %227 to i32
  store atomic volatile i32 %232, i32* %231 monotonic, align 4
  %233 = add i64 %229, 7
  %234 = inttoptr i64 %233 to i32*
  store i32 %126, i32* %234, align 4
  %235 = add i64 %229, 3
  %236 = inttoptr i64 %235 to i32*
  store i32 3, i32* %236, align 4
  %237 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %244, label %240

240:                                              ; preds = %221
  %241 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %242 = bitcast %"class.v8::internal::FactoryBase.1052"* %241 to %"class.v8::internal::LocalHeap"*
  %243 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %242, i64 %229) #6
  br label %260

244:                                              ; preds = %221
  %245 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %246 = bitcast %"class.v8::internal::FactoryBase.1052"* %245 to %"class.v8::internal::LocalHandles"**
  %247 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %247, i64 0, i32 0, i32 0
  %249 = load i64*, i64** %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %247, i64 0, i32 0, i32 1
  %251 = load i64*, i64** %250, align 8
  %252 = icmp eq i64* %249, %251
  br i1 %252, label %253, label %256

253:                                              ; preds = %244
  %254 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %247) #6
  %255 = load i64*, i64** %248, align 8
  br label %256

256:                                              ; preds = %253, %244
  %257 = phi i64* [ %255, %253 ], [ %249, %244 ]
  %258 = phi i64* [ %254, %253 ], [ %249, %244 ]
  %259 = getelementptr inbounds i64, i64* %257, i64 1
  store i64* %259, i64** %248, align 8
  store i64 %229, i64* %258, align 8
  br label %260

260:                                              ; preds = %240, %256
  %261 = phi i64* [ %243, %240 ], [ %258, %256 ]
  %262 = icmp eq i64* %261, null
  br i1 %262, label %263, label %264, !prof !9

263:                                              ; preds = %260
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

264:                                              ; preds = %260
  %265 = icmp eq %"class.v8::internal::FactoryBase.1052"* %0, null
  br i1 %265, label %274, label %266

266:                                              ; preds = %264
  %267 = load i8, i8* %237, align 8, !range !2
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %274

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %271 = bitcast %"class.v8::internal::FactoryBase.1052"* %270 to %"class.v8::internal::Isolate"**
  %272 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %271, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %272, i64 0, i32 17
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %273) #6
  br label %274

274:                                              ; preds = %264, %266, %269
  %275 = phi i8 [ 0, %264 ], [ 1, %269 ], [ 0, %266 ]
  %276 = phi %"class.v8::base::SharedMutex"* [ null, %264 ], [ %273, %269 ], [ null, %266 ]
  %277 = load i64, i64* %261, align 8
  %278 = add i64 %277, 11
  %279 = inttoptr i64 %278 to i8*
  %280 = load i64, i64* %62, align 8
  %281 = and i64 %280, -4294967296
  %282 = add i64 %280, -1
  %283 = inttoptr i64 %282 to i32*
  %284 = load atomic i32, i32* %283 acquire, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %281, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = and i16 %289, 7
  %291 = icmp eq i16 %290, 2
  br i1 %291, label %292, label %322

292:                                              ; preds = %274
  %293 = load atomic i32, i32* %283 monotonic, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %281, %294
  %296 = add i64 %295, 7
  %297 = inttoptr i64 %296 to i16*
  %298 = load atomic i16, i16* %297 monotonic, align 2
  %299 = and i16 %298, 16
  %300 = icmp eq i16 %299, 0
  %301 = add i64 %280, 11
  %302 = inttoptr i64 %301 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %300, label %315, label %303

303:                                              ; preds = %292
  %304 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %302, align 1
  %305 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %304, i64 0, i32 0
  %306 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %304 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %307 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %306, align 8
  %308 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %307, i64 2
  %309 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %308, align 8
  %310 = tail call zeroext i1 %309(%"class.v8::String::ExternalStringResourceBase"* %305) #6
  br i1 %310, label %311, label %315

311:                                              ; preds = %303
  %312 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %302, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %312) #6
  %313 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %312, i64 0, i32 1
  %314 = load i8*, i8** %313, align 8
  br label %325

315:                                              ; preds = %303, %292
  %316 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %302, align 1
  %317 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %316 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %318 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %317, align 8
  %319 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %318, i64 6
  %320 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %319, align 8
  %321 = tail call i8* %320(%"class.v8::String::ExternalOneByteStringResource"* %316) #6
  br label %325

322:                                              ; preds = %274
  %323 = add i64 %280, 11
  %324 = inttoptr i64 %323 to i8*
  br label %325

325:                                              ; preds = %311, %315, %322
  %326 = phi i8* [ %324, %322 ], [ %314, %311 ], [ %321, %315 ]
  %327 = sext i32 %117 to i64
  switch i64 %327, label %354 [
    i64 1, label %328
    i64 2, label %330
    i64 3, label %334
    i64 4, label %335
    i64 5, label %339
    i64 6, label %340
    i64 7, label %341
    i64 8, label %342
    i64 9, label %346
    i64 10, label %347
    i64 11, label %348
    i64 12, label %349
    i64 13, label %350
    i64 14, label %351
    i64 15, label %352
    i64 16, label %353
    i64 0, label %355
  ]

328:                                              ; preds = %325
  %329 = load i8, i8* %326, align 1
  store i8 %329, i8* %279, align 1
  br label %355

330:                                              ; preds = %325
  %331 = bitcast i8* %326 to i16*
  %332 = inttoptr i64 %278 to i16*
  %333 = load i16, i16* %331, align 1
  store i16 %333, i16* %332, align 1
  br label %355

334:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 3, i1 false) #6
  br label %355

335:                                              ; preds = %325
  %336 = bitcast i8* %326 to i32*
  %337 = inttoptr i64 %278 to i32*
  %338 = load i32, i32* %336, align 1
  store i32 %338, i32* %337, align 1
  br label %355

339:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 5, i1 false) #6
  br label %355

340:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 6, i1 false) #6
  br label %355

341:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 7, i1 false) #6
  br label %355

342:                                              ; preds = %325
  %343 = bitcast i8* %326 to i64*
  %344 = inttoptr i64 %278 to i64*
  %345 = load i64, i64* %343, align 1
  store i64 %345, i64* %344, align 1
  br label %355

346:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 9, i1 false) #6
  br label %355

347:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 10, i1 false) #6
  br label %355

348:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 11, i1 false) #6
  br label %355

349:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 12, i1 false) #6
  br label %355

350:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 13, i1 false) #6
  br label %355

351:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 14, i1 false) #6
  br label %355

352:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 15, i1 false) #6
  br label %355

353:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 16, i1 false) #6
  br label %355

354:                                              ; preds = %325
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %326, i64 %327, i1 false) #6
  br label %355

355:                                              ; preds = %325, %328, %330, %334, %335, %339, %340, %341, %342, %346, %347, %348, %349, %350, %351, %352, %353, %354
  %356 = load i64, i64* %113, align 8
  %357 = and i64 %356, -4294967296
  %358 = add i64 %356, -1
  %359 = inttoptr i64 %358 to i32*
  %360 = load atomic i32, i32* %359 acquire, align 4
  %361 = zext i32 %360 to i64
  %362 = or i64 %357, %361
  %363 = add i64 %362, 7
  %364 = inttoptr i64 %363 to i16*
  %365 = load atomic i16, i16* %364 monotonic, align 2
  %366 = and i16 %365, 7
  %367 = icmp eq i16 %366, 2
  br i1 %367, label %368, label %398

368:                                              ; preds = %355
  %369 = load atomic i32, i32* %359 monotonic, align 4
  %370 = zext i32 %369 to i64
  %371 = or i64 %357, %370
  %372 = add i64 %371, 7
  %373 = inttoptr i64 %372 to i16*
  %374 = load atomic i16, i16* %373 monotonic, align 2
  %375 = and i16 %374, 16
  %376 = icmp eq i16 %375, 0
  %377 = add i64 %356, 11
  %378 = inttoptr i64 %377 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %376, label %391, label %379

379:                                              ; preds = %368
  %380 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %378, align 1
  %381 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %380, i64 0, i32 0
  %382 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %380 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %383 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %382, align 8
  %384 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %383, i64 2
  %385 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %384, align 8
  %386 = tail call zeroext i1 %385(%"class.v8::String::ExternalStringResourceBase"* %381) #6
  br i1 %386, label %387, label %391

387:                                              ; preds = %379
  %388 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %378, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %388) #6
  %389 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %388, i64 0, i32 1
  %390 = load i8*, i8** %389, align 8
  br label %401

391:                                              ; preds = %379, %368
  %392 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %378, align 1
  %393 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %392 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %394 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %393, align 8
  %395 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %394, i64 6
  %396 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %395, align 8
  %397 = tail call i8* %396(%"class.v8::String::ExternalOneByteStringResource"* %392) #6
  br label %401

398:                                              ; preds = %355
  %399 = add i64 %356, 11
  %400 = inttoptr i64 %399 to i8*
  br label %401

401:                                              ; preds = %387, %391, %398
  %402 = phi i8* [ %400, %398 ], [ %390, %387 ], [ %397, %391 ]
  %403 = getelementptr inbounds i8, i8* %279, i64 %327
  %404 = sext i32 %123 to i64
  switch i64 %404, label %431 [
    i64 1, label %405
    i64 2, label %407
    i64 3, label %411
    i64 4, label %412
    i64 5, label %416
    i64 6, label %417
    i64 7, label %418
    i64 8, label %419
    i64 9, label %423
    i64 10, label %424
    i64 11, label %425
    i64 12, label %426
    i64 13, label %427
    i64 14, label %428
    i64 15, label %429
    i64 16, label %430
    i64 0, label %432
  ]

405:                                              ; preds = %401
  %406 = load i8, i8* %402, align 1
  store i8 %406, i8* %403, align 1
  br label %432

407:                                              ; preds = %401
  %408 = bitcast i8* %402 to i16*
  %409 = bitcast i8* %403 to i16*
  %410 = load i16, i16* %408, align 1
  store i16 %410, i16* %409, align 1
  br label %432

411:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 3, i1 false) #6
  br label %432

412:                                              ; preds = %401
  %413 = bitcast i8* %402 to i32*
  %414 = bitcast i8* %403 to i32*
  %415 = load i32, i32* %413, align 1
  store i32 %415, i32* %414, align 1
  br label %432

416:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 5, i1 false) #6
  br label %432

417:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 6, i1 false) #6
  br label %432

418:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 7, i1 false) #6
  br label %432

419:                                              ; preds = %401
  %420 = bitcast i8* %402 to i64*
  %421 = bitcast i8* %403 to i64*
  %422 = load i64, i64* %420, align 1
  store i64 %422, i64* %421, align 1
  br label %432

423:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 9, i1 false) #6
  br label %432

424:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 10, i1 false) #6
  br label %432

425:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 11, i1 false) #6
  br label %432

426:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 12, i1 false) #6
  br label %432

427:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 13, i1 false) #6
  br label %432

428:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 14, i1 false) #6
  br label %432

429:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 15, i1 false) #6
  br label %432

430:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 16, i1 false) #6
  br label %432

431:                                              ; preds = %401
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %403, i8* align 1 %402, i64 %404, i1 false) #6
  br label %432

432:                                              ; preds = %401, %405, %407, %411, %412, %416, %417, %418, %419, %423, %424, %425, %426, %427, %428, %429, %430, %431
  %433 = icmp eq i8 %275, 0
  br i1 %433, label %519, label %434

434:                                              ; preds = %432
  tail call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %276) #6
  br label %519

435:                                              ; preds = %220
  %436 = shl i32 %126, 1
  %437 = add nuw nsw i32 %436, 15
  %438 = and i32 %437, -4
  %439 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %440 = load i64*, i64** %439, align 8
  %441 = getelementptr inbounds i64, i64* %440, i64 78
  %442 = load i64, i64* %441, align 8
  %443 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %444 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %443, i32 %438, i8 zeroext %3, i32 0) #6
  %445 = add i64 %444, -1
  %446 = inttoptr i64 %445 to i32*
  %447 = trunc i64 %442 to i32
  store atomic volatile i32 %447, i32* %446 monotonic, align 4
  %448 = add i64 %444, 7
  %449 = inttoptr i64 %448 to i32*
  store i32 %126, i32* %449, align 4
  %450 = add i64 %444, 3
  %451 = inttoptr i64 %450 to i32*
  store i32 3, i32* %451, align 4
  %452 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %453 = load i8, i8* %452, align 8, !range !2
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %459, label %455

455:                                              ; preds = %435
  %456 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %457 = bitcast %"class.v8::internal::FactoryBase.1052"* %456 to %"class.v8::internal::LocalHeap"*
  %458 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %457, i64 %444) #6
  br label %475

459:                                              ; preds = %435
  %460 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %461 = bitcast %"class.v8::internal::FactoryBase.1052"* %460 to %"class.v8::internal::LocalHandles"**
  %462 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %462, i64 0, i32 0, i32 0
  %464 = load i64*, i64** %463, align 8
  %465 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %462, i64 0, i32 0, i32 1
  %466 = load i64*, i64** %465, align 8
  %467 = icmp eq i64* %464, %466
  br i1 %467, label %468, label %471

468:                                              ; preds = %459
  %469 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %462) #6
  %470 = load i64*, i64** %463, align 8
  br label %471

471:                                              ; preds = %468, %459
  %472 = phi i64* [ %470, %468 ], [ %464, %459 ]
  %473 = phi i64* [ %469, %468 ], [ %464, %459 ]
  %474 = getelementptr inbounds i64, i64* %472, i64 1
  store i64* %474, i64** %463, align 8
  store i64 %444, i64* %473, align 8
  br label %475

475:                                              ; preds = %455, %471
  %476 = phi i64* [ %458, %455 ], [ %473, %471 ]
  %477 = icmp eq i64* %476, null
  br i1 %477, label %478, label %479, !prof !9

478:                                              ; preds = %475
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %480) #6
  store i8 0, i8* %480, align 8
  %481 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %482 = bitcast %union.anon.1174* %481 to i8*
  store i8 0, i8* %482, align 8
  %483 = icmp eq %"class.v8::internal::FactoryBase.1052"* %0, null
  br i1 %483, label %493, label %484

484:                                              ; preds = %479
  %485 = load i8, i8* %452, align 8, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %493

487:                                              ; preds = %484
  %488 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %489 = bitcast %"class.v8::internal::FactoryBase.1052"* %488 to %"class.v8::internal::Isolate"**
  %490 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %489, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %490, i64 0, i32 17
  %492 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::base::SharedMutex"* %491, %"class.v8::base::SharedMutex"** %492, align 8
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %491) #6
  store i8 1, i8* %480, align 8
  br label %493

493:                                              ; preds = %479, %484, %487
  %494 = load i64, i64* %476, align 8
  %495 = add i64 %494, 11
  %496 = inttoptr i64 %495 to i16*
  %497 = load i64, i64* %62, align 8
  %498 = add i64 %497, 7
  %499 = inttoptr i64 %498 to i32*
  %500 = load i32, i32* %499, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %497, i16* %496, i32 0, i32 %500, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %11) #6
  %501 = load i64, i64* %113, align 8
  %502 = load i64, i64* %62, align 8
  %503 = add i64 %502, 7
  %504 = inttoptr i64 %503 to i32*
  %505 = load i32, i32* %504, align 4
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds i16, i16* %496, i64 %506
  %508 = add i64 %501, 7
  %509 = inttoptr i64 %508 to i32*
  %510 = load i32, i32* %509, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %501, i16* %507, i32 0, i32 %510, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %11) #6
  %511 = load i8, i8* %480, align 8, !range !2
  %512 = icmp eq i8 %511, 0
  br i1 %512, label %516, label %513

513:                                              ; preds = %493
  %514 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %515 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %514, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %515) #6
  br label %516

516:                                              ; preds = %493, %513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %480) #6
  br label %519

517:                                              ; preds = %197
  %518 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %62, i64* %113, i32 %126, i1 zeroext %218, i8 zeroext %3)
  br label %519

519:                                              ; preds = %434, %432, %119, %112, %516, %517, %190
  %520 = phi i64* [ %191, %190 ], [ %476, %516 ], [ %518, %517 ], [ %113, %112 ], [ %62, %119 ], [ %261, %432 ], [ %261, %434 ]
  ret i64* %520
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE28MakeOrFindTwoCharacterStringEtt(%"class.v8::internal::FactoryBase.1052"*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SequentialStringKey", align 8
  %5 = alloca %"class.v8::internal::SequentialStringKey.1132", align 8
  %6 = alloca [2 x i8], align 1
  %7 = alloca [2 x i16], align 2
  %8 = or i16 %2, %1
  %9 = icmp ult i16 %8, 256
  br i1 %9, label %10, label %37

10:                                               ; preds = %3
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #6
  %12 = trunc i16 %1 to i8
  store i8 %12, i8* %11, align 1
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  %14 = trunc i16 %2 to i8
  store i8 %14, i8* %13, align 1
  %15 = bitcast %"class.v8::internal::SequentialStringKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #6
  %16 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 134
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* nonnull %11, i32 2, i64 %22) #6
  %24 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %26, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %27 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1, i32 0
  store i8* %11, i8** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 1, i32 1
  store i64 2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::SequentialStringKey", %"class.v8::internal::SequentialStringKey"* %4, i64 0, i32 2
  store i8 0, i8* %29, align 8
  %30 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %32 = bitcast %"class.v8::internal::FactoryBase.1052"* %31 to %"class.v8::internal::Isolate"**
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 5, i32 0, i32 0, i32 0
  %35 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %34, align 8
  %36 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyIhEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %35, %"class.v8::internal::LocalIsolate"* %30, %"class.v8::internal::SequentialStringKey"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #6
  br label %63

37:                                               ; preds = %3
  %38 = bitcast [2 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #6
  %39 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 0
  store i16 %1, i16* %39, align 2
  %40 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 1
  store i16 %2, i16* %40, align 2
  %41 = bitcast %"class.v8::internal::SequentialStringKey.1132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #6
  %42 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 134
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 1
  %49 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* nonnull %39, i32 2, i64 %48) #6
  %50 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 0, i32 2
  store i32 2, i32* %52, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal19SequentialStringKeyItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %53 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 1, i32 0
  store i16* %39, i16** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 1, i32 1
  store i64 2, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::SequentialStringKey.1132", %"class.v8::internal::SequentialStringKey.1132"* %5, i64 0, i32 2
  store i8 0, i8* %55, align 8
  %56 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %57 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 144
  %58 = bitcast %"class.v8::internal::FactoryBase.1052"* %57 to %"class.v8::internal::Isolate"**
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 5, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %60, align 8
  %62 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_19SequentialStringKeyItEENS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %61, %"class.v8::internal::LocalIsolate"* %56, %"class.v8::internal::SequentialStringKey.1132"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #6
  br label %63

63:                                               ; preds = %37, %10
  %64 = phi i64* [ %36, %10 ], [ %62, %37 ]
  ret i64* %64
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_ibNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64*, i64*, i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %8 = load i64*, i64** %7, align 8
  br i1 %4, label %9, label %19

9:                                                ; preds = %6
  %10 = getelementptr inbounds i64, i64* %8, i64 79
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 2
  %17 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %18 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %17, i32 %16, i8 zeroext %5, i32 0) #6
  br label %29

19:                                               ; preds = %6
  %20 = getelementptr inbounds i64, i64* %8, i64 80
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i8*
  %24 = load atomic i8, i8* %23 monotonic, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 2
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %28 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %27, i32 %26, i8 zeroext %5, i32 0) #6
  br label %29

29:                                               ; preds = %19, %9
  %30 = phi i64 [ %28, %19 ], [ %18, %9 ]
  %31 = phi i64 [ %21, %19 ], [ %11, %9 ]
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = trunc i64 %31 to i32
  store atomic volatile i32 %34, i32* %33 monotonic, align 4
  %35 = and i64 %30, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 262144
  %40 = icmp ne i64 %39, 0
  %41 = and i64 %38, 24
  %42 = icmp eq i64 %41, 0
  %43 = or i1 %40, %42
  %44 = add i64 %30, 3
  %45 = inttoptr i64 %44 to i32*
  store i32 3, i32* %45, align 4
  %46 = add i64 %30, 7
  %47 = inttoptr i64 %46 to i32*
  store i32 %3, i32* %47, align 4
  %48 = load i64, i64* %1, align 8
  %49 = add i64 %30, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %48 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  br i1 %43, label %52, label %75

52:                                               ; preds = %29
  %53 = and i64 %48, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = load i64, i64* %37, align 8
  %57 = and i64 %56, 262144
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = or i64 %35, 16
  %61 = inttoptr i64 %60 to %"class.v8::internal::Heap"**
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %61, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %62, i64 %30, i64 %49, i64 %48) #6
  br label %63

63:                                               ; preds = %59, %55, %52
  %64 = and i64 %48, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %63
  %71 = load i64, i64* %37, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %49, i64 %48) #6
  br label %80

75:                                               ; preds = %29
  %76 = load i64, i64* %2, align 8
  %77 = add i64 %30, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = trunc i64 %76 to i32
  store atomic volatile i32 %79, i32* %78 monotonic, align 4
  br label %107

80:                                               ; preds = %63, %70, %74
  %81 = load i64, i64* %2, align 8
  %82 = add i64 %30, 15
  %83 = inttoptr i64 %82 to i32*
  %84 = trunc i64 %81 to i32
  store atomic volatile i32 %84, i32* %83 monotonic, align 4
  %85 = and i64 %81, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %80
  %88 = load i64, i64* %37, align 8
  %89 = and i64 %88, 262144
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = or i64 %35, 16
  %93 = inttoptr i64 %92 to %"class.v8::internal::Heap"**
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %93, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %94, i64 %30, i64 %82, i64 %81) #6
  br label %95

95:                                               ; preds = %91, %87, %80
  %96 = and i64 %81, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %95
  %103 = load i64, i64* %37, align 8
  %104 = and i64 %103, 24
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %82, i64 %81) #6
  br label %107

107:                                              ; preds = %75, %95, %102, %106
  %108 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %113 = bitcast %"class.v8::internal::FactoryBase.1052"* %112 to %"class.v8::internal::LocalHeap"*
  %114 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %113, i64 %30) #6
  br label %131

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %117 = bitcast %"class.v8::internal::FactoryBase.1052"* %116 to %"class.v8::internal::LocalHandles"**
  %118 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %118, i64 0, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %118, i64 0, i32 0, i32 1
  %122 = load i64*, i64** %121, align 8
  %123 = icmp eq i64* %120, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %115
  %125 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %118) #6
  %126 = load i64*, i64** %119, align 8
  br label %127

127:                                              ; preds = %124, %115
  %128 = phi i64* [ %126, %124 ], [ %120, %115 ]
  %129 = phi i64* [ %125, %124 ], [ %120, %115 ]
  %130 = getelementptr inbounds i64, i64* %128, i64 1
  store i64* %130, i64** %119, align 8
  store i64 %30, i64* %129, align 8
  br label %131

131:                                              ; preds = %111, %127
  %132 = phi i64* [ %114, %111 ], [ %129, %127 ]
  ret i64* %132
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewWithImmortalMapENS0_3MapENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i64, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = add i64 %1, 3
  %5 = inttoptr i64 %4 to i8*
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw nsw i32 %7, 2
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %10 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %1 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE9NewBigIntEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 16777216
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 3
  %8 = add nuw nsw i32 %7, 8
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 40
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %8, i8 zeroext %2, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %12 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %23 = bitcast %"class.v8::internal::FactoryBase.1052"* %22 to %"class.v8::internal::LocalHeap"*
  %24 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %23, i64 %14) #6
  br label %41

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %26 to %"class.v8::internal::LocalHandles"**
  %28 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %28, i64 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %28, i64 0, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %28) #6
  %36 = load i64*, i64** %29, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i64* [ %36, %34 ], [ %30, %25 ]
  %39 = phi i64* [ %35, %34 ], [ %30, %25 ]
  %40 = getelementptr inbounds i64, i64* %38, i64 1
  store i64* %40, i64** %29, align 8
  store i64 %14, i64* %39, align 8
  br label %41

41:                                               ; preds = %21, %37
  %42 = phi i64* [ %24, %21 ], [ %39, %37 ]
  ret i64* %42
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewScopeInfoEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = add nsw i32 %4, 4
  %6 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 18
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %11 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %10, i32 %5, i8 zeroext %2, i32 0) #6
  %12 = add i64 %11, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %9 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = add i64 %11, 3
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = sext i32 %1 to i64
  %20 = inttoptr i64 %15 to i32*
  %21 = trunc i64 %18 to i32
  %22 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %21, i64 %19, i32* %20) #6, !srcloc !3
  %23 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %28 = bitcast %"class.v8::internal::FactoryBase.1052"* %27 to %"class.v8::internal::LocalHeap"*
  %29 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %28, i64 %11) #6
  br label %46

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %32 = bitcast %"class.v8::internal::FactoryBase.1052"* %31 to %"class.v8::internal::LocalHandles"**
  %33 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %33) #6
  %41 = load i64*, i64** %34, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i64* [ %41, %39 ], [ %35, %30 ]
  %44 = phi i64* [ %40, %39 ], [ %35, %30 ]
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  store i64* %45, i64** %34, align 8
  store i64 %11, i64* %44, align 8
  br label %46

46:                                               ; preds = %26, %42
  %47 = phi i64* [ %29, %26 ], [ %44, %42 ]
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewSourceTextModuleInfoEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 49
  %5 = getelementptr inbounds i64, i64* %3, i64 4
  %6 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE23NewFixedArrayWithFillerENS0_6HandleINS0_3MapEEEiNS4_INS0_7OddballEEENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i64* %4, i32 5, i64* %5, i8 zeroext 1) #6
  ret i64* %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::DescriptorArray", align 8
  %6 = add nsw i32 %2, %1
  %7 = mul i32 %6, 12
  %8 = add nsw i32 %7, 16
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 562
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %8, i8 zeroext %3, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %12 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = bitcast %"class.v8::internal::DescriptorArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %19, align 8
  %20 = load i64*, i64** %9, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 105
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i64, i64* %20, i64 4
  %24 = load i64, i64* %23, align 8
  call void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"* nonnull %5, i64 %22, i64 %24, i32 %1, i32 %2) #6
  %25 = load i64, i64* %19, align 8
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHeap"*
  %32 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %31, i64 %25) #6
  br label %49

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %35 = bitcast %"class.v8::internal::FactoryBase.1052"* %34 to %"class.v8::internal::LocalHandles"**
  %36 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %36, i64 0, i32 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %36) #6
  %44 = load i64*, i64** %37, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i64* [ %44, %42 ], [ %38, %33 ]
  %47 = phi i64* [ %43, %42 ], [ %38, %33 ]
  %48 = getelementptr inbounds i64, i64* %46, i64 1
  store i64* %48, i64** %37, align 8
  store i64 %25, i64* %47, align 8
  br label %49

49:                                               ; preds = %29, %45
  %50 = phi i64* [ %32, %29 ], [ %47, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  ret i64* %50
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase.1052"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %5, i16 zeroext 99) #6
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %8 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %7, i32 12, i8 zeroext 1, i32 0) #6
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %6 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds i64, i64* %5, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %8, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %13 to i32
  %17 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %16, i64 2, i32* %15) #6, !srcloc !3
  %18 = shl i32 %1, 1
  store atomic volatile i32 %18, i32* %15 monotonic, align 4
  %19 = shl i32 %2, 1
  %20 = add i64 %8, 7
  %21 = inttoptr i64 %20 to i32*
  store atomic volatile i32 %19, i32* %21 monotonic, align 4
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %26 to %"class.v8::internal::LocalHeap"*
  %28 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %27, i64 %8) #6
  br label %45

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHandles"**
  %32 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %32) #6
  %40 = load i64*, i64** %33, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i64* [ %40, %38 ], [ %34, %29 ]
  %43 = phi i64* [ %39, %38 ], [ %34, %29 ]
  %44 = getelementptr inbounds i64, i64* %42, i64 1
  store i64* %44, i64** %33, align 8
  store i64 %8, i64* %43, align 8
  br label %45

45:                                               ; preds = %25, %41
  %46 = phi i64* [ %28, %25 ], [ %43, %41 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewSwissNameDictionaryEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 5
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = icmp eq i32 %1, 0
  %7 = select i1 %6, i32 0, i32 4
  br label %12

8:                                                ; preds = %3
  %9 = udiv i32 %1, 7
  %10 = add nuw nsw i32 %9, %1
  %11 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %10) #6
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi i32 [ %11, %8 ], [ %7, %5 ]
  %14 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i32 %13, i8 zeroext %2)
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE34NewSwissNameDictionaryWithCapacityEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SwissNameDictionary", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 117
  br label %65

10:                                               ; preds = %3
  %11 = icmp ugt i32 %1, 38347919
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

13:                                               ; preds = %10
  %14 = icmp slt i32 %1, 257
  %15 = icmp slt i32 %1, 65537
  %16 = select i1 %15, i32 2, i32 4
  %17 = select i1 %14, i32 1, i32 %16
  %18 = sdiv i32 %1, -8
  %19 = add nuw nsw i32 %1, 2
  %20 = add nsw i32 %19, %18
  %21 = mul nsw i32 %17, %20
  %22 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"* %0, i32 %21, i8 zeroext %2)
  %24 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 67
  %27 = load i64, i64* %26, align 8
  %28 = mul i32 %1, 9
  %29 = add nuw nsw i32 %1, 32
  %30 = add nuw nsw i32 %29, %28
  %31 = bitcast %"class.v8::internal::SwissNameDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  %32 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %22, i32 %30, i8 zeroext %2, i32 0) #6
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = trunc i64 %27 to i32
  store atomic volatile i32 %35, i32* %34 monotonic, align 4
  %36 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalIsolate"*
  %38 = load i64, i64* %23, align 8
  call void @_ZN2v88internal19SwissNameDictionary10InitializeINS0_12LocalIsolateEEEvPT_NS0_9ByteArrayEi(%"class.v8::internal::SwissNameDictionary"* nonnull %4, %"class.v8::internal::LocalIsolate"* %37, i64 %38, i32 %1)
  %39 = load i64, i64* %36, align 8
  %40 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %13
  %44 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %45 = bitcast %"class.v8::internal::FactoryBase.1052"* %44 to %"class.v8::internal::LocalHeap"*
  %46 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %45, i64 %39) #6
  br label %63

47:                                               ; preds = %13
  %48 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %49 = bitcast %"class.v8::internal::FactoryBase.1052"* %48 to %"class.v8::internal::LocalHandles"**
  %50 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %50, i64 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %50, i64 0, i32 0, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %47
  %57 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %50) #6
  %58 = load i64*, i64** %51, align 8
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi i64* [ %58, %56 ], [ %52, %47 ]
  %61 = phi i64* [ %57, %56 ], [ %52, %47 ]
  %62 = getelementptr inbounds i64, i64* %60, i64 1
  store i64* %62, i64** %51, align 8
  store i64 %39, i64* %61, align 8
  br label %63

63:                                               ; preds = %43, %59
  %64 = phi i64* [ %46, %43 ], [ %61, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  br label %65

65:                                               ; preds = %63, %6
  %66 = phi i64* [ %9, %6 ], [ %64, %63 ]
  ret i64* %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SwissNameDictionary10InitializeINS0_12LocalIsolateEEEvPT_NS0_9ByteArrayEi(%"class.v8::internal::SwissNameDictionary"*, %"class.v8::internal::LocalIsolate"*, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i32*
  store i32 %3, i32* %10, align 4
  %11 = load i64, i64* %7, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = shl i32 %17, 3
  %19 = sext i32 %18 to i64
  %20 = add i64 %14, 15
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i8*
  %23 = add nsw i32 %3, 16
  %24 = sext i32 %23 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 -128, i64 %24, i1 false)
  %25 = load i64, i64* %7, align 8
  %26 = add i64 %25, 15
  %27 = getelementptr inbounds i64, i64* %6, i64 5
  %28 = load i64, i64* %27, align 8
  %29 = shl nsw i32 %3, 1
  %30 = sext i32 %29 to i64
  %31 = inttoptr i64 %26 to i32*
  %32 = trunc i64 %28 to i32
  %33 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %32, i64 %30, i32* %31) #6, !srcloc !3
  %34 = load i64, i64* %7, align 8
  %35 = add i64 %34, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %2 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  %38 = load i64, i64* %7, align 8
  %39 = add i64 %38, 11
  %40 = and i64 %2, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %4
  %43 = and i64 %38, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 262144
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %42
  %50 = or i64 %43, 16
  %51 = inttoptr i64 %50 to %"class.v8::internal::Heap"**
  %52 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %51, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %52, i64 %38, i64 %39, i64 %2) #6
  %53 = load i64, i64* %7, align 8
  %54 = add i64 %53, 11
  br label %55

55:                                               ; preds = %49, %42, %4
  %56 = phi i64 [ %54, %49 ], [ %39, %42 ], [ %39, %4 ]
  %57 = phi i64 [ %53, %49 ], [ %38, %42 ], [ %38, %4 ]
  %58 = and i64 %2, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %55
  %65 = and i64 %57, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %57, i64 %56, i64 %2) #6
  %72 = load i64, i64* %7, align 8
  %73 = add i64 %72, 11
  br label %74

74:                                               ; preds = %55, %64, %71
  %75 = phi i64 [ %56, %55 ], [ %56, %64 ], [ %73, %71 ]
  %76 = phi i64 [ %57, %55 ], [ %57, %64 ], [ %72, %71 ]
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i64 %76, -4294967296
  %81 = inttoptr i64 %75 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %80, %83
  %85 = icmp slt i32 %79, 257
  br i1 %85, label %86, label %89

86:                                               ; preds = %74
  %87 = add i64 %84, 7
  %88 = inttoptr i64 %87 to i8*
  store i8 0, i8* %88, align 1
  br label %96

89:                                               ; preds = %74
  %90 = icmp slt i32 %79, 65537
  %91 = add i64 %84, 7
  br i1 %90, label %92, label %94

92:                                               ; preds = %89
  %93 = inttoptr i64 %91 to i16*
  store i16 0, i16* %93, align 2
  br label %96

94:                                               ; preds = %89
  %95 = inttoptr i64 %91 to i32*
  store i32 0, i32* %95, align 4
  br label %96

96:                                               ; preds = %86, %92, %94
  %97 = load i64, i64* %7, align 8
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = and i64 %97, -4294967296
  %102 = add i64 %97, 11
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %101, %105
  %107 = icmp slt i32 %100, 257
  br i1 %107, label %108, label %112

108:                                              ; preds = %96
  %109 = add i64 %106, 7
  %110 = inttoptr i64 %109 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 1
  store i8 0, i8* %111, align 1
  br label %121

112:                                              ; preds = %96
  %113 = icmp slt i32 %100, 65537
  %114 = add i64 %106, 7
  br i1 %113, label %115, label %118

115:                                              ; preds = %112
  %116 = inttoptr i64 %114 to i16*
  %117 = getelementptr inbounds i16, i16* %116, i64 1
  store i16 0, i16* %117, align 2
  br label %121

118:                                              ; preds = %112
  %119 = inttoptr i64 %114 to i32*
  %120 = getelementptr inbounds i32, i32* %119, i64 1
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %108, %115, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE27NewFunctionTemplateRareDataEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %3 = load i64*, i64** %2, align 8
  %4 = tail call i64 @_ZN2v88internal3Map18GetInstanceTypeMapENS0_13ReadOnlyRootsENS0_12InstanceTypeE(i64* %3, i16 zeroext 103) #6
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %6 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %5, i32 40, i8 zeroext 1, i32 0) #6
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %4 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = getelementptr inbounds i64, i64* %3, i64 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %6, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %11 to i32
  %15 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %14, i64 9, i32* %13) #6, !srcloc !3
  %16 = load i64*, i64** %2, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 29
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %6, 35
  %20 = inttoptr i64 %19 to i32*
  %21 = trunc i64 %18 to i32
  store atomic volatile i32 %21, i32* %20 monotonic, align 4
  %22 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %27 = bitcast %"class.v8::internal::FactoryBase.1052"* %26 to %"class.v8::internal::LocalHeap"*
  %28 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %27, i64 %6) #6
  br label %45

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %31 = bitcast %"class.v8::internal::FactoryBase.1052"* %30 to %"class.v8::internal::LocalHandles"**
  %32 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %32, i64 0, i32 0, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %32) #6
  %40 = load i64*, i64** %33, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i64* [ %40, %38 ], [ %34, %29 ]
  %43 = phi i64* [ %39, %38 ], [ %34, %29 ]
  %44 = getelementptr inbounds i64, i64* %42, i64 1
  store i64* %44, i64** %33, align 8
  store i64 %6, i64* %43, align 8
  br label %45

45:                                               ; preds = %25, %41
  %46 = phi i64* [ %28, %25 ], [ %43, %41 ]
  ret i64* %46
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %6 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %5, i32 %1, i8 zeroext %2, i32 %3) #6
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21AllocateRawFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 134217725
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 2
  %8 = add nuw nsw i32 %7, 8
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %10 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %12 = icmp sge i32 %11, %8
  %13 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %6
  %17 = and i64 %10, -262144
  %18 = inttoptr i64 %17 to %"class.v8::internal::BasicMemoryChunk"*
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %18, i64 0, i32 1
  %20 = load atomic i64, i64* %19 monotonic, align 8
  br label %21

21:                                               ; preds = %25, %16
  %22 = phi i64 [ %20, %16 ], [ %28, %25 ]
  %23 = and i64 %22, 256
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = or i64 %22, 256
  %27 = cmpxchg volatile i64* %19, i64 %22, i64 %26 release monotonic
  %28 = extractvalue { i64, i1 } %27, 0
  %29 = extractvalue { i64, i1 } %27, 1
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %25, %6
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE24AllocateRawWeakArrayListEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1052"*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i32 %1, 134217724
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %1) #7
  unreachable

6:                                                ; preds = %3
  %7 = shl i32 %1, 2
  %8 = add nuw nsw i32 %7, 12
  %9 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %10 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %9, i32 %8, i8 zeroext %2, i32 0) #6
  %11 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %12 = icmp sge i32 %11, %8
  %13 = load i8, i8* @_ZN2v88internal29FLAG_use_marking_progress_barE, align 1
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %6
  %17 = and i64 %10, -262144
  %18 = inttoptr i64 %17 to %"class.v8::internal::BasicMemoryChunk"*
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %18, i64 0, i32 1
  %20 = load atomic i64, i64* %19 monotonic, align 8
  br label %21

21:                                               ; preds = %25, %16
  %22 = phi i64 [ %20, %16 ], [ %28, %25 ]
  %23 = and i64 %22, 256
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = or i64 %22, 256
  %27 = cmpxchg volatile i64* %19, i64 %22, i64 %26 release monotonic
  %28 = extractvalue { i64, i1 } %27, 0
  %29 = extractvalue { i64, i1 } %27, 1
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %25, %6
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE21NewSharedFunctionInfoEv(%"class.v8::internal::FactoryBase.1052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %3 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 19
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::SharedFunctionInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = add i64 %6, 3
  %9 = inttoptr i64 %8 to i8*
  %10 = load atomic i8, i8* %9 monotonic, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 2
  %13 = bitcast %"class.v8::internal::FactoryBase.1052"* %0 to %"class.v8::internal::LocalFactory"*
  %14 = tail call i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"* %13, i32 %12, i8 zeroext 1, i32 0) #6
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %6 to i32
  store atomic volatile i32 %17, i32* %16 monotonic, align 4
  %18 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %18, align 8
  %19 = load i64*, i64** %3, align 8
  call void @_ZN2v88internal18SharedFunctionInfo4InitENS0_13ReadOnlyRootsEi(%"class.v8::internal::SharedFunctionInfo"* nonnull %2, i64* %19, i32 -1) #6
  %20 = load i64, i64* %18, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 16, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 8
  %26 = bitcast %"class.v8::internal::FactoryBase.1052"* %25 to %"class.v8::internal::LocalHeap"*
  %27 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %26, i64 %20) #6
  br label %44

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.v8::internal::FactoryBase.1052", %"class.v8::internal::FactoryBase.1052"* %0, i64 48
  %30 = bitcast %"class.v8::internal::FactoryBase.1052"* %29 to %"class.v8::internal::LocalHandles"**
  %31 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %31, i64 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %31, i64 0, i32 0, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %31) #6
  %39 = load i64*, i64** %32, align 8
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i64* [ %39, %37 ], [ %33, %28 ]
  %42 = phi i64* [ %38, %37 ], [ %33, %28 ]
  %43 = getelementptr inbounds i64, i64* %41, i64 1
  store i64* %43, i64** %32, align 8
  store i64 %20, i64* %42, align 8
  br label %44

44:                                               ; preds = %24, %40
  %45 = phi i64* [ %27, %24 ], [ %42, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  ret i64* %45
}

declare i64 @_ZN2v88internal12LocalFactory11AllocateRawEiNS0_14AllocationTypeENS0_19AllocationAlignmentE(%"class.v8::internal::LocalFactory"*, i32, i8 zeroext, i32) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.v8::internal::ConsString", align 8
  %5 = alloca %"class.v8::internal::SlicedString", align 8
  %6 = alloca %"class.v8::internal::ThinString", align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 15
  switch i32 %9, label %134 [
    i32 8, label %10
    i32 0, label %20
    i32 9, label %30
    i32 1, label %30
    i32 10, label %37
    i32 2, label %79
    i32 11, label %120
    i32 3, label %120
    i32 13, label %127
    i32 5, label %127
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  br label %135

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = shl nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %22, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  br label %135

30:                                               ; preds = %3, %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %2, align 4
  %34 = bitcast %"class.v8::internal::ConsString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %4, i32 %33) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %135

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 16
  %51 = icmp eq i16 %50, 0
  %52 = add i64 %39, 11
  %53 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %51, label %66, label %54

54:                                               ; preds = %37
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %56 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %55, i64 0, i32 0
  %57 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %58 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %58, i64 2
  %60 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::String::ExternalStringResourceBase"* %56) #6
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %63) #6
  %64 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %73

66:                                               ; preds = %54, %37
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %69 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %68, align 8
  %70 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %69, i64 6
  %71 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %70, align 8
  %72 = tail call i8* %71(%"class.v8::String::ExternalOneByteStringResource"* %67) #6
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %65, %62 ], [ %72, %66 ]
  %75 = sext i32 %40 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %135

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %2, align 4
  %83 = and i64 %81, -4294967296
  %84 = add i64 %81, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 16
  %93 = icmp eq i16 %92, 0
  %94 = add i64 %81, 11
  %95 = inttoptr i64 %94 to %"class.v8::String::ExternalStringResource"**
  br i1 %93, label %108, label %96

96:                                               ; preds = %79
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %98 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::String::ExternalStringResource"* %97 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %100 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %100, i64 2
  %102 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::String::ExternalStringResourceBase"* %98) #6
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %105) #6
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 1
  %107 = load i16*, i16** %106, align 8
  br label %115

108:                                              ; preds = %96, %79
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %110 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %111 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %110, align 8
  %112 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %111, i64 6
  %113 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %112, align 8
  %114 = tail call i16* %113(%"class.v8::String::ExternalStringResource"* %109) #6
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i16* [ %107, %104 ], [ %114, %108 ]
  %117 = sext i32 %82 to i64
  %118 = getelementptr inbounds i16, i16* %116, i64 %117
  %119 = load i16, i16* %118, align 2
  br label %135

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %2, align 4
  %124 = bitcast %"class.v8::internal::SlicedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #6
  %125 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %125, align 8
  %126 = call zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nonnull %5, i32 %123) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #6
  br label %135

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %2, align 4
  %131 = bitcast %"class.v8::internal::ThinString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %132, align 8
  %133 = call zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nonnull %6, i32 %130) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br label %135

134:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

135:                                              ; preds = %127, %120, %115, %73, %30, %20, %10
  %136 = phi i16 [ %133, %127 ], [ %126, %120 ], [ %119, %115 ], [ %78, %73 ], [ %36, %30 ], [ %29, %20 ], [ %19, %10 ]
  ret i16 %136
}

declare zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"*, i32) local_unnamed_addr #2

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"*, i32) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"*, i32) local_unnamed_addr #2

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #2

declare i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8*, i32, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #6
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !12

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SequentialStringKeyIhED0Ev(%"class.v8::internal::SequentialStringKey"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::SequentialStringKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16*, i32, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i16 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %0, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #6
  br label %173

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i16* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i16, i16* %47, align 2
  %53 = zext i16 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i16, i16* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i16* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %173

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %173

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %160, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i16, i16* %0, i64 %102
  %104 = shl nsw i64 %102, 1
  %105 = add nsw i64 %104, -2
  %106 = lshr exact i64 %105, 1
  %107 = add nuw i64 %106, 1
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %123, label %110

110:                                              ; preds = %100, %110
  %111 = phi i32 [ %120, %110 ], [ %101, %100 ]
  %112 = phi i16* [ %114, %110 ], [ %0, %100 ]
  %113 = phi i64 [ %121, %110 ], [ %108, %100 ]
  %114 = getelementptr inbounds i16, i16* %112, i64 1
  %115 = load i16, i16* %112, align 2
  %116 = zext i16 %115 to i32
  %117 = add i32 %111, %116
  %118 = mul i32 %117, 1025
  %119 = lshr i32 %118, 6
  %120 = xor i32 %119, %118
  %121 = add i64 %113, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %110, !llvm.loop !13

123:                                              ; preds = %110, %100
  %124 = phi i32 [ undef, %100 ], [ %120, %110 ]
  %125 = phi i32 [ %101, %100 ], [ %120, %110 ]
  %126 = phi i16* [ %0, %100 ], [ %114, %110 ]
  %127 = icmp ult i64 %105, 6
  br i1 %127, label %160, label %128

128:                                              ; preds = %123, %128
  %129 = phi i32 [ %158, %128 ], [ %125, %123 ]
  %130 = phi i16* [ %152, %128 ], [ %126, %123 ]
  %131 = getelementptr inbounds i16, i16* %130, i64 1
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = add i32 %129, %133
  %135 = mul i32 %134, 1025
  %136 = lshr i32 %135, 6
  %137 = xor i32 %136, %135
  %138 = getelementptr inbounds i16, i16* %130, i64 2
  %139 = load i16, i16* %131, align 2
  %140 = zext i16 %139 to i32
  %141 = add i32 %137, %140
  %142 = mul i32 %141, 1025
  %143 = lshr i32 %142, 6
  %144 = xor i32 %143, %142
  %145 = getelementptr inbounds i16, i16* %130, i64 3
  %146 = load i16, i16* %138, align 2
  %147 = zext i16 %146 to i32
  %148 = add i32 %144, %147
  %149 = mul i32 %148, 1025
  %150 = lshr i32 %149, 6
  %151 = xor i32 %150, %149
  %152 = getelementptr inbounds i16, i16* %130, i64 4
  %153 = load i16, i16* %145, align 2
  %154 = zext i16 %153 to i32
  %155 = add i32 %151, %154
  %156 = mul i32 %155, 1025
  %157 = lshr i32 %156, 6
  %158 = xor i32 %157, %156
  %159 = icmp eq i16* %152, %103
  br i1 %159, label %160, label %128

160:                                              ; preds = %123, %128, %97
  %161 = phi i32 [ %98, %97 ], [ %124, %123 ], [ %158, %128 ]
  %162 = mul i32 %161, 9
  %163 = lshr i32 %162, 11
  %164 = xor i32 %163, %162
  %165 = mul i32 %164, 32769
  %166 = and i32 %165, 1073741823
  %167 = add nsw i32 %166, -1
  %168 = ashr i32 %167, 31
  %169 = and i32 %168, 27
  %170 = or i32 %169, %165
  %171 = shl i32 %170, 2
  %172 = or i32 %171, 2
  br label %173

173:                                              ; preds = %36, %160, %94, %72
  %174 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %172, %160 ], [ %38, %36 ]
  ret i32 %174
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19SequentialStringKeyItED0Ev(%"class.v8::internal::SequentialStringKey.1132"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::SequentialStringKey.1132"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i64* @_ZNK2v88internal13AstConsString12AllocateFlatINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::AstConsString"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 13442878}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !5}
