; ModuleID = '../../v8/src/ast/ast-function-literal-id-reindexer.cc'
source_filename = "../../v8/src/ast/ast-function-literal-id-reindexer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::AstFunctionLiteralIdReindexer" = type { %"class.v8::internal::AstTraversalVisitor.base", i32 }
%"class.v8::internal::AstTraversalVisitor.base" = type <{ i64, i8, [7 x i8], %"class.v8::internal::AstNode"*, i32 }>
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstTraversalVisitor" = type <{ i64, i8, [7 x i8], %"class.v8::internal::AstNode"*, i32, [4 x i8] }>
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.33", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.22", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.18" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.19, %"class.v8::internal::VariableProxy"* }
%union.anon.19 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::base::ThreadedListBase.20" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.21" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.22" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.30, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.23, i8, [7 x i8] }>
%union.anon.23 = type { %struct.anon }
%struct.anon = type { %"class.std::__1::vector"*, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%union.anon.30 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.31"*, i64, i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i8**, i8**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ZoneList.33" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::ClassLiteral" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::ClassScope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::ZoneList.34"*, %"class.v8::internal::ZoneList.34"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ClassScope" = type <{ %"class.v8::internal::Scope.base", [5 x i8], %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Variable"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::ZoneList.34" = type { %"class.v8::internal::ClassLiteralProperty"**, i32, i32 }
%"class.v8::internal::ClassLiteralProperty" = type { %"class.v8::internal::LiteralProperty", i8, i8, i8, %"class.v8::internal::Variable"* }
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload.35", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload.35" = type { i64 }
%"class.v8::internal::ForStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Statement"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::IterationStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Statement"* }
%"class.v8::internal::BreakableStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ForInStatement" = type { %"class.v8::internal::ForEachStatement" }
%"class.v8::internal::ForEachStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ForOfStatement" = type <{ %"class.v8::internal::ForEachStatement", i32, [4 x i8] }>
%"class.v8::internal::Block" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::ZoneList.33", %"class.v8::internal::Scope"* }
%"class.v8::internal::SwitchStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.42" }
%"class.v8::internal::ZoneList.42" = type { %"class.v8::internal::CaseClause"**, i32, i32 }
%"class.v8::internal::CaseClause" = type { %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.33" }
%"class.v8::internal::IfStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::InitializeClassMembersStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.34"* }
%"class.v8::internal::InitializeClassStaticElementsStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.43"* }
%"class.v8::internal::ZoneList.43" = type { %"class.v8::internal::ClassLiteralStaticElement"**, i32, i32 }
%"class.v8::internal::ClassLiteralStaticElement" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.v8::internal::ClassLiteralProperty"* }
%"class.v8::internal::ObjectLiteral" = type { %"class.v8::internal::AggregateLiteral", i32, %"class.v8::internal::Handle.45", %"class.v8::internal::ZoneList.46", %"class.v8::internal::Variable"* }
%"class.v8::internal::AggregateLiteral" = type { %"class.v8::internal::MaterializedLiteral", i32 }
%"class.v8::internal::MaterializedLiteral" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::Handle.45" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList.46" = type { %"class.v8::internal::ObjectLiteralProperty"**, i32, i32 }
%"class.v8::internal::ObjectLiteralProperty" = type <{ %"class.v8::internal::LiteralProperty", i8, i8, [6 x i8] }>
%"struct.v8::internal::NaryOperation::NaryOperationEntry" = type <{ %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ZoneList.48" = type { %"class.v8::internal::Expression"**, i32, i32 }

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitFunctionLiteralEPNS0_15FunctionLiteralE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE17VisitForStatementEPNS0_12ForStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForInStatementEPNS0_14ForInStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForOfStatementEPNS0_14ForOfStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE10VisitBlockEPNS0_5BlockE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitSwitchStatementEPNS0_15SwitchStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE16VisitIfStatementEPNS0_11IfStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE36VisitInitializeClassMembersStatementEPNS0_31InitializeClassMembersStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE43VisitInitializeClassStaticElementsStatementEPNS0_38InitializeClassStaticElementsStatementE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE18VisitObjectLiteralEPNS0_13ObjectLiteralE = comdat any

$_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE15VisitAssignmentEPNS0_10AssignmentE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal29AstFunctionLiteralIdReindexerC1Emi = hidden unnamed_addr alias void (%"class.v8::internal::AstFunctionLiteralIdReindexer"*, i64, i32), void (%"class.v8::internal::AstFunctionLiteralIdReindexer"*, i64, i32)* @_ZN2v88internal29AstFunctionLiteralIdReindexerC2Emi
@_ZN2v88internal29AstFunctionLiteralIdReindexerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::AstFunctionLiteralIdReindexer"*), void (%"class.v8::internal::AstFunctionLiteralIdReindexer"*)* @_ZN2v88internal29AstFunctionLiteralIdReindexerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal29AstFunctionLiteralIdReindexerC2Emi(%"class.v8::internal::AstFunctionLiteralIdReindexer"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 3
  store %"class.v8::internal::AstNode"* null, %"class.v8::internal::AstNode"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal29AstFunctionLiteralIdReindexerD2Ev(%"class.v8::internal::AstFunctionLiteralIdReindexer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29AstFunctionLiteralIdReindexer7ReindexEPNS0_10ExpressionE(%"class.v8::internal::AstFunctionLiteralIdReindexer"*, %"class.v8::internal::Expression"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0 to %"class.v8::internal::AstTraversalVisitor"*
  %4 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %10 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  store i8 1, i8* %5, align 8
  br label %15

14:                                               ; preds = %8
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %3, %"class.v8::internal::AstNode"* %4) #5
  br label %15

15:                                               ; preds = %2, %13, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29AstFunctionLiteralIdReindexer20VisitFunctionLiteralEPNS0_15FunctionLiteralE(%"class.v8::internal::AstFunctionLiteralIdReindexer"*, %"class.v8::internal::FunctionLiteral"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 8
  %4 = bitcast %"class.v8::internal::DeclarationScope"** %3 to %"class.v8::internal::Scope"**
  %5 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 6, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 6, i32 1
  %11 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::Declaration"** %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  br label %47

16:                                               ; preds = %2
  %17 = bitcast %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0 to %"class.v8::internal::AstTraversalVisitor"*
  %18 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %20 = load i8, i8* %18, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br label %22

22:                                               ; preds = %16, %40
  %23 = phi i8 [ %20, %16 ], [ %37, %40 ]
  %24 = phi i8 [ %20, %16 ], [ 0, %40 ]
  %25 = phi i1 [ %21, %16 ], [ true, %40 ]
  %26 = phi %"class.v8::internal::Declaration"** [ %9, %16 ], [ %42, %40 ]
  %27 = bitcast %"class.v8::internal::Declaration"** %26 to %"class.v8::internal::AstNode"**
  %28 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %27, align 8
  br i1 %25, label %29, label %36

29:                                               ; preds = %22
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %31 = load i64, i64* %19, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  store i8 1, i8* %18, align 8
  br label %44

34:                                               ; preds = %29
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %17, %"class.v8::internal::AstNode"* %28) #5
  %35 = load i8, i8* %18, align 8, !range !2
  br label %36

36:                                               ; preds = %22, %34
  %37 = phi i8 [ %23, %22 ], [ %35, %34 ]
  %38 = phi i8 [ %24, %22 ], [ %35, %34 ]
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %26, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %41, i64 0, i32 2
  %43 = icmp eq %"class.v8::internal::Declaration"** %42, %11
  br i1 %43, label %44, label %22

44:                                               ; preds = %40, %36, %33
  %45 = phi i8 [ 1, %33 ], [ %37, %36 ], [ %37, %40 ]
  %46 = load i32, i32* %6, align 8
  br label %47

47:                                               ; preds = %13, %44
  %48 = phi i8 [ %45, %44 ], [ %15, %13 ]
  %49 = phi i32 [ %46, %44 ], [ %8, %13 ]
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %6, align 8
  %51 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %52 = icmp eq i8 %48, 0
  br i1 %52, label %53, label %90

53:                                               ; preds = %47
  %54 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %3, align 8
  %55 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %54, i64 0, i32 1
  %56 = load i16, i16* %55, align 1
  %57 = trunc i16 %56 to i8
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %90, label %59

59:                                               ; preds = %53
  store i32 %49, i32* %6, align 8
  %60 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %88

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9, i32 0
  %65 = bitcast %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0 to %"class.v8::internal::AstTraversalVisitor"*
  %66 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  br label %71

67:                                               ; preds = %81
  %68 = load i32, i32* %60, align 4
  %69 = sext i32 %68 to i64
  %70 = icmp slt i64 %84, %69
  br i1 %70, label %71, label %85

71:                                               ; preds = %67, %63
  %72 = phi i64 [ 0, %63 ], [ %84, %67 ]
  %73 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %64, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %73, i64 %72
  %75 = bitcast %"class.v8::internal::Statement"** %74 to %"class.v8::internal::AstNode"**
  %76 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %75, align 8
  %77 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %78 = load i64, i64* %66, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %71
  store i8 1, i8* %51, align 8
  br label %85

81:                                               ; preds = %71
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %65, %"class.v8::internal::AstNode"* %76) #5
  %82 = load i8, i8* %51, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  %84 = add nuw nsw i64 %72, 1
  br i1 %83, label %67, label %85

85:                                               ; preds = %67, %81, %80
  %86 = load i32, i32* %6, align 8
  %87 = add nsw i32 %86, -1
  br label %88

88:                                               ; preds = %85, %59
  %89 = phi i32 [ %87, %85 ], [ %50, %59 ]
  store i32 %89, i32* %6, align 8
  br label %90

90:                                               ; preds = %47, %53, %88
  %91 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 6
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %94, %92
  store i32 %95, i32* %91, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitFunctionLiteralEPNS0_15FunctionLiteralE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 8
  %4 = bitcast %"class.v8::internal::DeclarationScope"** %3 to %"class.v8::internal::Scope"**
  %5 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 6, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 6, i32 1
  %11 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::Declaration"** %9, %11
  %13 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  br i1 %12, label %14, label %16

14:                                               ; preds = %2
  %15 = load i8, i8* %13, align 8, !range !2
  br label %45

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %18 = load i8, i8* %13, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br label %20

20:                                               ; preds = %16, %38
  %21 = phi i8 [ %18, %16 ], [ %35, %38 ]
  %22 = phi i8 [ %18, %16 ], [ 0, %38 ]
  %23 = phi i1 [ %19, %16 ], [ true, %38 ]
  %24 = phi %"class.v8::internal::Declaration"** [ %9, %16 ], [ %40, %38 ]
  %25 = bitcast %"class.v8::internal::Declaration"** %24 to %"class.v8::internal::AstNode"**
  %26 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %25, align 8
  br i1 %23, label %27, label %34

27:                                               ; preds = %20
  %28 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %29 = load i64, i64* %17, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store i8 1, i8* %13, align 8
  br label %42

32:                                               ; preds = %27
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %26) #5
  %33 = load i8, i8* %13, align 8, !range !2
  br label %34

34:                                               ; preds = %20, %32
  %35 = phi i8 [ %21, %20 ], [ %33, %32 ]
  %36 = phi i8 [ %22, %20 ], [ %33, %32 ]
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %24, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %39, i64 0, i32 2
  %41 = icmp eq %"class.v8::internal::Declaration"** %40, %11
  br i1 %41, label %42, label %20

42:                                               ; preds = %38, %34, %31
  %43 = phi i8 [ 1, %31 ], [ %35, %34 ], [ %35, %38 ]
  %44 = load i32, i32* %6, align 8
  br label %45

45:                                               ; preds = %14, %42
  %46 = phi i8 [ %43, %42 ], [ %15, %14 ]
  %47 = phi i32 [ %44, %42 ], [ %8, %14 ]
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %6, align 8
  %49 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %50 = icmp eq i8 %46, 0
  br i1 %50, label %51, label %87

51:                                               ; preds = %45
  %52 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %3, align 8
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %52, i64 0, i32 1
  %54 = load i16, i16* %53, align 1
  %55 = trunc i16 %54 to i8
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %87, label %57

57:                                               ; preds = %51
  store i32 %47, i32* %6, align 8
  %58 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %85

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %68

64:                                               ; preds = %78
  %65 = load i32, i32* %58, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %81, %66
  br i1 %67, label %68, label %82

68:                                               ; preds = %64, %61
  %69 = phi i64 [ 0, %61 ], [ %81, %64 ]
  %70 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %62, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %70, i64 %69
  %72 = bitcast %"class.v8::internal::Statement"** %71 to %"class.v8::internal::AstNode"**
  %73 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %72, align 8
  %74 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %75 = load i64, i64* %63, align 8
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %68
  store i8 1, i8* %49, align 8
  br label %82

78:                                               ; preds = %68
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %73) #5
  %79 = load i8, i8* %49, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = add nuw nsw i64 %69, 1
  br i1 %80, label %64, label %82

82:                                               ; preds = %64, %78, %77
  %83 = load i32, i32* %6, align 8
  %84 = add nsw i32 %83, -1
  br label %85

85:                                               ; preds = %82, %57
  %86 = phi i32 [ %84, %82 ], [ %48, %57 ]
  store i32 %86, i32* %6, align 8
  br label %87

87:                                               ; preds = %45, %51, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29AstFunctionLiteralIdReindexer17VisitClassLiteralEPNS0_12ClassLiteralE(%"class.v8::internal::AstFunctionLiteralIdReindexer"*, %"class.v8::internal::ClassLiteral"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 3
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Expression"* %4, null
  %6 = bitcast %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0 to %"class.v8::internal::AstTraversalVisitor"*
  br i1 %5, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %14 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  store i8 1, i8* %9, align 8
  br label %19

18:                                               ; preds = %12
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %8) #5
  br label %19

19:                                               ; preds = %2, %7, %17, %18
  %20 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 4
  %21 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %21, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %19
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %28 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store i8 1, i8* %23, align 8
  br label %33

32:                                               ; preds = %26
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %22) #5
  br label %33

33:                                               ; preds = %19, %31, %32
  %34 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 7
  %35 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %34, align 8
  %36 = icmp eq %"class.v8::internal::FunctionLiteral"* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %35, i64 0, i32 0, i32 0
  %39 = load i8, i8* %23, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %43 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  store i8 1, i8* %23, align 8
  br label %48

47:                                               ; preds = %41
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %38) #5
  br label %48

48:                                               ; preds = %37, %46, %47, %33
  %49 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 8
  %50 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %49, align 8
  %51 = icmp eq %"class.v8::internal::FunctionLiteral"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %50, i64 0, i32 0, i32 0
  %54 = load i8, i8* %23, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %52
  %57 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %58 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  store i8 1, i8* %23, align 8
  br label %63

62:                                               ; preds = %56
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %53) #5
  br label %63

63:                                               ; preds = %52, %61, %62, %48
  %64 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 6
  %65 = load %"class.v8::internal::ZoneList.34"*, %"class.v8::internal::ZoneList.34"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %65, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %65, i64 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  br label %81

72:                                               ; preds = %101, %63
  %73 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 5
  %74 = load %"class.v8::internal::ZoneList.34"*, %"class.v8::internal::ZoneList.34"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %74, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %106

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %74, i64 0, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::AstFunctionLiteralIdReindexer", %"class.v8::internal::AstFunctionLiteralIdReindexer"* %0, i64 0, i32 0, i32 0
  br label %107

81:                                               ; preds = %69, %101
  %82 = phi i64 [ 0, %69 ], [ %102, %101 ]
  %83 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %70, align 8
  %84 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %83, i64 %82
  %85 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 8
  %88 = icmp eq i8 %87, 3
  br i1 %88, label %101, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %85, i64 0, i32 0, i32 1
  %91 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %91, i64 0, i32 0
  %93 = load i8, i8* %23, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %97 = load i64, i64* %71, align 8
  %98 = icmp ult i64 %96, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  store i8 1, i8* %23, align 8
  br label %101

100:                                              ; preds = %95
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %92) #5
  br label %101

101:                                              ; preds = %89, %99, %100, %81
  %102 = add nuw nsw i64 %82, 1
  %103 = load i32, i32* %66, align 4
  %104 = sext i32 %103 to i64
  %105 = icmp slt i64 %102, %104
  br i1 %105, label %81, label %72

106:                                              ; preds = %149, %72
  ret void

107:                                              ; preds = %78, %149
  %108 = phi i64 [ 0, %78 ], [ %150, %149 ]
  %109 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %79, align 8
  %110 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %109, i64 %108
  %111 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %111, i64 0, i32 1
  %118 = load i8, i8* %117, align 8
  %119 = icmp eq i8 %118, 3
  br i1 %119, label %149, label %120

120:                                              ; preds = %107, %116
  %121 = and i64 %113, -2
  %122 = inttoptr i64 %121 to %"class.v8::internal::Expression"*
  %123 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %122, i64 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 63
  %127 = icmp eq i32 %126, 41
  br i1 %127, label %137, label %128

128:                                              ; preds = %120
  %129 = load i8, i8* %23, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %149

131:                                              ; preds = %128
  %132 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %133 = load i64, i64* %80, align 8
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %131
  store i8 1, i8* %23, align 8
  br label %149

136:                                              ; preds = %131
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %123) #5
  br label %137

137:                                              ; preds = %136, %120
  %138 = load i8, i8* %23, align 8
  %139 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %111, i64 0, i32 0, i32 1
  %140 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %140, i64 0, i32 0
  %142 = icmp eq i8 %138, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %137
  %144 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %145 = load i64, i64* %80, align 8
  %146 = icmp ult i64 %144, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %143
  store i8 1, i8* %23, align 8
  br label %149

148:                                              ; preds = %143
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %6, %"class.v8::internal::AstNode"* %141) #5
  br label %149

149:                                              ; preds = %116, %135, %128, %137, %147, %148
  %150 = add nuw nsw i64 %108, 1
  %151 = load i32, i32* %75, align 4
  %152 = sext i32 %151 to i64
  %153 = icmp slt i64 %150, %152
  br i1 %153, label %107, label %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::AstNode"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i8
  %6 = and i8 %5, 63
  switch i8 %6, label %977 [
    i8 55, label %976
    i8 1, label %7
    i8 2, label %22
    i8 3, label %50
    i8 4, label %78
    i8 5, label %80
    i8 6, label %82
    i8 7, label %84
    i8 8, label %86
    i8 9, label %88
    i8 54, label %955
    i8 11, label %103
    i8 12, label %118
    i8 53, label %934
    i8 51, label %913
    i8 15, label %120
    i8 16, label %135
    i8 17, label %163
    i8 18, label %191
    i8 50, label %892
    i8 20, label %219
    i8 21, label %221
    i8 48, label %836
    i8 23, label %223
    i8 24, label %225
    i8 25, label %267
    i8 26, label %306
    i8 27, label %327
    i8 28, label %366
    i8 29, label %428
    i8 30, label %485
    i8 31, label %542
    i8 32, label %584
    i8 33, label %587
    i8 34, label %626
    i8 35, label %628
    i8 36, label %684
    i8 45, label %815
    i8 38, label %705
    i8 44, label %776
    i8 40, label %713
    i8 43, label %755
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %9 = bitcast %"class.v8::internal::AstNode"* %8 to %"class.v8::internal::FunctionLiteral"**
  %10 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %977

15:                                               ; preds = %7
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %17 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %977

21:                                               ; preds = %15
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %11) #5
  br label %977

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %24 = bitcast %"class.v8::internal::AstNode"* %23 to %"class.v8::internal::Statement"**
  %25 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %977

30:                                               ; preds = %22
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %32 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %977

36:                                               ; preds = %30
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %26) #5
  %37 = load i8, i8* %27, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %977

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %41 = bitcast %"class.v8::internal::AstNode"* %40 to %"class.v8::internal::Expression"**
  %42 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %41, align 8
  %43 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %44 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %39
  store i8 1, i8* %27, align 8
  br label %977

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %42, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %49) #5
  br label %977

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %52 = bitcast %"class.v8::internal::AstNode"* %51 to %"class.v8::internal::Expression"**
  %53 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %977

58:                                               ; preds = %50
  %59 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %60 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  store i8 1, i8* %55, align 8
  br label %977

64:                                               ; preds = %58
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %54) #5
  %65 = load i8, i8* %55, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %977

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %69 = bitcast %"class.v8::internal::AstNode"* %68 to %"class.v8::internal::Statement"**
  %70 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %69, align 8
  %71 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %72 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %67
  store i8 1, i8* %55, align 8
  br label %977

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %70, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %77) #5
  br label %977

78:                                               ; preds = %2
  %79 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::ForStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE17VisitForStatementEPNS0_12ForStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::ForStatement"* %79)
  br label %977

80:                                               ; preds = %2
  %81 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::ForInStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForInStatementEPNS0_14ForInStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::ForInStatement"* %81)
  br label %977

82:                                               ; preds = %2
  %83 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::ForOfStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForOfStatementEPNS0_14ForOfStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::ForOfStatement"* %83)
  br label %977

84:                                               ; preds = %2
  %85 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Block"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE10VisitBlockEPNS0_5BlockE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::Block"* %85)
  br label %977

86:                                               ; preds = %2
  %87 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::SwitchStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitSwitchStatementEPNS0_15SwitchStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::SwitchStatement"* %87)
  br label %977

88:                                               ; preds = %2
  %89 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %90 = bitcast %"class.v8::internal::AstNode"* %89 to %"class.v8::internal::Expression"**
  %91 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %977

96:                                               ; preds = %88
  %97 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %98 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %97, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %96
  store i8 1, i8* %93, align 8
  br label %977

102:                                              ; preds = %96
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %92) #5
  br label %977

103:                                              ; preds = %2
  %104 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %105 = bitcast %"class.v8::internal::AstNode"* %104 to %"class.v8::internal::Statement"**
  %106 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %106, i64 0, i32 0
  %108 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %977

111:                                              ; preds = %103
  %112 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %113 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %112, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  store i8 1, i8* %108, align 8
  br label %977

117:                                              ; preds = %111
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %107) #5
  br label %977

118:                                              ; preds = %2
  %119 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::IfStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE16VisitIfStatementEPNS0_11IfStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::IfStatement"* %119)
  br label %977

120:                                              ; preds = %2
  %121 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %122 = bitcast %"class.v8::internal::AstNode"* %121 to %"class.v8::internal::Expression"**
  %123 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %126 = load i8, i8* %125, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %977

128:                                              ; preds = %120
  %129 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %130 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp ult i64 %129, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %128
  store i8 1, i8* %125, align 8
  br label %977

134:                                              ; preds = %128
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %124) #5
  br label %977

135:                                              ; preds = %2
  %136 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %137 = bitcast %"class.v8::internal::AstNode"* %136 to %"class.v8::internal::Expression"**
  %138 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %138, i64 0, i32 0
  %140 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %141 = load i8, i8* %140, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %977

143:                                              ; preds = %135
  %144 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %145 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = icmp ult i64 %144, %146
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  store i8 1, i8* %140, align 8
  br label %977

149:                                              ; preds = %143
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %139) #5
  %150 = load i8, i8* %140, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %977

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %154 = bitcast %"class.v8::internal::AstNode"* %153 to %"class.v8::internal::Statement"**
  %155 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %154, align 8
  %156 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %157 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp ult i64 %156, %158
  br i1 %159, label %160, label %161

160:                                              ; preds = %152
  store i8 1, i8* %140, align 8
  br label %977

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %155, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %162) #5
  br label %977

163:                                              ; preds = %2
  %164 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %165 = bitcast %"class.v8::internal::AstNode"* %164 to %"class.v8::internal::Block"**
  %166 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %166, i64 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %169 = load i8, i8* %168, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %977

171:                                              ; preds = %163
  %172 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %173 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ult i64 %172, %174
  br i1 %175, label %176, label %177

176:                                              ; preds = %171
  store i8 1, i8* %168, align 8
  br label %977

177:                                              ; preds = %171
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %167) #5
  %178 = load i8, i8* %168, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %977

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %182 = bitcast %"class.v8::internal::AstNode"* %181 to %"class.v8::internal::Block"**
  %183 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %182, align 8
  %184 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %185 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = icmp ult i64 %184, %186
  br i1 %187, label %188, label %189

188:                                              ; preds = %180
  store i8 1, i8* %168, align 8
  br label %977

189:                                              ; preds = %180
  %190 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %183, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %190) #5
  br label %977

191:                                              ; preds = %2
  %192 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %193 = bitcast %"class.v8::internal::AstNode"* %192 to %"class.v8::internal::Block"**
  %194 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %197 = load i8, i8* %196, align 8, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %977

199:                                              ; preds = %191
  %200 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %201 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %200, %202
  br i1 %203, label %204, label %205

204:                                              ; preds = %199
  store i8 1, i8* %196, align 8
  br label %977

205:                                              ; preds = %199
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %195) #5
  %206 = load i8, i8* %196, align 8, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %977

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %210 = bitcast %"class.v8::internal::AstNode"* %209 to %"class.v8::internal::Block"**
  %211 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %210, align 8
  %212 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %213 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = icmp ult i64 %212, %214
  br i1 %215, label %216, label %217

216:                                              ; preds = %208
  store i8 1, i8* %196, align 8
  br label %977

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %211, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %218) #5
  br label %977

219:                                              ; preds = %2
  %220 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::InitializeClassMembersStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE36VisitInitializeClassMembersStatementEPNS0_31InitializeClassMembersStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::InitializeClassMembersStatement"* %220)
  br label %977

221:                                              ; preds = %2
  %222 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::InitializeClassStaticElementsStatement"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE43VisitInitializeClassStaticElementsStatementEPNS0_38InitializeClassStaticElementsStatementE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::InitializeClassStaticElementsStatement"* %222)
  br label %977

223:                                              ; preds = %2
  %224 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::ObjectLiteral"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE18VisitObjectLiteralEPNS0_13ObjectLiteralE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::ObjectLiteral"* %224)
  br label %977

225:                                              ; preds = %2
  %226 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 4, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %977

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %231 = bitcast %"class.v8::internal::AstNode"* %230 to %"class.v8::internal::Expression"***
  %232 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %233 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %234 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %235 = load i32, i32* %232, align 8
  %236 = load i8, i8* %233, align 8, !range !2
  %237 = icmp eq i8 %236, 0
  br label %242

238:                                              ; preds = %261
  %239 = load i32, i32* %226, align 4
  %240 = sext i32 %239 to i64
  %241 = icmp slt i64 %266, %240
  br i1 %241, label %242, label %977

242:                                              ; preds = %229, %238
  %243 = phi i8 [ %236, %229 ], [ 0, %238 ]
  %244 = phi i1 [ %237, %229 ], [ true, %238 ]
  %245 = phi i32 [ %235, %229 ], [ %264, %238 ]
  %246 = phi i64 [ 0, %229 ], [ %266, %238 ]
  %247 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %231, align 8
  %248 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %247, i64 %246
  %249 = bitcast %"class.v8::internal::Expression"** %248 to %"class.v8::internal::AstNode"**
  %250 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %249, align 8
  %251 = add nsw i32 %245, 1
  store i32 %251, i32* %232, align 8
  br i1 %244, label %252, label %261

252:                                              ; preds = %242
  %253 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %254 = load i64, i64* %234, align 8
  %255 = icmp ult i64 %253, %254
  br i1 %255, label %256, label %259

256:                                              ; preds = %252
  store i8 1, i8* %233, align 8
  %257 = load i32, i32* %232, align 8
  %258 = add nsw i32 %257, -1
  store i32 %258, i32* %232, align 8
  br label %977

259:                                              ; preds = %252
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %250) #5
  %260 = load i8, i8* %233, align 8, !range !2
  br label %261

261:                                              ; preds = %242, %259
  %262 = phi i8 [ %243, %242 ], [ %260, %259 ]
  %263 = load i32, i32* %232, align 8
  %264 = add nsw i32 %263, -1
  store i32 %264, i32* %232, align 8
  %265 = icmp eq i8 %262, 0
  %266 = add nuw nsw i64 %246, 1
  br i1 %265, label %238, label %977

267:                                              ; preds = %2
  %268 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %269 = load i32, i32* %268, align 8
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %268, align 8
  %271 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %272 = bitcast %"class.v8::internal::AstNode"* %271 to %"class.v8::internal::Expression"**
  %273 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %273, i64 0, i32 0
  %275 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %276 = load i8, i8* %275, align 8, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %278, label %284

278:                                              ; preds = %267
  %279 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %280 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = icmp ult i64 %279, %281
  br i1 %282, label %283, label %287

283:                                              ; preds = %278
  store i8 1, i8* %275, align 8
  br label %284

284:                                              ; preds = %267, %283
  %285 = load i32, i32* %268, align 8
  %286 = add nsw i32 %285, -1
  store i32 %286, i32* %268, align 8
  br label %977

287:                                              ; preds = %278
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %274) #5
  %288 = load i8, i8* %275, align 8, !range !2
  %289 = load i32, i32* %268, align 8
  %290 = add nsw i32 %289, -1
  store i32 %290, i32* %268, align 8
  %291 = icmp eq i8 %288, 0
  br i1 %291, label %292, label %977

292:                                              ; preds = %287
  store i32 %289, i32* %268, align 8
  %293 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %294 = bitcast %"class.v8::internal::AstNode"* %293 to %"class.v8::internal::Expression"**
  %295 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %294, align 8
  %296 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %297 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %298 = load i64, i64* %297, align 8
  %299 = icmp ult i64 %296, %298
  br i1 %299, label %300, label %301

300:                                              ; preds = %292
  store i8 1, i8* %275, align 8
  br label %303

301:                                              ; preds = %292
  %302 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %295, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %302) #5
  br label %303

303:                                              ; preds = %300, %301
  %304 = load i32, i32* %268, align 8
  %305 = add nsw i32 %304, -1
  store i32 %305, i32* %268, align 8
  br label %977

306:                                              ; preds = %2
  %307 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %308 = load i32, i32* %307, align 8
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %307, align 8
  %310 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %311 = bitcast %"class.v8::internal::AstNode"* %310 to %"class.v8::internal::Expression"**
  %312 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %312, i64 0, i32 0
  %314 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %315 = load i8, i8* %314, align 8, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %324

317:                                              ; preds = %306
  %318 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %319 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %320 = load i64, i64* %319, align 8
  %321 = icmp ult i64 %318, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %317
  store i8 1, i8* %314, align 8
  br label %324

323:                                              ; preds = %317
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %313) #5
  br label %324

324:                                              ; preds = %306, %322, %323
  %325 = load i32, i32* %307, align 8
  %326 = add nsw i32 %325, -1
  store i32 %326, i32* %307, align 8
  br label %977

327:                                              ; preds = %2
  %328 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %329 = load i32, i32* %328, align 8
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %328, align 8
  %331 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %332 = bitcast %"class.v8::internal::AstNode"* %331 to %"class.v8::internal::Expression"**
  %333 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %332, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %333, i64 0, i32 0
  %335 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %336 = load i8, i8* %335, align 8, !range !2
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %344

338:                                              ; preds = %327
  %339 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %340 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %341 = load i64, i64* %340, align 8
  %342 = icmp ult i64 %339, %341
  br i1 %342, label %343, label %347

343:                                              ; preds = %338
  store i8 1, i8* %335, align 8
  br label %344

344:                                              ; preds = %327, %343
  %345 = load i32, i32* %328, align 8
  %346 = add nsw i32 %345, -1
  store i32 %346, i32* %328, align 8
  br label %977

347:                                              ; preds = %338
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %334) #5
  %348 = load i8, i8* %335, align 8, !range !2
  %349 = load i32, i32* %328, align 8
  %350 = add nsw i32 %349, -1
  store i32 %350, i32* %328, align 8
  %351 = icmp eq i8 %348, 0
  br i1 %351, label %352, label %977

352:                                              ; preds = %347
  store i32 %349, i32* %328, align 8
  %353 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %354 = bitcast %"class.v8::internal::AstNode"* %353 to %"class.v8::internal::Expression"**
  %355 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %354, align 8
  %356 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %357 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %358 = load i64, i64* %357, align 8
  %359 = icmp ult i64 %356, %358
  br i1 %359, label %360, label %361

360:                                              ; preds = %352
  store i8 1, i8* %335, align 8
  br label %363

361:                                              ; preds = %352
  %362 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %355, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %362) #5
  br label %363

363:                                              ; preds = %360, %361
  %364 = load i32, i32* %328, align 8
  %365 = add nsw i32 %364, -1
  store i32 %365, i32* %328, align 8
  br label %977

366:                                              ; preds = %2
  %367 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %368 = load i32, i32* %367, align 8
  %369 = add nsw i32 %368, 1
  store i32 %369, i32* %367, align 8
  %370 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %371 = bitcast %"class.v8::internal::AstNode"* %370 to %"class.v8::internal::Expression"**
  %372 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %371, align 8
  %373 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %372, i64 0, i32 0
  %374 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %375 = load i8, i8* %374, align 8, !range !2
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %383

377:                                              ; preds = %366
  %378 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %379 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %380 = load i64, i64* %379, align 8
  %381 = icmp ult i64 %378, %380
  br i1 %381, label %382, label %386

382:                                              ; preds = %377
  store i8 1, i8* %374, align 8
  br label %383

383:                                              ; preds = %366, %382
  %384 = load i32, i32* %367, align 8
  %385 = add nsw i32 %384, -1
  store i32 %385, i32* %367, align 8
  br label %977

386:                                              ; preds = %377
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %373) #5
  %387 = load i8, i8* %374, align 8, !range !2
  %388 = load i32, i32* %367, align 8
  %389 = add nsw i32 %388, -1
  store i32 %389, i32* %367, align 8
  %390 = icmp eq i8 %387, 0
  br i1 %390, label %391, label %977

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %393 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %394 = bitcast %"class.v8::internal::AstNode"* %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = bitcast %"class.v8::internal::AstNode"* %392 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = icmp eq i64 %395, %397
  br i1 %398, label %977, label %399

399:                                              ; preds = %391
  %400 = bitcast %"class.v8::internal::AstNode"* %392 to %"struct.v8::internal::NaryOperation::NaryOperationEntry"**
  %401 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %408

402:                                              ; preds = %421
  %403 = load i64, i64* %394, align 8
  %404 = load i64, i64* %396, align 8
  %405 = sub i64 %403, %404
  %406 = ashr exact i64 %405, 4
  %407 = icmp ult i64 %427, %406
  br i1 %407, label %408, label %977

408:                                              ; preds = %402, %399
  %409 = phi i32 [ %389, %399 ], [ %425, %402 ]
  %410 = phi i64 [ 0, %399 ], [ %427, %402 ]
  %411 = add nsw i32 %409, 1
  store i32 %411, i32* %367, align 8
  %412 = load %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"struct.v8::internal::NaryOperation::NaryOperationEntry"** %400, align 8
  %413 = getelementptr inbounds %"struct.v8::internal::NaryOperation::NaryOperationEntry", %"struct.v8::internal::NaryOperation::NaryOperationEntry"* %412, i64 %410, i32 0
  %414 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %413, align 8
  %415 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %416 = load i64, i64* %401, align 8
  %417 = icmp ult i64 %415, %416
  br i1 %417, label %418, label %421

418:                                              ; preds = %408
  store i8 1, i8* %374, align 8
  %419 = load i32, i32* %367, align 8
  %420 = add nsw i32 %419, -1
  store i32 %420, i32* %367, align 8
  br label %977

421:                                              ; preds = %408
  %422 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %414, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %422) #5
  %423 = load i8, i8* %374, align 8, !range !2
  %424 = load i32, i32* %367, align 8
  %425 = add nsw i32 %424, -1
  store i32 %425, i32* %367, align 8
  %426 = icmp eq i8 %423, 0
  %427 = add nuw i64 %410, 1
  br i1 %426, label %402, label %977

428:                                              ; preds = %2
  %429 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %430 = load i32, i32* %429, align 8
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* %429, align 8
  %432 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %433 = bitcast %"class.v8::internal::AstNode"* %432 to %"class.v8::internal::Expression"**
  %434 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %433, align 8
  %435 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %434, i64 0, i32 0
  %436 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %437 = load i8, i8* %436, align 8, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %445

439:                                              ; preds = %428
  %440 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %441 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %442 = load i64, i64* %441, align 8
  %443 = icmp ult i64 %440, %442
  br i1 %443, label %444, label %448

444:                                              ; preds = %439
  store i8 1, i8* %436, align 8
  br label %445

445:                                              ; preds = %428, %444
  %446 = load i32, i32* %429, align 8
  %447 = add nsw i32 %446, -1
  store i32 %447, i32* %429, align 8
  br label %977

448:                                              ; preds = %439
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %435) #5
  %449 = load i8, i8* %436, align 8, !range !2
  %450 = load i32, i32* %429, align 8
  %451 = add nsw i32 %450, -1
  store i32 %451, i32* %429, align 8
  %452 = icmp eq i8 %449, 0
  br i1 %452, label %453, label %977

453:                                              ; preds = %448
  %454 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3, i32 1
  %455 = load i32, i32* %454, align 4
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %457, label %977

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %459 = bitcast %"class.v8::internal::AstNode"* %458 to %"class.v8::internal::Expression"***
  %460 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %465

461:                                              ; preds = %479
  %462 = load i32, i32* %454, align 4
  %463 = sext i32 %462 to i64
  %464 = icmp slt i64 %484, %463
  br i1 %464, label %465, label %977

465:                                              ; preds = %461, %457
  %466 = phi i32 [ %451, %457 ], [ %482, %461 ]
  %467 = phi i64 [ 0, %457 ], [ %484, %461 ]
  %468 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %459, align 8
  %469 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %468, i64 %467
  %470 = bitcast %"class.v8::internal::Expression"** %469 to %"class.v8::internal::AstNode"**
  %471 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %470, align 8
  %472 = add nsw i32 %466, 1
  store i32 %472, i32* %429, align 8
  %473 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %474 = load i64, i64* %460, align 8
  %475 = icmp ult i64 %473, %474
  br i1 %475, label %476, label %479

476:                                              ; preds = %465
  store i8 1, i8* %436, align 8
  %477 = load i32, i32* %429, align 8
  %478 = add nsw i32 %477, -1
  store i32 %478, i32* %429, align 8
  br label %977

479:                                              ; preds = %465
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %471) #5
  %480 = load i8, i8* %436, align 8, !range !2
  %481 = load i32, i32* %429, align 8
  %482 = add nsw i32 %481, -1
  store i32 %482, i32* %429, align 8
  %483 = icmp eq i8 %480, 0
  %484 = add nuw nsw i64 %467, 1
  br i1 %483, label %461, label %977

485:                                              ; preds = %2
  %486 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %487 = load i32, i32* %486, align 8
  %488 = add nsw i32 %487, 1
  store i32 %488, i32* %486, align 8
  %489 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %490 = bitcast %"class.v8::internal::AstNode"* %489 to %"class.v8::internal::Expression"**
  %491 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %490, align 8
  %492 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %491, i64 0, i32 0
  %493 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %494 = load i8, i8* %493, align 8, !range !2
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %502

496:                                              ; preds = %485
  %497 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %498 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %499 = load i64, i64* %498, align 8
  %500 = icmp ult i64 %497, %499
  br i1 %500, label %501, label %505

501:                                              ; preds = %496
  store i8 1, i8* %493, align 8
  br label %502

502:                                              ; preds = %485, %501
  %503 = load i32, i32* %486, align 8
  %504 = add nsw i32 %503, -1
  store i32 %504, i32* %486, align 8
  br label %977

505:                                              ; preds = %496
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %492) #5
  %506 = load i8, i8* %493, align 8, !range !2
  %507 = load i32, i32* %486, align 8
  %508 = add nsw i32 %507, -1
  store i32 %508, i32* %486, align 8
  %509 = icmp eq i8 %506, 0
  br i1 %509, label %510, label %977

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = icmp sgt i32 %512, 0
  br i1 %513, label %514, label %977

514:                                              ; preds = %510
  %515 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %516 = bitcast %"class.v8::internal::AstNode"* %515 to %"class.v8::internal::Expression"***
  %517 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %522

518:                                              ; preds = %536
  %519 = load i32, i32* %511, align 4
  %520 = sext i32 %519 to i64
  %521 = icmp slt i64 %541, %520
  br i1 %521, label %522, label %977

522:                                              ; preds = %518, %514
  %523 = phi i32 [ %508, %514 ], [ %539, %518 ]
  %524 = phi i64 [ 0, %514 ], [ %541, %518 ]
  %525 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %516, align 8
  %526 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %525, i64 %524
  %527 = bitcast %"class.v8::internal::Expression"** %526 to %"class.v8::internal::AstNode"**
  %528 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %527, align 8
  %529 = add nsw i32 %523, 1
  store i32 %529, i32* %486, align 8
  %530 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %531 = load i64, i64* %517, align 8
  %532 = icmp ult i64 %530, %531
  br i1 %532, label %533, label %536

533:                                              ; preds = %522
  store i8 1, i8* %493, align 8
  %534 = load i32, i32* %486, align 8
  %535 = add nsw i32 %534, -1
  store i32 %535, i32* %486, align 8
  br label %977

536:                                              ; preds = %522
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %528) #5
  %537 = load i8, i8* %493, align 8, !range !2
  %538 = load i32, i32* %486, align 8
  %539 = add nsw i32 %538, -1
  store i32 %539, i32* %486, align 8
  %540 = icmp eq i8 %537, 0
  %541 = add nuw nsw i64 %524, 1
  br i1 %540, label %518, label %977

542:                                              ; preds = %2
  %543 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 4, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = icmp sgt i32 %544, 0
  br i1 %545, label %546, label %977

546:                                              ; preds = %542
  %547 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %548 = bitcast %"class.v8::internal::AstNode"* %547 to %"class.v8::internal::Expression"***
  %549 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %550 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %551 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %552 = load i32, i32* %549, align 8
  %553 = load i8, i8* %550, align 8, !range !2
  %554 = icmp eq i8 %553, 0
  br label %559

555:                                              ; preds = %578
  %556 = load i32, i32* %543, align 4
  %557 = sext i32 %556 to i64
  %558 = icmp slt i64 %583, %557
  br i1 %558, label %559, label %977

559:                                              ; preds = %546, %555
  %560 = phi i8 [ %553, %546 ], [ 0, %555 ]
  %561 = phi i1 [ %554, %546 ], [ true, %555 ]
  %562 = phi i32 [ %552, %546 ], [ %581, %555 ]
  %563 = phi i64 [ 0, %546 ], [ %583, %555 ]
  %564 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %548, align 8
  %565 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %564, i64 %563
  %566 = bitcast %"class.v8::internal::Expression"** %565 to %"class.v8::internal::AstNode"**
  %567 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %566, align 8
  %568 = add nsw i32 %562, 1
  store i32 %568, i32* %549, align 8
  br i1 %561, label %569, label %578

569:                                              ; preds = %559
  %570 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %571 = load i64, i64* %551, align 8
  %572 = icmp ult i64 %570, %571
  br i1 %572, label %573, label %576

573:                                              ; preds = %569
  store i8 1, i8* %550, align 8
  %574 = load i32, i32* %549, align 8
  %575 = add nsw i32 %574, -1
  store i32 %575, i32* %549, align 8
  br label %977

576:                                              ; preds = %569
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %567) #5
  %577 = load i8, i8* %550, align 8, !range !2
  br label %578

578:                                              ; preds = %559, %576
  %579 = phi i8 [ %560, %559 ], [ %577, %576 ]
  %580 = load i32, i32* %549, align 8
  %581 = add nsw i32 %580, -1
  store i32 %581, i32* %549, align 8
  %582 = icmp eq i8 %579, 0
  %583 = add nuw nsw i64 %563, 1
  br i1 %582, label %555, label %977

584:                                              ; preds = %2
  %585 = bitcast %"class.v8::internal::AstTraversalVisitor"* %0 to %"class.v8::internal::AstFunctionLiteralIdReindexer"*
  %586 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::ClassLiteral"*
  tail call void @_ZN2v88internal29AstFunctionLiteralIdReindexer17VisitClassLiteralEPNS0_12ClassLiteralE(%"class.v8::internal::AstFunctionLiteralIdReindexer"* %585, %"class.v8::internal::ClassLiteral"* %586)
  br label %977

587:                                              ; preds = %2
  %588 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %589 = load i32, i32* %588, align 8
  %590 = add nsw i32 %589, 1
  store i32 %590, i32* %588, align 8
  %591 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %592 = bitcast %"class.v8::internal::AstNode"* %591 to %"class.v8::internal::Expression"**
  %593 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %592, align 8
  %594 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %593, i64 0, i32 0
  %595 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %596 = load i8, i8* %595, align 8, !range !2
  %597 = icmp eq i8 %596, 0
  br i1 %597, label %598, label %604

598:                                              ; preds = %587
  %599 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %600 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %601 = load i64, i64* %600, align 8
  %602 = icmp ult i64 %599, %601
  br i1 %602, label %603, label %607

603:                                              ; preds = %598
  store i8 1, i8* %595, align 8
  br label %604

604:                                              ; preds = %587, %603
  %605 = load i32, i32* %588, align 8
  %606 = add nsw i32 %605, -1
  store i32 %606, i32* %588, align 8
  br label %977

607:                                              ; preds = %598
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %594) #5
  %608 = load i8, i8* %595, align 8, !range !2
  %609 = load i32, i32* %588, align 8
  %610 = add nsw i32 %609, -1
  store i32 %610, i32* %588, align 8
  %611 = icmp eq i8 %608, 0
  br i1 %611, label %612, label %977

612:                                              ; preds = %607
  store i32 %609, i32* %588, align 8
  %613 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %614 = bitcast %"class.v8::internal::AstNode"* %613 to %"class.v8::internal::Expression"**
  %615 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %614, align 8
  %616 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %617 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %618 = load i64, i64* %617, align 8
  %619 = icmp ult i64 %616, %618
  br i1 %619, label %620, label %621

620:                                              ; preds = %612
  store i8 1, i8* %595, align 8
  br label %623

621:                                              ; preds = %612
  %622 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %615, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %622) #5
  br label %623

623:                                              ; preds = %620, %621
  %624 = load i32, i32* %588, align 8
  %625 = add nsw i32 %624, -1
  store i32 %625, i32* %588, align 8
  br label %977

626:                                              ; preds = %2
  %627 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::Assignment"* %627) #5
  br label %977

628:                                              ; preds = %2
  %629 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %630 = load i32, i32* %629, align 8
  %631 = add nsw i32 %630, 1
  store i32 %631, i32* %629, align 8
  %632 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %633 = bitcast %"class.v8::internal::AstNode"* %632 to %"class.v8::internal::Expression"**
  %634 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %634, i64 0, i32 0
  %636 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %637 = load i8, i8* %636, align 8, !range !2
  %638 = icmp eq i8 %637, 0
  br i1 %638, label %639, label %645

639:                                              ; preds = %628
  %640 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %641 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %642 = load i64, i64* %641, align 8
  %643 = icmp ult i64 %640, %642
  br i1 %643, label %644, label %648

644:                                              ; preds = %639
  store i8 1, i8* %636, align 8
  br label %645

645:                                              ; preds = %628, %644
  %646 = load i32, i32* %629, align 8
  %647 = add nsw i32 %646, -1
  store i32 %647, i32* %629, align 8
  br label %977

648:                                              ; preds = %639
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %635) #5
  %649 = load i8, i8* %636, align 8, !range !2
  %650 = load i32, i32* %629, align 8
  %651 = add nsw i32 %650, -1
  store i32 %651, i32* %629, align 8
  %652 = icmp eq i8 %649, 0
  br i1 %652, label %653, label %977

653:                                              ; preds = %648
  store i32 %650, i32* %629, align 8
  %654 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %655 = bitcast %"class.v8::internal::AstNode"* %654 to %"class.v8::internal::Expression"**
  %656 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %655, align 8
  %657 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %658 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %659 = load i64, i64* %658, align 8
  %660 = icmp ult i64 %657, %659
  br i1 %660, label %661, label %664

661:                                              ; preds = %653
  store i8 1, i8* %636, align 8
  %662 = load i32, i32* %629, align 8
  %663 = add nsw i32 %662, -1
  store i32 %663, i32* %629, align 8
  br label %977

664:                                              ; preds = %653
  %665 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %656, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %665) #5
  %666 = load i8, i8* %636, align 8, !range !2
  %667 = icmp eq i8 %666, 0
  %668 = load i32, i32* %629, align 8
  %669 = add nsw i32 %668, -1
  store i32 %669, i32* %629, align 8
  br i1 %667, label %670, label %977

670:                                              ; preds = %664
  store i32 %668, i32* %629, align 8
  %671 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %672 = bitcast %"class.v8::internal::AstNode"* %671 to %"class.v8::internal::Expression"**
  %673 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %672, align 8
  %674 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %675 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %676 = load i64, i64* %675, align 8
  %677 = icmp ult i64 %674, %676
  br i1 %677, label %678, label %679

678:                                              ; preds = %670
  store i8 1, i8* %636, align 8
  br label %681

679:                                              ; preds = %670
  %680 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %673, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %680) #5
  br label %681

681:                                              ; preds = %678, %679
  %682 = load i32, i32* %629, align 8
  %683 = add nsw i32 %682, -1
  store i32 %683, i32* %629, align 8
  br label %977

684:                                              ; preds = %2
  %685 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %686 = load i32, i32* %685, align 8
  %687 = add nsw i32 %686, 1
  store i32 %687, i32* %685, align 8
  %688 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %689 = bitcast %"class.v8::internal::AstNode"* %688 to %"class.v8::internal::Expression"**
  %690 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %689, align 8
  %691 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %690, i64 0, i32 0
  %692 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %693 = load i8, i8* %692, align 8, !range !2
  %694 = icmp eq i8 %693, 0
  br i1 %694, label %695, label %702

695:                                              ; preds = %684
  %696 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %697 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %698 = load i64, i64* %697, align 8
  %699 = icmp ult i64 %696, %698
  br i1 %699, label %700, label %701

700:                                              ; preds = %695
  store i8 1, i8* %692, align 8
  br label %702

701:                                              ; preds = %695
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %691) #5
  br label %702

702:                                              ; preds = %684, %700, %701
  %703 = load i32, i32* %685, align 8
  %704 = add nsw i32 %703, -1
  store i32 %704, i32* %685, align 8
  br label %977

705:                                              ; preds = %2
  %706 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::FunctionLiteral"*
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitFunctionLiteralEPNS0_15FunctionLiteralE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::FunctionLiteral"* %706) #5
  %707 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3, i32 1
  %708 = load i32, i32* %707, align 4
  %709 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 5
  %710 = bitcast [4 x i8]* %709 to i32*
  %711 = load i32, i32* %710, align 4
  %712 = add nsw i32 %711, %708
  store i32 %712, i32* %707, align 4
  br label %977

713:                                              ; preds = %2
  %714 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %715 = load i32, i32* %714, align 8
  %716 = add nsw i32 %715, 1
  store i32 %716, i32* %714, align 8
  %717 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %718 = bitcast %"class.v8::internal::AstNode"* %717 to %"class.v8::internal::Expression"**
  %719 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %718, align 8
  %720 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %719, i64 0, i32 0
  %721 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %722 = load i8, i8* %721, align 8, !range !2
  %723 = icmp eq i8 %722, 0
  br i1 %723, label %724, label %730

724:                                              ; preds = %713
  %725 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %726 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %727 = load i64, i64* %726, align 8
  %728 = icmp ult i64 %725, %727
  br i1 %728, label %729, label %733

729:                                              ; preds = %724
  store i8 1, i8* %721, align 8
  br label %730

730:                                              ; preds = %713, %729
  %731 = load i32, i32* %714, align 8
  %732 = add nsw i32 %731, -1
  store i32 %732, i32* %714, align 8
  br label %977

733:                                              ; preds = %724
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %720) #5
  %734 = load i8, i8* %721, align 8, !range !2
  %735 = load i32, i32* %714, align 8
  %736 = add nsw i32 %735, -1
  store i32 %736, i32* %714, align 8
  %737 = icmp eq i8 %734, 0
  br i1 %737, label %738, label %977

738:                                              ; preds = %733
  %739 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %740 = bitcast %"class.v8::internal::AstNode"* %739 to %"class.v8::internal::Expression"**
  %741 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %740, align 8
  %742 = icmp eq %"class.v8::internal::Expression"* %741, null
  br i1 %742, label %977, label %743

743:                                              ; preds = %738
  store i32 %735, i32* %714, align 8
  %744 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %740, align 8
  %745 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %746 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %747 = load i64, i64* %746, align 8
  %748 = icmp ult i64 %745, %747
  br i1 %748, label %749, label %750

749:                                              ; preds = %743
  store i8 1, i8* %721, align 8
  br label %752

750:                                              ; preds = %743
  %751 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %744, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %751) #5
  br label %752

752:                                              ; preds = %749, %750
  %753 = load i32, i32* %714, align 8
  %754 = add nsw i32 %753, -1
  store i32 %754, i32* %714, align 8
  br label %977

755:                                              ; preds = %2
  %756 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %757 = load i32, i32* %756, align 8
  %758 = add nsw i32 %757, 1
  store i32 %758, i32* %756, align 8
  %759 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %760 = bitcast %"class.v8::internal::AstNode"* %759 to %"class.v8::internal::Expression"**
  %761 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %760, align 8
  %762 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %761, i64 0, i32 0
  %763 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %764 = load i8, i8* %763, align 8, !range !2
  %765 = icmp eq i8 %764, 0
  br i1 %765, label %766, label %773

766:                                              ; preds = %755
  %767 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %768 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %769 = load i64, i64* %768, align 8
  %770 = icmp ult i64 %767, %769
  br i1 %770, label %771, label %772

771:                                              ; preds = %766
  store i8 1, i8* %763, align 8
  br label %773

772:                                              ; preds = %766
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %762) #5
  br label %773

773:                                              ; preds = %755, %771, %772
  %774 = load i32, i32* %756, align 8
  %775 = add nsw i32 %774, -1
  store i32 %775, i32* %756, align 8
  br label %977

776:                                              ; preds = %2
  %777 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %778 = load i32, i32* %777, align 8
  %779 = add nsw i32 %778, 1
  store i32 %779, i32* %777, align 8
  %780 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %781 = bitcast %"class.v8::internal::AstNode"* %780 to %"class.v8::internal::Expression"**
  %782 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %781, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %782, i64 0, i32 0
  %784 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %785 = load i8, i8* %784, align 8, !range !2
  %786 = icmp eq i8 %785, 0
  br i1 %786, label %787, label %793

787:                                              ; preds = %776
  %788 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %789 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %790 = load i64, i64* %789, align 8
  %791 = icmp ult i64 %788, %790
  br i1 %791, label %792, label %796

792:                                              ; preds = %787
  store i8 1, i8* %784, align 8
  br label %793

793:                                              ; preds = %776, %792
  %794 = load i32, i32* %777, align 8
  %795 = add nsw i32 %794, -1
  store i32 %795, i32* %777, align 8
  br label %977

796:                                              ; preds = %787
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %783) #5
  %797 = load i8, i8* %784, align 8, !range !2
  %798 = load i32, i32* %777, align 8
  %799 = add nsw i32 %798, -1
  store i32 %799, i32* %777, align 8
  %800 = icmp eq i8 %797, 0
  br i1 %800, label %801, label %977

801:                                              ; preds = %796
  store i32 %798, i32* %777, align 8
  %802 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %803 = bitcast %"class.v8::internal::AstNode"* %802 to %"class.v8::internal::Expression"**
  %804 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %803, align 8
  %805 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %806 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %807 = load i64, i64* %806, align 8
  %808 = icmp ult i64 %805, %807
  br i1 %808, label %809, label %810

809:                                              ; preds = %801
  store i8 1, i8* %784, align 8
  br label %812

810:                                              ; preds = %801
  %811 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %804, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %811) #5
  br label %812

812:                                              ; preds = %809, %810
  %813 = load i32, i32* %777, align 8
  %814 = add nsw i32 %813, -1
  store i32 %814, i32* %777, align 8
  br label %977

815:                                              ; preds = %2
  %816 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %817 = load i32, i32* %816, align 8
  %818 = add nsw i32 %817, 1
  store i32 %818, i32* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %820 = bitcast %"class.v8::internal::AstNode"* %819 to %"class.v8::internal::Expression"**
  %821 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %820, align 8
  %822 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %821, i64 0, i32 0
  %823 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %824 = load i8, i8* %823, align 8, !range !2
  %825 = icmp eq i8 %824, 0
  br i1 %825, label %826, label %833

826:                                              ; preds = %815
  %827 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %828 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %829 = load i64, i64* %828, align 8
  %830 = icmp ult i64 %827, %829
  br i1 %830, label %831, label %832

831:                                              ; preds = %826
  store i8 1, i8* %823, align 8
  br label %833

832:                                              ; preds = %826
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %822) #5
  br label %833

833:                                              ; preds = %815, %831, %832
  %834 = load i32, i32* %816, align 8
  %835 = add nsw i32 %834, -1
  store i32 %835, i32* %816, align 8
  br label %977

836:                                              ; preds = %2
  %837 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %838 = bitcast %"class.v8::internal::AstNode"* %837 to %"class.v8::internal::ZoneList.48"**
  %839 = load %"class.v8::internal::ZoneList.48"*, %"class.v8::internal::ZoneList.48"** %838, align 8
  %840 = getelementptr inbounds %"class.v8::internal::ZoneList.48", %"class.v8::internal::ZoneList.48"* %839, i64 0, i32 0
  %841 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %840, align 8
  %842 = getelementptr inbounds %"class.v8::internal::ZoneList.48", %"class.v8::internal::ZoneList.48"* %839, i64 0, i32 2
  %843 = load i32, i32* %842, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %841, i64 %844
  %846 = icmp eq i32 %843, 0
  br i1 %846, label %977, label %847

847:                                              ; preds = %836
  %848 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %849 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %850 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %851 = load i32, i32* %848, align 8
  %852 = load i8, i8* %849, align 8, !range !2
  %853 = icmp eq i8 %852, 0
  %854 = bitcast %"class.v8::internal::Expression"** %841 to %"class.v8::internal::AstNode"**
  %855 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %854, align 8
  %856 = add nsw i32 %851, 1
  store i32 %856, i32* %848, align 8
  br i1 %853, label %857, label %864

857:                                              ; preds = %847
  %858 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %859 = load i64, i64* %850, align 8
  %860 = icmp ult i64 %858, %859
  br i1 %860, label %863, label %861

861:                                              ; preds = %857
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %855) #5
  %862 = load i8, i8* %849, align 8, !range !2
  br label %864

863:                                              ; preds = %857
  store i8 1, i8* %849, align 8
  br label %864

864:                                              ; preds = %863, %861, %847
  %865 = phi i8 [ %852, %847 ], [ 1, %863 ], [ %862, %861 ]
  %866 = load i32, i32* %848, align 8
  %867 = add nsw i32 %866, -1
  store i32 %867, i32* %848, align 8
  %868 = icmp ne i8 %865, 0
  %869 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %841, i64 1
  %870 = icmp eq i32 %843, 1
  %871 = or i1 %868, %870
  br i1 %871, label %977, label %872

872:                                              ; preds = %864, %884
  %873 = phi i32 [ %887, %884 ], [ %867, %864 ]
  %874 = phi %"class.v8::internal::Expression"** [ %889, %884 ], [ %869, %864 ]
  %875 = bitcast %"class.v8::internal::Expression"** %874 to %"class.v8::internal::AstNode"**
  %876 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %875, align 8
  %877 = add nsw i32 %873, 1
  store i32 %877, i32* %848, align 8
  %878 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %879 = load i64, i64* %850, align 8
  %880 = icmp ult i64 %878, %879
  br i1 %880, label %881, label %882

881:                                              ; preds = %872
  store i8 1, i8* %849, align 8
  br label %884

882:                                              ; preds = %872
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %876) #5
  %883 = load i8, i8* %849, align 8, !range !2
  br label %884

884:                                              ; preds = %881, %882
  %885 = phi i8 [ 1, %881 ], [ %883, %882 ]
  %886 = load i32, i32* %848, align 8
  %887 = add nsw i32 %886, -1
  store i32 %887, i32* %848, align 8
  %888 = icmp ne i8 %885, 0
  %889 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %874, i64 1
  %890 = icmp eq %"class.v8::internal::Expression"** %889, %845
  %891 = or i1 %888, %890
  br i1 %891, label %977, label %872, !llvm.loop !3

892:                                              ; preds = %2
  %893 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %894 = load i32, i32* %893, align 8
  %895 = add nsw i32 %894, 1
  store i32 %895, i32* %893, align 8
  %896 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %897 = bitcast %"class.v8::internal::AstNode"* %896 to %"class.v8::internal::Expression"**
  %898 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %897, align 8
  %899 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %898, i64 0, i32 0
  %900 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %901 = load i8, i8* %900, align 8, !range !2
  %902 = icmp eq i8 %901, 0
  br i1 %902, label %903, label %910

903:                                              ; preds = %892
  %904 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %905 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %906 = load i64, i64* %905, align 8
  %907 = icmp ult i64 %904, %906
  br i1 %907, label %908, label %909

908:                                              ; preds = %903
  store i8 1, i8* %900, align 8
  br label %910

909:                                              ; preds = %903
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %899) #5
  br label %910

910:                                              ; preds = %892, %908, %909
  %911 = load i32, i32* %893, align 8
  %912 = add nsw i32 %911, -1
  store i32 %912, i32* %893, align 8
  br label %977

913:                                              ; preds = %2
  %914 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %915 = load i32, i32* %914, align 8
  %916 = add nsw i32 %915, 1
  store i32 %916, i32* %914, align 8
  %917 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %918 = bitcast %"class.v8::internal::AstNode"* %917 to %"class.v8::internal::Expression"**
  %919 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %918, align 8
  %920 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %919, i64 0, i32 0
  %921 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %922 = load i8, i8* %921, align 8, !range !2
  %923 = icmp eq i8 %922, 0
  br i1 %923, label %924, label %931

924:                                              ; preds = %913
  %925 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %926 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %927 = load i64, i64* %926, align 8
  %928 = icmp ult i64 %925, %927
  br i1 %928, label %929, label %930

929:                                              ; preds = %924
  store i8 1, i8* %921, align 8
  br label %931

930:                                              ; preds = %924
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %920) #5
  br label %931

931:                                              ; preds = %913, %929, %930
  %932 = load i32, i32* %914, align 8
  %933 = add nsw i32 %932, -1
  store i32 %933, i32* %914, align 8
  br label %977

934:                                              ; preds = %2
  %935 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %936 = load i32, i32* %935, align 8
  %937 = add nsw i32 %936, 1
  store i32 %937, i32* %935, align 8
  %938 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %939 = bitcast %"class.v8::internal::AstNode"* %938 to %"class.v8::internal::Expression"**
  %940 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %939, align 8
  %941 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %940, i64 0, i32 0
  %942 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %943 = load i8, i8* %942, align 8, !range !2
  %944 = icmp eq i8 %943, 0
  br i1 %944, label %945, label %952

945:                                              ; preds = %934
  %946 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %947 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %948 = load i64, i64* %947, align 8
  %949 = icmp ult i64 %946, %948
  br i1 %949, label %950, label %951

950:                                              ; preds = %945
  store i8 1, i8* %942, align 8
  br label %952

951:                                              ; preds = %945
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %941) #5
  br label %952

952:                                              ; preds = %934, %950, %951
  %953 = load i32, i32* %935, align 8
  %954 = add nsw i32 %953, -1
  store i32 %954, i32* %935, align 8
  br label %977

955:                                              ; preds = %2
  %956 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %957 = load i32, i32* %956, align 8
  %958 = add nsw i32 %957, 1
  store i32 %958, i32* %956, align 8
  %959 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %960 = bitcast %"class.v8::internal::AstNode"* %959 to %"class.v8::internal::Expression"**
  %961 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %960, align 8
  %962 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %961, i64 0, i32 0
  %963 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %964 = load i8, i8* %963, align 8, !range !2
  %965 = icmp eq i8 %964, 0
  br i1 %965, label %966, label %973

966:                                              ; preds = %955
  %967 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %968 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %969 = load i64, i64* %968, align 8
  %970 = icmp ult i64 %967, %969
  br i1 %970, label %971, label %972

971:                                              ; preds = %966
  store i8 1, i8* %963, align 8
  br label %973

972:                                              ; preds = %966
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %962) #5
  br label %973

973:                                              ; preds = %955, %971, %972
  %974 = load i32, i32* %956, align 8
  %975 = add nsw i32 %974, -1
  store i32 %975, i32* %956, align 8
  br label %977

976:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

977:                                              ; preds = %555, %578, %518, %536, %461, %479, %402, %421, %238, %261, %864, %884, %204, %191, %176, %163, %148, %135, %63, %50, %35, %22, %573, %533, %476, %418, %256, %793, %730, %661, %645, %604, %502, %445, %383, %344, %284, %391, %542, %510, %453, %225, %836, %217, %216, %189, %188, %161, %160, %134, %133, %120, %117, %116, %103, %102, %101, %88, %76, %75, %48, %47, %21, %20, %7, %36, %64, %149, %177, %205, %287, %347, %386, %448, %505, %607, %664, %648, %733, %796, %812, %752, %738, %681, %623, %363, %303, %78, %80, %82, %84, %86, %118, %219, %221, %223, %324, %584, %626, %702, %705, %773, %833, %910, %931, %952, %973, %2
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE17VisitForStatementEPNS0_12ForStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::ForStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Statement"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %71

11:                                               ; preds = %6
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %13 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %71

17:                                               ; preds = %11
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %7) #5
  %18 = load i8, i8* %8, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %71

20:                                               ; preds = %17, %2
  %21 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 2
  %22 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %21, align 8
  %23 = icmp eq %"class.v8::internal::Expression"* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %22, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %71

29:                                               ; preds = %24
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %31 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i8 1, i8* %26, align 8
  br label %71

35:                                               ; preds = %29
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %25) #5
  %36 = load i8, i8* %26, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %71

38:                                               ; preds = %35, %20
  %39 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 3
  %40 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %39, align 8
  %41 = icmp eq %"class.v8::internal::Statement"* %40, null
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %71

47:                                               ; preds = %42
  %48 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %49 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  store i8 1, i8* %44, align 8
  br label %71

53:                                               ; preds = %47
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %43) #5
  %54 = load i8, i8* %44, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %71

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %71

60:                                               ; preds = %53, %56
  %61 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 0, i32 1
  %62 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %61, align 8
  %63 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %64 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  store i8 1, i8* %68, align 8
  br label %71

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %62, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %70) #5
  br label %71

71:                                               ; preds = %52, %42, %34, %24, %16, %6, %69, %67, %56, %53, %35, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForInStatementEPNS0_14ForInStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::ForInStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %40

15:                                               ; preds = %9
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %5) #5
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 2
  %20 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %19, align 8
  %21 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %22 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %18
  store i8 1, i8* %6, align 8
  br label %40

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %20, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %27) #5
  %28 = load i8, i8* %6, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %31, align 8
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %34 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  store i8 1, i8* %6, align 8
  br label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %32, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %39) #5
  br label %40

40:                                               ; preds = %14, %2, %25, %38, %37, %26, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE19VisitForOfStatementEPNS0_14ForOfStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::ForOfStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %40

15:                                               ; preds = %9
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %5) #5
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 2
  %20 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %19, align 8
  %21 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %22 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %18
  store i8 1, i8* %6, align 8
  br label %40

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %20, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %27) #5
  %28 = load i8, i8* %6, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %31, align 8
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %34 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  store i8 1, i8* %6, align 8
  br label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %32, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %39) #5
  br label %40

40:                                               ; preds = %14, %2, %25, %38, %37, %26, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE10VisitBlockEPNS0_5BlockE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::Block"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Scope"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %3, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 6, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 6, i32 1
  %13 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %12, align 8
  %14 = icmp eq %"class.v8::internal::Declaration"** %11, %13
  %15 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  br i1 %14, label %16, label %18

16:                                               ; preds = %6
  %17 = load i8, i8* %15, align 8, !range !2
  br label %47

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %20 = load i8, i8* %15, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br label %22

22:                                               ; preds = %18, %40
  %23 = phi i8 [ %20, %18 ], [ %37, %40 ]
  %24 = phi i8 [ %20, %18 ], [ 0, %40 ]
  %25 = phi i1 [ %21, %18 ], [ true, %40 ]
  %26 = phi %"class.v8::internal::Declaration"** [ %11, %18 ], [ %42, %40 ]
  %27 = bitcast %"class.v8::internal::Declaration"** %26 to %"class.v8::internal::AstNode"**
  %28 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %27, align 8
  br i1 %25, label %29, label %36

29:                                               ; preds = %22
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %31 = load i64, i64* %19, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  store i8 1, i8* %15, align 8
  br label %44

34:                                               ; preds = %29
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %28) #5
  %35 = load i8, i8* %15, align 8, !range !2
  br label %36

36:                                               ; preds = %22, %34
  %37 = phi i8 [ %23, %22 ], [ %35, %34 ]
  %38 = phi i8 [ %24, %22 ], [ %35, %34 ]
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %26, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %41, i64 0, i32 2
  %43 = icmp eq %"class.v8::internal::Declaration"** %42, %13
  br i1 %43, label %44, label %22

44:                                               ; preds = %40, %36, %33
  %45 = phi i8 [ 1, %33 ], [ %37, %36 ], [ %37, %40 ]
  %46 = load i32, i32* %7, align 8
  br label %47

47:                                               ; preds = %16, %44
  %48 = phi i8 [ %45, %44 ], [ %17, %16 ]
  %49 = phi i32 [ %46, %44 ], [ %9, %16 ]
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %7, align 8
  %51 = icmp eq i8 %48, 0
  br i1 %51, label %52, label %85

52:                                               ; preds = %47, %2
  %53 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %85

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %59 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %60 = load i8, i8* %58, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br label %66

62:                                               ; preds = %81
  %63 = load i32, i32* %53, align 4
  %64 = sext i32 %63 to i64
  %65 = icmp slt i64 %84, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %56, %62
  %67 = phi i8 [ %60, %56 ], [ 0, %62 ]
  %68 = phi i1 [ %61, %56 ], [ true, %62 ]
  %69 = phi i64 [ 0, %56 ], [ %84, %62 ]
  %70 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %57, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %70, i64 %69
  %72 = bitcast %"class.v8::internal::Statement"** %71 to %"class.v8::internal::AstNode"**
  %73 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %72, align 8
  br i1 %68, label %74, label %81

74:                                               ; preds = %66
  %75 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %76 = load i64, i64* %59, align 8
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  store i8 1, i8* %58, align 8
  br label %85

79:                                               ; preds = %74
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %73) #5
  %80 = load i8, i8* %58, align 8, !range !2
  br label %81

81:                                               ; preds = %66, %79
  %82 = phi i8 [ %67, %66 ], [ %80, %79 ]
  %83 = icmp eq i8 %82, 0
  %84 = add nuw nsw i64 %69, 1
  br i1 %83, label %62, label %85

85:                                               ; preds = %62, %81, %78, %52, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE20VisitSwitchStatementEPNS0_15SwitchStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::SwitchStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %71

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %71

15:                                               ; preds = %9
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %5) #5
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %71

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %71

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %30

25:                                               ; preds = %53, %47
  %26 = add nuw nsw i64 %31, 1
  %27 = load i32, i32* %19, align 4
  %28 = sext i32 %27 to i64
  %29 = icmp slt i64 %26, %28
  br i1 %29, label %30, label %71

30:                                               ; preds = %22, %25
  %31 = phi i64 [ 0, %22 ], [ %26, %25 ]
  %32 = load %"class.v8::internal::CaseClause"**, %"class.v8::internal::CaseClause"*** %23, align 8
  %33 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %32, i64 %31
  %34 = load %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %34, i64 0, i32 0
  %36 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %35, align 8
  %37 = icmp eq %"class.v8::internal::Expression"* %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %30
  %39 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %40 = load i64, i64* %24, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store i8 1, i8* %6, align 8
  br label %71

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %36, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %44) #5
  %45 = load i8, i8* %6, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %71

47:                                               ; preds = %43, %30
  %48 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %34, i64 0, i32 1, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %25

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %34, i64 0, i32 1, i32 0
  br label %57

53:                                               ; preds = %67
  %54 = load i32, i32* %48, align 4
  %55 = sext i32 %54 to i64
  %56 = icmp slt i64 %70, %55
  br i1 %56, label %57, label %25

57:                                               ; preds = %53, %51
  %58 = phi i64 [ 0, %51 ], [ %70, %53 ]
  %59 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %52, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %59, i64 %58
  %61 = bitcast %"class.v8::internal::Statement"** %60 to %"class.v8::internal::AstNode"**
  %62 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %61, align 8
  %63 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %64 = load i64, i64* %24, align 8
  %65 = icmp ult i64 %63, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  store i8 1, i8* %6, align 8
  br label %71

67:                                               ; preds = %57
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %62) #5
  %68 = load i8, i8* %6, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = add nuw nsw i64 %58, 1
  br i1 %69, label %53, label %71

71:                                               ; preds = %25, %43, %67, %66, %14, %2, %42, %18, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE16VisitIfStatementEPNS0_11IfStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::IfStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %40

15:                                               ; preds = %9
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %5) #5
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 2
  %20 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %19, align 8
  %21 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %22 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %18
  store i8 1, i8* %6, align 8
  br label %40

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %20, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %27) #5
  %28 = load i8, i8* %6, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 3
  %32 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %31, align 8
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %34 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  store i8 1, i8* %6, align 8
  br label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %32, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %39) #5
  br label %40

40:                                               ; preds = %14, %2, %25, %38, %37, %26, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE36VisitInitializeClassMembersStatementEPNS0_31InitializeClassMembersStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::InitializeClassMembersStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassMembersStatement", %"class.v8::internal::InitializeClassMembersStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::ZoneList.34"*, %"class.v8::internal::ZoneList.34"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %55

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList.34", %"class.v8::internal::ZoneList.34"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %16

12:                                               ; preds = %50
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %54, %14
  br i1 %15, label %16, label %55

16:                                               ; preds = %8, %12
  %17 = phi i64 [ 0, %8 ], [ %54, %12 ]
  %18 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %9, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %18, i64 %17
  %20 = bitcast %"class.v8::internal::ClassLiteralProperty"** %19 to %"class.v8::internal::LiteralProperty"**
  %21 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %21, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -2
  %25 = inttoptr i64 %24 to %"class.v8::internal::Expression"*
  %26 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 41
  %31 = load i8, i8* %10, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %30, label %42, label %33

33:                                               ; preds = %16
  br i1 %32, label %34, label %55

34:                                               ; preds = %33
  %35 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %36 = load i64, i64* %11, align 8
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  store i8 1, i8* %10, align 8
  br label %55

39:                                               ; preds = %34
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %26) #5
  %40 = load i8, i8* %10, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %43, label %55

42:                                               ; preds = %16
  br i1 %32, label %43, label %55

43:                                               ; preds = %39, %42
  %44 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %21, i64 0, i32 1
  %45 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %44, align 8
  %46 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %47 = load i64, i64* %11, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i8 1, i8* %10, align 8
  br label %55

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %45, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %51) #5
  %52 = load i8, i8* %10, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = add nuw nsw i64 %17, 1
  br i1 %53, label %12, label %55

55:                                               ; preds = %42, %33, %12, %39, %50, %49, %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE43VisitInitializeClassStaticElementsStatementEPNS0_38InitializeClassStaticElementsStatementE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::InitializeClassStaticElementsStatement"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassStaticElementsStatement", %"class.v8::internal::InitializeClassStaticElementsStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::ZoneList.43"*, %"class.v8::internal::ZoneList.43"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.43", %"class.v8::internal::ZoneList.43"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %74

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList.43", %"class.v8::internal::ZoneList.43"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %12

12:                                               ; preds = %8, %69
  %13 = phi i64 [ 0, %8 ], [ %70, %69 ]
  %14 = load %"class.v8::internal::ClassLiteralStaticElement"**, %"class.v8::internal::ClassLiteralStaticElement"*** %9, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %14, i64 %13
  %16 = load %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  switch i8 %18, label %69 [
    i8 0, label %19
    i8 1, label %54
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %16, i64 0, i32 1, i32 0
  %21 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, -2
  %25 = inttoptr i64 %24 to %"class.v8::internal::Expression"*
  %26 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 41
  %31 = load i8, i8* %10, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %30, label %42, label %33

33:                                               ; preds = %19
  br i1 %32, label %34, label %74

34:                                               ; preds = %33
  %35 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %36 = load i64, i64* %11, align 8
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  store i8 1, i8* %10, align 8
  br label %74

39:                                               ; preds = %34
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %26) #5
  %40 = load i8, i8* %10, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %43, label %74

42:                                               ; preds = %19
  br i1 %32, label %43, label %74

43:                                               ; preds = %39, %42
  %44 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %21, i64 0, i32 0, i32 1
  %45 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %44, align 8
  %46 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %47 = load i64, i64* %11, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i8 1, i8* %10, align 8
  br label %74

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %45, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %51) #5
  %52 = load i8, i8* %10, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %69, label %74

54:                                               ; preds = %12
  %55 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %16, i64 0, i32 1
  %56 = bitcast %union.anon.44* %55 to %"class.v8::internal::Block"**
  %57 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %10, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %74

61:                                               ; preds = %54
  %62 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %63 = load i64, i64* %11, align 8
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  store i8 1, i8* %10, align 8
  br label %74

66:                                               ; preds = %61
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %58) #5
  %67 = load i8, i8* %10, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %50, %66, %12
  %70 = add nuw nsw i64 %13, 1
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %12, label %74

74:                                               ; preds = %54, %42, %33, %69, %66, %39, %50, %65, %49, %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE18VisitObjectLiteralEPNS0_13ObjectLiteralE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::ObjectLiteral"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ObjectLiteral", %"class.v8::internal::ObjectLiteral"* %1, i64 0, i32 3, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %61

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ObjectLiteral", %"class.v8::internal::ObjectLiteral"* %1, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %11 = load i32, i32* %8, align 8
  %12 = load i8, i8* %9, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br label %18

14:                                               ; preds = %54
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %60, %16
  br i1 %17, label %18, label %61

18:                                               ; preds = %6, %14
  %19 = phi i1 [ %13, %6 ], [ true, %14 ]
  %20 = phi i32 [ %11, %6 ], [ %58, %14 ]
  %21 = phi i64 [ 0, %6 ], [ %60, %14 ]
  %22 = load %"class.v8::internal::ObjectLiteralProperty"**, %"class.v8::internal::ObjectLiteralProperty"*** %7, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %22, i64 %21
  %24 = bitcast %"class.v8::internal::ObjectLiteralProperty"** %23 to %"class.v8::internal::LiteralProperty"**
  %25 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %24, align 8
  %26 = add nsw i32 %20, 1
  store i32 %26, i32* %8, align 8
  %27 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %25, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, -2
  %30 = inttoptr i64 %29 to %"class.v8::internal::Expression"*
  %31 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %30, i64 0, i32 0
  br i1 %19, label %32, label %37

32:                                               ; preds = %18
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %34 = load i64, i64* %10, align 8
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  store i8 1, i8* %9, align 8
  br label %37

37:                                               ; preds = %18, %36
  %38 = load i32, i32* %8, align 8
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %8, align 8
  br label %61

40:                                               ; preds = %32
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %31) #5
  %41 = load i8, i8* %9, align 8, !range !2
  %42 = load i32, i32* %8, align 8
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %8, align 8
  %44 = icmp eq i8 %41, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %40
  store i32 %42, i32* %8, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %25, i64 0, i32 1
  %47 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %46, align 8
  %48 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %49 = load i64, i64* %10, align 8
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  store i8 1, i8* %9, align 8
  %52 = load i32, i32* %8, align 8
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %8, align 8
  br label %61

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %47, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %55) #5
  %56 = load i8, i8* %9, align 8, !range !2
  %57 = load i32, i32* %8, align 8
  %58 = add nsw i32 %57, -1
  store i32 %58, i32* %8, align 8
  %59 = icmp eq i8 %56, 0
  %60 = add nuw nsw i64 %21, 1
  br i1 %59, label %14, label %61

61:                                               ; preds = %14, %40, %54, %37, %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::Assignment"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 1
  %7 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %14 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  store i8 1, i8* %9, align 8
  br label %33

18:                                               ; preds = %12
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %8) #5
  %19 = load i8, i8* %9, align 8, !range !2
  %20 = load i32, i32* %3, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %3, align 8
  %22 = icmp eq i8 %19, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %18
  store i32 %20, i32* %3, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 2
  %25 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %24, align 8
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #5
  %27 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %23
  store i8 1, i8* %9, align 8
  br label %33

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0
  tail call void @_ZN2v88internal19AstTraversalVisitorINS0_29AstFunctionLiteralIdReindexerEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %32) #5
  br label %33

33:                                               ; preds = %31, %30, %17, %2
  %34 = load i32, i32* %3, align 8
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %3, align 8
  br label %36

36:                                               ; preds = %33, %18
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
