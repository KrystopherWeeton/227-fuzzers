; ModuleID = '../../third_party/ffmpeg/libavutil/x86/autorename_libavutil_x86_float_dsp_init.c'
source_filename = "../../third_party/ffmpeg/libavutil/x86/autorename_libavutil_x86_float_dsp_init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_float_dsp_init_x86(%struct.AVFloatDSPContext*) local_unnamed_addr #0 {
  %2 = tail call i32 @av_get_cpu_flags() #2
  %3 = and i32 %2, 32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 5
  store void (float*, float*, float*, float*, i32)* @ff_vector_fmul_window_3dnowext, void (float*, float*, float*, float*, i32)** %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = and i32 %2, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 0
  store void (float*, float*, float*, i32)* @ff_vector_fmul_sse, void (float*, float*, float*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 1
  store void (float*, float*, float, i32)* @ff_vector_fmac_scalar_sse, void (float*, float*, float, i32)** %12, align 8
  %13 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 3
  store void (float*, float*, float, i32)* @ff_vector_fmul_scalar_sse, void (float*, float*, float, i32)** %13, align 8
  %14 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 5
  %15 = bitcast void (float*, float*, float*, float*, i32)** %14 to <2 x void (float*, float*, float*, float*, i32)*>*
  store <2 x void (float*, float*, float*, float*, i32)*> <void (float*, float*, float*, float*, i32)* @ff_vector_fmul_window_sse, void (float*, float*, float*, float*, i32)* @ff_vector_fmul_add_sse>, <2 x void (float*, float*, float*, float*, i32)*>* %15, align 8
  %16 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 7
  store void (float*, float*, float*, i32)* @ff_vector_fmul_reverse_sse, void (float*, float*, float*, i32)** %16, align 8
  %17 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 9
  store float (float*, float*, i32)* @ff_scalarproduct_float_sse, float (float*, float*, i32)** %17, align 8
  %18 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 8
  store void (float*, float*, i32)* @ff_butterflies_float_sse, void (float*, float*, i32)** %18, align 8
  br label %19

19:                                               ; preds = %7, %10
  %20 = and i32 %2, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 10
  store void (double*, double*, double*, i32)* @ff_vector_dmul_sse2, void (double*, double*, double*, i32)** %23, align 8
  %24 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 2
  store void (double*, double*, double, i32)* @ff_vector_dmac_scalar_sse2, void (double*, double*, double, i32)** %24, align 8
  %25 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 4
  store void (double*, double*, double, i32)* @ff_vector_dmul_scalar_sse2, void (double*, double*, double, i32)** %25, align 8
  br label %26

26:                                               ; preds = %19, %22
  %27 = and i32 %2, 134234112
  %28 = icmp eq i32 %27, 16384
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 0
  store void (float*, float*, float*, i32)* @ff_vector_fmul_avx, void (float*, float*, float*, i32)** %30, align 8
  %31 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 10
  store void (double*, double*, double*, i32)* @ff_vector_dmul_avx, void (double*, double*, double*, i32)** %31, align 8
  %32 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 1
  store void (float*, float*, float, i32)* @ff_vector_fmac_scalar_avx, void (float*, float*, float, i32)** %32, align 8
  %33 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 4
  store void (double*, double*, double, i32)* @ff_vector_dmul_scalar_avx, void (double*, double*, double, i32)** %33, align 8
  %34 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 2
  store void (double*, double*, double, i32)* @ff_vector_dmac_scalar_avx, void (double*, double*, double, i32)** %34, align 8
  %35 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 6
  store void (float*, float*, float*, float*, i32)* @ff_vector_fmul_add_avx, void (float*, float*, float*, float*, i32)** %35, align 8
  %36 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 7
  store void (float*, float*, float*, i32)* @ff_vector_fmul_reverse_avx, void (float*, float*, float*, i32)** %36, align 8
  br label %37

37:                                               ; preds = %26, %29
  %38 = and i32 %2, 134250496
  %39 = icmp eq i32 %38, 32768
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 7
  store void (float*, float*, float*, i32)* @ff_vector_fmul_reverse_avx2, void (float*, float*, float*, i32)** %41, align 8
  br label %42

42:                                               ; preds = %40, %37
  %43 = and i32 %2, 134283264
  %44 = icmp eq i32 %43, 65536
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 1
  store void (float*, float*, float, i32)* @ff_vector_fmac_scalar_fma3, void (float*, float*, float, i32)** %46, align 8
  %47 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 6
  store void (float*, float*, float*, float*, i32)* @ff_vector_fmul_add_fma3, void (float*, float*, float*, float*, i32)** %47, align 8
  %48 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %0, i64 0, i32 2
  store void (double*, double*, double, i32)* @ff_vector_dmac_scalar_fma3, void (double*, double*, double, i32)** %48, align 8
  br label %49

49:                                               ; preds = %42, %45
  ret void
}

declare i32 @av_get_cpu_flags() local_unnamed_addr #1

declare void @ff_vector_fmul_window_3dnowext(float*, float*, float*, float*, i32) #1

declare void @ff_vector_fmul_sse(float*, float*, float*, i32) #1

declare void @ff_vector_fmac_scalar_sse(float*, float*, float, i32) #1

declare void @ff_vector_fmul_scalar_sse(float*, float*, float, i32) #1

declare void @ff_vector_fmul_window_sse(float*, float*, float*, float*, i32) #1

declare void @ff_vector_fmul_add_sse(float*, float*, float*, float*, i32) #1

declare void @ff_vector_fmul_reverse_sse(float*, float*, float*, i32) #1

declare float @ff_scalarproduct_float_sse(float*, float*, i32) #1

declare void @ff_butterflies_float_sse(float*, float*, i32) #1

declare void @ff_vector_dmul_sse2(double*, double*, double*, i32) #1

declare void @ff_vector_dmac_scalar_sse2(double*, double*, double, i32) #1

declare void @ff_vector_dmul_scalar_sse2(double*, double*, double, i32) #1

declare void @ff_vector_fmul_avx(float*, float*, float*, i32) #1

declare void @ff_vector_dmul_avx(double*, double*, double*, i32) #1

declare void @ff_vector_fmac_scalar_avx(float*, float*, float, i32) #1

declare void @ff_vector_dmul_scalar_avx(double*, double*, double, i32) #1

declare void @ff_vector_dmac_scalar_avx(double*, double*, double, i32) #1

declare void @ff_vector_fmul_add_avx(float*, float*, float*, float*, i32) #1

declare void @ff_vector_fmul_reverse_avx(float*, float*, float*, i32) #1

declare void @ff_vector_fmul_reverse_avx2(float*, float*, float*, i32) #1

declare void @ff_vector_fmac_scalar_fma3(float*, float*, float, i32) #1

declare void @ff_vector_fmul_add_fma3(float*, float*, float*, float*, i32) #1

declare void @ff_vector_dmac_scalar_fma3(double*, double*, double, i32) #1

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
