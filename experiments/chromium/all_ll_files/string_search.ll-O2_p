; ModuleID = '../../base/i18n/string_search.cc'
source_filename = "../../base/i18n/string_search.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::i18n::FixedPatternStringSearch" = type { %"class.std::__1::basic_string", %struct.UStringSearch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%struct.UStringSearch = type opaque
%"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents" = type { %"class.base::i18n::FixedPatternStringSearch" }
%"class.base::i18n::RepeatingStringSearch" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %struct.UStringSearch* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%struct.UBreakIterator = type opaque
%struct.UCollator = type opaque
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }

@_ZN4base4i18n24FixedPatternStringSearchC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb = hidden unnamed_addr alias void (%"class.base::i18n::FixedPatternStringSearch"*, %"class.std::__1::basic_string"*, i1), void (%"class.base::i18n::FixedPatternStringSearch"*, %"class.std::__1::basic_string"*, i1)* @_ZN4base4i18n24FixedPatternStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb
@_ZN4base4i18n24FixedPatternStringSearchD1Ev = hidden unnamed_addr alias void (%"class.base::i18n::FixedPatternStringSearch"*), void (%"class.base::i18n::FixedPatternStringSearch"*)* @_ZN4base4i18n24FixedPatternStringSearchD2Ev
@_ZN4base4i18n46FixedPatternStringSearchIgnoringCaseAndAccentsC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"*, %"class.std::__1::basic_string"*), void (%"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"*, %"class.std::__1::basic_string"*)* @_ZN4base4i18n46FixedPatternStringSearchIgnoringCaseAndAccentsC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE
@_ZN4base4i18n21RepeatingStringSearchC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEESA_b = hidden unnamed_addr alias void (%"class.base::i18n::RepeatingStringSearch"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1), void (%"class.base::i18n::RepeatingStringSearch"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)* @_ZN4base4i18n21RepeatingStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEESA_b
@_ZN4base4i18n21RepeatingStringSearchD1Ev = hidden unnamed_addr alias void (%"class.base::i18n::RepeatingStringSearch"*), void (%"class.base::i18n::RepeatingStringSearch"*)* @_ZN4base4i18n21RepeatingStringSearchD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n24FixedPatternStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb(%"class.base::i18n::FixedPatternStringSearch"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #8
  br label %187

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 11
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i16*
  %20 = trunc i64 %16 to i8
  %21 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 %20, i8* %22, align 1
  br label %40

23:                                               ; preds = %12
  %24 = icmp ugt i64 %16, 9223372036854775791
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %26) #9
  unreachable

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @abort() #9
  unreachable

32:                                               ; preds = %27
  %33 = shl i64 %29, 1
  %34 = tail call i8* @_Znwm(i64 %33) #10
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i8**
  store i8* %34, i8** %36, align 8
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %18
  %41 = phi i16* [ %19, %18 ], [ %35, %32 ]
  %42 = add nuw nsw i64 %16, 1
  %43 = add i64 %16, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %134, label %45

45:                                               ; preds = %40
  %46 = add i64 %16, 1
  %47 = getelementptr i16, i16* %41, i64 %46
  %48 = getelementptr i16, i16* %14, i64 %46
  %49 = icmp ult i16* %41, %48
  %50 = icmp ult i16* %14, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %45
  %53 = and i64 %43, -16
  %54 = sub i64 %42, %53
  %55 = getelementptr i16, i16* %14, i64 %53
  %56 = getelementptr i16, i16* %41, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %14, i64 %65
  %68 = getelementptr i16, i16* %41, i64 %65
  %69 = bitcast i16* %67 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !2
  %71 = getelementptr i16, i16* %67, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !2
  %74 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = getelementptr i16, i16* %68, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !5, !noalias !2
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %14, i64 %77
  %79 = getelementptr i16, i16* %41, i64 %77
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !2
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %14, i64 %88
  %90 = getelementptr i16, i16* %41, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %14, i64 %99
  %101 = getelementptr i16, i16* %41, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !7

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %14, i64 %117
  %120 = getelementptr i16, i16* %41, i64 %117
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !2
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !5, !noalias !2
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !9

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %43, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %45, %40
  %135 = phi i64 [ %42, %45 ], [ %42, %40 ], [ %54, %132 ]
  %136 = phi i16* [ %14, %45 ], [ %14, %40 ], [ %55, %132 ]
  %137 = phi i16* [ %41, %45 ], [ %41, %40 ], [ %56, %132 ]
  %138 = add i64 %135, -1
  %139 = and i64 %135, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i64 [ %147, %141 ], [ %135, %134 ]
  %143 = phi i16* [ %149, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %148, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %143, align 2
  store i16 %146, i16* %144, align 2
  %147 = add i64 %142, -1
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !11

152:                                              ; preds = %141, %134
  %153 = phi i64 [ %135, %134 ], [ %147, %141 ]
  %154 = phi i16* [ %136, %134 ], [ %149, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %148, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %183, %157 ], [ %153, %152 ]
  %159 = phi i16* [ %185, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %184, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %159, align 2
  store i16 %161, i16* %160, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %158, -8
  %184 = getelementptr inbounds i16, i16* %160, i64 8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !12

187:                                              ; preds = %152, %157, %132, %9
  %188 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188) #8
  store i32 0, i32* %4, align 4
  %189 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %189, i64 0, i32 1, i32 1
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %199

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i16*, i16** %194, align 8
  %196 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = trunc i64 %197 to i32
  br label %203

199:                                              ; preds = %187
  %200 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i16*
  %201 = zext i8 %191 to i32
  %202 = zext i8 %191 to i32
  br label %203

203:                                              ; preds = %193, %199
  %204 = phi i32 [ %198, %193 ], [ %202, %199 ]
  %205 = phi i16* [ %195, %193 ], [ %200, %199 ]
  %206 = phi i32 [ %198, %193 ], [ %201, %199 ]
  %207 = tail call i8* @uloc_getDefault_69() #8
  %208 = call %struct.UStringSearch* @usearch_open_69(i16* %205, i32 %206, i16* %205, i32 %204, i8* %207, %struct.UBreakIterator* null, i32* nonnull %4) #8
  %209 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 1
  store %struct.UStringSearch* %208, %struct.UStringSearch** %209, align 8
  %210 = load i32, i32* %4, align 4
  %211 = icmp sgt i32 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %203
  %213 = call %struct.UCollator* @usearch_getCollator_69(%struct.UStringSearch* %208) #8
  %214 = select i1 %2, i32 2, i32 0
  call void @ucol_setStrength_69(%struct.UCollator* %213, i32 %214) #8
  %215 = load %struct.UStringSearch*, %struct.UStringSearch** %209, align 8
  call void @usearch_reset_69(%struct.UStringSearch* %215) #8
  br label %216

216:                                              ; preds = %203, %212
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UStringSearch* @usearch_open_69(i16*, i32, i16*, i32, i8*, %struct.UBreakIterator*, i32*) local_unnamed_addr #2

declare i8* @uloc_getDefault_69() local_unnamed_addr #2

declare %struct.UCollator* @usearch_getCollator_69(%struct.UStringSearch*) local_unnamed_addr #2

declare void @ucol_setStrength_69(%struct.UCollator*, i32) local_unnamed_addr #2

declare void @usearch_reset_69(%struct.UStringSearch*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n24FixedPatternStringSearchD2Ev(%"class.base::i18n::FixedPatternStringSearch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 1
  %3 = load %struct.UStringSearch*, %struct.UStringSearch** %2, align 8
  %4 = icmp eq %struct.UStringSearch* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @usearch_close_69(%struct.UStringSearch* nonnull %3) #8
  br label %6

6:                                                ; preds = %1, %5
  %7 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %6, %11
  ret void
}

declare void @usearch_close_69(%struct.UStringSearch*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n24FixedPatternStringSearch6SearchERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPmSB_b(%"class.base::i18n::FixedPatternStringSearch"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 1
  %9 = load %struct.UStringSearch*, %struct.UStringSearch** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i16* %15, i16* %18
  %21 = select i1 %13, i64 %17, i64 %19
  %22 = trunc i64 %21 to i32
  call void @usearch_setText_69(%struct.UStringSearch* %9, i16* %20, i32 %22, i32* nonnull %6) #8
  %23 = load i32, i32* %6, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %114

25:                                               ; preds = %5
  %26 = load i8, i8* %11, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i16*, i16** %14, align 8
  %29 = select i1 %27, i16* %28, i16* %18
  %30 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %0 to i16*
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i16* %35, i16* %38
  %41 = select i1 %33, i64 %37, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %99, label %43

43:                                               ; preds = %25
  %44 = load i64, i64* %16, align 8
  %45 = zext i8 %26 to i64
  %46 = select i1 %27, i64 %44, i64 %45
  %47 = getelementptr inbounds i16, i16* %29, i64 %46
  %48 = shl nuw i64 %41, 1
  %49 = ashr exact i64 %48, 1
  %50 = ptrtoint i16* %47 to i64
  %51 = ptrtoint i16* %29 to i64
  %52 = shl nuw i64 %46, 1
  %53 = ashr exact i64 %52, 1
  %54 = icmp slt i64 %53, %49
  br i1 %54, label %136, label %55

55:                                               ; preds = %43
  %56 = load i16, i16* %40, align 2
  br label %57

57:                                               ; preds = %86, %55
  %58 = phi i64 [ %53, %55 ], [ %90, %86 ]
  %59 = phi i16* [ %29, %55 ], [ %87, %86 ]
  %60 = sub nsw i64 %58, %49
  %61 = add nsw i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %136, label %63

63:                                               ; preds = %57, %68
  %64 = phi i64 [ %70, %68 ], [ %61, %57 ]
  %65 = phi i16* [ %69, %68 ], [ %59, %57 ]
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, %56
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i16, i16* %65, i64 1
  %70 = add i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %136, label %63

72:                                               ; preds = %63
  %73 = icmp eq i16* %65, null
  br i1 %73, label %136, label %74

74:                                               ; preds = %72, %81
  %75 = phi i16* [ %79, %81 ], [ %65, %72 ]
  %76 = phi i16* [ %82, %81 ], [ %40, %72 ]
  %77 = phi i64 [ %78, %81 ], [ %49, %72 ]
  %78 = add i64 %77, -1
  %79 = getelementptr inbounds i16, i16* %75, i64 1
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds i16, i16* %76, i64 1
  %83 = load i16, i16* %79, align 2
  %84 = load i16, i16* %82, align 2
  %85 = icmp eq i16 %84, %83
  br i1 %85, label %74, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds i16, i16* %65, i64 1
  %88 = ptrtoint i16* %87 to i64
  %89 = sub i64 %50, %88
  %90 = ashr exact i64 %89, 1
  %91 = icmp slt i64 %90, %49
  br i1 %91, label %136, label %57

92:                                               ; preds = %74
  %93 = ptrtoint i16* %65 to i64
  %94 = icmp eq i16* %65, %47
  %95 = sub i64 %93, %51
  %96 = ashr exact i64 %95, 1
  %97 = icmp eq i64 %95, -2
  %98 = or i1 %94, %97
  br i1 %98, label %136, label %99

99:                                               ; preds = %92, %25
  %100 = phi i64 [ 0, %25 ], [ %96, %92 ]
  %101 = icmp eq i64* %2, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  store i64 %100, i64* %2, align 8
  br label %103

103:                                              ; preds = %99, %102
  %104 = icmp eq i64* %3, null
  br i1 %104, label %136, label %105

105:                                              ; preds = %103
  %106 = load i8, i8* %31, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i64, i64* %36, align 8
  br label %112

110:                                              ; preds = %105
  %111 = zext i8 %106 to i64
  br label %112

112:                                              ; preds = %108, %110
  %113 = phi i64 [ %109, %108 ], [ %111, %110 ]
  store i64 %113, i64* %3, align 8
  br label %136

114:                                              ; preds = %5
  %115 = load %struct.UStringSearch*, %struct.UStringSearch** %8, align 8
  br i1 %4, label %116, label %118

116:                                              ; preds = %114
  %117 = call i32 @usearch_first_69(%struct.UStringSearch* %115, i32* nonnull %6) #8
  br label %120

118:                                              ; preds = %114
  %119 = call i32 @usearch_last_69(%struct.UStringSearch* %115, i32* nonnull %6) #8
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi i32 [ %117, %116 ], [ %119, %118 ]
  %122 = load i32, i32* %6, align 4
  %123 = icmp sgt i32 %122, 0
  %124 = icmp eq i32 %121, -1
  %125 = or i1 %124, %123
  br i1 %125, label %136, label %126

126:                                              ; preds = %120
  %127 = icmp eq i64* %2, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = sext i32 %121 to i64
  store i64 %129, i64* %2, align 8
  br label %130

130:                                              ; preds = %126, %128
  %131 = icmp eq i64* %3, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %130
  %133 = load %struct.UStringSearch*, %struct.UStringSearch** %8, align 8
  %134 = call i32 @usearch_getMatchedLength_69(%struct.UStringSearch* %133) #8
  %135 = sext i32 %134 to i64
  store i64 %135, i64* %3, align 8
  br label %136

136:                                              ; preds = %86, %72, %57, %68, %43, %92, %120, %130, %132, %103, %112
  %137 = phi i1 [ true, %103 ], [ true, %112 ], [ false, %120 ], [ true, %130 ], [ true, %132 ], [ false, %92 ], [ false, %43 ], [ false, %68 ], [ false, %57 ], [ false, %72 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i1 %137
}

declare void @usearch_setText_69(%struct.UStringSearch*, i16*, i32, i32*) local_unnamed_addr #2

declare i32 @usearch_first_69(%struct.UStringSearch*, i32*) local_unnamed_addr #2

declare i32 @usearch_last_69(%struct.UStringSearch*, i32*) local_unnamed_addr #2

declare i32 @usearch_getMatchedLength_69(%struct.UStringSearch*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n46FixedPatternStringSearchIgnoringCaseAndAccentsC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents", %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %0, i64 0, i32 0
  tail call void @_ZN4base4i18n24FixedPatternStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb(%"class.base::i18n::FixedPatternStringSearch"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n46FixedPatternStringSearchIgnoringCaseAndAccents6SearchERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPmSB_(%"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents", %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN4base4i18n24FixedPatternStringSearch6SearchERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPmSB_b(%"class.base::i18n::FixedPatternStringSearch"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64* %2, i64* %3, i1 zeroext true)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n34StringSearchIgnoringCaseAndAccentsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_PmSA_(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64*, i64*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents", align 8
  %6 = bitcast %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents", %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %5, i64 0, i32 0
  call void @_ZN4base4i18n24FixedPatternStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb(%"class.base::i18n::FixedPatternStringSearch"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %0, i1 zeroext false) #8
  %8 = call zeroext i1 @_ZN4base4i18n24FixedPatternStringSearch6SearchERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPmSB_b(%"class.base::i18n::FixedPatternStringSearch"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64* %2, i64* %3, i1 zeroext true) #8
  %9 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents", %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %5, i64 0, i32 0, i32 1
  %10 = load %struct.UStringSearch*, %struct.UStringSearch** %9, align 8
  %11 = icmp eq %struct.UStringSearch* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  call void @usearch_close_69(%struct.UStringSearch* nonnull %10) #8
  br label %13

13:                                               ; preds = %12, %4
  %14 = bitcast %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = bitcast %"class.base::i18n::FixedPatternStringSearchIgnoringCaseAndAccents"* %5 to i8**
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %13, %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n12StringSearchERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_PmSA_bb(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i64*, i64*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %7 = alloca %"class.base::i18n::FixedPatternStringSearch", align 8
  %8 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @_ZN4base4i18n24FixedPatternStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEb(%"class.base::i18n::FixedPatternStringSearch"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %0, i1 zeroext %4)
  %9 = call zeroext i1 @_ZN4base4i18n24FixedPatternStringSearch6SearchERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPmSB_b(%"class.base::i18n::FixedPatternStringSearch"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64* %2, i64* %3, i1 zeroext %5)
  %10 = getelementptr inbounds %"class.base::i18n::FixedPatternStringSearch", %"class.base::i18n::FixedPatternStringSearch"* %7, i64 0, i32 1
  %11 = load %struct.UStringSearch*, %struct.UStringSearch** %10, align 8
  %12 = icmp eq %struct.UStringSearch* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @usearch_close_69(%struct.UStringSearch* nonnull %11) #8
  br label %14

14:                                               ; preds = %13, %6
  %15 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = bitcast %"class.base::i18n::FixedPatternStringSearch"* %7 to i8**
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %14, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n21RepeatingStringSearchC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEESA_b(%"class.base::i18n::RepeatingStringSearch"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca i32, align 4
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #8
  br label %189

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #9
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #9
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #10
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !13
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !13
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !16, !noalias !13
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !16, !noalias !13
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !13
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !13
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !16, !noalias !13
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !16, !noalias !13
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !13
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !13
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !16, !noalias !13
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !16, !noalias !13
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !13
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !16, !noalias !13
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !16, !noalias !13
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !18

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !13
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !13
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !16, !noalias !13
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !16, !noalias !13
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !19

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !20

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !21

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 1
  %191 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  %197 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 24, i1 false) #8
  br label %373

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i16*, i16** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %202, 11
  br i1 %203, label %204, label %209

204:                                              ; preds = %198
  %205 = bitcast %"class.std::__1::basic_string"* %190 to i16*
  %206 = trunc i64 %202 to i8
  %207 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  store i8 %206, i8* %208, align 1
  br label %226

209:                                              ; preds = %198
  %210 = icmp ugt i64 %202, 9223372036854775791
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::basic_string"* %190 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %212) #9
  unreachable

213:                                              ; preds = %209
  %214 = add nuw nsw i64 %202, 8
  %215 = and i64 %214, -8
  %216 = icmp slt i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  tail call void @abort() #9
  unreachable

218:                                              ; preds = %213
  %219 = shl i64 %215, 1
  %220 = tail call i8* @_Znwm(i64 %219) #10
  %221 = bitcast i8* %220 to i16*
  %222 = bitcast %"class.std::__1::basic_string"* %190 to i8**
  store i8* %220, i8** %222, align 8
  %223 = or i64 %215, -9223372036854775808
  %224 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %202, i64* %225, align 8
  br label %226

226:                                              ; preds = %218, %204
  %227 = phi i16* [ %205, %204 ], [ %221, %218 ]
  %228 = add nuw nsw i64 %202, 1
  %229 = add i64 %202, 1
  %230 = icmp ult i64 %229, 16
  br i1 %230, label %320, label %231

231:                                              ; preds = %226
  %232 = add i64 %202, 1
  %233 = getelementptr i16, i16* %227, i64 %232
  %234 = getelementptr i16, i16* %200, i64 %232
  %235 = icmp ult i16* %227, %234
  %236 = icmp ult i16* %200, %233
  %237 = and i1 %235, %236
  br i1 %237, label %320, label %238

238:                                              ; preds = %231
  %239 = and i64 %229, -16
  %240 = sub i64 %228, %239
  %241 = getelementptr i16, i16* %200, i64 %239
  %242 = getelementptr i16, i16* %227, i64 %239
  %243 = add i64 %239, -16
  %244 = lshr exact i64 %243, 4
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 48
  br i1 %247, label %299, label %248

248:                                              ; preds = %238
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr i16, i16* %200, i64 %251
  %254 = getelementptr i16, i16* %227, i64 %251
  %255 = bitcast i16* %253 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !22
  %257 = getelementptr i16, i16* %253, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !22
  %260 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %260, align 2, !alias.scope !25, !noalias !22
  %261 = getelementptr i16, i16* %254, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %262, align 2, !alias.scope !25, !noalias !22
  %263 = or i64 %251, 16
  %264 = getelementptr i16, i16* %200, i64 %263
  %265 = getelementptr i16, i16* %227, i64 %263
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !22
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !22
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !25, !noalias !22
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !25, !noalias !22
  %274 = or i64 %251, 32
  %275 = getelementptr i16, i16* %200, i64 %274
  %276 = getelementptr i16, i16* %227, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !22
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !22
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !25, !noalias !22
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !25, !noalias !22
  %285 = or i64 %251, 48
  %286 = getelementptr i16, i16* %200, i64 %285
  %287 = getelementptr i16, i16* %227, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !22
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !22
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !25, !noalias !22
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !25, !noalias !22
  %296 = add i64 %251, 64
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !27

299:                                              ; preds = %250, %238
  %300 = phi i64 [ 0, %238 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr i16, i16* %200, i64 %303
  %306 = getelementptr i16, i16* %227, i64 %303
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !22
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !22
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !25, !noalias !22
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !25, !noalias !22
  %315 = add i64 %303, 16
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !28

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %229, %239
  br i1 %319, label %373, label %320

320:                                              ; preds = %318, %231, %226
  %321 = phi i64 [ %228, %231 ], [ %228, %226 ], [ %240, %318 ]
  %322 = phi i16* [ %200, %231 ], [ %200, %226 ], [ %241, %318 ]
  %323 = phi i16* [ %227, %231 ], [ %227, %226 ], [ %242, %318 ]
  %324 = add i64 %321, -1
  %325 = and i64 %321, 7
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %338, label %327

327:                                              ; preds = %320, %327
  %328 = phi i64 [ %333, %327 ], [ %321, %320 ]
  %329 = phi i16* [ %335, %327 ], [ %322, %320 ]
  %330 = phi i16* [ %334, %327 ], [ %323, %320 ]
  %331 = phi i64 [ %336, %327 ], [ %325, %320 ]
  %332 = load i16, i16* %329, align 2
  store i16 %332, i16* %330, align 2
  %333 = add i64 %328, -1
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = add i64 %331, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %327, !llvm.loop !29

338:                                              ; preds = %327, %320
  %339 = phi i64 [ %321, %320 ], [ %333, %327 ]
  %340 = phi i16* [ %322, %320 ], [ %335, %327 ]
  %341 = phi i16* [ %323, %320 ], [ %334, %327 ]
  %342 = icmp ult i64 %324, 7
  br i1 %342, label %373, label %343

343:                                              ; preds = %338, %343
  %344 = phi i64 [ %369, %343 ], [ %339, %338 ]
  %345 = phi i16* [ %371, %343 ], [ %340, %338 ]
  %346 = phi i16* [ %370, %343 ], [ %341, %338 ]
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %346, align 2
  %348 = getelementptr inbounds i16, i16* %346, i64 1
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %346, i64 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %346, i64 3
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %346, i64 4
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %346, i64 5
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %346, i64 6
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %346, i64 7
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = add i64 %344, -8
  %370 = getelementptr inbounds i16, i16* %346, i64 8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = icmp eq i64 %369, 0
  br i1 %372, label %373, label %343, !llvm.loop !30

373:                                              ; preds = %338, %343, %318, %195
  %374 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #8
  %375 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %377 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %378 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %378, i8 -86, i64 24, i1 false)
  %379 = tail call i8* @uloc_getDefault_69() #8
  %380 = tail call i64 @strlen(i8* %379) #8
  %381 = icmp ugt i64 %380, -17
  br i1 %381, label %382, label %384

382:                                              ; preds = %373
  %383 = bitcast %"class.std::__1::basic_string.1"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %383) #9
  unreachable

384:                                              ; preds = %373
  %385 = icmp ult i64 %380, 23
  br i1 %385, label %391, label %386

386:                                              ; preds = %384
  %387 = add nuw i64 %380, 16
  %388 = and i64 %387, -16
  %389 = tail call i8* @_Znwm(i64 %388) #10
  store i8* %389, i8** %375, align 8
  %390 = or i64 %388, -9223372036854775808
  store i64 %390, i64* %377, align 8
  store i64 %380, i64* %376, align 8
  br label %396

391:                                              ; preds = %384
  %392 = trunc i64 %380 to i8
  %393 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  store i8 %392, i8* %394, align 1
  %395 = icmp eq i64 %380, 0
  br i1 %395, label %398, label %396

396:                                              ; preds = %391, %386
  %397 = phi i8* [ %389, %386 ], [ %374, %391 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %397, i8* align 1 %379, i64 %380, i1 false) #8
  br label %398

398:                                              ; preds = %391, %396
  %399 = phi i8* [ %374, %391 ], [ %397, %396 ]
  %400 = getelementptr inbounds i8, i8* %399, i64 %380
  store i8 0, i8* %400, align 1
  %401 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %401) #8
  store i32 0, i32* %6, align 4
  %402 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %402, i64 0, i32 1, i32 1
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %411

406:                                              ; preds = %398
  %407 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load i16*, i16** %407, align 8
  %409 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %410 = load i64, i64* %409, align 8
  br label %414

411:                                              ; preds = %398
  %412 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to i16*
  %413 = zext i8 %404 to i64
  br label %414

414:                                              ; preds = %406, %411
  %415 = phi i16* [ %408, %406 ], [ %412, %411 ]
  %416 = phi i64 [ %410, %406 ], [ %413, %411 ]
  %417 = trunc i64 %416 to i32
  %418 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %418, i64 0, i32 1, i32 1
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %427

422:                                              ; preds = %414
  %423 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load i16*, i16** %423, align 8
  %425 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %426 = load i64, i64* %425, align 8
  br label %430

427:                                              ; preds = %414
  %428 = bitcast %"class.std::__1::basic_string"* %190 to i16*
  %429 = zext i8 %420 to i64
  br label %430

430:                                              ; preds = %422, %427
  %431 = phi i16* [ %424, %422 ], [ %428, %427 ]
  %432 = phi i64 [ %426, %422 ], [ %429, %427 ]
  %433 = trunc i64 %432 to i32
  %434 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %435 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %434, i64 0, i32 1, i32 0
  %436 = load i8, i8* %435, align 1
  %437 = icmp slt i8 %436, 0
  %438 = load i8*, i8** %375, align 8
  %439 = select i1 %437, i8* %438, i8* %374
  %440 = call %struct.UStringSearch* @usearch_open_69(i16* %415, i32 %417, i16* %431, i32 %433, i8* %439, %struct.UBreakIterator* null, i32* nonnull %6) #8
  %441 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 2
  store %struct.UStringSearch* %440, %struct.UStringSearch** %441, align 8
  %442 = load i32, i32* %6, align 4
  %443 = icmp sgt i32 %442, 0
  br i1 %443, label %448, label %444

444:                                              ; preds = %430
  %445 = call %struct.UCollator* @usearch_getCollator_69(%struct.UStringSearch* %440) #8
  %446 = select i1 %3, i32 2, i32 0
  call void @ucol_setStrength_69(%struct.UCollator* %445, i32 %446) #8
  %447 = load %struct.UStringSearch*, %struct.UStringSearch** %441, align 8
  call void @usearch_reset_69(%struct.UStringSearch* %447) #8
  br label %448

448:                                              ; preds = %430, %444
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %401) #8
  %449 = load i8, i8* %435, align 1
  %450 = icmp slt i8 %449, 0
  br i1 %450, label %451, label %453

451:                                              ; preds = %448
  %452 = load i8*, i8** %375, align 8
  call void @_ZdlPv(i8* %452) #10
  br label %453

453:                                              ; preds = %448, %451
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n21RepeatingStringSearchD2Ev(%"class.base::i18n::RepeatingStringSearch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 2
  %3 = load %struct.UStringSearch*, %struct.UStringSearch** %2, align 8
  %4 = icmp eq %struct.UStringSearch* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @usearch_close_69(%struct.UStringSearch* nonnull %3) #8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %6, %12
  %16 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = bitcast %"class.base::i18n::RepeatingStringSearch"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n21RepeatingStringSearch15NextMatchResultERiS2_(%"class.base::i18n::RepeatingStringSearch"* nocapture readonly, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.base::i18n::RepeatingStringSearch", %"class.base::i18n::RepeatingStringSearch"* %0, i64 0, i32 2
  %7 = load %struct.UStringSearch*, %struct.UStringSearch** %6, align 8
  %8 = call i32 @usearch_next_69(%struct.UStringSearch* %7, i32* nonnull %4) #8
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = icmp eq i32 %8, -1
  %12 = or i1 %11, %10
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  store i32 %8, i32* %1, align 4
  %14 = load %struct.UStringSearch*, %struct.UStringSearch** %6, align 8
  %15 = call i32 @usearch_getMatchedLength_69(%struct.UStringSearch* %14) #8
  store i32 %15, i32* %2, align 4
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi i1 [ true, %13 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i1 %17
}

declare i32 @usearch_next_69(%struct.UStringSearch*, i32*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
