; ModuleID = 'gen/extensions/common/api/virtual_keyboard.cc'
source_filename = "gen/extensions/common/api/virtual_keyboard.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::api::virtual_keyboard::FeatureRestrictions" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params" = type { %"struct.extensions::api::virtual_keyboard::FeatureRestrictions" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::Value"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [20 x i8] c"autoCompleteEnabled\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"autoCorrectEnabled\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"handwritingEnabled\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"spellCheckEnabled\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"voiceInputEnabled\00", align 1

@_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*), void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*)* @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC2Ev
@_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*), void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*)* @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD2Ev
@_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*), void (%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*)* @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC2EOS2_
@_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"*), void (%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"*)* @_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsC2Ev
@_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"*), void (%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"*)* @_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC2Ev(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD2Ev(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(i8* nonnull %3) #12
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8* null, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(i8* nonnull %8) #12
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* null, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(i8* nonnull %13) #12
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8* null, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdlPv(i8* nonnull %18) #12
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  store i8* null, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZdlPv(i8* nonnull %23) #12
  br label %26

26:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsC2EOS2_(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store i8* null, i8** %3, align 8
  %6 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store i8* null, i8** %9, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store i8* null, i8** %15, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store i8* null, i8** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 4
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store i8* null, i8** %27, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %29, i64* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsaSEOS2_(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* returned, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store i8* null, i8** %3, align 8
  %6 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq i8* %7, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %7) #12
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  store i8* null, i8** %14, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %16, i64* %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %11
  tail call void @_ZdlPv(i8* nonnull %18) #12
  br label %22

22:                                               ; preds = %11, %21
  %23 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store i8* null, i8** %25, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq i8* %29, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %22
  tail call void @_ZdlPv(i8* nonnull %29) #12
  br label %33

33:                                               ; preds = %22, %32
  %34 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 3
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  store i8* null, i8** %36, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq i8* %40, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %33
  tail call void @_ZdlPv(i8* nonnull %40) #12
  br label %44

44:                                               ; preds = %33, %43
  %45 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 4
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  store i8* null, i8** %47, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq i8* %51, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %44
  tail call void @_ZdlPv(i8* nonnull %51) #12
  br label %55

55:                                               ; preds = %44, %54
  ret %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api16virtual_keyboard19FeatureRestrictions8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32), %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::Value"*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.base::Value"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.base::Value"*, align 8
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %17, label %142

17:                                               ; preds = %2
  %18 = bitcast %"class.base::Value"* %0 to %"class.base::DictionaryValue"*
  %19 = bitcast %"class.base::Value"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %20 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, %"class.base::Value"** nonnull %3) #13
  br i1 %20, label %21, label %40

21:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %22 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %23 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %22, i8* nonnull %4) #13
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* null, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  call void @_ZdlPv(i8* nonnull %26) #12
  br label %29

29:                                               ; preds = %24, %28
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br label %140

30:                                               ; preds = %21
  %31 = call i8* @_Znwm(i64 1) #12
  %32 = load i8, i8* %4, align 1, !range !2
  store i8 %32, i8* %31, align 1
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq i8* %35, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %30
  call void @_ZdlPv(i8* nonnull %35) #12
  br label %39

39:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br label %40

40:                                               ; preds = %39, %17
  %41 = bitcast %"class.base::Value"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store %"class.base::Value"* null, %"class.base::Value"** %5, align 8
  %42 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18, %"class.base::Value"** nonnull %5) #13
  br i1 %42, label %43, label %63

43:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  store i8 -86, i8* %6, align 1
  %44 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %45 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %44, i8* nonnull %6) #13
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  store i8* null, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @_ZdlPv(i8* nonnull %48) #12
  br label %51

51:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  br label %138

52:                                               ; preds = %43
  %53 = call i8* @_Znwm(i64 1) #12
  %54 = load i8, i8* %6, align 1, !range !2
  store i8 %54, i8* %53, align 1
  %55 = ptrtoint i8* %53 to i64
  %56 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 %55, i64* %59, align 8
  %60 = icmp eq i8* %58, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %52
  call void @_ZdlPv(i8* nonnull %58) #12
  br label %62

62:                                               ; preds = %61, %52
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  br label %63

63:                                               ; preds = %62, %40
  %64 = bitcast %"class.base::Value"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  store %"class.base::Value"* null, %"class.base::Value"** %7, align 8
  %65 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, %"class.base::Value"** nonnull %7) #13
  br i1 %65, label %66, label %86

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  store i8 -86, i8* %8, align 1
  %67 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %68 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %67, i8* nonnull %8) #13
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  store i8* null, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdlPv(i8* nonnull %71) #12
  br label %74

74:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  br label %136

75:                                               ; preds = %66
  %76 = call i8* @_Znwm(i64 1) #12
  %77 = load i8, i8* %8, align 1, !range !2
  store i8 %77, i8* %76, align 1
  %78 = ptrtoint i8* %76 to i64
  %79 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 2
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %78, i64* %82, align 8
  %83 = icmp eq i8* %81, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %75
  call void @_ZdlPv(i8* nonnull %81) #12
  br label %85

85:                                               ; preds = %84, %75
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  br label %86

86:                                               ; preds = %85, %63
  %87 = bitcast %"class.base::Value"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  store %"class.base::Value"* null, %"class.base::Value"** %9, align 8
  %88 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17, %"class.base::Value"** nonnull %9) #13
  br i1 %88, label %89, label %109

89:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #13
  store i8 -86, i8* %10, align 1
  %90 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %91 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %90, i8* nonnull %10) #13
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  store i8* null, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %92
  call void @_ZdlPv(i8* nonnull %94) #12
  br label %97

97:                                               ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  br label %134

98:                                               ; preds = %89
  %99 = call i8* @_Znwm(i64 1) #12
  %100 = load i8, i8* %10, align 1, !range !2
  store i8 %100, i8* %99, align 1
  %101 = ptrtoint i8* %99 to i64
  %102 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr"* %102 to i64*
  store i64 %101, i64* %105, align 8
  %106 = icmp eq i8* %104, null
  br i1 %106, label %108, label %107

107:                                              ; preds = %98
  call void @_ZdlPv(i8* nonnull %104) #12
  br label %108

108:                                              ; preds = %107, %98
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  br label %109

109:                                              ; preds = %108, %86
  %110 = bitcast %"class.base::Value"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  store %"class.base::Value"* null, %"class.base::Value"** %11, align 8
  %111 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17, %"class.base::Value"** nonnull %11) #13
  br i1 %111, label %112, label %132

112:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #13
  store i8 -86, i8* %12, align 1
  %113 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %114 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %113, i8* nonnull %12) #13
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  store i8* null, i8** %116, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %130, label %119

119:                                              ; preds = %115
  call void @_ZdlPv(i8* nonnull %117) #12
  br label %130

120:                                              ; preds = %112
  %121 = call i8* @_Znwm(i64 1) #12
  %122 = load i8, i8* %12, align 1, !range !2
  store i8 %122, i8* %121, align 1
  %123 = ptrtoint i8* %121 to i64
  %124 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1, i64 0, i32 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  store i64 %123, i64* %127, align 8
  %128 = icmp eq i8* %126, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %120
  call void @_ZdlPv(i8* nonnull %126) #12
  br label %130

130:                                              ; preds = %120, %129, %119, %115
  %131 = phi i1 [ false, %115 ], [ false, %119 ], [ true, %129 ], [ true, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #13
  br label %132

132:                                              ; preds = %130, %109
  %133 = phi i1 [ true, %109 ], [ %131, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %134

134:                                              ; preds = %97, %132
  %135 = phi i1 [ %133, %132 ], [ false, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  br label %136

136:                                              ; preds = %74, %134
  %137 = phi i1 [ %135, %134 ], [ false, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  br label %138

138:                                              ; preds = %51, %136
  %139 = phi i1 [ %137, %136 ], [ false, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  br label %140

140:                                              ; preds = %29, %138
  %141 = phi i1 [ %139, %138 ], [ false, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %142

142:                                              ; preds = %2, %140
  %143 = phi i1 [ %141, %140 ], [ false, %2 ]
  ret i1 %143
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"**) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* @_ZN10extensions3api16virtual_keyboard19FeatureRestrictions9FromValueERKN4base5ValueE(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #12
  %3 = bitcast i8* %2 to %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #13
  %4 = ptrtoint i8* %2 to i64
  %5 = tail call zeroext i1 @_ZN10extensions3api16virtual_keyboard19FeatureRestrictions8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32) %0, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nonnull %3)
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD2Ev(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nonnull %3) #13
  tail call void @_ZdlPv(i8* nonnull %2) #12
  br label %7

7:                                                ; preds = %1, %6
  %8 = phi i64 [ 0, %6 ], [ %4, %1 ]
  %9 = inttoptr i64 %8 to %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*
  ret %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DictionaryValue"* @_ZNK10extensions3api16virtual_keyboard19FeatureRestrictions7ToValueEv(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #13
  %4 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 32) #12
  %9 = bitcast i8* %8 to %"class.base::Value"*
  %10 = load i8, i8* %5, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %9, i1 zeroext %11) #13
  %12 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, %"class.base::Value"* nonnull %9) #13
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 32) #12
  %19 = bitcast i8* %18 to %"class.base::Value"*
  %20 = load i8, i8* %15, align 1, !range !2
  %21 = icmp ne i8 %20, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %19, i1 zeroext %21) #13
  %22 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18, %"class.base::Value"* nonnull %19) #13
  br label %23

23:                                               ; preds = %13, %17
  %24 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_Znwm(i64 32) #12
  %29 = bitcast i8* %28 to %"class.base::Value"*
  %30 = load i8, i8* %25, align 1, !range !2
  %31 = icmp ne i8 %30, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %29, i1 zeroext %31) #13
  %32 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, %"class.base::Value"* nonnull %29) #13
  br label %33

33:                                               ; preds = %23, %27
  %34 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 32) #12
  %39 = bitcast i8* %38 to %"class.base::Value"*
  %40 = load i8, i8* %35, align 1, !range !2
  %41 = icmp ne i8 %40, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %39, i1 zeroext %41) #13
  %42 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17, %"class.base::Value"* nonnull %39) #13
  br label %43

43:                                               ; preds = %33, %37
  %44 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::FeatureRestrictions", %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = tail call i8* @_Znwm(i64 32) #12
  %49 = bitcast i8* %48 to %"class.base::Value"*
  %50 = load i8, i8* %45, align 1, !range !2
  %51 = icmp ne i8 %50, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %49, i1 zeroext %51) #13
  %52 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17, %"class.base::Value"* nonnull %49) #13
  br label %53

53:                                               ; preds = %47, %43
  ret %"class.base::DictionaryValue"* %3
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsC2Ev(%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api16virtual_keyboard16RestrictFeatures6ParamsD2Ev(%"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params", %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* %0, i64 0, i32 0
  tail call void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD2Ev(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* @_ZN10extensions3api16virtual_keyboard16RestrictFeatures6Params6CreateERKN4base9ListValueE(%"class.base::ListValue"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::Value"*, align 8
  %3 = alloca %"class.base::DictionaryValue"*, align 8
  %4 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 7
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %1
  %8 = tail call dereferenceable(24) %"class.std::__1::vector.23"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #14
  unreachable

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::ListValue"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 32
  br i1 %15, label %16, label %39

16:                                               ; preds = %9
  %17 = tail call i8* @_Znwm(i64 40) #12
  %18 = bitcast i8* %17 to %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 40, i1 false) #13
  %19 = bitcast %"class.base::Value"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store %"class.base::Value"* null, %"class.base::Value"** %2, align 8
  %20 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %0, i64 0, %"class.base::Value"** nonnull %2) #13
  br i1 %20, label %21, label %37

21:                                               ; preds = %16
  %22 = load %"class.base::Value"*, %"class.base::Value"** %2, align 8
  %23 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.base::DictionaryValue"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %3, align 8
  %29 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %22, %"class.base::DictionaryValue"** nonnull %3) #13
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %37

31:                                               ; preds = %27
  %32 = bitcast %"class.base::DictionaryValue"** %3 to %"class.base::Value"**
  %33 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %34 = bitcast i8* %17 to %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*
  %35 = call zeroext i1 @_ZN10extensions3api16virtual_keyboard19FeatureRestrictions8PopulateERKN4base5ValueEPS2_(%"class.base::Value"* dereferenceable(32) %33, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %39

37:                                               ; preds = %31, %16, %21, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %38 = bitcast i8* %17 to %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"*
  call void @_ZN10extensions3api16virtual_keyboard19FeatureRestrictionsD2Ev(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nonnull %38) #13
  call void @_ZdlPv(i8* nonnull %17) #12
  br label %39

39:                                               ; preds = %37, %36, %9
  %40 = phi %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* [ null, %9 ], [ %18, %36 ], [ null, %37 ]
  ret %"struct.extensions::api::virtual_keyboard::RestrictFeatures::Params"* %40
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"*, i64, %"class.base::Value"**) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api16virtual_keyboard16RestrictFeatures7Results6CreateERKNS1_19FeatureRestrictionsE(%"class.std::__1::vector.23"* noalias sret, %"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 {
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  tail call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.23"* %0, i64 1)
  %7 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  %8 = tail call %"class.base::DictionaryValue"* @_ZNK10extensions3api16virtual_keyboard19FeatureRestrictions7ToValueEv(%"struct.extensions::api::virtual_keyboard::FeatureRestrictions"* %1)
  %9 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %8, i64 0, i32 0
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* %9) #13
  %10 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %12 = icmp ult %"class.base::Value"* %10, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %10, %"class.base::Value"* nonnull dereferenceable(32) %3) #13
  %14 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %10, i64 1
  %15 = ptrtoint %"class.base::Value"* %14 to i64
  %16 = bitcast %"class.base::Value"** %4 to i64*
  store i64 %15, i64* %16, align 8
  br label %18

17:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.23"* %0, %"class.base::Value"* nonnull dereferenceable(32) %3) #13
  br label %18

18:                                               ; preds = %17, %13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.23"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.base::Value"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.base::Value"*
  %24 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %20
  %25 = ptrtoint %"class.base::Value"* %24 to i64
  %26 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %1
  %27 = ptrtoint %"class.base::Value"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.base::Value"*
  %29 = icmp eq %"class.base::Value"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.base::Value"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.base::Value"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %31, i64 -1
  %34 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %32, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %33, %"class.base::Value"* dereferenceable(32) %34) #13
  %35 = icmp eq %"class.base::Value"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.base::Value"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.base::Value"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.base::Value"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.base::Value"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.base::Value"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.base::Value"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %48, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %49) #13
  %50 = icmp eq %"class.base::Value"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #6

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.23"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #7 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #14
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #4

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.23"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #13
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #13
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #13
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
