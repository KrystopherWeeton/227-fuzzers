; ModuleID = '../../third_party/skia/src/images/SkJPEGWriteUtility.cpp'
source_filename = "../../third_party/skia/src/images/SkJPEGWriteUtility.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.skjpeg_destination_mgr = type { %struct.jpeg_destination_mgr, %class.SkWStream*, [1024 x i8] }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type opaque
%struct.jpeg_c_main_controller = type opaque
%struct.jpeg_c_prep_controller = type opaque
%struct.jpeg_c_coef_controller = type opaque
%struct.jpeg_marker_writer = type opaque
%struct.jpeg_color_converter = type opaque
%struct.jpeg_downsampler = type opaque
%struct.jpeg_forward_dct = type opaque
%struct.jpeg_entropy_encoder = type opaque
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%class.SkWStream = type { i32 (...)** }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

@.str = private unnamed_addr constant [57 x i8] c"../../third_party/skia/src/images/SkJPEGWriteUtility.cpp\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"JPEG error with no jmp_buf set.\00", align 1

@_ZN22skjpeg_destination_mgrC1EP9SkWStream = hidden unnamed_addr alias void (%struct.skjpeg_destination_mgr*, %class.SkWStream*), void (%struct.skjpeg_destination_mgr*, %class.SkWStream*)* @_ZN22skjpeg_destination_mgrC2EP9SkWStream

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22skjpeg_destination_mgrC2EP9SkWStream(%struct.skjpeg_destination_mgr* nocapture, %class.SkWStream*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.skjpeg_destination_mgr, %struct.skjpeg_destination_mgr* %0, i64 0, i32 1
  store %class.SkWStream* %1, %class.SkWStream** %3, align 8
  %4 = getelementptr inbounds %struct.skjpeg_destination_mgr, %struct.skjpeg_destination_mgr* %0, i64 0, i32 0, i32 2
  store void (%struct.jpeg_compress_struct*)* @_ZL19sk_init_destinationP20jpeg_compress_struct, void (%struct.jpeg_compress_struct*)** %4, align 8
  %5 = getelementptr inbounds %struct.skjpeg_destination_mgr, %struct.skjpeg_destination_mgr* %0, i64 0, i32 0, i32 3
  store i32 (%struct.jpeg_compress_struct*)* @_ZL22sk_empty_output_bufferP20jpeg_compress_struct, i32 (%struct.jpeg_compress_struct*)** %5, align 8
  %6 = getelementptr inbounds %struct.skjpeg_destination_mgr, %struct.skjpeg_destination_mgr* %0, i64 0, i32 0, i32 4
  store void (%struct.jpeg_compress_struct*)* @_ZL19sk_term_destinationP20jpeg_compress_struct, void (%struct.jpeg_compress_struct*)** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19sk_init_destinationP20jpeg_compress_struct(%struct.jpeg_compress_struct* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1, i32 1
  %5 = bitcast %struct.jpeg_destination_mgr* %3 to i64**
  store i64* %4, i64** %5, align 8
  %6 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 1
  store i64 1024, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL22sk_empty_output_bufferP20jpeg_compress_struct(%struct.jpeg_compress_struct*) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1
  %5 = bitcast %struct.jpeg_destination_mgr* %4 to %class.SkWStream**
  %6 = load %class.SkWStream*, %class.SkWStream** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1, i32 1
  %8 = bitcast i64* %7 to i8*
  %9 = bitcast %class.SkWStream* %6 to i1 (%class.SkWStream*, i8*, i64)***
  %10 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %10, i64 2
  %12 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.SkWStream* %6, i8* %8, i64 1024) #7
  br i1 %13, label %22, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 5
  store i32 37, i32* %17, align 8
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i64 0, i32 0
  %20 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %19, align 8
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %20(%struct.jpeg_common_struct* %21) #7
  br label %25

22:                                               ; preds = %1
  %23 = bitcast %struct.jpeg_destination_mgr* %3 to i64**
  store i64* %7, i64** %23, align 8
  %24 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 1
  store i64 1024, i64* %24, align 8
  br label %25

25:                                               ; preds = %22, %14
  %26 = phi i32 [ 1, %22 ], [ 0, %14 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19sk_term_destinationP20jpeg_compress_struct(%struct.jpeg_compress_struct*) #2 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 1024, %5
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1
  %10 = bitcast %struct.jpeg_destination_mgr* %9 to %class.SkWStream**
  %11 = load %class.SkWStream*, %class.SkWStream** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1, i32 1
  %13 = bitcast i64* %12 to i8*
  %14 = bitcast %class.SkWStream* %11 to i1 (%class.SkWStream*, i8*, i64)***
  %15 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %15, i64 2
  %17 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.SkWStream* %11, i8* %13, i64 %6) #7
  br i1 %18, label %27, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 5
  store i32 37, i32* %22, align 8
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i64 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %24, align 8
  %26 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %25(%struct.jpeg_common_struct* %26) #7
  br label %35

27:                                               ; preds = %1, %8
  %28 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %3, i64 1
  %29 = bitcast %struct.jpeg_destination_mgr* %28 to %class.SkWStream**
  %30 = load %class.SkWStream*, %class.SkWStream** %29, align 8
  %31 = bitcast %class.SkWStream* %30 to void (%class.SkWStream*)***
  %32 = load void (%class.SkWStream*)**, void (%class.SkWStream*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkWStream*)*, void (%class.SkWStream*)** %32, i64 3
  %34 = load void (%class.SkWStream*)*, void (%class.SkWStream*)** %33, align 8
  tail call void %34(%class.SkWStream* %30) #7
  br label %35

35:                                               ; preds = %27, %19
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_Z17skjpeg_error_exitP18jpeg_common_struct(%struct.jpeg_common_struct*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 2
  %5 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %4, align 8
  tail call void %5(%struct.jpeg_common_struct* %0) #7
  tail call void @jpeg_destroy(%struct.jpeg_common_struct* %0) #7
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 1, i32 4
  %7 = getelementptr inbounds void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %6, i64 1
  %8 = bitcast void (%struct.jpeg_common_struct*)** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #8
  unreachable

13:                                               ; preds = %1
  %14 = bitcast void (%struct.jpeg_common_struct*)** %6 to [1 x %struct.__jmp_buf_tag]***
  %15 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %14, align 8
  %16 = lshr i64 %9, 1
  %17 = and i64 %16, 2147483647
  %18 = add nsw i64 %17, -1
  %19 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %15, i64 %18
  %20 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %19, align 8
  %21 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %20, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %21, i32 -1) #8
  unreachable
}

declare void @jpeg_destroy(%struct.jpeg_common_struct*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
