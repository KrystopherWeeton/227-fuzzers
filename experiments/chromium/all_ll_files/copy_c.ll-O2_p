; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/encoder/copy_c.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/encoder/copy_c.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_copy32xn_c(i8* nocapture readonly, i32, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %5
  %8 = sext i32 %1 to i64
  %9 = sext i32 %3 to i64
  %10 = add i32 %4, -1
  %11 = and i32 %4, 3
  %12 = icmp ult i32 %10, 3
  br i1 %12, label %29, label %13

13:                                               ; preds = %7
  %14 = sub i32 %4, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %25, %15 ]
  %17 = phi i8* [ %2, %13 ], [ %26, %15 ]
  %18 = phi i32 [ %14, %13 ], [ %27, %15 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %16, i64 32, i1 false)
  %19 = getelementptr inbounds i8, i8* %16, i64 %8
  %20 = getelementptr inbounds i8, i8* %17, i64 %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %19, i64 32, i1 false)
  %21 = getelementptr inbounds i8, i8* %19, i64 %8
  %22 = getelementptr inbounds i8, i8* %20, i64 %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %21, i64 32, i1 false)
  %23 = getelementptr inbounds i8, i8* %21, i64 %8
  %24 = getelementptr inbounds i8, i8* %22, i64 %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %23, i64 32, i1 false)
  %25 = getelementptr inbounds i8, i8* %23, i64 %8
  %26 = getelementptr inbounds i8, i8* %24, i64 %9
  %27 = add i32 %18, -4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15, %7
  %30 = phi i8* [ %0, %7 ], [ %25, %15 ]
  %31 = phi i8* [ %2, %7 ], [ %26, %15 ]
  %32 = icmp eq i32 %11, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %29, %33
  %34 = phi i8* [ %37, %33 ], [ %30, %29 ]
  %35 = phi i8* [ %38, %33 ], [ %31, %29 ]
  %36 = phi i32 [ %39, %33 ], [ %11, %29 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %34, i64 32, i1 false)
  %37 = getelementptr inbounds i8, i8* %34, i64 %8
  %38 = getelementptr inbounds i8, i8* %35, i64 %9
  %39 = add i32 %36, -1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %33, !llvm.loop !2

41:                                               ; preds = %29, %33, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
