; ModuleID = '../../components/viz/common/gl_i420_converter.cc'
source_filename = "../../components/viz/common/gl_i420_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.viz::GLI420Converter" = type { %"class.viz::ContextLostObserver", %"class.viz::ContextProvider"*, %"class.viz::GLScaler", i32, %"class.gfx::Size", [4 x i8], %"class.viz::GLScaler", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7", %"struct.viz::GLScaler::Parameters" }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.viz::GLScaler" = type <{ %"class.viz::ContextLostObserver", %"class.viz::ContextProvider"*, %"struct.viz::GLScaler::Parameters", %"class.absl::optional", [2 x i8], i32, %"class.std::__1::map", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.gfx::ColorSpace", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.viz::GLScaler::ScalerStage"* }
%"class.viz::GLScaler::ScalerStage" = type <{ %"class.gpu::gles2::GLES2Interface"*, i8, [3 x i8], i32, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.std::__1::unique_ptr", %"class.viz::GLScaler::ShaderProgram"*, i8, i8, [2 x i8], i32, %"class.gfx::Size", i32, [4 x i8] }>
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.viz::GLScaler::ShaderProgram" = type <{ %"class.gpu::gles2::GLES2Interface"*, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.viz::GLScaler"* }
%"struct.viz::GLScaler::Parameters" = type { %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.gfx::ColorSpace", %"class.gfx::ColorSpace", i8, i8, i8, i8, i8, [2 x i32] }
%"class.viz::ContextProvider" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }

@_ZTVN3viz15GLI420ConverterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::GLI420Converter"*)* @_ZN3viz15GLI420Converter13OnContextLostEv to i8*), i8* bitcast (void (%"class.viz::GLI420Converter"*)* @_ZN3viz15GLI420ConverterD2Ev to i8*), i8* bitcast (void (%"class.viz::GLI420Converter"*)* @_ZN3viz15GLI420ConverterD0Ev to i8*)] }, align 8
@__const._ZN3viz15GLI420Converter9ConfigureERKNS_8GLScaler10ParametersE.step2_params = private unnamed_addr constant { %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.gfx::ColorSpace", %"class.gfx::ColorSpace", i8, i8, i8, i8, i8, [3 x i8], [2 x i32] } { %"class.gfx::Vector2d" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Vector2d" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [3 x i8] c"\AA\AA\AA", [2 x i32] [i32 -1431655766, i32 -1431655766] }, align 4

@_ZN3viz15GLI420ConverterC1EPNS_15ContextProviderE = hidden unnamed_addr alias void (%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*), void (%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*)* @_ZN3viz15GLI420ConverterC2EPNS_15ContextProviderE
@_ZN3viz15GLI420ConverterC1EPNS_15ContextProviderEb = hidden unnamed_addr alias void (%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*, i1), void (%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*, i1)* @_ZN3viz15GLI420ConverterC2EPNS_15ContextProviderEb
@_ZN3viz15GLI420ConverterD1Ev = hidden unnamed_addr alias void (%"class.viz::GLI420Converter"*), void (%"class.viz::GLI420Converter"*)* @_ZN3viz15GLI420ConverterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420ConverterC2EPNS_15ContextProviderE(%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz15GLI420ConverterC2EPNS_15ContextProviderEb(%"class.viz::GLI420Converter"* %0, %"class.viz::ContextProvider"* %1, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420ConverterC2EPNS_15ContextProviderEb(%"class.viz::GLI420Converter"*, %"class.viz::ContextProvider"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15GLI420ConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  store %"class.viz::ContextProvider"* %1, %"class.viz::ContextProvider"** %6, align 8
  %7 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 2
  tail call void @_ZN3viz8GLScalerC1EPNS_15ContextProviderE(%"class.viz::GLScaler"* %7, %"class.viz::ContextProvider"* %1) #7
  %8 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  %12 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %6, align 8
  tail call void @_ZN3viz8GLScalerC1EPNS_15ContextProviderE(%"class.viz::GLScaler"* %11, %"class.viz::ContextProvider"* %12) #7
  %13 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 7
  %14 = bitcast %"class.std::__1::unique_ptr.7"* %13 to i64*
  %15 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 8
  %16 = bitcast %"class.std::__1::unique_ptr.7"* %15 to i64*
  %17 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 9
  %18 = bitcast %"class.std::__1::unique_ptr.7"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  tail call void @_ZN3viz8GLScaler10ParametersC1Ev(%"struct.viz::GLScaler::Parameters"* %17) #7
  %19 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %6, align 8
  %20 = bitcast %"class.viz::ContextProvider"* %19 to void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)***
  %21 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)**, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %21, i64 3
  %23 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %22, align 8
  tail call void %23(%"class.viz::ContextProvider"* %19, %"class.viz::ContextLostObserver"* %4) #7
  br i1 %2, label %24, label %27

24:                                               ; preds = %3
  %25 = tail call i32 @_ZNK3viz8GLScaler26GetMaxDrawBuffersSupportedEv(%"class.viz::GLScaler"* %7) #7
  %26 = icmp slt i32 %25, 2
  br i1 %26, label %27, label %53

27:                                               ; preds = %24, %3
  %28 = tail call i8* @_Znwm(i64 304) #8
  %29 = bitcast i8* %28 to %"class.viz::GLScaler"*
  %30 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %6, align 8
  tail call void @_ZN3viz8GLScalerC1EPNS_15ContextProviderE(%"class.viz::GLScaler"* nonnull %29, %"class.viz::ContextProvider"* %30) #7
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %13, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %32, align 8
  store i64 %31, i64* %14, align 8
  %34 = icmp eq %"class.viz::GLScaler"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.viz::GLScaler"* %33 to void (%"class.viz::GLScaler"*)***
  %37 = load void (%"class.viz::GLScaler"*)**, void (%"class.viz::GLScaler"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %37, i64 2
  %39 = load void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %38, align 8
  tail call void %39(%"class.viz::GLScaler"* nonnull %33) #7
  br label %40

40:                                               ; preds = %35, %27
  %41 = tail call i8* @_Znwm(i64 304) #8
  %42 = bitcast i8* %41 to %"class.viz::GLScaler"*
  %43 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %6, align 8
  tail call void @_ZN3viz8GLScalerC1EPNS_15ContextProviderE(%"class.viz::GLScaler"* nonnull %42, %"class.viz::ContextProvider"* %43) #7
  %44 = ptrtoint i8* %41 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %15, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %45, align 8
  store i64 %44, i64* %16, align 8
  %47 = icmp eq %"class.viz::GLScaler"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.viz::GLScaler"* %46 to void (%"class.viz::GLScaler"*)***
  %50 = load void (%"class.viz::GLScaler"*)**, void (%"class.viz::GLScaler"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %50, i64 2
  %52 = load void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %51, align 8
  tail call void %52(%"class.viz::GLScaler"* nonnull %46) #7
  br label %53

53:                                               ; preds = %40, %48, %24
  ret void
}

declare void @_ZN3viz8GLScalerC1EPNS_15ContextProviderE(%"class.viz::GLScaler"*, %"class.viz::ContextProvider"*) unnamed_addr #1

declare void @_ZN3viz8GLScaler10ParametersC1Ev(%"struct.viz::GLScaler::Parameters"*) unnamed_addr #1

declare i32 @_ZNK3viz8GLScaler26GetMaxDrawBuffersSupportedEv(%"class.viz::GLScaler"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420ConverterD2Ev(%"class.viz::GLI420Converter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz15GLI420ConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %8 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %7, align 8
  %9 = bitcast %"class.viz::ContextProvider"* %8 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %10 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %10, i64 12
  %12 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %11, align 8
  %13 = tail call %"class.gpu::gles2::GLES2Interface"* %12(%"class.viz::ContextProvider"* %8) #7
  %14 = icmp eq %"class.gpu::gles2::GLES2Interface"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.gpu::gles2::GLES2Interface"* %13 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %17 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %17, i64 57
  %19 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %18, align 8
  tail call void %19(%"class.gpu::gles2::GLES2Interface"* nonnull %13, i32 1, i32* %3) #7
  br label %20

20:                                               ; preds = %15, %6
  store i32 0, i32* %3, align 8
  %21 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4
  %22 = bitcast %"class.gfx::Size"* %21 to i64*
  store i64 0, i64* %22, align 4
  br label %23

23:                                               ; preds = %20, %1
  %24 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %25 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %24, align 8
  %26 = icmp eq %"class.viz::ContextProvider"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 0
  %29 = bitcast %"class.viz::ContextProvider"* %25 to void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)***
  %30 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)**, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %30, i64 4
  %32 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %31, align 8
  tail call void %32(%"class.viz::ContextProvider"* nonnull %25, %"class.viz::ContextLostObserver"* %28) #7
  store %"class.viz::ContextProvider"* null, %"class.viz::ContextProvider"** %24, align 8
  br label %33

33:                                               ; preds = %23, %27
  %34 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 9
  tail call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* %34) #7
  %35 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %36 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %35, align 8
  store %"class.viz::GLScaler"* null, %"class.viz::GLScaler"** %35, align 8
  %37 = icmp eq %"class.viz::GLScaler"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.viz::GLScaler"* %36 to void (%"class.viz::GLScaler"*)***
  %40 = load void (%"class.viz::GLScaler"*)**, void (%"class.viz::GLScaler"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %40, i64 2
  %42 = load void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %41, align 8
  tail call void %42(%"class.viz::GLScaler"* nonnull %36) #7
  br label %43

43:                                               ; preds = %33, %38
  %44 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %45 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %44, align 8
  store %"class.viz::GLScaler"* null, %"class.viz::GLScaler"** %44, align 8
  %46 = icmp eq %"class.viz::GLScaler"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.viz::GLScaler"* %45 to void (%"class.viz::GLScaler"*)***
  %49 = load void (%"class.viz::GLScaler"*)**, void (%"class.viz::GLScaler"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %49, i64 2
  %51 = load void (%"class.viz::GLScaler"*)*, void (%"class.viz::GLScaler"*)** %50, align 8
  tail call void %51(%"class.viz::GLScaler"* nonnull %45) #7
  br label %52

52:                                               ; preds = %43, %47
  %53 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  tail call void @_ZN3viz8GLScalerD1Ev(%"class.viz::GLScaler"* %53) #7
  %54 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 2
  tail call void @_ZN3viz8GLScalerD1Ev(%"class.viz::GLScaler"* %54) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420Converter13OnContextLostEv(%"class.viz::GLI420Converter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %7 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %6, align 8
  %8 = bitcast %"class.viz::ContextProvider"* %7 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %9 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %9, i64 12
  %11 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %10, align 8
  %12 = tail call %"class.gpu::gles2::GLES2Interface"* %11(%"class.viz::ContextProvider"* %7) #7
  %13 = icmp eq %"class.gpu::gles2::GLES2Interface"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.gpu::gles2::GLES2Interface"* %12 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %16, i64 57
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %17, align 8
  tail call void %18(%"class.gpu::gles2::GLES2Interface"* nonnull %12, i32 1, i32* %2) #7
  br label %19

19:                                               ; preds = %5, %14
  store i32 0, i32* %2, align 8
  %20 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4
  %21 = bitcast %"class.gfx::Size"* %20 to i64*
  store i64 0, i64* %21, align 4
  br label %22

22:                                               ; preds = %1, %19
  %23 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %24 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %23, align 8
  %25 = icmp eq %"class.viz::ContextProvider"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 0
  %28 = bitcast %"class.viz::ContextProvider"* %24 to void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)***
  %29 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)**, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %29, i64 4
  %31 = load void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)*, void (%"class.viz::ContextProvider"*, %"class.viz::ContextLostObserver"*)** %30, align 8
  tail call void %31(%"class.viz::ContextProvider"* nonnull %24, %"class.viz::ContextLostObserver"* %27) #7
  store %"class.viz::ContextProvider"* null, %"class.viz::ContextProvider"** %23, align 8
  br label %32

32:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3viz8GLScalerD1Ev(%"class.viz::GLScaler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420ConverterD0Ev(%"class.viz::GLI420Converter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz15GLI420ConverterD2Ev(%"class.viz::GLI420Converter"* %0) #7
  %2 = bitcast %"class.viz::GLI420Converter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz15GLI420Converter9ConfigureERKNS_8GLScaler10ParametersE(%"class.viz::GLI420Converter"*, %"struct.viz::GLScaler::Parameters"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.viz::GLScaler::Parameters", align 4
  %4 = alloca %"struct.viz::GLScaler::Parameters", align 8
  %5 = bitcast %"struct.viz::GLScaler::Parameters"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast ({ %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.gfx::ColorSpace", %"class.gfx::ColorSpace", i8, i8, i8, i8, i8, [3 x i8], [2 x i32] }* @__const._ZN3viz15GLI420Converter9ConfigureERKNS_8GLScaler10ParametersE.step2_params to i8*), i64 168, i1 false)
  call void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"* nonnull %3, %"struct.viz::GLScaler::Parameters"* dereferenceable(168) %1) #7
  %6 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3
  %7 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %6) #7
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3, i32 0
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3, i32 1
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3, i32 2
  store i8 2, i8* %11, align 2
  %12 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3, i32 3
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 3, i32 4
  %14 = bitcast [9 x float]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 64, i1 false)
  br label %15

15:                                               ; preds = %8, %2
  %16 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %16, align 8
  %18 = icmp eq %"class.viz::GLScaler"* %17, null
  %19 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 8
  br i1 %18, label %20, label %22

20:                                               ; preds = %15
  store i8 5, i8* %19, align 4
  %21 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 9, i64 1
  br label %24

22:                                               ; preds = %15
  store i8 0, i8* %19, align 4
  %23 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %3, i64 0, i32 9, i64 0
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i32* [ %23, %22 ], [ %21, %20 ]
  store i32 6408, i32* %25, align 4
  %26 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 2
  %27 = call zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"* %26, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %3) #7
  br i1 %27, label %28, label %64

28:                                               ; preds = %24
  %29 = bitcast %"struct.viz::GLScaler::Parameters"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %29) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 4 bitcast ({ %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.gfx::ColorSpace", %"class.gfx::ColorSpace", i8, i8, i8, i8, i8, [3 x i8], [2 x i32] }* @__const._ZN3viz15GLI420Converter9ConfigureERKNS_8GLScaler10ParametersE.step2_params to i8*), i64 168, i1 false)
  call void @_ZN3viz8GLScaler10ParametersC1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %4) #7
  %30 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 1
  %31 = bitcast %"class.gfx::Vector2d"* %30 to i64*
  store i64 4294967297, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 2, i32 0
  %33 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %6, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 68, i1 false)
  %34 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %33, i64 68, i1 false)
  %35 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %1, i64 0, i32 9, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 9, i64 0
  store i32 %37, i32* %38, align 8
  %39 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %16, align 8
  %40 = icmp eq %"class.viz::GLScaler"* %39, null
  %41 = bitcast %"struct.viz::GLScaler::Parameters"* %4 to i64*
  br i1 %40, label %42, label %47

42:                                               ; preds = %28
  store i64 8589934593, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 8
  store i8 6, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 9, i64 1
  store i32 %37, i32* %44, align 4
  %45 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  %46 = call zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"* %45, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %4) #7
  br i1 %46, label %58, label %62

47:                                               ; preds = %28
  store i64 4294967297, i64* %41, align 8
  %48 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 8
  store i8 1, i8* %48, align 4
  %49 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  %50 = call zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"* %49, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %4) #7
  br i1 %50, label %51, label %62

51:                                               ; preds = %47
  store i64 8589934594, i64* %41, align 8
  store i8 2, i8* %48, align 4
  %52 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %16, align 8
  %53 = call zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"* %52, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %4) #7
  br i1 %53, label %54, label %62

54:                                               ; preds = %51
  store i8 3, i8* %48, align 4
  %55 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %56 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %55, align 8
  %57 = call zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"* %56, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %4) #7
  br i1 %57, label %58, label %62

58:                                               ; preds = %54, %42
  %59 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 9
  %60 = bitcast %"struct.viz::GLScaler::Parameters"* %59 to i8*
  %61 = bitcast %"struct.viz::GLScaler::Parameters"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 4 %61, i64 168, i1 false)
  br label %62

62:                                               ; preds = %54, %51, %47, %42, %58
  %63 = phi i1 [ true, %58 ], [ false, %42 ], [ false, %47 ], [ false, %51 ], [ false, %54 ]
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %29) #7
  br label %64

64:                                               ; preds = %24, %62
  %65 = phi i1 [ %63, %62 ], [ false, %24 ]
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #7
  ret i1 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"*, %"struct.viz::GLScaler::Parameters"* dereferenceable(168)) unnamed_addr #1

declare zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3viz8GLScaler9ConfigureERKNS0_10ParametersE(%"class.viz::GLScaler"*, %"struct.viz::GLScaler::Parameters"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz15GLI420Converter7ConvertEjRKN3gfx4SizeERKNS1_8Vector2dERKNS1_4RectEPKj(%"class.viz::GLI420Converter"*, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Vector2d"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Vector2d", align 4
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.gfx::Vector2d", align 4
  %13 = alloca %"class.gfx::Vector2d", align 4
  %14 = alloca %"class.gfx::Vector2d", align 4
  %15 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %16 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %15, align 8
  %17 = icmp eq %"class.viz::ContextProvider"* %16, null
  br i1 %17, label %231, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %20 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %19, align 8
  %21 = icmp eq %"class.viz::GLScaler"* %20, null
  br i1 %21, label %22, label %125

22:                                               ; preds = %18
  %23 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sdiv i32 %29, 4
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sdiv i32 %34, 4
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %30, i32* %24, align 4
  store i32 %32, i32* %25, align 4
  %38 = icmp sgt i32 %29, 3
  %39 = icmp sgt i32 %34, 3
  %40 = and i1 %38, %39
  %41 = sub nuw nsw i32 2147483647, %30
  %42 = icmp ult i32 %41, %35
  %43 = and i1 %42, %40
  %44 = select i1 %43, i32 %41, i32 %35
  %45 = icmp sgt i32 %32, 0
  %46 = icmp sgt i32 %37, 0
  %47 = and i1 %45, %46
  %48 = sub nuw nsw i32 2147483647, %32
  %49 = icmp ult i32 %48, %37
  %50 = and i1 %49, %47
  %51 = select i1 %50, i32 %48, i32 %37
  %52 = icmp sgt i32 %44, 0
  %53 = select i1 %52, i32 %44, i32 0
  store i32 %53, i32* %26, align 4
  %54 = icmp sgt i32 %51, 0
  %55 = select i1 %54, i32 %51, i32 0
  store i32 %55, i32* %27, align 4
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1
  %57 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %53
  br i1 %60, label %61, label %65

61:                                               ; preds = %22
  %62 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %55
  br i1 %64, label %94, label %65

65:                                               ; preds = %61, %22
  %66 = bitcast %"class.viz::ContextProvider"* %16 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %67 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %67, i64 12
  %69 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %68, align 8
  %70 = tail call %"class.gpu::gles2::GLES2Interface"* %69(%"class.viz::ContextProvider"* nonnull %16) #7
  %71 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %65
  %75 = bitcast %"class.gpu::gles2::GLES2Interface"* %70 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %76 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %76, i64 82
  %78 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %77, align 8
  tail call void %78(%"class.gpu::gles2::GLES2Interface"* %70, i32 1, i32* %71) #7
  %79 = load i32, i32* %71, align 8
  br label %80

80:                                               ; preds = %74, %65
  %81 = phi i32 [ %79, %74 ], [ %72, %65 ]
  %82 = bitcast %"class.gpu::gles2::GLES2Interface"* %70 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %83 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %83, i64 18
  %85 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %84, align 8
  tail call void %85(%"class.gpu::gles2::GLES2Interface"* %70, i32 3553, i32 %81) #7
  %86 = bitcast %"class.gpu::gles2::GLES2Interface"* %70 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %87 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %87, i64 175
  %89 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %88, align 8
  tail call void %89(%"class.gpu::gles2::GLES2Interface"* %70, i32 3553, i32 0, i32 6408, i32 %53, i32 %55, i32 0, i32 6408, i32 5121, i8* null) #7
  %90 = bitcast %"class.gfx::Size"* %56 to i64*
  %91 = bitcast %"class.gfx::Size"* %57 to i64*
  %92 = load i64, i64* %90, align 4
  store i64 %92, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  br label %94

94:                                               ; preds = %61, %80
  %95 = phi i32 [ %53, %61 ], [ %93, %80 ]
  %96 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #7
  %97 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  %99 = sdiv i32 %95, 2
  %100 = lshr i32 %55, 1
  %101 = icmp sgt i32 %99, 0
  %102 = select i1 %101, i32 %99, i32 0
  store i32 0, i32* %97, align 4
  store i32 0, i32* %98, align 4
  %103 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %104 = bitcast %"class.gfx::Size"* %103 to i64*
  %105 = zext i32 %100 to i64
  %106 = shl nuw nsw i64 %105, 32
  %107 = zext i32 %102 to i64
  %108 = or i64 %106, %107
  store i64 %108, i64* %104, align 4
  %109 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 2
  %110 = load i32, i32* %5, align 4
  %111 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %109, i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Vector2d"* dereferenceable(8) %3, i32 %110, i32 %112, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #7
  %114 = bitcast %"class.gfx::Vector2d"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #7
  br i1 %113, label %115, label %226

115:                                              ; preds = %94
  %116 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  %117 = load i32, i32* %111, align 8
  %118 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %9, i64 0, i32 0
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %9, i64 0, i32 1
  store i32 0, i32* %119, align 4
  %120 = getelementptr inbounds i32, i32* %5, i64 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds i32, i32* %5, i64 2
  %123 = load i32, i32* %122, align 4
  %124 = call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %116, i32 %117, %"class.gfx::Size"* dereferenceable(8) %57, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %9, i32 %121, i32 %123, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #7
  br label %226

125:                                              ; preds = %18
  %126 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %127 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4
  %128 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %126, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %139

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %135, %137
  br i1 %138, label %173, label %139

139:                                              ; preds = %133, %125
  %140 = bitcast %"class.viz::ContextProvider"* %16 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %141 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %141, i64 12
  %143 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %142, align 8
  %144 = tail call %"class.gpu::gles2::GLES2Interface"* %143(%"class.viz::ContextProvider"* nonnull %16) #7
  %145 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %139
  %149 = bitcast %"class.gpu::gles2::GLES2Interface"* %144 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %150 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %150, i64 82
  %152 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %151, align 8
  tail call void %152(%"class.gpu::gles2::GLES2Interface"* %144, i32 1, i32* %145) #7
  %153 = load i32, i32* %145, align 8
  br label %154

154:                                              ; preds = %148, %139
  %155 = phi i32 [ %153, %148 ], [ %146, %139 ]
  %156 = bitcast %"class.gpu::gles2::GLES2Interface"* %144 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %157 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %157, i64 18
  %159 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %158, align 8
  tail call void %159(%"class.gpu::gles2::GLES2Interface"* %144, i32 3553, i32 %155) #7
  %160 = load i32, i32* %130, align 4
  %161 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = bitcast %"class.gpu::gles2::GLES2Interface"* %144 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %164 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %164, i64 175
  %166 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %165, align 8
  tail call void %166(%"class.gpu::gles2::GLES2Interface"* %144, i32 3553, i32 0, i32 6408, i32 %160, i32 %162, i32 0, i32 6408, i32 5121, i8* null) #7
  %167 = bitcast %"class.gfx::Size"* %126 to i64*
  %168 = bitcast %"class.gfx::Size"* %127 to i64*
  %169 = load i64, i64* %167, align 4
  store i64 %169, i64* %168, align 4
  %170 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %161, align 4
  br label %173

173:                                              ; preds = %133, %154
  %174 = phi i32 [ %135, %133 ], [ %172, %154 ]
  %175 = phi i32 [ %129, %133 ], [ %171, %154 ]
  %176 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #7
  %177 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  %178 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %179 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 0
  %180 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %181 = sdiv i32 %175, 4
  store i32 0, i32* %177, align 4
  store i32 0, i32* %178, align 4
  %182 = icmp sgt i32 %181, 0
  %183 = select i1 %182, i32 %181, i32 0
  store i32 %183, i32* %179, align 4
  %184 = icmp sgt i32 %174, 0
  %185 = select i1 %184, i32 %174, i32 0
  store i32 %185, i32* %180, align 4
  %186 = bitcast %"class.gfx::Rect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #7
  %187 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %189 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %191 = lshr i32 %183, 1
  %192 = lshr i32 %185, 1
  store i32 0, i32* %187, align 4
  store i32 0, i32* %188, align 4
  store i32 %191, i32* %189, align 4
  store i32 %192, i32* %190, align 4
  %193 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 2
  %194 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %195 = load i32, i32* %194, align 8
  %196 = tail call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %193, i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Vector2d"* dereferenceable(8) %3, i32 %195, i32 0, %"class.gfx::Rect"* dereferenceable(16) %4) #7
  %197 = bitcast %"class.gfx::Vector2d"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #7
  %198 = bitcast %"class.gfx::Vector2d"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #7
  %199 = bitcast %"class.gfx::Vector2d"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #7
  br i1 %196, label %200, label %224

200:                                              ; preds = %173
  %201 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 6
  %202 = load i32, i32* %194, align 8
  %203 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %12, i64 0, i32 0
  store i32 0, i32* %203, align 4
  %204 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %12, i64 0, i32 1
  store i32 0, i32* %204, align 4
  %205 = load i32, i32* %5, align 4
  %206 = call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %201, i32 %202, %"class.gfx::Size"* dereferenceable(8) %127, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %12, i32 %205, i32 0, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #7
  br i1 %206, label %207, label %224

207:                                              ; preds = %200
  %208 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %19, align 8
  %209 = load i32, i32* %194, align 8
  %210 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %13, i64 0, i32 0
  store i32 0, i32* %210, align 4
  %211 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %13, i64 0, i32 1
  store i32 0, i32* %211, align 4
  %212 = getelementptr inbounds i32, i32* %5, i64 1
  %213 = load i32, i32* %212, align 4
  %214 = call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %208, i32 %209, %"class.gfx::Size"* dereferenceable(8) %127, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %13, i32 %213, i32 0, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #7
  br i1 %214, label %215, label %224

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %217 = load %"class.viz::GLScaler"*, %"class.viz::GLScaler"** %216, align 8
  %218 = load i32, i32* %194, align 8
  %219 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %14, i64 0, i32 0
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %14, i64 0, i32 1
  store i32 0, i32* %220, align 4
  %221 = getelementptr inbounds i32, i32* %5, i64 2
  %222 = load i32, i32* %221, align 4
  %223 = call zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"* %217, i32 %218, %"class.gfx::Size"* dereferenceable(8) %127, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %14, i32 %222, i32 0, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #7
  br label %224

224:                                              ; preds = %215, %207, %200, %173
  %225 = phi i1 [ false, %207 ], [ false, %200 ], [ false, %173 ], [ %223, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #7
  br label %226

226:                                              ; preds = %94, %115, %224
  %227 = phi i8* [ %197, %224 ], [ %114, %115 ], [ %114, %94 ]
  %228 = phi i8* [ %186, %224 ], [ %96, %115 ], [ %96, %94 ]
  %229 = phi i8* [ %176, %224 ], [ %23, %115 ], [ %23, %94 ]
  %230 = phi i1 [ %225, %224 ], [ %124, %115 ], [ false, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #7
  br label %231

231:                                              ; preds = %226, %6
  %232 = phi i1 [ false, %6 ], [ %230, %226 ]
  ret i1 %232
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz15GLI420Converter32EnsureIntermediateTextureDefinedERKN3gfx4SizeE(%"class.viz::GLI420Converter"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 4, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %48, label %15

15:                                               ; preds = %2, %9
  %16 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 1
  %17 = load %"class.viz::ContextProvider"*, %"class.viz::ContextProvider"** %16, align 8
  %18 = bitcast %"class.viz::ContextProvider"* %17 to %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)***
  %19 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)**, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %19, i64 12
  %21 = load %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)*, %"class.gpu::gles2::GLES2Interface"* (%"class.viz::ContextProvider"*)** %20, align 8
  %22 = tail call %"class.gpu::gles2::GLES2Interface"* %21(%"class.viz::ContextProvider"* %17) #7
  %23 = getelementptr inbounds %"class.viz::GLI420Converter", %"class.viz::GLI420Converter"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %15
  %27 = bitcast %"class.gpu::gles2::GLES2Interface"* %22 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %28 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %28, i64 82
  %30 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %29, align 8
  tail call void %30(%"class.gpu::gles2::GLES2Interface"* %22, i32 1, i32* %23) #7
  %31 = load i32, i32* %23, align 8
  br label %32

32:                                               ; preds = %26, %15
  %33 = phi i32 [ %31, %26 ], [ %24, %15 ]
  %34 = bitcast %"class.gpu::gles2::GLES2Interface"* %22 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %35 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %35, i64 18
  %37 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %36, align 8
  tail call void %37(%"class.gpu::gles2::GLES2Interface"* %22, i32 3553, i32 %33) #7
  %38 = load i32, i32* %6, align 4
  %39 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = bitcast %"class.gpu::gles2::GLES2Interface"* %22 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %42 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %42, i64 175
  %44 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %43, align 8
  tail call void %44(%"class.gpu::gles2::GLES2Interface"* %22, i32 3553, i32 0, i32 6408, i32 %38, i32 %40, i32 0, i32 6408, i32 5121, i8* null) #7
  %45 = bitcast %"class.gfx::Size"* %1 to i64*
  %46 = bitcast %"class.gfx::Size"* %3 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  br label %48

48:                                               ; preds = %9, %32
  ret void
}

declare zeroext i1 @_ZN3viz8GLScaler22ScaleToMultipleOutputsEjRKN3gfx4SizeERKNS1_8Vector2dEjjRKNS1_4RectE(%"class.viz::GLScaler"*, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Vector2d"* dereferenceable(8), i32, i32, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3viz15GLI420Converter13ToAlignedRectERKN3gfx4RectE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  %5 = add nsw i32 %3, -7
  %6 = select i1 %4, i32 %5, i32 %3
  %7 = sdiv i32 %6, 8
  %8 = shl nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = ashr i32 %10, 31
  %12 = add nsw i32 %11, %10
  %13 = sdiv i32 %12, 2
  %14 = shl nsw i32 %13, 1
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %3
  %18 = icmp slt i32 %17, 0
  %19 = add nsw i32 %17, 7
  %20 = select i1 %18, i32 %17, i32 %19
  %21 = sdiv i32 %20, 8
  %22 = shl nsw i32 %21, 3
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, %10
  %26 = lshr i32 %25, 31
  %27 = xor i32 %26, 1
  %28 = add nsw i32 %27, %25
  %29 = sdiv i32 %28, 2
  %30 = shl nsw i32 %29, 1
  %31 = sub nsw i32 %22, %8
  %32 = sub nsw i32 %30, %14
  %33 = icmp sgt i32 %6, 7
  %34 = icmp sgt i32 %31, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %8
  %37 = icmp ult i32 %36, %31
  %38 = and i1 %37, %35
  %39 = select i1 %38, i32 %36, i32 %31
  %40 = icmp sgt i32 %12, 1
  %41 = icmp sgt i32 %32, 0
  %42 = and i1 %40, %41
  %43 = sub nuw nsw i32 2147483647, %14
  %44 = icmp ult i32 %43, %32
  %45 = and i1 %44, %42
  %46 = select i1 %45, i32 %43, i32 %32
  %47 = icmp sgt i32 %39, 0
  %48 = select i1 %47, i32 %39, i32 0
  %49 = icmp sgt i32 %46, 0
  %50 = select i1 %49, i32 %46, i32 0
  %51 = zext i32 %14 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %8 to i64
  %54 = or i64 %52, %53
  %55 = insertvalue { i64, i64 } undef, i64 %54, 0
  %56 = zext i32 %50 to i64
  %57 = shl nuw nsw i64 %56, 32
  %58 = zext i32 %48 to i64
  %59 = or i64 %57, %58
  %60 = insertvalue { i64, i64 } %55, i64 %59, 1
  ret { i64, i64 } %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz15GLI420Converter23ParametersAreEquivalentERKNS_8GLScaler10ParametersES4_(%"struct.viz::GLScaler::Parameters"* dereferenceable(168), %"struct.viz::GLScaler::Parameters"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.viz::GLScaler::Parameters", align 4
  %4 = alloca %"struct.viz::GLScaler::Parameters", align 4
  %5 = alloca %"struct.viz::GLScaler::Parameters", align 4
  %6 = alloca %"struct.viz::GLScaler::Parameters", align 4
  %7 = bitcast %"struct.viz::GLScaler::Parameters"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %7) #7
  call void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"* nonnull %4, %"struct.viz::GLScaler::Parameters"* dereferenceable(168) %0) #7
  %8 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3
  %9 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %8) #7, !noalias !2
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 0
  store i8 1, i8* %11, align 4, !noalias !2
  %12 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 1
  store i8 1, i8* %12, align 1, !noalias !2
  %13 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 2
  store i8 2, i8* %13, align 2, !noalias !2
  %14 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 3
  store i8 1, i8* %14, align 1, !noalias !2
  %15 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 3, i32 4
  %16 = bitcast [9 x float]* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 64, i1 false) #7, !noalias !2
  br label %17

17:                                               ; preds = %2, %10
  %18 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 8
  store i8 5, i8* %18, align 4, !noalias !2
  %19 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %4, i64 0, i32 9, i64 1
  store i32 6408, i32* %19, align 4, !noalias !2
  call void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"* nonnull %3, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %4) #7
  %20 = bitcast %"struct.viz::GLScaler::Parameters"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %20) #7
  call void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"* nonnull %6, %"struct.viz::GLScaler::Parameters"* dereferenceable(168) %1) #7
  %21 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3
  %22 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %21) #7, !noalias !5
  br i1 %22, label %30, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3, i32 0
  store i8 1, i8* %24, align 4, !noalias !5
  %25 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3, i32 1
  store i8 1, i8* %25, align 1, !noalias !5
  %26 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3, i32 2
  store i8 2, i8* %26, align 2, !noalias !5
  %27 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3, i32 3
  store i8 1, i8* %27, align 1, !noalias !5
  %28 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 3, i32 4
  %29 = bitcast [9 x float]* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 64, i1 false) #7, !noalias !5
  br label %30

30:                                               ; preds = %17, %23
  %31 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 8
  store i8 5, i8* %31, align 4, !noalias !5
  %32 = getelementptr inbounds %"struct.viz::GLScaler::Parameters", %"struct.viz::GLScaler::Parameters"* %6, i64 0, i32 9, i64 1
  store i32 6408, i32* %32, align 4, !noalias !5
  call void @_ZN3viz8GLScaler10ParametersC1ERKS1_(%"struct.viz::GLScaler::Parameters"* nonnull %5, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %6) #7
  %33 = call zeroext i1 @_ZN3viz8GLScaler23ParametersAreEquivalentERKNS0_10ParametersES3_(%"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %3, %"struct.viz::GLScaler::Parameters"* nonnull dereferenceable(168) %5) #7
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %5) #7
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %20) #7
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %3) #7
  call void @_ZN3viz8GLScaler10ParametersD1Ev(%"struct.viz::GLScaler::Parameters"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %7) #7
  ret i1 %33
}

declare zeroext i1 @_ZN3viz8GLScaler23ParametersAreEquivalentERKNS0_10ParametersES3_(%"struct.viz::GLScaler::Parameters"* dereferenceable(168), %"struct.viz::GLScaler::Parameters"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZZN3viz15GLI420Converter23ParametersAreEquivalentERKNS_8GLScaler10ParametersES4_ENK3$_0clES2_: argument 0"}
!4 = distinct !{!4, !"_ZZN3viz15GLI420Converter23ParametersAreEquivalentERKNS_8GLScaler10ParametersES4_ENK3$_0clES2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZZN3viz15GLI420Converter23ParametersAreEquivalentERKNS_8GLScaler10ParametersES4_ENK3$_0clES2_: argument 0"}
!7 = distinct !{!7, !"_ZZN3viz15GLI420Converter23ParametersAreEquivalentERKNS_8GLScaler10ParametersES4_ENK3$_0clES2_"}
