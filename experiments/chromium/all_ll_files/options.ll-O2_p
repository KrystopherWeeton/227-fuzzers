; ModuleID = '../../third_party/unrar/src/options.cpp'
source_filename = "../../third_party/unrar/src/options.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%class.Array = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.FilterMode = type { i32, i32, i32 }

@_ZN10RAROptionsC1Ev = hidden unnamed_addr alias void (%class.RAROptions*), void (%class.RAROptions*)* @_ZN10RAROptionsC2Ev
@_ZN10RAROptionsD1Ev = hidden unnamed_addr alias void (%class.RAROptions*), void (%class.RAROptions*)* @_ZN10RAROptionsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RAROptionsC2Ev(%class.RAROptions*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 19
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %2) #4
  %3 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 6
  %4 = bitcast %class.RAROptions* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 67592, i1 false)
  store i64 33554432, i64* %3, align 8
  %5 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 26
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 27
  store i32 3, i32* %6, align 4
  %7 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 24
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 56
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 100
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 89
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 28
  store i32 2, i32* %12, align 8
  %13 = tail call i32 @_Z18GetNumberOfThreadsv() #4
  %14 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 106
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 9
  store i32 1, i32* %15, align 8
  ret void
}

declare void @_ZN11SecPasswordC1Ev(%class.SecPassword*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RAROptions4InitEv(%class.RAROptions* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.RAROptions* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 67592, i1 false)
  %3 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 6
  store i64 33554432, i64* %3, align 8
  %4 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 26
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 27
  store i32 3, i32* %5, align 4
  %6 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 24
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 56
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 100
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 89
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 9223372034707292159, i64 9223372034707292159>, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 28
  store i32 2, i32* %11, align 8
  %12 = tail call i32 @_Z18GetNumberOfThreadsv() #4
  %13 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 106
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 9
  store i32 1, i32* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10RAROptionsD2Ev(%class.RAROptions*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.RAROptions* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 67592, i1 false)
  %3 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %0, i64 0, i32 19
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %3) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN11SecPasswordD1Ev(%class.SecPassword*) unnamed_addr #3

declare i32 @_Z18GetNumberOfThreadsv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
