; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_worklet_node.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_worklet_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.553" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AudioWorkletHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.400", %"class.WTF::String", double, %"class.blink::CrossThreadPersistent", %"class.WTF::Vector.479", %"class.WTF::Vector.479", %"class.WTF::HashMap.484", %"class.WTF::HashMap.490", %class.scoped_refptr.301, i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.305, %"class.WTF::Vector.388", %"class.WTF::Vector.394", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.386" }
%"class.blink::PersistentNodePtr.386" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.301, i8, %"class.blink::Member.303", i8, %class.scoped_refptr.305, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.359", %"class.blink::Member.365", %"class.blink::Member.365", %"class.blink::Member.365", %"class.blink::Member.365", %class.scoped_refptr.367, %"class.blink::Member.368", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.573", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.575", %"class.blink::Member.579", %"class.blink::Member.581", %"class.blink::Member.583", %"class.blink::Member.585", %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::HeapObserverSet.593", %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.607", %"class.blink::Member.609", %"class.blink::Member.611", %"class.blink::Member.613", %"class.blink::Member.615", %"class.blink::Member.617", %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.661", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.675", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.560" }
%"class.blink::HeapHashMap.560" = type { %"class.WTF::HashMap.563" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.566" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.567" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.593" = type { i32, [4 x i8], %"class.blink::HeapHashSet.594" }
%"class.blink::HeapHashSet.594" = type { %"class.WTF::HashSet.597" }
%"class.WTF::HashSet.597" = type { %"class.WTF::HashTable.598" }
%"class.WTF::HashTable.598" = type <{ %"class.blink::WeakMember.600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.600" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.623" }
%"class.WTF::Deque.623" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.626" }
%"class.WTF::VectorBuffer.626" = type { %"class.WTF::VectorBufferBase.627" }
%"class.WTF::VectorBufferBase.627" = type { %"class.std::__1::unique_ptr.628"*, i32, i32 }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.634", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.634" = type { %"class.std::__1::__bitset.635" }
%"class.std::__1::__bitset.635" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.636" }
%"class.absl::optional.636" = type { %"class.absl::optional_internal::optional_data.637" }
%"class.absl::optional_internal::optional_data.637" = type { %"class.absl::optional_internal::optional_data_base.638" }
%"class.absl::optional_internal::optional_data_base.638" = type { %"class.absl::optional_internal::optional_data_dtor_base.639" }
%"class.absl::optional_internal::optional_data_dtor_base.639" = type { i8, %union.anon.640 }
%union.anon.640 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.641", i64, %"class.absl::optional.650", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.641" = type { %"class.absl::optional_internal::optional_data.642" }
%"class.absl::optional_internal::optional_data.642" = type { %"class.absl::optional_internal::optional_data_base.643" }
%"class.absl::optional_internal::optional_data_base.643" = type { %"class.absl::optional_internal::optional_data_dtor_base.644" }
%"class.absl::optional_internal::optional_data_dtor_base.644" = type { i8, %union.anon.645 }
%union.anon.645 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.650" = type { %"class.absl::optional_internal::optional_data.651" }
%"class.absl::optional_internal::optional_data.651" = type { %"class.absl::optional_internal::optional_data_base.652" }
%"class.absl::optional_internal::optional_data_base.652" = type { %"class.absl::optional_internal::optional_data_dtor_base.653" }
%"class.absl::optional_internal::optional_data_dtor_base.653" = type { i8, %union.anon.654 }
%union.anon.654 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.655" }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.661" = type { %"class.WTF::HashSet.664" }
%"class.WTF::HashSet.664" = type { %"class.WTF::HashTable.665" }
%"class.WTF::HashTable.665" = type <{ %"class.blink::WeakMember.667"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.667" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.668" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.668" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.459 }
%class.scoped_refptr.459 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.309", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.310" }
%"struct.std::__1::atomic.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__cxx_atomic_impl.313" }
%"struct.std::__1::__cxx_atomic_impl.313" = type { %"struct.std::__1::__cxx_atomic_base_impl.314" }
%"struct.std::__1::__cxx_atomic_base_impl.314" = type { i8 }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.305, %class.scoped_refptr.319, %"class.blink::HeapVector.370", %"class.blink::HeapVector.378" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.319 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.305, %"class.WTF::Vector.388", %"class.WTF::Vector.394", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.370" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::Member.376"*, i32, i32 }
%"class.blink::Member.376" = type opaque
%"class.blink::HeapVector.378" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::Member.384"*, i32, i32 }
%"class.blink::Member.384" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.293", %"class.blink::SelfKeepAlive.297" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.249", %"class.blink::HeapHashMap.258", %"class.std::__1::unique_ptr.268", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.280", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.283" }
%"class.blink::HeapHashMap.249" = type { %"class.WTF::HashMap.252" }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.258" = type { %"class.WTF::HashMap.261" }
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.264" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.265" }
%"class.blink::TraceWrapperV8Reference.265" = type { %"class.v8::TracedReference.266" }
%"class.v8::TracedReference.266" = type { %"class.v8::BasicTracedReference.267" }
%"class.v8::BasicTracedReference.267" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.271" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.280" = type { %"class.v8::Persistent.281" }
%"class.v8::Persistent.281" = type { %"class.v8::PersistentBase.282" }
%"class.v8::PersistentBase.282" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.283" = type { %"class.WTF::HashMap.286" }
%"class.WTF::HashMap.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"struct.WTF::KeyValuePair.289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.289" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.290" }
%"class.blink::Persistent.290" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.292 }
%class.scoped_refptr.292 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.293", %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.293" = type { %"class.v8::TracedReference.294" }
%"class.v8::TracedReference.294" = type { %"class.v8::BasicTracedReference.295" }
%"class.v8::BasicTracedReference.295" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.297" = type { %"class.blink::Persistent.298" }
%"class.blink::Persistent.298" = type { %"class.blink::PersistentBase.299" }
%"class.blink::PersistentBase.299" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.359" = type { %"class.WTF::HashSet.362" }
%"class.WTF::HashSet.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.367 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type { %"class.blink::Worklet", i8, %"class.blink::Member.24" }
%"class.blink::Worklet" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.497", %"class.blink::HeapVector.498", %"class.blink::Member.506", %"class.blink::HeapHashSet.515" }
%"class.blink::ThreadState::PrefinalizerRegistration.497" = type { i8 }
%"class.blink::HeapVector.498" = type { %"class.WTF::Vector.501" }
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"class.blink::Member.504"*, i32, i32 }
%"class.blink::Member.504" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::WorkletModuleResponsesMap"* }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.510", %"class.WTF::Mutex" }
%"class.WTF::HashMap.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"struct.WTF::KeyValuePair.514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.514" = type opaque
%"class.blink::HeapHashSet.515" = type { %"class.WTF::HashSet.518" }
%"class.WTF::HashSet.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"class.blink::Member.521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.521" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.305 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.306", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.315", %"class.WTF::Vector.320", i8, [3 x i8], i32, %"class.WTF::HashSet.325", %"class.WTF::HashSet.325", %"class.WTF::HashSet.329", %"class.WTF::HashSet.333", %"class.WTF::Vector.320", %"class.WTF::Vector.320", %"class.WTF::Vector.320", %"class.WTF::Vector.320", i8, [7 x i8], %"class.WTF::HashSet.315", %"class.WTF::Vector.320", %class.scoped_refptr.301, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.306" = type { %"class.base::RefCountedThreadSafe.307" }
%"class.base::RefCountedThreadSafe.307" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.308 }
%class.scoped_refptr.308 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.325" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.305, %"class.WTF::HashSet.333", %"class.WTF::Vector.524", i8, [7 x i8] }>
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase.526" }
%"class.WTF::VectorBufferBase.526" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.337, %class.scoped_refptr.337, i8, [7 x i8], %"class.WTF::HashSet.351", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.355" }
%class.scoped_refptr.337 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.338", i32, %"class.WTF::Vector.340", i32, float }
%"class.WTF::ThreadSafeRefCounted.338" = type { %"class.base::RefCountedThreadSafe.339" }
%"class.base::RefCountedThreadSafe.339" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342", [64 x i8] }
%"class.WTF::VectorBufferBase.342" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.343", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type { %"class.blink::AudioSummingJunction.base", %"class.blink::AudioHandler"*, %"class.WTF::HashSet.333", %class.scoped_refptr.337 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.305, %"class.WTF::HashSet.333", %"class.WTF::Vector.524", i8 }>
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.522", i32, %"class.WTF::String", %"struct.std::__1::atomic.529", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.367, %class.scoped_refptr.337 }
%"class.WTF::ThreadSafeRefCounted.522" = type { %"class.base::RefCountedThreadSafe.523" }
%"class.base::RefCountedThreadSafe.523" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.529" = type { %"struct.std::__1::__atomic_base.530" }
%"struct.std::__1::__atomic_base.530" = type { %"struct.std::__1::__cxx_atomic_impl.531" }
%"struct.std::__1::__cxx_atomic_impl.531" = type { %"struct.std::__1::__cxx_atomic_base_impl.532" }
%"struct.std::__1::__cxx_atomic_base_impl.532" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.533", %"class.WTF::HashSet.544", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.std::__1::unique_ptr.536"*, i32, i32 }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.548", double, float, [4 x i8], %"class.std::__1::unique_ptr.536", i8, [7 x i8] }>
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { float*, i32, i32 }
%"class.WTF::HashSet.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %class.scoped_refptr.319*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %class.scoped_refptr.319*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.std::__1::unique_ptr.391"*, i32, i32 }
%"class.std::__1::unique_ptr.391" = type opaque
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.std::__1::unique_ptr.397"*, i32, i32 }
%"class.std::__1::unique_ptr.397" = type opaque
%"class.base::SupportsWeakPtr.400" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.401" }
%"class.blink::PersistentBase.401" = type { %"class.blink::AudioWorkletProcessor"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::AudioWorkletProcessor" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.402", %"class.blink::Member.404", %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.464", %"class.blink::TraceWrapperV8Reference.464", %"class.blink::TraceWrapperV8Reference", %"class.blink::HeapVector.467", %"class.blink::HeapVector.467", i32, [4 x i8] }>
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::AudioWorkletGlobalScope"* }
%"class.blink::AudioWorkletGlobalScope" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable.406", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.407", i8, i8, %class.scoped_refptr.301, %"class.blink::MessagePortDescriptor" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.406" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.412, %"class.std::__1::unique_ptr.413", %"class.absl::optional", %"struct.std::__1::atomic.241", i8, i8, i8, i8, i32, i32, %"class.absl::optional.422", %"class.std::__1::unique_ptr.427", i8, i64, %class.scoped_refptr.457, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.460" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.410 }
%class.scoped_refptr.410 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.411", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.411" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.412 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.302" }>
%"class.base::RefCountedThreadSafe.302" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.412, i8, %"class.mojo::ScopedHandleBase.416", %class.scoped_refptr.417, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.416" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.417 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.421", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.421" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.430", i8, i64, %class.scoped_refptr.431, %class.scoped_refptr.453 }
%"class.base::RepeatingCallback.430" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.431 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.432", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.442", i8, [7 x i8] }>
%"class.base::RefCounted.432" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.433 }
%class.scoped_refptr.433 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::map.442" = type { %"class.std::__1::__tree.443" }
%"class.std::__1::__tree.443" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%class.scoped_refptr.453 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.457 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.458 }
%class.scoped_refptr.458 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.495", [4 x i8], %"class.base::RepeatingCallback.496", %class.scoped_refptr.412, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe.495" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.496" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::TraceWrapperV8Reference.464" = type { %"class.v8::TracedReference.465" }
%"class.v8::TracedReference.465" = type { %"class.v8::BasicTracedReference.466" }
%"class.v8::BasicTracedReference.466" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.467" = type { %"class.WTF::Vector.470" }
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::HeapVector.473"*, i32, i32 }
%"class.blink::HeapVector.473" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.475" }
%"struct.std::__1::atomic.475" = type { %"struct.std::__1::__atomic_base.476" }
%"struct.std::__1::__atomic_base.476" = type { %"struct.std::__1::__cxx_atomic_impl.477" }
%"struct.std::__1::__cxx_atomic_impl.477" = type { %"struct.std::__1::__cxx_atomic_base_impl.478" }
%"struct.std::__1::__cxx_atomic_base_impl.478" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.479" = type { %"class.WTF::VectorBuffer.480" }
%"class.WTF::VectorBuffer.480" = type { %"class.WTF::VectorBufferBase.481" }
%"class.WTF::VectorBufferBase.481" = type { %class.scoped_refptr.337*, i32, i32 }
%"class.WTF::HashMap.484" = type { %"class.WTF::HashTable.485" }
%"class.WTF::HashTable.485" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type { %"class.WTF::String", %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.blink::AudioParamHandler"* }
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.494" = type { %"class.WTF::String", %"class.std::__1::unique_ptr.343" }
%class.scoped_refptr.301 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::AudioWorkletNodeOptions" = type { %"class.blink::AudioNodeOptions", i8, i8, i8, i8, i32, i32, %"class.WTF::Vector.683", %"class.WTF::Vector.688", %"class.blink::ScriptValue" }
%"class.blink::AudioNodeOptions" = type { %"class.blink::IDLDictionaryBase", i8, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector.683" = type { %"class.WTF::VectorBuffer.684" }
%"class.WTF::VectorBuffer.684" = type { %"class.WTF::VectorBufferBase.685" }
%"class.WTF::VectorBufferBase.685" = type { i32*, i32, i32 }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"struct.std::__1::pair.691"*, i32, i32 }
%"struct.std::__1::pair.691" = type { %"class.WTF::String", double }
%"class.blink::AudioWorkletNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.774", %"class.blink::Member.775", %"class.blink::Member.404" }
%"class.blink::ActiveScriptWrappable.774" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::AudioParamMap"* }
%"class.blink::AudioParamMap" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.blink::HeapHashMap.777" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapHashMap.777" = type { %"class.WTF::HashMap.780" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type { %"class.WTF::String", %"class.blink::Member.784" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.489, %"class.blink::Member.24", %class.scoped_refptr.305 }
%"class.WTF::Vector.786" = type { %"class.WTF::VectorBuffer.787" }
%"class.WTF::VectorBuffer.787" = type { %"class.WTF::VectorBufferBase.788" }
%"class.WTF::VectorBufferBase.788" = type { %"class.blink::CrossThreadAudioParamInfo"*, i32, i32 }
%"class.blink::CrossThreadAudioParamInfo" = type { %"class.WTF::String", float, float, float, %"class.WTF::String" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.694", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.737", i32, i8, [3 x i8], %"class.blink::HeapVector.739", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.747", %"class.blink::Member.749", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.758", %"class.blink::Member.764", %"class.blink::Member.766", i8, [7 x i8] }>
%"class.blink::Supplementable.694" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.695" }
%"class.blink::HeapHashMap.695" = type { %"class.WTF::HashMap.698" }
%"class.WTF::HashMap.698" = type { %"class.WTF::HashTable.699" }
%"class.WTF::HashTable.699" = type <{ %"struct.WTF::KeyValuePair.701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.701" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.702" }
%"class.blink::Supplementable.702" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.703" }
%"class.blink::HeapHashMap.703" = type { %"class.WTF::HashMap.706" }
%"class.WTF::HashMap.706" = type { %"class.WTF::HashTable.707" }
%"class.WTF::HashTable.707" = type <{ %"struct.WTF::KeyValuePair.709"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.709" = type { i8*, %"class.blink::Member.1022" }
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::Supplement.1024"* }
%"class.blink::Supplement.1024" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1025" }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.710, %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.725", %"class.blink::Member.731", i32, [4 x i8], %"class.WTF::HashSet.733", i32, i32 }
%class.scoped_refptr.710 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.711", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.713", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.718 }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.713" = type { %"class.absl::optional_internal::optional_data.714" }
%"class.absl::optional_internal::optional_data.714" = type { %"class.absl::optional_internal::optional_data_base.715" }
%"class.absl::optional_internal::optional_data_base.715" = type { %"class.absl::optional_internal::optional_data_dtor_base.716" }
%"class.absl::optional_internal::optional_data_dtor_base.716" = type { i8, %union.anon.717 }
%union.anon.717 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.718 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.739" = type { %"class.WTF::Vector.742" }
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.744" }
%"class.WTF::VectorBufferBase.744" = type { %"class.blink::Member.745"*, i32, i32 }
%"class.blink::Member.745" = type opaque
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.751", i32, i32 }
%"class.blink::HeapHashMap.751" = type { %"class.WTF::HashMap.754" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.757"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.757" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.302", [4 x i8] }>
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.910 }
%union.anon.910 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::WeakPtr.773" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::StringAppend.938" = type { %"class.WTF::String", i8* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.953", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::ErrorEvent" = type { %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.950", %"class.blink::WorldSafeV8Reference", %class.scoped_refptr.53 }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.944", %"class.blink::Member.944", %"class.blink::Member.946", %"class.blink::Member.948", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.939" }
%"class.absl::optional.939" = type { %"class.absl::optional_internal::optional_data.940" }
%"class.absl::optional_internal::optional_data.940" = type { %"class.absl::optional_internal::optional_data_base.941" }
%"class.absl::optional_internal::optional_data_base.941" = type { %"class.absl::optional_internal::optional_data_dtor_base.942" }
%"class.absl::optional_internal::optional_data_dtor_base.942" = type { i8, %union.anon.943 }
%union.anon.943 = type { i64 }
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::Event"* }
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::SourceLocation"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.791", %"class.WTF::String" }
%"class.WTF::StringAppend.791" = type { %"class.WTF::StringAppend.792", i8* }
%"class.WTF::StringAppend.792" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.1090" = type { %"class.WTF::StringTypeAdapter.1091" }
%"class.WTF::StringTypeAdapter.1091" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.1093" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.293" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.795" = type { %"class.WTF::StringAppend", i8* }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.796 }
%class.scoped_refptr.796 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"struct.blink::SerializedScriptValue::SerializeOptions" = type { %"class.blink::Transferables"*, %"class.WTF::Vector.868"*, i32, i32 }
%"class.blink::Transferables" = type { %"class.blink::HeapVector.797", %"class.blink::HeapVector.806", %"class.blink::HeapVector.814", %"class.blink::HeapVector.822", %"class.blink::HeapVector.829", %"class.blink::HeapVector.837", %"class.blink::HeapVector.845", %"class.blink::HeapVector.853", %"class.blink::HeapHashMap.861" }
%"class.blink::HeapVector.797" = type { %"class.WTF::Vector.800" }
%"class.WTF::Vector.800" = type { %"class.WTF::VectorBuffer.801" }
%"class.WTF::VectorBuffer.801" = type { %"class.WTF::VectorBufferBase.802" }
%"class.WTF::VectorBufferBase.802" = type { %"class.blink::Member.803"*, i32, i32 }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::HeapVector.806" = type { %"class.WTF::Vector.809" }
%"class.WTF::Vector.809" = type { %"class.WTF::VectorBuffer.810" }
%"class.WTF::VectorBuffer.810" = type { %"class.WTF::VectorBufferBase.811" }
%"class.WTF::VectorBufferBase.811" = type { %"class.blink::Member.812"*, i32, i32 }
%"class.blink::Member.812" = type opaque
%"class.blink::HeapVector.814" = type { %"class.WTF::Vector.817" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819" }
%"class.WTF::VectorBufferBase.819" = type { %"class.blink::Member.820"*, i32, i32 }
%"class.blink::Member.820" = type opaque
%"class.blink::HeapVector.822" = type { %"class.WTF::Vector.825" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %"class.blink::Member.404"*, i32, i32 }
%"class.blink::HeapVector.829" = type { %"class.WTF::Vector.832" }
%"class.WTF::Vector.832" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834" }
%"class.WTF::VectorBufferBase.834" = type { %"class.blink::Member.835"*, i32, i32 }
%"class.blink::Member.835" = type opaque
%"class.blink::HeapVector.837" = type { %"class.WTF::Vector.840" }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"class.blink::Member.843"*, i32, i32 }
%"class.blink::Member.843" = type opaque
%"class.blink::HeapVector.845" = type { %"class.WTF::Vector.848" }
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850" }
%"class.WTF::VectorBufferBase.850" = type { %"class.blink::Member.851"*, i32, i32 }
%"class.blink::Member.851" = type opaque
%"class.blink::HeapVector.853" = type { %"class.WTF::Vector.856" }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"class.blink::Member.859"*, i32, i32 }
%"class.blink::Member.859" = type opaque
%"class.blink::HeapHashMap.861" = type { %"class.WTF::HashMap.864" }
%"class.WTF::HashMap.864" = type { %"class.WTF::HashTable.865" }
%"class.WTF::HashTable.865" = type <{ %"struct.WTF::KeyValuePair.867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.867" = type opaque
%"class.WTF::Vector.868" = type opaque
%"class.blink::DeferredTaskHandler::GraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::MessageChannel" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.404", %"class.blink::Member.404" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.870", [4 x i8], %"class.std::__1::unique_ptr.872", i64, %"class.WTF::Vector.876", %"class.WTF::Vector.881", %"class.WTF::Vector.887", %"class.WTF::Vector.904", %class.scoped_refptr.710, %"class.WTF::HashMap.916", %"class.WTF::Vector.921", %"class.WTF::Vector.876", %"class.WTF::Vector.927", %"class.WTF::HashMap.932", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.870" = type { %"class.base::RefCountedThreadSafe.871" }
%"class.base::RefCountedThreadSafe.871" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { i8* }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883", [8 x i8] }
%"class.WTF::VectorBufferBase.883" = type { %class.scoped_refptr.884*, i32, i32 }
%class.scoped_refptr.884 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.887" = type { %"class.WTF::VectorBuffer.888" }
%"class.WTF::VectorBuffer.888" = type { %"class.WTF::VectorBufferBase.889" }
%"class.WTF::VectorBufferBase.889" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.890", %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.904" = type { %"class.WTF::VectorBuffer.905" }
%"class.WTF::VectorBuffer.905" = type { %"class.WTF::VectorBufferBase.906" }
%"class.WTF::VectorBufferBase.906" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.907", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.907" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.920" = type opaque
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923" }
%"class.WTF::VectorBufferBase.923" = type { %"class.mojo::ScopedHandleBase.924"*, i32, i32 }
%"class.mojo::ScopedHandleBase.924" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.876" = type { %"class.WTF::VectorBuffer.877" }
%"class.WTF::VectorBuffer.877" = type { %"class.WTF::VectorBufferBase.878", [16 x i8] }
%"class.WTF::VectorBufferBase.878" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type { i8**, %"class.std::__1::unique_ptr.1027" }
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1113, i32, i8, i8, [2 x i8] }>
%union.anon.1113 = type { %"class.WTF::Vector.1114" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116", [16 x i8] }
%"class.WTF::VectorBufferBase.1116" = type { i8*, i32, i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.963", %"class.blink::Member.965", %"class.blink::Member.963", %"class.blink::Member.963", %"class.blink::Member.967" }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.971", %"class.blink::Member.973", %"class.blink::Member.965", %"class.blink::Member.975", %"class.blink::Member.975", %"class.blink::Member.999", %"class.blink::Member.1001", %"class.blink::Member.1003", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1008", %"class.blink::HeapVector.1010" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.979" }
%"class.blink::HeapHashMap.979" = type { %"class.WTF::HashMap.982" }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.985" = type { %"class.WTF::AtomicString", %"class.blink::Member.986" }
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.990", i32, %"class.blink::HeapVector.992" }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.992" = type { %"class.WTF::Vector.995" }
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.997" }
%"class.WTF::VectorBufferBase.997" = type { %"class.blink::Member.990"*, i32, i32 }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1005" }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::HeapHashMap.1007"* }
%"class.blink::HeapHashMap.1007" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"class.blink::Member.1016"*, i32, i32 }
%"class.blink::Member.1016" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::Node"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1020", i8, [7 x i8] }>
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.WTF::Vector.1119" = type { %"class.WTF::VectorBuffer.1120" }
%"class.WTF::VectorBuffer.1120" = type { %"class.WTF::VectorBufferBase.1121", [16 x i8] }
%"class.WTF::VectorBufferBase.1121" = type { i16*, i32, i32 }

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE = comdat any

$_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj = comdat any

$_ZNK5blink19AudioWorkletHandler22RequiresTailProcessingEv = comdat any

$_ZNK5blink19AudioWorkletHandler11LatencyTimeEv = comdat any

$_ZN5blink16AudioWorkletNodeD2Ev = comdat any

$_ZN5blink16AudioWorkletNodeD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16AudioWorkletNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZThn168_N5blink16AudioWorkletNodeD1Ev = comdat any

$_ZThn168_N5blink16AudioWorkletNodeD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE26DispatchHasPendingActivityEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS1_RKS7_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEaSERKS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j = comdat any

$_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_ = comdat any

$_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19AudioWorkletHandlerEFvNS2_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8ReinsertEOSB_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm = comdat any

$_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink8AudioBusEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZN5blink14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10AudioParamEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10AudioParamEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16AudioWorkletNodeEE4CallIJRNS_16BaseAudioContextERKN3WTF6StringERPKNS_23AudioWorkletNodeOptionsEKNS6_6VectorINS_25CrossThreadAudioParamInfoELj0ENS6_18PartitionAllocatorEEEPNS_11MessagePortEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5blink10TraceTraitINS_13AudioParamMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink19AudioWorkletHandlerE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AudioWorkletHandler"*)* @_ZN5blink19AudioWorkletHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletHandler"*)* @_ZN5blink19AudioWorkletHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler7DisposeEv to i8*), i8* bitcast (%"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler7ContextEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletHandler"*, i32)* @_ZN5blink19AudioWorkletHandler7ProcessEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler12UninitializeEv to i8*), i8* bitcast (i32 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler18ProcessIfNecessaryEj to i8*), i8* bitcast (void (%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioNodeInput"*)* @_ZN5blink19AudioWorkletHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE to i8*), i8* bitcast (i1 (%"class.blink::AudioWorkletHandler"*)* @_ZNK5blink19AudioWorkletHandler22RequiresTailProcessingEv to i8*), i8* bitcast (double (%"class.blink::AudioWorkletHandler"*)* @_ZNK5blink19AudioWorkletHandler8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::AudioWorkletHandler"*)* @_ZNK5blink19AudioWorkletHandler11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler17PropagatesSilenceEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletHandler"*)* @_ZN5blink19AudioWorkletHandler24UpdatePullStatusIfNeededEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler10PullInputsEj to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [29 x i8] c"AudioWorkletHandler::Process\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"SetProcessorOnRenderThread\00", align 1
@.str.2 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/modules/webaudio/audio_worklet_node.cc\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"FinishProcessorOnRenderThread\00", align 1
@_ZTVN5blink16AudioWorkletNodeE = hidden unnamed_addr constant { [31 x i8*], [5 x i8*], [7 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZN5blink16AudioWorkletNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZN5blink16AudioWorkletNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::AudioWorkletNode"*)* @_ZNK5blink16AudioWorkletNode18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*)* @_ZNK5blink16AudioWorkletNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AudioWorkletNode"*)* @_ZNK5blink16AudioWorkletNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZN5blink16AudioWorkletNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZN5blink16AudioWorkletNode21ReportWillBeDestroyedEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink16AudioWorkletNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZThn72_N5blink16AudioWorkletNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZThn72_N5blink16AudioWorkletNode21ReportWillBeDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink16AudioWorkletNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZThn168_N5blink16AudioWorkletNodeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletNode"*)* @_ZThn168_N5blink16AudioWorkletNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.774"*)* @_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.774"*)* @_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"k-rate\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"AudioWorkletNode(\22\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"\22).\00", align 1
@.str.7 = private unnamed_addr constant [96 x i8] c"AudioWorkletNode cannot be created: Number of inputs and number of outputs cannot be both zero.\00", align 1
@.str.8 = private unnamed_addr constant [79 x i8] c"AudioWorkletNode cannot be created: Length of specified 'outputChannelCount' (\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c") does not match the given number of outputs (\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"channel count\00", align 1
@.str.12 = private unnamed_addr constant [146 x i8] c"AudioWorkletNode cannot be created: AudioWorklet does not have a valid AudioWorkletGlobalScope. Load a script via audioWorklet.addModule() first.\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"AudioWorkletNode cannot be created: The node name '\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"' is not defined in AudioWorkletGlobalScope.\00", align 1
@.str.15 = private unnamed_addr constant [68 x i8] c"AudioWorkletNode cannot be created: No execution context available.\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"AudioWorkletNode cannot be created.\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"an error thrown from \00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"AudioWorkletProcessor constructor\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"AudioWorkletProcessor::process() method\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEEEEPKcv = private unnamed_addr constant [120 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, scoped_refptr<blink::AudioParamHandler> >]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink16AudioWorkletNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.29 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.30 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@.str.31 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.32 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, std::__1::unique_ptr<blink::AudioArray<float>, std::__1::default_delete<blink::AudioArray<float> > > >]\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.35 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8AudioBusEEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::AudioBus>]\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.40 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.42 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.43 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10AudioParamEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.44 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [380 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::AudioParam> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::AudioParam> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c") is outside the range \00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.50 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CrossThreadAudioParamInfo]\00", align 1

@_ZN5blink19AudioWorkletHandlerC1ERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE = hidden unnamed_addr alias void (%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioNode"*, float, %"class.WTF::StringImpl"*, %"class.WTF::HashMap.484"*, %"class.blink::AudioWorkletNodeOptions"*), void (%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioNode"*, float, %"class.WTF::StringImpl"*, %"class.WTF::HashMap.484"*, %"class.blink::AudioWorkletNodeOptions"*)* @_ZN5blink19AudioWorkletHandlerC2ERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE
@_ZN5blink19AudioWorkletHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::AudioWorkletHandler"*), void (%"class.blink::AudioWorkletHandler"*)* @_ZN5blink19AudioWorkletHandlerD2Ev
@_ZN5blink16AudioWorkletNodeC1ERNS_16BaseAudioContextERKN3WTF6StringEPKNS_23AudioWorkletNodeOptionsENS3_6VectorINS_25CrossThreadAudioParamInfoELj0ENS3_18PartitionAllocatorEEEPNS_11MessagePortE = hidden unnamed_addr alias void (%"class.blink::AudioWorkletNode"*, %"class.blink::BaseAudioContext"*, %"class.WTF::String"*, %"class.blink::AudioWorkletNodeOptions"*, %"class.WTF::Vector.786"*, %"class.blink::MessagePort"*), void (%"class.blink::AudioWorkletNode"*, %"class.blink::BaseAudioContext"*, %"class.WTF::String"*, %"class.blink::AudioWorkletNodeOptions"*, %"class.WTF::Vector.786"*, %"class.blink::MessagePort"*)* @_ZN5blink16AudioWorkletNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPKNS_23AudioWorkletNodeOptionsENS3_6VectorINS_25CrossThreadAudioParamInfoELj0ENS3_18PartitionAllocatorEEEPNS_11MessagePortE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandlerC2ERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE(%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioNode"* dereferenceable(168), float, %"class.WTF::StringImpl"*, %"class.WTF::HashMap.484"* nocapture readonly, %"class.blink::AudioWorkletNodeOptions"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.343", align 8
  %8 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioHandler"* %8, i32 21, %"class.blink::AudioNode"* dereferenceable(168) %1, float %2) #12
  %9 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %9) #12
  %10 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink19AudioWorkletHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %6, %13, %28
  %31 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 4
  store double 0x7FF0000000000000, double* %31, align 8
  %32 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7
  %35 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8
  %36 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %4, i64 0, i32 0, i32 2
  %38 = bitcast %"class.blink::CrossThreadPersistent"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 68, i1 false)
  %39 = load i32, i32* %37, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %77, label %41

41:                                               ; preds = %30
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.485"* %36, i32 %39) #12
  %42 = load i32, i32* %37, align 4
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %4, i64 0, i32 0, i32 0
  %45 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %4, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %45, i64 %48
  br i1 %43, label %77, label %50

50:                                               ; preds = %41
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair.488"* [ %57, %56 ], [ %45, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.488"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair.488"* %57, %49
  br i1 %58, label %77, label %52

59:                                               ; preds = %52, %50
  %60 = phi %"struct.WTF::KeyValuePair.488"* [ %45, %50 ], [ %53, %52 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.488"* %60, %49
  br i1 %61, label %77, label %62

62:                                               ; preds = %59, %75
  %63 = phi %"struct.WTF::KeyValuePair.488"* [ %69, %75 ], [ %60, %59 ]
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %63, i64 0, i32 0
  %65 = tail call { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS1_RKS7_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"* %36, %"class.WTF::String"* dereferenceable(8) %64, %"struct.WTF::KeyValuePair.488"* dereferenceable(16) %63) #12
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %63, i64 1
  %67 = icmp eq %"struct.WTF::KeyValuePair.488"* %66, %49
  br i1 %67, label %77, label %68

68:                                               ; preds = %62, %72
  %69 = phi %"struct.WTF::KeyValuePair.488"* [ %73, %72 ], [ %66, %62 ]
  %70 = bitcast %"struct.WTF::KeyValuePair.488"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  switch i64 %71, label %75 [
    i64 -1, label %72
    i64 0, label %72
  ]

72:                                               ; preds = %68, %68
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %69, i64 1
  %74 = icmp eq %"struct.WTF::KeyValuePair.488"* %73, %49
  br i1 %74, label %77, label %68

75:                                               ; preds = %68
  %76 = icmp eq %"struct.WTF::KeyValuePair.488"* %69, %49
  br i1 %76, label %77, label %62

77:                                               ; preds = %56, %62, %75, %72, %30, %41, %59
  %78 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9
  %79 = bitcast %"class.WTF::HashMap.490"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #12
  %80 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 10
  %81 = getelementptr inbounds %class.scoped_refptr.301, %class.scoped_refptr.301* %80, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %81, align 8
  %82 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 11
  store i8 0, i8* %82, align 8
  %83 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %35, i64 0, i32 0, i32 0
  %87 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %87, i64 %90
  br i1 %85, label %111, label %92

92:                                               ; preds = %77
  %93 = icmp eq i32 %89, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %98
  %95 = phi %"struct.WTF::KeyValuePair.488"* [ %99, %98 ], [ %87, %92 ]
  %96 = bitcast %"struct.WTF::KeyValuePair.488"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %101 [
    i64 -1, label %98
    i64 0, label %98
  ]

98:                                               ; preds = %94, %94
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %95, i64 1
  %100 = icmp eq %"struct.WTF::KeyValuePair.488"* %99, %91
  br i1 %100, label %111, label %94

101:                                              ; preds = %94, %92
  %102 = phi %"struct.WTF::KeyValuePair.488"* [ %87, %92 ], [ %95, %94 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.488"* %102, %91
  br i1 %103, label %111, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.std::__1::unique_ptr.343"* %7 to i8*
  %106 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 10, i32 0
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343"* %7, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::unique_ptr.343"* %7 to i8**
  %109 = getelementptr inbounds %"class.WTF::HashMap.490", %"class.WTF::HashMap.490"* %78, i64 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.343"* %7 to i64*
  br label %118

111:                                              ; preds = %98, %150, %160, %157, %77, %101
  %112 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %5, i64 0, i32 5
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %257

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  br label %179

118:                                              ; preds = %104, %160
  %119 = phi %"struct.WTF::KeyValuePair.488"* [ %102, %104 ], [ %154, %160 ]
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %119, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %121 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %106, align 8
  %122 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %121, i64 0, i32 7
  %123 = load i32, i32* %122, align 4
  %124 = call noalias i8* @malloc(i64 24) #12
  %125 = bitcast i8* %124 to %"class.blink::AudioArray"*
  %126 = zext i32 %123 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 20, i1 false) #12
  call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %125, i64 %126) #12
  store i8* %124, i8** %108, align 8
  %127 = call { %"struct.WTF::KeyValuePair.494"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.491"* %109, %"class.WTF::String"* dereferenceable(8) %120, %"class.std::__1::unique_ptr.343"* nonnull dereferenceable(8) %7) #12
  %128 = extractvalue { %"struct.WTF::KeyValuePair.494"*, i8 } %127, 1
  %129 = and i8 %128, 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %118
  %132 = extractvalue { %"struct.WTF::KeyValuePair.494"*, i8 } %127, 0
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %132, i64 0, i32 1
  %134 = load i64, i64* %110, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %107, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343"* %133, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %135, align 8
  %137 = bitcast %"class.std::__1::unique_ptr.343"* %133 to i64*
  store i64 %134, i64* %137, align 8
  %138 = icmp eq %"class.blink::AudioArray"* %136, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %131
  %140 = bitcast %"class.blink::AudioArray"* %136 to i8**
  %141 = load i8*, i8** %140, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %141) #12
  %142 = bitcast %"class.blink::AudioArray"* %136 to i8*
  call void @free(i8* %142) #12
  br label %143

143:                                              ; preds = %118, %131, %139
  %144 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %107, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %107, align 8
  %145 = icmp eq %"class.blink::AudioArray"* %144, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = bitcast %"class.blink::AudioArray"* %144 to i8**
  %148 = load i8*, i8** %147, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %148) #12
  %149 = bitcast %"class.blink::AudioArray"* %144 to i8*
  call void @free(i8* %149) #12
  br label %150

150:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %119, i64 1
  %152 = icmp eq %"struct.WTF::KeyValuePair.488"* %151, %91
  br i1 %152, label %111, label %153

153:                                              ; preds = %150, %157
  %154 = phi %"struct.WTF::KeyValuePair.488"* [ %158, %157 ], [ %151, %150 ]
  %155 = bitcast %"struct.WTF::KeyValuePair.488"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  switch i64 %156, label %160 [
    i64 -1, label %157
    i64 0, label %157
  ]

157:                                              ; preds = %153, %153
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %154, i64 1
  %159 = icmp eq %"struct.WTF::KeyValuePair.488"* %158, %91
  br i1 %159, label %111, label %153

160:                                              ; preds = %153
  %161 = icmp eq %"struct.WTF::KeyValuePair.488"* %154, %91
  br i1 %161, label %111, label %118

162:                                              ; preds = %257
  %163 = icmp eq i32 %260, 0
  br i1 %163, label %174, label %164

164:                                              ; preds = %162
  %165 = zext i32 %260 to i64
  %166 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm(i64 %165) #12
  %167 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %166, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8AudioBusEEEEPKcv, i64 0, i64 0)) #12
  %168 = ptrtoint i8* %167 to i64
  %169 = bitcast %"class.WTF::Vector.479"* %33 to i64*
  store atomic i64 %168, i64* %169 monotonic, align 8
  %170 = lshr i64 %166, 3
  %171 = trunc i64 %170 to i32
  %172 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store i32 %171, i32* %172, align 8
  %173 = load i32, i32* %112, align 4
  br label %174

174:                                              ; preds = %162, %164
  %175 = phi i32 [ 0, %162 ], [ %173, %164 ]
  %176 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = icmp ult i32 %177, %175
  br i1 %178, label %189, label %179

179:                                              ; preds = %115, %174
  %180 = phi i32 [ %117, %115 ], [ %177, %174 ]
  %181 = phi i32* [ %116, %115 ], [ %176, %174 ]
  %182 = phi i32 [ 0, %115 ], [ %175, %174 ]
  %183 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %33, i64 0, i32 0, i32 0, i32 0
  %184 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %183, align 8
  %185 = zext i32 %182 to i64
  %186 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %184, i64 %185
  %187 = zext i32 %180 to i64
  %188 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %184, i64 %187
  call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* %186, %class.scoped_refptr.337* %188) #12
  br label %244

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = icmp ult i32 %191, %175
  br i1 %192, label %193, label %232

193:                                              ; preds = %189
  %194 = lshr i32 %191, 2
  %195 = add nuw i32 %191, 1
  %196 = add i32 %195, %194
  %197 = icmp ugt i32 %196, 4
  %198 = select i1 %197, i32 %196, i32 4
  %199 = icmp ugt i32 %198, %175
  %200 = select i1 %199, i32 %198, i32 %175
  %201 = icmp ult i32 %191, %200
  br i1 %201, label %202, label %232, !prof !3

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %33, i64 0, i32 0, i32 0, i32 0
  %204 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %203, align 8
  %205 = icmp eq %class.scoped_refptr.337* %204, null
  %206 = zext i32 %200 to i64
  %207 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm(i64 %206) #12
  %208 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %207, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8AudioBusEEEEPKcv, i64 0, i64 0)) #12
  br i1 %205, label %209, label %214

209:                                              ; preds = %202
  %210 = ptrtoint i8* %208 to i64
  %211 = bitcast %"class.WTF::Vector.479"* %33 to i64*
  store atomic i64 %210, i64* %211 monotonic, align 8
  %212 = lshr i64 %207, 3
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %190, align 8
  br label %232

214:                                              ; preds = %202
  %215 = lshr i64 %207, 3
  %216 = ptrtoint i8* %208 to i64
  %217 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %203, align 8
  %218 = icmp ne i8* %208, null
  %219 = icmp ne %class.scoped_refptr.337* %217, null
  %220 = and i1 %218, %219
  %221 = bitcast %class.scoped_refptr.337* %217 to i8*
  br i1 %220, label %222, label %228, !prof !3

222:                                              ; preds = %214
  %223 = load i32, i32* %176, align 4
  %224 = zext i32 %223 to i64
  %225 = shl nuw nsw i64 %224, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %208, i8* nonnull align 8 %221, i64 %225, i1 false) #12
  %226 = bitcast %"class.WTF::Vector.479"* %33 to i8**
  %227 = load i8*, i8** %226, align 8
  br label %228

228:                                              ; preds = %222, %214
  %229 = phi i8* [ %227, %222 ], [ %221, %214 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %229) #12
  %230 = bitcast %"class.WTF::Vector.479"* %33 to i64*
  store atomic i64 %216, i64* %230 monotonic, align 8
  %231 = trunc i64 %215 to i32
  store i32 %231, i32* %190, align 8
  br label %232

232:                                              ; preds = %228, %209, %193, %189
  %233 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %33, i64 0, i32 0, i32 0, i32 0
  %234 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %233, align 8
  %235 = load i32, i32* %176, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %234, i64 %236
  %238 = zext i32 %175 to i64
  %239 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %234, i64 %238
  %240 = bitcast %class.scoped_refptr.337* %237 to i8*
  %241 = ptrtoint %class.scoped_refptr.337* %239 to i64
  %242 = ptrtoint %class.scoped_refptr.337* %237 to i64
  %243 = sub i64 %241, %242
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 %243, i1 false) #12
  br label %244

244:                                              ; preds = %179, %232
  %245 = phi i32* [ %181, %179 ], [ %176, %232 ]
  %246 = phi i32 [ %182, %179 ], [ %175, %232 ]
  store i32 %246, i32* %245, align 4
  %247 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %5, i64 0, i32 3
  %248 = load i8, i8* %247, align 2, !range !4
  store i8 %248, i8* %82, align 8
  %249 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %5, i64 0, i32 6
  %250 = load i32, i32* %249, align 8
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  br label %279

255:                                              ; preds = %244
  %256 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %5, i64 0, i32 7
  br label %350

257:                                              ; preds = %111, %257
  %258 = phi i32 [ %259, %257 ], [ 0, %111 ]
  call void @_ZN5blink12AudioHandler8AddInputEv(%"class.blink::AudioHandler"* %8) #12
  %259 = add nuw i32 %258, 1
  %260 = load i32, i32* %112, align 4
  %261 = icmp ult i32 %259, %260
  br i1 %261, label %257, label %162

262:                                              ; preds = %357
  %263 = icmp eq i32 %360, 0
  br i1 %263, label %274, label %264

264:                                              ; preds = %262
  %265 = zext i32 %360 to i64
  %266 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm(i64 %265) #12
  %267 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %266, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8AudioBusEEEEPKcv, i64 0, i64 0)) #12
  %268 = ptrtoint i8* %267 to i64
  %269 = bitcast %"class.WTF::Vector.479"* %34 to i64*
  store atomic i64 %268, i64* %269 monotonic, align 8
  %270 = lshr i64 %266, 3
  %271 = trunc i64 %270 to i32
  %272 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i32 %271, i32* %272, align 8
  %273 = load i32, i32* %249, align 8
  br label %274

274:                                              ; preds = %262, %264
  %275 = phi i32 [ 0, %262 ], [ %273, %264 ]
  %276 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = icmp ult i32 %277, %275
  br i1 %278, label %289, label %279

279:                                              ; preds = %252, %274
  %280 = phi i32 [ %254, %252 ], [ %277, %274 ]
  %281 = phi i32* [ %253, %252 ], [ %276, %274 ]
  %282 = phi i32 [ 0, %252 ], [ %275, %274 ]
  %283 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %34, i64 0, i32 0, i32 0, i32 0
  %284 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %283, align 8
  %285 = zext i32 %282 to i64
  %286 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %284, i64 %285
  %287 = zext i32 %280 to i64
  %288 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %284, i64 %287
  call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* %286, %class.scoped_refptr.337* %288) #12
  br label %344

289:                                              ; preds = %274
  %290 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = icmp ult i32 %291, %275
  br i1 %292, label %293, label %332

293:                                              ; preds = %289
  %294 = lshr i32 %291, 2
  %295 = add nuw i32 %291, 1
  %296 = add i32 %295, %294
  %297 = icmp ugt i32 %296, 4
  %298 = select i1 %297, i32 %296, i32 4
  %299 = icmp ugt i32 %298, %275
  %300 = select i1 %299, i32 %298, i32 %275
  %301 = icmp ult i32 %291, %300
  br i1 %301, label %302, label %332, !prof !3

302:                                              ; preds = %293
  %303 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %34, i64 0, i32 0, i32 0, i32 0
  %304 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %303, align 8
  %305 = icmp eq %class.scoped_refptr.337* %304, null
  %306 = zext i32 %300 to i64
  %307 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm(i64 %306) #12
  %308 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %307, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink8AudioBusEEEEPKcv, i64 0, i64 0)) #12
  br i1 %305, label %309, label %314

309:                                              ; preds = %302
  %310 = ptrtoint i8* %308 to i64
  %311 = bitcast %"class.WTF::Vector.479"* %34 to i64*
  store atomic i64 %310, i64* %311 monotonic, align 8
  %312 = lshr i64 %307, 3
  %313 = trunc i64 %312 to i32
  store i32 %313, i32* %290, align 8
  br label %332

314:                                              ; preds = %302
  %315 = lshr i64 %307, 3
  %316 = ptrtoint i8* %308 to i64
  %317 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %303, align 8
  %318 = icmp ne i8* %308, null
  %319 = icmp ne %class.scoped_refptr.337* %317, null
  %320 = and i1 %318, %319
  %321 = bitcast %class.scoped_refptr.337* %317 to i8*
  br i1 %320, label %322, label %328, !prof !3

322:                                              ; preds = %314
  %323 = load i32, i32* %276, align 4
  %324 = zext i32 %323 to i64
  %325 = shl nuw nsw i64 %324, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* nonnull align 8 %321, i64 %325, i1 false) #12
  %326 = bitcast %"class.WTF::Vector.479"* %34 to i8**
  %327 = load i8*, i8** %326, align 8
  br label %328

328:                                              ; preds = %322, %314
  %329 = phi i8* [ %327, %322 ], [ %321, %314 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %329) #12
  %330 = bitcast %"class.WTF::Vector.479"* %34 to i64*
  store atomic i64 %316, i64* %330 monotonic, align 8
  %331 = trunc i64 %315 to i32
  store i32 %331, i32* %290, align 8
  br label %332

332:                                              ; preds = %328, %309, %293, %289
  %333 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %34, i64 0, i32 0, i32 0, i32 0
  %334 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %333, align 8
  %335 = load i32, i32* %276, align 4
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %334, i64 %336
  %338 = zext i32 %275 to i64
  %339 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %334, i64 %338
  %340 = bitcast %class.scoped_refptr.337* %337 to i8*
  %341 = ptrtoint %class.scoped_refptr.337* %339 to i64
  %342 = ptrtoint %class.scoped_refptr.337* %337 to i64
  %343 = sub i64 %341, %342
  call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 %343, i1 false) #12
  br label %344

344:                                              ; preds = %279, %332
  %345 = phi i32* [ %281, %279 ], [ %276, %332 ]
  %346 = phi i32 [ %282, %279 ], [ %275, %332 ]
  store i32 %346, i32* %345, align 4
  %347 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %8) #12
  %348 = call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %347) #12
  %349 = icmp eq %"class.blink::ExecutionContext"* %348, null
  br i1 %349, label %385, label %364

350:                                              ; preds = %362, %255
  %351 = phi i8 [ %248, %255 ], [ %363, %362 ]
  %352 = phi i32 [ 0, %255 ], [ %359, %362 ]
  %353 = icmp eq i8 %351, 0
  br i1 %353, label %357, label %354

354:                                              ; preds = %350
  %355 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.683"* %256, i32 %352) #12
  %356 = load i32, i32* %355, align 4
  br label %357

357:                                              ; preds = %350, %354
  %358 = phi i32 [ %356, %354 ], [ 1, %350 ]
  call void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"* %8, i32 %358) #12
  %359 = add nuw i32 %352, 1
  %360 = load i32, i32* %249, align 8
  %361 = icmp ult i32 %359, %360
  br i1 %361, label %362, label %262

362:                                              ; preds = %357
  %363 = load i8, i8* %82, align 8, !range !4
  br label %350

364:                                              ; preds = %344
  %365 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %8) #12
  %366 = call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %365) #12
  %367 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %366, i64 0, i32 1
  %368 = bitcast %"class.blink::MojoBindingContext"* %367 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %369 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %368, align 8
  %370 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %369, i64 6
  %371 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %370, align 8
  %372 = call %"class.base::SingleThreadTaskRunner"* %371(%"class.blink::MojoBindingContext"* %367, i8 zeroext 22) #12
  %373 = ptrtoint %"class.base::SingleThreadTaskRunner"* %372 to i64
  %374 = bitcast %class.scoped_refptr.301* %80 to i64*
  %375 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %81, align 8
  store i64 %373, i64* %374, align 8
  %376 = icmp eq %"class.base::SingleThreadTaskRunner"* %375, null
  br i1 %376, label %385, label %377

377:                                              ; preds = %364
  %378 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %375, i64 0, i32 0, i32 0, i32 1
  %379 = getelementptr inbounds %"class.base::RefCountedThreadSafe.302", %"class.base::RefCountedThreadSafe.302"* %378, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = atomicrmw sub i32* %379, i32 1 acq_rel
  %381 = icmp eq i32 %380, 1
  br i1 %381, label %382, label %385

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.base::RefCountedThreadSafe.302", %"class.base::RefCountedThreadSafe.302"* %378, i64 -2
  %384 = bitcast %"class.base::RefCountedThreadSafe.302"* %383 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %384) #12
  br label %385

385:                                              ; preds = %382, %377, %364, %344
  call void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* %8) #12
  br i1 %12, label %399, label %386

386:                                              ; preds = %385
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %399

399:                                              ; preds = %385, %395, %398
  ret void
}

declare void @_ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioHandler"*, i32, %"class.blink::AudioNode"* dereferenceable(168), float) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink12AudioHandler8AddInputEv(%"class.blink::AudioHandler"*) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandlerD2Ev(%"class.blink::AudioWorkletHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink19AudioWorkletHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %12, align 8
  %14 = zext i32 %9 to i64
  %15 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %13, i64 %14
  tail call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* %13, %class.scoped_refptr.337* %15) #12
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %11, %7
  %17 = bitcast %"class.WTF::Vector.479"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.WTF::Vector.479"* %3 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %18) #12
  br label %20

20:                                               ; preds = %1, %16
  %21 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %21, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %30, align 8
  %32 = zext i32 %27 to i64
  %33 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %31, i64 %32
  tail call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* %31, %class.scoped_refptr.337* %33) #12
  store i32 0, i32* %26, align 4
  br label %34

34:                                               ; preds = %29, %25
  %35 = bitcast %"class.WTF::Vector.479"* %21 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.WTF::Vector.479"* %21 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #12
  br label %38

38:                                               ; preds = %20, %34
  %39 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8
  %40 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %40, align 8
  %42 = icmp eq %"struct.WTF::KeyValuePair.488"* %41, null
  br i1 %42, label %95, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %91, label %47

47:                                               ; preds = %43
  %48 = zext i32 %45 to i64
  br label %49

49:                                               ; preds = %88, %47
  %50 = phi i64 [ 0, %47 ], [ %89, %88 ]
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %41, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair.488"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %88, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %41, i64 %50, i32 1, i32 0
  %57 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %56, align 8
  %58 = icmp eq %"class.blink::AudioParamHandler"* %57, null
  br i1 %58, label %71, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %60, i64 -15
  %66 = bitcast %"class.base::RefCountedThreadSafe.523"* %65 to %"class.blink::AudioParamHandler"*
  %67 = bitcast %"class.base::RefCountedThreadSafe.523"* %65 to void (%"class.blink::AudioParamHandler"*)***
  %68 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %68, i64 1
  %70 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %69, align 8
  tail call void %70(%"class.blink::AudioParamHandler"* nonnull %66) #12
  br label %71

71:                                               ; preds = %64, %59, %55
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %51, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %87, %84, %71, %49
  %89 = add nuw nsw i64 %50, 1
  %90 = icmp eq i64 %89, %48
  br i1 %90, label %91, label %49

91:                                               ; preds = %88, %43
  %92 = bitcast %"struct.WTF::KeyValuePair.488"* %41 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #12
  %93 = bitcast %"class.WTF::HashMap.484"* %39 to i64*
  store atomic i64 0, i64* %93 monotonic, align 8
  store i32 0, i32* %44, align 8
  %94 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0, i32 2
  store i32 0, i32* %94, align 4
  br label %95

95:                                               ; preds = %38, %91
  %96 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9
  %97 = getelementptr inbounds %"class.WTF::HashMap.490", %"class.WTF::HashMap.490"* %96, i64 0, i32 0, i32 0
  %98 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %97, align 8
  %99 = icmp eq %"struct.WTF::KeyValuePair.494"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.494"* nonnull %98, i32 %102) #12
  %103 = bitcast %"class.WTF::HashMap.490"* %96 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  store i32 0, i32* %101, align 8
  %104 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9, i32 0, i32 2
  store i32 0, i32* %104, align 4
  br label %105

105:                                              ; preds = %95, %100
  %106 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"* %106) #12
  %107 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 10, i32 0
  %108 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %107, align 8
  %109 = icmp eq %"class.base::SingleThreadTaskRunner"* %108, null
  br i1 %109, label %118, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %108, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe.302", %"class.base::RefCountedThreadSafe.302"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw sub i32* %112, i32 1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.base::RefCountedThreadSafe.302", %"class.base::RefCountedThreadSafe.302"* %111, i64 -2
  %117 = bitcast %"class.base::RefCountedThreadSafe.302"* %116 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %117) #12
  br label %118

118:                                              ; preds = %105, %110, %115
  %119 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %97, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.494"* %119, null
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.494"* nonnull %119, i32 %123) #12
  store %"struct.WTF::KeyValuePair.494"* null, %"struct.WTF::KeyValuePair.494"** %97, align 8
  br label %124

124:                                              ; preds = %118, %121
  %125 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %40, align 8
  %126 = icmp eq %"struct.WTF::KeyValuePair.488"* %125, null
  br i1 %126, label %177, label %127, !prof !3

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %175, label %131

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  br label %133

133:                                              ; preds = %172, %131
  %134 = phi i64 [ 0, %131 ], [ %173, %172 ]
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %125, i64 %134
  %136 = bitcast %"struct.WTF::KeyValuePair.488"* %135 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = icmp eq i8* %137, inttoptr (i64 -1 to i8*)
  br i1 %138, label %172, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %125, i64 %134, i32 1, i32 0
  %141 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %140, align 8
  %142 = icmp eq %"class.blink::AudioParamHandler"* %141, null
  br i1 %142, label %155, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %141, i64 0, i32 1, i32 0
  %145 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw sub i32* %145, i32 1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %155

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %144, i64 -15
  %150 = bitcast %"class.base::RefCountedThreadSafe.523"* %149 to %"class.blink::AudioParamHandler"*
  %151 = bitcast %"class.base::RefCountedThreadSafe.523"* %149 to void (%"class.blink::AudioParamHandler"*)***
  %152 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %152, i64 1
  %154 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %153, align 8
  tail call void %154(%"class.blink::AudioParamHandler"* nonnull %150) #12
  br label %155

155:                                              ; preds = %148, %143, %139
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %135, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #12
  br label %172

172:                                              ; preds = %171, %168, %155, %133
  %173 = add nuw nsw i64 %134, 1
  %174 = icmp eq i64 %173, %132
  br i1 %174, label %175, label %133

175:                                              ; preds = %172, %127
  %176 = bitcast %"struct.WTF::KeyValuePair.488"* %125 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %176) #12
  store %"struct.WTF::KeyValuePair.488"* null, %"struct.WTF::KeyValuePair.488"** %40, align 8
  br label %177

177:                                              ; preds = %124, %175
  %178 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %21, i64 0, i32 0, i32 0, i32 0
  %179 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %178, align 8
  %180 = icmp eq %class.scoped_refptr.337* %179, null
  br i1 %180, label %193, label %181, !prof !3

181:                                              ; preds = %177
  %182 = bitcast %class.scoped_refptr.337* %179 to i8*
  %183 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %191, label %186, !prof !2

186:                                              ; preds = %181
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %179, i64 %187
  tail call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* nonnull %179, %class.scoped_refptr.337* %188) #12
  store i32 0, i32* %183, align 4
  %189 = bitcast %"class.WTF::Vector.479"* %21 to i8**
  %190 = load i8*, i8** %189, align 8
  br label %191

191:                                              ; preds = %186, %181
  %192 = phi i8* [ %190, %186 ], [ %182, %181 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %192) #12
  store %class.scoped_refptr.337* null, %class.scoped_refptr.337** %178, align 8
  br label %193

193:                                              ; preds = %177, %191
  %194 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %3, i64 0, i32 0, i32 0, i32 0
  %195 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %194, align 8
  %196 = icmp eq %class.scoped_refptr.337* %195, null
  br i1 %196, label %209, label %197, !prof !3

197:                                              ; preds = %193
  %198 = bitcast %class.scoped_refptr.337* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %207, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %195, i64 %203
  tail call void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337* nonnull %195, %class.scoped_refptr.337* %204) #12
  store i32 0, i32* %199, align 4
  %205 = bitcast %"class.WTF::Vector.479"* %3 to i8**
  %206 = load i8*, i8** %205, align 8
  br label %207

207:                                              ; preds = %202, %197
  %208 = phi i8* [ %206, %202 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %208) #12
  store %class.scoped_refptr.337* null, %class.scoped_refptr.337** %194, align 8
  br label %209

209:                                              ; preds = %193, %207
  %210 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5, i32 0, i32 1
  %211 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %210 to i64*
  %212 = load atomic i64, i64* %211 acquire, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %228, label %214

214:                                              ; preds = %209
  %215 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %216 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %215, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %216) #12
  %217 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %218 = load atomic i64, i64* %211 monotonic, align 8
  %219 = inttoptr i64 %218 to %"class.blink::PersistentNode"*
  %220 = icmp eq i64 %218, 0
  br i1 %220, label %227, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %217, i64 0, i32 0, i32 0
  %223 = bitcast %"class.blink::CrossThreadPersistentRegion"* %217 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = inttoptr i64 %218 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %219, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %226, align 8
  store %"class.blink::PersistentNode"* %219, %"class.blink::PersistentNode"** %222, align 8
  br label %227

227:                                              ; preds = %221, %214
  store atomic i64 0, i64* %211 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %216) #12
  br label %228

228:                                              ; preds = %209, %227
  %229 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #12
  br label %245

245:                                              ; preds = %228, %241, %244
  %246 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %246) #12
  tail call void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"* %106) #12
  ret void
}

declare void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandlerD0Ev(%"class.blink::AudioWorkletHandler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19AudioWorkletHandlerD2Ev(%"class.blink::AudioWorkletHandler"* %0) #12
  %2 = bitcast %"class.blink::AudioWorkletHandler"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioWorkletHandler"* @_ZN5blink19AudioWorkletHandler6CreateERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE(%"class.blink::AudioNode"* dereferenceable(168), float, %"class.WTF::StringImpl"*, %"class.WTF::HashMap.484"* nocapture readonly, %"class.blink::AudioWorkletNodeOptions"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::HashMap.484", align 8
  %7 = tail call noalias i8* @malloc(i64 272) #12
  %8 = bitcast i8* %7 to %"class.blink::AudioWorkletHandler"*
  %9 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %5, %10, %25
  %28 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %6, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %3, i64 0, i32 0, i32 2
  %30 = bitcast %"class.WTF::HashMap.484"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 20, i1 false) #12
  %31 = load i32, i32* %29, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %69, label %33

33:                                               ; preds = %27
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.485"* nonnull %28, i32 %31) #12
  %34 = load i32, i32* %29, align 4
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %3, i64 0, i32 0, i32 0
  %37 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %3, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %37, i64 %40
  br i1 %35, label %69, label %42

42:                                               ; preds = %33
  %43 = icmp eq i32 %39, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %42, %48
  %45 = phi %"struct.WTF::KeyValuePair.488"* [ %49, %48 ], [ %37, %42 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.488"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.488"* %49, %41
  br i1 %50, label %69, label %44

51:                                               ; preds = %44, %42
  %52 = phi %"struct.WTF::KeyValuePair.488"* [ %37, %42 ], [ %45, %44 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.488"* %52, %41
  br i1 %53, label %69, label %54

54:                                               ; preds = %51, %67
  %55 = phi %"struct.WTF::KeyValuePair.488"* [ %61, %67 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %55, i64 0, i32 0
  %57 = call { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS1_RKS7_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"* nonnull %28, %"class.WTF::String"* dereferenceable(8) %56, %"struct.WTF::KeyValuePair.488"* dereferenceable(16) %55) #12
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %55, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.488"* %58, %41
  br i1 %59, label %69, label %60

60:                                               ; preds = %54, %64
  %61 = phi %"struct.WTF::KeyValuePair.488"* [ %65, %64 ], [ %58, %54 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.488"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  switch i64 %63, label %67 [
    i64 -1, label %64
    i64 0, label %64
  ]

64:                                               ; preds = %60, %60
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %61, i64 1
  %66 = icmp eq %"struct.WTF::KeyValuePair.488"* %65, %41
  br i1 %66, label %69, label %60

67:                                               ; preds = %60
  %68 = icmp eq %"struct.WTF::KeyValuePair.488"* %61, %41
  br i1 %68, label %69, label %54

69:                                               ; preds = %48, %54, %67, %64, %27, %33, %51
  call void @_ZN5blink19AudioWorkletHandlerC2ERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE(%"class.blink::AudioWorkletHandler"* %8, %"class.blink::AudioNode"* dereferenceable(168) %0, float %1, %"class.WTF::StringImpl"* %2, %"class.WTF::HashMap.484"* nonnull %6, %"class.blink::AudioWorkletNodeOptions"* %4)
  %70 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %6, i64 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %70, align 8
  %72 = icmp eq %"struct.WTF::KeyValuePair.488"* %71, null
  br i1 %72, label %123, label %73, !prof !3

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %6, i64 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %121, label %77

77:                                               ; preds = %73
  %78 = zext i32 %75 to i64
  br label %79

79:                                               ; preds = %118, %77
  %80 = phi i64 [ 0, %77 ], [ %119, %118 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %71, i64 %80
  %82 = bitcast %"struct.WTF::KeyValuePair.488"* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, inttoptr (i64 -1 to i8*)
  br i1 %84, label %118, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %71, i64 %80, i32 1, i32 0
  %87 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %86, align 8
  %88 = icmp eq %"class.blink::AudioParamHandler"* %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %87, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %101

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %90, i64 -15
  %96 = bitcast %"class.base::RefCountedThreadSafe.523"* %95 to %"class.blink::AudioParamHandler"*
  %97 = bitcast %"class.base::RefCountedThreadSafe.523"* %95 to void (%"class.blink::AudioParamHandler"*)***
  %98 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %98, i64 1
  %100 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %99, align 8
  call void %100(%"class.blink::AudioParamHandler"* nonnull %96) #12
  br label %101

101:                                              ; preds = %94, %89, %85
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %81, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %101, %79
  %119 = add nuw nsw i64 %80, 1
  %120 = icmp eq i64 %119, %78
  br i1 %120, label %121, label %79

121:                                              ; preds = %118, %73
  %122 = bitcast %"struct.WTF::KeyValuePair.488"* %71 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %122) #12
  store %"struct.WTF::KeyValuePair.488"* null, %"struct.WTF::KeyValuePair.488"** %70, align 8
  br label %123

123:                                              ; preds = %69, %121
  br i1 %9, label %137, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %137

137:                                              ; preds = %123, %133, %136
  ret %"class.blink::AudioWorkletHandler"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler7ProcessEj(%"class.blink::AudioWorkletHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !3

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %18 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %18, align 8
  %20 = icmp eq %"class.blink::AudioWorkletProcessor"* %19, null
  br i1 %20, label %337, label %21

21:                                               ; preds = %14
  %22 = call zeroext i1 @_ZNK5blink21AudioWorkletProcessor16hasErrorOccurredEv(%"class.blink::AudioWorkletProcessor"* nonnull %19) #12
  br i1 %22, label %337, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  %25 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6
  br label %37

30:                                               ; preds = %91, %23
  %31 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %95, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  %36 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7
  br label %135

37:                                               ; preds = %28, %91
  %38 = phi i32 [ 0, %28 ], [ %92, %91 ]
  %39 = call dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"* %24, i32 %38) #12
  %40 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %39, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = call dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"* %24, i32 %38) #12
  %45 = call %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"* %44) #12
  br label %46

46:                                               ; preds = %37, %43
  %47 = phi %"class.blink::AudioBus"* [ %45, %43 ], [ null, %37 ]
  %48 = call dereferenceable(8) %class.scoped_refptr.337* @_ZN3WTF6VectorI13scoped_refptrIN5blink8AudioBusEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.479"* %29, i32 %38) #12
  %49 = ptrtoint %"class.blink::AudioBus"* %47 to i64
  %50 = bitcast %class.scoped_refptr.337* %48 to i64*
  %51 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %48, i64 0, i32 0
  %52 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.blink::AudioBus"* %52, null
  br i1 %53, label %91, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %52, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %91

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %55, i64 2
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %55, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = bitcast %"class.base::RefCountedThreadSafe.339"* %60 to %"class.blink::AudioChannel"**
  br i1 %63, label %82, label %65, !prof !2

65:                                               ; preds = %59
  %66 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %64, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %66, i64 %67
  br label %69

69:                                               ; preds = %78, %65
  %70 = phi %"class.blink::AudioChannel"* [ %79, %78 ], [ %66, %65 ]
  %71 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %70, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %71, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %71, align 8
  %73 = icmp eq %"class.blink::AudioArray"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::AudioArray"* %72 to i8**
  %76 = load i8*, i8** %75, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %76) #12
  %77 = bitcast %"class.blink::AudioArray"* %72 to i8*
  call void @free(i8* %77) #12
  br label %78

78:                                               ; preds = %74, %69
  %79 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %70, i64 1
  %80 = icmp eq %"class.blink::AudioChannel"* %79, %68
  br i1 %80, label %81, label %69

81:                                               ; preds = %78
  store i32 0, i32* %61, align 4
  br label %82

82:                                               ; preds = %81, %59
  %83 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %64, align 8
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %55, i64 6
  %85 = bitcast %"class.base::RefCountedThreadSafe.339"* %84 to %"class.blink::AudioChannel"*
  %86 = icmp eq %"class.blink::AudioChannel"* %83, %85
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %82
  %88 = bitcast %"class.base::RefCountedThreadSafe.339"* %60 to %"class.WTF::VectorBuffer.341"*
  call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.341"* %88, %"class.blink::AudioChannel"* %83) #12
  br label %89

89:                                               ; preds = %87, %82
  %90 = bitcast %"class.blink::AudioBus"* %52 to i8*
  call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %46, %54, %89
  %92 = add nuw i32 %38, 1
  %93 = load i32, i32* %25, align 4
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %37, label %30

95:                                               ; preds = %190, %30
  %96 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9
  %97 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::HashMap.490", %"class.WTF::HashMap.490"* %96, i64 0, i32 0, i32 0
  %101 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 9, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %101, i64 %104
  br i1 %99, label %194, label %106

106:                                              ; preds = %95
  %107 = icmp eq i32 %103, 0
  br i1 %107, label %115, label %108

108:                                              ; preds = %106, %112
  %109 = phi %"struct.WTF::KeyValuePair.494"* [ %113, %112 ], [ %101, %106 ]
  %110 = bitcast %"struct.WTF::KeyValuePair.494"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %109, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair.494"* %113, %105
  br i1 %114, label %194, label %108

115:                                              ; preds = %108, %106
  %116 = phi %"struct.WTF::KeyValuePair.494"* [ %101, %106 ], [ %109, %108 ]
  %117 = icmp eq %"struct.WTF::KeyValuePair.494"* %116, %105
  br i1 %117, label %194, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 8, i32 0
  %120 = getelementptr inbounds %"class.WTF::HashMap.490", %"class.WTF::HashMap.490"* %96, i64 0, i32 0
  %121 = icmp eq i32 %1, 0
  %122 = zext i32 %1 to i64
  %123 = and i64 %122, 4294967288
  %124 = add nsw i64 %123, -8
  %125 = lshr exact i64 %124, 3
  %126 = add nuw nsw i64 %125, 1
  %127 = icmp ult i32 %1, 8
  %128 = and i64 %122, 4294967288
  %129 = sub nsw i64 %122, %128
  %130 = and i64 %126, 7
  %131 = icmp ult i64 %124, 56
  %132 = sub nsw i64 %126, %130
  %133 = icmp eq i64 %130, 0
  %134 = icmp eq i64 %128, %122
  br label %199

135:                                              ; preds = %34, %190
  %136 = phi i32 [ 0, %34 ], [ %191, %190 ]
  %137 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %24, i32 %136) #12
  %138 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %137) #12
  %139 = icmp eq %"class.blink::AudioBus"* %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %145 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %146

146:                                              ; preds = %135, %140, %144
  %147 = call dereferenceable(8) %class.scoped_refptr.337* @_ZN3WTF6VectorI13scoped_refptrIN5blink8AudioBusEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.479"* %36, i32 %136) #12
  %148 = ptrtoint %"class.blink::AudioBus"* %138 to i64
  %149 = bitcast %class.scoped_refptr.337* %147 to i64*
  %150 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %147, i64 0, i32 0
  %151 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %150, align 8
  store i64 %148, i64* %149, align 8
  %152 = icmp eq %"class.blink::AudioBus"* %151, null
  br i1 %152, label %190, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %151, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw sub i32* %155, i32 1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %190

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %154, i64 2
  %160 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %154, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  %163 = bitcast %"class.base::RefCountedThreadSafe.339"* %159 to %"class.blink::AudioChannel"**
  br i1 %162, label %181, label %164, !prof !2

164:                                              ; preds = %158
  %165 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %163, align 8
  %166 = zext i32 %161 to i64
  %167 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %165, i64 %166
  br label %168

168:                                              ; preds = %177, %164
  %169 = phi %"class.blink::AudioChannel"* [ %178, %177 ], [ %165, %164 ]
  %170 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %169, i64 0, i32 2, i32 0, i32 0, i32 0
  %171 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %170, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %170, align 8
  %172 = icmp eq %"class.blink::AudioArray"* %171, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = bitcast %"class.blink::AudioArray"* %171 to i8**
  %175 = load i8*, i8** %174, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %175) #12
  %176 = bitcast %"class.blink::AudioArray"* %171 to i8*
  call void @free(i8* %176) #12
  br label %177

177:                                              ; preds = %173, %168
  %178 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %169, i64 1
  %179 = icmp eq %"class.blink::AudioChannel"* %178, %167
  br i1 %179, label %180, label %168

180:                                              ; preds = %177
  store i32 0, i32* %160, align 4
  br label %181

181:                                              ; preds = %180, %158
  %182 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %163, align 8
  %183 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %154, i64 6
  %184 = bitcast %"class.base::RefCountedThreadSafe.339"* %183 to %"class.blink::AudioChannel"*
  %185 = icmp eq %"class.blink::AudioChannel"* %182, %184
  br i1 %185, label %188, label %186, !prof !3

186:                                              ; preds = %181
  %187 = bitcast %"class.base::RefCountedThreadSafe.339"* %159 to %"class.WTF::VectorBuffer.341"*
  call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.341"* %187, %"class.blink::AudioChannel"* %182) #12
  br label %188

188:                                              ; preds = %186, %181
  %189 = bitcast %"class.blink::AudioBus"* %151 to i8*
  call void @free(i8* %189) #12
  br label %190

190:                                              ; preds = %146, %153, %188
  %191 = add nuw i32 %136, 1
  %192 = load i32, i32* %31, align 4
  %193 = icmp ult i32 %191, %192
  br i1 %193, label %135, label %95

194:                                              ; preds = %112, %321, %331, %328, %95, %115
  %195 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %18, align 8
  %196 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 6
  %197 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 7
  %198 = call zeroext i1 @_ZN5blink21AudioWorkletProcessor7ProcessERKN3WTF6VectorI13scoped_refptrINS_8AudioBusEELj0ENS1_18PartitionAllocatorEEERS7_RKNS1_7HashMapINS1_6StringENSt3__110unique_ptrINS_10AudioArrayIfEENSD_14default_deleteISG_EEEENS1_10StringHashENS1_10HashTraitsISC_EENSL_ISJ_EES6_EE(%"class.blink::AudioWorkletProcessor"* %195, %"class.WTF::Vector.479"* dereferenceable(16) %196, %"class.WTF::Vector.479"* dereferenceable(16) %197, %"class.WTF::HashMap.490"* dereferenceable(24) %96) #12
  br i1 %198, label %333, label %336

199:                                              ; preds = %118, %331
  %200 = phi %"struct.WTF::KeyValuePair.494"* [ %116, %118 ], [ %325, %331 ]
  %201 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %200, i64 0, i32 0
  %202 = call %"struct.WTF::KeyValuePair.488"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.485"* %119, %"class.WTF::String"* dereferenceable(8) %201) #12
  %203 = icmp eq %"struct.WTF::KeyValuePair.488"* %202, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %202, i64 0, i32 1, i32 0
  %206 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %205, align 8
  br label %207

207:                                              ; preds = %199, %204
  %208 = phi %"class.blink::AudioParamHandler"* [ %206, %204 ], [ null, %199 ]
  %209 = call %"struct.WTF::KeyValuePair.494"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.491"* %120, %"class.WTF::String"* dereferenceable(8) %201) #12
  %210 = icmp eq %"struct.WTF::KeyValuePair.494"* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %209, i64 0, i32 1, i32 0, i32 0, i32 0
  %213 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %212, align 8
  br label %214

214:                                              ; preds = %207, %211
  %215 = phi %"class.blink::AudioArray"* [ %213, %211 ], [ null, %207 ]
  %216 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %208, i64 0, i32 10
  %217 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %208, i64 0, i32 11, i32 0
  %218 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i64, i64* %219 acquire, align 8
  %221 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %217, align 8
  %222 = bitcast %"class.blink::AudioDestinationHandler"* %221 to double (%"class.blink::AudioDestinationHandler"*)***
  %223 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %222, align 8
  %224 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %223, i64 25
  %225 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %224, align 8
  %226 = call double %225(%"class.blink::AudioDestinationHandler"* %221) #12
  %227 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %208, i64 0, i32 0, i32 1, i32 0
  %228 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %228, i64 0, i32 7
  %230 = load i32, i32* %229, align 4
  %231 = call zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"* %216, i64 %220, double %226, i32 %230) #12
  br i1 %231, label %236, label %232

232:                                              ; preds = %214
  %233 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %208, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %243, label %236

236:                                              ; preds = %232, %214
  %237 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %208, i64 0, i32 6
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %215, i64 0, i32 1
  %242 = load float*, float** %241, align 8
  call void @_ZN5blink17AudioParamHandler29CalculateSampleAccurateValuesEPfj(%"class.blink::AudioParamHandler"* %208, float* %242, i32 %1) #12
  br label %321

243:                                              ; preds = %232, %236
  %244 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %215, i64 0, i32 1
  %245 = load float*, float** %244, align 8
  %246 = call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %208) #12
  br i1 %121, label %321, label %247

247:                                              ; preds = %243
  br i1 %127, label %312, label %248

248:                                              ; preds = %247
  %249 = getelementptr float, float* %245, i64 %128
  %250 = insertelement <4 x float> undef, float %246, i32 0
  %251 = shufflevector <4 x float> %250, <4 x float> undef, <4 x i32> zeroinitializer
  %252 = insertelement <4 x float> undef, float %246, i32 0
  %253 = shufflevector <4 x float> %252, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %131, label %299, label %254

254:                                              ; preds = %248, %254
  %255 = phi i64 [ %296, %254 ], [ 0, %248 ]
  %256 = phi i64 [ %297, %254 ], [ %132, %248 ]
  %257 = getelementptr float, float* %245, i64 %255
  %258 = bitcast float* %257 to <4 x float>*
  store <4 x float> %251, <4 x float>* %258, align 4
  %259 = getelementptr float, float* %257, i64 4
  %260 = bitcast float* %259 to <4 x float>*
  store <4 x float> %253, <4 x float>* %260, align 4
  %261 = or i64 %255, 8
  %262 = getelementptr float, float* %245, i64 %261
  %263 = bitcast float* %262 to <4 x float>*
  store <4 x float> %251, <4 x float>* %263, align 4
  %264 = getelementptr float, float* %262, i64 4
  %265 = bitcast float* %264 to <4 x float>*
  store <4 x float> %253, <4 x float>* %265, align 4
  %266 = or i64 %255, 16
  %267 = getelementptr float, float* %245, i64 %266
  %268 = bitcast float* %267 to <4 x float>*
  store <4 x float> %251, <4 x float>* %268, align 4
  %269 = getelementptr float, float* %267, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  store <4 x float> %253, <4 x float>* %270, align 4
  %271 = or i64 %255, 24
  %272 = getelementptr float, float* %245, i64 %271
  %273 = bitcast float* %272 to <4 x float>*
  store <4 x float> %251, <4 x float>* %273, align 4
  %274 = getelementptr float, float* %272, i64 4
  %275 = bitcast float* %274 to <4 x float>*
  store <4 x float> %253, <4 x float>* %275, align 4
  %276 = or i64 %255, 32
  %277 = getelementptr float, float* %245, i64 %276
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> %251, <4 x float>* %278, align 4
  %279 = getelementptr float, float* %277, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> %253, <4 x float>* %280, align 4
  %281 = or i64 %255, 40
  %282 = getelementptr float, float* %245, i64 %281
  %283 = bitcast float* %282 to <4 x float>*
  store <4 x float> %251, <4 x float>* %283, align 4
  %284 = getelementptr float, float* %282, i64 4
  %285 = bitcast float* %284 to <4 x float>*
  store <4 x float> %253, <4 x float>* %285, align 4
  %286 = or i64 %255, 48
  %287 = getelementptr float, float* %245, i64 %286
  %288 = bitcast float* %287 to <4 x float>*
  store <4 x float> %251, <4 x float>* %288, align 4
  %289 = getelementptr float, float* %287, i64 4
  %290 = bitcast float* %289 to <4 x float>*
  store <4 x float> %253, <4 x float>* %290, align 4
  %291 = or i64 %255, 56
  %292 = getelementptr float, float* %245, i64 %291
  %293 = bitcast float* %292 to <4 x float>*
  store <4 x float> %251, <4 x float>* %293, align 4
  %294 = getelementptr float, float* %292, i64 4
  %295 = bitcast float* %294 to <4 x float>*
  store <4 x float> %253, <4 x float>* %295, align 4
  %296 = add i64 %255, 64
  %297 = add i64 %256, -8
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %254, !llvm.loop !5

299:                                              ; preds = %254, %248
  %300 = phi i64 [ 0, %248 ], [ %296, %254 ]
  br i1 %133, label %311, label %301

301:                                              ; preds = %299, %301
  %302 = phi i64 [ %308, %301 ], [ %300, %299 ]
  %303 = phi i64 [ %309, %301 ], [ %130, %299 ]
  %304 = getelementptr float, float* %245, i64 %302
  %305 = bitcast float* %304 to <4 x float>*
  store <4 x float> %251, <4 x float>* %305, align 4
  %306 = getelementptr float, float* %304, i64 4
  %307 = bitcast float* %306 to <4 x float>*
  store <4 x float> %253, <4 x float>* %307, align 4
  %308 = add i64 %302, 8
  %309 = add i64 %303, -1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %301, !llvm.loop !7

311:                                              ; preds = %301, %299
  br i1 %134, label %321, label %312

312:                                              ; preds = %311, %247
  %313 = phi float* [ %245, %247 ], [ %249, %311 ]
  %314 = phi i64 [ %122, %247 ], [ %129, %311 ]
  br label %315

315:                                              ; preds = %312, %315
  %316 = phi float* [ %318, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %319, %315 ], [ %314, %312 ]
  store float %246, float* %316, align 4
  %318 = getelementptr inbounds float, float* %316, i64 1
  %319 = add nsw i64 %317, -1
  %320 = icmp sgt i64 %319, 0
  br i1 %320, label %315, label %321, !llvm.loop !9

321:                                              ; preds = %315, %311, %243, %240
  %322 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %200, i64 1
  %323 = icmp eq %"struct.WTF::KeyValuePair.494"* %322, %105
  br i1 %323, label %194, label %324

324:                                              ; preds = %321, %328
  %325 = phi %"struct.WTF::KeyValuePair.494"* [ %329, %328 ], [ %322, %321 ]
  %326 = bitcast %"struct.WTF::KeyValuePair.494"* %325 to i64*
  %327 = load i64, i64* %326, align 8
  switch i64 %327, label %331 [
    i64 -1, label %328
    i64 0, label %328
  ]

328:                                              ; preds = %324, %324
  %329 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %325, i64 1
  %330 = icmp eq %"struct.WTF::KeyValuePair.494"* %329, %105
  br i1 %330, label %194, label %324

331:                                              ; preds = %324
  %332 = icmp eq %"struct.WTF::KeyValuePair.494"* %325, %105
  br i1 %332, label %194, label %199

333:                                              ; preds = %194
  %334 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %18, align 8
  %335 = call zeroext i1 @_ZNK5blink21AudioWorkletProcessor16hasErrorOccurredEv(%"class.blink::AudioWorkletProcessor"* %334) #12
  br i1 %335, label %336, label %350

336:                                              ; preds = %333, %194
  call void @_ZN5blink19AudioWorkletHandler29FinishProcessorOnRenderThreadEv(%"class.blink::AudioWorkletHandler"* %0)
  br label %350

337:                                              ; preds = %14, %21
  %338 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 2
  %339 = load i32, i32* %338, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %350, label %341

341:                                              ; preds = %337
  %342 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  br label %343

343:                                              ; preds = %341, %343
  %344 = phi i32 [ 0, %341 ], [ %347, %343 ]
  %345 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %342, i32 %344) #12
  %346 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %345) #12
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %346) #12
  %347 = add nuw i32 %344, 1
  %348 = load i32, i32* %338, align 4
  %349 = icmp ult i32 %347, %348
  br i1 %349, label %343, label %350

350:                                              ; preds = %343, %337, %333, %336
  %351 = icmp eq i8* %15, null
  br i1 %351, label %356, label %352

352:                                              ; preds = %350
  %353 = load i8, i8* %15, align 1
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %356, label %355

355:                                              ; preds = %352
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %16, i64 %17) #12
  br label %356

356:                                              ; preds = %350, %352, %355
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5blink21AudioWorkletProcessor16hasErrorOccurredEv(%"class.blink::AudioWorkletProcessor"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

declare void @_ZN5blink17AudioParamHandler29CalculateSampleAccurateValuesEPfj(%"class.blink::AudioParamHandler"*, float*, i32) local_unnamed_addr #1

declare float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21AudioWorkletProcessor7ProcessERKN3WTF6VectorI13scoped_refptrINS_8AudioBusEELj0ENS1_18PartitionAllocatorEEERS7_RKNS1_7HashMapINS1_6StringENSt3__110unique_ptrINS_10AudioArrayIfEENSD_14default_deleteISG_EEEENS1_10StringHashENS1_10HashTraitsISC_EENSL_ISJ_EES6_EE(%"class.blink::AudioWorkletProcessor"*, %"class.WTF::Vector.479"* dereferenceable(16), %"class.WTF::Vector.479"* dereferenceable(16), %"class.WTF::HashMap.490"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler29FinishProcessorOnRenderThreadEv(%"class.blink::AudioWorkletHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr.773", align 8
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.base::WeakPtr.773", align 8
  %11 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %11, align 8
  %13 = tail call i32 @_ZNK5blink21AudioWorkletProcessor13GetErrorStateEv(%"class.blink::AudioWorkletProcessor"* %12) #12
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %65

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 10, i32 0
  %17 = bitcast %"class.base::SingleThreadTaskRunner"** %16 to %"class.base::SequencedTaskRunner"**
  %18 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %17, align 8
  %19 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i32 215) #12
  %20 = bitcast %"class.base::WeakPtr.773"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 2
  %22 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12, !noalias !11
  %23 = getelementptr inbounds %"class.base::SupportsWeakPtr.400", %"class.base::SupportsWeakPtr.400"* %21, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %23) #12, !noalias !11
  %24 = getelementptr inbounds %"class.base::SupportsWeakPtr.400", %"class.base::SupportsWeakPtr.400"* %21, i64 -17
  %25 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %10, i64 0, i32 0
  %26 = ptrtoint %"class.base::SupportsWeakPtr.400"* %24 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %26) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12, !noalias !11
  %27 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.base::WeakPtr.773"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12, !noalias !14
  %29 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %30) #12, !noalias !14
  %31 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %6, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %10, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !17
  store i64 %33, i64* %31, align 8, !alias.scope !20, !noalias !14
  %34 = call i8* @_Znwm(i64 72) #14, !noalias !21
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19AudioWorkletHandlerEFvNS2_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #12, !noalias !21
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::AudioWorkletHandler"*, i32)* @_ZN5blink19AudioWorkletHandler20NotifyProcessorErrorENS_31AudioWorkletProcessorErrorStateE to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !21
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %39, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %29) #12, !noalias !21
  %40 = getelementptr inbounds i8, i8* %34, i64 56
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %31, align 8, !noalias !21
  store i64 %42, i64* %41, align 8, !noalias !21
  %43 = getelementptr inbounds i8, i8* %34, i64 64
  %44 = bitcast i8* %43 to i32*
  store i32 2, i32* %44, align 4, !noalias !21
  %45 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12, !noalias !14
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %47 = ptrtoint i8* %34 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8, !noalias !26
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8, !noalias !26
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #12, !noalias !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12, !noalias !14
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #12, !noalias !14
  %51 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %51) #12, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %52 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = bitcast %"class.base::SequencedTaskRunner"* %18 to %"class.base::TaskRunner"*
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %47, i64* %57, align 8, !alias.scope !29
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8, !noalias !29
  %58 = bitcast %"class.base::SequencedTaskRunner"* %18 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %58, align 8
  %60 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::TaskRunner"* %54, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %2, i64 0) #12
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #12
  %63 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %64 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  br label %65

65:                                               ; preds = %15, %1
  %66 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  %67 = call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %66) #12
  call void @_ZN5blink16BaseAudioContext34NotifySourceNodeFinishedProcessingEPNS_12AudioHandlerE(%"class.blink::BaseAudioContext"* %67, %"class.blink::AudioHandler"* %66) #12
  %68 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %69 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %68, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #12
  store %"class.blink::AudioWorkletProcessor"* null, %"class.blink::AudioWorkletProcessor"** %11, align 8
  %70 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5, i32 0, i32 1
  %71 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %70 to i64*
  %72 = load atomic i64, i64* %71 acquire, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %65
  %75 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %76 = load atomic i64, i64* %71 monotonic, align 8
  %77 = inttoptr i64 %76 to %"class.blink::PersistentNode"*
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %75, i64 0, i32 0, i32 0
  %81 = bitcast %"class.blink::CrossThreadPersistentRegion"* %75 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = inttoptr i64 %76 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %84, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %80, align 8
  br label %85

85:                                               ; preds = %79, %74
  store atomic i64 0, i64* %71 release, align 8
  br label %86

86:                                               ; preds = %65, %85
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #12
  %87 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %87, align 8
  ret void
}

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioNodeInput"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %5 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 11
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = tail call dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"* %3, i32 0) #12
  %18 = tail call i32 @_ZNK5blink14AudioNodeInput16NumberOfChannelsEv(%"class.blink::AudioNodeInput"* %17) #12
  %19 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %3, i32 0) #12
  %20 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %18, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %3, i32 0) #12
  tail call void @_ZN5blink15AudioNodeOutput19SetNumberOfChannelsEj(%"class.blink::AudioNodeOutput"* %24, i32 %18) #12
  br label %25

25:                                               ; preds = %23, %16, %12, %8, %2
  tail call void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"* %3, %"class.blink::AudioNodeInput"* %1) #12
  tail call void @_ZN5blink19AudioWorkletHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioWorkletHandler"* %0)
  ret void
}

declare i32 @_ZNK5blink14AudioNodeInput16NumberOfChannelsEv(%"class.blink::AudioNodeInput"*) local_unnamed_addr #1

declare void @_ZN5blink15AudioNodeOutput19SetNumberOfChannelsEj(%"class.blink::AudioNodeOutput"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioWorkletHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %5 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %11

8:                                                ; preds = %16
  %9 = load i32, i32* %5, align 4
  %10 = icmp ult i32 %19, %9
  br i1 %10, label %11, label %20

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %19, %8 ], [ 0, %1 ]
  %13 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %3, i32 %12) #12
  %14 = tail call i32 @_ZN5blink15AudioNodeOutput11FanOutCountEv(%"class.blink::AudioNodeOutput"* %13) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = tail call i32 @_ZN5blink15AudioNodeOutput16ParamFanOutCountEv(%"class.blink::AudioNodeOutput"* %13) #12
  %18 = icmp eq i32 %17, 0
  %19 = add nuw i32 %12, 1
  br i1 %18, label %8, label %33

20:                                               ; preds = %8, %1
  %21 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %22 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %21, i64 0, i32 12, i32 0
  %23 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %22, align 8
  %24 = icmp eq %"class.blink::AudioWorkletHandler"* %0, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %32

32:                                               ; preds = %20, %25, %29
  call void @_ZN5blink19DeferredTaskHandler20AddAutomaticPullNodeE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"* %23, %"class.blink::AudioHandler"* %3) #12
  br label %37

33:                                               ; preds = %16, %11
  %34 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %35 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %34, i64 0, i32 12, i32 0
  %36 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %35, align 8
  tail call void @_ZN5blink19DeferredTaskHandler23RemoveAutomaticPullNodeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %36, %"class.blink::AudioHandler"* %3) #12
  br label %37

37:                                               ; preds = %33, %32
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler20AddAutomaticPullNodeE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

declare void @_ZN5blink19DeferredTaskHandler23RemoveAutomaticPullNodeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink19AudioWorkletHandler8TailTimeEv(%"class.blink::AudioWorkletHandler"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 4
  %3 = load double, double* %2, align 8
  ret double %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler26SetProcessorOnRenderThreadEPNS_21AudioWorkletProcessorE(%"class.blink::AudioWorkletHandler"*, %"class.blink::AudioWorkletProcessor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr.773", align 8
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = alloca %"class.base::WeakPtr.773", align 8
  %12 = icmp eq %"class.blink::AudioWorkletProcessor"* %1, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 5, i32 0
  %15 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %16 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %15, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #12
  tail call void @_ZN5blink14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.401"* %14, %"class.blink::AudioWorkletProcessor"* nonnull %1) #12
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #12
  br label %67

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 10, i32 0
  %19 = bitcast %"class.base::SingleThreadTaskRunner"** %18 to %"class.base::SequencedTaskRunner"**
  %20 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %19, align 8
  %21 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i32 200) #12
  %22 = bitcast %"class.base::WeakPtr.773"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.blink::AudioWorkletHandler", %"class.blink::AudioWorkletHandler"* %0, i64 0, i32 2
  %24 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12, !noalias !32
  %25 = getelementptr inbounds %"class.base::SupportsWeakPtr.400", %"class.base::SupportsWeakPtr.400"* %23, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %25) #12, !noalias !32
  %26 = getelementptr inbounds %"class.base::SupportsWeakPtr.400", %"class.base::SupportsWeakPtr.400"* %23, i64 -17
  %27 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %11, i64 0, i32 0
  %28 = ptrtoint %"class.base::SupportsWeakPtr.400"* %26 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %27, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %28) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12, !noalias !32
  %29 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = bitcast %"class.base::WeakPtr.773"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12, !noalias !35
  %31 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %7, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %32) #12, !noalias !35
  %33 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %7, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %11, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !38
  store i64 %35, i64* %33, align 8, !alias.scope !41, !noalias !35
  %36 = call i8* @_Znwm(i64 72) #14, !noalias !42
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19AudioWorkletHandlerEFvNS2_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #12, !noalias !42
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::AudioWorkletHandler"*, i32)* @_ZN5blink19AudioWorkletHandler20NotifyProcessorErrorENS_31AudioWorkletProcessorErrorStateE to i64), i64 0>, <2 x i64>* %39, align 8, !noalias !42
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %41, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %31) #12, !noalias !42
  %42 = getelementptr inbounds i8, i8* %36, i64 56
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %33, align 8, !noalias !42
  store i64 %44, i64* %43, align 8, !noalias !42
  %45 = getelementptr inbounds i8, i8* %36, i64 64
  %46 = bitcast i8* %45 to i32*
  store i32 1, i32* %46, align 4, !noalias !42
  %47 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12, !noalias !35
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = ptrtoint i8* %36 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8, !noalias !47
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8, !noalias !47
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #12, !noalias !47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12, !noalias !35
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #12, !noalias !35
  %53 = getelementptr inbounds %"class.base::WeakPtr.773", %"class.base::WeakPtr.773"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %53) #12, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %54 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = bitcast %"class.base::SequencedTaskRunner"* %20 to %"class.base::TaskRunner"*
  %57 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %49, i64* %59, align 8, !alias.scope !50
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %58, align 8, !noalias !50
  %60 = bitcast %"class.base::SequencedTaskRunner"* %20 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %61 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %60, align 8
  %62 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %61, align 8
  %63 = call zeroext i1 %62(%"class.base::TaskRunner"* %56, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %3, i64 0) #12
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #12
  %65 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %66 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #12
  br label %67

67:                                               ; preds = %17, %13
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19AudioWorkletHandler20NotifyProcessorErrorENS_31AudioWorkletProcessorErrorStateE(%"class.blink::AudioWorkletHandler"*, i32) #0 align 2 {
  %3 = bitcast %"class.blink::AudioWorkletHandler"* %0 to %"class.blink::AudioHandler"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %5 = icmp eq %"class.blink::BaseAudioContext"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %3) #12
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %7) #12
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %3) #12
  %12 = icmp eq %"class.blink::AudioNode"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %3) #12
  %15 = bitcast %"class.blink::AudioNode"* %14 to %"class.blink::AudioWorkletNode"*
  tail call void @_ZN5blink16AudioWorkletNode18FireProcessorErrorENS_31AudioWorkletProcessorErrorStateE(%"class.blink::AudioWorkletNode"* %15, i32 %1)
  br label %16

16:                                               ; preds = %10, %6, %2, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare i32 @_ZNK5blink21AudioWorkletProcessor13GetErrorStateEv(%"class.blink::AudioWorkletProcessor"*) local_unnamed_addr #1

declare void @_ZN5blink16BaseAudioContext34NotifySourceNodeFinishedProcessingEPNS_12AudioHandlerE(%"class.blink::BaseAudioContext"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

declare %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16AudioWorkletNode18FireProcessorErrorENS_31AudioWorkletProcessorErrorStateE(%"class.blink::AudioWorkletNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.938", align 8
  %5 = alloca %"class.WTF::StringAppend.938", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i64 21) #12
  switch i32 %1, label %180 [
    i32 0, label %188
    i32 1, label %8
    i32 2, label %93
  ]

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::StringAppend.938"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %56, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %19
  call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4
  br label %29

29:                                               ; preds = %12, %27
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  br i1 %33, label %35, label %45

35:                                               ; preds = %29
  %36 = zext i32 %30 to i33
  %37 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #12
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  call void @llvm.trap() #12
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %43, %29
  %46 = phi i32 [ %44, %43 ], [ %30, %29 ]
  %47 = load atomic i32, i32* %13 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = add i32 %46, -1
  store i32 %51, i32* %34, align 4
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i32 [ %51, %50 ], [ %46, %45 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %56

56:                                               ; preds = %8, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0), i8** %58, align 8
  %59 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.938"* nonnull %4)
  %60 = ptrtoint %"class.WTF::StringImpl"* %59 to i64
  %61 = bitcast %"class.WTF::String"* %3 to i64*
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %60, i64* %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %56
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %178, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %178

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %178

93:                                               ; preds = %2
  %94 = bitcast %"class.WTF::StringAppend.938"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %141, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %114

104:                                              ; preds = %97
  %105 = zext i32 %103 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #12
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %104
  call void @llvm.trap() #12
  unreachable

112:                                              ; preds = %104
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %102, align 4
  br label %114

114:                                              ; preds = %97, %112
  %115 = phi i32 [ %113, %112 ], [ %103, %97 ]
  %116 = load atomic i32, i32* %98 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  br i1 %118, label %120, label %130

120:                                              ; preds = %114
  %121 = zext i32 %115 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %128, %114
  %131 = phi i32 [ %129, %128 ], [ %115, %114 ]
  %132 = load atomic i32, i32* %98 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = add i32 %131, -1
  store i32 %136, i32* %119, align 4
  br label %137

137:                                              ; preds = %135, %130
  %138 = phi i32 [ %136, %135 ], [ %131, %130 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %141

141:                                              ; preds = %93, %137, %140
  %142 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i8** %143, align 8
  %144 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.938"* nonnull %5)
  %145 = ptrtoint %"class.WTF::StringImpl"* %144 to i64
  %146 = bitcast %"class.WTF::String"* %3 to i64*
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %145, i64* %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #12
  br label %162

162:                                              ; preds = %161, %158, %141
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #12
  br label %178

178:                                              ; preds = %177, %174, %162, %92, %89, %77
  %179 = phi i8* [ %9, %77 ], [ %9, %89 ], [ %9, %92 ], [ %94, %162 ], [ %94, %174 ], [ %94, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #12
  br label %180

180:                                              ; preds = %178, %2
  %181 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  %182 = call %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* %181) #12
  %183 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %182) #12
  %184 = call %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::SourceLocation"* %183, %"class.blink::DOMWrapperWorld"* null)
  %185 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %184, i64 0, i32 0
  %187 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %185, %"class.blink::Event"* dereferenceable(104) %186) #12
  br label %188

188:                                              ; preds = %2, %180
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #12
  br label %204

204:                                              ; preds = %188, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16AudioWorkletNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPKNS_23AudioWorkletNodeOptionsENS3_6VectorINS_25CrossThreadAudioParamInfoELj0ENS3_18PartitionAllocatorEEEPNS_11MessagePortE(%"class.blink::AudioWorkletNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::AudioWorkletNodeOptions"*, %"class.WTF::Vector.786"* nocapture readonly, %"class.blink::MessagePort"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::HeapHashMap.777", align 8
  %11 = alloca %"class.WTF::HashMap.484", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::AudioParam"*, align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.WTF::StringAppend.791", align 8
  %16 = alloca %class.scoped_refptr.489, align 8
  %17 = alloca %"class.WTF::HashMap.484", align 8
  %18 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioNode"* %18, %"class.blink::BaseAudioContext"* dereferenceable(304) %1) #12
  %19 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink16AudioWorkletNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink16AudioWorkletNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink16AudioWorkletNodeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %22 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::Member.775", %"class.blink::Member.775"* %22, i64 0, i32 0, i32 0
  store %"class.blink::AudioParamMap"* null, %"class.blink::AudioParamMap"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::MessagePort"* %5, %"class.blink::MessagePort"** %24, align 8
  %25 = bitcast %"class.blink::HeapHashMap.777"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = bitcast %"class.blink::HeapHashMap.777"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 20, i1 false) #12
  %27 = bitcast %"class.WTF::HashMap.484"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %11, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %11, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %11, i64 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::HashMap.484"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 20, i1 false) #12
  %32 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %4, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %6
  %40 = bitcast %"class.WTF::String"* %12 to i8*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringView"* %7 to i8*
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  %46 = bitcast %"class.WTF::StringView"* %7 to i64*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %48 = bitcast %"class.WTF::StringView"* %8 to i8*
  %49 = bitcast %"class.WTF::StringView"* %8 to i64*
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %52 = bitcast %"class.blink::AudioParam"** %13 to i8*
  %53 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 1, i32 2
  %54 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  %55 = bitcast %"class.WTF::StringAppend.791"* %15 to i8*
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %57 = bitcast %"class.WTF::StringAppend.791"* %15 to i64*
  %58 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %15, i64 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1, i32 0, i32 0
  %61 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::HeapHashMap.777", %"class.blink::HeapHashMap.777"* %10, i64 0, i32 0, i32 0
  %63 = bitcast %class.scoped_refptr.489* %16 to i8*
  %64 = bitcast %"class.logging::CheckError"* %9 to i8*
  %65 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %16, i64 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %11, i64 0, i32 0
  %67 = bitcast %class.scoped_refptr.489* %16 to i64*
  %68 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 4
  %69 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 8, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 8, i32 0, i32 0, i32 2
  br label %261

71:                                               ; preds = %564, %6
  %72 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %73 = bitcast i8* %72 to %"class.blink::AudioParamMap"*
  call void @_ZN5blink13AudioParamMapC1ERKNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_10AudioParamEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEE(%"class.blink::AudioParamMap"* %73, %"class.blink::HeapHashMap.777"* nonnull dereferenceable(24) %10) #12
  %74 = getelementptr inbounds i8, i8* %72, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = ptrtoint i8* %72 to i64
  %79 = bitcast %"class.blink::Member.775"* %22 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %71
  %83 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #12
  br label %84

84:                                               ; preds = %71, %82
  %85 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 21, i32 0
  %86 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %85, align 8
  %87 = bitcast %"class.blink::AudioDestinationHandler"* %86 to double (%"class.blink::AudioDestinationHandler"*)***
  %88 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %87, align 8
  %89 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %88, i64 25
  %90 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %89, align 8
  %91 = call double %90(%"class.blink::AudioDestinationHandler"* %86) #12
  %92 = fptrunc double %91 to float
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #12
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !2

110:                                              ; preds = %101
  call void @llvm.trap() #12
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %84, %96, %111
  %114 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %17, i64 0, i32 0
  %115 = bitcast %"class.WTF::HashMap.484"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 20, i1 false) #12
  %116 = load i32, i32* %30, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %152, label %118

118:                                              ; preds = %113
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.485"* nonnull %114, i32 %116) #12
  %119 = load i32, i32* %30, align 4
  %120 = icmp eq i32 %119, 0
  %121 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %28, align 8
  %122 = load i32, i32* %29, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %121, i64 %123
  br i1 %120, label %152, label %125

125:                                              ; preds = %118
  %126 = icmp eq i32 %122, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %125, %131
  %128 = phi %"struct.WTF::KeyValuePair.488"* [ %132, %131 ], [ %121, %125 ]
  %129 = bitcast %"struct.WTF::KeyValuePair.488"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  switch i64 %130, label %134 [
    i64 -1, label %131
    i64 0, label %131
  ]

131:                                              ; preds = %127, %127
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %128, i64 1
  %133 = icmp eq %"struct.WTF::KeyValuePair.488"* %132, %124
  br i1 %133, label %152, label %127

134:                                              ; preds = %127, %125
  %135 = phi %"struct.WTF::KeyValuePair.488"* [ %121, %125 ], [ %128, %127 ]
  %136 = icmp eq %"struct.WTF::KeyValuePair.488"* %135, %124
  br i1 %136, label %152, label %137

137:                                              ; preds = %134, %150
  %138 = phi %"struct.WTF::KeyValuePair.488"* [ %144, %150 ], [ %135, %134 ]
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %138, i64 0, i32 0
  %140 = call { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS1_RKS7_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"* nonnull %114, %"class.WTF::String"* dereferenceable(8) %139, %"struct.WTF::KeyValuePair.488"* dereferenceable(16) %138) #12
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %138, i64 1
  %142 = icmp eq %"struct.WTF::KeyValuePair.488"* %141, %124
  br i1 %142, label %152, label %143

143:                                              ; preds = %137, %147
  %144 = phi %"struct.WTF::KeyValuePair.488"* [ %148, %147 ], [ %141, %137 ]
  %145 = bitcast %"struct.WTF::KeyValuePair.488"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %150 [
    i64 -1, label %147
    i64 0, label %147
  ]

147:                                              ; preds = %143, %143
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %144, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.488"* %148, %124
  br i1 %149, label %152, label %143

150:                                              ; preds = %143
  %151 = icmp eq %"struct.WTF::KeyValuePair.488"* %144, %124
  br i1 %151, label %152, label %137

152:                                              ; preds = %131, %150, %137, %147, %134, %118, %113
  %153 = call %"class.blink::AudioWorkletHandler"* @_ZN5blink19AudioWorkletHandler6CreateERNS_9AudioNodeEfN3WTF6StringENS3_7HashMapIS4_13scoped_refptrINS_17AudioParamHandlerEENS3_10StringHashENS3_10HashTraitsIS4_EENSA_IS8_EENS3_18PartitionAllocatorEEEPKNS_23AudioWorkletNodeOptionsE(%"class.blink::AudioNode"* dereferenceable(168) %18, float %92, %"class.WTF::StringImpl"* %94, %"class.WTF::HashMap.484"* nonnull %17, %"class.blink::AudioWorkletNodeOptions"* %3)
  %154 = bitcast %"class.blink::AudioWorkletHandler"* %153 to %"class.blink::AudioHandler"*
  call void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"* %18, %"class.blink::AudioHandler"* %154) #12
  %155 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %17, i64 0, i32 0, i32 0
  %156 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %155, align 8
  %157 = icmp eq %"struct.WTF::KeyValuePair.488"* %156, null
  br i1 %157, label %208, label %158, !prof !3

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::HashMap.484", %"class.WTF::HashMap.484"* %17, i64 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %206, label %162

162:                                              ; preds = %158
  %163 = zext i32 %160 to i64
  br label %164

164:                                              ; preds = %203, %162
  %165 = phi i64 [ 0, %162 ], [ %204, %203 ]
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %156, i64 %165
  %167 = bitcast %"struct.WTF::KeyValuePair.488"* %166 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = icmp eq i8* %168, inttoptr (i64 -1 to i8*)
  br i1 %169, label %203, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %156, i64 %165, i32 1, i32 0
  %172 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %171, align 8
  %173 = icmp eq %"class.blink::AudioParamHandler"* %172, null
  br i1 %173, label %186, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %172, i64 0, i32 1, i32 0
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %186

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %175, i64 -15
  %181 = bitcast %"class.base::RefCountedThreadSafe.523"* %180 to %"class.blink::AudioParamHandler"*
  %182 = bitcast %"class.base::RefCountedThreadSafe.523"* %180 to void (%"class.blink::AudioParamHandler"*)***
  %183 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %183, i64 1
  %185 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %184, align 8
  call void %185(%"class.blink::AudioParamHandler"* nonnull %181) #12
  br label %186

186:                                              ; preds = %179, %174, %170
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %166, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #12
  br label %203

203:                                              ; preds = %202, %199, %186, %164
  %204 = add nuw nsw i64 %165, 1
  %205 = icmp eq i64 %204, %163
  br i1 %205, label %206, label %164

206:                                              ; preds = %203, %158
  %207 = bitcast %"struct.WTF::KeyValuePair.488"* %156 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %207) #12
  store %"struct.WTF::KeyValuePair.488"* null, %"struct.WTF::KeyValuePair.488"** %155, align 8
  br label %208

208:                                              ; preds = %152, %206
  %209 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %28, align 8
  %210 = icmp eq %"struct.WTF::KeyValuePair.488"* %209, null
  br i1 %210, label %260, label %211, !prof !3

211:                                              ; preds = %208
  %212 = load i32, i32* %29, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %258, label %214

214:                                              ; preds = %211
  %215 = zext i32 %212 to i64
  br label %216

216:                                              ; preds = %255, %214
  %217 = phi i64 [ 0, %214 ], [ %256, %255 ]
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %209, i64 %217
  %219 = bitcast %"struct.WTF::KeyValuePair.488"* %218 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, inttoptr (i64 -1 to i8*)
  br i1 %221, label %255, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %209, i64 %217, i32 1, i32 0
  %224 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %223, align 8
  %225 = icmp eq %"class.blink::AudioParamHandler"* %224, null
  br i1 %225, label %238, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %224, i64 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw sub i32* %228, i32 1 acq_rel
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %238

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %227, i64 -15
  %233 = bitcast %"class.base::RefCountedThreadSafe.523"* %232 to %"class.blink::AudioParamHandler"*
  %234 = bitcast %"class.base::RefCountedThreadSafe.523"* %232 to void (%"class.blink::AudioParamHandler"*)***
  %235 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %235, i64 1
  %237 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %236, align 8
  call void %237(%"class.blink::AudioParamHandler"* nonnull %233) #12
  br label %238

238:                                              ; preds = %231, %226, %222
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %218, i64 0, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #12
  br label %255

255:                                              ; preds = %254, %251, %238, %216
  %256 = add nuw nsw i64 %217, 1
  %257 = icmp eq i64 %256, %215
  br i1 %257, label %258, label %216

258:                                              ; preds = %255, %211
  %259 = bitcast %"struct.WTF::KeyValuePair.488"* %209 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %259) #12
  store %"struct.WTF::KeyValuePair.488"* null, %"struct.WTF::KeyValuePair.488"** %28, align 8
  br label %260

260:                                              ; preds = %208, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  ret void

261:                                              ; preds = %39, %564
  %262 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %33, %39 ], [ %565, %564 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %41, align 8
  %263 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 0, i32 4
  %264 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %263) #12
  store %"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"** %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %265 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %268, label %270

268:                                              ; preds = %261
  store i8* null, i8** %44, align 8
  %269 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %269, i64* %46, align 8
  br label %275

270:                                              ; preds = %261
  store %"class.WTF::StringImpl"* %266, %"class.WTF::StringImpl"** %43, align 8
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 1
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %45, align 8
  %274 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %275

275:                                              ; preds = %270, %268
  %276 = phi i64 [ %274, %270 ], [ %269, %268 ]
  %277 = phi i32 [ %272, %270 ], [ 0, %268 ]
  store i32 %277, i32* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  store i64 %276, i64* %49, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %50, align 8
  store i32 6, i32* %51, align 8
  %278 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %279 = zext i1 %278 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  store %"class.blink::AudioParam"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioParam"*), %"class.blink::AudioParam"** %13, align 8
  %280 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 0, i32 1
  %281 = load float, float* %280, align 8
  %282 = fpext float %281 to double
  %283 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 0, i32 3
  %284 = load float, float* %283, align 8
  %285 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 0, i32 2
  %286 = load float, float* %285, align 4
  %287 = call %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %53, i32 32, double %282, i32 %279, i32 1, float %284, float %286) #12
  store %"class.blink::AudioParam"* %287, %"class.blink::AudioParam"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %363, label %290

290:                                              ; preds = %275
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %307

297:                                              ; preds = %290
  %298 = zext i32 %296 to i33
  %299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %298, i33 1) #12
  %300 = extractvalue { i33, i1 } %299, 1
  %301 = extractvalue { i33, i1 } %299, 0
  %302 = icmp slt i33 %301, 0
  %303 = or i1 %300, %302
  br i1 %303, label %304, label %305, !prof !2

304:                                              ; preds = %297
  call void @llvm.trap() #12
  unreachable

305:                                              ; preds = %297
  %306 = trunc i33 %301 to i32
  store i32 %306, i32* %295, align 4
  br label %307

307:                                              ; preds = %305, %290
  %308 = phi i32 [ %306, %305 ], [ %296, %290 ]
  %309 = load atomic i32, i32* %291 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %322

312:                                              ; preds = %307
  %313 = zext i32 %308 to i33
  %314 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %313, i33 1) #12
  %315 = extractvalue { i33, i1 } %314, 1
  %316 = extractvalue { i33, i1 } %314, 0
  %317 = icmp slt i33 %316, 0
  %318 = or i1 %315, %317
  br i1 %318, label %319, label %320, !prof !2

319:                                              ; preds = %312
  call void @llvm.trap() #12
  unreachable

320:                                              ; preds = %312
  %321 = trunc i33 %316 to i32
  store i32 %321, i32* %295, align 4
  br label %322

322:                                              ; preds = %320, %307
  %323 = phi i32 [ %321, %320 ], [ %308, %307 ]
  %324 = load atomic i32, i32* %291 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %329

327:                                              ; preds = %322
  %328 = add i32 %323, -1
  store i32 %328, i32* %295, align 4
  br label %329

329:                                              ; preds = %327, %322
  %330 = phi i32 [ %328, %327 ], [ %323, %322 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #12
  br label %333

333:                                              ; preds = %329, %332
  %334 = load atomic i32, i32* %291 monotonic, align 4, !noalias !53
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = load i32, i32* %295, align 4
  br i1 %336, label %338, label %348

338:                                              ; preds = %333
  %339 = zext i32 %337 to i33
  %340 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %339, i33 1) #12
  %341 = extractvalue { i33, i1 } %340, 1
  %342 = extractvalue { i33, i1 } %340, 0
  %343 = icmp slt i33 %342, 0
  %344 = or i1 %341, %343
  br i1 %344, label %345, label %346, !prof !2

345:                                              ; preds = %338
  call void @llvm.trap() #12, !noalias !53
  unreachable

346:                                              ; preds = %338
  %347 = trunc i33 %342 to i32
  store i32 %347, i32* %295, align 4, !noalias !53
  br label %348

348:                                              ; preds = %333, %346
  %349 = phi i32 [ %347, %346 ], [ %337, %333 ]
  store i64 ptrtoint ([19 x i8]* @.str.5 to i64), i64* %57, align 8, !alias.scope !53
  store %"class.WTF::StringImpl"* %288, %"class.WTF::StringImpl"** %58, align 8, !alias.scope !53
  %350 = load atomic i32, i32* %291 monotonic, align 4, !noalias !53
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %364

353:                                              ; preds = %348
  %354 = zext i32 %349 to i33
  %355 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %354, i33 1) #12
  %356 = extractvalue { i33, i1 } %355, 1
  %357 = extractvalue { i33, i1 } %355, 0
  %358 = icmp slt i33 %357, 0
  %359 = or i1 %356, %358
  br i1 %359, label %360, label %361, !prof !2

360:                                              ; preds = %353
  call void @llvm.trap() #12, !noalias !53
  unreachable

361:                                              ; preds = %353
  %362 = trunc i33 %357 to i32
  store i32 %362, i32* %295, align 4, !noalias !53
  br label %364

363:                                              ; preds = %275
  store i64 ptrtoint ([19 x i8]* @.str.5 to i64), i64* %57, align 8, !alias.scope !53
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8, !alias.scope !53
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %59, align 8, !alias.scope !53
  br label %375

364:                                              ; preds = %361, %348
  %365 = phi i32 [ %362, %361 ], [ %349, %348 ]
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %59, align 8, !alias.scope !53
  %366 = load atomic i32, i32* %291 monotonic, align 4, !noalias !53
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %364
  %370 = add i32 %365, -1
  store i32 %370, i32* %295, align 4, !noalias !53
  br label %371

371:                                              ; preds = %369, %364
  %372 = phi i32 [ %370, %369 ], [ %365, %364 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #12, !noalias !53
  br label %375

375:                                              ; preds = %363, %371, %374
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %395, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %395

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  %386 = zext i32 %385 to i33
  %387 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %386, i33 1) #12
  %388 = extractvalue { i33, i1 } %387, 1
  %389 = extractvalue { i33, i1 } %387, 0
  %390 = icmp slt i33 %389, 0
  %391 = or i1 %388, %390
  br i1 %391, label %392, label %393, !prof !2

392:                                              ; preds = %383
  call void @llvm.trap() #12
  unreachable

393:                                              ; preds = %383
  %394 = trunc i33 %389 to i32
  store i32 %394, i32* %384, align 4
  br label %395

395:                                              ; preds = %375, %378, %393
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %14, %"class.WTF::StringAppend.791"* nonnull dereferenceable(24) %15, %"class.WTF::StringImpl"* %376)
  %396 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %14)
  call void @_ZN5blink10AudioParam18SetCustomParamNameEN3WTF6StringE(%"class.blink::AudioParam"* %287, %"class.WTF::StringImpl"* %396) #12
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %412, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  br i1 %403, label %406, label %408

406:                                              ; preds = %399
  %407 = add i32 %405, -1
  store i32 %407, i32* %404, align 4
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i32 [ %407, %406 ], [ %405, %399 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %397) #12
  br label %412

412:                                              ; preds = %411, %408, %395
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %412
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #12
  br label %428

428:                                              ; preds = %412, %424, %427
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #12
  br label %444

444:                                              ; preds = %428, %440, %443
  br i1 %289, label %458, label %445

445:                                              ; preds = %444
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = load atomic i32, i32* %446 monotonic, align 4
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %451 = load i32, i32* %450, align 4
  br i1 %449, label %452, label %454

452:                                              ; preds = %445
  %453 = add i32 %451, -1
  store i32 %453, i32* %450, align 4
  br label %454

454:                                              ; preds = %452, %445
  %455 = phi i32 [ %453, %452 ], [ %451, %445 ]
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #12
  br label %458

458:                                              ; preds = %444, %454, %457
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #12
  %459 = call { %"struct.WTF::KeyValuePair.783"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.781"* nonnull %62, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::AudioParam"** nonnull dereferenceable(8) %13) #12
  %460 = extractvalue { %"struct.WTF::KeyValuePair.783"*, i8 } %459, 1
  %461 = and i8 %460, 1
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %463, label %474

463:                                              ; preds = %458
  %464 = extractvalue { %"struct.WTF::KeyValuePair.783"*, i8 } %459, 0
  %465 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %464, i64 0, i32 1
  %466 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %13, align 8
  %467 = ptrtoint %"class.blink::AudioParam"* %466 to i64
  %468 = bitcast %"class.blink::Member.784"* %465 to i64*
  store atomic i64 %467, i64* %468 monotonic, align 8
  %469 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %474, label %471

471:                                              ; preds = %463
  %472 = bitcast %"class.blink::AudioParam"* %466 to i8*
  %473 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %472) #12
  br label %474

474:                                              ; preds = %458, %463, %471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %475 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %13, align 8
  %476 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %475, i64 0, i32 2, i32 0
  %477 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %476, align 8
  %478 = icmp eq %"class.blink::AudioParamHandler"* %477, null
  br i1 %478, label %485, label %479

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %477, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = atomicrmw add i32* %480, i32 1 monotonic
  %482 = icmp sgt i32 %481, 0
  br i1 %482, label %485, label %483

483:                                              ; preds = %479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %484 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  br label %485

485:                                              ; preds = %474, %479, %483
  store %"class.blink::AudioParamHandler"* %477, %"class.blink::AudioParamHandler"** %65, align 8
  %486 = call { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"* nonnull %66, %"class.WTF::String"* nonnull dereferenceable(8) %12, %class.scoped_refptr.489* nonnull dereferenceable(8) %16) #12
  %487 = extractvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %486, 1
  %488 = and i8 %487, 1
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %490, label %510

490:                                              ; preds = %485
  %491 = extractvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %486, 0
  %492 = load i64, i64* %67, align 8
  store %"class.blink::AudioParamHandler"* null, %"class.blink::AudioParamHandler"** %65, align 8
  %493 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %491, i64 0, i32 1
  %494 = bitcast %class.scoped_refptr.489* %493 to i64*
  %495 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %493, i64 0, i32 0
  %496 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %495, align 8
  store i64 %492, i64* %494, align 8
  %497 = icmp eq %"class.blink::AudioParamHandler"* %496, null
  br i1 %497, label %510, label %498

498:                                              ; preds = %490
  %499 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %496, i64 0, i32 1, i32 0
  %500 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %499, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = atomicrmw sub i32* %500, i32 1 acq_rel
  %502 = icmp eq i32 %501, 1
  br i1 %502, label %503, label %510

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %499, i64 -15
  %505 = bitcast %"class.base::RefCountedThreadSafe.523"* %504 to %"class.blink::AudioParamHandler"*
  %506 = bitcast %"class.base::RefCountedThreadSafe.523"* %504 to void (%"class.blink::AudioParamHandler"*)***
  %507 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %506, align 8
  %508 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %507, i64 1
  %509 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %508, align 8
  call void %509(%"class.blink::AudioParamHandler"* nonnull %505) #12
  br label %510

510:                                              ; preds = %485, %490, %498, %503
  %511 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %65, align 8
  %512 = icmp eq %"class.blink::AudioParamHandler"* %511, null
  br i1 %512, label %525, label %513

513:                                              ; preds = %510
  %514 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %511, i64 0, i32 1, i32 0
  %515 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %514, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = atomicrmw sub i32* %515, i32 1 acq_rel
  %517 = icmp eq i32 %516, 1
  br i1 %517, label %518, label %525

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %514, i64 -15
  %520 = bitcast %"class.base::RefCountedThreadSafe.523"* %519 to %"class.blink::AudioParamHandler"*
  %521 = bitcast %"class.base::RefCountedThreadSafe.523"* %519 to void (%"class.blink::AudioParamHandler"*)***
  %522 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %521, align 8
  %523 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %522, i64 1
  %524 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %523, align 8
  call void %524(%"class.blink::AudioParamHandler"* nonnull %520) #12
  br label %525

525:                                              ; preds = %510, %513, %518
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  %526 = load i8, i8* %68, align 1, !range !4
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %548, label %528

528:                                              ; preds = %525
  %529 = load %"struct.std::__1::pair.691"*, %"struct.std::__1::pair.691"** %69, align 8
  %530 = load i32, i32* %70, align 4
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds %"struct.std::__1::pair.691", %"struct.std::__1::pair.691"* %529, i64 %531
  %533 = icmp eq i32 %530, 0
  br i1 %533, label %548, label %534

534:                                              ; preds = %528, %545
  %535 = phi %"struct.std::__1::pair.691"* [ %546, %545 ], [ %529, %528 ]
  %536 = getelementptr inbounds %"struct.std::__1::pair.691", %"struct.std::__1::pair.691"* %535, i64 0, i32 0, i32 0, i32 0
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %539 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %537, %"class.WTF::StringImpl"* %538) #12
  br i1 %539, label %540, label %545

540:                                              ; preds = %534
  %541 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %13, align 8
  %542 = getelementptr inbounds %"struct.std::__1::pair.691", %"struct.std::__1::pair.691"* %535, i64 0, i32 1
  %543 = load double, double* %542, align 8
  %544 = fptrunc double %543 to float
  call void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"* %541, float %544) #12
  br label %545

545:                                              ; preds = %540, %534
  %546 = getelementptr inbounds %"struct.std::__1::pair.691", %"struct.std::__1::pair.691"* %535, i64 1
  %547 = icmp eq %"struct.std::__1::pair.691"* %546, %532
  br i1 %547, label %548, label %534

548:                                              ; preds = %545, %528, %525
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %564, label %551

551:                                              ; preds = %548
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %549) #12
  br label %564

564:                                              ; preds = %548, %560, %563
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  %565 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %262, i64 1
  %566 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %565, %37
  br i1 %566, label %71, label %261
}

declare void @_ZN5blink9AudioNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

declare %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* dereferenceable(8), i32, double, i32, i32, float, float) local_unnamed_addr #1

declare void @_ZN5blink10AudioParam18SetCustomParamNameEN3WTF6StringE(%"class.blink::AudioParam"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.791"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.791", align 8
  %5 = bitcast %"class.WTF::StringAppend.791"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.791"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.791"* nonnull byval(%"class.WTF::StringAppend.791") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.791"* nonnull byval(%"class.WTF::StringAppend.791") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %13) #12
  %14 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #12
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #12
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.791"* %38, i8* %37) #12
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %38) #12
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1091"* nonnull %57, i8* %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #12
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #12
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.1090"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #12
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.1090"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.791"* %97, i16* %96) #12
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %97) #12
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1091"* nonnull %116, i16* %119) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #12
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #12
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

declare void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"*, float) local_unnamed_addr #1

declare void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioWorkletNode"* @_ZN5blink16AudioWorkletNode6CreateEPNS_11ScriptStateEPNS_16BaseAudioContextERKN3WTF6StringEPKNS_23AudioWorkletNodeOptionsERNS_14ExceptionStateE(%"class.blink::ScriptState"* nocapture readonly, %"class.blink::BaseAudioContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::AudioWorkletNodeOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::AudioWorkletNodeOptions"*, align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.795", align 8
  %13 = alloca %"class.WTF::StringAppend", align 8
  %14 = alloca %"class.WTF::StringAppend.791", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend.791", align 8
  %18 = alloca %"class.blink::MessagePortChannel", align 8
  %19 = alloca %"class.WTF::Vector.786", align 8
  %20 = alloca %"class.blink::MessagePort"*, align 8
  %21 = alloca %"struct.blink::SerializedScriptValue::SerializeOptions", align 8
  %22 = alloca %"class.blink::MessagePortChannel", align 8
  %23 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  store %"class.blink::AudioWorkletNodeOptions"* %3, %"class.blink::AudioWorkletNodeOptions"** %10, align 8
  %24 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %763

32:                                               ; preds = %27, %5
  %33 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %455, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 7, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %418, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %44 = bitcast %"class.WTF::StringAppend.795"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #12
  %45 = bitcast %"class.WTF::StringAppend"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #12
  %46 = bitcast %"class.WTF::StringAppend.791"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false) #12
  store i8* %48, i8** %49, align 8
  %52 = urem i32 %40, 10
  %53 = udiv i32 %40, 10
  %54 = trunc i32 %52 to i8
  %55 = or i8 %54, 48
  store i8 %55, i8* %48, align 1
  %56 = icmp ugt i32 %40, 9
  br i1 %56, label %57, label %72

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %58, i8** %49, align 8
  %59 = urem i32 %53, 10
  %60 = trunc i32 %59 to i8
  %61 = or i8 %60, 48
  store i8 %61, i8* %58, align 2
  %62 = icmp ugt i32 %40, 99
  br i1 %62, label %63, label %70

63:                                               ; preds = %57
  %64 = udiv i32 %40, 100
  %65 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %65, i8** %49, align 8
  %66 = urem i32 %64, 10
  %67 = trunc i32 %66 to i8
  %68 = or i8 %67, 48
  store i8 %68, i8* %65, align 1
  %69 = icmp ugt i32 %40, 999
  br i1 %69, label %74, label %83

70:                                               ; preds = %57
  %71 = ptrtoint i8* %58 to i64
  br label %86

72:                                               ; preds = %42
  %73 = ptrtoint i8* %48 to i64
  br label %86

74:                                               ; preds = %63, %74
  %75 = phi i32 [ %77, %74 ], [ %64, %63 ]
  %76 = load i8*, i8** %49, align 8
  %77 = udiv i32 %75, 10
  %78 = getelementptr inbounds i8, i8* %76, i64 -1
  store i8* %78, i8** %49, align 8
  %79 = urem i32 %77, 10
  %80 = trunc i32 %79 to i8
  %81 = or i8 %80, 48
  store i8 %81, i8* %78, align 1
  %82 = icmp ugt i32 %75, 99
  br i1 %82, label %74, label %83

83:                                               ; preds = %74, %63
  %84 = bitcast i8** %49 to i64*
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %83, %70, %72
  %87 = phi i64 [ %73, %72 ], [ %85, %83 ], [ %71, %70 ]
  %88 = ptrtoint i8* %51 to i64
  %89 = sub i64 %88, %87
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %50, align 8
  %91 = inttoptr i64 %87 to i8*
  %92 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %91, i32 %90) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #12
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %169, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %111

101:                                              ; preds = %94
  %102 = zext i32 %100 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #12
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %101
  call void @llvm.trap() #12
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %99, align 4
  br label %111

111:                                              ; preds = %109, %94
  %112 = phi i32 [ %110, %109 ], [ %100, %94 ]
  %113 = load atomic i32, i32* %95 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %126

116:                                              ; preds = %111
  %117 = zext i32 %112 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #12
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !2

123:                                              ; preds = %116
  call void @llvm.trap() #12
  unreachable

124:                                              ; preds = %116
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %99, align 4
  br label %126

126:                                              ; preds = %124, %111
  %127 = phi i32 [ %125, %124 ], [ %112, %111 ]
  %128 = load atomic i32, i32* %95 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  %132 = add i32 %127, -1
  store i32 %132, i32* %99, align 4
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i32 [ %132, %131 ], [ %127, %126 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12
  br label %137

137:                                              ; preds = %133, %136
  %138 = load atomic i32, i32* %95 monotonic, align 4, !noalias !56
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = load i32, i32* %99, align 4
  br i1 %140, label %142, label %152

142:                                              ; preds = %137
  %143 = zext i32 %141 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #12
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %142
  call void @llvm.trap() #12, !noalias !56
  unreachable

150:                                              ; preds = %142
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %99, align 4, !noalias !56
  br label %152

152:                                              ; preds = %137, %150
  %153 = phi i32 [ %151, %150 ], [ %141, %137 ]
  %154 = bitcast %"class.WTF::StringAppend.791"* %14 to i64*
  store i64 ptrtoint ([79 x i8]* @.str.8 to i64), i64* %154, align 8, !alias.scope !56
  %155 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %155, align 8, !alias.scope !56
  %156 = load atomic i32, i32* %95 monotonic, align 4, !noalias !56
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %173

159:                                              ; preds = %152
  %160 = zext i32 %153 to i33
  %161 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %160, i33 1) #12
  %162 = extractvalue { i33, i1 } %161, 1
  %163 = extractvalue { i33, i1 } %161, 0
  %164 = icmp slt i33 %163, 0
  %165 = or i1 %162, %164
  br i1 %165, label %166, label %167, !prof !2

166:                                              ; preds = %159
  call void @llvm.trap() #12, !noalias !56
  unreachable

167:                                              ; preds = %159
  %168 = trunc i33 %163 to i32
  store i32 %168, i32* %99, align 4, !noalias !56
  br label %173

169:                                              ; preds = %86
  %170 = bitcast %"class.WTF::StringAppend.791"* %14 to i64*
  store i64 ptrtoint ([79 x i8]* @.str.8 to i64), i64* %170, align 8, !alias.scope !56
  %171 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %171, align 8, !alias.scope !56
  %172 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0), i8** %172, align 8, !alias.scope !56
  br label %185

173:                                              ; preds = %167, %152
  %174 = phi i32 [ %168, %167 ], [ %153, %152 ]
  %175 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0), i8** %175, align 8, !alias.scope !56
  %176 = load atomic i32, i32* %95 monotonic, align 4, !noalias !56
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %173
  %180 = add i32 %174, -1
  store i32 %180, i32* %99, align 4, !noalias !56
  br label %181

181:                                              ; preds = %179, %173
  %182 = phi i32 [ %180, %179 ], [ %174, %173 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12, !noalias !56
  br label %185

185:                                              ; preds = %169, %181, %184
  %186 = load %"class.blink::AudioWorkletNodeOptions"*, %"class.blink::AudioWorkletNodeOptions"** %10, align 8
  %187 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %186, i64 0, i32 6
  %188 = load i32, i32* %187, align 8
  %189 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #12
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %191 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %192 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %193 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 32, i1 false) #12
  store i8* %190, i8** %191, align 8
  %194 = urem i32 %188, 10
  %195 = udiv i32 %188, 10
  %196 = trunc i32 %194 to i8
  %197 = or i8 %196, 48
  store i8 %197, i8* %190, align 1
  %198 = icmp ugt i32 %188, 9
  br i1 %198, label %199, label %214

199:                                              ; preds = %185
  %200 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %200, i8** %191, align 8
  %201 = urem i32 %195, 10
  %202 = trunc i32 %201 to i8
  %203 = or i8 %202, 48
  store i8 %203, i8* %200, align 2
  %204 = icmp ugt i32 %188, 99
  br i1 %204, label %205, label %212

205:                                              ; preds = %199
  %206 = udiv i32 %188, 100
  %207 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %207, i8** %191, align 8
  %208 = urem i32 %206, 10
  %209 = trunc i32 %208 to i8
  %210 = or i8 %209, 48
  store i8 %210, i8* %207, align 1
  %211 = icmp ugt i32 %188, 999
  br i1 %211, label %216, label %225

212:                                              ; preds = %199
  %213 = ptrtoint i8* %200 to i64
  br label %228

214:                                              ; preds = %185
  %215 = ptrtoint i8* %190 to i64
  br label %228

216:                                              ; preds = %205, %216
  %217 = phi i32 [ %219, %216 ], [ %206, %205 ]
  %218 = load i8*, i8** %191, align 8
  %219 = udiv i32 %217, 10
  %220 = getelementptr inbounds i8, i8* %218, i64 -1
  store i8* %220, i8** %191, align 8
  %221 = urem i32 %219, 10
  %222 = trunc i32 %221 to i8
  %223 = or i8 %222, 48
  store i8 %223, i8* %220, align 1
  %224 = icmp ugt i32 %217, 99
  br i1 %224, label %216, label %225

225:                                              ; preds = %216, %205
  %226 = bitcast i8** %191 to i64*
  %227 = load i64, i64* %226, align 8
  br label %228

228:                                              ; preds = %225, %212, %214
  %229 = phi i64 [ %215, %214 ], [ %227, %225 ], [ %213, %212 ]
  %230 = ptrtoint i8* %193 to i64
  %231 = sub i64 %230, %229
  %232 = trunc i64 %231 to i32
  store i32 %232, i32* %192, align 8
  %233 = inttoptr i64 %229 to i8*
  %234 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %233, i32 %232) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %13, %"class.WTF::StringAppend.791"* nonnull dereferenceable(24) %14, %"class.WTF::StringImpl"* %234)
  %235 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %235)
  %236 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  %237 = load i64, i64* %236, align 8, !noalias !59
  %238 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 %237, i64* %238, align 8, !noalias !59
  %239 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8, !noalias !59
  %241 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %240, %"class.WTF::StringImpl"** %241, align 8, !noalias !59
  %242 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %242, label %260, label %243

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %260

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i33
  %252 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %251, i33 1) #12
  %253 = extractvalue { i33, i1 } %252, 1
  %254 = extractvalue { i33, i1 } %252, 0
  %255 = icmp slt i33 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %258, !prof !2

257:                                              ; preds = %248
  call void @llvm.trap() #12
  unreachable

258:                                              ; preds = %248
  %259 = trunc i33 %254 to i32
  store i32 %259, i32* %249, align 4
  br label %260

260:                                              ; preds = %258, %243, %228
  %261 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1
  %262 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1
  %263 = bitcast i8** %262 to i64*
  %264 = load i64, i64* %263, align 8, !noalias !59
  %265 = bitcast i8** %261 to i64*
  store i64 %264, i64* %265, align 8, !noalias !59
  %266 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8, !noalias !59
  %268 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %267, %"class.WTF::StringImpl"** %268, align 8, !noalias !59
  %269 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %269, label %287, label %270

270:                                              ; preds = %260
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %287

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #12
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !2

284:                                              ; preds = %275
  call void @llvm.trap() #12
  unreachable

285:                                              ; preds = %275
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %276, align 4
  br label %287

287:                                              ; preds = %260, %270, %285
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.795"* nonnull %12, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %235)
  %288 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.795"* nonnull %12)
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %288, %"class.WTF::StringImpl"** %289, align 8
  %290 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %291 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %290, align 8
  %292 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %291, align 8
  call void %292(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %11) #12
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %287
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #12
  br label %308

308:                                              ; preds = %287, %304, %307
  %309 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #12
  br label %325

325:                                              ; preds = %324, %321, %308
  %326 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %327, null
  br i1 %328, label %342, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #12
  br label %342

342:                                              ; preds = %325, %338, %341
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #12
  br label %358

358:                                              ; preds = %357, %354, %342
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #12
  br label %374

374:                                              ; preds = %358, %370, %373
  %375 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %391, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  br i1 %382, label %385, label %387

385:                                              ; preds = %378
  %386 = add i32 %384, -1
  store i32 %386, i32* %383, align 4
  br label %387

387:                                              ; preds = %385, %378
  %388 = phi i32 [ %386, %385 ], [ %384, %378 ]
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %376) #12
  br label %391

391:                                              ; preds = %374, %387, %390
  br i1 %93, label %417, label %392

392:                                              ; preds = %391
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  br i1 %396, label %399, label %401

399:                                              ; preds = %392
  %400 = add i32 %398, -1
  store i32 %400, i32* %397, align 4
  br label %401

401:                                              ; preds = %399, %392
  %402 = phi i32 [ %400, %399 ], [ %398, %392 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12
  %405 = load i32, i32* %397, align 4
  br label %406

406:                                              ; preds = %401, %404
  %407 = phi i32 [ %402, %401 ], [ %405, %404 ]
  %408 = load atomic i32, i32* %393 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %413

411:                                              ; preds = %406
  %412 = add i32 %407, -1
  store i32 %412, i32* %397, align 4
  br label %413

413:                                              ; preds = %411, %406
  %414 = phi i32 [ %412, %411 ], [ %407, %406 ]
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %417

416:                                              ; preds = %413
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12
  br label %417

417:                                              ; preds = %391, %413, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %763

418:                                              ; preds = %36
  %419 = getelementptr inbounds %"class.blink::AudioWorkletNodeOptions", %"class.blink::AudioWorkletNodeOptions"* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %420 = load i32*, i32** %419, align 8
  %421 = zext i32 %38 to i64
  %422 = getelementptr inbounds i32, i32* %420, i64 %421
  %423 = icmp eq i32 %38, 0
  br i1 %423, label %455, label %424

424:                                              ; preds = %418, %451
  %425 = phi i32* [ %452, %451 ], [ %420, %418 ]
  %426 = load i32, i32* %425, align 4
  %427 = add i32 %426, -1
  %428 = icmp ugt i32 %427, 31
  br i1 %428, label %429, label %451

429:                                              ; preds = %424
  %430 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %430) #12
  %431 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 %426, i32 1, i32 0, i32 32, i32 0)
  %432 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %431, %"class.WTF::StringImpl"** %432, align 8
  %433 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %434 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %433, align 8
  %435 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %434, align 8
  call void %435(%"class.blink::ExceptionState"* %4, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %15) #12
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %454, label %438

438:                                              ; preds = %429
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %454

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #12
  br label %454

451:                                              ; preds = %424
  %452 = getelementptr inbounds i32, i32* %425, i64 1
  %453 = icmp eq i32* %452, %422
  br i1 %453, label %455, label %424

454:                                              ; preds = %429, %447, %450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %430) #12
  br label %763

455:                                              ; preds = %451, %418, %32
  %456 = tail call %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"* %1) #12
  %457 = tail call zeroext i1 @_ZN5blink12AudioWorklet7IsReadyEv(%"class.blink::AudioWorklet"* %456) #12
  br i1 %457, label %459, label %458

458:                                              ; preds = %455
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.12, i64 0, i64 0)) #12
  br label %763

459:                                              ; preds = %455
  %460 = tail call %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"* %1) #12
  %461 = tail call zeroext i1 @_ZN5blink12AudioWorklet21IsProcessorRegisteredERKN3WTF6StringE(%"class.blink::AudioWorklet"* %460, %"class.WTF::String"* dereferenceable(8) %2) #12
  br i1 %461, label %612, label %462

462:                                              ; preds = %459
  %463 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463) #12
  %464 = bitcast %"class.WTF::StringAppend.791"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #12
  %465 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %466 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %465, align 8
  %467 = icmp eq %"class.WTF::StringImpl"* %466, null
  br i1 %467, label %543, label %468

468:                                              ; preds = %462
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 0
  %474 = load i32, i32* %473, align 4
  br i1 %472, label %475, label %485

475:                                              ; preds = %468
  %476 = zext i32 %474 to i33
  %477 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %476, i33 1) #12
  %478 = extractvalue { i33, i1 } %477, 1
  %479 = extractvalue { i33, i1 } %477, 0
  %480 = icmp slt i33 %479, 0
  %481 = or i1 %478, %480
  br i1 %481, label %482, label %483, !prof !2

482:                                              ; preds = %475
  tail call void @llvm.trap() #12
  unreachable

483:                                              ; preds = %475
  %484 = trunc i33 %479 to i32
  store i32 %484, i32* %473, align 4
  br label %485

485:                                              ; preds = %483, %468
  %486 = phi i32 [ %484, %483 ], [ %474, %468 ]
  %487 = load atomic i32, i32* %469 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %500

490:                                              ; preds = %485
  %491 = zext i32 %486 to i33
  %492 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %491, i33 1) #12
  %493 = extractvalue { i33, i1 } %492, 1
  %494 = extractvalue { i33, i1 } %492, 0
  %495 = icmp slt i33 %494, 0
  %496 = or i1 %493, %495
  br i1 %496, label %497, label %498, !prof !2

497:                                              ; preds = %490
  tail call void @llvm.trap() #12
  unreachable

498:                                              ; preds = %490
  %499 = trunc i33 %494 to i32
  store i32 %499, i32* %473, align 4
  br label %500

500:                                              ; preds = %498, %485
  %501 = phi i32 [ %499, %498 ], [ %486, %485 ]
  %502 = load atomic i32, i32* %469 monotonic, align 4
  %503 = and i32 %502, 2
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %507

505:                                              ; preds = %500
  %506 = add i32 %501, -1
  store i32 %506, i32* %473, align 4
  br label %507

507:                                              ; preds = %505, %500
  %508 = phi i32 [ %506, %505 ], [ %501, %500 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %466) #12
  br label %511

511:                                              ; preds = %507, %510
  %512 = load atomic i32, i32* %469 monotonic, align 4, !noalias !62
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = load i32, i32* %473, align 4
  br i1 %514, label %516, label %526

516:                                              ; preds = %511
  %517 = zext i32 %515 to i33
  %518 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %517, i33 1) #12
  %519 = extractvalue { i33, i1 } %518, 1
  %520 = extractvalue { i33, i1 } %518, 0
  %521 = icmp slt i33 %520, 0
  %522 = or i1 %519, %521
  br i1 %522, label %523, label %524, !prof !2

523:                                              ; preds = %516
  tail call void @llvm.trap() #12, !noalias !62
  unreachable

524:                                              ; preds = %516
  %525 = trunc i33 %520 to i32
  store i32 %525, i32* %473, align 4, !noalias !62
  br label %526

526:                                              ; preds = %511, %524
  %527 = phi i32 [ %525, %524 ], [ %515, %511 ]
  %528 = bitcast %"class.WTF::StringAppend.791"* %17 to i64*
  store i64 ptrtoint ([52 x i8]* @.str.13 to i64), i64* %528, align 8, !alias.scope !62
  %529 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %466, %"class.WTF::StringImpl"** %529, align 8, !alias.scope !62
  %530 = load atomic i32, i32* %469 monotonic, align 4, !noalias !62
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %547

533:                                              ; preds = %526
  %534 = zext i32 %527 to i33
  %535 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %534, i33 1) #12
  %536 = extractvalue { i33, i1 } %535, 1
  %537 = extractvalue { i33, i1 } %535, 0
  %538 = icmp slt i33 %537, 0
  %539 = or i1 %536, %538
  br i1 %539, label %540, label %541, !prof !2

540:                                              ; preds = %533
  tail call void @llvm.trap() #12, !noalias !62
  unreachable

541:                                              ; preds = %533
  %542 = trunc i33 %537 to i32
  store i32 %542, i32* %473, align 4, !noalias !62
  br label %547

543:                                              ; preds = %462
  %544 = bitcast %"class.WTF::StringAppend.791"* %17 to i64*
  store i64 ptrtoint ([52 x i8]* @.str.13 to i64), i64* %544, align 8, !alias.scope !62
  %545 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %545, align 8, !alias.scope !62
  %546 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i8** %546, align 8, !alias.scope !62
  br label %559

547:                                              ; preds = %541, %526
  %548 = phi i32 [ %542, %541 ], [ %527, %526 ]
  %549 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i8** %549, align 8, !alias.scope !62
  %550 = load atomic i32, i32* %469 monotonic, align 4, !noalias !62
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %547
  %554 = add i32 %548, -1
  store i32 %554, i32* %473, align 4, !noalias !62
  br label %555

555:                                              ; preds = %553, %547
  %556 = phi i32 [ %554, %553 ], [ %548, %547 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %466) #12, !noalias !62
  br label %559

559:                                              ; preds = %543, %555, %558
  %560 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.791"* nonnull %17)
  %561 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %560, %"class.WTF::StringImpl"** %561, align 8
  %562 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %563 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %562, align 8
  %564 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %563, align 8
  call void %564(%"class.blink::ExceptionState"* %4, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %16) #12
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %561, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %580, label %567

567:                                              ; preds = %559
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  br i1 %571, label %574, label %576

574:                                              ; preds = %567
  %575 = add i32 %573, -1
  store i32 %575, i32* %572, align 4
  br label %576

576:                                              ; preds = %574, %567
  %577 = phi i32 [ %575, %574 ], [ %573, %567 ]
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %576
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #12
  br label %580

580:                                              ; preds = %559, %576, %579
  %581 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %582 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %581, align 8
  %583 = icmp eq %"class.WTF::StringImpl"* %582, null
  br i1 %583, label %597, label %584

584:                                              ; preds = %580
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  br i1 %588, label %591, label %593

591:                                              ; preds = %584
  %592 = add i32 %590, -1
  store i32 %592, i32* %589, align 4
  br label %593

593:                                              ; preds = %591, %584
  %594 = phi i32 [ %592, %591 ], [ %590, %584 ]
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %593
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %582) #12
  br label %597

597:                                              ; preds = %580, %593, %596
  br i1 %467, label %611, label %598

598:                                              ; preds = %597
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %466) #12
  br label %611

611:                                              ; preds = %597, %607, %610
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %464) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463) #12
  br label %763

612:                                              ; preds = %459
  %613 = bitcast %"class.blink::BaseAudioContext"* %1 to i1 (%"class.blink::BaseAudioContext"*)***
  %614 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %613, align 8
  %615 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %614, i64 34
  %616 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %615, align 8
  %617 = tail call zeroext i1 %616(%"class.blink::BaseAudioContext"* %1) #12
  br i1 %617, label %618, label %619

618:                                              ; preds = %612
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.15, i64 0, i64 0)) #12
  br label %763

619:                                              ; preds = %612
  %620 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %1) #12
  %621 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #12
  %622 = bitcast i8* %621 to %"class.blink::MessageChannel"*
  tail call void @_ZN5blink14MessageChannelC1EPNS_16ExecutionContextE(%"class.blink::MessageChannel"* %622, %"class.blink::ExecutionContext"* %620) #12
  %623 = getelementptr inbounds i8, i8* %621, i64 -4
  %624 = bitcast i8* %623 to i16*
  %625 = load atomic i16, i16* %624 monotonic, align 2
  %626 = or i16 %625, 1
  store atomic i16 %626, i16* %624 release, align 2
  %627 = bitcast %"class.blink::MessagePortChannel"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %627) #12
  %628 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %18, i64 0, i32 0, i32 0
  store %"class.blink::MessagePortChannel::State"* inttoptr (i64 -6148914691236517206 to %"class.blink::MessagePortChannel::State"*), %"class.blink::MessagePortChannel::State"** %628, align 8
  %629 = getelementptr inbounds i8, i8* %621, i64 24
  %630 = bitcast i8* %629 to %"class.blink::MessagePort"**
  %631 = load %"class.blink::MessagePort"*, %"class.blink::MessagePort"** %630, align 8
  call void @_ZN5blink11MessagePort11DisentangleEv(%"class.blink::MessagePortChannel"* nonnull sret %18, %"class.blink::MessagePort"* %631) #12
  %632 = bitcast %"class.WTF::Vector.786"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %632) #12
  %633 = call %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"* %1) #12
  call void @_ZN5blink12AudioWorklet28GetParamInfoListForProcessorERKN3WTF6StringE(%"class.WTF::Vector.786"* nonnull sret %19, %"class.blink::AudioWorklet"* %633, %"class.WTF::String"* dereferenceable(8) %2) #12
  %634 = bitcast %"class.blink::MessagePort"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #12
  %635 = getelementptr inbounds i8, i8* %621, i64 16
  %636 = bitcast i8* %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = bitcast %"class.blink::MessagePort"** %20 to i64*
  store i64 %637, i64* %638, align 8
  %639 = call %"class.blink::AudioWorkletNode"* @_ZN5blink25MakeGarbageCollectedTraitINS_16AudioWorkletNodeEE4CallIJRNS_16BaseAudioContextERKN3WTF6StringERPKNS_23AudioWorkletNodeOptionsEKNS6_6VectorINS_25CrossThreadAudioParamInfoELj0ENS6_18PartitionAllocatorEEEPNS_11MessagePortEEEEPS1_DpOT_(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::AudioWorkletNodeOptions"** nonnull dereferenceable(8) %10, %"class.WTF::Vector.786"* nonnull dereferenceable(16) %19, %"class.blink::MessagePort"** nonnull dereferenceable(8) %20) #12
  %640 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %639, i64 0, i32 1, i32 0
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %640) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #12
  %641 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %19, i64 0, i32 0, i32 0, i32 0
  %642 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %641, align 8
  %643 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %642, null
  br i1 %643, label %695, label %644, !prof !3

644:                                              ; preds = %619
  %645 = bitcast %"class.blink::CrossThreadAudioParamInfo"* %642 to i8*
  %646 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %19, i64 0, i32 0, i32 0, i32 2
  %647 = load i32, i32* %646, align 4
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %693, label %649, !prof !2

649:                                              ; preds = %644
  %650 = zext i32 %647 to i64
  %651 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %642, i64 %650
  br label %652

652:                                              ; preds = %649, %687
  %653 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %688, %687 ], [ %642, %649 ]
  %654 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %653, i64 0, i32 4, i32 0, i32 0
  %655 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %654, align 8
  %656 = icmp eq %"class.WTF::StringImpl"* %655, null
  br i1 %656, label %670, label %657

657:                                              ; preds = %652
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %663 = load i32, i32* %662, align 4
  br i1 %661, label %664, label %666

664:                                              ; preds = %657
  %665 = add i32 %663, -1
  store i32 %665, i32* %662, align 4
  br label %666

666:                                              ; preds = %664, %657
  %667 = phi i32 [ %665, %664 ], [ %663, %657 ]
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %655) #12
  br label %670

670:                                              ; preds = %669, %666, %652
  %671 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %653, i64 0, i32 0, i32 0, i32 0
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %687, label %674

674:                                              ; preds = %670
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  br i1 %678, label %681, label %683

681:                                              ; preds = %674
  %682 = add i32 %680, -1
  store i32 %682, i32* %679, align 4
  br label %683

683:                                              ; preds = %681, %674
  %684 = phi i32 [ %682, %681 ], [ %680, %674 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %672) #12
  br label %687

687:                                              ; preds = %686, %683, %670
  %688 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %653, i64 1
  %689 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %688, %651
  br i1 %689, label %690, label %652

690:                                              ; preds = %687
  store i32 0, i32* %646, align 4
  %691 = bitcast %"class.WTF::Vector.786"* %19 to i8**
  %692 = load i8*, i8** %691, align 8
  br label %693

693:                                              ; preds = %690, %644
  %694 = phi i8* [ %692, %690 ], [ %645, %644 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %694) #12
  store %"class.blink::CrossThreadAudioParamInfo"* null, %"class.blink::CrossThreadAudioParamInfo"** %641, align 8
  br label %695

695:                                              ; preds = %619, %693
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %632) #12
  %696 = icmp eq %"class.blink::AudioWorkletNode"* %639, null
  br i1 %696, label %697, label %698

697:                                              ; preds = %695
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %762

698:                                              ; preds = %695
  %699 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %639, i64 0, i32 0
  %700 = bitcast %"class.blink::AudioWorkletNodeOptions"** %10 to %"class.blink::AudioNodeOptions"**
  %701 = load %"class.blink::AudioNodeOptions"*, %"class.blink::AudioNodeOptions"** %700, align 8
  call void @_ZN5blink9AudioNode20HandleChannelOptionsEPKNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.blink::AudioNode"* %699, %"class.blink::AudioNodeOptions"* %701, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  %702 = call i32 @_ZNK5blink9AudioNode15numberOfOutputsEv(%"class.blink::AudioNode"* %699) #12
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %705, label %704

704:                                              ; preds = %698
  call void @_ZN5blink16BaseAudioContext33NotifySourceNodeStartedProcessingEPNS_9AudioNodeE(%"class.blink::BaseAudioContext"* %1, %"class.blink::AudioNode"* %699) #12
  br label %705

705:                                              ; preds = %698, %704
  %706 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %707 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %706, align 8
  %708 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %708) #12
  %709 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %21, i64 0, i32 2
  %710 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %21, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %708, i8 0, i64 16, i1 false) #12
  store i32 1, i32* %709, align 8
  store i32 0, i32* %710, align 4
  %711 = bitcast %"class.blink::AudioWorkletNodeOptions"** %10 to %"class.blink::IDLDictionaryBase"**
  %712 = load %"class.blink::IDLDictionaryBase"*, %"class.blink::IDLDictionaryBase"** %711, align 8
  %713 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %714 = load %"class.v8::Context"*, %"class.v8::Context"** %713, align 8
  %715 = icmp eq %"class.v8::Context"* %714, null
  br i1 %715, label %722, label %716

716:                                              ; preds = %705
  %717 = bitcast %"class.v8::Isolate"* %707 to %"class.v8::internal::Isolate"*
  %718 = bitcast %"class.v8::Context"* %714 to i64*
  %719 = load i64, i64* %718, align 8
  %720 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %717, i64 %719) #12
  %721 = bitcast i64* %720 to %"class.v8::Context"*
  br label %722

722:                                              ; preds = %705, %716
  %723 = phi %"class.v8::Context"* [ %721, %716 ], [ null, %705 ]
  %724 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %723) #12
  %725 = icmp eq %"class.blink::IDLDictionaryBase"* %712, null
  br i1 %725, label %726, label %730

726:                                              ; preds = %722
  %727 = ptrtoint %"class.v8::Isolate"* %707 to i64
  %728 = add i64 %727, 176
  %729 = inttoptr i64 %728 to %"class.v8::Value"*
  br label %736

730:                                              ; preds = %722
  %731 = bitcast %"class.blink::IDLDictionaryBase"* %712 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %732 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %731, align 8
  %733 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %732, i64 2
  %734 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %733, align 8
  %735 = call %"class.v8::Value"* %734(%"class.blink::IDLDictionaryBase"* nonnull %712, %"class.v8::Object"* %724, %"class.v8::Isolate"* %707) #12
  br label %736

736:                                              ; preds = %726, %730
  %737 = phi %"class.v8::Value"* [ %729, %726 ], [ %735, %730 ]
  %738 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %707, %"class.v8::Value"* %737, %"struct.blink::SerializedScriptValue::SerializeOptions"* nonnull dereferenceable(24) %21, %"class.blink::ExceptionState"* dereferenceable(72) %4) #12
  %739 = icmp eq %"class.blink::SerializedScriptValue"* %738, null
  br i1 %739, label %740, label %742

740:                                              ; preds = %736
  %741 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9NullValueEv() #12
  br label %742

742:                                              ; preds = %736, %740
  %743 = phi %"class.blink::SerializedScriptValue"* [ %738, %736 ], [ %741, %740 ]
  %744 = call %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"* %1) #12
  %745 = call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %699) #12
  %746 = bitcast %"class.blink::AudioHandler"* %745 to %"class.blink::AudioWorkletHandler"*
  %747 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %745, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %748 = atomicrmw add i32* %747, i32 1 monotonic
  %749 = icmp sgt i32 %748, 0
  br i1 %749, label %753, label %750

750:                                              ; preds = %742
  %751 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %751) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %752 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %751) #12
  br label %753

753:                                              ; preds = %750, %742
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %22, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %18) #12
  call void @_ZN5blink12AudioWorklet15CreateProcessorE13scoped_refptrINS_19AudioWorkletHandlerEENS_18MessagePortChannelES1_INS_21SerializedScriptValueEE(%"class.blink::AudioWorklet"* %744, %"class.blink::AudioWorkletHandler"* %746, %"class.blink::MessagePortChannel"* nonnull %22, %"class.blink::SerializedScriptValue"* %743) #12
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %22) #12
  %754 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %754) #12
  %755 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %23, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %755, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %23, %"class.blink::BaseAudioContext"* %1) #12
  %756 = call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %699) #12
  %757 = bitcast %"class.blink::AudioHandler"* %756 to void (%"class.blink::AudioHandler"*)***
  %758 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %757, align 8
  %759 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %758, i64 18
  %760 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %759, align 8
  call void %760(%"class.blink::AudioHandler"* %756) #12
  %761 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %755, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %761) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %754) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %708) #12
  br label %762

762:                                              ; preds = %753, %697
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %627) #12
  br label %763

763:                                              ; preds = %454, %762, %618, %611, %458, %417, %31
  %764 = phi %"class.blink::AudioWorkletNode"* [ null, %31 ], [ null, %417 ], [ null, %618 ], [ %639, %762 ], [ null, %611 ], [ null, %458 ], [ null, %454 ]
  ret %"class.blink::AudioWorkletNode"* %764
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.795"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #12
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.1093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #12
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %15) #12
  %16 = bitcast %"class.WTF::StringTypeAdapter.1093"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %2, i8* %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.795"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #12
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.795"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #12
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #12
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.795"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #12
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.795"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #12
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %22 = bitcast %union.anon.1113* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %31 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = icmp eq i8* %0, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %6
  %34 = call i64 @strlen(i8* nonnull %0) #15
  %35 = icmp ult i64 %34, 4294967296
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  call void @llvm.trap() #12
  unreachable

37:                                               ; preds = %33
  %38 = trunc i64 %34 to i32
  br label %39

39:                                               ; preds = %6, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %6 ]
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %0, i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %45 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 11, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  %50 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false) #12
  store i8* %52, i8** %53, align 8
  %56 = urem i32 %1, 10
  %57 = udiv i32 %1, 10
  %58 = trunc i32 %56 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %52, align 1
  %60 = icmp ugt i32 %1, 9
  br i1 %60, label %61, label %94

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %62, i8** %53, align 8
  %63 = urem i32 %57, 10
  %64 = trunc i32 %63 to i8
  %65 = or i8 %64, 48
  store i8 %65, i8* %62, align 2
  %66 = icmp ugt i32 %1, 99
  br i1 %66, label %67, label %92

67:                                               ; preds = %61
  %68 = udiv i32 %1, 100
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %69, i8** %53, align 8
  %70 = urem i32 %68, 10
  %71 = trunc i32 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 1
  %73 = icmp ugt i32 %1, 999
  br i1 %73, label %74, label %90

74:                                               ; preds = %67
  %75 = udiv i32 %1, 1000
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 8
  store i8* %76, i8** %53, align 8
  %77 = urem i32 %75, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 8
  %80 = icmp ugt i32 %1, 9999
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = udiv i32 %1, 10000
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 7
  store i8* %83, i8** %53, align 8
  %84 = urem i32 %82, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  store i8 %86, i8* %83, align 1
  %87 = icmp ugt i32 %1, 99999
  br i1 %87, label %96, label %105

88:                                               ; preds = %74
  %89 = ptrtoint i8* %76 to i64
  br label %108

90:                                               ; preds = %67
  %91 = ptrtoint i8* %69 to i64
  br label %108

92:                                               ; preds = %61
  %93 = ptrtoint i8* %62 to i64
  br label %108

94:                                               ; preds = %39
  %95 = ptrtoint i8* %52 to i64
  br label %108

96:                                               ; preds = %81, %96
  %97 = phi i32 [ %99, %96 ], [ %82, %81 ]
  %98 = load i8*, i8** %53, align 8
  %99 = udiv i32 %97, 10
  %100 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %100, i8** %53, align 8
  %101 = urem i32 %99, 10
  %102 = trunc i32 %101 to i8
  %103 = or i8 %102, 48
  store i8 %103, i8* %100, align 1
  %104 = icmp ugt i32 %97, 99
  br i1 %104, label %96, label %105

105:                                              ; preds = %96, %81
  %106 = bitcast i8** %53 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %105, %88, %90, %92, %94
  %109 = phi i64 [ %95, %94 ], [ %93, %92 ], [ %91, %90 ], [ %107, %105 ], [ %89, %88 ]
  %110 = ptrtoint i8* %55 to i64
  %111 = sub i64 %110, %109
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %54, align 8
  %113 = inttoptr i64 %109 to i8*
  %114 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %113, i32 %112) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #12
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %120, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %141

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %127 = bitcast i8** %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %124, i32* %128, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %121
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %136, %135 ], [ %134, %121 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #12
  br label %141

141:                                              ; preds = %116, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  %142 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #12
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %146, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #12
  %147 = icmp eq i32 %3, 1
  %148 = select i1 %147, i8 40, i8 91
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %148) #12
  %149 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #12
  %150 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #12
  %151 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %154 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 32, i1 false) #12
  store i8* %151, i8** %152, align 8
  %155 = urem i32 %2, 10
  %156 = udiv i32 %2, 10
  %157 = trunc i32 %155 to i8
  %158 = or i8 %157, 48
  store i8 %158, i8* %151, align 1
  %159 = icmp ugt i32 %2, 9
  br i1 %159, label %160, label %193

160:                                              ; preds = %141
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %161, i8** %152, align 8
  %162 = urem i32 %156, 10
  %163 = trunc i32 %162 to i8
  %164 = or i8 %163, 48
  store i8 %164, i8* %161, align 2
  %165 = icmp ugt i32 %2, 99
  br i1 %165, label %166, label %191

166:                                              ; preds = %160
  %167 = udiv i32 %2, 100
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %168, i8** %152, align 8
  %169 = urem i32 %167, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %168, align 1
  %172 = icmp ugt i32 %2, 999
  br i1 %172, label %173, label %189

173:                                              ; preds = %166
  %174 = udiv i32 %2, 1000
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 8
  store i8* %175, i8** %152, align 8
  %176 = urem i32 %174, 10
  %177 = trunc i32 %176 to i8
  %178 = or i8 %177, 48
  store i8 %178, i8* %175, align 8
  %179 = icmp ugt i32 %2, 9999
  br i1 %179, label %180, label %187

180:                                              ; preds = %173
  %181 = udiv i32 %2, 10000
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 7
  store i8* %182, i8** %152, align 8
  %183 = urem i32 %181, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 1
  %186 = icmp ugt i32 %2, 99999
  br i1 %186, label %195, label %204

187:                                              ; preds = %173
  %188 = ptrtoint i8* %175 to i64
  br label %207

189:                                              ; preds = %166
  %190 = ptrtoint i8* %168 to i64
  br label %207

191:                                              ; preds = %160
  %192 = ptrtoint i8* %161 to i64
  br label %207

193:                                              ; preds = %141
  %194 = ptrtoint i8* %151 to i64
  br label %207

195:                                              ; preds = %180, %195
  %196 = phi i32 [ %198, %195 ], [ %181, %180 ]
  %197 = load i8*, i8** %152, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %152, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %180
  %205 = bitcast i8** %152 to i64*
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %204, %187, %189, %191, %193
  %208 = phi i64 [ %194, %193 ], [ %192, %191 ], [ %190, %189 ], [ %206, %204 ], [ %188, %187 ]
  %209 = ptrtoint i8* %154 to i64
  %210 = sub i64 %209, %208
  %211 = trunc i64 %210 to i32
  store i32 %211, i32* %153, align 8
  %212 = inttoptr i64 %208 to i8*
  %213 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %212, i32 %211) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #12
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %215, label %220

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 0, i32* %219, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  br label %240

220:                                              ; preds = %207
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %226 = bitcast i8** %225 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %223, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %220
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %220
  %237 = phi i32 [ %235, %234 ], [ %233, %220 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #12
  br label %240

240:                                              ; preds = %215, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #12
  %241 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #12
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %243 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i8** %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 2, i32* %245, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #12
  %246 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #12
  %247 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %247) #12
  %248 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %249 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %250 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %251 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 32, i1 false) #12
  store i8* %248, i8** %249, align 8
  %252 = urem i32 %4, 10
  %253 = udiv i32 %4, 10
  %254 = trunc i32 %252 to i8
  %255 = or i8 %254, 48
  store i8 %255, i8* %248, align 1
  %256 = icmp ugt i32 %4, 9
  br i1 %256, label %257, label %290

257:                                              ; preds = %240
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %258, i8** %249, align 8
  %259 = urem i32 %253, 10
  %260 = trunc i32 %259 to i8
  %261 = or i8 %260, 48
  store i8 %261, i8* %258, align 2
  %262 = icmp ugt i32 %4, 99
  br i1 %262, label %263, label %288

263:                                              ; preds = %257
  %264 = udiv i32 %4, 100
  %265 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %265, i8** %249, align 8
  %266 = urem i32 %264, 10
  %267 = trunc i32 %266 to i8
  %268 = or i8 %267, 48
  store i8 %268, i8* %265, align 1
  %269 = icmp ugt i32 %4, 999
  br i1 %269, label %270, label %286

270:                                              ; preds = %263
  %271 = udiv i32 %4, 1000
  %272 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 8
  store i8* %272, i8** %249, align 8
  %273 = urem i32 %271, 10
  %274 = trunc i32 %273 to i8
  %275 = or i8 %274, 48
  store i8 %275, i8* %272, align 8
  %276 = icmp ugt i32 %4, 9999
  br i1 %276, label %277, label %284

277:                                              ; preds = %270
  %278 = udiv i32 %4, 10000
  %279 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 7
  store i8* %279, i8** %249, align 8
  %280 = urem i32 %278, 10
  %281 = trunc i32 %280 to i8
  %282 = or i8 %281, 48
  store i8 %282, i8* %279, align 1
  %283 = icmp ugt i32 %4, 99999
  br i1 %283, label %292, label %301

284:                                              ; preds = %270
  %285 = ptrtoint i8* %272 to i64
  br label %304

286:                                              ; preds = %263
  %287 = ptrtoint i8* %265 to i64
  br label %304

288:                                              ; preds = %257
  %289 = ptrtoint i8* %258 to i64
  br label %304

290:                                              ; preds = %240
  %291 = ptrtoint i8* %248 to i64
  br label %304

292:                                              ; preds = %277, %292
  %293 = phi i32 [ %295, %292 ], [ %278, %277 ]
  %294 = load i8*, i8** %249, align 8
  %295 = udiv i32 %293, 10
  %296 = getelementptr inbounds i8, i8* %294, i64 -1
  store i8* %296, i8** %249, align 8
  %297 = urem i32 %295, 10
  %298 = trunc i32 %297 to i8
  %299 = or i8 %298, 48
  store i8 %299, i8* %296, align 1
  %300 = icmp ugt i32 %293, 99
  br i1 %300, label %292, label %301

301:                                              ; preds = %292, %277
  %302 = bitcast i8** %249 to i64*
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %301, %284, %286, %288, %290
  %305 = phi i64 [ %291, %290 ], [ %289, %288 ], [ %287, %286 ], [ %303, %301 ], [ %285, %284 ]
  %306 = ptrtoint i8* %251 to i64
  %307 = sub i64 %306, %305
  %308 = trunc i64 %307 to i32
  store i32 %308, i32* %250, align 8
  %309 = inttoptr i64 %305 to i8*
  %310 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %309, i32 %308) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %247) #12
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %312, label %317

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %313, align 8
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %315 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %316, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %337

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 1
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %323 = bitcast i8** %322 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %320, i32* %324, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %317
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %317
  %334 = phi i32 [ %332, %331 ], [ %330, %317 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #12
  br label %337

337:                                              ; preds = %312, %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #12
  %338 = icmp eq i32 %5, 1
  %339 = select i1 %338, i8 41, i8 93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %339) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext 46) #12
  %340 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %10) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #12
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #12
  br label %356

356:                                              ; preds = %337, %352, %355
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #12
  ret %"class.WTF::StringImpl"* %340
}

declare %"class.blink::AudioWorklet"* @_ZNK5blink16BaseAudioContext12audioWorkletEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12AudioWorklet7IsReadyEv(%"class.blink::AudioWorklet"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12AudioWorklet21IsProcessorRegisteredERKN3WTF6StringE(%"class.blink::AudioWorklet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.791"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.1093"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.791"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.791"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink11MessagePort11DisentangleEv(%"class.blink::MessagePortChannel"* sret, %"class.blink::MessagePort"*) local_unnamed_addr #1

declare void @_ZN5blink12AudioWorklet28GetParamInfoListForProcessorERKN3WTF6StringE(%"class.WTF::Vector.786"* sret, %"class.blink::AudioWorklet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9AudioNode20HandleChannelOptionsEPKNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNodeOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZNK5blink9AudioNode15numberOfOutputsEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

declare void @_ZN5blink16BaseAudioContext33NotifySourceNodeStartedProcessingEPNS_9AudioNodeE(%"class.blink::BaseAudioContext"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9NullValueEv() local_unnamed_addr #1

declare void @_ZN5blink12AudioWorklet15CreateProcessorE13scoped_refptrINS_19AudioWorkletHandlerEENS_18MessagePortChannelES1_INS_21SerializedScriptValueEE(%"class.blink::AudioWorklet"*, %"class.blink::AudioWorkletHandler"*, %"class.blink::MessagePortChannel"*, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioWorkletHandler"* @_ZNK5blink16AudioWorkletNode17GetWorkletHandlerEv(%"class.blink::AudioWorkletNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %3) #12
  %5 = bitcast %"class.blink::AudioHandler"* %4 to %"class.blink::AudioWorkletHandler"*
  %6 = icmp eq %"class.blink::AudioHandler"* %4, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %14

14:                                               ; preds = %1, %7, %11
  ret %"class.blink::AudioWorkletHandler"* %5
}

declare void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"*, %"class.blink::BaseAudioContext"*) unnamed_addr #1

declare dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16AudioWorkletNode18HasPendingActivityEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* %2) #12
  %4 = bitcast %"class.blink::BaseAudioContext"* %3 to i1 (%"class.blink::BaseAudioContext"*)***
  %5 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %5, i64 34
  %7 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::BaseAudioContext"* %3) #12
  %9 = xor i1 %8, true
  ret i1 %9
}

declare %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParamMap"* @_ZNK5blink16AudioWorkletNode10parametersEv(%"class.blink::AudioWorkletNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AudioParamMap"*, %"class.blink::AudioParamMap"** %2, align 8
  ret %"class.blink::AudioParamMap"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::MessagePort"* @_ZNK5blink16AudioWorkletNode4portEv(%"class.blink::AudioWorkletNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::MessagePort"*, %"class.blink::MessagePort"** %2, align 8
  ret %"class.blink::MessagePort"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.938"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1093"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %6, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.938"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #12
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %45) #12
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1091"* nonnull %46, i8* %25) #12
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.938"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #12
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.1090"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #12
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.1090"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #12
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %105) #12
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1091"* nonnull %106, i16* %85) #12
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i16* %109) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #12
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #12
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE(%"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*, %"class.blink::DOMWrapperWorld"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.950", align 8
  %5 = alloca %"class.blink::DOMWrapperWorld"*, align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.950", %"class.std::__1::unique_ptr.950"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SourceLocation"* %1, %"class.blink::SourceLocation"** %7, align 8
  store %"class.blink::DOMWrapperWorld"* %2, %"class.blink::DOMWrapperWorld"** %5, align 8
  %8 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false)
  %10 = call %"class.blink::ErrorEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_(%"class.WTF::String"* dereferenceable(8) %0, %"class.std::__1::unique_ptr.950"* nonnull dereferenceable(8) %4, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %6, %"class.blink::DOMWrapperWorld"** nonnull dereferenceable(8) %5) #12
  %11 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %12 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %11, align 8
  %13 = icmp eq %"class.blink::DOMWrapperWorld"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #12
  %16 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %12) #12
  %20 = bitcast %"class.blink::DOMWrapperWorld"* %12 to i8*
  call void @free(i8* %20) #12
  br label %21

21:                                               ; preds = %3, %14, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %22 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %7, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %7, align 8
  %23 = icmp eq %"class.blink::SourceLocation"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %22) #12
  %25 = bitcast %"class.blink::SourceLocation"* %22 to i8*
  call void @free(i8* %25) #12
  br label %26

26:                                               ; preds = %21, %24
  ret %"class.blink::ErrorEvent"* %10
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16AudioWorkletNode5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.775"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13AudioParamMapEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.404"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %25, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink16AudioWorkletNode5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 4
  %4 = getelementptr inbounds %class.scoped_refptr.305, %class.scoped_refptr.305* %3, i64 22
  %5 = bitcast %class.scoped_refptr.305* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13AudioParamMapEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %class.scoped_refptr.305, %class.scoped_refptr.305* %3, i64 23
  %16 = bitcast %class.scoped_refptr.305* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #12
  br label %25

25:                                               ; preds = %14, %19
  %26 = bitcast %class.scoped_refptr.305* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %26, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink16AudioWorkletNode5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 44
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13AudioParamMapEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i32, i32* %3, i64 46
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #12
  br label %25

25:                                               ; preds = %14, %19
  %26 = bitcast i32* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %26, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16AudioWorkletNode15ReportDidCreateEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioNode"* %4) #12
  %5 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::AudioParamMap"*, %"class.blink::AudioParamMap"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %6, i64 0, i32 2, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %1
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.783"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.783"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.783"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.783"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.783"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %40, %51, %48, %1, %25
  ret void

29:                                               ; preds = %25, %53
  %30 = phi %"class.blink::AudioParamMap"* [ %54, %53 ], [ %6, %25 ]
  %31 = phi %"struct.WTF::KeyValuePair.783"* [ %45, %53 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %31, i64 0, i32 0
  %33 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %34 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %30, i64 0, i32 2, i32 0, i32 0
  %35 = tail call %"struct.WTF::KeyValuePair.783"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.781"* %34, %"class.WTF::String"* dereferenceable(8) %32) #12
  %36 = icmp eq %"struct.WTF::KeyValuePair.783"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %38, align 8
  br label %40

40:                                               ; preds = %29, %37
  %41 = phi %"class.blink::AudioParam"* [ %39, %37 ], [ null, %29 ]
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %33, %"class.blink::AudioParam"* %41) #12
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %31, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.783"* %42, %15
  br i1 %43, label %28, label %44

44:                                               ; preds = %40, %48
  %45 = phi %"struct.WTF::KeyValuePair.783"* [ %49, %48 ], [ %42, %40 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.783"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.783"* %49, %15
  br i1 %50, label %28, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"struct.WTF::KeyValuePair.783"* %45, %15
  br i1 %52, label %28, label %53

53:                                               ; preds = %51
  %54 = load %"class.blink::AudioParamMap"*, %"class.blink::AudioParamMap"** %5, align 8
  br label %29
}

declare void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink16AudioWorkletNode15ReportDidCreateEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %class.scoped_refptr.305* %2 to %"class.blink::AudioWorkletNode"*
  tail call void @_ZN5blink16AudioWorkletNode15ReportDidCreateEv(%"class.blink::AudioWorkletNode"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16AudioWorkletNode21ReportWillBeDestroyedEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AudioParamMap"*, %"class.blink::AudioParamMap"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %8, i64 %11
  br i1 %6, label %27, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair.783"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair.783"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair.783"* %20, %12
  br i1 %21, label %27, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair.783"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair.783"* %23, %12
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  br label %31

27:                                               ; preds = %19, %42, %53, %50, %1, %22
  %28 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %29 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %29, %"class.blink::AudioNode"* %30) #12
  ret void

31:                                               ; preds = %55, %25
  %32 = phi %"class.blink::AudioParamMap"* [ %3, %25 ], [ %56, %55 ]
  %33 = phi %"struct.WTF::KeyValuePair.783"* [ %23, %25 ], [ %47, %55 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %33, i64 0, i32 0
  %35 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %26, align 8
  %36 = getelementptr inbounds %"class.blink::AudioParamMap", %"class.blink::AudioParamMap"* %32, i64 0, i32 2, i32 0, i32 0
  %37 = tail call %"struct.WTF::KeyValuePair.783"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.781"* %36, %"class.WTF::String"* dereferenceable(8) %34) #12
  %38 = icmp eq %"struct.WTF::KeyValuePair.783"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %37, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %40, align 8
  br label %42

42:                                               ; preds = %31, %39
  %43 = phi %"class.blink::AudioParam"* [ %41, %39 ], [ null, %31 ]
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %35, %"class.blink::AudioParam"* %43) #12
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %33, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair.783"* %44, %12
  br i1 %45, label %27, label %46

46:                                               ; preds = %42, %50
  %47 = phi %"struct.WTF::KeyValuePair.783"* [ %51, %50 ], [ %44, %42 ]
  %48 = bitcast %"struct.WTF::KeyValuePair.783"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %53 [
    i64 -1, label %50
    i64 0, label %50
  ]

50:                                               ; preds = %46, %46
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %47, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.783"* %51, %12
  br i1 %52, label %27, label %46

53:                                               ; preds = %46
  %54 = icmp eq %"struct.WTF::KeyValuePair.783"* %47, %12
  br i1 %54, label %27, label %55

55:                                               ; preds = %53
  %56 = load %"class.blink::AudioParamMap"*, %"class.blink::AudioParamMap"** %2, align 8
  br label %31
}

declare void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink16AudioWorkletNode21ReportWillBeDestroyedEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %class.scoped_refptr.305* %2 to %"class.blink::AudioWorkletNode"*
  tail call void @_ZN5blink16AudioWorkletNode21ReportWillBeDestroyedEv(%"class.blink::AudioWorkletNode"* %3)
  ret void
}

declare void @_ZN5blink12AudioHandler7DisposeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler18ProcessIfNecessaryEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19AudioWorkletHandler22RequiresTailProcessingEv(%"class.blink::AudioWorkletHandler"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink19AudioWorkletHandler11LatencyTimeEv(%"class.blink::AudioWorkletHandler"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

declare zeroext i1 @_ZNK5blink12AudioHandler17PropagatesSilenceEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE(%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler10PullInputsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16AudioWorkletNodeD2Ev(%"class.blink::AudioWorkletNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16AudioWorkletNodeD0Ev(%"class.blink::AudioWorkletNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16AudioWorkletNode18GetWrapperTypeInfoEv(%"class.blink::AudioWorkletNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16AudioWorkletNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9AudioNode13InterfaceNameEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink16AudioWorkletNodeD1Ev(%"class.blink::AudioWorkletNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink16AudioWorkletNodeD0Ev(%"class.blink::AudioWorkletNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletNode", %"class.blink::AudioWorkletNode"* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable.774"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.774", %"class.blink::ActiveScriptWrappable.774"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.774"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* %3) #12
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #12
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16AudioWorkletNodeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable.774"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.774", %"class.blink::ActiveScriptWrappable.774"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.774"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* %3) #12
  %5 = bitcast %"class.blink::BaseAudioContext"* %4 to i1 (%"class.blink::BaseAudioContext"*)***
  %6 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %6, i64 34
  %8 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::BaseAudioContext"* %4) #12
  %10 = xor i1 %9, true
  ret i1 %10
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.485"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.488"*
  %31 = call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* %30, i32 %17, %"struct.WTF::KeyValuePair.488"* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.485"*, %"struct.WTF::KeyValuePair.488"*, i32, %"struct.WTF::KeyValuePair.488"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.485", align 8
  %6 = bitcast %"class.WTF::HashTable.485"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.485"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.488"* %1, %"struct.WTF::KeyValuePair.488"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.488"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.485"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.485"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.488"* %22 to i64
  br label %89

24:                                               ; preds = %151
  %25 = bitcast %"class.WTF::HashTable.485"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.485"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %152, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.488"* [ null, %16 ], [ %155, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %153, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.488"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %85, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %83, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %80, %39
  %42 = phi i64 [ 0, %39 ], [ %81, %80 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.488"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %80, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %35, i64 %42, i32 1, i32 0
  %49 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %48, align 8
  %50 = icmp eq %"class.blink::AudioParamHandler"* %49, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %52, i64 -15
  %58 = bitcast %"class.base::RefCountedThreadSafe.523"* %57 to %"class.blink::AudioParamHandler"*
  %59 = bitcast %"class.base::RefCountedThreadSafe.523"* %57 to void (%"class.blink::AudioParamHandler"*)***
  %60 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %60, i64 1
  %62 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %61, align 8
  call void %62(%"class.blink::AudioParamHandler"* nonnull %58) #12
  br label %63

63:                                               ; preds = %56, %51, %47
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %43, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %80

80:                                               ; preds = %79, %76, %63, %41
  %81 = add nuw nsw i64 %42, 1
  %82 = icmp eq i64 %81, %40
  br i1 %82, label %83, label %41

83:                                               ; preds = %80, %37
  %84 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %85

85:                                               ; preds = %28, %83
  %86 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, -2147483648
  store i32 %88, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.488"* %33

89:                                               ; preds = %21, %151
  %90 = phi i64 [ %152, %151 ], [ %23, %21 ]
  %91 = phi i32 [ %153, %151 ], [ %13, %21 ]
  %92 = phi %"struct.WTF::KeyValuePair.488"* [ %154, %151 ], [ %22, %21 ]
  %93 = phi %"struct.WTF::KeyValuePair.488"* [ %155, %151 ], [ null, %21 ]
  %94 = phi i32 [ %156, %151 ], [ 0, %21 ]
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %92, i64 %95
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"struct.WTF::KeyValuePair.488"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  switch i64 %99, label %100 [
    i64 -1, label %151
    i64 0, label %151
  ]

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %96, i64 0, i32 0
  %102 = call { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.485"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %101) #12
  %103 = extractvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %102, 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %103, i64 0, i32 1, i32 0
  %105 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %104, align 8
  %106 = icmp eq %"class.blink::AudioParamHandler"* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %105, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %108, i64 -15
  %114 = bitcast %"class.base::RefCountedThreadSafe.523"* %113 to %"class.blink::AudioParamHandler"*
  %115 = bitcast %"class.base::RefCountedThreadSafe.523"* %113 to void (%"class.blink::AudioParamHandler"*)***
  %116 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %116, i64 1
  %118 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %117, align 8
  call void %118(%"class.blink::AudioParamHandler"* nonnull %114) #12
  br label %119

119:                                              ; preds = %112, %107, %100
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %103, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #12
  br label %136

136:                                              ; preds = %119, %132, %135
  %137 = load i64, i64* %98, align 8
  %138 = bitcast %"struct.WTF::KeyValuePair.488"* %103 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %103, i64 0, i32 1
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %92, i64 %95, i32 1
  %141 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %140, i64 0, i32 0
  %142 = bitcast %class.scoped_refptr.489* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %class.scoped_refptr.489* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.blink::AudioParamHandler"* null, %"class.blink::AudioParamHandler"** %141, align 8
  %145 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %15, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %145, i64 %95
  %147 = icmp eq %"struct.WTF::KeyValuePair.488"* %146, %3
  %148 = select i1 %147, %"struct.WTF::KeyValuePair.488"* %103, %"struct.WTF::KeyValuePair.488"* %93
  %149 = load i32, i32* %12, align 8
  %150 = ptrtoint %"struct.WTF::KeyValuePair.488"* %145 to i64
  br label %151

151:                                              ; preds = %89, %89, %136
  %152 = phi i64 [ %90, %89 ], [ %150, %136 ], [ %90, %89 ]
  %153 = phi i32 [ %91, %89 ], [ %149, %136 ], [ %91, %89 ]
  %154 = phi %"struct.WTF::KeyValuePair.488"* [ %92, %89 ], [ %145, %136 ], [ %92, %89 ]
  %155 = phi %"struct.WTF::KeyValuePair.488"* [ %93, %89 ], [ %148, %136 ], [ %93, %89 ]
  %156 = add i32 %94, 1
  %157 = icmp eq i32 %156, %153
  br i1 %157, label %24, label %89
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.485"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.488"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.488"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.488"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.488"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.488"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.488"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.488"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.488"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.488"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.488"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.488"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } undef, %"struct.WTF::KeyValuePair.488"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.488"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS1_RKS7_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.488"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.488"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* null)
  %9 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.488"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.488"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.488"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.488"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %92, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.488"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.488"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.488"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.488"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = tail call dereferenceable(16) %"struct.WTF::KeyValuePair.488"* @_ZN3WTF12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEaSERKS6_(%"struct.WTF::KeyValuePair.488"* %79, %"struct.WTF::KeyValuePair.488"* dereferenceable(16) %2) #12
  %81 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, %83
  %87 = shl i32 %86, 1
  %88 = load i32, i32* %12, align 8
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %78
  %91 = tail call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* %79)
  br label %92

92:                                               ; preds = %54, %78, %90
  %93 = phi i8 [ 1, %78 ], [ 1, %90 ], [ 0, %54 ]
  %94 = phi %"struct.WTF::KeyValuePair.488"* [ %79, %78 ], [ %91, %90 ], [ %47, %54 ]
  %95 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } undef, %"struct.WTF::KeyValuePair.488"* %94, 0
  %96 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %95, i8 %93, 1
  ret { %"struct.WTF::KeyValuePair.488"*, i8 } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.485"*, %"struct.WTF::KeyValuePair.488"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.488"*
  %37 = call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* %36, i32 %32, %"struct.WTF::KeyValuePair.488"* %1) #12
  ret %"struct.WTF::KeyValuePair.488"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.488"* @_ZN3WTF12KeyValuePairINS_6StringE13scoped_refptrIN5blink17AudioParamHandlerEEEaSERKS6_(%"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.488"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %1, i64 0, i32 1, i32 0
  %46 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %45, align 8
  %47 = icmp eq %"class.blink::AudioParamHandler"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #12
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  br label %55

55:                                               ; preds = %43, %48, %52
  %56 = ptrtoint %"class.blink::AudioParamHandler"* %46 to i64
  %57 = bitcast %class.scoped_refptr.489* %44 to i64*
  %58 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %44, i64 0, i32 0
  %59 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.blink::AudioParamHandler"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %59, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %62, i64 -15
  %68 = bitcast %"class.base::RefCountedThreadSafe.523"* %67 to %"class.blink::AudioParamHandler"*
  %69 = bitcast %"class.base::RefCountedThreadSafe.523"* %67 to void (%"class.blink::AudioParamHandler"*)***
  %70 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %70, i64 1
  %72 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %71, align 8
  call void %72(%"class.blink::AudioParamHandler"* nonnull %68) #12
  br label %73

73:                                               ; preds = %55, %61, %66
  ret %"struct.WTF::KeyValuePair.488"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.494"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %41, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.494"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %41, %4
  %9 = phi i64 [ 0, %4 ], [ %42, %41 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.494"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %41, label %14

14:                                               ; preds = %8
  %15 = bitcast i8* %12 to %"class.WTF::StringImpl"*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %16, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %16, align 8
  %18 = icmp eq %"class.blink::AudioArray"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::AudioArray"* %17 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %21) #12
  %22 = bitcast %"class.blink::AudioArray"* %17 to i8*
  tail call void @free(i8* %22) #12
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %10, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  br label %25

25:                                               ; preds = %19, %14
  %26 = phi %"class.WTF::StringImpl"* [ %24, %19 ], [ %15, %14 ]
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %40, %37, %25, %8
  %42 = add nuw nsw i64 %9, 1
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF16VectorDestructorILb1E13scoped_refptrIN5blink8AudioBusEEE8DestructEPS4_S6_(%class.scoped_refptr.337*, %class.scoped_refptr.337*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.scoped_refptr.337* %0, %1
  br i1 %3, label %4, label %5

4:                                                ; preds = %47, %2
  ret void

5:                                                ; preds = %2, %47
  %6 = phi %class.scoped_refptr.337* [ %48, %47 ], [ %0, %2 ]
  %7 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %6, i64 0, i32 0
  %8 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %7, align 8
  %9 = icmp eq %"class.blink::AudioBus"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %8, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %47

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %11, i64 2
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %11, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.base::RefCountedThreadSafe.339"* %16 to %"class.blink::AudioChannel"**
  br i1 %19, label %38, label %21, !prof !2

21:                                               ; preds = %15
  %22 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %20, align 8
  %23 = zext i32 %18 to i64
  %24 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %22, i64 %23
  br label %25

25:                                               ; preds = %34, %21
  %26 = phi %"class.blink::AudioChannel"* [ %35, %34 ], [ %22, %21 ]
  %27 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %27, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %27, align 8
  %29 = icmp eq %"class.blink::AudioArray"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::AudioArray"* %28 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %32) #12
  %33 = bitcast %"class.blink::AudioArray"* %28 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %30, %25
  %35 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %26, i64 1
  %36 = icmp eq %"class.blink::AudioChannel"* %35, %24
  br i1 %36, label %37, label %25

37:                                               ; preds = %34
  store i32 0, i32* %17, align 4
  br label %38

38:                                               ; preds = %37, %15
  %39 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %20, align 8
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.339", %"class.base::RefCountedThreadSafe.339"* %11, i64 6
  %41 = bitcast %"class.base::RefCountedThreadSafe.339"* %40 to %"class.blink::AudioChannel"*
  %42 = icmp eq %"class.blink::AudioChannel"* %39, %41
  br i1 %42, label %45, label %43, !prof !3

43:                                               ; preds = %38
  %44 = bitcast %"class.base::RefCountedThreadSafe.339"* %16 to %"class.WTF::VectorBuffer.341"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.341"* %44, %"class.blink::AudioChannel"* %39) #12
  br label %45

45:                                               ; preds = %43, %38
  %46 = bitcast %"class.blink::AudioBus"* %8 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %5, %10, %45
  %48 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %6, i64 1
  %49 = icmp eq %class.scoped_refptr.337* %48, %1
  br i1 %49, label %4, label %5
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.341"*, %"class.blink::AudioChannel"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::AudioChannel"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"*, i64, double, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN5blink15AudioNodeOutput11FanOutCountEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

declare i32 @_ZN5blink15AudioNodeOutput16ParamFanOutCountEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::AudioWorkletHandler"**
  %12 = load %"class.blink::AudioWorkletHandler"*, %"class.blink::AudioWorkletHandler"** %11, align 8
  %13 = icmp eq %"class.blink::AudioWorkletHandler"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::AudioWorkletHandler"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::AudioWorkletHandler"*, i32)**
  %39 = load void (%"class.blink::AudioWorkletHandler"*, i32)*, void (%"class.blink::AudioWorkletHandler"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::AudioWorkletHandler"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::AudioWorkletHandler"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.blink::AudioWorkletHandler"* %30, i32 %44) #12
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19AudioWorkletHandlerEFvNS2_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::AudioWorkletHandler"**
  %9 = load %"class.blink::AudioWorkletHandler"*, %"class.blink::AudioWorkletHandler"** %8, align 8
  %10 = icmp ne %"class.blink::AudioWorkletHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ErrorEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_(%"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.950"* dereferenceable(8), %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::DOMWrapperWorld"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #12
  %7 = bitcast i8* %6 to %"class.blink::ErrorEvent"*
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.950", %"class.std::__1::unique_ptr.950"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %8, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %8, align 8
  %10 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = icmp eq %"class.blink::ScriptValue"* %5, %2
  br i1 %16, label %22, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %18, i64** %15) #12
  br label %22

22:                                               ; preds = %21, %17, %4
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.293"* dereferenceable(8) %14) #12
  %23 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %24 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %24, %"class.blink::DOMWrapperWorld"** %25, align 8
  %26 = icmp eq %"class.blink::DOMWrapperWorld"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %24, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #12
  br label %29

29:                                               ; preds = %22, %27
  %30 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %3, align 8
  call void @_ZN5blink10ErrorEventC1ERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEENS_11ScriptValueEPNS_15DOMWrapperWorldE(%"class.blink::ErrorEvent"* %7, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::SourceLocation"* %9, %"class.blink::ScriptValue"* nonnull %5, %"class.blink::DOMWrapperWorld"* %30) #12
  %31 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %25, align 8
  %32 = icmp eq %"class.blink::DOMWrapperWorld"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %31, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #12
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %31) #12
  %39 = bitcast %"class.blink::DOMWrapperWorld"* %31 to i8*
  call void @free(i8* %39) #12
  br label %40

40:                                               ; preds = %29, %33, %38
  %41 = getelementptr inbounds i8, i8* %6, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  ret %"class.blink::ErrorEvent"* %7
}

declare void @_ZN5blink10ErrorEventC1ERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEENS_11ScriptValueEPNS_15DOMWrapperWorldE(%"class.blink::ErrorEvent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*, %"class.blink::ScriptValue"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.5"*) local_unnamed_addr #1

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.293"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"*) unnamed_addr #3

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #12

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.32, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #12
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #12
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #12
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.32, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)) #12
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.494"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS1_SA_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable.491"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.343"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.494"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.491"* %0, %"struct.WTF::KeyValuePair.494"* null)
  %9 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.494"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.494"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.494"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.494"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %143, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.494"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.494"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.494"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.494"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.494"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %79, i64 0, i32 1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343"* %2, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.343"* %2 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %120, align 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343"* %119, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.343"* %119 to i64*
  store i64 %122, i64* %125, align 8
  %126 = icmp eq %"class.blink::AudioArray"* %124, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.blink::AudioArray"* %124 to i8**
  %129 = load i8*, i8** %128, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %129) #12
  %130 = bitcast %"class.blink::AudioArray"* %124 to i8*
  tail call void @free(i8* %130) #12
  br label %131

131:                                              ; preds = %118, %127
  %132 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = tail call %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.491"* %0, %"struct.WTF::KeyValuePair.494"* %79)
  br label %143

143:                                              ; preds = %54, %131, %141
  %144 = phi i8 [ 1, %131 ], [ 1, %141 ], [ 0, %54 ]
  %145 = phi %"struct.WTF::KeyValuePair.494"* [ %79, %131 ], [ %142, %141 ], [ %47, %54 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair.494"*, i8 } undef, %"struct.WTF::KeyValuePair.494"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair.494"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair.494"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.491"*, %"struct.WTF::KeyValuePair.494"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.494"*
  %37 = call %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.491"* %0, %"struct.WTF::KeyValuePair.494"* %36, i32 %32, %"struct.WTF::KeyValuePair.494"* %1) #12
  ret %"struct.WTF::KeyValuePair.494"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable.491"*, %"struct.WTF::KeyValuePair.494"*, i32, %"struct.WTF::KeyValuePair.494"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.491", align 8
  %6 = bitcast %"class.WTF::HashTable.491"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.491"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.494"* %1, %"struct.WTF::KeyValuePair.494"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.494"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.491"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.491"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.494"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.491"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.491"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.494"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.494"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSB_j(%"struct.WTF::KeyValuePair.494"* nonnull %37, i32 %34) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.494"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.494"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.494"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.494"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8ReinsertEOSB_(%"class.WTF::HashTable.491"* nonnull %5, %"struct.WTF::KeyValuePair.494"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.494"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.494"* %53, %"struct.WTF::KeyValuePair.494"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.494"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.494"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.494"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.494"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE8ReinsertEOSB_(%"class.WTF::HashTable.491"*, %"struct.WTF::KeyValuePair.494"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.494"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.491"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.494"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %6, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %6, align 8
  %8 = icmp eq %"class.blink::AudioArray"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::AudioArray"* %7 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %11) #12
  %12 = bitcast %"class.blink::AudioArray"* %7 to i8*
  tail call void @free(i8* %12) #12
  br label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %13, %26, %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.WTF::KeyValuePair.494"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.WTF::KeyValuePair.494"* %5 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %1, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.343"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.343"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %37, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.343"* %35 to i64*
  store i64 %39, i64* %40, align 8
  ret %"struct.WTF::KeyValuePair.494"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.494"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.491"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.494"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.494"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.494"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.494"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.494"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.494"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.494"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.494"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.494"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.494"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.494"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.494"*, i8 } undef, %"struct.WTF::KeyValuePair.494"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.494"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.494"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink8AudioBusEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.683"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.683", %"class.WTF::Vector.683"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.683", %"class.WTF::Vector.683"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.337* @_ZN3WTF6VectorI13scoped_refptrIN5blink8AudioBusEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.479"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.479", %"class.WTF::Vector.479"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.337*, %class.scoped_refptr.337** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.337, %class.scoped_refptr.337* %24, i64 %25
  ret %class.scoped_refptr.337* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.488"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.485"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.488"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.488"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.488"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.488"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.488"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.494"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink10AudioArrayIfEENS3_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSF_ISA_EEEESG_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.491"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.494"*, %"struct.WTF::KeyValuePair.494"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.494"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.491", %"class.WTF::HashTable.491"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.494"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.494"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.494", %"struct.WTF::KeyValuePair.494"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.494"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.494"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.401"*, %"class.blink::AudioWorkletProcessor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.401", %"class.blink::PersistentBase.401"* %0, i64 0, i32 0
  store %"class.blink::AudioWorkletProcessor"* %1, %"class.blink::AudioWorkletProcessor"** %3, align 8
  %4 = ptrtoint %"class.blink::AudioWorkletProcessor"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.401", %"class.blink::PersistentBase.401"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.401"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #12
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.401"**
  store %"class.blink::PersistentBase.401"* %0, %"class.blink::PersistentBase.401"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.401", %"class.blink::PersistentBase.401"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21AudioWorkletProcessorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::AudioWorkletProcessor"**
  %5 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::AudioWorkletProcessor"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AudioWorkletProcessor"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioWorkletProcessor"*
  %4 = bitcast i8* %1 to void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)**, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AudioWorkletProcessor"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.791"* byval(%"class.WTF::StringAppend.791") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.791"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.792"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.792"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.792"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.792", %"class.WTF::StringAppend.792"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.792", %"class.WTF::StringAppend.792"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1091"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.791"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1091"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.792"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1093"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1091"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.791"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1093"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.1093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.791", %"class.WTF::StringAppend.791"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1090"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1093"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1091"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.792"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1093"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1093"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.783"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.781"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::AudioParam"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.783"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.781"* %0, %"struct.WTF::KeyValuePair.783"* null)
  %9 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.783"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.783"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.783"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.783"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.783"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.783"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.783"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.783"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.783"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %79, i64 0, i32 1
  %120 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  %121 = ptrtoint %"class.blink::AudioParam"* %120 to i64
  %122 = bitcast %"class.blink::Member.784"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::AudioParam"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #12
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #12
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #12
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #12
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.781"* %0, %"struct.WTF::KeyValuePair.783"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.783"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.783"*, i8 } undef, %"struct.WTF::KeyValuePair.783"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.783"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.783"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.781"*, %"struct.WTF::KeyValuePair.783"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.781"* %0, i32 %35, %"struct.WTF::KeyValuePair.783"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.783"*
  %44 = call %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.781"* %0, %"struct.WTF::KeyValuePair.783"* %43, i32 %40, %"struct.WTF::KeyValuePair.783"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.783"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.783"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.781"*, i32, %"struct.WTF::KeyValuePair.783"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.783"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.783"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.783"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.783"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.781"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.783"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.781"* %0, %"struct.WTF::KeyValuePair.783"* %42, i32 %1, %"struct.WTF::KeyValuePair.783"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.783"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.783"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.783"* %64, %"struct.WTF::KeyValuePair.783"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.783"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.783"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.783"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.784"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.784"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.783"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.783"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.783"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.781"*, %"struct.WTF::KeyValuePair.783"*, i32, %"struct.WTF::KeyValuePair.783"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.781", align 8
  %6 = bitcast %"class.WTF::HashTable.781"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.781"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.783"* %1, %"struct.WTF::KeyValuePair.783"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.783"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.783"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.781"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.783"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.781"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #12
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.781"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.781"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.783"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.783"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.784"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #12
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.783"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.783"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.783"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.783"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.783"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.781"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #12
  %101 = extractvalue { %"struct.WTF::KeyValuePair.783"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.783"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.784"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.784"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.783"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.783"* %101, %"struct.WTF::KeyValuePair.783"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.783"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.783"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.43, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10AudioParamEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_10AudioParamEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([380 x i8], [380 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #12
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #12
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_10AudioParamEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.783"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.783"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.783"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.784"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.784"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioParam"*
  tail call void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.783"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.781"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.783"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.783"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.783"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.783"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.783"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.783"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.783"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.783"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.783"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.783"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.783"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.783"*, i8 } undef, %"struct.WTF::KeyValuePair.783"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.783"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.783"*, i8 } %77
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.488"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.485"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.489* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.488"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* null)
  %9 = load %"struct.WTF::KeyValuePair.488"*, %"struct.WTF::KeyValuePair.488"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.488"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.488"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.488"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.488"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %151, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.488"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.488"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.488"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.488"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.488"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %2, i64 0, i32 0
  %120 = bitcast %class.scoped_refptr.489* %2 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.blink::AudioParamHandler"* null, %"class.blink::AudioParamHandler"** %119, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.488", %"struct.WTF::KeyValuePair.488"* %79, i64 0, i32 1
  %123 = bitcast %class.scoped_refptr.489* %122 to i64*
  %124 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %122, i64 0, i32 0
  %125 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %124, align 8
  store i64 %121, i64* %123, align 8
  %126 = icmp eq %"class.blink::AudioParamHandler"* %125, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %125, i64 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %139

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::RefCountedThreadSafe.523", %"class.base::RefCountedThreadSafe.523"* %128, i64 -15
  %134 = bitcast %"class.base::RefCountedThreadSafe.523"* %133 to %"class.blink::AudioParamHandler"*
  %135 = bitcast %"class.base::RefCountedThreadSafe.523"* %133 to void (%"class.blink::AudioParamHandler"*)***
  %136 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %136, i64 1
  %138 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %137, align 8
  tail call void %138(%"class.blink::AudioParamHandler"* nonnull %134) #12
  br label %139

139:                                              ; preds = %118, %127, %132
  %140 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable.485", %"class.WTF::HashTable.485"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %139
  %150 = tail call %"struct.WTF::KeyValuePair.488"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink17AudioParamHandlerEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.485"* %0, %"struct.WTF::KeyValuePair.488"* %79)
  br label %151

151:                                              ; preds = %54, %139, %149
  %152 = phi i8 [ 1, %139 ], [ 1, %149 ], [ 0, %54 ]
  %153 = phi %"struct.WTF::KeyValuePair.488"* [ %79, %139 ], [ %150, %149 ], [ %47, %54 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } undef, %"struct.WTF::KeyValuePair.488"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair.488"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair.488"*, i8 } %155
}

declare void @_ZN5blink13AudioParamMapC1ERKNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_10AudioParamEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEE(%"class.blink::AudioParamMap"*, %"class.blink::HeapHashMap.777"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.795"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.795"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.795"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.795"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.791"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1091"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.795"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1090", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.795", %"class.WTF::StringAppend.795"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1090"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.791"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1090", %"class.WTF::StringTypeAdapter.1090"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.791"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1091"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1113* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1113* %16 to %"class.WTF::Vector.1119"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1119"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1114"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1119"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1119"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1119"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1119"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1119"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1119"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1119"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1119"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1119"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1119"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1120"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1120"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1119"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1119", %"class.WTF::Vector.1119"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1120"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1114"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1114"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1114"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1114"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1114"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1114"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1115"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1115"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1114"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1114", %"class.WTF::Vector.1114"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1115"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink14MessageChannelC1EPNS_16ExecutionContextE(%"class.blink::MessageChannel"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioWorkletNode"* @_ZN5blink25MakeGarbageCollectedTraitINS_16AudioWorkletNodeEE4CallIJRNS_16BaseAudioContextERKN3WTF6StringERPKNS_23AudioWorkletNodeOptionsEKNS6_6VectorINS_25CrossThreadAudioParamInfoELj0ENS6_18PartitionAllocatorEEEPNS_11MessagePortEEEEPS1_DpOT_(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* dereferenceable(8), %"class.blink::AudioWorkletNodeOptions"** dereferenceable(8), %"class.WTF::Vector.786"* dereferenceable(16), %"class.blink::MessagePort"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.WTF::Vector.786", align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #12
  %8 = bitcast i8* %7 to %"class.blink::AudioWorkletNode"*
  %9 = load %"class.blink::AudioWorkletNodeOptions"*, %"class.blink::AudioWorkletNodeOptions"** %2, align 8
  call void @_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.786"* nonnull %6, %"class.WTF::Vector.786"* dereferenceable(16) %3)
  %10 = load %"class.blink::MessagePort"*, %"class.blink::MessagePort"** %4, align 8
  call void @_ZN5blink16AudioWorkletNodeC2ERNS_16BaseAudioContextERKN3WTF6StringEPKNS_23AudioWorkletNodeOptionsENS3_6VectorINS_25CrossThreadAudioParamInfoELj0ENS3_18PartitionAllocatorEEEPNS_11MessagePortE(%"class.blink::AudioWorkletNode"* %8, %"class.blink::BaseAudioContext"* dereferenceable(304) %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::AudioWorkletNodeOptions"* %9, %"class.WTF::Vector.786"* nonnull %6, %"class.blink::MessagePort"* %10)
  %11 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %11, align 8
  %13 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %12, null
  br i1 %13, label %65, label %14, !prof !3

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::CrossThreadAudioParamInfo"* %12 to i8*
  %16 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %6, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %63, label %19, !prof !2

19:                                               ; preds = %14
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %12, i64 %20
  br label %22

22:                                               ; preds = %19, %57
  %23 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %58, %57 ], [ %12, %19 ]
  %24 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %23, i64 0, i32 4, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %40

40:                                               ; preds = %39, %36, %22
  %41 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %23, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #12
  br label %57

57:                                               ; preds = %56, %53, %40
  %58 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %23, i64 1
  %59 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %58, %21
  br i1 %59, label %60, label %22

60:                                               ; preds = %57
  store i32 0, i32* %16, align 4
  %61 = bitcast %"class.WTF::Vector.786"* %6 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %14
  %64 = phi i8* [ %62, %60 ], [ %15, %14 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #12
  store %"class.blink::CrossThreadAudioParamInfo"* null, %"class.blink::CrossThreadAudioParamInfo"** %11, align 8
  br label %65

65:                                               ; preds = %5, %63
  %66 = getelementptr inbounds i8, i8* %7, i64 -4
  %67 = bitcast i8* %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = or i16 %68, 1
  store atomic i16 %69, i16* %67 release, align 2
  ret %"class.blink::AudioWorkletNode"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.786"*, %"class.WTF::Vector.786"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CrossThreadAudioParamInfo"* null, %"class.blink::CrossThreadAudioParamInfo"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64 %9) #12
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv, i64 0, i64 0)) #12
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.786"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 5
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::CrossThreadAudioParamInfo"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::CrossThreadAudioParamInfo"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.786", %"class.WTF::Vector.786"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %82, label %28

28:                                               ; preds = %17, %78
  %29 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %79, %78 ], [ %18, %17 ]
  %30 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %80, %78 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %29, i64 0, i32 1
  %54 = bitcast float* %53 to i8*
  %55 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %30, i64 0, i32 1
  %56 = bitcast float* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 12, i1 false) #12
  %57 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %30, i64 0, i32 4, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %29, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #12
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #12
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %76, %61, %52
  %79 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %29, i64 1
  %80 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %30, i64 1
  %81 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %80, %26
  br i1 %81, label %82, label %28

82:                                               ; preds = %78, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.35, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.938"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1093", %"class.WTF::StringTypeAdapter.1093"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.938", %"class.WTF::StringAppend.938"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1093"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.40, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13AudioParamMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i8* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #12
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_10AudioParamEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MessagePort"*
  %4 = bitcast i8* %1 to void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)**, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MessagePort"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.783"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_10AudioParamEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.781"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.783"*, %"struct.WTF::KeyValuePair.783"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.783"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.781", %"class.WTF::HashTable.781"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.783"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.783"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.783", %"struct.WTF::KeyValuePair.783"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.783"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.783"* %62
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10, !6}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4base15SupportsWeakPtrIN5blink19AudioWorkletHandlerEE9AsWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZN4base15SupportsWeakPtrIN5blink19AudioWorkletHandlerEE9AsWeakPtrEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJN4base7WeakPtrIS2_EERS3_EEEDaOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJN4base7WeakPtrIS2_EERS3_EEEDaOT_DpOT0_"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink19AudioWorkletHandlerEEEE4CopyERKS5_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink19AudioWorkletHandlerEEEE4CopyERKS5_"}
!20 = !{!18}
!21 = !{!22, !24, !15}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!26 = !{!27, !15}
!27 = distinct !{!27, !28, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4base15SupportsWeakPtrIN5blink19AudioWorkletHandlerEE9AsWeakPtrEv: argument 0"}
!34 = distinct !{!34, !"_ZN4base15SupportsWeakPtrIN5blink19AudioWorkletHandlerEE9AsWeakPtrEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJN4base7WeakPtrIS2_EES3_EEEDaOT_DpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJN4base7WeakPtrIS2_EES3_EEEDaOT_DpOT0_"}
!38 = !{!39, !36}
!39 = distinct !{!39, !40, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink19AudioWorkletHandlerEEEE4CopyERKS5_: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink19AudioWorkletHandlerEEEE4CopyERKS5_"}
!41 = !{!39}
!42 = !{!43, !45, !36}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19AudioWorkletHandlerEFvNS3_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS4_EES5_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIMN5blink19AudioWorkletHandlerEFvNS1_31AudioWorkletProcessorErrorStateEEJNS_7WeakPtrIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!47 = !{!48, !36}
!48 = distinct !{!48, !49, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!55 = distinct !{!55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!58 = distinct !{!58, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!61 = distinct !{!61, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!64 = distinct !{!64, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
