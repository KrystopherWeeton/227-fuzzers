; ModuleID = '../../media/formats/webm/webm_info_parser.cc'
source_filename = "../../media/formats/webm/webm_info_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::WebMInfoParser" = type { %"class.media::WebMParserClient", i64, double, %"class.base::Time" }
%"class.media::WebMParserClient" = type { i32 (...)** }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.media::WebMListParser" = type { i32, i32, i32, %"class.media::WebMParserClient"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::WebMListParser::ListState"*, %"struct.media::WebMListParser::ListState"*, %"class.std::__1::__compressed_pair" }
%"struct.media::WebMListParser::ListState" = type { i32, i64, i64, %"struct.media::ListElementInfo"*, %"class.media::WebMParserClient"* }
%"struct.media::ListElementInfo" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::WebMListParser::ListState"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@_ZTVN5media14WebMInfoParserE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::WebMInfoParser"*)* @_ZN5media14WebMInfoParserD2Ev to i8*), i8* bitcast (void (%"class.media::WebMInfoParser"*)* @_ZN5media14WebMInfoParserD0Ev to i8*), i8* bitcast (%"class.media::WebMParserClient"* (%"class.media::WebMInfoParser"*, i32)* @_ZN5media14WebMInfoParser11OnListStartEi to i8*), i8* bitcast (i1 (%"class.media::WebMInfoParser"*, i32)* @_ZN5media14WebMInfoParser9OnListEndEi to i8*), i8* bitcast (i1 (%"class.media::WebMInfoParser"*, i32, i64)* @_ZN5media14WebMInfoParser6OnUIntEil to i8*), i8* bitcast (i1 (%"class.media::WebMInfoParser"*, i32, double)* @_ZN5media14WebMInfoParser7OnFloatEid to i8*), i8* bitcast (i1 (%"class.media::WebMInfoParser"*, i32, i8*, i32)* @_ZN5media14WebMInfoParser8OnBinaryEiPKhi to i8*), i8* bitcast (i1 (%"class.media::WebMInfoParser"*, i32, %"class.std::__1::basic_string"*)* @_ZN5media14WebMInfoParser8OnStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5media14WebMInfoParserC1Ev = hidden unnamed_addr alias void (%"class.media::WebMInfoParser"*), void (%"class.media::WebMInfoParser"*)* @_ZN5media14WebMInfoParserC2Ev
@_ZN5media14WebMInfoParserD1Ev = hidden unnamed_addr alias void (%"class.media::WebMInfoParser"*), void (%"class.media::WebMInfoParser"*)* @_ZN5media14WebMInfoParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14WebMInfoParserC2Ev(%"class.media::WebMInfoParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0
  tail call void @_ZN5media16WebMParserClientC2Ev(%"class.media::WebMParserClient"* %2) #8
  %3 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5media14WebMInfoParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 1
  store i64 -1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 2
  store double -1.000000e+00, double* %5, align 8
  %6 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %6, align 8
  ret void
}

declare void @_ZN5media16WebMParserClientC2Ev(%"class.media::WebMParserClient"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5media16WebMParserClientD2Ev(%"class.media::WebMParserClient"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14WebMInfoParserD2Ev(%"class.media::WebMInfoParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0
  tail call void @_ZN5media16WebMParserClientD2Ev(%"class.media::WebMParserClient"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14WebMInfoParserD0Ev(%"class.media::WebMInfoParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0
  tail call void @_ZN5media16WebMParserClientD2Ev(%"class.media::WebMParserClient"* %2) #8
  %3 = bitcast %"class.media::WebMInfoParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media14WebMInfoParser5ParseEPKhi(%"class.media::WebMInfoParser"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.media::WebMListParser", align 8
  %5 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 1
  store i64 -1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 2
  store double -1.000000e+00, double* %6, align 8
  %7 = bitcast %"class.media::WebMListParser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0
  call void @_ZN5media14WebMListParserC1EiPNS_16WebMParserClientE(%"class.media::WebMListParser"* nonnull %4, i32 357149030, %"class.media::WebMParserClient"* %8) #8
  %9 = call i32 @_ZN5media14WebMListParser5ParseEPKhi(%"class.media::WebMListParser"* nonnull %4, i8* %1, i32 %2) #8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = call zeroext i1 @_ZNK5media14WebMListParser17IsParsingCompleteEv(%"class.media::WebMListParser"* nonnull %4) #8
  %13 = select i1 %12, i32 %9, i32 0
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi i32 [ %13, %11 ], [ %9, %3 ]
  call void @_ZN5media14WebMListParserD1Ev(%"class.media::WebMListParser"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  ret i32 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5media14WebMListParserC1EiPNS_16WebMParserClientE(%"class.media::WebMListParser"*, i32, %"class.media::WebMParserClient"*) unnamed_addr #1

declare i32 @_ZN5media14WebMListParser5ParseEPKhi(%"class.media::WebMListParser"*, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5media14WebMListParser17IsParsingCompleteEv(%"class.media::WebMListParser"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN5media14WebMListParserD1Ev(%"class.media::WebMListParser"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::WebMParserClient"* @_ZN5media14WebMInfoParser11OnListStartEi(%"class.media::WebMInfoParser"* readnone, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 0
  ret %"class.media::WebMParserClient"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14WebMInfoParser9OnListEndEi(%"class.media::WebMInfoParser"* nocapture, i32) unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 357149030
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i64 1000000, i64* %5, align 8
  br label %9

9:                                                ; preds = %8, %4, %2
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14WebMInfoParser6OnUIntEil(%"class.media::WebMInfoParser"* nocapture, i32, i64) unnamed_addr #6 align 2 {
  %4 = icmp eq i32 %1, 2807729
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = icmp slt i64 %2, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i64 %2, i64* %8, align 8
  br label %12

12:                                               ; preds = %7, %5, %3, %11
  %13 = phi i1 [ true, %11 ], [ true, %3 ], [ false, %5 ], [ false, %7 ]
  ret i1 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14WebMInfoParser7OnFloatEid(%"class.media::WebMInfoParser"* nocapture, i32, double) unnamed_addr #6 align 2 {
  %4 = icmp eq i32 %1, 17545
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 2
  %7 = load double, double* %6, align 8
  %8 = fcmp une double %7, -1.000000e+00
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  store double %2, double* %6, align 8
  br label %10

10:                                               ; preds = %5, %3, %9
  %11 = phi i1 [ true, %9 ], [ false, %3 ], [ false, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14WebMInfoParser8OnBinaryEiPKhi(%"class.media::WebMInfoParser"* nocapture, i32, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"struct.base::Time::Exploded", align 16
  %7 = alloca %"class.base::Time", align 8
  %8 = icmp eq i32 %1, 17505
  br i1 %8, label %9, label %80

9:                                                ; preds = %4
  %10 = icmp eq i32 %3, 8
  br i1 %10, label %11, label %80

11:                                               ; preds = %9
  %12 = load i8, i8* %2, align 1
  %13 = zext i8 %12 to i64
  %14 = shl nuw nsw i64 %13, 8
  %15 = getelementptr inbounds i8, i8* %2, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = or i64 %14, %17
  %19 = shl nuw nsw i64 %18, 8
  %20 = getelementptr inbounds i8, i8* %2, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = or i64 %19, %22
  %24 = shl nuw nsw i64 %23, 8
  %25 = getelementptr inbounds i8, i8* %2, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = or i64 %24, %27
  %29 = shl i64 %28, 8
  %30 = getelementptr inbounds i8, i8* %2, i64 4
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = or i64 %29, %32
  %34 = shl i64 %33, 8
  %35 = getelementptr inbounds i8, i8* %2, i64 5
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = or i64 %34, %37
  %39 = shl i64 %38, 8
  %40 = getelementptr inbounds i8, i8* %2, i64 6
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = or i64 %39, %42
  %44 = shl i64 %43, 8
  %45 = getelementptr inbounds i8, i8* %2, i64 7
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = or i64 %44, %47
  %49 = bitcast %"struct.base::Time::Exploded"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #8
  %50 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %6, i64 0, i32 4
  %51 = bitcast %"struct.base::Time::Exploded"* %6 to <4 x i32>*
  store <4 x i32> <i32 2001, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 16
  %52 = bitcast %"class.base::Time"* %7 to i8*
  %53 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %53, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  %54 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %7, i64 0, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %6, %"class.base::Time"* nonnull %7) #8
  br i1 %55, label %56, label %79

56:                                               ; preds = %11
  %57 = sdiv i64 %48, 1000
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %57, -9223372036854775807
  %60 = icmp ult i64 %59, 2
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = icmp slt i64 %48, -999
  %63 = select i1 %62, i64 -9223372036854775808, i64 9223372036854775807
  %64 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 %57) #8
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = select i1 %65, i64 %63, i64 %66, !prof !2
  br label %76

68:                                               ; preds = %56
  %69 = add i64 %58, -9223372036854775807
  %70 = icmp ugt i64 %69, 1
  %71 = icmp eq i64 %58, %57
  %72 = or i1 %71, %70
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  br label %76

76:                                               ; preds = %61, %68, %73
  %77 = phi i64 [ %67, %61 ], [ %57, %68 ], [ %57, %73 ]
  %78 = getelementptr inbounds %"class.media::WebMInfoParser", %"class.media::WebMInfoParser"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %77, i64* %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #8
  br label %80

79:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #8
  br label %80

80:                                               ; preds = %4, %76, %79, %9
  %81 = phi i1 [ false, %79 ], [ false, %9 ], [ true, %76 ], [ true, %4 ]
  ret i1 %81
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5media14WebMInfoParser8OnStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.media::WebMInfoParser"* nocapture readnone, i32, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #5 align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
