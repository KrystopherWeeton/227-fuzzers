; ModuleID = '../../base/profiler/stack_sampler.cc'
source_filename = "../../base/profiler/stack_sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::StackSampler" = type { i32 (...)** }
%"class.base::StackSamplerTestDelegate" = type { i32 (...)** }
%"class.base::StackBuffer" = type { %"class.std::__1::unique_ptr.0", i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }

$_ZN4base12StackSampler10InitializeEv = comdat any

@_ZTVN4base12StackSamplerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackSampler"*)* @_ZN4base12StackSamplerD2Ev to i8*), i8* bitcast (void (%"class.base::StackSampler"*)* @_ZN4base12StackSamplerD0Ev to i8*), i8* bitcast (void (%"class.base::StackSampler"*)* @_ZN4base12StackSampler10InitializeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4base24StackSamplerTestDelegateE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackSamplerTestDelegate"*)* @_ZN4base24StackSamplerTestDelegateD2Ev to i8*), i8* bitcast (void (%"class.base::StackSamplerTestDelegate"*)* @_ZN4base24StackSamplerTestDelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4base12StackSamplerD1Ev = hidden unnamed_addr alias void (%"class.base::StackSampler"*), void (%"class.base::StackSampler"*)* @_ZN4base12StackSamplerD2Ev
@_ZN4base24StackSamplerTestDelegateD1Ev = hidden unnamed_addr alias void (%"class.base::StackSamplerTestDelegate"*), void (%"class.base::StackSamplerTestDelegate"*)* @_ZN4base24StackSamplerTestDelegateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base12StackSamplerC2Ev(%"class.base::StackSampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackSampler", %"class.base::StackSampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base12StackSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base12StackSamplerD2Ev(%"class.base::StackSampler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base12StackSamplerD0Ev(%"class.base::StackSampler"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::StackBuffer"* @_ZN4base12StackSampler17CreateStackBufferEv() local_unnamed_addr #4 align 2 {
  %1 = tail call i64 @_ZN4base12StackSampler18GetStackBufferSizeEv() #8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %6, label %3

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 16) #9
  %5 = bitcast i8* %4 to %"class.base::StackBuffer"*
  tail call void @_ZN4base11StackBufferC1Em(%"class.base::StackBuffer"* nonnull %5, i64 %1) #8
  br label %6

6:                                                ; preds = %0, %3
  %7 = phi %"class.base::StackBuffer"* [ %5, %3 ], [ null, %0 ]
  ret %"class.base::StackBuffer"* %7
}

declare i64 @_ZN4base12StackSampler18GetStackBufferSizeEv() local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base24StackSamplerTestDelegateD2Ev(%"class.base::StackSamplerTestDelegate"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base24StackSamplerTestDelegateD0Ev(%"class.base::StackSamplerTestDelegate"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base24StackSamplerTestDelegateC2Ev(%"class.base::StackSamplerTestDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackSamplerTestDelegate", %"class.base::StackSamplerTestDelegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base24StackSamplerTestDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12StackSampler10InitializeEv(%"class.base::StackSampler"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base11StackBufferC1Em(%"class.base::StackBuffer"*, i64) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
