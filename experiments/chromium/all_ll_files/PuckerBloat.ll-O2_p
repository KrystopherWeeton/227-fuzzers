; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/PuckerBloat.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/PuckerBloat.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %class.sk_sp.31*, %class.sk_sp.31*, %"class.std::__1::__compressed_pair.33" }
%class.sk_sp.31 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.sk_sp.31* }
%"class.sksg::GeometryEffect" = type { %"class.sksg::GeometryNode.base", %class.sk_sp.31, %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%class.SkPath = type <{ %class.sk_sp.39, i32, %"struct.std::__1::atomic.42", %"struct.std::__1::atomic.42", i8, i8 }>
%class.sk_sp.39 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.40, %class.SkTDArray.41, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.40 = type { i8*, i32, i32 }
%class.SkTDArray.41 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.47 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.42" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.47 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.48", [3 x i8] }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i8 }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect" = type <{ %"class.sksg::GeometryEffect", float, [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase", float, [4 x i8] }>
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.38 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.38 = type { %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* }
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.55, [384 x i64], %class.sk_sp.56, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.57", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.63" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.55 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.56 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkPaint = type <{ %class.sk_sp.69, %class.sk_sp.70, %class.sk_sp.71, %class.sk_sp.72, %class.sk_sp.73, %struct.SkRGBA4f, float, float, %union.anon.74, [4 x i8] }>
%class.sk_sp.69 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.70 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.71 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.72 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.73 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.74 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %struct.CubicInfo*, %struct.CubicInfo*, %"class.std::__1::__compressed_pair.77" }
%struct.CubicInfo = type { %struct.SkPoint, %struct.SkPoint, %struct.SkPoint }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %struct.CubicInfo* }
%class.anon = type { %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.std::__1::vector.75"* }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapter6onSyncEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*)* @_ZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %class.sk_sp.31*)* @_ZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffect18onRevalidateEffectERK5sk_spIN4sksg12GeometryNodeEE to i8*)] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder31AttachPuckerBloatGeometryEffectERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEE(%"class.std::__1::vector.29"* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %"class.std::__1::vector.29"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.31, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = alloca %class.sk_sp.31, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  %11 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %class.sk_sp.31** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.29"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  tail call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.29"* %0, i64 %17)
  %18 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.31*, %class.sk_sp.31** %18, align 8
  %20 = load %class.sk_sp.31*, %class.sk_sp.31** %11, align 8
  %21 = icmp eq %class.sk_sp.31* %19, %20
  br i1 %21, label %34, label %22

22:                                               ; preds = %4
  %23 = bitcast %class.sk_sp.31* %7 to i8*
  %24 = bitcast %class.sk_sp.31* %5 to i8*
  %25 = bitcast %class.sk_sp.31* %5 to i64*
  %26 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %28 = bitcast %class.sk_sp.6* %6 to i8*
  %29 = bitcast %class.sk_sp.6* %6 to i64*
  %30 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %31 = bitcast %class.sk_sp.31* %7 to i64*
  %32 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %7, i64 0, i32 0
  %33 = bitcast %class.sk_sp.31** %8 to i64*
  br label %35

34:                                               ; preds = %156, %4
  ret void

35:                                               ; preds = %22, %156
  %36 = phi %class.sk_sp.31* [ %19, %22 ], [ %157, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %37 = call i8* @_Znwm(i64 64) #15, !noalias !2
  %38 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 0, i32 0
  %39 = bitcast %class.sk_sp.31* %36 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !2
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %38, align 8, !noalias !2
  %41 = call i8* @_Znwm(i64 80) #15, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14, !noalias !7
  %42 = bitcast i8* %41 to %"class.sksg::GeometryEffect"*
  store i64 %40, i64* %25, align 8, !noalias !7
  call void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"* nonnull %42, %class.sk_sp.31* nonnull %5) #14, !noalias !7
  %43 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %26, align 8, !noalias !7
  %44 = icmp eq %"class.sksg::GeometryNode"* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel, !noalias !10
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %"class.sksg::GeometryNode"* %43 to %class.SkRefCntBase*
  %51 = bitcast %"class.sksg::GeometryNode"* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8, !noalias !10
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8, !noalias !10
  call void %54(%class.SkRefCntBase* nonnull %50) #14, !noalias !10
  br label %55

55:                                               ; preds = %49, %45, %35
  %56 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8, !noalias !7
  %57 = getelementptr inbounds i8, i8* %41, i64 72
  %58 = bitcast i8* %57 to float*
  store float 0.000000e+00, float* %58, align 8, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14, !noalias !7
  %59 = ptrtoint i8* %41 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 1, i32* %61, align 4, !noalias !2
  %62 = bitcast i8* %37 to i32 (...)***
  %63 = getelementptr inbounds i8, i8* %37, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 25, i1 false) #14, !noalias !2
  %64 = getelementptr inbounds i8, i8* %37, i64 48
  %65 = bitcast i8* %64 to i64*
  store i64 %59, i64* %65, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8, !noalias !2
  %66 = getelementptr inbounds i8, i8* %37, i64 56
  %67 = bitcast i8* %66 to float*
  store float 0.000000e+00, float* %67, align 8, !noalias !2
  %68 = bitcast i8* %37 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %69 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #14, !noalias !2
  %70 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %69, i64 0, i32 0, i64 0
  %71 = load i8, i8* %70, align 8, !noalias !2
  %72 = and i8 %71, 7
  %73 = icmp eq i8 %72, 7
  %74 = bitcast %"class.skjson::Value"* %69 to %"class.skjson::ObjectValue"*
  %75 = select i1 %73, %"class.skjson::ObjectValue"* %74, %"class.skjson::ObjectValue"* null
  %76 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %68, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %75, float* %67) #14, !noalias !2
  %77 = ptrtoint i8* %37 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %68) #14, !noalias !2
  %78 = bitcast i8* %64 to %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"**
  %79 = load %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %78, align 8, !noalias !11
  %80 = icmp eq %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %55
  %82 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %55, %81
  %85 = ptrtoint %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %79 to i64
  %86 = bitcast i8* %63 to %class.sk_sp.6**
  %87 = load %class.sk_sp.6*, %class.sk_sp.6** %86, align 8, !noalias !11
  %88 = getelementptr inbounds i8, i8* %37, i64 24
  %89 = bitcast i8* %88 to %class.sk_sp.6**
  %90 = load %class.sk_sp.6*, %class.sk_sp.6** %89, align 8, !noalias !11
  %91 = icmp eq %class.sk_sp.6* %87, %90
  br i1 %91, label %119, label %92

92:                                               ; preds = %84
  %93 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %27, align 8, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14, !noalias !11
  store i64 %77, i64* %29, align 8, !noalias !11
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 1
  %95 = load %class.sk_sp.6*, %class.sk_sp.6** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %class.sk_sp.6*, %class.sk_sp.6** %96, align 8
  %98 = icmp ult %class.sk_sp.6* %95, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %92
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %30, align 8, !noalias !11
  %100 = bitcast %class.sk_sp.6* %95 to i64*
  store i64 %77, i64* %100, align 8
  %101 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %95, i64 1
  %102 = ptrtoint %class.sk_sp.6* %101 to i64
  %103 = bitcast %class.sk_sp.6** %94 to i64*
  store i64 %102, i64* %103, align 8
  br label %105

104:                                              ; preds = %92
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %93, %class.sk_sp.6* nonnull dereferenceable(8) %6) #14
  br label %105

105:                                              ; preds = %104, %99
  %106 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %30, align 8, !noalias !11
  %107 = icmp eq %"class.skottie::internal::Animator"* %106, null
  br i1 %107, label %118, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %106, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %118

112:                                              ; preds = %108
  %113 = bitcast %"class.skottie::internal::Animator"* %106 to %class.SkRefCntBase*
  %114 = bitcast %"class.skottie::internal::Animator"* %106 to void (%class.SkRefCntBase*)***
  %115 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, i64 2
  %117 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, align 8
  call void %117(%class.SkRefCntBase* nonnull %113) #14
  br label %118

118:                                              ; preds = %112, %108, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14, !noalias !11
  br label %134

119:                                              ; preds = %84
  %120 = bitcast i8* %37 to %"class.skottie::internal::Animator"*
  %121 = bitcast i8* %37 to i1 (%"class.skottie::internal::Animator"*, float)***
  %122 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %121, align 8, !noalias !11
  %123 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %122, i64 3
  %124 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %123, align 8
  %125 = call zeroext i1 %124(%"class.skottie::internal::Animator"* nonnull %120, float 0.000000e+00) #14
  %126 = atomicrmw add i32* %61, i32 -1 acq_rel, !noalias !11
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %134

128:                                              ; preds = %119
  %129 = bitcast i8* %37 to %class.SkRefCntBase*
  %130 = bitcast i8* %37 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8, !noalias !11
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8
  call void %133(%class.SkRefCntBase* nonnull %129) #14
  br label %134

134:                                              ; preds = %118, %119, %128
  store i64 %85, i64* %31, align 8
  %135 = load %class.sk_sp.31*, %class.sk_sp.31** %8, align 8
  %136 = load %class.sk_sp.31*, %class.sk_sp.31** %9, align 8
  %137 = icmp ult %class.sk_sp.31* %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %32, align 8
  %139 = bitcast %class.sk_sp.31* %135 to i64*
  store i64 %85, i64* %139, align 8
  %140 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %135, i64 1
  %141 = ptrtoint %class.sk_sp.31* %140 to i64
  store i64 %141, i64* %33, align 8
  br label %143

142:                                              ; preds = %134
  call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"* %0, %class.sk_sp.31* nonnull dereferenceable(8) %7) #14
  br label %143

143:                                              ; preds = %138, %142
  %144 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %32, align 8
  %145 = icmp eq %"class.sksg::GeometryNode"* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %"class.sksg::GeometryNode"* %144 to %class.SkRefCntBase*
  %152 = bitcast %"class.sksg::GeometryNode"* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8
  call void %155(%class.SkRefCntBase* nonnull %151) #14
  br label %156

156:                                              ; preds = %150, %146, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  %157 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 1
  %158 = icmp eq %class.sk_sp.31* %157, %20
  br i1 %158, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.29"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.sk_sp.31** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.sk_sp.31*
  br i1 %10, label %12, label %140

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.sk_sp.31** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %class.sk_sp.31*
  %24 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %23, i64 %20
  %25 = ptrtoint %class.sk_sp.31* %24 to i64
  %26 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %23, i64 %1
  %27 = ptrtoint %class.sk_sp.31* %26 to i64
  %28 = inttoptr i64 %18 to %class.sk_sp.31*
  %29 = icmp eq %class.sk_sp.31* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %class.sk_sp.31, %class.sk_sp.31* %28, i64 -1, i32 0
  %32 = bitcast %"class.sksg::GeometryNode"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %class.sk_sp.31* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %class.sk_sp.31* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %41, i64 -1
  %45 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %42, i64 -1
  %46 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %45, i64 0, i32 0
  %47 = bitcast %class.sk_sp.31* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %46, align 8
  %49 = bitcast %class.sk_sp.31* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !12

52:                                               ; preds = %40, %30
  %53 = phi %class.sk_sp.31* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %class.sk_sp.31* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %class.sk_sp.31* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %135

58:                                               ; preds = %52, %58
  %59 = phi %class.sk_sp.31* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %class.sk_sp.31* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -1
  %62 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -1
  %63 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp.31* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %63, align 8
  %66 = bitcast %class.sk_sp.31* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -2
  %68 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -2
  %69 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %68, i64 0, i32 0
  %70 = bitcast %class.sk_sp.31* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %69, align 8
  %72 = bitcast %class.sk_sp.31* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -3
  %74 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -3
  %75 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %74, i64 0, i32 0
  %76 = bitcast %class.sk_sp.31* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %75, align 8
  %78 = bitcast %class.sk_sp.31* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -4
  %80 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -4
  %81 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.31* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %81, align 8
  %84 = bitcast %class.sk_sp.31* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -5
  %86 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -5
  %87 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.31* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %class.sk_sp.31* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -6
  %92 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -6
  %93 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.31* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %93, align 8
  %96 = bitcast %class.sk_sp.31* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -7
  %98 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -7
  %99 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.31* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %99, align 8
  %102 = bitcast %class.sk_sp.31* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -8
  %104 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -8
  %105 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.31* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %class.sk_sp.31* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %class.sk_sp.31* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %class.sk_sp.31* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %class.sk_sp.31* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %class.sk_sp.31*, %class.sk_sp.31** %13, align 8
  %115 = inttoptr i64 %113 to %class.sk_sp.31*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %class.sk_sp.31* %114, %115
  br i1 %116, label %135, label %117

117:                                              ; preds = %110, %133
  %118 = phi %class.sk_sp.31* [ %119, %133 ], [ %114, %110 ]
  %119 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %118, i64 -1
  %120 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %119, i64 0, i32 0
  %121 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %120, align 8
  %122 = icmp eq %"class.sksg::GeometryNode"* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %121, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %"class.sksg::GeometryNode"* %121 to %class.SkRefCntBase*
  %129 = bitcast %"class.sksg::GeometryNode"* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  tail call void %132(%class.SkRefCntBase* nonnull %128) #14
  br label %133

133:                                              ; preds = %127, %123, %117
  %134 = icmp eq %class.sk_sp.31* %119, %115
  br i1 %134, label %135, label %117

135:                                              ; preds = %133, %57, %110
  %136 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %133 ]
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %138, %135, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #5

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #14
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_118PuckerBloatAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %2, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter", %"class.skottie::internal::(anonymous namespace)::PuckerBloatAdapter"* %0, i64 0, i32 1
  %5 = load float, float* %4, align 8
  %6 = fdiv float %5, 1.000000e+02
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %3, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %8, %6
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  store float %6, float* %7, align 8
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %3 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %11, i1 zeroext true) #14
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

declare void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"*, %class.sk_sp.31*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4sksg14GeometryEffectD2Ev(%"class.sksg::GeometryEffect"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectD0Ev(%"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %0, i64 0, i32 0
  tail call void @_ZN4sksg14GeometryEffectD2Ev(%"class.sksg::GeometryEffect"* %2) #14
  %3 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #5

declare void @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb(%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1 zeroext) unnamed_addr #5

declare void @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint(%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #5

declare zeroext i1 @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint(%"class.sksg::GeometryEffect"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #5

declare void @_ZNK4sksg14GeometryEffect8onAsPathEv(%class.SkPath* sret, %"class.sksg::GeometryEffect"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffect18onRevalidateEffectERK5sk_spIN4sksg12GeometryNodeEE(%class.SkPath* noalias sret, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %class.sk_sp.31* nocapture readonly dereferenceable(8)) unnamed_addr #8 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca %class.SkPath, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkPoint*
  %9 = alloca %"class.std::__1::vector.75", align 8
  %10 = alloca %class.anon, align 8
  %11 = alloca [4 x %struct.SkPoint], align 16
  %12 = alloca %"class.SkPath::Iter", align 8
  %13 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %2, i64 0, i32 0
  %15 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %14, align 8
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %4, %"class.sksg::GeometryNode"* %16) #14
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %1, i64 0, i32 1
  %18 = load float, float* %17, align 8
  %19 = call float @llvm.fabs.f32(float %18) #14
  %20 = fcmp ugt float %19, 0x3F30000000000000
  br i1 %20, label %22, label %21

21:                                               ; preds = %3
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %0, %class.SkPath* nonnull dereferenceable(16) %4) #14
  br label %382

22:                                               ; preds = %3
  %23 = call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* nonnull %4) #14
  %24 = extractvalue { <2 x float>, <2 x float> } %23, 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 1
  %26 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %29 = extractelement <2 x float> %24, i32 0
  %30 = fmul float %29, 5.000000e-01
  %31 = extractelement <2 x float> %25, i32 0
  %32 = fmul float %31, 5.000000e-01
  %33 = fadd float %30, %32
  store float %33, float* %27, align 4
  %34 = extractelement <2 x float> %24, i32 1
  %35 = fmul float %34, 5.000000e-01
  %36 = extractelement <2 x float> %25, i32 1
  %37 = fmul float %36, 5.000000e-01
  %38 = fadd float %35, %37
  store float %38, float* %28, align 4
  %39 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #14
  %41 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #14
  store i64 0, i64* %7, align 8
  %42 = bitcast %"class.std::__1::vector.75"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %9, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %9, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #14
  %46 = bitcast %class.anon* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #14
  %47 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %48 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %49 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 2
  %50 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 3
  %51 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 4
  store %class.SkPath* %6, %class.SkPath** %47, align 8
  %52 = bitcast %struct.SkPoint** %48 to i64**
  store i64* %7, i64** %52, align 8
  store %struct.SkPoint* %5, %struct.SkPoint** %49, align 8
  store %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %1, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %50, align 8
  store %"class.std::__1::vector.75"* %9, %"class.std::__1::vector.75"** %51, align 8
  %53 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #14
  %54 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0
  %55 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 1
  %56 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 2
  %57 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 3
  %58 = bitcast %"class.SkPath::Iter"* %12 to i8*
  %59 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %58) #14
  %60 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %12, i64 0, i32 4, i32 0
  %61 = bitcast %"class.SkPath::Iter"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 32, i1 false)
  %62 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %12, i64 0, i32 6
  %63 = bitcast float* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 -1, i64 16, i1 false)
  %64 = bitcast i8* %62 to i64*
  store i64 -6148914691236517206, i64* %64, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %12, %class.SkPath* nonnull dereferenceable(16) %4, i1 zeroext true) #14
  %65 = bitcast %struct.SkPoint* %55 to i64*
  %66 = bitcast %struct.SkPoint* %56 to i64*
  %67 = bitcast %struct.SkPoint* %57 to i64*
  %68 = bitcast %struct.CubicInfo** %44 to i64*
  %69 = bitcast %"class.std::__1::vector.75"* %9 to i64*
  %70 = bitcast %struct.CubicInfo** %45 to i64*
  %71 = bitcast [4 x %struct.SkPoint]* %11 to i64*
  %72 = bitcast %struct.SkPoint* %56 to <2 x i32>*
  %73 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %74 = bitcast [4 x %struct.SkPoint]* %11 to <2 x float>*
  %75 = bitcast %struct.SkPoint* %55 to <2 x i32>*
  br label %76

76:                                               ; preds = %373, %22
  %77 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %12, %struct.SkPoint* nonnull %54) #14
  switch i32 %77, label %373 [
    i32 6, label %375
    i32 0, label %78
    i32 1, label %80
    i32 2, label %160
    i32 3, label %223
    i32 4, label %310
    i32 5, label %374
  ]

78:                                               ; preds = %76
  call fastcc void @_ZZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffect18onRevalidateEffectERK5sk_spIN4sksg12GeometryNodeEEENKUlvE_clEv(%class.anon* nonnull %10)
  %79 = load i64, i64* %71, align 16
  store i64 %79, i64* %7, align 8
  br label %373

80:                                               ; preds = %76
  %81 = load <2 x float>, <2 x float>* %74, align 16
  %82 = load <2 x i32>, <2 x i32>* %75, align 8
  %83 = bitcast <2 x i32> %82 to <2 x float>
  %84 = fsub <2 x float> %83, %81
  %85 = fmul <2 x float> %84, <float 0x3F847AE140000000, float 0x3F847AE140000000>
  %86 = fadd <2 x float> %81, %85
  %87 = fmul <2 x float> %84, <float 0x3FEFAE1480000000, float 0x3FEFAE1480000000>
  %88 = fadd <2 x float> %81, %87
  %89 = load %struct.CubicInfo*, %struct.CubicInfo** %44, align 8
  %90 = load %struct.CubicInfo*, %struct.CubicInfo** %45, align 8
  %91 = icmp ult %struct.CubicInfo* %89, %90
  %92 = ptrtoint %struct.CubicInfo* %90 to i64
  br i1 %91, label %93, label %107

93:                                               ; preds = %80
  %94 = bitcast %struct.CubicInfo* %89 to <2 x float>*
  store <2 x float> %86, <2 x float>* %94, align 4
  %95 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %89, i64 0, i32 1
  %96 = bitcast %struct.SkPoint* %95 to <2 x float>*
  store <2 x float> %88, <2 x float>* %96, align 4
  %97 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %89, i64 0, i32 2
  %98 = bitcast %struct.SkPoint* %97 to i64*
  %99 = extractelement <2 x i32> %82, i32 1
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = extractelement <2 x i32> %82, i32 0
  %103 = zext i32 %102 to i64
  %104 = or i64 %101, %103
  store i64 %104, i64* %98, align 4
  %105 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %89, i64 1
  %106 = ptrtoint %struct.CubicInfo* %105 to i64
  store i64 %106, i64* %68, align 8
  br label %373

107:                                              ; preds = %80
  %108 = ptrtoint %struct.CubicInfo* %89 to i64
  %109 = load i64, i64* %69, align 8
  %110 = sub i64 %108, %109
  %111 = sdiv exact i64 %110, 24
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 768614336404564650
  br i1 %113, label %114, label %116

114:                                              ; preds = %107
  %115 = bitcast %"class.std::__1::vector.75"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %115) #16
  unreachable

116:                                              ; preds = %107
  %117 = sub i64 %92, %109
  %118 = sdiv exact i64 %117, 24
  %119 = icmp ult i64 %118, 384307168202282325
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = shl nsw i64 %118, 1
  %122 = icmp ult i64 %121, %112
  %123 = select i1 %122, i64 %112, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %120, %116
  %126 = phi i64 [ %123, %120 ], [ 768614336404564650, %116 ]
  %127 = mul i64 %126, 24
  %128 = call i8* @_Znwm(i64 %127) #15
  %129 = bitcast i8* %128 to %struct.CubicInfo*
  br label %130

130:                                              ; preds = %125, %120
  %131 = phi i64 [ %126, %125 ], [ 0, %120 ]
  %132 = phi %struct.CubicInfo* [ %129, %125 ], [ null, %120 ]
  %133 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %132, i64 %111
  %134 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %132, i64 %131
  %135 = ptrtoint %struct.CubicInfo* %134 to i64
  %136 = bitcast %struct.CubicInfo* %133 to <2 x float>*
  store <2 x float> %86, <2 x float>* %136, align 4
  %137 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %132, i64 %111, i32 1
  %138 = bitcast %struct.SkPoint* %137 to <2 x float>*
  store <2 x float> %88, <2 x float>* %138, align 4
  %139 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %132, i64 %111, i32 2
  %140 = bitcast %struct.SkPoint* %139 to i64*
  %141 = extractelement <2 x i32> %82, i32 1
  %142 = zext i32 %141 to i64
  %143 = shl nuw i64 %142, 32
  %144 = extractelement <2 x i32> %82, i32 0
  %145 = zext i32 %144 to i64
  %146 = or i64 %143, %145
  store i64 %146, i64* %140, align 4
  %147 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %133, i64 1
  %148 = ptrtoint %struct.CubicInfo* %147 to i64
  %149 = sdiv exact i64 %110, -24
  %150 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %133, i64 %149
  %151 = ptrtoint %struct.CubicInfo* %150 to i64
  %152 = icmp sgt i64 %110, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %130
  %154 = bitcast %struct.CubicInfo* %150 to i8*
  %155 = inttoptr i64 %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %110, i1 false) #14
  br label %156

156:                                              ; preds = %153, %130
  store i64 %151, i64* %69, align 8
  store i64 %148, i64* %68, align 8
  store i64 %135, i64* %70, align 8
  %157 = icmp eq i64 %109, 0
  br i1 %157, label %373, label %158

158:                                              ; preds = %156
  %159 = inttoptr i64 %109 to i8*
  call void @_ZdlPv(i8* %159) #15
  br label %373

160:                                              ; preds = %76
  call void @_Z20SkConvertQuadToCubicPK7SkPointPS_(%struct.SkPoint* nonnull %54, %struct.SkPoint* nonnull %54) #14
  %161 = load i64, i64* %65, align 8
  %162 = load i64, i64* %66, align 16
  %163 = load i64, i64* %67, align 8
  %164 = load %struct.CubicInfo*, %struct.CubicInfo** %44, align 8
  %165 = load %struct.CubicInfo*, %struct.CubicInfo** %45, align 8
  %166 = icmp ult %struct.CubicInfo* %164, %165
  %167 = ptrtoint %struct.CubicInfo* %165 to i64
  br i1 %166, label %168, label %176

168:                                              ; preds = %160
  %169 = bitcast %struct.CubicInfo* %164 to i64*
  store i64 %161, i64* %169, align 4
  %170 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %164, i64 0, i32 1
  %171 = bitcast %struct.SkPoint* %170 to i64*
  store i64 %162, i64* %171, align 4
  %172 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %164, i64 0, i32 2
  %173 = bitcast %struct.SkPoint* %172 to i64*
  store i64 %163, i64* %173, align 4
  %174 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %164, i64 1
  %175 = ptrtoint %struct.CubicInfo* %174 to i64
  store i64 %175, i64* %68, align 8
  br label %373

176:                                              ; preds = %160
  %177 = ptrtoint %struct.CubicInfo* %164 to i64
  %178 = load i64, i64* %69, align 8
  %179 = sub i64 %177, %178
  %180 = sdiv exact i64 %179, 24
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 768614336404564650
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast %"class.std::__1::vector.75"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %184) #16
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %167, %178
  %187 = sdiv exact i64 %186, 24
  %188 = icmp ult i64 %187, 384307168202282325
  br i1 %188, label %189, label %194

189:                                              ; preds = %185
  %190 = shl nsw i64 %187, 1
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %189, %185
  %195 = phi i64 [ %192, %189 ], [ 768614336404564650, %185 ]
  %196 = mul i64 %195, 24
  %197 = call i8* @_Znwm(i64 %196) #15
  %198 = bitcast i8* %197 to %struct.CubicInfo*
  br label %199

199:                                              ; preds = %194, %189
  %200 = phi i64 [ %195, %194 ], [ 0, %189 ]
  %201 = phi %struct.CubicInfo* [ %198, %194 ], [ null, %189 ]
  %202 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %201, i64 %180
  %203 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %201, i64 %200
  %204 = ptrtoint %struct.CubicInfo* %203 to i64
  %205 = bitcast %struct.CubicInfo* %202 to i64*
  store i64 %161, i64* %205, align 4
  %206 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %201, i64 %180, i32 1
  %207 = bitcast %struct.SkPoint* %206 to i64*
  store i64 %162, i64* %207, align 4
  %208 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %201, i64 %180, i32 2
  %209 = bitcast %struct.SkPoint* %208 to i64*
  store i64 %163, i64* %209, align 4
  %210 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %202, i64 1
  %211 = ptrtoint %struct.CubicInfo* %210 to i64
  %212 = sdiv exact i64 %179, -24
  %213 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %202, i64 %212
  %214 = ptrtoint %struct.CubicInfo* %213 to i64
  %215 = icmp sgt i64 %179, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %199
  %217 = bitcast %struct.CubicInfo* %213 to i8*
  %218 = inttoptr i64 %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %179, i1 false) #14
  br label %219

219:                                              ; preds = %216, %199
  store i64 %214, i64* %69, align 8
  store i64 %211, i64* %68, align 8
  store i64 %204, i64* %70, align 8
  %220 = icmp eq i64 %178, 0
  br i1 %220, label %373, label %221

221:                                              ; preds = %219
  %222 = inttoptr i64 %178 to i8*
  call void @_ZdlPv(i8* %222) #15
  br label %373

223:                                              ; preds = %76
  %224 = load %struct.CubicInfo*, %struct.CubicInfo** %43, align 8
  %225 = load %struct.CubicInfo*, %struct.CubicInfo** %44, align 8
  %226 = icmp eq %struct.CubicInfo* %224, %225
  %227 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %225, i64 -1, i32 2
  %228 = select i1 %226, %struct.SkPoint* %8, %struct.SkPoint* %227
  %229 = bitcast %struct.SkPoint* %228 to <2 x float>*
  %230 = load <2 x float>, <2 x float>* %229, align 4
  %231 = load <2 x i32>, <2 x i32>* %72, align 16
  %232 = load <2 x float>, <2 x float>* %73, align 8
  %233 = fsub <2 x float> %230, %232
  %234 = fmul <2 x float> %233, <float 0x3FDCAD6C80000000, float 0x3FDCAD6C80000000>
  %235 = fadd <2 x float> %232, %234
  %236 = bitcast <2 x i32> %231 to <2 x float>
  %237 = fsub <2 x float> %236, %232
  %238 = fmul <2 x float> %237, <float 0x3FDCAD6C80000000, float 0x3FDCAD6C80000000>
  %239 = fadd <2 x float> %232, %238
  %240 = load %struct.CubicInfo*, %struct.CubicInfo** %45, align 8
  %241 = icmp ult %struct.CubicInfo* %225, %240
  %242 = ptrtoint %struct.CubicInfo* %240 to i64
  %243 = ptrtoint %struct.CubicInfo* %224 to i64
  br i1 %241, label %244, label %258

244:                                              ; preds = %223
  %245 = bitcast %struct.CubicInfo* %225 to <2 x float>*
  store <2 x float> %235, <2 x float>* %245, align 4
  %246 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %225, i64 0, i32 1
  %247 = bitcast %struct.SkPoint* %246 to <2 x float>*
  store <2 x float> %239, <2 x float>* %247, align 4
  %248 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %225, i64 0, i32 2
  %249 = bitcast %struct.SkPoint* %248 to i64*
  %250 = extractelement <2 x i32> %231, i32 1
  %251 = zext i32 %250 to i64
  %252 = shl nuw i64 %251, 32
  %253 = extractelement <2 x i32> %231, i32 0
  %254 = zext i32 %253 to i64
  %255 = or i64 %252, %254
  store i64 %255, i64* %249, align 4
  %256 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %225, i64 1
  %257 = ptrtoint %struct.CubicInfo* %256 to i64
  store i64 %257, i64* %68, align 8
  br label %373

258:                                              ; preds = %223
  %259 = ptrtoint %struct.CubicInfo* %225 to i64
  %260 = sub i64 %259, %243
  %261 = sdiv exact i64 %260, 24
  %262 = add nsw i64 %261, 1
  %263 = icmp ugt i64 %262, 768614336404564650
  br i1 %263, label %264, label %266

264:                                              ; preds = %258
  %265 = bitcast %"class.std::__1::vector.75"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %265) #16
  unreachable

266:                                              ; preds = %258
  %267 = sub i64 %242, %243
  %268 = sdiv exact i64 %267, 24
  %269 = icmp ult i64 %268, 384307168202282325
  br i1 %269, label %270, label %275

270:                                              ; preds = %266
  %271 = shl nsw i64 %268, 1
  %272 = icmp ult i64 %271, %262
  %273 = select i1 %272, i64 %262, i64 %271
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %280, label %275

275:                                              ; preds = %270, %266
  %276 = phi i64 [ %273, %270 ], [ 768614336404564650, %266 ]
  %277 = mul i64 %276, 24
  %278 = call i8* @_Znwm(i64 %277) #15
  %279 = bitcast i8* %278 to %struct.CubicInfo*
  br label %280

280:                                              ; preds = %275, %270
  %281 = phi i64 [ %276, %275 ], [ 0, %270 ]
  %282 = phi %struct.CubicInfo* [ %279, %275 ], [ null, %270 ]
  %283 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %282, i64 %261
  %284 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %282, i64 %281
  %285 = ptrtoint %struct.CubicInfo* %284 to i64
  %286 = bitcast %struct.CubicInfo* %283 to <2 x float>*
  store <2 x float> %235, <2 x float>* %286, align 4
  %287 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %282, i64 %261, i32 1
  %288 = bitcast %struct.SkPoint* %287 to <2 x float>*
  store <2 x float> %239, <2 x float>* %288, align 4
  %289 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %282, i64 %261, i32 2
  %290 = bitcast %struct.SkPoint* %289 to i64*
  %291 = extractelement <2 x i32> %231, i32 1
  %292 = zext i32 %291 to i64
  %293 = shl nuw i64 %292, 32
  %294 = extractelement <2 x i32> %231, i32 0
  %295 = zext i32 %294 to i64
  %296 = or i64 %293, %295
  store i64 %296, i64* %290, align 4
  %297 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %283, i64 1
  %298 = ptrtoint %struct.CubicInfo* %297 to i64
  %299 = sdiv exact i64 %260, -24
  %300 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %283, i64 %299
  %301 = ptrtoint %struct.CubicInfo* %300 to i64
  %302 = icmp sgt i64 %260, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %280
  %304 = bitcast %struct.CubicInfo* %300 to i8*
  %305 = bitcast %struct.CubicInfo* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %304, i8* align 4 %305, i64 %260, i1 false) #14
  br label %306

306:                                              ; preds = %303, %280
  store i64 %301, i64* %69, align 8
  store i64 %298, i64* %68, align 8
  store i64 %285, i64* %70, align 8
  %307 = icmp eq %struct.CubicInfo* %224, null
  br i1 %307, label %373, label %308

308:                                              ; preds = %306
  %309 = bitcast %struct.CubicInfo* %224 to i8*
  call void @_ZdlPv(i8* %309) #15
  br label %373

310:                                              ; preds = %76
  %311 = load i64, i64* %65, align 8
  %312 = load i64, i64* %66, align 16
  %313 = load i64, i64* %67, align 8
  %314 = load %struct.CubicInfo*, %struct.CubicInfo** %44, align 8
  %315 = load %struct.CubicInfo*, %struct.CubicInfo** %45, align 8
  %316 = icmp ult %struct.CubicInfo* %314, %315
  %317 = ptrtoint %struct.CubicInfo* %315 to i64
  br i1 %316, label %318, label %326

318:                                              ; preds = %310
  %319 = bitcast %struct.CubicInfo* %314 to i64*
  store i64 %311, i64* %319, align 4
  %320 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %314, i64 0, i32 1
  %321 = bitcast %struct.SkPoint* %320 to i64*
  store i64 %312, i64* %321, align 4
  %322 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %314, i64 0, i32 2
  %323 = bitcast %struct.SkPoint* %322 to i64*
  store i64 %313, i64* %323, align 4
  %324 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %314, i64 1
  %325 = ptrtoint %struct.CubicInfo* %324 to i64
  store i64 %325, i64* %68, align 8
  br label %373

326:                                              ; preds = %310
  %327 = ptrtoint %struct.CubicInfo* %314 to i64
  %328 = load i64, i64* %69, align 8
  %329 = sub i64 %327, %328
  %330 = sdiv exact i64 %329, 24
  %331 = add nsw i64 %330, 1
  %332 = icmp ugt i64 %331, 768614336404564650
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.std::__1::vector.75"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %334) #16
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %317, %328
  %337 = sdiv exact i64 %336, 24
  %338 = icmp ult i64 %337, 384307168202282325
  br i1 %338, label %339, label %344

339:                                              ; preds = %335
  %340 = shl nsw i64 %337, 1
  %341 = icmp ult i64 %340, %331
  %342 = select i1 %341, i64 %331, i64 %340
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %349, label %344

344:                                              ; preds = %339, %335
  %345 = phi i64 [ %342, %339 ], [ 768614336404564650, %335 ]
  %346 = mul i64 %345, 24
  %347 = call i8* @_Znwm(i64 %346) #15
  %348 = bitcast i8* %347 to %struct.CubicInfo*
  br label %349

349:                                              ; preds = %344, %339
  %350 = phi i64 [ %345, %344 ], [ 0, %339 ]
  %351 = phi %struct.CubicInfo* [ %348, %344 ], [ null, %339 ]
  %352 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %351, i64 %330
  %353 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %351, i64 %350
  %354 = ptrtoint %struct.CubicInfo* %353 to i64
  %355 = bitcast %struct.CubicInfo* %352 to i64*
  store i64 %311, i64* %355, align 4
  %356 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %351, i64 %330, i32 1
  %357 = bitcast %struct.SkPoint* %356 to i64*
  store i64 %312, i64* %357, align 4
  %358 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %351, i64 %330, i32 2
  %359 = bitcast %struct.SkPoint* %358 to i64*
  store i64 %313, i64* %359, align 4
  %360 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %352, i64 1
  %361 = ptrtoint %struct.CubicInfo* %360 to i64
  %362 = sdiv exact i64 %329, -24
  %363 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %352, i64 %362
  %364 = ptrtoint %struct.CubicInfo* %363 to i64
  %365 = icmp sgt i64 %329, 0
  br i1 %365, label %366, label %369

366:                                              ; preds = %349
  %367 = bitcast %struct.CubicInfo* %363 to i8*
  %368 = inttoptr i64 %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %367, i8* align 4 %368, i64 %329, i1 false) #14
  br label %369

369:                                              ; preds = %366, %349
  store i64 %364, i64* %69, align 8
  store i64 %361, i64* %68, align 8
  store i64 %354, i64* %70, align 8
  %370 = icmp eq i64 %328, 0
  br i1 %370, label %373, label %371

371:                                              ; preds = %369
  %372 = inttoptr i64 %328 to i8*
  call void @_ZdlPv(i8* %372) #15
  br label %373

373:                                              ; preds = %371, %369, %318, %308, %306, %244, %221, %219, %168, %158, %156, %93, %76, %374, %78
  br label %76

374:                                              ; preds = %76
  call fastcc void @_ZZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffect18onRevalidateEffectERK5sk_spIN4sksg12GeometryNodeEEENKUlvE_clEv(%class.anon* nonnull %10)
  br label %373

375:                                              ; preds = %76
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %0, %class.SkPath* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #14
  %376 = load %struct.CubicInfo*, %struct.CubicInfo** %43, align 8
  %377 = icmp eq %struct.CubicInfo* %376, null
  br i1 %377, label %381, label %378

378:                                              ; preds = %375
  %379 = ptrtoint %struct.CubicInfo* %376 to i64
  store i64 %379, i64* %68, align 8
  %380 = bitcast %struct.CubicInfo* %376 to i8*
  call void @_ZdlPv(i8* %380) #15
  br label %381

381:                                              ; preds = %375, %378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br label %382

382:                                              ; preds = %381, %21
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  ret void
}

declare void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret, %"class.sksg::GeometryNode"*) local_unnamed_addr #5

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath*) local_unnamed_addr #5

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #5

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #5

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZZN7skottie8internal12_GLOBAL__N_117PuckerBloatEffect18onRevalidateEffectERK5sk_spIN4sksg12GeometryNodeEEENKUlvE_clEv(%class.anon* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %3 = load %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %2, align 8
  %4 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %5 = load %class.SkPath*, %class.SkPath** %4, align 8
  %6 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %7 = load %struct.SkPoint*, %struct.SkPoint** %6, align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %9 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %10 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %3, i64 0, i32 1
  %11 = load float, float* %10, align 8
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %20
  %22 = fmul float %11, %16
  %23 = fmul float %11, %21
  %24 = fadd float %15, %22
  %25 = fadd float %20, %23
  %26 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %5, float %24, float %25) #14
  %27 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %28 = load %"class.std::__1::vector.75"*, %"class.std::__1::vector.75"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %28, i64 0, i32 0, i32 0
  %30 = load %struct.CubicInfo*, %struct.CubicInfo** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %28, i64 0, i32 0, i32 1
  %32 = load %struct.CubicInfo*, %struct.CubicInfo** %31, align 8
  %33 = icmp eq %struct.CubicInfo* %30, %32
  %34 = load %class.SkPath*, %class.SkPath** %4, align 8
  br i1 %33, label %35, label %43

35:                                               ; preds = %43, %1
  %36 = phi %class.SkPath* [ %34, %1 ], [ %86, %43 ]
  %37 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %36) #14
  %38 = load %"class.std::__1::vector.75"*, %"class.std::__1::vector.75"** %27, align 8
  %39 = bitcast %"class.std::__1::vector.75"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %38, i64 0, i32 0, i32 1
  %42 = bitcast %struct.CubicInfo** %41 to i64*
  store i64 %40, i64* %42, align 8
  ret void

43:                                               ; preds = %1, %43
  %44 = phi %class.SkPath* [ %86, %43 ], [ %34, %1 ]
  %45 = phi %struct.CubicInfo* [ %84, %43 ], [ %30, %1 ]
  %46 = load %struct.SkPoint*, %struct.SkPoint** %8, align 8
  %47 = load float, float* %10, align 8
  %48 = fsub float -0.000000e+00, %47
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = fsub float %50, %52
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 0, i32 1
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 0, i32 1
  %57 = load float, float* %56, align 4
  %58 = fsub float %55, %57
  %59 = fmul float %53, %48
  %60 = fmul float %58, %48
  %61 = fadd float %52, %59
  %62 = fadd float %57, %60
  %63 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 1, i32 0
  %64 = load float, float* %63, align 4
  %65 = fsub float %50, %64
  %66 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 1, i32 1
  %67 = load float, float* %66, align 4
  %68 = fsub float %55, %67
  %69 = fmul float %65, %48
  %70 = fmul float %68, %48
  %71 = fadd float %64, %69
  %72 = fadd float %67, %70
  %73 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 2, i32 0
  %74 = load float, float* %73, align 4
  %75 = fsub float %50, %74
  %76 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 0, i32 2, i32 1
  %77 = load float, float* %76, align 4
  %78 = fsub float %55, %77
  %79 = fmul float %47, %75
  %80 = fmul float %47, %78
  %81 = fadd float %74, %79
  %82 = fadd float %77, %80
  %83 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %44, float %61, float %62, float %71, float %72, float %81, float %82) #14
  %84 = getelementptr inbounds %struct.CubicInfo, %struct.CubicInfo* %45, i64 1
  %85 = icmp eq %struct.CubicInfo* %84, %32
  %86 = load %class.SkPath*, %class.SkPath** %4, align 8
  br i1 %85, label %35, label %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_Z20SkConvertQuadToCubicPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #5

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #5

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"*, %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect", %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::(anonymous namespace)::PuckerBloatEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #14
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #12 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #5

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !14

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"*, %class.sk_sp.31* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.31** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.31** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %class.sk_sp.31*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.31* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.31* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.31* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %40, align 8
  %43 = bitcast %class.sk_sp.31* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %37, i64 1
  %45 = ptrtoint %class.sk_sp.31* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.31*, %class.sk_sp.31** %46, align 8
  %48 = ptrtoint %class.sk_sp.31* %47 to i64
  %49 = load %class.sk_sp.31*, %class.sk_sp.31** %3, align 8
  %50 = icmp eq %class.sk_sp.31* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.31, %class.sk_sp.31* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.sksg::GeometryNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.31* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.31* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.31* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %65, align 8
  %68 = bitcast %class.sk_sp.31* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !15

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.31* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.31* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.31* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.31* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.31* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.31* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %81, align 8
  %84 = bitcast %class.sk_sp.31* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.31* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %class.sk_sp.31* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.31* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %93, align 8
  %96 = bitcast %class.sk_sp.31* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.31* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %99, align 8
  %102 = bitcast %class.sk_sp.31* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.31* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %class.sk_sp.31* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.31* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %111, align 8
  %114 = bitcast %class.sk_sp.31* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.31* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %117, align 8
  %120 = bitcast %class.sk_sp.31* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.31* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %123, align 8
  %126 = bitcast %class.sk_sp.31* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.31* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.31* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.31*, %class.sk_sp.31** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.31* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.31* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.31* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.31*
  %138 = icmp eq %class.sk_sp.31* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.31* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %141, i64 0, i32 0
  %143 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %142, align 8
  %144 = icmp eq %"class.sksg::GeometryNode"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.sksg::GeometryNode"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.sksg::GeometryNode"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.31* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg12GeometryNodeEEEEESE_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_118PuckerBloatAdapterENS2_17PuckerBloatEffectEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderE5sk_spIN4sksg12GeometryNodeEEEEESE_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_118PuckerBloatAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_118PuckerBloatAdapterEJRKN6skjson11ObjectValueERKS1_5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectEJ5sk_spIN4sksg12GeometryNodeEEEES4_IT_EDpOT0_: argument 0"}
!9 = distinct !{!9, !"_Z10sk_make_spIN7skottie8internal12_GLOBAL__N_117PuckerBloatEffectEJ5sk_spIN4sksg12GeometryNodeEEEES4_IT_EDpOT0_"}
!10 = !{!8, !3}
!11 = !{!5}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
