; ModuleID = '../../net/tools/transport_security_state_generator/transport_security_state_entry.cc'
source_filename = "../../net/tools/transport_security_state_generator/transport_security_state_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.net::transport_security_state::TransportSecurityStateEntry" = type { %"class.std::__1::basic_string", i8, i8, i8, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::transport_security_state::TransportSecurityStateTrieEntry" = type { %"class.net::huffman_trie::TrieEntry", %"class.std::__1::map"*, %"class.std::__1::map"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"* }
%"class.net::huffman_trie::TrieEntry" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::huffman_trie::TrieBitBuffer" = type { i8, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"*, %"class.std::__1::__compressed_pair.9" }
%"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition" = type { i8, i8, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.net::huffman_trie::TrieBitBuffer::BitsOrPosition"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

@_ZTVN3net24transport_security_state31TransportSecurityStateTrieEntryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*)* @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD2Ev to i8*), i8* bitcast (void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*)* @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::transport_security_state::TransportSecurityStateTrieEntry"*)* @_ZNK3net24transport_security_state31TransportSecurityStateTrieEntry4nameEv to i8*), i8* bitcast (i1 (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*, %"class.net::huffman_trie::TrieBitBuffer"*)* @_ZNK3net24transport_security_state31TransportSecurityStateTrieEntry10WriteEntryEPNS_12huffman_trie13TrieBitBufferE to i8*)] }, align 8

@_ZN3net24transport_security_state27TransportSecurityStateEntryC1Ev = hidden unnamed_addr alias void (%"struct.net::transport_security_state::TransportSecurityStateEntry"*), void (%"struct.net::transport_security_state::TransportSecurityStateEntry"*)* @_ZN3net24transport_security_state27TransportSecurityStateEntryC2Ev
@_ZN3net24transport_security_state27TransportSecurityStateEntryD1Ev = hidden unnamed_addr alias void (%"struct.net::transport_security_state::TransportSecurityStateEntry"*), void (%"struct.net::transport_security_state::TransportSecurityStateEntry"*)* @_ZN3net24transport_security_state27TransportSecurityStateEntryD2Ev
@_ZN3net24transport_security_state31TransportSecurityStateTrieEntryC1ERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEjNS2_4lessIS9_EENS7_INS2_4pairIKS9_jEEEEEESI_PNS0_27TransportSecurityStateEntryE = hidden unnamed_addr alias void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*, %"class.std::__1::map"*, %"class.std::__1::map"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"*), void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*, %"class.std::__1::map"*, %"class.std::__1::map"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"*)* @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryC2ERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEjNS2_4lessIS9_EENS7_INS2_4pairIKS9_jEEEEEESI_PNS0_27TransportSecurityStateEntryE
@_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD1Ev = hidden unnamed_addr alias void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*), void (%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*)* @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24transport_security_state27TransportSecurityStateEntryC2Ev(%"struct.net::transport_security_state::TransportSecurityStateEntry"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0, i64 0, i32 6
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = bitcast %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 27, i1 false)
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24transport_security_state27TransportSecurityStateEntryD2Ev(%"struct.net::transport_security_state::TransportSecurityStateEntry"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0, i64 0, i32 6
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %10, %16
  %20 = bitcast %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #7
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryC2ERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEjNS2_4lessIS9_EENS7_INS2_4pairIKS9_jEEEEEESI_PNS0_27TransportSecurityStateEntryE(%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*, %"class.std::__1::map"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24), %"struct.net::transport_security_state::TransportSecurityStateEntry"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9TrieEntryC2Ev(%"class.net::huffman_trie::TrieEntry"* %5) #6
  %6 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net24transport_security_state31TransportSecurityStateTrieEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 1
  store %"class.std::__1::map"* %1, %"class.std::__1::map"** %7, align 8
  %8 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 2
  store %"class.std::__1::map"* %2, %"class.std::__1::map"** %8, align 8
  %9 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 3
  store %"struct.net::transport_security_state::TransportSecurityStateEntry"* %3, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %9, align 8
  ret void
}

declare void @_ZN3net12huffman_trie9TrieEntryC2Ev(%"class.net::huffman_trie::TrieEntry"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net12huffman_trie9TrieEntryD2Ev(%"class.net::huffman_trie::TrieEntry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD2Ev(%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9TrieEntryD2Ev(%"class.net::huffman_trie::TrieEntry"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24transport_security_state31TransportSecurityStateTrieEntryD0Ev(%"class.net::transport_security_state::TransportSecurityStateTrieEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 0
  tail call void @_ZN3net12huffman_trie9TrieEntryD2Ev(%"class.net::huffman_trie::TrieEntry"* %2) #6
  %3 = bitcast %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net24transport_security_state31TransportSecurityStateTrieEntry4nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %1, i64 0, i32 3
  %4 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %5 = bitcast %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = bitcast %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #6
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %14, i64 %16) #6
  br label %17

17:                                               ; preds = %9, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net24transport_security_state31TransportSecurityStateTrieEntry10WriteEntryEPNS_12huffman_trie13TrieBitBufferE(%"class.net::transport_security_state::TransportSecurityStateTrieEntry"* nocapture readonly, %"class.net::huffman_trie::TrieBitBuffer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 3
  %4 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %5 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 2
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 4
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %12
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %4, i64 0, i32 5
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext 1) #6
  br label %101

31:                                               ; preds = %2, %8, %23, %26
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext 0) #6
  %32 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %33 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext %34) #6
  %35 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %36 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 1, !range !2
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext %37) #6
  %38 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %39 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %38, i64 0, i32 4
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %38, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %31
  %48 = zext i8 %42 to i64
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %49
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext 1) #6
  %53 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 2
  %54 = load %"class.std::__1::map"*, %"class.std::__1::map"** %53, align 8
  %55 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %56 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %55, i64 0, i32 4
  %57 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %54, i64 0, i32 0
  %58 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %57, %"class.std::__1::basic_string"* dereferenceable(24) %56) #6
  %59 = load %"class.std::__1::map"*, %"class.std::__1::map"** %53, align 8
  %60 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %59, i64 0, i32 0, i32 1, i32 0, i32 0
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %58, %60
  br i1 %61, label %101, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 7
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to i32*
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 255
  %67 = icmp ugt i32 %66, 15
  br i1 %67, label %101, label %68

68:                                               ; preds = %62
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteBitsEjh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i32 %66, i8 zeroext 4) #6
  %69 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %70 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %69, i64 0, i32 3
  %75 = load i8, i8* %74, align 2, !range !2
  br label %76

76:                                               ; preds = %49, %73
  %77 = phi i8 [ %75, %73 ], [ 0, %49 ]
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext %77) #6
  br label %78

78:                                               ; preds = %76, %68
  %79 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %80 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %79, i64 0, i32 5
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext 1) #6
  %84 = getelementptr inbounds %"class.net::transport_security_state::TransportSecurityStateTrieEntry", %"class.net::transport_security_state::TransportSecurityStateTrieEntry"* %0, i64 0, i32 1
  %85 = load %"class.std::__1::map"*, %"class.std::__1::map"** %84, align 8
  %86 = load %"struct.net::transport_security_state::TransportSecurityStateEntry"*, %"struct.net::transport_security_state::TransportSecurityStateEntry"** %3, align 8
  %87 = getelementptr inbounds %"struct.net::transport_security_state::TransportSecurityStateEntry", %"struct.net::transport_security_state::TransportSecurityStateEntry"* %86, i64 0, i32 6
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %85, i64 0, i32 0
  %89 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %88, %"class.std::__1::basic_string"* dereferenceable(24) %87) #6
  %90 = load %"class.std::__1::map"*, %"class.std::__1::map"** %84, align 8
  %91 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %90, i64 0, i32 0, i32 1, i32 0, i32 0
  %92 = icmp eq %"class.std::__1::__tree_end_node"* %89, %91
  br i1 %92, label %101, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 7
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 255
  %98 = icmp ugt i32 %97, 15
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer9WriteBitsEjh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i32 %97, i8 zeroext 4) #6
  br label %101

100:                                              ; preds = %78
  tail call void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"* %1, i8 zeroext 0) #6
  br label %101

101:                                              ; preds = %93, %83, %100, %99, %52, %62, %30
  %102 = phi i1 [ true, %30 ], [ false, %62 ], [ false, %52 ], [ true, %99 ], [ true, %100 ], [ false, %83 ], [ false, %93 ]
  ret i1 %102
}

declare void @_ZN3net12huffman_trie13TrieBitBuffer8WriteBitEh(%"class.net::huffman_trie::TrieBitBuffer"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN3net12huffman_trie13TrieBitBuffer9WriteBitsEjh(%"class.net::huffman_trie::TrieBitBuffer"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #6
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #6
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
