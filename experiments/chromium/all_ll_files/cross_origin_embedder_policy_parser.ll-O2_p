; ModuleID = '../../services/network/public/cpp/cross_origin_embedder_policy_parser.cc'
source_filename = "../../services/network/public/cpp/cross_origin_embedder_policy_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.13 = type { %"struct.net::structured_headers::ParameterizedItem" }
%"struct.net::structured_headers::ParameterizedItem" = type { %"class.net::structured_headers::Item", %"class.std::__1::vector.14" }
%"class.net::structured_headers::Item" = type <{ i32, [4 x i8], i64, %"class.std::__1::basic_string", double, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair.16" = type { %"class.std::__1::basic_string", %"class.net::structured_headers::Item" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair.16"* }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.std::__1::basic_string" }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.std::__1::pair" = type { i32, %"class.absl::optional" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }

@_ZN7network12_GLOBAL__N_111kHeaderNameE = internal constant [29 x i8] c"cross-origin-embedder-policy\00", align 16
@_ZN7network12_GLOBAL__N_121kReportOnlyHeaderNameE = internal constant [41 x i8] c"cross-origin-embedder-policy-report-only\00", align 16
@__const._ZN7network12_GLOBAL__N_15ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE.item = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.13 } } } } { { { { i8, [7 x i8], %union.anon.13 } } } { { { i8, [7 x i8], %union.anon.13 } } { { i8, [7 x i8], %union.anon.13 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.13 { %"struct.net::structured_headers::ParameterizedItem" { %"class.net::structured_headers::Item" <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.std::__1::vector.14" { %"class.std::__1::__vector_base.15" { %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*), %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"struct.std::__1::pair.16"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.16"*) } } } } } } } } } }, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"report-to\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"require-corp\00", align 1
@_ZN7network8features40kCrossOriginEmbedderPolicyCredentiallessE = external global %"struct.base::Feature", align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"credentialless\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network30ParseCrossOriginEmbedderPolicyERKN3net19HttpResponseHeadersE(%"struct.network::CrossOriginEmbedderPolicy"* noalias sret, %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = alloca %"struct.std::__1::pair", align 8
  %6 = bitcast %"struct.network::CrossOriginEmbedderPolicy"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 80, i1 false)
  tail call void @_ZN7network25CrossOriginEmbedderPolicyC1Ev(%"struct.network::CrossOriginEmbedderPolicy"* %0) #6
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #6
  %10 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN7network12_GLOBAL__N_111kHeaderNameE, i64 0, i64 0), i64 28, %"class.std::__1::basic_string"* nonnull %3) #6
  br i1 %10, label %11, label %67

11:                                               ; preds = %2
  %12 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #6
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i8*, i8** %8, align 8
  %18 = select i1 %16, i8* %17, i8* %7
  %19 = load i64, i64* %9, align 8
  %20 = zext i8 %15 to i64
  %21 = select i1 %16, i64 %19, i64 %20
  call fastcc void @_ZN7network12_GLOBAL__N_15ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %4, i8* %18, i64 %21)
  %22 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %22, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %33, label %48, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #7
  br label %43

43:                                               ; preds = %40, %35
  %44 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #6
  %46 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 0, i8* %47, align 1
  store i8 0, i8* %45, align 8
  br label %64

48:                                               ; preds = %29
  %49 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %31, align 8
  br label %64

51:                                               ; preds = %11
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #7
  br label %64

64:                                               ; preds = %48, %43, %55, %61
  %65 = phi i8* [ %52, %61 ], [ %52, %55 ], [ %26, %43 ], [ %26, %48 ]
  store i8 0, i8* %65, align 8
  br label %66

66:                                               ; preds = %64, %51
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #6
  br label %67

67:                                               ; preds = %66, %2
  %68 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @_ZN7network12_GLOBAL__N_121kReportOnlyHeaderNameE, i64 0, i64 0), i64 40, %"class.std::__1::basic_string"* nonnull %3) #6
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %127

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::pair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #6
  %73 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %8, align 8
  %78 = select i1 %76, i8* %77, i8* %7
  %79 = load i64, i64* %9, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  call fastcc void @_ZN7network12_GLOBAL__N_15ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %5, i8* %78, i64 %81)
  %82 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %82, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %111, label %89

89:                                               ; preds = %71
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %93, label %108, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #7
  br label %103

103:                                              ; preds = %100, %95
  %104 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %105 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 24, i1 false) #6
  %106 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  store i8 0, i8* %107, align 1
  store i8 0, i8* %105, align 8
  br label %124

108:                                              ; preds = %89
  %109 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %110 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %91, align 8
  br label %124

111:                                              ; preds = %71
  %112 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #7
  br label %124

124:                                              ; preds = %108, %103, %115, %121
  %125 = phi i8* [ %112, %121 ], [ %112, %115 ], [ %86, %103 ], [ %86, %108 ]
  store i8 0, i8* %125, align 8
  br label %126

126:                                              ; preds = %124, %111
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #6
  br label %127

127:                                              ; preds = %69, %126
  %128 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %70, %69 ], [ %73, %126 ]
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %133) #7
  br label %134

134:                                              ; preds = %127, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7network25CrossOriginEmbedderPolicyC1Ev(%"struct.network::CrossOriginEmbedderPolicy"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7network12_GLOBAL__N_15ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* noalias nocapture sret, i8*, i64) unnamed_addr #0 {
  %4 = alloca %"class.absl::optional.9", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.13 } } } }, { { { { i8, [7 x i8], %union.anon.13 } } } }* @__const._ZN7network12_GLOBAL__N_15ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE.item, i64 0, i32 0, i32 0, i32 0, i32 0), i64 88, i1 false)
  call void @_ZN3net18structured_headers9ParseItemEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional.9"* nonnull sret %4, i8* %1, i64 %2) #6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 4
  br i1 %12, label %18, label %13

13:                                               ; preds = %3, %9
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.7* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6
  br label %176

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  %20 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %20, align 8
  store i8 0, i8* %19, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %union.anon.7* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #6
  %23 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"** %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %26 = load %"struct.std::__1::pair.16"*, %"struct.std::__1::pair.16"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair.16"* %24, %26
  br i1 %27, label %37, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %51

33:                                               ; preds = %115
  %34 = load i8, i8* %6, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %33
  call void @llvm.trap() #6
  unreachable

37:                                               ; preds = %18, %33
  %38 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp eq i64 %46, 12
  br i1 %47, label %48, label %128

48:                                               ; preds = %37
  %49 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %38, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #6
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %118, label %128

51:                                               ; preds = %28, %115
  %52 = phi %"struct.std::__1::pair.16"* [ %24, %28 ], [ %116, %115 ]
  %53 = bitcast %"struct.std::__1::pair.16"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %55 to i64
  %60 = select i1 %56, i64 %58, i64 %59
  %61 = icmp eq i64 %60, 9
  br i1 %61, label %62, label %115

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 0
  %64 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %63, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #6
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %115

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 3
  br i1 %69, label %70, label %115

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 1, i32 3
  %72 = load i8, i8* %19, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %70
  %75 = icmp eq %"class.std::__1::basic_string"* %29, %71
  br i1 %75, label %115, label %76

76:                                               ; preds = %74
  %77 = load i8, i8* %31, align 1
  %78 = icmp slt i8 %77, 0
  %79 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %78, label %92, label %83

83:                                               ; preds = %76
  br i1 %82, label %86, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %85, i64 24, i1 false) #6
  br label %115

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %88, i64 %90) #6
  br label %115

92:                                               ; preds = %76
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %98 = zext i8 %81 to i64
  %99 = select i1 %82, i8* %94, i8* %97
  %100 = select i1 %82, i64 %96, i64 %98
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %99, i64 %100) #6
  br label %115

102:                                              ; preds = %70
  %103 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %108, i64 24, i1 false) #6
  br label %114

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %29, i8* %111, i64 %113) #6
  br label %114

114:                                              ; preds = %109, %107
  store i8 1, i8* %19, align 8
  br label %115

115:                                              ; preds = %51, %114, %92, %86, %84, %74, %66, %62
  %116 = getelementptr inbounds %"struct.std::__1::pair.16", %"struct.std::__1::pair.16"* %52, i64 1
  %117 = icmp eq %"struct.std::__1::pair.16"* %116, %26
  br i1 %117, label %33, label %51

118:                                              ; preds = %48
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 2, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 32, i1 false) #6
  %121 = load i8, i8* %19, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %174, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %126 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %127 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 24, i1 false) #6
  br label %161

128:                                              ; preds = %37, %48
  %129 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7network8features40kCrossOriginEmbedderPolicyCredentiallessE) #6
  br i1 %129, label %130, label %154

130:                                              ; preds = %128
  %131 = load i8, i8* %6, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %134, !prof !3

133:                                              ; preds = %130
  call void @llvm.trap() #6
  unreachable

134:                                              ; preds = %130
  %135 = load i8, i8* %40, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i64, i64* %43, align 8
  %138 = zext i8 %135 to i64
  %139 = select i1 %136, i64 %137, i64 %138
  %140 = icmp eq i64 %139, 14
  br i1 %140, label %141, label %154

141:                                              ; preds = %134
  %142 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %38, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #6
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %154

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 1, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 32, i1 false) #6
  %147 = load i8, i8* %19, align 8, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %174, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  %153 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false) #6
  br label %161

154:                                              ; preds = %128, %141, %134
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  store i32 0, i32* %155, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast %union.anon.7* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 24, i1 false) #6
  %159 = load i8, i8* %19, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %174, label %164

161:                                              ; preds = %149, %123
  %162 = phi i8* [ %127, %123 ], [ %153, %149 ]
  %163 = phi i8* [ %120, %123 ], [ %146, %149 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %163, align 8
  br label %164

164:                                              ; preds = %161, %154
  %165 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = bitcast %"class.std::__1::basic_string"* %165 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  call void @_ZdlPv(i8* %172) #7
  br label %173

173:                                              ; preds = %170, %164
  store i8 0, i8* %19, align 8
  br label %174

174:                                              ; preds = %118, %144, %154, %173
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  %175 = load i8, i8* %6, align 8, !range !2
  br label %176

176:                                              ; preds = %174, %13
  %177 = phi i8 [ %175, %174 ], [ %7, %13 ]
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net18structured_headers17ParameterizedItemD1Ev(%"struct.net::structured_headers::ParameterizedItem"* %180) #6
  store i8 0, i8* %6, align 8
  br label %181

181:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net18structured_headers9ParseItemEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional.9"* sret, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18structured_headers17ParameterizedItemD1Ev(%"struct.net::structured_headers::ParameterizedItem"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
