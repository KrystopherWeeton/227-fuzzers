; ModuleID = '../../cc/animation/worklet_animation.cc'
source_filename = "../../cc/animation/worklet_animation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::WorkletAnimation" = type <{ %"class.cc::Animation", %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.absl::optional.148", %"class.absl::optional.148", %"class.absl::optional", %"class.absl::optional.148", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.cc::Animation" = type { i32 (...)**, %"class.base::RefCounted", %"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*, %"class.cc::AnimationDelegate"*, i32, %"class.std::__1::unique_ptr.100" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::unordered_map.19", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.49", i32, i8, %"class.std::__1::unique_ptr.55", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.61", %"class.base::WeakPtrFactory" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.14" }
%class.scoped_refptr = type { %"class.cc::Animation"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.scoped_refptr* }
%"class.std::__1::unordered_map.19" = type { %"class.std::__1::__hash_table.20" }
%"class.std::__1::__hash_table.20" = type <{ %"class.std::__1::unique_ptr.21", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base.24"** }
%"struct.std::__1::__hash_node_base.24" = type { %"struct.std::__1::__hash_node_base.24"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator.26" }
%"class.std::__1::__bucket_list_deallocator.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base.24" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.cc::ScrollOffsetAnimations" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.63" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.70" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i8 }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.75", [4 x i8], %"class.std::__1::unordered_map.76", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.75" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map.76" = type { %"class.std::__1::__hash_table.77" }
%"class.std::__1::__hash_table.77" = type <{ %"class.std::__1::unique_ptr.78", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.96", [4 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80", %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::__hash_node_base.81"** }
%"struct.std::__1::__hash_node_base.81" = type { %"struct.std::__1::__hash_node_base.81"* }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__bucket_list_deallocator.83" }
%"class.std::__1::__bucket_list_deallocator.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.81" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.cc::KeyframeEffect"* }
%"class.cc::KeyframeEffect" = type <{ %"class.gfx::KeyframeEffect", %"class.cc::Animation"*, %"struct.cc::ElementId", %class.scoped_refptr.118, i8, i8, i8, [5 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.gfx::KeyframeEffect" = type { i32 (...)**, %"class.std::__1::vector.103", %"struct.gfx::Transition" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::unique_ptr.105" = type opaque
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::unique_ptr.105"* }
%"struct.gfx::Transition" = type { %"class.base::TimeDelta", %"class.std::__1::set" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.cc::ElementId" = type { i64 }
%class.scoped_refptr.118 = type { %"class.cc::ElementAnimations"* }
%"class.cc::ElementAnimations" = type { %"class.gfx::FloatAnimationCurve::Target", %"class.gfx::ColorAnimationCurve::Target", %"class.gfx::TransformAnimationCurve::Target", %"class.cc::ScrollOffsetAnimationCurve::Target", %"class.cc::FilterAnimationCurve::Target", %"class.base::RefCounted.119", [4 x i8], %"class.base::ObserverList", %"class.cc::AnimationHost"*, %"struct.cc::ElementId", i8, i8, i8, %"struct.cc::PropertyAnimationState", %"struct.cc::PropertyAnimationState", float, float }
%"class.gfx::FloatAnimationCurve::Target" = type { i32 (...)** }
%"class.gfx::ColorAnimationCurve::Target" = type { i32 (...)** }
%"class.gfx::TransformAnimationCurve::Target" = type { i32 (...)** }
%"class.cc::ScrollOffsetAnimationCurve::Target" = type { i32 (...)** }
%"class.cc::FilterAnimationCurve::Target" = type { i32 (...)** }
%"class.base::RefCounted.119" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.120", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.122" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"struct.cc::PropertyAnimationState" = type { %"class.std::__1::bitset", %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.132 }
%union.anon.132 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.cc::AnimationOptions"* }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.cc::AnimationEffectTimings"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.base::TimeDelta" }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.cc::AnimationEvents" = type <{ %"class.cc::MutatorEvents", %"class.std::__1::vector.154", i8, [7 x i8] }>
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"*, %"class.std::__1::__compressed_pair.162" }
%"struct.cc::AnimationEvent" = type { i32, %"struct.cc::AnimationEvent::UniqueKeyframeModelId", i32, i32, %"class.base::TimeTicks", i8, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.156", %"class.absl::optional.148" }
%"struct.cc::AnimationEvent::UniqueKeyframeModelId" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.gfx::AnimationCurve"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.cc::AnimationEvent"* }
%"class.cc::MutatorInputState" = type { %"class.std::__1::unordered_map.167" }
%"class.std::__1::unordered_map.167" = type { %"class.std::__1::__hash_table.168" }
%"class.std::__1::__hash_table.168" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.172"** }
%"struct.std::__1::__hash_node_base.172" = type { %"struct.std::__1::__hash_node_base.172"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator.174" }
%"class.std::__1::__bucket_list_deallocator.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.172" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree", i32, %"class.base::flat_map", %"class.base::flat_map.205", %"class.base::WeakPtr" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.191", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.193" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.cc::ScrollNode"* }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.216", %"class.base::flat_map.216", %"class.base::flat_map.216", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.216" = type { %"class.base::internal::flat_tree.217" }
%"class.base::internal::flat_tree.217" = type { %"class.std::__1::vector.218" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.std::__1::pair.220"*, %"struct.std::__1::pair.220"*, %"class.std::__1::__compressed_pair.221" }
%"struct.std::__1::pair.220" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::pair.220"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree.226", float, float, float, %"class.std::__1::vector.234", %"class.std::__1::vector.241", %"class.std::__1::vector.248" }
%"class.cc::PropertyTree.226" = type { i32 (...)**, %"class.std::__1::vector.227", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.229" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { i32*, i32*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i32* }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.243" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.250" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.255", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.286" }
%"class.cc::PropertyTree.255" = type { i32 (...)**, %"class.std::__1::vector.256", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.258" }
%"struct.cc::EffectNode" = type opaque
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.263" }
%"class.std::__1::__hash_table.263" = type <{ %"class.std::__1::unique_ptr.264", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266", %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base.267"** }
%"struct.std::__1::__hash_node_base.267" = type { %"struct.std::__1::__hash_node_base.267"* }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.std::__1::__bucket_list_deallocator.269" }
%"class.std::__1::__bucket_list_deallocator.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base.267" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"class.std::__1::unique_ptr.288"*, %"class.std::__1::unique_ptr.288"*, %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.std::__1::unique_ptr.288"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.299" }
%"class.cc::PropertyTree.299" = type { i32 (...)**, %"class.std::__1::vector.300", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.302" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.cc::ClipNode"* }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.307", %"class.std::__1::vector.314" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.309" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"class.std::__1::vector.316"*, %"class.std::__1::vector.316"*, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::vector.316" = type opaque
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.std::__1::vector.316"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.198" }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.200" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.205" = type { %"class.base::internal::flat_tree.206" }
%"class.base::internal::flat_tree.206" = type { %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.std::__1::pair.209"*, %"struct.std::__1::pair.209"*, %"class.std::__1::__compressed_pair.210" }
%"struct.std::__1::pair.209" = type opaque
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::pair.209"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.cc::AnimationWorkletInput::AddAndUpdateState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142" }
%"struct.cc::AnimationWorkletInput::UpdateState" = type { %"struct.cc::WorkletAnimationId", double }
%"class.cc::ScrollTimeline" = type { %"class.cc::AnimationTimeline.base", %"class.absl::optional.329", %"class.absl::optional.329", i32, %"class.std::__1::vector.334", double }
%"class.cc::AnimationTimeline.base" = type <{ i32 (...)**, %"class.base::RefCounted.75", [4 x i8], %"class.std::__1::unordered_map.76", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8 }>
%"class.absl::optional.329" = type { %"class.absl::optional_internal::optional_data.330" }
%"class.absl::optional_internal::optional_data.330" = type { %"class.absl::optional_internal::optional_data_base.331" }
%"class.absl::optional_internal::optional_data_base.331" = type { %"class.absl::optional_internal::optional_data_dtor_base.332" }
%"class.absl::optional_internal::optional_data_dtor_base.332" = type { i8, %union.anon.333 }
%union.anon.333 = type { %"struct.cc::ElementId" }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { double*, double*, %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { double* }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.322" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.absl::optional.148"*, %"class.absl::optional.148"*, %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.absl::optional.148"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNSt3__16vectorIN2cc14AnimationEventENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZTVN2cc16WorkletAnimationE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.cc::Animation"* (%"class.cc::WorkletAnimation"*)* @_ZNK2cc16WorkletAnimation18CreateImplInstanceEv to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*, i32)* @_ZN2cc16WorkletAnimation19RemoveKeyframeModelEi to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*, %"class.cc::Animation"*)* @_ZN2cc16WorkletAnimation16PushPropertiesToEPNS_9AnimationE to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*, i1, %"class.cc::AnimationEvents"*)* @_ZN2cc16WorkletAnimation11UpdateStateEbPNS_15AnimationEventsE to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*, %"class.cc::AnimationEvents"*)* @_ZN2cc16WorkletAnimation20TakeTimeUpdatedEventEPNS_15AnimationEventsE to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*, i64)* @_ZN2cc16WorkletAnimation4TickEN4base9TimeTicksE to i8*), i8* bitcast (i1 (%"class.cc::WorkletAnimation"*)* @_ZNK2cc16WorkletAnimation18IsWorkletAnimationEv to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*)* @_ZN2cc16WorkletAnimationD2Ev to i8*), i8* bitcast (void (%"class.cc::WorkletAnimation"*)* @_ZN2cc16WorkletAnimationD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1

@_ZN2cc16WorkletAnimationC1EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEb = hidden unnamed_addr alias void (%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1), void (%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1)* @_ZN2cc16WorkletAnimationC2EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEb
@_ZN2cc16WorkletAnimationC1EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEbNSB_INS_14KeyframeEffectENSD_ISJ_EEEE = hidden unnamed_addr alias void (%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1, i64), void (%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1, i64)* @_ZN2cc16WorkletAnimationC2EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEbNSB_INS_14KeyframeEffectENSD_ISJ_EEEE
@_ZN2cc16WorkletAnimationD1Ev = hidden unnamed_addr alias void (%"class.cc::WorkletAnimation"*), void (%"class.cc::WorkletAnimation"*)* @_ZN2cc16WorkletAnimationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimationC2EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEb(%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = ptrtoint %"class.cc::AnimationOptions"* %5 to i64
  %10 = ptrtoint %"class.cc::AnimationEffectTimings"* %6 to i64
  %11 = zext i1 %7 to i8
  %12 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9AnimationC2EiNSt3__110unique_ptrINS_14KeyframeEffectENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"* %12, i32 %1, %"class.cc::KeyframeEffect"* null) #11
  %13 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %15 = bitcast %"struct.cc::WorkletAnimationId"* %14 to i64*
  store i64 %2, i64* %15, align 8
  %16 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %8
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #11
  br label %29

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* %26, i64 %28) #11
  br label %29

29:                                               ; preds = %21, %24
  %30 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  store double %4, double* %30, align 8
  %31 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.136"* %31 to i64*
  store i64 %9, i64* %32, align 8
  %33 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5
  %34 = bitcast %"class.std::__1::unique_ptr.142"* %33 to i64*
  store i64 %10, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 10
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 12
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 13
  store i8 %11, i8* %41, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimationC2EiNS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEEbNSB_INS_14KeyframeEffectENSD_ISJ_EEEE(%"class.cc::WorkletAnimation"*, i32, i64, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*, i1 zeroext, i64) unnamed_addr #0 align 2 {
  %10 = ptrtoint %"class.cc::AnimationOptions"* %5 to i64
  %11 = ptrtoint %"class.cc::AnimationEffectTimings"* %6 to i64
  %12 = inttoptr i64 %8 to %"class.cc::KeyframeEffect"*
  %13 = zext i1 %7 to i8
  %14 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9AnimationC2EiNSt3__110unique_ptrINS_14KeyframeEffectENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"* %14, i32 %1, %"class.cc::KeyframeEffect"* %12) #11
  %15 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %17 = bitcast %"struct.cc::WorkletAnimationId"* %16 to i64*
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %9
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #11
  br label %31

26:                                               ; preds = %9
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %28, i64 %30) #11
  br label %31

31:                                               ; preds = %26, %23
  %32 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  store double %4, double* %32, align 8
  %33 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4
  %34 = bitcast %"class.std::__1::unique_ptr.136"* %33 to i64*
  store i64 %10, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5
  %36 = bitcast %"class.std::__1::unique_ptr.142"* %35 to i64*
  store i64 %11, i64* %36, align 8
  %37 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 10
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 12
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 13
  store i8 %13, i8* %43, align 8
  ret void
}

declare void @_ZN2cc9AnimationC2EiNSt3__110unique_ptrINS_14KeyframeEffectENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"*, i32, %"class.cc::KeyframeEffect"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimationD2Ev(%"class.cc::WorkletAnimation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %3, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %3, align 8
  %5 = icmp eq %"class.cc::AnimationEffectTimings"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cc::AnimationEffectTimings"* %4 to void (%"class.cc::AnimationEffectTimings"*)***
  %8 = load void (%"class.cc::AnimationEffectTimings"*)**, void (%"class.cc::AnimationEffectTimings"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %8, i64 1
  %10 = load void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %9, align 8
  tail call void %10(%"class.cc::AnimationEffectTimings"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %12, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %12, align 8
  %14 = icmp eq %"class.cc::AnimationOptions"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::AnimationOptions"* %13 to void (%"class.cc::AnimationOptions"*)***
  %17 = load void (%"class.cc::AnimationOptions"*)**, void (%"class.cc::AnimationOptions"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %17, i64 1
  %19 = load void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %18, align 8
  tail call void %19(%"class.cc::AnimationOptions"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9AnimationD2Ev(%"class.cc::Animation"* %30) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc9AnimationD2Ev(%"class.cc::Animation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimationD0Ev(%"class.cc::WorkletAnimation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %3, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %3, align 8
  %5 = icmp eq %"class.cc::AnimationEffectTimings"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cc::AnimationEffectTimings"* %4 to void (%"class.cc::AnimationEffectTimings"*)***
  %8 = load void (%"class.cc::AnimationEffectTimings"*)**, void (%"class.cc::AnimationEffectTimings"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %8, i64 1
  %10 = load void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %9, align 8
  tail call void %10(%"class.cc::AnimationEffectTimings"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %12, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %12, align 8
  %14 = icmp eq %"class.cc::AnimationOptions"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::AnimationOptions"* %13 to void (%"class.cc::AnimationOptions"*)***
  %17 = load void (%"class.cc::AnimationOptions"*)**, void (%"class.cc::AnimationOptions"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %17, i64 1
  %19 = load void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %18, align 8
  tail call void %19(%"class.cc::AnimationOptions"* nonnull %13) #11
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9AnimationD2Ev(%"class.cc::Animation"* %30) #11
  %31 = bitcast %"class.cc::WorkletAnimation"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::WorkletAnimation"* @_ZN2cc16WorkletAnimation6CreateENS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEE(i64, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.cc::AnimationOptions"* %3 to i64
  %7 = ptrtoint %"class.cc::AnimationEffectTimings"* %4 to i64
  %8 = tail call i8* @_Znwm(i64 192) #12
  %9 = bitcast i8* %8 to %"class.cc::WorkletAnimation"*
  %10 = tail call i32 @_ZN2cc19AnimationIdProvider15NextAnimationIdEv() #11
  %11 = bitcast i8* %8 to %"class.cc::Animation"*
  tail call void @_ZN2cc9AnimationC2EiNSt3__110unique_ptrINS_14KeyframeEffectENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"* nonnull %11, i32 %10, %"class.cc::KeyframeEffect"* null) #11
  %12 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 56
  %14 = bitcast i8* %13 to i64*
  store i64 %0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 64
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #11
  br label %28

22:                                               ; preds = %5
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #11
  br label %28

28:                                               ; preds = %20, %22
  %29 = getelementptr inbounds i8, i8* %8, i64 88
  %30 = bitcast i8* %29 to double*
  store double %2, double* %30, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 96
  %32 = bitcast i8* %31 to i64*
  store i64 %6, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %8, i64 104
  %34 = bitcast i8* %33 to i64*
  store i64 %7, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %8, i64 112
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %8, i64 128
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %8, i64 144
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds i8, i8* %8, i64 160
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %8, i64 176
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds i8, i8* %8, i64 180
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %8, i64 184
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds i8, i8* %8, i64 8
  %44 = bitcast i8* %43 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  ret %"class.cc::WorkletAnimation"* %9
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i32 @_ZN2cc19AnimationIdProvider15NextAnimationIdEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::Animation"* @_ZNK2cc16WorkletAnimation18CreateImplInstanceEv(%"class.cc::WorkletAnimation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 192) #12
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %6 = bitcast %"struct.cc::WorkletAnimationId"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %10 = bitcast double* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %12, align 8
  %14 = icmp eq %"class.cc::AnimationOptions"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.cc::AnimationOptions"* %13 to %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)***
  %17 = load %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)**, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)** %17, i64 2
  %19 = load %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)** %18, align 8
  %20 = tail call %"class.cc::AnimationOptions"* %19(%"class.cc::AnimationOptions"* nonnull %13) #11
  %21 = ptrtoint %"class.cc::AnimationOptions"* %20 to i64
  br label %22

22:                                               ; preds = %1, %15
  %23 = phi i64 [ %21, %15 ], [ 0, %1 ]
  %24 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %24, align 8
  %26 = icmp eq %"class.cc::AnimationEffectTimings"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.cc::AnimationEffectTimings"* %25 to %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)***
  %29 = load %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)**, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)** %29, i64 2
  %31 = load %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)** %30, align 8
  %32 = tail call %"class.cc::AnimationEffectTimings"* %31(%"class.cc::AnimationEffectTimings"* nonnull %25) #11
  %33 = ptrtoint %"class.cc::AnimationEffectTimings"* %32 to i64
  br label %34

34:                                               ; preds = %22, %27
  %35 = phi i64 [ %33, %27 ], [ 0, %22 ]
  %36 = bitcast i8* %2 to %"class.cc::Animation"*
  tail call void @_ZN2cc9AnimationC2EiNSt3__110unique_ptrINS_14KeyframeEffectENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"* nonnull %36, i32 %4, %"class.cc::KeyframeEffect"* null) #11
  %37 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc16WorkletAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %2, i64 56
  %39 = bitcast i8* %38 to i64*
  store i64 %7, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %2, i64 64
  %41 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %34
  %46 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %46, i64 24, i1 false) #11
  br label %53

47:                                               ; preds = %34
  %48 = bitcast i8* %40 to %"class.std::__1::basic_string"*
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %50, i64 %52) #11
  br label %53

53:                                               ; preds = %47, %45
  %54 = getelementptr inbounds i8, i8* %2, i64 88
  %55 = bitcast i8* %54 to i64*
  store i64 %11, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %2, i64 96
  %57 = bitcast i8* %56 to i64*
  store i64 %23, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %2, i64 104
  %59 = bitcast i8* %58 to i64*
  store i64 %35, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %2, i64 112
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds i8, i8* %2, i64 128
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds i8, i8* %2, i64 144
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds i8, i8* %2, i64 160
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds i8, i8* %2, i64 176
  store i8 0, i8* %64, align 8
  %65 = getelementptr inbounds i8, i8* %2, i64 180
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %2, i64 184
  store i8 1, i8* %67, align 8
  %68 = getelementptr inbounds i8, i8* %2, i64 8
  %69 = bitcast i8* %68 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %69) #11
  ret %"class.cc::Animation"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation16PushPropertiesToEPNS_9AnimationE(%"class.cc::WorkletAnimation"*, %"class.cc::Animation"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9Animation16PushPropertiesToEPS0_(%"class.cc::Animation"* %3, %"class.cc::Animation"* %1) #11
  %4 = bitcast %"class.cc::Animation"* %1 to %"class.cc::WorkletAnimation"*
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %6 = load double, double* %5, align 8
  tail call void @_ZN2cc16WorkletAnimation15SetPlaybackRateEd(%"class.cc::WorkletAnimation"* %4, double %6)
  ret void
}

declare void @_ZN2cc9Animation16PushPropertiesToEPS0_(%"class.cc::Animation"*, %"class.cc::Animation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation15SetPlaybackRateEd(%"class.cc::WorkletAnimation"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %6, %1
  br i1 %7, label %76, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %75, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %75, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = sitofp i64 %18 to double
  %20 = fdiv double %19, %6
  %21 = fcmp oge double %20, 0xC3E0000000000000
  %22 = fcmp ole double %20, 0x43DFFFFFFFFFFFFF
  %23 = and i1 %22, %21
  %24 = fptosi double %20 to i64
  br i1 %23, label %32, label %25

25:                                               ; preds = %16
  %26 = lshr i64 %18, 63
  %27 = trunc i64 %26 to i32
  %28 = fcmp olt double %6, 0.000000e+00
  %29 = zext i1 %28 to i32
  %30 = icmp eq i32 %27, %29
  %31 = select i1 %30, i64 9223372036854775807, i64 -9223372036854775808
  br label %32

32:                                               ; preds = %16, %25
  %33 = phi i64 [ %24, %16 ], [ %31, %25 ]
  %34 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %33, -9223372036854775807
  %37 = icmp ult i64 %36, 2
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = icmp slt i64 %33, 0
  %40 = select i1 %39, i64 -9223372036854775808, i64 9223372036854775807
  %41 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %35, i64 %33) #11
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 %40, i64 %43, !prof !3
  br label %53

45:                                               ; preds = %32
  %46 = add i64 %35, -9223372036854775807
  %47 = icmp ugt i64 %46, 1
  %48 = icmp eq i64 %35, %33
  %49 = or i1 %48, %47
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %38, %45, %50
  %54 = phi i64 [ %44, %38 ], [ %33, %45 ], [ %33, %50 ]
  %55 = fdiv double %19, %1
  %56 = fcmp oge double %55, 0xC3E0000000000000
  %57 = fcmp ole double %55, 0x43DFFFFFFFFFFFFF
  %58 = and i1 %57, %56
  %59 = fptosi double %55 to i64
  br i1 %58, label %67, label %60

60:                                               ; preds = %53
  %61 = lshr i64 %18, 63
  %62 = trunc i64 %61 to i32
  %63 = fcmp olt double %1, 0.000000e+00
  %64 = zext i1 %63 to i32
  %65 = icmp eq i32 %62, %64
  %66 = select i1 %65, i64 9223372036854775807, i64 -9223372036854775808
  br label %67

67:                                               ; preds = %53, %60
  %68 = phi i64 [ %59, %53 ], [ %66, %60 ]
  %69 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %70 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %54, i64* %70, align 8
  %71 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %68) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %72 = load i8, i8* %9, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  store i64 %71, i64* %34, align 8
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  store i8 1, i8* %9, align 8
  br label %75

75:                                               ; preds = %12, %8, %74, %67
  store double %1, double* %5, align 8
  br label %76

76:                                               ; preds = %2, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation4TickEN4base9TimeTicksE(%"class.cc::WorkletAnimation"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"class.cc::KeyframeEffect"*, %"class.cc::KeyframeEffect"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN2cc14KeyframeEffect5PauseEN4base9TimeDeltaENS_14PauseConditionE(%"class.cc::KeyframeEffect"* %12, i64 %14, i32 0) #11
  %15 = load %"class.cc::KeyframeEffect"*, %"class.cc::KeyframeEffect"** %11, align 8
  %16 = bitcast %"class.cc::KeyframeEffect"* %15 to void (%"class.cc::KeyframeEffect"*, i64)***
  %17 = load void (%"class.cc::KeyframeEffect"*, i64)**, void (%"class.cc::KeyframeEffect"*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.cc::KeyframeEffect"*, i64)*, void (%"class.cc::KeyframeEffect"*, i64)** %17, i64 1
  %19 = load void (%"class.cc::KeyframeEffect"*, i64)*, void (%"class.cc::KeyframeEffect"*, i64)** %18, align 8
  tail call void %19(%"class.cc::KeyframeEffect"* %15, i64 0) #11
  br label %20

20:                                               ; preds = %6, %2, %10
  ret void
}

declare void @_ZN2cc14KeyframeEffect5PauseEN4base9TimeDeltaENS_14PauseConditionE(%"class.cc::KeyframeEffect"*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation11UpdateStateEbPNS_15AnimationEventsE(%"class.cc::WorkletAnimation"*, i1 zeroext, %"class.cc::AnimationEvents"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9Animation11UpdateStateEbPNS_15AnimationEventsE(%"class.cc::Animation"* %4, i1 zeroext %1, %"class.cc::AnimationEvents"* %2) #11
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = xor i1 %7, %10
  %12 = xor i1 %7, true
  %13 = or i1 %11, %12
  br i1 %13, label %23, label %14

14:                                               ; preds = %3
  %15 = icmp eq i8 %9, 0
  br i1 %15, label %16, label %17, !prof !3

16:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %19
  br i1 %22, label %26, label %24

23:                                               ; preds = %3
  br i1 %11, label %24, label %26

24:                                               ; preds = %17, %23
  %25 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %2, i64 0, i32 2
  store i8 1, i8* %25, align 8
  br label %26

26:                                               ; preds = %17, %24, %23
  ret void
}

declare void @_ZN2cc9Animation11UpdateStateEbPNS_15AnimationEventsE(%"class.cc::Animation"*, i1 zeroext, %"class.cc::AnimationEvents"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation20TakeTimeUpdatedEventEPNS_15AnimationEventsE(%"class.cc::WorkletAnimation"* nocapture, %"class.cc::AnimationEvents"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::AnimationEvent", align 8
  %4 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp ne i8 %8, 0
  %10 = xor i1 %6, %9
  %11 = xor i1 %6, true
  %12 = or i1 %10, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = icmp eq i8 %8, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %13
  tail call void @llvm.trap() #11
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %18
  br i1 %21, label %47, label %26

22:                                               ; preds = %2
  br i1 %10, label %23, label %47

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  br label %26

26:                                               ; preds = %23, %16
  %27 = phi i64 [ %25, %23 ], [ %18, %16 ]
  %28 = bitcast %"struct.cc::AnimationEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 72, i1 false)
  %29 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 3
  %30 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  call void @_ZN2cc14AnimationEventC1EiiN4absl8optionalIN4base9TimeDeltaEEE(%"struct.cc::AnimationEvent"* nonnull %3, i32 %32, i32 %34, i8 %8, i64 %27) #11
  %35 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %1, i64 0, i32 1, i32 0, i32 1
  %36 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %37, align 8
  %39 = icmp eq %"struct.cc::AnimationEvent"* %36, %38
  br i1 %39, label %44, label %40

40:                                               ; preds = %26
  call void @_ZN2cc14AnimationEventC1ERKS0_(%"struct.cc::AnimationEvent"* %36, %"struct.cc::AnimationEvent"* nonnull dereferenceable(72) %3) #11
  %41 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %36, i64 1
  %42 = ptrtoint %"struct.cc::AnimationEvent"* %41 to i64
  %43 = bitcast %"struct.cc::AnimationEvent"** %35 to i64*
  store i64 %42, i64* %43, align 8
  br label %46

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.cc::AnimationEvents", %"class.cc::AnimationEvents"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorIN2cc14AnimationEventENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.154"* %45, %"struct.cc::AnimationEvent"* nonnull dereferenceable(72) %3) #11
  br label %46

46:                                               ; preds = %40, %44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %7, i64 16, i1 false)
  call void @_ZN2cc14AnimationEventD1Ev(%"struct.cc::AnimationEvent"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #11
  br label %47

47:                                               ; preds = %16, %46, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2cc14AnimationEventC1EiiN4absl8optionalIN4base9TimeDeltaEEE(%"struct.cc::AnimationEvent"*, i32, i32, i8, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc14AnimationEventD1Ev(%"struct.cc::AnimationEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation16UpdateInputStateEPNS_17MutatorInputStateEN4base9TimeTicksERKNS_10ScrollTreeEb(%"class.cc::WorkletAnimation"* nocapture, %"class.cc::MutatorInputState"*, i64, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::optional.148", align 8
  %7 = alloca %"struct.cc::AnimationWorkletInput::AddAndUpdateState", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.cc::AnimationWorkletInput::UpdateState", align 8
  %10 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %12 = bitcast %"class.cc::AnimationTimeline"* %11 to i1 (%"class.cc::AnimationTimeline"*)***
  %13 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %13, i64 4
  %15 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.cc::AnimationTimeline"* %11) #11
  br i1 %16, label %17, label %25

17:                                               ; preds = %5
  %18 = bitcast %"class.cc::AnimationTimeline"** %10 to %"class.cc::ScrollTimeline"**
  %19 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %18, align 8
  %20 = bitcast %"class.cc::ScrollTimeline"* %19 to i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %21 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %21, i64 7
  %23 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.cc::ScrollTimeline"* %19, %"class.cc::ScrollTree"* dereferenceable(120) %3, i1 zeroext %4) #11
  br label %25

25:                                               ; preds = %5, %17
  %26 = phi i1 [ %24, %17 ], [ true, %5 ]
  %27 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp ne i8 %28, 0
  %30 = xor i1 %26, true
  %31 = or i1 %29, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %25
  %33 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %34 = bitcast %"class.cc::AnimationTimeline"* %33 to i1 (%"class.cc::AnimationTimeline"*)***
  %35 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %35, i64 4
  %37 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.cc::AnimationTimeline"* %33) #11
  %39 = select i1 %38, i64 0, i64 %2
  %40 = load i8, i8* %27, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %39, i64* %42, align 8
  br i1 %41, label %43, label %44

43:                                               ; preds = %32
  store i8 1, i8* %27, align 8
  br label %44

44:                                               ; preds = %43, %32, %25
  br i1 %4, label %45, label %49

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 10
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %187

49:                                               ; preds = %45, %44
  %50 = tail call zeroext i1 @_ZN2cc16WorkletAnimation11NeedsUpdateEN4base9TimeTicksERKNS_10ScrollTreeEb(%"class.cc::WorkletAnimation"* %0, i64 %2, %"class.cc::ScrollTree"* dereferenceable(120) %3, i1 zeroext %4)
  br i1 %50, label %51, label %187

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.absl::optional.148", %"class.absl::optional.148"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  %53 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %54 = bitcast %"class.cc::AnimationTimeline"* %53 to i1 (%"class.cc::AnimationTimeline"*)***
  %55 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %55, i64 4
  %57 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.cc::AnimationTimeline"* %53) #11
  br i1 %58, label %59, label %70

59:                                               ; preds = %51
  %60 = bitcast %"class.cc::AnimationTimeline"** %10 to %"class.cc::ScrollTimeline"**
  %61 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %60, align 8
  %62 = bitcast %"class.cc::ScrollTimeline"* %61 to { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %63 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %62, align 8
  %64 = getelementptr inbounds { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %63, i64 8
  %65 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %64, align 8
  %66 = tail call { i8, i64 } %65(%"class.cc::ScrollTimeline"* %61, %"class.cc::ScrollTree"* dereferenceable(120) %3, i1 zeroext %4) #11
  %67 = extractvalue { i8, i64 } %66, 0
  %68 = extractvalue { i8, i64 } %66, 1
  %69 = icmp eq i8 %67, 0
  br i1 %69, label %94, label %70

70:                                               ; preds = %59, %51
  %71 = phi i64 [ %2, %51 ], [ %68, %59 ]
  %72 = load i8, i8* %27, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = sub nsw i64 %71, %77
  %79 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %80 = load double, double* %79, align 8
  %81 = sitofp i64 %78 to double
  %82 = fmul double %80, %81
  %83 = fcmp oge double %82, 0xC3E0000000000000
  %84 = fcmp ole double %82, 0x43DFFFFFFFFFFFFF
  %85 = and i1 %84, %83
  %86 = fptosi double %82 to i64
  br i1 %85, label %94, label %87

87:                                               ; preds = %75
  %88 = lshr i64 %78, 63
  %89 = trunc i64 %88 to i32
  %90 = fcmp olt double %80, 0.000000e+00
  %91 = zext i1 %90 to i32
  %92 = icmp eq i32 %89, %91
  %93 = select i1 %92, i64 9223372036854775807, i64 -9223372036854775808
  br label %94

94:                                               ; preds = %59, %75, %87
  %95 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %59 ]
  %96 = phi i64 [ %86, %75 ], [ %93, %87 ], [ undef, %59 ]
  store i8 %95, i8* %52, align 8
  %97 = getelementptr inbounds %"class.absl::optional.148", %"class.absl::optional.148"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %96, i64* %97, align 8
  br i1 %26, label %101, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %99, i64 16, i1 false)
  %100 = load i8, i8* %52, align 8
  br label %101

101:                                              ; preds = %98, %94
  %102 = phi i8 [ %100, %98 ], [ %95, %94 ]
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %186, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %52, i64 16, i1 false)
  br i1 %4, label %114, label %106

106:                                              ; preds = %104
  %107 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %108 = bitcast %"class.cc::AnimationTimeline"* %107 to i1 (%"class.cc::AnimationTimeline"*)***
  %109 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %109, i64 4
  %111 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.cc::AnimationTimeline"* %107) #11
  %113 = zext i1 %112 to i8
  br label %114

114:                                              ; preds = %106, %104
  %115 = phi i8 [ 0, %104 ], [ %113, %106 ]
  %116 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 10
  store i8 %115, i8* %116, align 8
  %117 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 12
  %118 = load i32, i32* %117, align 4
  switch i32 %118, label %186 [
    i32 0, label %119
    i32 1, label %173
    i32 2, label %182
  ]

119:                                              ; preds = %114
  %120 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %122 = bitcast %"struct.cc::WorkletAnimationId"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %119
  %130 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 8 %131, i64 24, i1 false) #11
  br label %140

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %134, i64 %136) #11
  %137 = load i8, i8* %52, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %132
  call void @llvm.trap() #11
  unreachable

140:                                              ; preds = %129, %132
  %141 = getelementptr inbounds %"class.absl::optional.148", %"class.absl::optional.148"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %142 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %141) #11
  %143 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %144 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %143, align 8
  %145 = icmp eq %"class.cc::AnimationOptions"* %144, null
  br i1 %145, label %152, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.cc::AnimationOptions"* %144 to %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)***
  %148 = load %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)**, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)** %148, i64 2
  %150 = load %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)*, %"class.cc::AnimationOptions"* (%"class.cc::AnimationOptions"*)** %149, align 8
  %151 = call %"class.cc::AnimationOptions"* %150(%"class.cc::AnimationOptions"* nonnull %144) #11
  br label %152

152:                                              ; preds = %140, %146
  %153 = phi %"class.cc::AnimationOptions"* [ %151, %146 ], [ null, %140 ]
  %154 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %155 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %154, align 8
  %156 = icmp eq %"class.cc::AnimationEffectTimings"* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %152
  %158 = bitcast %"class.cc::AnimationEffectTimings"* %155 to %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)***
  %159 = load %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)**, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)** %159, i64 2
  %161 = load %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)*, %"class.cc::AnimationEffectTimings"* (%"class.cc::AnimationEffectTimings"*)** %160, align 8
  %162 = call %"class.cc::AnimationEffectTimings"* %161(%"class.cc::AnimationEffectTimings"* nonnull %155) #11
  br label %163

163:                                              ; preds = %152, %157
  %164 = phi %"class.cc::AnimationEffectTimings"* [ %162, %157 ], [ null, %152 ]
  call void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC1ENS_18WorkletAnimationIdENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdNS3_10unique_ptrINS_16AnimationOptionsENS3_14default_deleteISB_EEEENSA_INS_22AnimationEffectTimingsENSC_ISF_EEEE(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nonnull %7, i64 %123, %"class.std::__1::basic_string"* nonnull %8, double %142, %"class.cc::AnimationOptions"* %153, %"class.cc::AnimationEffectTimings"* %164) #11
  call void @_ZN2cc17MutatorInputState3AddEONS_21AnimationWorkletInput17AddAndUpdateStateE(%"class.cc::MutatorInputState"* %1, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nonnull dereferenceable(56) %7) #11
  call void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateD1Ev(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nonnull %7) #11
  %165 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %163, %169
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %120) #11
  store i32 1, i32* %117, align 4
  br label %186

173:                                              ; preds = %114
  %174 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #11
  %175 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %176 = bitcast %"struct.cc::WorkletAnimationId"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %9 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %9, i64 0, i32 1
  %180 = getelementptr inbounds %"class.absl::optional.148", %"class.absl::optional.148"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %181 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %180) #11
  store double %181, double* %179, align 8
  call void @_ZN2cc17MutatorInputState6UpdateEONS_21AnimationWorkletInput11UpdateStateE(%"class.cc::MutatorInputState"* %1, %"struct.cc::AnimationWorkletInput::UpdateState"* nonnull dereferenceable(16) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #11
  br label %186

182:                                              ; preds = %114
  %183 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 1
  %184 = bitcast %"struct.cc::WorkletAnimationId"* %183 to i64*
  %185 = load i64, i64* %184, align 8
  tail call void @_ZN2cc17MutatorInputState6RemoveENS_18WorkletAnimationIdE(%"class.cc::MutatorInputState"* %1, i64 %185) #11
  br label %186

186:                                              ; preds = %101, %172, %173, %182, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #11
  br label %187

187:                                              ; preds = %49, %45, %186
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc16WorkletAnimation16IsTimelineActiveERKNS_10ScrollTreeEb(%"class.cc::WorkletAnimation"* nocapture readonly, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 3
  %5 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %4, align 8
  %6 = bitcast %"class.cc::AnimationTimeline"* %5 to i1 (%"class.cc::AnimationTimeline"*)***
  %7 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %7, i64 4
  %9 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.cc::AnimationTimeline"* %5) #11
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = bitcast %"class.cc::AnimationTimeline"** %4 to %"class.cc::ScrollTimeline"**
  %13 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %12, align 8
  %14 = bitcast %"class.cc::ScrollTimeline"* %13 to i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %15 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %15, i64 7
  %17 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.cc::ScrollTimeline"* %13, %"class.cc::ScrollTree"* dereferenceable(120) %1, i1 zeroext %2) #11
  br label %19

19:                                               ; preds = %3, %11
  %20 = phi i1 [ %18, %11 ], [ true, %3 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc16WorkletAnimation11NeedsUpdateEN4base9TimeTicksERKNS_10ScrollTreeEb(%"class.cc::WorkletAnimation"* nocapture readonly, i64, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %84, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 3
  %10 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %9, align 8
  %11 = bitcast %"class.cc::AnimationTimeline"* %10 to i1 (%"class.cc::AnimationTimeline"*)***
  %12 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %12, i64 4
  %14 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.cc::AnimationTimeline"* %10) #11
  br i1 %15, label %16, label %24

16:                                               ; preds = %8
  %17 = bitcast %"class.cc::AnimationTimeline"** %9 to %"class.cc::ScrollTimeline"**
  %18 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %17, align 8
  %19 = bitcast %"class.cc::ScrollTimeline"* %18 to i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %20 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %20, i64 7
  %22 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.cc::ScrollTimeline"* %18, %"class.cc::ScrollTree"* dereferenceable(120) %2, i1 zeroext %3) #11
  br i1 %23, label %24, label %84

24:                                               ; preds = %8, %16
  %25 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %9, align 8
  %26 = bitcast %"class.cc::AnimationTimeline"* %25 to i1 (%"class.cc::AnimationTimeline"*)***
  %27 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %27, i64 4
  %29 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.cc::AnimationTimeline"* %25) #11
  br i1 %30, label %31, label %42

31:                                               ; preds = %24
  %32 = bitcast %"class.cc::AnimationTimeline"** %9 to %"class.cc::ScrollTimeline"**
  %33 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %32, align 8
  %34 = bitcast %"class.cc::ScrollTimeline"* %33 to { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %35 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %34, align 8
  %36 = getelementptr inbounds { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %35, i64 8
  %37 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %36, align 8
  %38 = tail call { i8, i64 } %37(%"class.cc::ScrollTimeline"* %33, %"class.cc::ScrollTree"* dereferenceable(120) %2, i1 zeroext %3) #11
  %39 = extractvalue { i8, i64 } %38, 0
  %40 = extractvalue { i8, i64 } %38, 1
  %41 = icmp eq i8 %39, 0
  br i1 %41, label %67, label %42

42:                                               ; preds = %31, %24
  %43 = phi i64 [ %1, %24 ], [ %40, %31 ]
  %44 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = sub nsw i64 %43, %50
  %52 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %53 = load double, double* %52, align 8
  %54 = sitofp i64 %51 to double
  %55 = fmul double %53, %54
  %56 = fcmp oge double %55, 0xC3E0000000000000
  %57 = fcmp ole double %55, 0x43DFFFFFFFFFFFFF
  %58 = and i1 %57, %56
  %59 = fptosi double %55 to i64
  br i1 %58, label %67, label %60

60:                                               ; preds = %48
  %61 = lshr i64 %51, 63
  %62 = trunc i64 %61 to i32
  %63 = fcmp olt double %53, 0.000000e+00
  %64 = zext i1 %63 to i32
  %65 = icmp eq i32 %62, %64
  %66 = select i1 %65, i64 9223372036854775807, i64 -9223372036854775808
  br label %67

67:                                               ; preds = %31, %48, %60
  %68 = phi i8 [ 1, %48 ], [ 1, %60 ], [ 0, %31 ]
  %69 = phi i64 [ %59, %48 ], [ %66, %60 ], [ undef, %31 ]
  %70 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp ne i8 %71, 0
  %73 = icmp ne i8 %68, 0
  %74 = xor i1 %73, %72
  %75 = xor i1 %72, true
  %76 = or i1 %74, %75
  br i1 %76, label %84, label %77

77:                                               ; preds = %67
  %78 = icmp eq i8 %68, 0
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %77
  tail call void @llvm.trap() #11
  unreachable

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp ne i64 %82, %69
  br label %84

84:                                               ; preds = %80, %67, %16, %4
  %85 = phi i1 [ true, %4 ], [ false, %16 ], [ %74, %67 ], [ %83, %80 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2cc16WorkletAnimation11CurrentTimeEN4base9TimeTicksERKNS_10ScrollTreeEb(%"class.cc::WorkletAnimation"* nocapture readonly, i64, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %5, align 8
  %7 = bitcast %"class.cc::AnimationTimeline"* %6 to i1 (%"class.cc::AnimationTimeline"*)***
  %8 = load i1 (%"class.cc::AnimationTimeline"*)**, i1 (%"class.cc::AnimationTimeline"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %8, i64 4
  %10 = load i1 (%"class.cc::AnimationTimeline"*)*, i1 (%"class.cc::AnimationTimeline"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.cc::AnimationTimeline"* %6) #11
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  %13 = bitcast %"class.cc::AnimationTimeline"** %5 to %"class.cc::ScrollTimeline"**
  %14 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %13, align 8
  %15 = bitcast %"class.cc::ScrollTimeline"* %14 to { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %16 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %15, align 8
  %17 = getelementptr inbounds { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %16, i64 8
  %18 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %17, align 8
  %19 = tail call { i8, i64 } %18(%"class.cc::ScrollTimeline"* %14, %"class.cc::ScrollTree"* dereferenceable(120) %2, i1 zeroext %3) #11
  %20 = extractvalue { i8, i64 } %19, 0
  %21 = extractvalue { i8, i64 } %19, 1
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %12, %4
  %24 = phi i64 [ %1, %4 ], [ %21, %12 ]
  %25 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = sub nsw i64 %24, %31
  %33 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %34 = load double, double* %33, align 8
  %35 = sitofp i64 %32 to double
  %36 = fmul double %34, %35
  %37 = fcmp oge double %36, 0xC3E0000000000000
  %38 = fcmp ole double %36, 0x43DFFFFFFFFFFFFF
  %39 = and i1 %38, %37
  %40 = fptosi double %36 to i64
  br i1 %39, label %48, label %41

41:                                               ; preds = %29
  %42 = lshr i64 %32, 63
  %43 = trunc i64 %42 to i32
  %44 = fcmp olt double %34, 0.000000e+00
  %45 = zext i1 %44 to i32
  %46 = icmp eq i32 %43, %45
  %47 = select i1 %46, i64 9223372036854775807, i64 -9223372036854775808
  br label %48

48:                                               ; preds = %12, %41, %29
  %49 = phi i8 [ 1, %29 ], [ 1, %41 ], [ 0, %12 ]
  %50 = phi i64 [ %40, %29 ], [ %47, %41 ], [ undef, %12 ]
  %51 = insertvalue { i8, i64 } undef, i8 %49, 0
  %52 = insertvalue { i8, i64 } %51, i64 %50, 1
  ret { i8, i64 } %52
}

declare void @_ZN2cc17MutatorInputState3AddEONS_21AnimationWorkletInput17AddAndUpdateStateE(%"class.cc::MutatorInputState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* dereferenceable(56)) local_unnamed_addr #2

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC1ENS_18WorkletAnimationIdENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdNS3_10unique_ptrINS_16AnimationOptionsENS3_14default_deleteISB_EEEENSA_INS_22AnimationEffectTimingsENSC_ISF_EEEE(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateD1Ev(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*) unnamed_addr #3

declare void @_ZN2cc17MutatorInputState6UpdateEONS_21AnimationWorkletInput11UpdateStateE(%"class.cc::MutatorInputState"*, %"struct.cc::AnimationWorkletInput::UpdateState"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc17MutatorInputState6RemoveENS_18WorkletAnimationIdE(%"class.cc::MutatorInputState"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation14SetOutputStateERKNS_22AnimationWorkletOutput14AnimationStateE(%"class.cc::WorkletAnimation"* nocapture, %"struct.cc::AnimationWorkletOutput::AnimationState"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.absl::optional.148"*, %"class.absl::optional.148"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.absl::optional.148", %"class.absl::optional.148"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation18UpdatePlaybackRateEd(%"class.cc::WorkletAnimation"*, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 3
  %4 = load double, double* %3, align 8
  %5 = fcmp oeq double %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store double %1, double* %3, align 8
  %7 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9Animation22SetNeedsPushPropertiesEv(%"class.cc::Animation"* %7) #11
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN2cc9Animation22SetNeedsPushPropertiesEv(%"class.cc::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16WorkletAnimation19RemoveKeyframeModelEi(%"class.cc::WorkletAnimation"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 12
  store i32 2, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %0, i64 0, i32 0
  tail call void @_ZN2cc9Animation19RemoveKeyframeModelEi(%"class.cc::Animation"* %4, i32 %1) #11
  ret void
}

declare void @_ZN2cc9Animation19RemoveKeyframeModelEi(%"class.cc::Animation"*, i32) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc16WorkletAnimation18IsWorkletAnimationEv(%"class.cc::WorkletAnimation"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc14AnimationEventENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.154"*, %"struct.cc::AnimationEvent"* dereferenceable(72)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::AnimationEvent"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.154"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.154"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::AnimationEvent"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.cc::AnimationEvent"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::AnimationEvent"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::AnimationEvent"* %35 to i64
  tail call void @_ZN2cc14AnimationEventC1ERKS0_(%"struct.cc::AnimationEvent"* %34, %"struct.cc::AnimationEvent"* dereferenceable(72) %1) #11
  %37 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %34, i64 1
  %38 = ptrtoint %"struct.cc::AnimationEvent"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %39, align 8
  %41 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %3, align 8
  %42 = icmp eq %"struct.cc::AnimationEvent"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.cc::AnimationEvent"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.cc::AnimationEvent"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.cc::AnimationEvent"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %47, i64 -1
  tail call void @_ZN2cc14AnimationEventC1ERKS0_(%"struct.cc::AnimationEvent"* %48, %"struct.cc::AnimationEvent"* dereferenceable(72) %49) #11
  %50 = icmp eq %"struct.cc::AnimationEvent"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.cc::AnimationEvent"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.cc::AnimationEvent"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.cc::AnimationEvent"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.cc::AnimationEvent"*
  %60 = icmp eq %"struct.cc::AnimationEvent"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.cc::AnimationEvent"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.cc::AnimationEvent", %"struct.cc::AnimationEvent"* %62, i64 -1
  tail call void @_ZN2cc14AnimationEventD1Ev(%"struct.cc::AnimationEvent"* %63) #11
  %64 = icmp eq %"struct.cc::AnimationEvent"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc14AnimationEventC1ERKS0_(%"struct.cc::AnimationEvent"*, %"struct.cc::AnimationEvent"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
