; ModuleID = '../../third_party/libjpeg_turbo/jcmaster.c'
source_filename = "../../third_party/libjpeg_turbo/jcmaster.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i32, i32)*, {}* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { {}*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.my_comp_master = type { %struct.jpeg_comp_master, i32, i32, i32, i32, i8* }

@.str = private unnamed_addr constant [37 x i8] c"libjpeg-turbo version 2.1.0 (build )\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @jinit_c_master_control(%struct.jpeg_compress_struct*, i32) local_unnamed_addr #0 {
  %3 = alloca [10 x i32], align 16
  %4 = alloca [10 x [64 x i32]], align 16
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %6 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %6, i64 0, i32 0
  %8 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %7, align 8
  %9 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %10 = tail call i8* %8(%struct.jpeg_common_struct* %9, i32 1, i64 56) #3
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %12 = bitcast %struct.jpeg_comp_master** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = bitcast i8* %10 to <2 x void (%struct.jpeg_compress_struct*)*>*
  store <2 x void (%struct.jpeg_compress_struct*)*> <void (%struct.jpeg_compress_struct*)* @prepare_for_pass, void (%struct.jpeg_compress_struct*)* @pass_startup>, <2 x void (%struct.jpeg_compress_struct*)*>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to void (%struct.jpeg_compress_struct*)**
  store void (%struct.jpeg_compress_struct*)* @finish_pass_master, void (%struct.jpeg_compress_struct*)** %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 28
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %29, %25, %21, %2
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i64 0, i32 5
  store i32 32, i32* %36, align 8
  %37 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %34, align 8
  %38 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %37, i64 0, i32 0
  %39 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %38, align 8
  tail call void %39(%struct.jpeg_common_struct* %9) #3
  %40 = load i32, i32* %18, align 4
  br label %41

41:                                               ; preds = %33, %29
  %42 = phi i32 [ %40, %33 ], [ %19, %29 ]
  %43 = icmp ugt i32 %42, 65500
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 8
  %47 = icmp ugt i32 %46, 65500
  br i1 %47, label %48, label %59

48:                                               ; preds = %44, %41
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %50 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %50, i64 0, i32 5
  store i32 41, i32* %51, align 8
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 6, i32 0, i64 0
  store i32 65500, i32* %53, align 4
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %49, align 8
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 0
  %56 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %55, align 8
  tail call void %56(%struct.jpeg_common_struct* %9) #3
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %48, %44
  %60 = phi i32 [ %58, %48 ], [ %46, %44 ]
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %62 = zext i32 %60 to i64
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %65, %62
  %67 = icmp ugt i64 %66, 4294967295
  br i1 %67, label %68, label %75

68:                                               ; preds = %59
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %70 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %70, i64 0, i32 5
  store i32 70, i32* %71, align 8
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %69, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 0
  %74 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %73, align 8
  tail call void %74(%struct.jpeg_common_struct* %9) #3
  br label %75

75:                                               ; preds = %68, %59
  %76 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 8
  br i1 %78, label %89, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 5
  store i32 15, i32* %82, align 8
  %83 = load i32, i32* %76, align 8
  %84 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %84, i64 0, i32 6, i32 0, i64 0
  store i32 %83, i32* %85, align 4
  %86 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %87 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %86, i64 0, i32 0
  %88 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %87, align 8
  tail call void %88(%struct.jpeg_common_struct* %9) #3
  br label %89

89:                                               ; preds = %79, %75
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %91, 10
  br i1 %92, label %93, label %106

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 5
  store i32 26, i32* %96, align 8
  %97 = load i32, i32* %90, align 4
  %98 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %94, align 8
  %99 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %98, i64 0, i32 6, i32 0, i64 0
  store i32 %97, i32* %99, align 4
  %100 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %94, align 8
  %101 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %100, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %101, align 4
  %102 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %94, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %102, i64 0, i32 0
  %104 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %103, align 8
  tail call void %104(%struct.jpeg_common_struct* %9) #3
  %105 = load i32, i32* %90, align 4
  br label %106

106:                                              ; preds = %93, %89
  %107 = phi i32 [ %105, %93 ], [ %91, %89 ]
  %108 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  store i32 1, i32* %108, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  store i32 1, i32* %109, align 4
  %110 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %111 = icmp sgt i32 %107, 0
  br i1 %111, label %112, label %214

112:                                              ; preds = %106
  %113 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %110, align 8
  %114 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %115

115:                                              ; preds = %140, %112
  %116 = phi i32 [ %107, %112 ], [ %141, %140 ]
  %117 = phi i32 [ 1, %112 ], [ %150, %140 ]
  %118 = phi i32 [ 1, %112 ], [ %146, %140 ]
  %119 = phi %struct.jpeg_component_info* [ %113, %112 ], [ %152, %140 ]
  %120 = phi i32 [ 0, %112 ], [ %151, %140 ]
  %121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %119, i64 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, -1
  %124 = icmp ugt i32 %123, 3
  br i1 %124, label %130, label %125

125:                                              ; preds = %115
  %126 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %119, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %127, -1
  %129 = icmp ugt i32 %128, 3
  br i1 %129, label %130, label %140

130:                                              ; preds = %125, %115
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %114, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 5
  store i32 18, i32* %132, align 8
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %114, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 0
  %135 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %134, align 8
  tail call void %135(%struct.jpeg_common_struct* %9) #3
  %136 = load i32, i32* %108, align 8
  %137 = load i32, i32* %121, align 8
  %138 = load i32, i32* %109, align 4
  %139 = load i32, i32* %90, align 4
  br label %140

140:                                              ; preds = %130, %125
  %141 = phi i32 [ %116, %125 ], [ %139, %130 ]
  %142 = phi i32 [ %117, %125 ], [ %138, %130 ]
  %143 = phi i32 [ %122, %125 ], [ %137, %130 ]
  %144 = phi i32 [ %118, %125 ], [ %136, %130 ]
  %145 = icmp sgt i32 %144, %143
  %146 = select i1 %145, i32 %144, i32 %143
  store i32 %146, i32* %108, align 8
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %119, i64 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %142, %148
  %150 = select i1 %149, i32 %142, i32 %148
  store i32 %150, i32* %109, align 4
  %151 = add nuw nsw i32 %120, 1
  %152 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %119, i64 1
  %153 = icmp slt i32 %151, %141
  br i1 %153, label %115, label %154

154:                                              ; preds = %140
  %155 = icmp sgt i32 %141, 0
  br i1 %155, label %156, label %214

156:                                              ; preds = %154
  %157 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %110, align 8
  br label %158

158:                                              ; preds = %158, %156
  %159 = phi %struct.jpeg_component_info* [ %209, %158 ], [ %157, %156 ]
  %160 = phi i32 [ %208, %158 ], [ 0, %156 ]
  %161 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 9
  store i32 8, i32* %162, align 4
  %163 = load i32, i32* %61, align 8
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %167, %164
  %169 = load i32, i32* %108, align 8
  %170 = shl nsw i32 %169, 3
  %171 = sext i32 %170 to i64
  %172 = tail call i64 @jdiv_round_up(i64 %168, i64 %171) #3
  %173 = trunc i64 %172 to i32
  %174 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 7
  store i32 %173, i32* %174, align 4
  %175 = load i32, i32* %18, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = mul nsw i64 %179, %176
  %181 = load i32, i32* %109, align 4
  %182 = shl nsw i32 %181, 3
  %183 = sext i32 %182 to i64
  %184 = tail call i64 @jdiv_round_up(i64 %180, i64 %183) #3
  %185 = trunc i64 %184 to i32
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 8
  store i32 %185, i32* %186, align 8
  %187 = load i32, i32* %61, align 8
  %188 = zext i32 %187 to i64
  %189 = load i32, i32* %165, align 8
  %190 = sext i32 %189 to i64
  %191 = mul nsw i64 %190, %188
  %192 = load i32, i32* %108, align 8
  %193 = sext i32 %192 to i64
  %194 = tail call i64 @jdiv_round_up(i64 %191, i64 %193) #3
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 10
  store i32 %195, i32* %196, align 8
  %197 = load i32, i32* %18, align 4
  %198 = zext i32 %197 to i64
  %199 = load i32, i32* %177, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %200, %198
  %202 = load i32, i32* %109, align 4
  %203 = sext i32 %202 to i64
  %204 = tail call i64 @jdiv_round_up(i64 %201, i64 %203) #3
  %205 = trunc i64 %204 to i32
  %206 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 11
  store i32 %205, i32* %206, align 4
  %207 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 0, i32 12
  store i32 1, i32* %207, align 8
  %208 = add nuw nsw i32 %160, 1
  %209 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i64 1
  %210 = load i32, i32* %90, align 4
  %211 = icmp slt i32 %208, %210
  br i1 %211, label %158, label %212

212:                                              ; preds = %158
  %213 = load i32, i32* %109, align 4
  br label %214

214:                                              ; preds = %106, %154, %212
  %215 = phi i32 [ %213, %212 ], [ %150, %154 ], [ 1, %106 ]
  %216 = load i32, i32* %18, align 4
  %217 = zext i32 %216 to i64
  %218 = shl nsw i32 %215, 3
  %219 = sext i32 %218 to i64
  %220 = tail call i64 @jdiv_round_up(i64 %217, i64 %219) #3
  %221 = trunc i64 %220 to i32
  %222 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  store i32 %221, i32* %222, align 8
  %223 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %224 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %223, align 8
  %225 = icmp eq %struct.jpeg_scan_info* %224, null
  br i1 %225, label %536, label %226

226:                                              ; preds = %214
  %227 = bitcast [10 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %227) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %227, i8 -86, i64 40, i1 false) #3
  %228 = bitcast [10 x [64 x i32]]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2560, i8* nonnull %228) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %228, i8 -86, i64 2560, i1 false) #3
  %229 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %230 = load i32, i32* %229, align 8
  %231 = icmp slt i32 %230, 1
  br i1 %231, label %232, label %242

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %234 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %233, align 8
  %235 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %234, i64 0, i32 5
  store i32 19, i32* %235, align 8
  %236 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %233, align 8
  %237 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %236, i64 0, i32 6, i32 0, i64 0
  store i32 0, i32* %237, align 4
  %238 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %233, align 8
  %239 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %238, i64 0, i32 0
  %240 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %239, align 8
  tail call void %240(%struct.jpeg_common_struct* %9) #3
  %241 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %223, align 8
  br label %242

242:                                              ; preds = %232, %226
  %243 = phi %struct.jpeg_scan_info* [ %241, %232 ], [ %224, %226 ]
  %244 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %243, i64 0, i32 2
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %251

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %243, i64 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 63
  br i1 %250, label %265, label %251

251:                                              ; preds = %247, %242
  %252 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 1, i32* %252, align 4
  %253 = load i32, i32* %90, align 4
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %272

255:                                              ; preds = %251
  %256 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 0, i64 0
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i32* [ %261, %257 ], [ %256, %255 ]
  %259 = phi i32 [ %262, %257 ], [ 0, %255 ]
  %260 = bitcast i32* %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %260, i8 -1, i64 256, i1 false) #3
  %261 = getelementptr inbounds i32, i32* %258, i64 64
  %262 = add nuw nsw i32 %259, 1
  %263 = load i32, i32* %90, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %257, label %272

265:                                              ; preds = %247
  %266 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 0, i32* %266, align 4
  %267 = load i32, i32* %90, align 4
  %268 = icmp sgt i32 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %265
  %270 = zext i32 %267 to i64
  %271 = shl nuw nsw i64 %270, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %227, i8 0, i64 %271, i1 false) #3
  br label %272

272:                                              ; preds = %257, %269, %265, %251
  %273 = phi i32 [ %267, %269 ], [ %253, %251 ], [ %267, %265 ], [ %263, %257 ]
  %274 = load i32, i32* %229, align 8
  %275 = icmp slt i32 %274, 1
  br i1 %275, label %486, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %278 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  br label %279

279:                                              ; preds = %479, %276
  %280 = phi i32 [ 1, %276 ], [ %481, %479 ]
  %281 = phi %struct.jpeg_scan_info* [ %243, %276 ], [ %480, %479 ]
  %282 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, -1
  %285 = icmp ugt i32 %284, 3
  br i1 %285, label %286, label %297

286:                                              ; preds = %279
  %287 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %287, i64 0, i32 5
  store i32 26, i32* %288, align 8
  %289 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %290 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %289, i64 0, i32 6, i32 0, i64 0
  store i32 %283, i32* %290, align 4
  %291 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %291, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %292, align 4
  %293 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %294 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %293, i64 0, i32 0
  %295 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %294, align 8
  tail call void %295(%struct.jpeg_common_struct* %9) #3
  %296 = icmp sgt i32 %283, 0
  br i1 %296, label %297, label %333

297:                                              ; preds = %286, %279
  %298 = zext i32 %283 to i64
  br label %299

299:                                              ; preds = %330, %297
  %300 = phi i64 [ 0, %297 ], [ %331, %330 ]
  %301 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 1, i64 %300
  %302 = load i32, i32* %301, align 4
  %303 = icmp slt i32 %302, 0
  br i1 %303, label %307, label %304

304:                                              ; preds = %299
  %305 = load i32, i32* %90, align 4
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %315, label %307

307:                                              ; preds = %304, %299
  %308 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %309 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %308, i64 0, i32 5
  store i32 19, i32* %309, align 8
  %310 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %310, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %311, align 4
  %312 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %313 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %312, i64 0, i32 0
  %314 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %313, align 8
  tail call void %314(%struct.jpeg_common_struct* %9) #3
  br label %315

315:                                              ; preds = %307, %304
  %316 = icmp eq i64 %300, 0
  br i1 %316, label %330, label %317

317:                                              ; preds = %315
  %318 = add nsw i64 %300, -1
  %319 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 1, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = icmp sgt i32 %302, %320
  br i1 %321, label %330, label %322

322:                                              ; preds = %317
  %323 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %324 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %323, i64 0, i32 5
  store i32 19, i32* %324, align 8
  %325 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %326 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %325, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %326, align 4
  %327 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %328 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %327, i64 0, i32 0
  %329 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %328, align 8
  tail call void %329(%struct.jpeg_common_struct* %9) #3
  br label %330

330:                                              ; preds = %322, %317, %315
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %298
  br i1 %332, label %333, label %299

333:                                              ; preds = %330, %286
  %334 = phi i1 [ false, %286 ], [ true, %330 ]
  %335 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 2
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 3
  %338 = load i32, i32* %337, align 4
  %339 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 4
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 5
  %342 = load i32, i32* %341, align 4
  %343 = load i32, i32* %278, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %443, label %345

345:                                              ; preds = %333
  %346 = icmp ugt i32 %336, 63
  br i1 %346, label %355, label %347

347:                                              ; preds = %345
  %348 = icmp slt i32 %338, %336
  %349 = icmp sgt i32 %338, 63
  %350 = or i1 %348, %349
  %351 = icmp ugt i32 %340, 10
  %352 = or i1 %351, %350
  %353 = icmp ugt i32 %342, 10
  %354 = or i1 %353, %352
  br i1 %354, label %355, label %363

355:                                              ; preds = %347, %345
  %356 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %357 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %356, i64 0, i32 5
  store i32 17, i32* %357, align 8
  %358 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %359 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %358, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %359, align 4
  %360 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %361 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %360, i64 0, i32 0
  %362 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %361, align 8
  tail call void %362(%struct.jpeg_common_struct* %9) #3
  br label %363

363:                                              ; preds = %355, %347
  %364 = icmp eq i32 %336, 0
  br i1 %364, label %365, label %375

365:                                              ; preds = %363
  %366 = icmp eq i32 %338, 0
  br i1 %366, label %385, label %367

367:                                              ; preds = %365
  %368 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %369 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %368, i64 0, i32 5
  store i32 17, i32* %369, align 8
  %370 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %371 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %370, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %371, align 4
  %372 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %373 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %372, i64 0, i32 0
  %374 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %373, align 8
  tail call void %374(%struct.jpeg_common_struct* %9) #3
  br label %385

375:                                              ; preds = %363
  %376 = icmp eq i32 %283, 1
  br i1 %376, label %385, label %377

377:                                              ; preds = %375
  %378 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %379 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %378, i64 0, i32 5
  store i32 17, i32* %379, align 8
  %380 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %381 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %380, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %381, align 4
  %382 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %383 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %382, i64 0, i32 0
  %384 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %383, align 8
  tail call void %384(%struct.jpeg_common_struct* %9) #3
  br label %385

385:                                              ; preds = %377, %375, %367, %365
  br i1 %334, label %386, label %479

386:                                              ; preds = %385
  %387 = icmp sgt i32 %336, %338
  %388 = add nsw i32 %340, -1
  %389 = icmp eq i32 %342, %388
  %390 = icmp eq i32 %340, 0
  %391 = sext i32 %336 to i64
  %392 = sext i32 %338 to i64
  %393 = zext i32 %283 to i64
  br label %394

394:                                              ; preds = %440, %386
  %395 = phi i64 [ 0, %386 ], [ %441, %440 ]
  %396 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 1, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = sext i32 %397 to i64
  br i1 %364, label %411, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %398, i64 0
  %401 = load i32, i32* %400, align 16
  %402 = icmp slt i32 %401, 0
  br i1 %402, label %403, label %411

403:                                              ; preds = %399
  %404 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %405 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %404, i64 0, i32 5
  store i32 17, i32* %405, align 8
  %406 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %407 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %406, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %407, align 4
  %408 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %409 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %408, i64 0, i32 0
  %410 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %409, align 8
  tail call void %410(%struct.jpeg_common_struct* %9) #3
  br label %411

411:                                              ; preds = %403, %399, %394
  br i1 %387, label %440, label %412

412:                                              ; preds = %411, %437
  %413 = phi i64 [ %438, %437 ], [ %391, %411 ]
  %414 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %398, i64 %413
  %415 = load i32, i32* %414, align 4
  %416 = icmp slt i32 %415, 0
  br i1 %416, label %417, label %426

417:                                              ; preds = %412
  br i1 %390, label %437, label %418

418:                                              ; preds = %417
  %419 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %420 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %419, i64 0, i32 5
  store i32 17, i32* %420, align 8
  %421 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %422 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %421, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %422, align 4
  %423 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %424 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %423, i64 0, i32 0
  %425 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %424, align 8
  tail call void %425(%struct.jpeg_common_struct* %9) #3
  br label %437

426:                                              ; preds = %412
  %427 = icmp eq i32 %340, %415
  %428 = and i1 %389, %427
  br i1 %428, label %437, label %429

429:                                              ; preds = %426
  %430 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %431 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %430, i64 0, i32 5
  store i32 17, i32* %431, align 8
  %432 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %433 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %432, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %433, align 4
  %434 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %435 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %434, i64 0, i32 0
  %436 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %435, align 8
  tail call void %436(%struct.jpeg_common_struct* %9) #3
  br label %437

437:                                              ; preds = %429, %426, %418, %417
  store i32 %342, i32* %414, align 4
  %438 = add nsw i64 %413, 1
  %439 = icmp slt i64 %413, %392
  br i1 %439, label %412, label %440

440:                                              ; preds = %437, %411
  %441 = add nuw nsw i64 %395, 1
  %442 = icmp eq i64 %441, %393
  br i1 %442, label %479, label %394

443:                                              ; preds = %333
  %444 = icmp ne i32 %338, 63
  %445 = or i32 %340, %336
  %446 = or i32 %445, %342
  %447 = icmp ne i32 %446, 0
  %448 = or i1 %444, %447
  br i1 %448, label %449, label %457

449:                                              ; preds = %443
  %450 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %451 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %450, i64 0, i32 5
  store i32 17, i32* %451, align 8
  %452 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %453 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %452, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %453, align 4
  %454 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %455 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %454, i64 0, i32 0
  %456 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %455, align 8
  tail call void %456(%struct.jpeg_common_struct* %9) #3
  br label %457

457:                                              ; preds = %449, %443
  br i1 %334, label %458, label %479

458:                                              ; preds = %457
  %459 = zext i32 %283 to i64
  br label %460

460:                                              ; preds = %476, %458
  %461 = phi i64 [ 0, %458 ], [ %477, %476 ]
  %462 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 1, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %476, label %468

468:                                              ; preds = %460
  %469 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %470 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %469, i64 0, i32 5
  store i32 19, i32* %470, align 8
  %471 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %472 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %471, i64 0, i32 6, i32 0, i64 0
  store i32 %280, i32* %472, align 4
  %473 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %277, align 8
  %474 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %473, i64 0, i32 0
  %475 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %474, align 8
  tail call void %475(%struct.jpeg_common_struct* %9) #3
  br label %476

476:                                              ; preds = %468, %460
  store i32 1, i32* %465, align 4
  %477 = add nuw nsw i64 %461, 1
  %478 = icmp eq i64 %477, %459
  br i1 %478, label %479, label %460

479:                                              ; preds = %440, %476, %457, %385
  %480 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 1
  %481 = add nuw nsw i32 %280, 1
  %482 = load i32, i32* %229, align 8
  %483 = icmp slt i32 %280, %482
  br i1 %483, label %279, label %484

484:                                              ; preds = %479
  %485 = load i32, i32* %90, align 4
  br label %486

486:                                              ; preds = %484, %272
  %487 = phi i32 [ %485, %484 ], [ %273, %272 ]
  %488 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  %489 = load i32, i32* %488, align 4
  %490 = icmp eq i32 %489, 0
  %491 = icmp sgt i32 %487, 0
  br i1 %490, label %496, label %492

492:                                              ; preds = %486
  br i1 %491, label %494, label %493

493:                                              ; preds = %492
  call void @llvm.lifetime.end.p0i8(i64 2560, i8* nonnull %228) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %227) #3
  br label %542

494:                                              ; preds = %492
  %495 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %500

496:                                              ; preds = %486
  br i1 %491, label %498, label %497

497:                                              ; preds = %496
  call void @llvm.lifetime.end.p0i8(i64 2560, i8* nonnull %228) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %227) #3
  br label %548

498:                                              ; preds = %496
  %499 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %518

500:                                              ; preds = %513, %494
  %501 = phi i32 [ %487, %494 ], [ %514, %513 ]
  %502 = phi i64 [ 0, %494 ], [ %515, %513 ]
  %503 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %502, i64 0
  %504 = load i32, i32* %503, align 16
  %505 = icmp slt i32 %504, 0
  br i1 %505, label %506, label %513

506:                                              ; preds = %500
  %507 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %495, align 8
  %508 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %507, i64 0, i32 5
  store i32 45, i32* %508, align 8
  %509 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %495, align 8
  %510 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %509, i64 0, i32 0
  %511 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %510, align 8
  tail call void %511(%struct.jpeg_common_struct* %9) #3
  %512 = load i32, i32* %90, align 4
  br label %513

513:                                              ; preds = %506, %500
  %514 = phi i32 [ %512, %506 ], [ %501, %500 ]
  %515 = add nuw nsw i64 %502, 1
  %516 = sext i32 %514 to i64
  %517 = icmp slt i64 %515, %516
  br i1 %517, label %500, label %539

518:                                              ; preds = %531, %498
  %519 = phi i32 [ %487, %498 ], [ %532, %531 ]
  %520 = phi i64 [ 0, %498 ], [ %533, %531 ]
  %521 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %520
  %522 = load i32, i32* %521, align 4
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %531

524:                                              ; preds = %518
  %525 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %499, align 8
  %526 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %525, i64 0, i32 5
  store i32 45, i32* %526, align 8
  %527 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %499, align 8
  %528 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %527, i64 0, i32 0
  %529 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %528, align 8
  tail call void %529(%struct.jpeg_common_struct* %9) #3
  %530 = load i32, i32* %90, align 4
  br label %531

531:                                              ; preds = %524, %518
  %532 = phi i32 [ %530, %524 ], [ %519, %518 ]
  %533 = add nuw nsw i64 %520, 1
  %534 = sext i32 %532 to i64
  %535 = icmp slt i64 %533, %534
  br i1 %535, label %518, label %539

536:                                              ; preds = %214
  %537 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 40
  store i32 0, i32* %537, align 4
  %538 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 1, i32* %538, align 8
  br label %548

539:                                              ; preds = %513, %531
  %540 = load i32, i32* %488, align 4
  call void @llvm.lifetime.end.p0i8(i64 2560, i8* nonnull %228) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %227) #3
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %548, label %542

542:                                              ; preds = %493, %539
  %543 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %544 = load i32, i32* %543, align 4
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %542
  %547 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  store i32 1, i32* %547, align 8
  br label %548

548:                                              ; preds = %497, %536, %542, %539, %546
  %549 = icmp eq i32 %1, 0
  br i1 %549, label %558, label %550

550:                                              ; preds = %548
  %551 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %552 = load i32, i32* %551, align 8
  %553 = icmp eq i32 %552, 0
  %554 = getelementptr inbounds i8, i8* %10, i64 32
  %555 = bitcast i8* %554 to i32*
  br i1 %553, label %557, label %556

556:                                              ; preds = %550
  store i32 1, i32* %555, align 8
  br label %561

557:                                              ; preds = %550
  store i32 2, i32* %555, align 8
  br label %561

558:                                              ; preds = %548
  %559 = getelementptr inbounds i8, i8* %10, i64 32
  %560 = bitcast i8* %559 to i32*
  store i32 0, i32* %560, align 8
  br label %561

561:                                              ; preds = %556, %557, %558
  %562 = getelementptr inbounds i8, i8* %10, i64 44
  %563 = bitcast i8* %562 to i32*
  store i32 0, i32* %563, align 4
  %564 = getelementptr inbounds i8, i8* %10, i64 36
  %565 = bitcast i8* %564 to i32*
  store i32 0, i32* %565, align 4
  %566 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %567 = load i32, i32* %566, align 8
  %568 = icmp ne i32 %567, 0
  %569 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  %570 = load i32, i32* %569, align 8
  %571 = zext i1 %568 to i32
  %572 = shl nsw i32 %570, %571
  %573 = getelementptr inbounds i8, i8* %10, i64 40
  %574 = bitcast i8* %573 to i32*
  store i32 %572, i32* %574, align 8
  %575 = getelementptr inbounds i8, i8* %10, i64 48
  %576 = bitcast i8* %575 to i8**
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i8** %576, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @prepare_for_pass(%struct.jpeg_compress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = bitcast %struct.jpeg_comp_master** %2 to %struct.my_comp_master**
  %4 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %5 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %106 [
    i32 0, label %7
    i32 1, label %52
    i32 2, label %78
  ]

7:                                                ; preds = %1
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* %0)
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 24
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 59
  %13 = load %struct.jpeg_color_converter*, %struct.jpeg_color_converter** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_color_converter, %struct.jpeg_color_converter* %13, i64 0, i32 0
  %15 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %14, align 8
  tail call void %15(%struct.jpeg_compress_struct* %0) #3
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 60
  %17 = load %struct.jpeg_downsampler*, %struct.jpeg_downsampler** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_downsampler, %struct.jpeg_downsampler* %17, i64 0, i32 0
  %19 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %18, align 8
  tail call void %19(%struct.jpeg_compress_struct* %0) #3
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 56
  %21 = load %struct.jpeg_c_prep_controller*, %struct.jpeg_c_prep_controller** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_c_prep_controller, %struct.jpeg_c_prep_controller* %21, i64 0, i32 0
  %23 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %22, align 8
  tail call void %23(%struct.jpeg_compress_struct* %0, i32 0) #3
  br label %24

24:                                               ; preds = %7, %11
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 61
  %26 = load %struct.jpeg_forward_dct*, %struct.jpeg_forward_dct** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_forward_dct, %struct.jpeg_forward_dct* %26, i64 0, i32 0
  %28 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %27, align 8
  tail call void %28(%struct.jpeg_compress_struct* %0) #3
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %30 = bitcast %struct.jpeg_entropy_encoder** %29 to void (%struct.jpeg_compress_struct*, i32)***
  %31 = load void (%struct.jpeg_compress_struct*, i32)**, void (%struct.jpeg_compress_struct*, i32)*** %30, align 8
  %32 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %34 = load i32, i32* %33, align 8
  tail call void %32(%struct.jpeg_compress_struct* %0, i32 %34) #3
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %36 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %36, i64 0, i32 0
  %38 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %37, align 8
  %39 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, 1
  %42 = select i1 %41, i32 3, i32 0
  tail call void %38(%struct.jpeg_compress_struct* %0, i32 %42) #3
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 55
  %44 = load %struct.jpeg_c_main_controller*, %struct.jpeg_c_main_controller** %43, align 8
  %45 = getelementptr inbounds %struct.jpeg_c_main_controller, %struct.jpeg_c_main_controller* %44, i64 0, i32 0
  %46 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %45, align 8
  tail call void %46(%struct.jpeg_compress_struct* %0, i32 0) #3
  %47 = load i32, i32* %33, align 8
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  br i1 %48, label %51, label %50

50:                                               ; preds = %24
  store i32 0, i32* %49, align 8
  br label %114

51:                                               ; preds = %24
  store i32 1, i32* %49, align 8
  br label %114

52:                                               ; preds = %1
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* %0)
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 25
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60, %52, %56
  %65 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %66 = bitcast %struct.jpeg_entropy_encoder** %65 to void (%struct.jpeg_compress_struct*, i32)***
  %67 = load void (%struct.jpeg_compress_struct*, i32)**, void (%struct.jpeg_compress_struct*, i32)*** %66, align 8
  %68 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %67, align 8
  tail call void %68(%struct.jpeg_compress_struct* %0, i32 1) #3
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %70 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %69, align 8
  %71 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %70, i64 0, i32 0
  %72 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %71, align 8
  tail call void %72(%struct.jpeg_compress_struct* %0, i32 2) #3
  %73 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %73, align 8
  br label %114

74:                                               ; preds = %60
  store i32 2, i32* %5, align 8
  %75 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %1, %74
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  tail call fastcc void @select_scan_parameters(%struct.jpeg_compress_struct* %0)
  tail call fastcc void @per_scan_setup(%struct.jpeg_compress_struct* %0)
  br label %83

83:                                               ; preds = %78, %82
  %84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %85 = bitcast %struct.jpeg_entropy_encoder** %84 to void (%struct.jpeg_compress_struct*, i32)***
  %86 = load void (%struct.jpeg_compress_struct*, i32)**, void (%struct.jpeg_compress_struct*, i32)*** %85, align 8
  %87 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %86, align 8
  tail call void %87(%struct.jpeg_compress_struct* %0, i32 0) #3
  %88 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %89 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %89, i64 0, i32 0
  %91 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %90, align 8
  tail call void %91(%struct.jpeg_compress_struct* %0, i32 2) #3
  %92 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %83
  %96 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %97 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %96, align 8
  %98 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %97, i64 0, i32 1
  %99 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %98, align 8
  tail call void %99(%struct.jpeg_compress_struct* %0) #3
  br label %100

100:                                              ; preds = %95, %83
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %102 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %102, i64 0, i32 2
  %104 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %103, align 8
  tail call void %104(%struct.jpeg_compress_struct* %0) #3
  %105 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %105, align 8
  br label %114

106:                                              ; preds = %1
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5
  store i32 48, i32* %109, align 8
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i64 0, i32 0
  %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8
  %113 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %112(%struct.jpeg_common_struct* %113) #3
  br label %114

114:                                              ; preds = %50, %51, %106, %100, %64
  %115 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add nsw i32 %118, -1
  %120 = icmp eq i32 %116, %119
  %121 = zext i1 %120 to i32
  %122 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 0, i32 4
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %124 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %123, align 8
  %125 = icmp eq %struct.jpeg_progress_mgr* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %114
  %127 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %124, i64 0, i32 3
  store i32 %116, i32* %127, align 8
  %128 = load i32, i32* %117, align 8
  %129 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %123, align 8
  %130 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %129, i64 0, i32 4
  store i32 %128, i32* %130, align 4
  br label %131

131:                                              ; preds = %114, %126
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @pass_startup(%struct.jpeg_compress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %3, i64 0, i32 3
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %6 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %6, i64 0, i32 1
  %8 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %7, align 8
  tail call void %8(%struct.jpeg_compress_struct* %0) #3
  %9 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %5, align 8
  %10 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %9, i64 0, i32 2
  %11 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %10, align 8
  tail call void %11(%struct.jpeg_compress_struct* %0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @finish_pass_master(%struct.jpeg_compress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %3 = bitcast %struct.jpeg_comp_master** %2 to %struct.my_comp_master**
  %4 = load %struct.my_comp_master*, %struct.my_comp_master** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %6 = load %struct.jpeg_entropy_encoder*, %struct.jpeg_entropy_encoder** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_entropy_encoder, %struct.jpeg_entropy_encoder* %6, i64 0, i32 2
  %8 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %7, align 8
  tail call void %8(%struct.jpeg_compress_struct* %0) #3
  %9 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %29 [
    i32 0, label %11
    i32 1, label %19
    i32 2, label %20
  ]

11:                                               ; preds = %1
  store i32 2, i32* %9, align 8
  %12 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 4
  br label %29

19:                                               ; preds = %1
  store i32 2, i32* %9, align 8
  br label %29

20:                                               ; preds = %1
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i32 1, i32* %9, align 8
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %11, %15, %1, %25, %19
  %30 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %4, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @select_scan_parameters(%struct.jpeg_compress_struct*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %3 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %2, align 8
  %4 = icmp eq %struct.jpeg_scan_info* %3, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %7 = bitcast %struct.jpeg_comp_master** %6 to %struct.my_comp_master**
  %8 = load %struct.my_comp_master*, %struct.my_comp_master** %7, align 8
  %9 = getelementptr inbounds %struct.my_comp_master, %struct.my_comp_master* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  store i32 %13, i32* %14, align 4
  %15 = load i32, i32* %12, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %19 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %18, align 8
  br label %20

20:                                               ; preds = %17, %20
  %21 = phi i64 [ 0, %17 ], [ %27, %20 ]
  %22 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %19, i64 %24
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %21
  store %struct.jpeg_component_info* %25, %struct.jpeg_component_info** %26, align 8
  %27 = add nuw nsw i64 %21, 1
  %28 = load i32, i32* %12, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  br i1 %30, label %20, label %31

31:                                               ; preds = %20, %5
  %32 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 5
  %42 = load i32, i32* %41, align 4
  br label %129

43:                                               ; preds = %1
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 4
  br i1 %46, label %47, label %61

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 5
  store i32 26, i32* %50, align 8
  %51 = load i32, i32* %44, align 4
  %52 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %53 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %52, i64 0, i32 6, i32 0, i64 0
  store i32 %51, i32* %53, align 4
  %54 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %55 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %54, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %55, align 4
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 0
  %58 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %57, align 8
  %59 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %58(%struct.jpeg_common_struct* %59) #3
  %60 = load i32, i32* %44, align 4
  br label %61

61:                                               ; preds = %47, %43
  %62 = phi i32 [ %60, %47 ], [ %45, %43 ]
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  store i32 %62, i32* %63, align 4
  %64 = icmp sgt i32 %62, 0
  br i1 %64, label %65, label %125

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %67 = zext i32 %62 to i64
  %68 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %66, align 8
  %69 = icmp ult i32 %62, 4
  br i1 %69, label %117, label %70

70:                                               ; preds = %65
  %71 = and i64 %67, 4294967292
  %72 = add nsw i64 %71, -4
  %73 = lshr exact i64 %72, 2
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %72, 0
  br i1 %76, label %103, label %77

77:                                               ; preds = %70
  %78 = sub nuw nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %99, %79 ]
  %81 = phi <2 x i64> [ <i64 0, i64 1>, %77 ], [ %100, %79 ]
  %82 = phi i64 [ %78, %77 ], [ %101, %79 ]
  %83 = add <2 x i64> %81, <i64 2, i64 2>
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %81
  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %83
  %86 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %80
  %87 = bitcast %struct.jpeg_component_info** %86 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %84, <2 x %struct.jpeg_component_info*>* %87, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %86, i64 2
  %89 = bitcast %struct.jpeg_component_info** %88 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %85, <2 x %struct.jpeg_component_info*>* %89, align 8
  %90 = or i64 %80, 4
  %91 = add <2 x i64> %81, <i64 4, i64 4>
  %92 = add <2 x i64> %81, <i64 6, i64 6>
  %93 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %91
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %92
  %95 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %90
  %96 = bitcast %struct.jpeg_component_info** %95 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %93, <2 x %struct.jpeg_component_info*>* %96, align 8
  %97 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %95, i64 2
  %98 = bitcast %struct.jpeg_component_info** %97 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %94, <2 x %struct.jpeg_component_info*>* %98, align 8
  %99 = add i64 %80, 8
  %100 = add <2 x i64> %81, <i64 8, i64 8>
  %101 = add i64 %82, -2
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %79, !llvm.loop !2

103:                                              ; preds = %79, %70
  %104 = phi i64 [ 0, %70 ], [ %99, %79 ]
  %105 = phi <2 x i64> [ <i64 0, i64 1>, %70 ], [ %100, %79 ]
  %106 = icmp eq i64 %75, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %103
  %108 = add <2 x i64> %105, <i64 2, i64 2>
  %109 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %105
  %110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, <2 x i64> %108
  %111 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %104
  %112 = bitcast %struct.jpeg_component_info** %111 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %109, <2 x %struct.jpeg_component_info*>* %112, align 8
  %113 = getelementptr inbounds %struct.jpeg_component_info*, %struct.jpeg_component_info** %111, i64 2
  %114 = bitcast %struct.jpeg_component_info** %113 to <2 x %struct.jpeg_component_info*>*
  store <2 x %struct.jpeg_component_info*> %110, <2 x %struct.jpeg_component_info*>* %114, align 8
  br label %115

115:                                              ; preds = %103, %107
  %116 = icmp eq i64 %71, %67
  br i1 %116, label %125, label %117

117:                                              ; preds = %115, %65
  %118 = phi i64 [ 0, %65 ], [ %71, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi i64 [ %123, %119 ], [ %118, %117 ]
  %121 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, i64 %120
  %122 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %120
  store %struct.jpeg_component_info* %121, %struct.jpeg_component_info** %122, align 8
  %123 = add nuw nsw i64 %120, 1
  %124 = icmp eq i64 %123, %67
  br i1 %124, label %125, label %119, !llvm.loop !4

125:                                              ; preds = %119, %115, %61
  %126 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 50
  store i32 0, i32* %126, align 4
  %127 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 51
  store i32 63, i32* %127, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 52
  store i32 0, i32* %128, align 4
  br label %129

129:                                              ; preds = %125, %31
  %130 = phi i32 [ 0, %125 ], [ %42, %31 ]
  %131 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 53
  store i32 %130, i32* %131, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @per_scan_setup(%struct.jpeg_compress_struct*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 0
  %7 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 47
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 13
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 8>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 17
  store i32 1, i32* %16, align 4
  %17 = load i32, i32* %11, align 8
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = urem i32 %17, %19
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i32 %19, i32 %20
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %7, i64 0, i32 18
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 0
  store i32 0, i32* %25, align 4
  br label %150

26:                                               ; preds = %1
  %27 = add i32 %3, -1
  %28 = icmp ugt i32 %27, 3
  br i1 %28, label %29, label %42

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 5
  store i32 26, i32* %32, align 8
  %33 = load i32, i32* %2, align 4
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 6, i32 0, i64 0
  store i32 %33, i32* %35, align 4
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 6, i32 0, i64 1
  store i32 4, i32* %37, align 4
  %38 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %30, align 8
  %39 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %38, i64 0, i32 0
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  %41 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %40(%struct.jpeg_common_struct* %41) #3
  br label %42

42:                                               ; preds = %26, %29
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 41
  %47 = load i32, i32* %46, align 8
  %48 = shl nsw i32 %47, 3
  %49 = sext i32 %48 to i64
  %50 = tail call i64 @jdiv_round_up(i64 %45, i64 %49) #3
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42
  %57 = load i32, i32* %56, align 4
  %58 = shl nsw i32 %57, 3
  %59 = sext i32 %58 to i64
  %60 = tail call i64 @jdiv_round_up(i64 %55, i64 %59) #3
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 47
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  store i32 0, i32* %63, align 8
  %64 = load i32, i32* %2, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %150

66:                                               ; preds = %42
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %68 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %69

69:                                               ; preds = %66, %145
  %70 = phi i64 [ 0, %66 ], [ %146, %145 ]
  %71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %70
  %72 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 13
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 14
  store i32 %77, i32* %78, align 8
  %79 = mul nsw i32 %77, %74
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 15
  store i32 %79, i32* %80, align 4
  %81 = shl nsw i32 %74, 3
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 16
  store i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 7
  %84 = load i32, i32* %83, align 4
  %85 = urem i32 %84, %74
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 %74, i32 %85
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 17
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 8
  %90 = load i32, i32* %89, align 8
  %91 = urem i32 %90, %77
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, i32 %77, i32 %91
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %72, i64 0, i32 18
  store i32 %93, i32* %94, align 8
  %95 = load i32, i32* %63, align 8
  %96 = add nsw i32 %95, %79
  %97 = icmp sgt i32 %96, 10
  br i1 %97, label %98, label %104

98:                                               ; preds = %69
  %99 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8
  %100 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %99, i64 0, i32 5
  store i32 13, i32* %100, align 8
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %67, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i64 0, i32 0
  %103 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %102, align 8
  tail call void %103(%struct.jpeg_common_struct* %68) #3
  br label %104

104:                                              ; preds = %98, %69
  %105 = icmp sgt i32 %79, 0
  br i1 %105, label %106, label %145

106:                                              ; preds = %104
  %107 = trunc i64 %70 to i32
  %108 = mul i32 %77, %74
  %109 = add nsw i32 %108, -1
  %110 = and i32 %108, 3
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %106, %112
  %113 = phi i32 [ %115, %112 ], [ %79, %106 ]
  %114 = phi i32 [ %120, %112 ], [ %110, %106 ]
  %115 = add nsw i32 %113, -1
  %116 = load i32, i32* %63, align 8
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %63, align 8
  %118 = sext i32 %116 to i64
  %119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %118
  store i32 %107, i32* %119, align 4
  %120 = add i32 %114, -1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %112, !llvm.loop !6

122:                                              ; preds = %112, %106
  %123 = phi i32 [ %79, %106 ], [ %115, %112 ]
  %124 = icmp ult i32 %109, 3
  br i1 %124, label %145, label %125

125:                                              ; preds = %122, %125
  %126 = phi i32 [ %139, %125 ], [ %123, %122 ]
  %127 = load i32, i32* %63, align 8
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %63, align 8
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %129
  store i32 %107, i32* %130, align 4
  %131 = load i32, i32* %63, align 8
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %63, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %133
  store i32 %107, i32* %134, align 4
  %135 = load i32, i32* %63, align 8
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %63, align 8
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %137
  store i32 %107, i32* %138, align 4
  %139 = add nsw i32 %126, -4
  %140 = load i32, i32* %63, align 8
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %63, align 8
  %142 = sext i32 %140 to i64
  %143 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %142
  store i32 %107, i32* %143, align 4
  %144 = icmp sgt i32 %139, 0
  br i1 %144, label %125, label %145

145:                                              ; preds = %122, %125, %104
  %146 = add nuw nsw i64 %70, 1
  %147 = load i32, i32* %2, align 4
  %148 = sext i32 %147 to i64
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %69, label %150

150:                                              ; preds = %145, %42, %5
  %151 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 31
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %164

154:                                              ; preds = %150
  %155 = sext i32 %152 to i64
  %156 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46
  %157 = load i32, i32* %156, align 8
  %158 = zext i32 %157 to i64
  %159 = mul nsw i64 %158, %155
  %160 = icmp slt i64 %159, 65535
  %161 = select i1 %160, i64 %159, i64 65535
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  store i32 %162, i32* %163, align 8
  br label %164

164:                                              ; preds = %154, %150
  ret void
}

declare i64 @jdiv_round_up(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
