; ModuleID = '../../net/base/ip_endpoint.cc'
source_filename = "../../net/base/ip_endpoint.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN3net10IPEndPointC1Ev = hidden unnamed_addr alias void (%"class.net::IPEndPoint"*), void (%"class.net::IPEndPoint"*)* @_ZN3net10IPEndPointC2Ev
@_ZN3net10IPEndPointD1Ev = hidden unnamed_addr alias void (%"class.net::IPEndPoint"*), void (%"class.net::IPEndPoint"*)* @_ZN3net10IPEndPointD2Ev
@_ZN3net10IPEndPointC1ERKNS_9IPAddressEt = hidden unnamed_addr alias void (%"class.net::IPEndPoint"*, %"class.net::IPAddress"*, i16), void (%"class.net::IPEndPoint"*, %"class.net::IPAddress"*, i16)* @_ZN3net10IPEndPointC2ERKNS_9IPAddressEt
@_ZN3net10IPEndPointC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*), void (%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)* @_ZN3net10IPEndPointC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10IPEndPointC2Ev(%"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %2) #6
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 2
  ret void
}

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10IPEndPointD2Ev(%"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10IPEndPointC2ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %4, %"class.net::IPAddress"* dereferenceable(17) %1) #6
  %5 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  store i16 %2, i16* %5, align 2
  ret void
}

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10IPEndPointC2ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* nocapture readonly dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %3) #6
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 1 %5, i64 17, i1 false)
  %6 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  store i16 %7, i16* %8, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* dereferenceable(17) %2) #6
  ret i32 %3
}

declare i32 @_ZN3net16GetAddressFamilyERKNS_9IPAddressE(%"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net10IPEndPoint17GetSockAddrFamilyEv(%"class.net::IPEndPoint"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 16
  %5 = select i1 %4, i32 10, i32 0
  %6 = icmp eq i8 %3, 4
  %7 = select i1 %6, i32 2, i32 %5
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nocapture readonly, %struct.sockaddr* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %34 [
    i8 4, label %6
    i8 16, label %21
  ]

6:                                                ; preds = %3
  %7 = load i32, i32* %2, align 4
  %8 = icmp ult i32 %7, 16
  br i1 %8, label %34, label %9

9:                                                ; preds = %6
  store i32 16, i32* %2, align 4
  %10 = bitcast %struct.sockaddr* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  store i16 2, i16* %11, align 4
  %12 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  %13 = load i16, i16* %12, align 2
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #6
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1
  %16 = bitcast [14 x i8]* %15 to i16*
  store i16 %14, i16* %16, align 2
  %17 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 2
  %18 = bitcast %"class.net::IPEndPoint"* %0 to i32*
  %19 = bitcast i8* %17 to i32*
  %20 = load i32, i32* %18, align 1
  store i32 %20, i32* %19, align 4
  br label %34

21:                                               ; preds = %3
  %22 = load i32, i32* %2, align 4
  %23 = icmp ult i32 %22, 28
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  store i32 28, i32* %2, align 4
  %25 = bitcast %struct.sockaddr* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 28, i1 false)
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  store i16 10, i16* %26, align 4
  %27 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  %28 = load i16, i16* %27, align 2
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #6
  %30 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1
  %31 = bitcast [14 x i8]* %30 to i16*
  store i16 %29, i16* %31, align 2
  %32 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 6
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 1 %33, i64 16, i1 false)
  br label %34

34:                                               ; preds = %9, %24, %3, %21, %6
  %35 = phi i1 [ false, %6 ], [ false, %21 ], [ false, %3 ], [ true, %24 ], [ true, %9 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nocapture, %struct.sockaddr*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::IPAddress", align 1
  %5 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  switch i16 %6, label %25 [
    i16 2, label %7
    i16 10, label %11
  ]

7:                                                ; preds = %3
  %8 = icmp ult i32 %2, 16
  br i1 %8, label %25, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 2
  br label %15

11:                                               ; preds = %3
  %12 = icmp ult i32 %2, 28
  br i1 %12, label %25, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, i64 6
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i8* [ %14, %13 ], [ %10, %9 ]
  %17 = phi i64 [ 16, %13 ], [ 4, %9 ]
  %18 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1
  %19 = bitcast [14 x i8]* %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #6
  %22 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %22) #6
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %4, i8* %16, i64 %17) #6
  %23 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %23, i8* nonnull align 1 %22, i64 17, i1 false)
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %22) #6
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  store i16 %21, i16* %24, align 2
  br label %25

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i1 [ true, %15 ], [ false, %7 ], [ false, %11 ], [ false, %3 ]
  ret i1 %26
}

declare void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  tail call void @_ZN3net25IPAddressToStringWithPortERKNS_9IPAddressEt(%"class.std::__1::basic_string"* sret %0, %"class.net::IPAddress"* dereferenceable(17) %3, i16 zeroext %5) #6
  ret void
}

declare void @_ZN3net25IPAddressToStringWithPortERKNS_9IPAddressEt(%"class.std::__1::basic_string"* sret, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0
  tail call void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* sret %0, %"class.net::IPAddress"* %3) #6
  ret void
}

declare void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPAddress"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net10IPEndPointltERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %5, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = icmp ult i8 %5, %8
  br label %22

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %15 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %3, %"class.net::IPAddress"* dereferenceable(17) %6) #6
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %6, %"class.net::IPAddress"* dereferenceable(17) %3) #6
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = load i16, i16* %13, align 2
  %20 = load i16, i16* %14, align 2
  %21 = icmp ult i16 %19, %20
  br label %22

22:                                               ; preds = %18, %16, %12, %10
  %23 = phi i1 [ %11, %10 ], [ %21, %18 ], [ true, %12 ], [ false, %16 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %3, %"class.net::IPAddress"* dereferenceable(17) %4) #6
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %8, %10
  br label %12

12:                                               ; preds = %6, %2
  %13 = phi i1 [ false, %2 ], [ %11, %6 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net10IPEndPointneERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %3, %"class.net::IPAddress"* dereferenceable(17) %4) #6
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = icmp ne i16 %8, %10
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ true, %2 ], [ %11, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
