; ModuleID = '../../third_party/blink/renderer/core/execution_context/remote_security_context.cc'
source_filename = "../../third_party/blink/renderer/core/execution_context/remote_security_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RemoteSecurityContext" = type { %"class.blink::SecurityContext" }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.2 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.15", %"class.std::__1::map.24"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::map.24" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type opaque

$_ZN5blink21RemoteSecurityContextD0Ev = comdat any

$_ZTVN5blink21RemoteSecurityContextE = comdat any

@_ZTVN5blink21RemoteSecurityContextE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SecurityContext"*)* @_ZN5blink15SecurityContextD2Ev to i8*), i8* bitcast (void (%"class.blink::RemoteSecurityContext"*)* @_ZN5blink21RemoteSecurityContextD0Ev to i8*)] }, comdat, align 8

@_ZN5blink21RemoteSecurityContextC1Ev = hidden unnamed_addr alias void (%"class.blink::RemoteSecurityContext"*), void (%"class.blink::RemoteSecurityContext"*)* @_ZN5blink21RemoteSecurityContextC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21RemoteSecurityContextC2Ev(%"class.blink::RemoteSecurityContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink15SecurityContextC2EPNS_16ExecutionContextE(%"class.blink::SecurityContext"* %2, %"class.blink::ExecutionContext"* null) #6
  %3 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink21RemoteSecurityContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN5blink15SecurityContextC2EPNS_16ExecutionContextE(%"class.blink::SecurityContext"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21RemoteSecurityContext19SetReplicatedOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::RemoteSecurityContext"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* %3, %"class.blink::SecurityOrigin"* %1) #6
  ret void
}

declare void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21RemoteSecurityContext27ResetAndEnforceSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::RemoteSecurityContext"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = tail call zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* %3, i32 4) #6
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 2, i32 0
  %8 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %7, align 8
  %9 = icmp eq %"class.blink::SecurityOrigin"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin21DeriveNewOpaqueOriginEv(%"class.blink::SecurityOrigin"* nonnull %8) #6
  tail call void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* %3, %"class.blink::SecurityOrigin"* %15) #6
  br label %16

16:                                               ; preds = %10, %6, %14, %2
  ret void
}

declare zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"*, i32) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin21DeriveNewOpaqueOriginEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21RemoteSecurityContext27InitializePermissionsPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEES8_PKNS_17PermissionsPolicyE(%"class.blink::RemoteSecurityContext"* nocapture, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.blink::PermissionsPolicy"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.url::Origin", align 8
  %6 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %6, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %6, align 8
  %8 = icmp eq %"class.blink::PermissionsPolicy"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %7) #6
  %10 = bitcast %"class.blink::PermissionsPolicy"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %4, %9
  %12 = bitcast %"class.url::Origin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 2, i32 0
  %14 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %13, align 8
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %5, %"class.blink::SecurityOrigin"* %14) #6
  %15 = call %"class.blink::PermissionsPolicy"* @_ZN5blink17PermissionsPolicy22CreateFromParentPolicyEPKS0_RKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEERKN3url6OriginE(%"class.blink::PermissionsPolicy"* %3, %"class.std::__1::vector"* %2, %"class.url::Origin"* nonnull dereferenceable(80) %5) #6
  %16 = ptrtoint %"class.blink::PermissionsPolicy"* %15 to i64
  %17 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.blink::PermissionsPolicy"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %19) #6
  %23 = bitcast %"class.blink::PermissionsPolicy"* %19 to i8*
  call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %22, %11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #6
  %25 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %18, align 8
  call void @_ZN5blink17PermissionsPolicy15SetHeaderPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE(%"class.blink::PermissionsPolicy"* %25, %"class.std::__1::vector"* %1) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::PermissionsPolicy"* @_ZN5blink17PermissionsPolicy22CreateFromParentPolicyEPKS0_RKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS3_9allocatorIS5_EEEERKN3url6OriginE(%"class.blink::PermissionsPolicy"*, %"class.std::__1::vector"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink17PermissionsPolicy15SetHeaderPolicyERKNSt3__16vectorINS_34ParsedPermissionsPolicyDeclarationENS1_9allocatorIS3_EEEE(%"class.blink::PermissionsPolicy"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15SecurityContextD2Ev(%"class.blink::SecurityContext"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21RemoteSecurityContextD0Ev(%"class.blink::RemoteSecurityContext"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteSecurityContext", %"class.blink::RemoteSecurityContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink15SecurityContextD2Ev(%"class.blink::SecurityContext"* %2) #6
  %3 = bitcast %"class.blink::RemoteSecurityContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
