; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_unswitch_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_unswitch_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch" = type { %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::unordered_map.1013", %"class.std::__1::vector.1037" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.936", %"class.std::__1::unordered_set.943", i8, [7 x i8] }>
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.943" = type { %"class.std::__1::__hash_table.944" }
%"class.std::__1::__hash_table.944" = type <{ %"class.std::__1::unique_ptr.945", %"class.std::__1::__compressed_pair.955", %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.962", [4 x i8] }>
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947", %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::__hash_node_base.948"** }
%"struct.std::__1::__hash_node_base.948" = type { %"struct.std::__1::__hash_node_base.948"* }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.std::__1::__bucket_list_deallocator.950" }
%"class.std::__1::__bucket_list_deallocator.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.std::__1::__hash_node_base.948" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.936", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.965", %"class.std::__1::vector.989" }
%"class.std::__1::unordered_map.965" = type { %"class.std::__1::__hash_table.966" }
%"class.std::__1::__hash_table.966" = type <{ %"class.std::__1::unique_ptr.967", %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.985", [4 x i8] }>
%"class.std::__1::unique_ptr.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969", %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::__hash_node_base.970"** }
%"struct.std::__1::__hash_node_base.970" = type { %"struct.std::__1::__hash_node_base.970"* }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.std::__1::__bucket_list_deallocator.972" }
%"class.std::__1::__bucket_list_deallocator.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::__hash_node_base.970" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.997" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.991" }
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::pair"* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1033", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.spvtools::opt::BasicBlock"** }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.spvtools::opt::LoopUtils::LoopCloningResult" = type { %"class.std::__1::unordered_map.1208", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328", %"class.std::__1::vector.38" }
%"class.std::__1::unordered_map.1208" = type { %"class.std::__1::__hash_table.1209" }
%"class.std::__1::__hash_table.1209" = type <{ %"class.std::__1::unique_ptr.1210", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1225", %"class.std::__1::__compressed_pair.1228", [4 x i8] }>
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"struct.std::__1::__hash_node_base.1213"** }
%"struct.std::__1::__hash_node_base.1213" = type { %"struct.std::__1::__hash_node_base.1213"* }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.std::__1::__bucket_list_deallocator.1215" }
%"class.std::__1::__bucket_list_deallocator.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"struct.std::__1::__hash_node_base.1213" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::LoopUnswitchPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function.1129" = type { %"class.std::__1::__function::__policy_func.1133" }
%"class.std::__1::__function::__policy_func.1133" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1134", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1134" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::__less.1343" = type { i8 }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple.1166" = type { %"struct.std::__1::__tuple_impl.1167" }
%"struct.std::__1::__tuple_impl.1167" = type { %"class.std::__1::__tuple_leaf.1168" }
%"class.std::__1::__tuple_leaf.1168" = type { i32* }
%"class.std::__1::tuple.1108" = type { i8 }
%"class.spvtools::opt::LoopUtils" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"* }
%"class.std::__1::function.1120" = type { %"class.std::__1::__function::__policy_func.1124" }
%"class.std::__1::__function::__policy_func.1124" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1125", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1125" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1179" = type { %"class.std::__1::__function::__policy_func.1183" }
%"class.std::__1::__function::__policy_func.1183" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1184", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1184" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"*, %"class.std::__1::__compressed_pair.1192" }
%"struct.std::__1::pair.1191" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"struct.std::__1::pair.1191"* }
%"class.std::__1::vector.1233" = type { %"class.std::__1::__vector_base.1234" }
%"class.std::__1::__vector_base.1234" = type { %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"*, %"class.std::__1::__compressed_pair.1237" }
%"struct.std::__1::pair.1235" = type <{ %"class.spvtools::utils::SmallVector", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"struct.std::__1::pair.1235"* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.931", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::IteratorRange" = type { %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator" }
%"class.spvtools::opt::TreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1008" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"**, %"class.std::__1::__compressed_pair.1003" }
%"struct.std::__1::pair.1002" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1044" }
%"class.std::__1::__wrap_iter.1044" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.std::__1::pair.1002"** }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__hash_node.1054" = type <{ %"struct.std::__1::__hash_node_base.948", i64, i32, [4 x i8] }>
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::PostDominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1056", %"class.std::__1::map.1063", i8, [7 x i8] }>
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1058" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1056", i32, i32 }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1063" = type { %"class.std::__1::__tree.1064" }
%"class.std::__1::__tree.1064" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.1320" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1319" }
%"struct.std::__1::pair.1319" = type { i32, %"struct.spvtools::opt::DominatorTreeNode" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::function.1081" = type { %"class.std::__1::__function::__policy_func.1085" }
%"class.std::__1::__function::__policy_func.1085" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1086", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1086" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1087" = type { %"class.std::__1::__function::__policy_func.1091" }
%"class.std::__1::__function::__policy_func.1091" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1092", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1092" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::pair.1079" = type <{ i32, i8, [3 x i8] }>
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1075" }
%"struct.std::__1::pair.1075" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple.1142" = type { %"struct.std::__1::__tuple_impl.1143" }
%"struct.std::__1::__tuple_impl.1143" = type { %"class.std::__1::__tuple_leaf.1144" }
%"class.std::__1::__tuple_leaf.1144" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::__function::__default_alloc_func.1175" = type { %class.anon.1093 }
%class.anon.1093 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::__1::function.1197" = type { %"class.std::__1::__function::__policy_func.1201" }
%"class.std::__1::__function::__policy_func.1201" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1202", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1202" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::vector.1365" = type { %"class.std::__1::__vector_base.1366" }
%"class.std::__1::__vector_base.1366" = type { %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"*, %"class.std::__1::__compressed_pair.1369" }
%"struct.std::__1::pair.1367" = type <{ %"class.spvtools::opt::Instruction"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"struct.std::__1::pair.1367"* }
%"class.std::__1::function.1374" = type { %"class.std::__1::__function::__policy_func.1378" }
%"class.std::__1::__function::__policy_func.1378" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1379", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1379" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"struct.std::__1::__split_buffer.1243" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1266" = type { %class.anon.1177 }
%class.anon.1177 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionBuilder"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* }
%"class.std::__1::__tree_node.1322" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1323" }
%"struct.std::__1::__value_type.1323" = type { %"struct.std::__1::pair.1324" }
%"struct.std::__1::pair.1324" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.1344", %"class.std::__1::map.1351" }
%"class.std::__1::vector.1344" = type { %"class.std::__1::__vector_base.1345" }
%"class.std::__1::__vector_base.1345" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.1351" = type { %"class.std::__1::__tree.1352" }
%"class.std::__1::__tree.1352" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1353", %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1248 }
%union.anon.1248 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.1344" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__function::__default_alloc_func.1384" = type { %class.anon.1380 }
%class.anon.1380 = type { %"class.std::__1::vector.1365"*, %"class.std::__1::function.1197"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* }
%"class.std::__1::__function::__default_alloc_func.1389" = type { %class.anon.1232 }
%class.anon.1232 = type { %"class.std::__1::function.1197", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* }
%"struct.std::__1::pair.1392" = type { i32, i32 }
%"struct.std::__1::__split_buffer.1407" = type { %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"**, %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1004", %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.std::__1::allocator.1006"* }
%"class.std::__1::allocator.1006" = type { i8 }

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt16LoopUnswitchPassD0Ev = comdat any

$_ZNK8spvtools3opt16LoopUnswitchPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_ = comdat any

$_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt11Instruction15RemoveInOperandEj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj = comdat any

$_ZNSt3__16vectorINS_4pairIN8spvtools5utils11SmallVectorIjLm2EEEjEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRS5_jEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_ = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@__const._ZN8spvtools3opt16LoopUnswitchPass15ProcessFunctionEPNS0_8FunctionE.unswitcher = private unnamed_addr constant %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch" { %"class.spvtools::opt::Function"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Function"*), %"class.spvtools::opt::Loop"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"*), %"class.spvtools::opt::LoopDescriptor"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::LoopDescriptor"*), %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.std::__1::unordered_map.1013" { %"class.std::__1::__hash_table.1014" <{ %"class.std::__1::unique_ptr.1015" { %"class.std::__1::__compressed_pair.1016" { %"struct.std::__1::__compressed_pair_elem.1017" { %"struct.std::__1::__hash_node_base.1018"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1018"**) }, %"struct.std::__1::__compressed_pair_elem.1019" { %"class.std::__1::__bucket_list_deallocator.1020" { %"class.std::__1::__compressed_pair.1021" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1025" { %"struct.std::__1::__compressed_pair_elem.1026" { %"struct.std::__1::__hash_node_base.1018" { %"struct.std::__1::__hash_node_base.1018"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1018"*) } } }, %"class.std::__1::__compressed_pair.1030" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1033" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.1037" { %"class.std::__1::__vector_base.1038" { %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**), %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**), %"class.std::__1::__compressed_pair.1039" { %"struct.std::__1::__compressed_pair_elem.1040" { %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**) } } } } }, align 8
@_ZTVN8spvtools3opt16LoopUnswitchPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LoopUnswitchPass"*)* @_ZN8spvtools3opt16LoopUnswitchPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LoopUnswitchPass"*)* @_ZNK8spvtools3opt16LoopUnswitchPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LoopUnswitchPass"*)* @_ZN8spvtools3opt16LoopUnswitchPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden local_unnamed_addr constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlRKS8_E_FbSH_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEvPv, i8 0, %"class.std::type_info"* null }, align 8
@__const._ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEv.clone_result = private unnamed_addr constant %"struct.spvtools::opt::LoopUtils::LoopCloningResult" { %"class.std::__1::unordered_map.1208" { %"class.std::__1::__hash_table.1209" <{ %"class.std::__1::unique_ptr.1210" { %"class.std::__1::__compressed_pair.1211" { %"struct.std::__1::__compressed_pair_elem.1212" { %"struct.std::__1::__hash_node_base.1213"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1213"**) }, %"struct.std::__1::__compressed_pair_elem.1214" { %"class.std::__1::__bucket_list_deallocator.1215" { %"class.std::__1::__compressed_pair.1216" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1220" { %"struct.std::__1::__compressed_pair_elem.1221" { %"struct.std::__1::__hash_node_base.1213" { %"struct.std::__1::__hash_node_base.1213"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1213"*) } } }, %"class.std::__1::__compressed_pair.1225" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1228" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.249" { %"class.std::__1::__hash_table.250" <{ %"class.std::__1::unique_ptr.251" { %"class.std::__1::__compressed_pair.252" { %"struct.std::__1::__compressed_pair_elem.253" { %"struct.std::__1::__hash_node_base.254"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"**) }, %"struct.std::__1::__compressed_pair_elem.255" { %"class.std::__1::__bucket_list_deallocator.256" { %"class.std::__1::__compressed_pair.257" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.261" { %"struct.std::__1::__compressed_pair_elem.262" { %"struct.std::__1::__hash_node_base.254" { %"struct.std::__1::__hash_node_base.254"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"*) } } }, %"class.std::__1::__compressed_pair.266" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.38" { %"class.std::__1::__vector_base.39" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::__compressed_pair.46" { %"struct.std::__1::__compressed_pair_elem.47" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*) } } } } }, align 8
@.str.3 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.5 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEvPv, i8 0, %"class.std::type_info"* null }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPjE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvENKUlPNS5_11InstructionEE0_clES9_EUlPjE_FvSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE0_FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE0_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUljE_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEvPv, i8 0, %"class.std::type_info"* null }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEvPv, i8 0, %"class.std::type_info"* null }, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [14 x i8] c"loop-unswitch\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt16LoopUnswitchPass7ProcessEv(%"class.spvtools::opt::LoopUnswitchPass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopUnswitchPass", %"class.spvtools::opt::LoopUnswitchPass"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %13, label %15

11:                                               ; preds = %15
  %12 = select i1 %21, i32 16, i32 17
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i32 [ 17, %1 ], [ %12, %11 ]
  ret i32 %14

15:                                               ; preds = %1, %15
  %16 = phi i1 [ %21, %15 ], [ false, %1 ]
  %17 = phi %"class.std::__1::unique_ptr.28"* [ %22, %15 ], [ %7, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %18, align 8
  %20 = tail call zeroext i1 @_ZN8spvtools3opt16LoopUnswitchPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LoopUnswitchPass"* %0, %"class.spvtools::opt::Function"* %19)
  %21 = or i1 %16, %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.28"* %22, %9
  br i1 %23, label %11, label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt16LoopUnswitchPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LoopUnswitchPass"* nocapture readonly, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1129", align 8
  %4 = alloca %"struct.std::__1::__less.1343", align 1
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %7 = alloca %"class.std::__1::function.1129", align 8
  %8 = alloca %"class.std::__1::tuple.1166", align 8
  %9 = alloca %"class.std::__1::tuple.1108", align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::tuple.1166", align 8
  %12 = alloca %"class.std::__1::tuple.1108", align 1
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::tuple.1166", align 8
  %15 = alloca %"class.std::__1::tuple.1108", align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::tuple.1166", align 8
  %19 = alloca %"class.std::__1::tuple.1108", align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::tuple.1166", align 8
  %23 = alloca %"class.std::__1::tuple.1108", align 1
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::__1::function.1129", align 8
  %26 = alloca %"class.std::__1::tuple.1166", align 8
  %27 = alloca %"class.std::__1::tuple.1108", align 1
  %28 = alloca i32, align 4
  %29 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %30 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %31 = alloca %"class.std::__1::function.1120", align 8
  %32 = alloca %"class.std::__1::vector.3", align 8
  %33 = alloca %"class.std::__1::function.1179", align 8
  %34 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %35 = alloca %"class.spvtools::utils::SmallVector", align 8
  %36 = alloca %"class.std::__1::function.1120", align 8
  %37 = alloca %"class.std::__1::vector.1189", align 8
  %38 = alloca %"class.std::__1::vector.3", align 8
  %39 = alloca %"class.std::__1::vector.3", align 8
  %40 = alloca %"class.std::__1::unordered_set.943", align 8
  %41 = alloca i32, align 4
  %42 = alloca %"struct.spvtools::opt::LoopUtils::LoopCloningResult", align 8
  %43 = alloca %"class.std::__1::function.1120", align 8
  %44 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %45 = alloca %"class.std::__1::vector.1233", align 8
  %46 = alloca i32, align 4
  %47 = alloca %"class.std::__1::unordered_set.910", align 8
  %48 = alloca %"class.spvtools::opt::IteratorRange", align 8
  %49 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %50 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %51 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %52 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %53 = alloca %"class.spvtools::opt::Loop"*, align 8
  %54 = alloca %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", align 8
  %55 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %56 = bitcast %"class.std::__1::unordered_set.910"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0, i32 4, i64 0
  %61 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0, i32 3
  %62 = bitcast %"class.std::__1::__compressed_pair.931"* %61 to i32*
  %63 = bitcast i8* %60 to i32*
  store i32 -1431655766, i32* %63, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::LoopUnswitchPass", %"class.spvtools::opt::LoopUnswitchPass"* %0, i64 0, i32 0, i32 2
  %65 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %64, align 8
  %66 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %65, %"class.spvtools::opt::Function"* %1) #12
  %67 = bitcast %"class.spvtools::opt::IteratorRange"* %48 to i8*
  %68 = bitcast %"class.spvtools::opt::TreeDFIterator"* %49 to i8*
  %69 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %66, i64 0, i32 1
  %70 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 0
  %71 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1
  %72 = bitcast %"class.std::__1::stack"* %71 to i8*
  %73 = icmp eq %"class.spvtools::opt::Loop"* %69, null
  %74 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %66, i64 0, i32 1, i32 7, i32 0, i32 0
  %75 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %66, i64 0, i32 1, i32 7, i32 0, i32 1
  %76 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %71, i64 0, i32 0
  %81 = bitcast %"class.spvtools::opt::TreeDFIterator"* %50 to i8*
  %82 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %50, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %50, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = bitcast %"struct.std::__1::pair.1002"*** %84 to i64*
  %87 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"struct.std::__1::pair.1002"*** %79 to i64*
  %89 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %49, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.spvtools::opt::TreeDFIterator"* %51 to i8*
  %91 = bitcast %"class.spvtools::opt::IteratorRange"* %48 to i64*
  %92 = bitcast %"class.spvtools::opt::TreeDFIterator"* %51 to i64*
  %93 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1
  %94 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %93, i64 0, i32 0
  %95 = bitcast %"class.std::__1::stack"* %93 to i8*
  %96 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %97 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %99 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.spvtools::opt::TreeDFIterator"* %52 to i8*
  %101 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1
  %102 = bitcast %"class.spvtools::opt::TreeDFIterator"* %101 to i64*
  %103 = bitcast %"class.spvtools::opt::TreeDFIterator"* %52 to i64*
  %104 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %104, i64 0, i32 0
  %106 = bitcast %"class.std::__1::stack"* %104 to i8*
  %107 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %110 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 0
  %112 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"** %53 to i8*
  %114 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %47, i64 0, i32 0
  %115 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54 to i8*
  %116 = bitcast %"class.spvtools::opt::IRContext"** %64 to i64*
  %117 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 0
  %118 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 1
  %119 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 2
  %120 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 3
  %121 = bitcast %"class.spvtools::opt::IRContext"** %120 to i64*
  %122 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 4
  %123 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 5, i32 0, i32 3
  %124 = bitcast %"class.std::__1::__compressed_pair.1033"* %123 to i32*
  %125 = bitcast %"class.spvtools::opt::BasicBlock"** %122 to i8*
  %126 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 6
  %127 = bitcast %"class.std::__1::vector.1037"* %126 to i8*
  %128 = bitcast %"class.spvtools::opt::LoopUtils"* %55 to i8*
  %129 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %55, i64 0, i32 0
  %130 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %55, i64 0, i32 1
  %131 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %55, i64 0, i32 2
  %132 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %55, i64 0, i32 3
  %133 = bitcast %"class.spvtools::opt::Function"** %132 to i64*
  %134 = bitcast %"class.spvtools::opt::LoopUtils"* %29 to i8*
  %135 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %29, i64 0, i32 0
  %136 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %29, i64 0, i32 1
  %137 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %29, i64 0, i32 2
  %138 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %29, i64 0, i32 3
  %139 = bitcast %"class.spvtools::opt::LoopDescriptor"** %136 to i8*
  %140 = bitcast %"class.spvtools::opt::Function"** %138 to i64*
  %141 = bitcast %"class.spvtools::opt::InstructionBuilder"* %30 to i8*
  %142 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 0
  %143 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 1
  %144 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 3
  %145 = bitcast %"class.spvtools::opt::InstructionBuilder"* %30 to i64*
  %146 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %30, i64 0, i32 2
  %147 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %146 to i64*
  %148 = bitcast i32* %28 to i8*
  %149 = bitcast %"class.std::__1::tuple.1166"* %26 to i8*
  %150 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %26, i64 0, i32 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %27, i64 0, i32 0
  %152 = bitcast %"class.std::__1::function.1120"* %31 to i8*
  %153 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %31, i64 0, i32 0, i32 1, i32 0
  %154 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %31, i64 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %31, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::function.1129"* %25 to i8*
  %157 = ptrtoint %"class.std::__1::function.1120"* %31 to i64
  %158 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %25, i64 0, i32 0, i32 1, i32 0
  %159 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %25, i64 0, i32 0, i32 2
  %160 = bitcast %"class.std::__1::function.1129"* %25 to i64*
  %161 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %25, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %25, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.std::__1::vector.3"* %32 to i8*
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast i32** %165 to i8**
  %168 = bitcast %"class.std::__1::vector.3"* %32 to i8**
  %169 = bitcast i32** %165 to i64*
  %170 = bitcast %"class.std::__1::function.1179"* %33 to i8*
  %171 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %33, i64 0, i32 0, i32 1, i32 0
  %172 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %33, i64 0, i32 0, i32 2
  %173 = bitcast %"class.std::__1::function.1179"* %33 to %"class.spvtools::opt::BasicBlock"**
  %174 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %33, i64 0, i32 0, i32 0, i32 1
  %175 = bitcast [8 x i8]* %174 to %"class.spvtools::opt::BasicBlock"**
  %176 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %33, i64 0, i32 0, i32 0, i32 0
  %177 = bitcast i32* %24 to i8*
  %178 = bitcast %"class.std::__1::tuple.1166"* %22 to i8*
  %179 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %22, i64 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %23, i64 0, i32 0
  %181 = bitcast i32* %21 to i8*
  %182 = bitcast i32* %20 to i8*
  %183 = bitcast %"class.std::__1::tuple.1166"* %18 to i8*
  %184 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %18, i64 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %19, i64 0, i32 0
  %186 = bitcast %"class.spvtools::opt::InstructionBuilder"* %34 to i8*
  %187 = bitcast %"class.spvtools::opt::InstructionBuilder"* %34 to i64*
  %188 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %34, i64 0, i32 1
  %189 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %34, i64 0, i32 2
  %190 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %189 to i64*
  %191 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %34, i64 0, i32 3
  %192 = bitcast %"class.spvtools::utils::SmallVector"* %35 to i8*
  %193 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 0
  %194 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 1
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 2
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 3, i64 0
  %197 = bitcast i32** %195 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 4
  %199 = bitcast %"class.std::__1::unique_ptr.0"* %198 to i64*
  %200 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %196 to i32*
  %201 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %202 = bitcast i32* %17 to i8*
  %203 = bitcast i32* %16 to i8*
  %204 = bitcast %"class.std::__1::tuple.1166"* %14 to i8*
  %205 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %14, i64 0, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %15, i64 0, i32 0
  %207 = bitcast i32* %13 to i8*
  %208 = bitcast %"class.std::__1::tuple.1166"* %11 to i8*
  %209 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %11, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %12, i64 0, i32 0
  %211 = bitcast i32* %10 to i8*
  %212 = bitcast %"class.std::__1::tuple.1166"* %8 to i8*
  %213 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %8, i64 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %9, i64 0, i32 0
  %215 = bitcast %"class.std::__1::function.1120"* %36 to i8*
  %216 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %36, i64 0, i32 0, i32 1, i32 0
  %217 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %36, i64 0, i32 0, i32 2
  %218 = bitcast %"class.std::__1::function.1120"* %36 to %"class.spvtools::opt::BasicBlock"**
  %219 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %36, i64 0, i32 0, i32 0, i32 1
  %220 = bitcast [8 x i8]* %219 to %"class.spvtools::opt::BasicBlock"**
  %221 = bitcast %"class.std::__1::function.1129"* %7 to i8*
  %222 = ptrtoint %"class.std::__1::function.1120"* %36 to i64
  %223 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %7, i64 0, i32 0, i32 1, i32 0
  %224 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %7, i64 0, i32 0, i32 2
  %225 = bitcast %"class.std::__1::function.1129"* %7 to i64*
  %226 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %7, i64 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %7, i64 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %36, i64 0, i32 0, i32 0, i32 0
  %229 = bitcast %"class.std::__1::vector.1189"* %37 to i8*
  %230 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %37, i64 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %37, i64 0, i32 0, i32 1
  %232 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  %233 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %235 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %237 = bitcast i32** %235 to i64*
  %238 = bitcast %"class.std::__1::vector.3"* %5 to i64*
  %239 = bitcast i32** %236 to i64*
  %240 = getelementptr inbounds %"struct.std::__1::__less.1343", %"struct.std::__1::__less.1343"* %4, i64 0, i32 0
  %241 = bitcast %"class.spvtools::opt::InstructionBuilder"* %6 to i8*
  %242 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 0
  %243 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 1
  %244 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 3
  %245 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 2
  %246 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %245 to i64*
  %247 = bitcast %"struct.std::__1::pair.1191"** %231 to i64*
  %248 = bitcast %"class.std::__1::vector.1189"* %37 to i64*
  %249 = bitcast %"struct.std::__1::pair.1191"** %232 to i64*
  %250 = bitcast %"class.std::__1::vector.3"* %38 to i8*
  %251 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 1
  %252 = bitcast %"class.std::__1::vector.3"* %38 to i8**
  %253 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 2, i32 0, i32 0
  %254 = bitcast i32** %253 to i8**
  %255 = bitcast i32** %251 to i64*
  %256 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %38, i64 0, i32 0, i32 0
  %257 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  %258 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %259 = bitcast %"class.std::__1::vector.3"* %39 to i8**
  %260 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = bitcast i32** %260 to i8**
  %262 = bitcast i32** %258 to i64*
  %263 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %264 = bitcast %"class.std::__1::unordered_set.943"* %40 to i8*
  %265 = getelementptr inbounds %"class.std::__1::unordered_set.943", %"class.std::__1::unordered_set.943"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = getelementptr inbounds %"class.std::__1::unordered_set.943", %"class.std::__1::unordered_set.943"* %40, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.std::__1::unordered_set.943", %"class.std::__1::unordered_set.943"* %40, i64 0, i32 0, i32 4, i64 0
  %268 = getelementptr inbounds %"class.std::__1::unordered_set.943", %"class.std::__1::unordered_set.943"* %40, i64 0, i32 0, i32 3
  %269 = bitcast %"class.std::__1::__compressed_pair.962"* %268 to i32*
  %270 = bitcast i8* %267 to i32*
  %271 = bitcast i32* %41 to i8*
  %272 = getelementptr inbounds %"class.std::__1::unordered_set.943", %"class.std::__1::unordered_set.943"* %40, i64 0, i32 0
  %273 = bitcast %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42 to i8*
  %274 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 0, i32 0, i32 3
  %275 = bitcast %"class.std::__1::__compressed_pair.1228"* %274 to i32*
  %276 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 1
  %277 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 1, i32 0, i32 3
  %278 = bitcast %"class.std::__1::__compressed_pair.269"* %277 to i32*
  %279 = bitcast %"class.std::__1::unordered_map.249"* %276 to i8*
  %280 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 2
  %281 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 2, i32 0, i32 3
  %282 = bitcast %"class.std::__1::__compressed_pair.348"* %281 to i32*
  %283 = bitcast %"class.std::__1::unordered_map.328"* %280 to i8*
  %284 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 3
  %285 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 3, i32 0, i32 3
  %286 = bitcast %"class.std::__1::__compressed_pair.348"* %285 to i32*
  %287 = bitcast %"class.std::__1::unordered_map.328"* %284 to i8*
  %288 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 4
  %289 = bitcast %"class.std::__1::vector.38"* %288 to i8*
  %290 = bitcast %"struct.std::__1::__hash_node_base.948"** %266 to i64*
  %291 = bitcast %"class.std::__1::function.1120"* %43 to i8*
  %292 = ptrtoint %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42 to i64
  %293 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %43, i64 0, i32 0, i32 1, i32 0
  %294 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %43, i64 0, i32 0, i32 2
  %295 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %43, i64 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::function.1129"* %3 to i8*
  %297 = ptrtoint %"class.std::__1::function.1120"* %43 to i64
  %298 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %3, i64 0, i32 0, i32 1, i32 0
  %299 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %3, i64 0, i32 0, i32 2
  %300 = bitcast %"class.std::__1::function.1129"* %3 to i64*
  %301 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %3, i64 0, i32 0, i32 0
  %302 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %3, i64 0, i32 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %288, i64 0, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %42, i64 0, i32 4, i32 0, i32 1
  %305 = bitcast %"class.spvtools::opt::InstructionBuilder"* %44 to i8*
  %306 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %44, i64 0, i32 1
  %307 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %44, i64 0, i32 3
  %308 = bitcast %"class.spvtools::opt::InstructionBuilder"* %44 to i64*
  %309 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %44, i64 0, i32 2
  %310 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %309 to i64*
  %311 = bitcast %"class.std::__1::vector.1233"* %45 to i8*
  %312 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %45, i64 0, i32 0, i32 0
  %313 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %45, i64 0, i32 0, i32 1
  %314 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %45, i64 0, i32 0, i32 2, i32 0, i32 0
  %315 = bitcast i32* %46 to i8*
  %316 = bitcast %"struct.std::__1::pair.1235"** %313 to i64*
  %317 = bitcast %"class.std::__1::vector.1233"* %45 to i8**
  %318 = bitcast %"class.std::__1::vector.1037"* %126 to i64*
  %319 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 6, i32 0, i32 1
  %320 = bitcast %"class.spvtools::opt::BasicBlock"*** %319 to i64*
  %321 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 6, i32 0, i32 0
  %322 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %323 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %325 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1, i32 0, i32 0, i32 1
  %326 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %327 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %328 = bitcast %"struct.std::__1::pair.1002"*** %326 to i64*
  %329 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %331 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1, i32 0, i32 0, i32 1
  %332 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %333 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %334 = bitcast %"struct.std::__1::pair.1002"*** %332 to i64*
  %335 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %336 = bitcast %"struct.std::__1::pair.1002"*** %109 to i64*
  %337 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %338 = bitcast %"struct.std::__1::pair.1002"*** %98 to i64*
  %339 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %48, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %340

340:                                              ; preds = %2, %3383
  %341 = phi i8 [ 0, %2 ], [ %3031, %3383 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %67) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #12
  store %"class.spvtools::opt::Loop"* %69, %"class.spvtools::opt::Loop"** %70, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 48, i1 false) #12
  br i1 %73, label %367, label %342

342:                                              ; preds = %340
  %343 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %74, align 8
  %344 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %75, align 8
  %345 = icmp eq %"class.spvtools::opt::Loop"** %343, %344
  br i1 %345, label %367, label %346

346:                                              ; preds = %342
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %80) #12
  %347 = load i64, i64* %76, align 8
  %348 = load i64, i64* %77, align 8
  %349 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %78, align 8
  %350 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %79, align 8
  %351 = add i64 %348, %347
  %352 = icmp eq %"struct.std::__1::pair.1002"** %350, %349
  br i1 %352, label %360, label %353

353:                                              ; preds = %346
  %354 = lshr i64 %351, 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %349, i64 %354
  %356 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %355, align 8
  %357 = and i64 %351, 255
  %358 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %356, i64 %357
  %359 = bitcast %"struct.std::__1::pair.1002"* %358 to i8*
  br label %360

360:                                              ; preds = %353, %346
  %361 = phi i8* [ %359, %353 ], [ null, %346 ]
  %362 = bitcast i8* %361 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %69, %"class.spvtools::opt::Loop"** %362, align 8
  %363 = getelementptr inbounds i8, i8* %361, i64 8
  %364 = bitcast i8* %363 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %343, %"class.spvtools::opt::Loop"*** %364, align 8
  %365 = load i64, i64* %76, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %76, align 8
  br label %367

367:                                              ; preds = %340, %342, %360
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %49) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 56, i1 false) #12
  call void @_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_(%"class.spvtools::opt::IteratorRange"* nonnull %48, %"class.spvtools::opt::TreeDFIterator"* nonnull dereferenceable(56) %49, %"class.spvtools::opt::TreeDFIterator"* nonnull dereferenceable(56) %50) #12
  %368 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %82, align 8
  %369 = load i64, i64* %83, align 8
  %370 = lshr i64 %369, 8
  %371 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %368, i64 %370
  %372 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %84, align 8
  %373 = icmp eq %"struct.std::__1::pair.1002"** %372, %368
  %374 = ptrtoint %"struct.std::__1::pair.1002"** %372 to i64
  %375 = ptrtoint %"struct.std::__1::pair.1002"** %368 to i64
  br i1 %373, label %388, label %376

376:                                              ; preds = %367
  %377 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %371, align 8
  %378 = and i64 %369, 255
  %379 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %377, i64 %378
  %380 = load i64, i64* %85, align 8
  %381 = add i64 %380, %369
  %382 = lshr i64 %381, 8
  %383 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %368, i64 %382
  %384 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %383, align 8
  %385 = and i64 %381, 255
  %386 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %384, i64 %385
  %387 = icmp eq %"struct.std::__1::pair.1002"* %386, %379
  br i1 %387, label %388, label %392

388:                                              ; preds = %405, %367, %376
  store i64 0, i64* %85, align 8
  %389 = sub i64 %374, %375
  %390 = ashr exact i64 %389, 3
  %391 = icmp ugt i64 %390, 2
  br i1 %391, label %410, label %423

392:                                              ; preds = %376, %405
  %393 = phi %"struct.std::__1::pair.1002"* [ %408, %405 ], [ %379, %376 ]
  %394 = phi %"struct.std::__1::pair.1002"** [ %407, %405 ], [ %371, %376 ]
  %395 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %393, i64 1
  %396 = ptrtoint %"struct.std::__1::pair.1002"* %395 to i64
  %397 = bitcast %"struct.std::__1::pair.1002"** %394 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = sub i64 %396, %398
  %400 = icmp eq i64 %399, 4096
  br i1 %400, label %401, label %405

401:                                              ; preds = %392
  %402 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %394, i64 1
  %403 = bitcast %"struct.std::__1::pair.1002"** %402 to i64*
  %404 = load i64, i64* %403, align 8
  br label %405

405:                                              ; preds = %401, %392
  %406 = phi i64 [ %404, %401 ], [ %396, %392 ]
  %407 = phi %"struct.std::__1::pair.1002"** [ %402, %401 ], [ %394, %392 ]
  %408 = inttoptr i64 %406 to %"struct.std::__1::pair.1002"*
  %409 = icmp eq %"struct.std::__1::pair.1002"* %386, %408
  br i1 %409, label %388, label %392

410:                                              ; preds = %388, %410
  %411 = phi %"struct.std::__1::pair.1002"** [ %415, %410 ], [ %368, %388 ]
  %412 = bitcast %"struct.std::__1::pair.1002"** %411 to i8**
  %413 = load i8*, i8** %412, align 8
  call void @_ZdlPv(i8* %413) #13
  %414 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %82, align 8
  %415 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %414, i64 1
  store %"struct.std::__1::pair.1002"** %415, %"struct.std::__1::pair.1002"*** %82, align 8
  %416 = load i64, i64* %86, align 8
  %417 = ptrtoint %"struct.std::__1::pair.1002"** %415 to i64
  %418 = sub i64 %416, %417
  %419 = ashr exact i64 %418, 3
  %420 = icmp ugt i64 %419, 2
  br i1 %420, label %410, label %421

421:                                              ; preds = %410
  %422 = inttoptr i64 %416 to %"struct.std::__1::pair.1002"**
  br label %423

423:                                              ; preds = %421, %388
  %424 = phi %"struct.std::__1::pair.1002"** [ %372, %388 ], [ %422, %421 ]
  %425 = phi %"struct.std::__1::pair.1002"** [ %368, %388 ], [ %415, %421 ]
  %426 = phi i64 [ %390, %388 ], [ %419, %421 ]
  switch i64 %426, label %430 [
    i64 1, label %428
    i64 2, label %427
  ]

427:                                              ; preds = %423
  br label %428

428:                                              ; preds = %423, %427
  %429 = phi i64 [ 256, %427 ], [ 128, %423 ]
  store i64 %429, i64* %83, align 8
  br label %430

430:                                              ; preds = %428, %423
  %431 = icmp eq %"struct.std::__1::pair.1002"** %425, %424
  br i1 %431, label %450, label %432

432:                                              ; preds = %430, %432
  %433 = phi %"struct.std::__1::pair.1002"** [ %436, %432 ], [ %425, %430 ]
  %434 = bitcast %"struct.std::__1::pair.1002"** %433 to i8**
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #13
  %436 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %433, i64 1
  %437 = icmp eq %"struct.std::__1::pair.1002"** %436, %424
  br i1 %437, label %438, label %432

438:                                              ; preds = %432
  %439 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %82, align 8
  %440 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %84, align 8
  %441 = icmp eq %"struct.std::__1::pair.1002"** %440, %439
  br i1 %441, label %450, label %442

442:                                              ; preds = %438
  %443 = ptrtoint %"struct.std::__1::pair.1002"** %439 to i64
  %444 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %440, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1002"** %444 to i64
  %446 = sub i64 %445, %443
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %440, i64 %448
  store %"struct.std::__1::pair.1002"** %449, %"struct.std::__1::pair.1002"*** %84, align 8
  br label %450

450:                                              ; preds = %442, %438, %430
  %451 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %87, align 8
  %452 = icmp eq %"struct.std::__1::pair.1002"** %451, null
  br i1 %452, label %455, label %453

453:                                              ; preds = %450
  %454 = bitcast %"struct.std::__1::pair.1002"** %451 to i8*
  call void @_ZdlPv(i8* %454) #13
  br label %455

455:                                              ; preds = %450, %453
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %81) #12
  %456 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %78, align 8
  %457 = load i64, i64* %77, align 8
  %458 = lshr i64 %457, 8
  %459 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %456, i64 %458
  %460 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %79, align 8
  %461 = icmp eq %"struct.std::__1::pair.1002"** %460, %456
  %462 = ptrtoint %"struct.std::__1::pair.1002"** %460 to i64
  %463 = ptrtoint %"struct.std::__1::pair.1002"** %456 to i64
  br i1 %461, label %476, label %464

464:                                              ; preds = %455
  %465 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %459, align 8
  %466 = and i64 %457, 255
  %467 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %465, i64 %466
  %468 = load i64, i64* %76, align 8
  %469 = add i64 %468, %457
  %470 = lshr i64 %469, 8
  %471 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %456, i64 %470
  %472 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %471, align 8
  %473 = and i64 %469, 255
  %474 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %472, i64 %473
  %475 = icmp eq %"struct.std::__1::pair.1002"* %474, %467
  br i1 %475, label %476, label %480

476:                                              ; preds = %493, %455, %464
  store i64 0, i64* %76, align 8
  %477 = sub i64 %462, %463
  %478 = ashr exact i64 %477, 3
  %479 = icmp ugt i64 %478, 2
  br i1 %479, label %498, label %511

480:                                              ; preds = %464, %493
  %481 = phi %"struct.std::__1::pair.1002"* [ %496, %493 ], [ %467, %464 ]
  %482 = phi %"struct.std::__1::pair.1002"** [ %495, %493 ], [ %459, %464 ]
  %483 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %481, i64 1
  %484 = ptrtoint %"struct.std::__1::pair.1002"* %483 to i64
  %485 = bitcast %"struct.std::__1::pair.1002"** %482 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = sub i64 %484, %486
  %488 = icmp eq i64 %487, 4096
  br i1 %488, label %489, label %493

489:                                              ; preds = %480
  %490 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %482, i64 1
  %491 = bitcast %"struct.std::__1::pair.1002"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  br label %493

493:                                              ; preds = %489, %480
  %494 = phi i64 [ %492, %489 ], [ %484, %480 ]
  %495 = phi %"struct.std::__1::pair.1002"** [ %490, %489 ], [ %482, %480 ]
  %496 = inttoptr i64 %494 to %"struct.std::__1::pair.1002"*
  %497 = icmp eq %"struct.std::__1::pair.1002"* %474, %496
  br i1 %497, label %476, label %480

498:                                              ; preds = %476, %498
  %499 = phi %"struct.std::__1::pair.1002"** [ %503, %498 ], [ %456, %476 ]
  %500 = bitcast %"struct.std::__1::pair.1002"** %499 to i8**
  %501 = load i8*, i8** %500, align 8
  call void @_ZdlPv(i8* %501) #13
  %502 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %78, align 8
  %503 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %502, i64 1
  store %"struct.std::__1::pair.1002"** %503, %"struct.std::__1::pair.1002"*** %78, align 8
  %504 = load i64, i64* %88, align 8
  %505 = ptrtoint %"struct.std::__1::pair.1002"** %503 to i64
  %506 = sub i64 %504, %505
  %507 = ashr exact i64 %506, 3
  %508 = icmp ugt i64 %507, 2
  br i1 %508, label %498, label %509

509:                                              ; preds = %498
  %510 = inttoptr i64 %504 to %"struct.std::__1::pair.1002"**
  br label %511

511:                                              ; preds = %509, %476
  %512 = phi %"struct.std::__1::pair.1002"** [ %460, %476 ], [ %510, %509 ]
  %513 = phi %"struct.std::__1::pair.1002"** [ %456, %476 ], [ %503, %509 ]
  %514 = phi i64 [ %478, %476 ], [ %507, %509 ]
  switch i64 %514, label %518 [
    i64 1, label %516
    i64 2, label %515
  ]

515:                                              ; preds = %511
  br label %516

516:                                              ; preds = %511, %515
  %517 = phi i64 [ 256, %515 ], [ 128, %511 ]
  store i64 %517, i64* %77, align 8
  br label %518

518:                                              ; preds = %516, %511
  %519 = icmp eq %"struct.std::__1::pair.1002"** %513, %512
  br i1 %519, label %538, label %520

520:                                              ; preds = %518, %520
  %521 = phi %"struct.std::__1::pair.1002"** [ %524, %520 ], [ %513, %518 ]
  %522 = bitcast %"struct.std::__1::pair.1002"** %521 to i8**
  %523 = load i8*, i8** %522, align 8
  call void @_ZdlPv(i8* %523) #13
  %524 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %521, i64 1
  %525 = icmp eq %"struct.std::__1::pair.1002"** %524, %512
  br i1 %525, label %526, label %520

526:                                              ; preds = %520
  %527 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %78, align 8
  %528 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %79, align 8
  %529 = icmp eq %"struct.std::__1::pair.1002"** %528, %527
  br i1 %529, label %538, label %530

530:                                              ; preds = %526
  %531 = ptrtoint %"struct.std::__1::pair.1002"** %527 to i64
  %532 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %528, i64 -1
  %533 = ptrtoint %"struct.std::__1::pair.1002"** %532 to i64
  %534 = sub i64 %533, %531
  %535 = lshr i64 %534, 3
  %536 = xor i64 %535, -1
  %537 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %528, i64 %536
  store %"struct.std::__1::pair.1002"** %537, %"struct.std::__1::pair.1002"*** %79, align 8
  br label %538

538:                                              ; preds = %530, %526, %518
  %539 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %89, align 8
  %540 = icmp eq %"struct.std::__1::pair.1002"** %539, null
  br i1 %540, label %543, label %541

541:                                              ; preds = %538
  %542 = bitcast %"struct.std::__1::pair.1002"** %539 to i8*
  call void @_ZdlPv(i8* %542) #13
  br label %543

543:                                              ; preds = %538, %541
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %90) #12
  %544 = load i64, i64* %91, align 8, !noalias !2
  store i64 %544, i64* %92, align 8, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 48, i1 false) #12, !alias.scope !2
  %545 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %96, align 8, !noalias !2
  %546 = load i64, i64* %97, align 8, !noalias !2
  %547 = lshr i64 %546, 8
  %548 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %545, i64 %547
  %549 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %98, align 8, !noalias !2
  %550 = icmp eq %"struct.std::__1::pair.1002"** %549, %545
  br i1 %550, label %551, label %556

551:                                              ; preds = %543
  %552 = load i64, i64* %99, align 8, !noalias !2
  %553 = add i64 %552, %546
  %554 = lshr i64 %553, 8
  %555 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %545, i64 %554
  br label %567

556:                                              ; preds = %543
  %557 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %548, align 8
  %558 = and i64 %546, 255
  %559 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %557, i64 %558
  %560 = load i64, i64* %99, align 8, !noalias !2
  %561 = add i64 %560, %546
  %562 = lshr i64 %561, 8
  %563 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %545, i64 %562
  %564 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %563, align 8
  %565 = and i64 %561, 255
  %566 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %564, i64 %565
  br label %567

567:                                              ; preds = %551, %556
  %568 = phi %"struct.std::__1::pair.1002"** [ %563, %556 ], [ %555, %551 ]
  %569 = phi %"struct.std::__1::pair.1002"* [ %559, %556 ], [ null, %551 ]
  %570 = phi %"struct.std::__1::pair.1002"* [ %566, %556 ], [ null, %551 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %94, %"struct.std::__1::pair.1002"** %548, %"struct.std::__1::pair.1002"* %569, %"struct.std::__1::pair.1002"** %568, %"struct.std::__1::pair.1002"* %570, i8* null) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %100) #12
  %571 = load i64, i64* %102, align 8, !noalias !5
  store i64 %571, i64* %103, align 8, !alias.scope !5
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 48, i1 false) #12, !alias.scope !5
  %572 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %107, align 8, !noalias !5
  %573 = load i64, i64* %108, align 8, !noalias !5
  %574 = lshr i64 %573, 8
  %575 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %572, i64 %574
  %576 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %109, align 8, !noalias !5
  %577 = icmp eq %"struct.std::__1::pair.1002"** %576, %572
  br i1 %577, label %578, label %583

578:                                              ; preds = %567
  %579 = load i64, i64* %110, align 8, !noalias !5
  %580 = add i64 %579, %573
  %581 = lshr i64 %580, 8
  %582 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %572, i64 %581
  br label %594

583:                                              ; preds = %567
  %584 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %575, align 8
  %585 = and i64 %573, 255
  %586 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %584, i64 %585
  %587 = load i64, i64* %110, align 8, !noalias !5
  %588 = add i64 %587, %573
  %589 = lshr i64 %588, 8
  %590 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %572, i64 %589
  %591 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %590, align 8
  %592 = and i64 %588, 255
  %593 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %591, i64 %592
  br label %594

594:                                              ; preds = %578, %583
  %595 = phi %"struct.std::__1::pair.1002"** [ %590, %583 ], [ %582, %578 ]
  %596 = phi %"struct.std::__1::pair.1002"* [ %586, %583 ], [ null, %578 ]
  %597 = phi %"struct.std::__1::pair.1002"* [ %593, %583 ], [ null, %578 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %105, %"struct.std::__1::pair.1002"** %575, %"struct.std::__1::pair.1002"* %596, %"struct.std::__1::pair.1002"** %595, %"struct.std::__1::pair.1002"* %597, i8* null) #12
  %598 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %111, align 8
  %599 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %112, align 8
  %600 = icmp eq %"class.spvtools::opt::Loop"* %598, %599
  br i1 %600, label %3029, label %601

601:                                              ; preds = %594, %3023
  %602 = phi %"class.spvtools::opt::Loop"* [ %3026, %3023 ], [ %598, %594 ]
  %603 = phi i8 [ %3024, %3023 ], [ %341, %594 ]
  %604 = phi i8 [ %3025, %3023 ], [ 0, %594 ]
  %605 = ptrtoint %"class.spvtools::opt::Loop"* %602 to i64
  %606 = lshr i64 %605, 32
  %607 = shl i64 %605, 3
  %608 = and i64 %607, 4294967288
  %609 = add nuw nsw i64 %608, 8
  %610 = xor i64 %609, %606
  %611 = mul i64 %610, -7070675565921424023
  %612 = lshr i64 %611, 47
  %613 = xor i64 %611, %606
  %614 = xor i64 %613, %612
  %615 = mul i64 %614, -7070675565921424023
  %616 = lshr i64 %615, 47
  %617 = xor i64 %616, %615
  %618 = mul i64 %617, -7070675565921424023
  %619 = load i64, i64* %58, align 8
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %668, label %621

621:                                              ; preds = %601
  %622 = call i64 @llvm.ctpop.i64(i64 %619) #12, !range !8
  %623 = icmp ugt i64 %622, 1
  br i1 %623, label %627, label %624

624:                                              ; preds = %621
  %625 = add i64 %619, -1
  %626 = and i64 %625, %618
  br label %631

627:                                              ; preds = %621
  %628 = icmp ult i64 %618, %619
  br i1 %628, label %631, label %629

629:                                              ; preds = %627
  %630 = urem i64 %618, %619
  br label %631

631:                                              ; preds = %629, %627, %624
  %632 = phi i64 [ %626, %624 ], [ %630, %629 ], [ %618, %627 ]
  %633 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %57, align 8
  %634 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %633, i64 %632
  %635 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %634, align 8
  %636 = icmp eq %"struct.std::__1::__hash_node_base.915"* %635, null
  br i1 %636, label %668, label %637

637:                                              ; preds = %631
  %638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %635, i64 0, i32 0
  %639 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %638, align 8
  %640 = icmp eq %"struct.std::__1::__hash_node_base.915"* %639, null
  br i1 %640, label %668, label %641

641:                                              ; preds = %637
  %642 = add i64 %619, -1
  br label %643

643:                                              ; preds = %664, %641
  %644 = phi %"struct.std::__1::__hash_node_base.915"* [ %639, %641 ], [ %666, %664 ]
  %645 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %644, i64 1
  %646 = bitcast %"struct.std::__1::__hash_node_base.915"* %645 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = icmp eq i64 %618, %647
  br i1 %648, label %659, label %649

649:                                              ; preds = %643
  br i1 %623, label %652, label %650

650:                                              ; preds = %649
  %651 = and i64 %647, %642
  br label %656

652:                                              ; preds = %649
  %653 = icmp ult i64 %647, %619
  br i1 %653, label %656, label %654

654:                                              ; preds = %652
  %655 = urem i64 %647, %619
  br label %656

656:                                              ; preds = %654, %652, %650
  %657 = phi i64 [ %651, %650 ], [ %655, %654 ], [ %647, %652 ]
  %658 = icmp eq i64 %657, %632
  br i1 %658, label %664, label %668

659:                                              ; preds = %643
  %660 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %644, i64 2
  %661 = bitcast %"struct.std::__1::__hash_node_base.915"* %660 to %"class.spvtools::opt::Loop"**
  %662 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %661, align 8
  %663 = icmp eq %"class.spvtools::opt::Loop"* %662, %602
  br i1 %663, label %3023, label %664

664:                                              ; preds = %659, %656
  %665 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %644, i64 0, i32 0
  %666 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %665, align 8
  %667 = icmp eq %"struct.std::__1::__hash_node_base.915"* %666, null
  br i1 %667, label %668, label %643

668:                                              ; preds = %664, %656, %631, %601, %637
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #12
  store %"class.spvtools::opt::Loop"* %602, %"class.spvtools::opt::Loop"** %53, align 8
  %669 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* nonnull %114, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %53, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %53) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #12
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %115) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 bitcast (%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* @__const._ZN8spvtools3opt16LoopUnswitchPass15ProcessFunctionEPNS0_8FunctionE.unswitcher to i8*), i64 80, i1 false)
  %670 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %117, align 8
  store %"class.spvtools::opt::Loop"* %602, %"class.spvtools::opt::Loop"** %118, align 8
  store %"class.spvtools::opt::LoopDescriptor"* %66, %"class.spvtools::opt::LoopDescriptor"** %119, align 8
  store i64 %670, i64* %121, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 40, i1 false) #12
  store i32 1065353216, i32* %124, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #12
  %671 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %602, i64 0, i32 1
  %672 = bitcast %"class.spvtools::opt::BasicBlock"** %671 to i64**
  br label %673

673:                                              ; preds = %2998, %668
  %674 = phi %"class.spvtools::opt::BasicBlock"* [ null, %668 ], [ %2999, %2998 ]
  %675 = phi i8 [ %604, %668 ], [ 1, %2998 ]
  %676 = phi i8 [ %603, %668 ], [ 1, %2998 ]
  %677 = icmp eq %"class.spvtools::opt::BasicBlock"* %674, null
  br i1 %677, label %678, label %860

678:                                              ; preds = %673
  %679 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %680 = call zeroext i1 @_ZNK8spvtools3opt4Loop13IsSafeToCloneEv(%"class.spvtools::opt::Loop"* %679) #12
  br i1 %680, label %3000, label %681

681:                                              ; preds = %678
  %682 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %683 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %682, i64 0, i32 11
  %684 = load i32, i32* %683, align 8
  %685 = and i32 %684, 16
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %687, label %703

687:                                              ; preds = %681
  %688 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %682, i64 0, i32 4, i32 0, i32 0, i32 0
  %689 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %688, align 8
  %690 = call i8* @_Znwm(i64 400) #13
  %691 = bitcast i8* %690 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %691, %"class.spvtools::opt::Module"* %689) #12
  %692 = ptrtoint i8* %690 to i64
  %693 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %682, i64 0, i32 15
  %694 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %693, i64 0, i32 0, i32 0, i32 0
  %695 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %694, align 8
  %696 = bitcast %"class.std::__1::unique_ptr.273"* %693 to i64*
  store i64 %692, i64* %696, align 8
  %697 = icmp eq %"class.spvtools::opt::CFG"* %695, null
  br i1 %697, label %700, label %698

698:                                              ; preds = %687
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %695) #12
  %699 = bitcast %"class.spvtools::opt::CFG"* %695 to i8*
  call void @_ZdlPv(i8* %699) #13
  br label %700

700:                                              ; preds = %698, %687
  %701 = load i32, i32* %683, align 8
  %702 = or i32 %701, 16
  store i32 %702, i32* %683, align 8
  br label %703

703:                                              ; preds = %700, %681
  %704 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %682, i64 0, i32 15, i32 0, i32 0, i32 0
  %705 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %704, align 8
  %706 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %707 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %706, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %708 = bitcast %"struct.std::__1::__hash_node_base.948"** %707 to i64*
  %709 = load i64, i64* %708, align 8
  %710 = icmp eq i64 %709, 0
  br i1 %710, label %855, label %711

711:                                              ; preds = %703
  %712 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %705, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %713 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %705, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %714

714:                                              ; preds = %851, %711
  %715 = phi i64 [ %709, %711 ], [ %853, %851 ]
  %716 = inttoptr i64 %715 to %"struct.std::__1::__hash_node.1054"*
  %717 = getelementptr inbounds %"struct.std::__1::__hash_node.1054", %"struct.std::__1::__hash_node.1054"* %716, i64 0, i32 2
  %718 = load i32, i32* %717, align 4
  %719 = zext i32 %718 to i64
  %720 = load i64, i64* %712, align 8
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %769, label %722

722:                                              ; preds = %714
  %723 = call i64 @llvm.ctpop.i64(i64 %720) #12, !range !8
  %724 = icmp ugt i64 %723, 1
  br i1 %724, label %728, label %725

725:                                              ; preds = %722
  %726 = add i64 %720, 4294967295
  %727 = and i64 %726, %719
  br label %732

728:                                              ; preds = %722
  %729 = icmp ugt i64 %720, %719
  br i1 %729, label %732, label %730

730:                                              ; preds = %728
  %731 = urem i64 %719, %720
  br label %732

732:                                              ; preds = %730, %728, %725
  %733 = phi i64 [ %727, %725 ], [ %731, %730 ], [ %719, %728 ]
  %734 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %713, align 8
  %735 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %734, i64 %733
  %736 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %735, align 8
  %737 = icmp eq %"struct.std::__1::__hash_node_base.333"* %736, null
  br i1 %737, label %769, label %738

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %736, i64 0, i32 0
  %740 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %739, align 8
  %741 = icmp eq %"struct.std::__1::__hash_node_base.333"* %740, null
  br i1 %741, label %769, label %742

742:                                              ; preds = %738
  %743 = add i64 %720, -1
  br label %744

744:                                              ; preds = %765, %742
  %745 = phi %"struct.std::__1::__hash_node_base.333"* [ %740, %742 ], [ %767, %765 ]
  %746 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %745, i64 1
  %747 = bitcast %"struct.std::__1::__hash_node_base.333"* %746 to i64*
  %748 = load i64, i64* %747, align 8
  %749 = icmp eq i64 %748, %719
  br i1 %749, label %760, label %750

750:                                              ; preds = %744
  br i1 %724, label %753, label %751

751:                                              ; preds = %750
  %752 = and i64 %748, %743
  br label %757

753:                                              ; preds = %750
  %754 = icmp ult i64 %748, %720
  br i1 %754, label %757, label %755

755:                                              ; preds = %753
  %756 = urem i64 %748, %720
  br label %757

757:                                              ; preds = %755, %753, %751
  %758 = phi i64 [ %752, %751 ], [ %756, %755 ], [ %748, %753 ]
  %759 = icmp eq i64 %758, %733
  br i1 %759, label %765, label %769

760:                                              ; preds = %744
  %761 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %745, i64 2
  %762 = bitcast %"struct.std::__1::__hash_node_base.333"* %761 to i32*
  %763 = load i32, i32* %762, align 4
  %764 = icmp eq i32 %763, %718
  br i1 %764, label %770, label %765

765:                                              ; preds = %760, %757
  %766 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %745, i64 0, i32 0
  %767 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %766, align 8
  %768 = icmp eq %"struct.std::__1::__hash_node_base.333"* %767, null
  br i1 %768, label %769, label %744

769:                                              ; preds = %738, %732, %714, %765, %757
  call void @abort() #14
  unreachable

770:                                              ; preds = %760
  %771 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %745, i64 3
  %772 = bitcast %"struct.std::__1::__hash_node_base.333"* %771 to %"class.spvtools::opt::BasicBlock"**
  %773 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %772, align 8
  %774 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %775 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %774, i64 0, i32 5
  %776 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %775, align 8
  %777 = icmp eq %"class.spvtools::opt::BasicBlock"* %776, %773
  br i1 %777, label %851, label %778

778:                                              ; preds = %770
  %779 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %773, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %780 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %779, align 8, !noalias !9
  %781 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %780, i64 0, i32 2
  %782 = load i32, i32* %781, align 8
  %783 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %782) #12
  br i1 %783, label %784, label %851

784:                                              ; preds = %778
  %785 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %779, align 8, !noalias !12
  %786 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %785, i64 0, i32 2
  %787 = load i32, i32* %786, align 8
  %788 = icmp eq i32 %787, 249
  br i1 %788, label %851, label %789

789:                                              ; preds = %784
  %790 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %791 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %790, i64 0, i32 11
  %792 = load i32, i32* %791, align 8
  %793 = and i32 %792, 1
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %819

795:                                              ; preds = %789
  %796 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %790, i64 0, i32 4, i32 0, i32 0, i32 0
  %797 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %796, align 8
  %798 = call i8* @_Znwm(i64 104) #13
  %799 = bitcast i8* %798 to %"class.spvtools::opt::analysis::DefUseManager"*
  %800 = getelementptr inbounds i8, i8* %798, i64 32
  %801 = bitcast i8* %800 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %798, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %801, align 4
  %802 = getelementptr inbounds i8, i8* %798, i64 48
  %803 = getelementptr inbounds i8, i8* %798, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %802, i8 0, i64 16, i1 false) #12
  %804 = bitcast i8* %803 to i8**
  store i8* %802, i8** %804, align 8
  %805 = getelementptr inbounds i8, i8* %798, i64 64
  %806 = getelementptr inbounds i8, i8* %798, i64 96
  %807 = bitcast i8* %806 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %805, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %807, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %799, %"class.spvtools::opt::Module"* %797) #12
  %808 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %790, i64 0, i32 6
  %809 = ptrtoint i8* %798 to i64
  %810 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %808, i64 0, i32 0, i32 0, i32 0
  %811 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %810, align 8
  %812 = bitcast %"class.std::__1::unique_ptr.62"* %808 to i64*
  store i64 %809, i64* %812, align 8
  %813 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %811, null
  br i1 %813, label %816, label %814

814:                                              ; preds = %795
  %815 = bitcast %"class.std::__1::unique_ptr.62"* %808 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %815, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %811) #12
  br label %816

816:                                              ; preds = %814, %795
  %817 = load i32, i32* %791, align 8
  %818 = or i32 %817, 1
  store i32 %818, i32* %791, align 8
  br label %819

819:                                              ; preds = %816, %789
  %820 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %790, i64 0, i32 6, i32 0, i32 0, i32 0
  %821 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %820, align 8
  %822 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %785, i64 0, i32 6, i32 0, i32 0
  %823 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %822, align 8
  %824 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %823, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %825 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %824, align 8
  %826 = icmp eq %"class.std::__1::vector.3"* %825, null
  %827 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %825, i64 0, i32 0, i32 0
  %828 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %823, i64 0, i32 1, i32 2
  %829 = select i1 %826, i32** %828, i32** %827
  %830 = load i32*, i32** %829, align 8
  %831 = load i32, i32* %830, align 4
  %832 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %821, i32 %831) #12
  %833 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %832, i64 0, i32 2
  %834 = load i32, i32* %833, align 8
  %835 = add i32 %834, -41
  %836 = icmp ult i32 %835, 6
  br i1 %836, label %851, label %837

837:                                              ; preds = %819
  %838 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %839 = call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %838, %"class.spvtools::opt::Instruction"* %832) #12
  br i1 %839, label %851, label %840

840:                                              ; preds = %837
  %841 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %117, align 8
  %842 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %841, i64 0, i32 3, i32 0, i32 0
  %843 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %842, align 8
  %844 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %843, i64 0, i32 0, i32 0, i32 0
  %845 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %844, align 8
  %846 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %847 = call %"class.spvtools::opt::PostDominatorAnalysis"* @_ZN8spvtools3opt9IRContext24GetPostDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %846, %"class.spvtools::opt::Function"* %841) #12
  %848 = getelementptr inbounds %"class.spvtools::opt::PostDominatorAnalysis", %"class.spvtools::opt::PostDominatorAnalysis"* %847, i64 0, i32 0, i32 0
  %849 = call fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS0_11InstructionEPKNS0_10BasicBlockERKNS0_13DominatorTreeE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nonnull %54, %"class.spvtools::opt::Instruction"* %832, %"class.spvtools::opt::BasicBlock"* %845, %"class.spvtools::opt::DominatorTree"* dereferenceable(56) %848) #12
  br i1 %849, label %850, label %851

850:                                              ; preds = %840
  store %"class.spvtools::opt::BasicBlock"* %773, %"class.spvtools::opt::BasicBlock"** %122, align 8
  br label %857

851:                                              ; preds = %840, %837, %819, %784, %778, %770
  %852 = inttoptr i64 %715 to i64*
  %853 = load i64, i64* %852, align 8
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %714

855:                                              ; preds = %851, %703
  %856 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %122, align 8
  br label %857

857:                                              ; preds = %855, %850
  %858 = phi %"class.spvtools::opt::BasicBlock"* [ %856, %855 ], [ %773, %850 ]
  %859 = icmp eq %"class.spvtools::opt::BasicBlock"* %858, null
  br i1 %859, label %3000, label %860

860:                                              ; preds = %857, %673
  %861 = call zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"* %602) #12
  br i1 %861, label %870, label %862

862:                                              ; preds = %860
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #12
  %863 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %64, align 8
  store %"class.spvtools::opt::IRContext"* %863, %"class.spvtools::opt::IRContext"** %129, align 8
  %864 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %671, align 8
  %865 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %864, i64 0, i32 0
  %866 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %865, align 8
  %867 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %863, %"class.spvtools::opt::Function"* %866) #12
  store %"class.spvtools::opt::LoopDescriptor"* %867, %"class.spvtools::opt::LoopDescriptor"** %130, align 8
  store %"class.spvtools::opt::Loop"* %602, %"class.spvtools::opt::Loop"** %131, align 8
  %868 = load i64*, i64** %672, align 8
  %869 = load i64, i64* %868, align 8
  store i64 %869, i64* %133, align 8
  call void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #12
  br label %870

870:                                              ; preds = %862, %860
  %871 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %872 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %871, i64 0, i32 11
  %873 = load i32, i32* %872, align 8
  %874 = and i32 %873, 16
  %875 = icmp eq i32 %874, 0
  br i1 %875, label %876, label %893

876:                                              ; preds = %870
  %877 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %871, i64 0, i32 4, i32 0, i32 0, i32 0
  %878 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %877, align 8
  %879 = call i8* @_Znwm(i64 400) #13
  %880 = bitcast i8* %879 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %880, %"class.spvtools::opt::Module"* %878) #12
  %881 = ptrtoint i8* %879 to i64
  %882 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %871, i64 0, i32 15
  %883 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %882, i64 0, i32 0, i32 0, i32 0
  %884 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %883, align 8
  %885 = bitcast %"class.std::__1::unique_ptr.273"* %882 to i64*
  store i64 %881, i64* %885, align 8
  %886 = icmp eq %"class.spvtools::opt::CFG"* %884, null
  br i1 %886, label %889, label %887

887:                                              ; preds = %876
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %884) #12
  %888 = bitcast %"class.spvtools::opt::CFG"* %884 to i8*
  call void @_ZdlPv(i8* %888) #13
  br label %889

889:                                              ; preds = %887, %876
  %890 = load i32, i32* %872, align 8
  %891 = or i32 %890, 16
  store i32 %891, i32* %872, align 8
  %892 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  br label %893

893:                                              ; preds = %889, %870
  %894 = phi %"class.spvtools::opt::IRContext"* [ %871, %870 ], [ %892, %889 ]
  %895 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %871, i64 0, i32 15, i32 0, i32 0, i32 0
  %896 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %895, align 8
  %897 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %117, align 8
  %898 = call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %894, %"class.spvtools::opt::Function"* %897) #12
  %899 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %898, i64 0, i32 0, i32 0
  %900 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %901 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %900, i64 0, i32 11
  %902 = load i32, i32* %901, align 8
  %903 = and i32 %902, 1
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %930

905:                                              ; preds = %893
  %906 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %900, i64 0, i32 4, i32 0, i32 0, i32 0
  %907 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %906, align 8
  %908 = call i8* @_Znwm(i64 104) #13
  %909 = bitcast i8* %908 to %"class.spvtools::opt::analysis::DefUseManager"*
  %910 = getelementptr inbounds i8, i8* %908, i64 32
  %911 = bitcast i8* %910 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %908, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %911, align 4
  %912 = getelementptr inbounds i8, i8* %908, i64 48
  %913 = getelementptr inbounds i8, i8* %908, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %912, i8 0, i64 16, i1 false) #12
  %914 = bitcast i8* %913 to i8**
  store i8* %912, i8** %914, align 8
  %915 = getelementptr inbounds i8, i8* %908, i64 64
  %916 = getelementptr inbounds i8, i8* %908, i64 96
  %917 = bitcast i8* %916 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %915, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %917, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %909, %"class.spvtools::opt::Module"* %907) #12
  %918 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %900, i64 0, i32 6
  %919 = ptrtoint i8* %908 to i64
  %920 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %918, i64 0, i32 0, i32 0, i32 0
  %921 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %920, align 8
  %922 = bitcast %"class.std::__1::unique_ptr.62"* %918 to i64*
  store i64 %919, i64* %922, align 8
  %923 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %921, null
  br i1 %923, label %926, label %924

924:                                              ; preds = %905
  %925 = bitcast %"class.std::__1::unique_ptr.62"* %918 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %925, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %921) #12
  br label %926

926:                                              ; preds = %924, %905
  %927 = load i32, i32* %901, align 8
  %928 = or i32 %927, 1
  store i32 %928, i32* %901, align 8
  %929 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  br label %930

930:                                              ; preds = %926, %893
  %931 = phi %"class.spvtools::opt::IRContext"* [ %900, %893 ], [ %929, %926 ]
  %932 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %900, i64 0, i32 6, i32 0, i32 0, i32 0
  %933 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %932, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 24, i1 false) #12
  %934 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  store %"class.spvtools::opt::IRContext"* %931, %"class.spvtools::opt::IRContext"** %135, align 8
  %935 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %934, i64 0, i32 1
  %936 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %935, align 8
  %937 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %936, i64 0, i32 0
  %938 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %937, align 8
  %939 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %931, %"class.spvtools::opt::Function"* %938) #12
  store %"class.spvtools::opt::LoopDescriptor"* %939, %"class.spvtools::opt::LoopDescriptor"** %136, align 8
  store %"class.spvtools::opt::Loop"* %934, %"class.spvtools::opt::Loop"** %137, align 8
  %940 = bitcast %"class.spvtools::opt::BasicBlock"** %935 to i64**
  %941 = load i64*, i64** %940, align 8
  %942 = load i64, i64* %941, align 8
  store i64 %942, i64* %140, align 8
  %943 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %944 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %943, i64 0, i32 3
  %945 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %944, align 8
  %946 = icmp ne %"class.spvtools::opt::BasicBlock"* %945, null
  br i1 %946, label %947, label %1580

947:                                              ; preds = %930
  %948 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %117, align 8
  %949 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %945, i64 0, i32 1, i32 0, i32 0, i32 0
  %950 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, align 8
  %951 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %950, i64 0, i32 4
  %952 = load i8, i8* %951, align 1, !range !15
  %953 = icmp eq i8 %952, 0
  br i1 %953, label %959, label %954

954:                                              ; preds = %947
  %955 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %950, i64 0, i32 3
  %956 = load i8, i8* %955, align 4, !range !15
  %957 = zext i8 %956 to i32
  %958 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %950, i32 %957) #12
  br label %959

959:                                              ; preds = %954, %947
  %960 = phi i32 [ %958, %954 ], [ 0, %947 ]
  %961 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %948, i64 0, i32 3
  %962 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %961, i64 0, i32 0, i32 0
  %963 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %962, align 8
  %964 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %948, i64 0, i32 3, i32 0, i32 1
  %965 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %964, align 8
  %966 = icmp eq %"class.std::__1::unique_ptr.40"* %963, %965
  br i1 %966, label %987, label %967

967:                                              ; preds = %959, %984
  %968 = phi %"class.std::__1::unique_ptr.40"* [ %985, %984 ], [ %963, %959 ]
  %969 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %968, i64 0, i32 0, i32 0, i32 0
  %970 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %969, align 8
  %971 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %970, i64 0, i32 1, i32 0, i32 0, i32 0
  %972 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %971, align 8
  %973 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %972, i64 0, i32 4
  %974 = load i8, i8* %973, align 1, !range !15
  %975 = icmp eq i8 %974, 0
  br i1 %975, label %981, label %976

976:                                              ; preds = %967
  %977 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %972, i64 0, i32 3
  %978 = load i8, i8* %977, align 4, !range !15
  %979 = zext i8 %978 to i32
  %980 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %972, i32 %979) #12
  br label %981

981:                                              ; preds = %976, %967
  %982 = phi i32 [ %980, %976 ], [ 0, %967 ]
  %983 = icmp eq i32 %982, %960
  br i1 %983, label %987, label %984

984:                                              ; preds = %981
  %985 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %968, i64 1
  %986 = icmp eq %"class.std::__1::unique_ptr.40"* %985, %965
  br i1 %986, label %987, label %967

987:                                              ; preds = %984, %981, %959
  %988 = phi %"class.std::__1::unique_ptr.40"* [ %963, %959 ], [ %965, %984 ], [ %968, %981 ]
  %989 = call fastcc %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch16CreateBasicBlockENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nonnull %54, %"class.std::__1::vector.38"* %961, %"class.std::__1::unique_ptr.40"* %988) #12
  %990 = icmp eq %"class.spvtools::opt::BasicBlock"* %989, null
  br i1 %990, label %1580, label %991

991:                                              ; preds = %987
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 32, i1 false) #12
  %992 = load i64, i64* %121, align 8
  %993 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %989, i64 0, i32 2, i32 0, i32 1
  %994 = ptrtoint %"class.spvtools::opt::Instruction"* %993 to i64
  store i64 %992, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* %989, %"class.spvtools::opt::BasicBlock"** %143, align 8
  store i64 %994, i64* %147, align 8
  store i32 3, i32* %144, align 8
  %995 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, align 8
  %996 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %995, i64 0, i32 4
  %997 = load i8, i8* %996, align 1, !range !15
  %998 = icmp eq i8 %997, 0
  br i1 %998, label %1004, label %999

999:                                              ; preds = %991
  %1000 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %995, i64 0, i32 3
  %1001 = load i8, i8* %1000, align 4, !range !15
  %1002 = zext i8 %1001 to i32
  %1003 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %995, i32 %1002) #12
  br label %1004

1004:                                             ; preds = %999, %991
  %1005 = phi i32 [ %1003, %999 ], [ 0, %991 ]
  %1006 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %30, i32 %1005) #12
  %1007 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %989, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %1008 = bitcast %"class.spvtools::opt::Instruction"** %1007 to i64*
  %1009 = load i64, i64* %1008, align 8, !noalias !16
  %1010 = inttoptr i64 %1009 to %"class.spvtools::opt::Instruction"*
  %1011 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %142, align 8
  %1012 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1011, %"class.spvtools::opt::Instruction"* %1010) #12
  store %"class.spvtools::opt::BasicBlock"* %1012, %"class.spvtools::opt::BasicBlock"** %143, align 8
  store i64 %1009, i64* %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #12
  store i32 -1431655766, i32* %28, align 4
  %1013 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %989, i64 0, i32 1, i32 0, i32 0, i32 0
  %1014 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  %1015 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1014, i64 0, i32 4
  %1016 = load i8, i8* %1015, align 1, !range !15
  %1017 = icmp eq i8 %1016, 0
  br i1 %1017, label %1023, label %1018

1018:                                             ; preds = %1004
  %1019 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1014, i64 0, i32 3
  %1020 = load i8, i8* %1019, align 4, !range !15
  %1021 = zext i8 %1020 to i32
  %1022 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1014, i32 %1021) #12
  br label %1023

1023:                                             ; preds = %1018, %1004
  %1024 = phi i32 [ %1022, %1018 ], [ 0, %1004 ]
  store i32 %1024, i32* %28, align 4
  %1025 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 5, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #12
  store i32* %28, i32** %150, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %151) #12
  %1026 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %1025, i32* nonnull dereferenceable(4) %28, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %26, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %27) #12
  %1027 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %1026, 0
  %1028 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1027, i64 3
  %1029 = bitcast %"struct.std::__1::__hash_node_base.333"* %1028 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #12
  store %"class.spvtools::opt::BasicBlock"* %989, %"class.spvtools::opt::BasicBlock"** %1029, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %896, %"class.spvtools::opt::BasicBlock"* nonnull %989) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #12
  %1030 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %933, %"class.spvtools::opt::Instruction"* %1030) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %153, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %154, align 8
  %1031 = call i8* @_Znwm(i64 24) #13, !noalias !23
  %1032 = bitcast i8* %1031 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %989, %"class.spvtools::opt::BasicBlock"** %1032, align 8
  %1033 = getelementptr inbounds i8, i8* %1031, i64 8
  %1034 = bitcast i8* %1033 to %"class.spvtools::opt::InstructionBuilder"**
  store %"class.spvtools::opt::InstructionBuilder"* %30, %"class.spvtools::opt::InstructionBuilder"** %1034, align 8
  %1035 = getelementptr inbounds i8, i8* %1031, i64 16
  %1036 = bitcast i8* %1035 to %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"**
  store %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %54, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %1036, align 8
  store i8* %1031, i8** %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %156) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %158, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %159, align 8
  store i64 %157, i64* %160, align 8
  %1037 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %945, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %1038 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1037, align 8
  %1039 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1038, i64 0, i32 0, i32 3
  %1040 = load i8, i8* %1039, align 8, !range !15
  %1041 = icmp ne i8 %1040, 0
  %1042 = icmp eq %"class.spvtools::opt::Instruction"* %1038, null
  %1043 = or i1 %1042, %1041
  br i1 %1043, label %1062, label %1044

1044:                                             ; preds = %1023, %1053
  %1045 = phi %"class.spvtools::opt::Instruction"* [ %1057, %1053 ], [ %1038, %1023 ]
  %1046 = icmp eq %"class.spvtools::opt::Instruction"* %1045, null
  br i1 %1046, label %1060, label %1047

1047:                                             ; preds = %1044
  %1048 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1045, i64 0, i32 0, i32 1
  %1049 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1048, align 8
  %1050 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1045, i64 0, i32 2
  %1051 = load i32, i32* %1050, align 8
  %1052 = icmp eq i32 %1051, 245
  br i1 %1052, label %1053, label %1060

1053:                                             ; preds = %1047
  %1054 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1049, i64 0, i32 0, i32 3
  %1055 = load i8, i8* %1054, align 8, !range !15
  %1056 = icmp eq i8 %1055, 0
  %1057 = select i1 %1056, %"class.spvtools::opt::Instruction"* %1049, %"class.spvtools::opt::Instruction"* null
  %1058 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %158, align 8
  %1059 = call zeroext i1 %1058(%"union.std::__1::__function::__policy_storage"* nonnull %161, %"class.spvtools::opt::Instruction"* nonnull %1045) #12
  br i1 %1059, label %1044, label %1060

1060:                                             ; preds = %1053, %1047, %1044
  %1061 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %159, align 8
  br label %1062

1062:                                             ; preds = %1060, %1023
  %1063 = phi %"struct.std::__1::__function::__policy"* [ %1061, %1060 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %1023 ]
  %1064 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1063, i64 0, i32 1
  %1065 = load void (i8*)*, void (i8*)** %1064, align 8
  %1066 = icmp eq void (i8*)* %1065, null
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1062
  %1068 = load i8*, i8** %162, align 8
  call void %1065(i8* %1068) #12
  br label %1069

1069:                                             ; preds = %1067, %1062
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %156) #12
  %1070 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %154, align 8
  %1071 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1070, i64 0, i32 1
  %1072 = load void (i8*)*, void (i8*)** %1071, align 8
  %1073 = icmp eq void (i8*)* %1072, null
  br i1 %1073, label %1076, label %1074

1074:                                             ; preds = %1069
  %1075 = load i8*, i8** %155, align 8
  call void %1072(i8* %1075) #12
  br label %1076

1076:                                             ; preds = %1074, %1069
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 24, i1 false) #12
  %1077 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, align 8
  %1078 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1077, i64 0, i32 4
  %1079 = load i8, i8* %1078, align 1, !range !15
  %1080 = icmp eq i8 %1079, 0
  br i1 %1080, label %1086, label %1081

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1077, i64 0, i32 3
  %1083 = load i8, i8* %1082, align 4, !range !15
  %1084 = zext i8 %1083 to i32
  %1085 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1077, i32 %1084) #12
  br label %1086

1086:                                             ; preds = %1081, %1076
  %1087 = phi i32 [ %1085, %1081 ], [ 0, %1076 ]
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1090 = load i64, i64* %1089, align 8
  %1091 = icmp eq i64 %1090, 0
  br i1 %1091, label %1140, label %1092

1092:                                             ; preds = %1086
  %1093 = call i64 @llvm.ctpop.i64(i64 %1090) #12, !range !8
  %1094 = icmp ugt i64 %1093, 1
  br i1 %1094, label %1098, label %1095

1095:                                             ; preds = %1092
  %1096 = add i64 %1090, 4294967295
  %1097 = and i64 %1096, %1088
  br label %1102

1098:                                             ; preds = %1092
  %1099 = icmp ugt i64 %1090, %1088
  br i1 %1099, label %1102, label %1100

1100:                                             ; preds = %1098
  %1101 = urem i64 %1088, %1090
  br label %1102

1102:                                             ; preds = %1100, %1098, %1095
  %1103 = phi i64 [ %1097, %1095 ], [ %1101, %1100 ], [ %1088, %1098 ]
  %1104 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1105 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %1104, align 8
  %1106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %1105, i64 %1103
  %1107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %1106, align 8
  %1108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %1107, null
  br i1 %1108, label %1140, label %1109

1109:                                             ; preds = %1102
  %1110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1107, i64 0, i32 0
  %1111 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %1110, align 8
  %1112 = icmp eq %"struct.std::__1::__hash_node_base.309"* %1111, null
  br i1 %1112, label %1140, label %1113

1113:                                             ; preds = %1109
  %1114 = add i64 %1090, -1
  br label %1115

1115:                                             ; preds = %1136, %1113
  %1116 = phi %"struct.std::__1::__hash_node_base.309"* [ %1111, %1113 ], [ %1138, %1136 ]
  %1117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1116, i64 1
  %1118 = bitcast %"struct.std::__1::__hash_node_base.309"* %1117 to i64*
  %1119 = load i64, i64* %1118, align 8
  %1120 = icmp eq i64 %1119, %1088
  br i1 %1120, label %1131, label %1121

1121:                                             ; preds = %1115
  br i1 %1094, label %1124, label %1122

1122:                                             ; preds = %1121
  %1123 = and i64 %1119, %1114
  br label %1128

1124:                                             ; preds = %1121
  %1125 = icmp ult i64 %1119, %1090
  br i1 %1125, label %1128, label %1126

1126:                                             ; preds = %1124
  %1127 = urem i64 %1119, %1090
  br label %1128

1128:                                             ; preds = %1126, %1124, %1122
  %1129 = phi i64 [ %1123, %1122 ], [ %1127, %1126 ], [ %1119, %1124 ]
  %1130 = icmp eq i64 %1129, %1103
  br i1 %1130, label %1136, label %1140

1131:                                             ; preds = %1115
  %1132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1116, i64 2
  %1133 = bitcast %"struct.std::__1::__hash_node_base.309"* %1132 to i32*
  %1134 = load i32, i32* %1133, align 4
  %1135 = icmp eq i32 %1134, %1087
  br i1 %1135, label %1141, label %1136

1136:                                             ; preds = %1131, %1128
  %1137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1116, i64 0, i32 0
  %1138 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %1137, align 8
  %1139 = icmp eq %"struct.std::__1::__hash_node_base.309"* %1138, null
  br i1 %1139, label %1140, label %1115

1140:                                             ; preds = %1109, %1102, %1086, %1136, %1128
  call void @abort() #14
  unreachable

1141:                                             ; preds = %1131
  %1142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1116, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #12
  %1143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1116, i64 4
  %1144 = bitcast %"struct.std::__1::__hash_node_base.309"* %1143 to i64*
  %1145 = load i64, i64* %1144, align 8
  %1146 = bitcast %"struct.std::__1::__hash_node_base.309"* %1142 to i64*
  %1147 = load i64, i64* %1146, align 8
  %1148 = sub i64 %1145, %1147
  %1149 = ashr exact i64 %1148, 2
  %1150 = icmp eq i64 %1148, 0
  br i1 %1150, label %1179, label %1151

1151:                                             ; preds = %1141
  %1152 = icmp ugt i64 %1149, 4611686018427387903
  br i1 %1152, label %1153, label %1155

1153:                                             ; preds = %1151
  %1154 = bitcast %"class.std::__1::vector.3"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1154) #14
  unreachable

1155:                                             ; preds = %1151
  %1156 = call i8* @_Znwm(i64 %1148) #13
  %1157 = bitcast i8* %1156 to i32*
  store i8* %1156, i8** %167, align 8
  store i8* %1156, i8** %168, align 8
  %1158 = getelementptr inbounds i32, i32* %1157, i64 %1149
  store i32* %1158, i32** %166, align 8
  %1159 = bitcast %"struct.std::__1::__hash_node_base.309"* %1142 to i32**
  %1160 = load i32*, i32** %1159, align 8
  %1161 = load i64, i64* %1144, align 8
  %1162 = ptrtoint i8* %1156 to i64
  %1163 = ptrtoint i32* %1160 to i64
  %1164 = sub i64 %1161, %1163
  %1165 = icmp sgt i64 %1164, 0
  br i1 %1165, label %1166, label %1171

1166:                                             ; preds = %1155
  %1167 = lshr exact i64 %1164, 2
  %1168 = bitcast i32* %1160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1156, i8* align 4 %1168, i64 %1164, i1 false) #12
  %1169 = getelementptr inbounds i32, i32* %1157, i64 %1167
  %1170 = ptrtoint i32* %1169 to i64
  br label %1171

1171:                                             ; preds = %1166, %1155
  %1172 = phi i64 [ %1170, %1166 ], [ %1162, %1155 ]
  store i64 %1172, i64* %169, align 8
  %1173 = inttoptr i64 %1172 to i32*
  %1174 = icmp eq i32* %1157, %1173
  br i1 %1174, label %1179, label %1175

1175:                                             ; preds = %1171
  %1176 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1177 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %1178 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 4, i32 0
  br label %1195

1179:                                             ; preds = %1356, %1171, %1141
  %1180 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, align 8
  %1181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1180, i64 0, i32 4
  %1182 = load i8, i8* %1181, align 1, !range !15
  %1183 = icmp eq i8 %1182, 0
  br i1 %1183, label %1189, label %1184

1184:                                             ; preds = %1179
  %1185 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1180, i64 0, i32 3
  %1186 = load i8, i8* %1185, align 4, !range !15
  %1187 = zext i8 %1186 to i32
  %1188 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1180, i32 %1187) #12
  br label %1189

1189:                                             ; preds = %1184, %1179
  %1190 = phi i32 [ %1188, %1184 ], [ 0, %1179 ]
  call void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"* %896, i32 %1190) #12
  %1191 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %1192 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1191, i64 0, i32 6
  %1193 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1192, align 8
  %1194 = icmp eq %"class.spvtools::opt::Loop"* %1193, null
  br i1 %1194, label %1396, label %1359

1195:                                             ; preds = %1356, %1175
  %1196 = phi i32* [ %1157, %1175 ], [ %1357, %1356 ]
  %1197 = load i32, i32* %1196, align 4
  %1198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  %1199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1198, i64 0, i32 4
  %1200 = load i8, i8* %1199, align 1, !range !15
  %1201 = icmp eq i8 %1200, 0
  br i1 %1201, label %1207, label %1202

1202:                                             ; preds = %1195
  %1203 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1198, i64 0, i32 3
  %1204 = load i8, i8* %1203, align 4, !range !15
  %1205 = zext i8 %1204 to i32
  %1206 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1198, i32 %1205) #12
  br label %1207

1207:                                             ; preds = %1202, %1195
  %1208 = phi i32 [ %1206, %1202 ], [ 0, %1195 ]
  %1209 = icmp eq i32 %1197, %1208
  br i1 %1209, label %1356, label %1210

1210:                                             ; preds = %1207
  %1211 = zext i32 %1197 to i64
  %1212 = load i64, i64* %1176, align 8
  %1213 = icmp eq i64 %1212, 0
  br i1 %1213, label %1261, label %1214

1214:                                             ; preds = %1210
  %1215 = call i64 @llvm.ctpop.i64(i64 %1212) #12, !range !8
  %1216 = icmp ugt i64 %1215, 1
  br i1 %1216, label %1220, label %1217

1217:                                             ; preds = %1214
  %1218 = add i64 %1212, 4294967295
  %1219 = and i64 %1218, %1211
  br label %1224

1220:                                             ; preds = %1214
  %1221 = icmp ugt i64 %1212, %1211
  br i1 %1221, label %1224, label %1222

1222:                                             ; preds = %1220
  %1223 = urem i64 %1211, %1212
  br label %1224

1224:                                             ; preds = %1222, %1220, %1217
  %1225 = phi i64 [ %1219, %1217 ], [ %1223, %1222 ], [ %1211, %1220 ]
  %1226 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %1177, align 8
  %1227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %1226, i64 %1225
  %1228 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %1227, align 8
  %1229 = icmp eq %"struct.std::__1::__hash_node_base.333"* %1228, null
  br i1 %1229, label %1261, label %1230

1230:                                             ; preds = %1224
  %1231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1228, i64 0, i32 0
  %1232 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %1231, align 8
  %1233 = icmp eq %"struct.std::__1::__hash_node_base.333"* %1232, null
  br i1 %1233, label %1261, label %1234

1234:                                             ; preds = %1230
  %1235 = add i64 %1212, -1
  br label %1236

1236:                                             ; preds = %1257, %1234
  %1237 = phi %"struct.std::__1::__hash_node_base.333"* [ %1232, %1234 ], [ %1259, %1257 ]
  %1238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1237, i64 1
  %1239 = bitcast %"struct.std::__1::__hash_node_base.333"* %1238 to i64*
  %1240 = load i64, i64* %1239, align 8
  %1241 = icmp eq i64 %1240, %1211
  br i1 %1241, label %1252, label %1242

1242:                                             ; preds = %1236
  br i1 %1216, label %1245, label %1243

1243:                                             ; preds = %1242
  %1244 = and i64 %1240, %1235
  br label %1249

1245:                                             ; preds = %1242
  %1246 = icmp ult i64 %1240, %1212
  br i1 %1246, label %1249, label %1247

1247:                                             ; preds = %1245
  %1248 = urem i64 %1240, %1212
  br label %1249

1249:                                             ; preds = %1247, %1245, %1243
  %1250 = phi i64 [ %1244, %1243 ], [ %1248, %1247 ], [ %1240, %1245 ]
  %1251 = icmp eq i64 %1250, %1225
  br i1 %1251, label %1257, label %1261

1252:                                             ; preds = %1236
  %1253 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1237, i64 2
  %1254 = bitcast %"struct.std::__1::__hash_node_base.333"* %1253 to i32*
  %1255 = load i32, i32* %1254, align 4
  %1256 = icmp eq i32 %1255, %1197
  br i1 %1256, label %1262, label %1257

1257:                                             ; preds = %1252, %1249
  %1258 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1237, i64 0, i32 0
  %1259 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %1258, align 8
  %1260 = icmp eq %"struct.std::__1::__hash_node_base.333"* %1259, null
  br i1 %1260, label %1261, label %1236

1261:                                             ; preds = %1230, %1224, %1210, %1257, %1249
  call void @abort() #14
  unreachable

1262:                                             ; preds = %1252
  %1263 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1237, i64 3
  %1264 = bitcast %"struct.std::__1::__hash_node_base.333"* %1263 to %"class.spvtools::opt::BasicBlock"**
  %1265 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1264, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #12
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %171, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPjE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %172, align 8
  store %"class.spvtools::opt::BasicBlock"* %945, %"class.spvtools::opt::BasicBlock"** %173, align 8
  store %"class.spvtools::opt::BasicBlock"* %989, %"class.spvtools::opt::BasicBlock"** %175, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %1265, %"class.std::__1::function.1179"* nonnull dereferenceable(32) %33) #12
  %1266 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %172, align 8
  %1267 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1266, i64 0, i32 1
  %1268 = load void (i8*)*, void (i8*)** %1267, align 8
  %1269 = icmp eq void (i8*)* %1268, null
  br i1 %1269, label %1272, label %1270

1270:                                             ; preds = %1262
  %1271 = load i8*, i8** %176, align 8
  call void %1268(i8* %1271) #12
  br label %1272

1272:                                             ; preds = %1270, %1262
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #12
  %1273 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  %1274 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1273, i64 0, i32 4
  %1275 = load i8, i8* %1274, align 1, !range !15
  %1276 = icmp eq i8 %1275, 0
  br i1 %1276, label %1282, label %1277

1277:                                             ; preds = %1272
  %1278 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1273, i64 0, i32 3
  %1279 = load i8, i8* %1278, align 4, !range !15
  %1280 = zext i8 %1279 to i32
  %1281 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1273, i32 %1280) #12
  br label %1282

1282:                                             ; preds = %1277, %1272
  %1283 = phi i32 [ %1281, %1277 ], [ 0, %1272 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #12
  store i32 %1283, i32* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #12
  store i32* %24, i32** %179, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %180) #12
  %1284 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %1178, i32* nonnull dereferenceable(4) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %22, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %23) #12
  %1285 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %1284, 0
  %1286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1285, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %180) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #12
  %1287 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1285, i64 4
  %1288 = bitcast %"struct.std::__1::__hash_node_base.309"* %1287 to i32**
  %1289 = load i32*, i32** %1288, align 8
  %1290 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1285, i64 5
  %1291 = bitcast %"struct.std::__1::__hash_node_base.309"* %1290 to i32**
  %1292 = load i32*, i32** %1291, align 8
  %1293 = icmp eq i32* %1289, %1292
  %1294 = ptrtoint i32* %1292 to i64
  br i1 %1293, label %1299, label %1295

1295:                                             ; preds = %1282
  store i32 %1197, i32* %1289, align 4
  %1296 = getelementptr inbounds i32, i32* %1289, i64 1
  %1297 = ptrtoint i32* %1296 to i64
  %1298 = bitcast %"struct.std::__1::__hash_node_base.309"* %1287 to i64*
  store i64 %1297, i64* %1298, align 8
  br label %1355

1299:                                             ; preds = %1282
  %1300 = ptrtoint i32* %1289 to i64
  %1301 = bitcast %"struct.std::__1::__hash_node_base.309"* %1287 to i64*
  %1302 = bitcast %"struct.std::__1::__hash_node_base.309"* %1286 to i64*
  %1303 = load i64, i64* %1302, align 8
  %1304 = sub i64 %1300, %1303
  %1305 = ashr exact i64 %1304, 2
  %1306 = add nsw i64 %1305, 1
  %1307 = icmp ugt i64 %1306, 4611686018427387903
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1299
  %1309 = bitcast %"struct.std::__1::__hash_node_base.309"* %1286 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1309) #14
  unreachable

1310:                                             ; preds = %1299
  %1311 = bitcast %"struct.std::__1::__hash_node_base.309"* %1290 to i64*
  %1312 = sub i64 %1294, %1303
  %1313 = ashr exact i64 %1312, 2
  %1314 = icmp ult i64 %1313, 2305843009213693951
  br i1 %1314, label %1315, label %1323

1315:                                             ; preds = %1310
  %1316 = ashr exact i64 %1312, 1
  %1317 = icmp ult i64 %1316, %1306
  %1318 = select i1 %1317, i64 %1306, i64 %1316
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1328, label %1320

1320:                                             ; preds = %1315
  %1321 = icmp ugt i64 %1318, 4611686018427387903
  br i1 %1321, label %1322, label %1323

1322:                                             ; preds = %1320
  call void @abort() #14
  unreachable

1323:                                             ; preds = %1320, %1310
  %1324 = phi i64 [ %1318, %1320 ], [ 4611686018427387903, %1310 ]
  %1325 = shl i64 %1324, 2
  %1326 = call i8* @_Znwm(i64 %1325) #13
  %1327 = bitcast i8* %1326 to i32*
  br label %1328

1328:                                             ; preds = %1323, %1315
  %1329 = phi i64 [ %1324, %1323 ], [ 0, %1315 ]
  %1330 = phi i32* [ %1327, %1323 ], [ null, %1315 ]
  %1331 = getelementptr inbounds i32, i32* %1330, i64 %1305
  %1332 = getelementptr inbounds i32, i32* %1330, i64 %1329
  %1333 = ptrtoint i32* %1332 to i64
  store i32 %1197, i32* %1331, align 4
  %1334 = getelementptr inbounds i32, i32* %1331, i64 1
  %1335 = ptrtoint i32* %1334 to i64
  %1336 = bitcast %"struct.std::__1::__hash_node_base.309"* %1286 to i32**
  %1337 = load i32*, i32** %1336, align 8
  %1338 = load i64, i64* %1301, align 8
  %1339 = ptrtoint i32* %1337 to i64
  %1340 = sub i64 %1338, %1339
  %1341 = ashr exact i64 %1340, 2
  %1342 = sub nsw i64 0, %1341
  %1343 = getelementptr inbounds i32, i32* %1331, i64 %1342
  %1344 = ptrtoint i32* %1343 to i64
  %1345 = icmp sgt i64 %1340, 0
  br i1 %1345, label %1346, label %1350

1346:                                             ; preds = %1328
  %1347 = bitcast i32* %1343 to i8*
  %1348 = bitcast i32* %1337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1347, i8* align 4 %1348, i64 %1340, i1 false) #12
  %1349 = load i32*, i32** %1336, align 8
  br label %1350

1350:                                             ; preds = %1346, %1328
  %1351 = phi i32* [ %1337, %1328 ], [ %1349, %1346 ]
  store i64 %1344, i64* %1302, align 8
  store i64 %1335, i64* %1301, align 8
  store i64 %1333, i64* %1311, align 8
  %1352 = icmp eq i32* %1351, null
  br i1 %1352, label %1355, label %1353

1353:                                             ; preds = %1350
  %1354 = bitcast i32* %1351 to i8*
  call void @_ZdlPv(i8* %1354) #13
  br label %1355

1355:                                             ; preds = %1353, %1350, %1295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #12
  br label %1356

1356:                                             ; preds = %1355, %1207
  %1357 = getelementptr inbounds i32, i32* %1196, i64 1
  %1358 = icmp eq i32* %1357, %1173
  br i1 %1358, label %1179, label %1195

1359:                                             ; preds = %1189
  %1360 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  %1361 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1360, i64 0, i32 4
  %1362 = load i8, i8* %1361, align 1, !range !15
  %1363 = icmp eq i8 %1362, 0
  br i1 %1363, label %1369, label %1364

1364:                                             ; preds = %1359
  %1365 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1360, i64 0, i32 3
  %1366 = load i8, i8* %1365, align 4, !range !15
  %1367 = zext i8 %1366 to i32
  %1368 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1360, i32 %1367) #12
  br label %1369

1369:                                             ; preds = %1364, %1359
  %1370 = phi i32 [ %1368, %1364 ], [ 0, %1359 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #12
  store i32 %1370, i32* %21, align 4
  br label %1371

1371:                                             ; preds = %1371, %1369
  %1372 = phi %"class.spvtools::opt::Loop"* [ %1376, %1371 ], [ %1193, %1369 ]
  %1373 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1372, i64 0, i32 8, i32 0
  %1374 = call { %"struct.std::__1::__hash_node_base.948"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.944"* %1373, i32* nonnull dereferenceable(4) %21, i32* nonnull dereferenceable(4) %21) #12
  %1375 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1372, i64 0, i32 6
  %1376 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1375, align 8
  %1377 = icmp eq %"class.spvtools::opt::Loop"* %1376, null
  br i1 %1377, label %1378, label %1371

1378:                                             ; preds = %1371
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #12
  %1379 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %119, align 8
  %1380 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1013, align 8
  %1381 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1380, i64 0, i32 4
  %1382 = load i8, i8* %1381, align 1, !range !15
  %1383 = icmp eq i8 %1382, 0
  br i1 %1383, label %1389, label %1384

1384:                                             ; preds = %1378
  %1385 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1380, i64 0, i32 3
  %1386 = load i8, i8* %1385, align 4, !range !15
  %1387 = zext i8 %1386 to i32
  %1388 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1380, i32 %1387) #12
  br label %1389

1389:                                             ; preds = %1384, %1378
  %1390 = phi i32 [ %1388, %1384 ], [ 0, %1378 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #12
  store i32 %1390, i32* %20, align 4
  %1391 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1379, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #12
  store i32* %20, i32** %184, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %185) #12
  %1392 = call { %"struct.std::__1::__hash_node_base.970"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.966"* %1391, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %19) #12
  %1393 = extractvalue { %"struct.std::__1::__hash_node_base.970"*, i8 } %1392, 0
  %1394 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1393, i64 3
  %1395 = bitcast %"struct.std::__1::__hash_node_base.970"* %1394 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %185) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #12
  store %"class.spvtools::opt::Loop"* %1193, %"class.spvtools::opt::Loop"** %1395, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #12
  br label %1396

1396:                                             ; preds = %1389, %1189
  %1397 = call %"struct.spvtools::opt::DominatorTreeNode"* @_ZN8spvtools3opt13DominatorTree15GetOrInsertNodeEPNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %899, %"class.spvtools::opt::BasicBlock"* nonnull %989) #12
  %1398 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %1397 to i64
  %1399 = call %"struct.spvtools::opt::DominatorTreeNode"* @_ZN8spvtools3opt13DominatorTree15GetOrInsertNodeEPNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %899, %"class.spvtools::opt::BasicBlock"* nonnull %945) #12
  %1400 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %1399 to i64
  %1401 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1399, i64 0, i32 1
  %1402 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1401 to i64*
  %1403 = load i64, i64* %1402, align 8
  %1404 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1397, i64 0, i32 1
  %1405 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1404 to i64*
  store i64 %1403, i64* %1405, align 8
  %1406 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1397, i64 0, i32 2
  %1407 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1397, i64 0, i32 2, i32 0, i32 1
  %1408 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1407, align 8
  %1409 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1397, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %1410 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1409, align 8
  %1411 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1408, %1410
  %1412 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1410 to i64
  br i1 %1411, label %1418, label %1413

1413:                                             ; preds = %1396
  %1414 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1408 to i64*
  store i64 %1400, i64* %1414, align 8
  %1415 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1408, i64 1
  %1416 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1415 to i64
  %1417 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1407 to i64*
  store i64 %1416, i64* %1417, align 8
  br label %1475

1418:                                             ; preds = %1396
  %1419 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1408 to i64
  %1420 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1407 to i64*
  %1421 = bitcast %"class.std::__1::vector.1056"* %1406 to i64*
  %1422 = load i64, i64* %1421, align 8
  %1423 = sub i64 %1419, %1422
  %1424 = ashr exact i64 %1423, 3
  %1425 = add nsw i64 %1424, 1
  %1426 = icmp ugt i64 %1425, 2305843009213693951
  br i1 %1426, label %1427, label %1429

1427:                                             ; preds = %1418
  %1428 = bitcast %"class.std::__1::vector.1056"* %1406 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1428) #14
  unreachable

1429:                                             ; preds = %1418
  %1430 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1409 to i64*
  %1431 = sub i64 %1412, %1422
  %1432 = ashr exact i64 %1431, 3
  %1433 = icmp ult i64 %1432, 1152921504606846975
  br i1 %1433, label %1434, label %1442

1434:                                             ; preds = %1429
  %1435 = ashr exact i64 %1431, 2
  %1436 = icmp ult i64 %1435, %1425
  %1437 = select i1 %1436, i64 %1425, i64 %1435
  %1438 = icmp eq i64 %1437, 0
  br i1 %1438, label %1447, label %1439

1439:                                             ; preds = %1434
  %1440 = icmp ugt i64 %1437, 2305843009213693951
  br i1 %1440, label %1441, label %1442

1441:                                             ; preds = %1439
  call void @abort() #14
  unreachable

1442:                                             ; preds = %1439, %1429
  %1443 = phi i64 [ %1437, %1439 ], [ 2305843009213693951, %1429 ]
  %1444 = shl i64 %1443, 3
  %1445 = call i8* @_Znwm(i64 %1444) #13
  %1446 = bitcast i8* %1445 to %"struct.spvtools::opt::DominatorTreeNode"**
  br label %1447

1447:                                             ; preds = %1442, %1434
  %1448 = phi i64 [ %1443, %1442 ], [ 0, %1434 ]
  %1449 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1446, %1442 ], [ null, %1434 ]
  %1450 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1449, i64 %1424
  %1451 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1449, i64 %1448
  %1452 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1451 to i64
  %1453 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1450 to i64*
  store i64 %1400, i64* %1453, align 8
  %1454 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1450, i64 1
  %1455 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1454 to i64
  %1456 = getelementptr inbounds %"class.std::__1::vector.1056", %"class.std::__1::vector.1056"* %1406, i64 0, i32 0, i32 0
  %1457 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1456, align 8
  %1458 = load i64, i64* %1420, align 8
  %1459 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1457 to i64
  %1460 = sub i64 %1458, %1459
  %1461 = ashr exact i64 %1460, 3
  %1462 = sub nsw i64 0, %1461
  %1463 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1450, i64 %1462
  %1464 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1463 to i64
  %1465 = icmp sgt i64 %1460, 0
  br i1 %1465, label %1466, label %1470

1466:                                             ; preds = %1447
  %1467 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1463 to i8*
  %1468 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1467, i8* align 8 %1468, i64 %1460, i1 false) #12
  %1469 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1456, align 8
  br label %1470

1470:                                             ; preds = %1466, %1447
  %1471 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1457, %1447 ], [ %1469, %1466 ]
  store i64 %1464, i64* %1421, align 8
  store i64 %1455, i64* %1420, align 8
  store i64 %1452, i64* %1430, align 8
  %1472 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1471, null
  br i1 %1472, label %1475, label %1473

1473:                                             ; preds = %1470
  %1474 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1471 to i8*
  call void @_ZdlPv(i8* %1474) #13
  br label %1475

1475:                                             ; preds = %1473, %1470, %1413
  %1476 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1404, align 8
  %1477 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1476, i64 0, i32 2
  %1478 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1476, i64 0, i32 2, i32 0, i32 1
  %1479 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1478, align 8
  %1480 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1476, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %1481 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1480, align 8
  %1482 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1479, %1481
  %1483 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1481 to i64
  br i1 %1482, label %1489, label %1484

1484:                                             ; preds = %1475
  %1485 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1479 to i64*
  store i64 %1398, i64* %1485, align 8
  %1486 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1479, i64 1
  %1487 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1486 to i64
  %1488 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1478 to i64*
  store i64 %1487, i64* %1488, align 8
  br label %1546

1489:                                             ; preds = %1475
  %1490 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1479 to i64
  %1491 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1478 to i64*
  %1492 = bitcast %"class.std::__1::vector.1056"* %1477 to i64*
  %1493 = load i64, i64* %1492, align 8
  %1494 = sub i64 %1490, %1493
  %1495 = ashr exact i64 %1494, 3
  %1496 = add nsw i64 %1495, 1
  %1497 = icmp ugt i64 %1496, 2305843009213693951
  br i1 %1497, label %1498, label %1500

1498:                                             ; preds = %1489
  %1499 = bitcast %"class.std::__1::vector.1056"* %1477 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1499) #14
  unreachable

1500:                                             ; preds = %1489
  %1501 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %1480 to i64*
  %1502 = sub i64 %1483, %1493
  %1503 = ashr exact i64 %1502, 3
  %1504 = icmp ult i64 %1503, 1152921504606846975
  br i1 %1504, label %1505, label %1513

1505:                                             ; preds = %1500
  %1506 = ashr exact i64 %1502, 2
  %1507 = icmp ult i64 %1506, %1496
  %1508 = select i1 %1507, i64 %1496, i64 %1506
  %1509 = icmp eq i64 %1508, 0
  br i1 %1509, label %1518, label %1510

1510:                                             ; preds = %1505
  %1511 = icmp ugt i64 %1508, 2305843009213693951
  br i1 %1511, label %1512, label %1513

1512:                                             ; preds = %1510
  call void @abort() #14
  unreachable

1513:                                             ; preds = %1510, %1500
  %1514 = phi i64 [ %1508, %1510 ], [ 2305843009213693951, %1500 ]
  %1515 = shl i64 %1514, 3
  %1516 = call i8* @_Znwm(i64 %1515) #13
  %1517 = bitcast i8* %1516 to %"struct.spvtools::opt::DominatorTreeNode"**
  br label %1518

1518:                                             ; preds = %1513, %1505
  %1519 = phi i64 [ %1514, %1513 ], [ 0, %1505 ]
  %1520 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1517, %1513 ], [ null, %1505 ]
  %1521 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1520, i64 %1495
  %1522 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1520, i64 %1519
  %1523 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1522 to i64
  %1524 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1521 to i64*
  store i64 %1398, i64* %1524, align 8
  %1525 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1521, i64 1
  %1526 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1525 to i64
  %1527 = getelementptr inbounds %"class.std::__1::vector.1056", %"class.std::__1::vector.1056"* %1477, i64 0, i32 0, i32 0
  %1528 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1527, align 8
  %1529 = load i64, i64* %1491, align 8
  %1530 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1528 to i64
  %1531 = sub i64 %1529, %1530
  %1532 = ashr exact i64 %1531, 3
  %1533 = sub nsw i64 0, %1532
  %1534 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1521, i64 %1533
  %1535 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1534 to i64
  %1536 = icmp sgt i64 %1531, 0
  br i1 %1536, label %1537, label %1541

1537:                                             ; preds = %1518
  %1538 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1534 to i8*
  %1539 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1538, i8* align 8 %1539, i64 %1531, i1 false) #12
  %1540 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1527, align 8
  br label %1541

1541:                                             ; preds = %1537, %1518
  %1542 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1528, %1518 ], [ %1540, %1537 ]
  store i64 %1535, i64* %1492, align 8
  store i64 %1526, i64* %1491, align 8
  store i64 %1523, i64* %1501, align 8
  %1543 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1542, null
  br i1 %1543, label %1546, label %1544

1544:                                             ; preds = %1541
  %1545 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1542 to i8*
  call void @_ZdlPv(i8* %1545) #13
  br label %1546

1546:                                             ; preds = %1544, %1541, %1484
  %1547 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1401, align 8
  %1548 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1547, i64 0, i32 2, i32 0, i32 0
  %1549 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1548, align 8
  %1550 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1547, i64 0, i32 2, i32 0, i32 1
  %1551 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %1550, align 8
  %1552 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1549, %1551
  %1553 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1551 to i64
  br i1 %1552, label %1561, label %1554

1554:                                             ; preds = %1546, %1558
  %1555 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1559, %1558 ], [ %1549, %1546 ]
  %1556 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1555, align 8
  %1557 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %1556, %1399
  br i1 %1557, label %1561, label %1558

1558:                                             ; preds = %1554
  %1559 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1555, i64 1
  %1560 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %1559, %1551
  br i1 %1560, label %1561, label %1554

1561:                                             ; preds = %1558, %1554, %1546
  %1562 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %1549, %1546 ], [ %1551, %1558 ], [ %1555, %1554 ]
  %1563 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1562, i64 1
  %1564 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %1563 to i64
  %1565 = sub i64 %1553, %1564
  %1566 = ashr exact i64 %1565, 3
  %1567 = icmp eq i64 %1565, 0
  br i1 %1567, label %1571, label %1568

1568:                                             ; preds = %1561
  %1569 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1562 to i8*
  %1570 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %1563 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1569, i8* align 8 %1570, i64 %1565, i1 false) #12
  br label %1571

1571:                                             ; preds = %1568, %1561
  %1572 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %1562, i64 %1566
  store %"struct.spvtools::opt::DominatorTreeNode"** %1572, %"struct.spvtools::opt::DominatorTreeNode"*** %1550, align 8
  %1573 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1573, %"class.spvtools::opt::BasicBlock"* nonnull %989) #12
  %1574 = load i32*, i32** %164, align 8
  %1575 = icmp eq i32* %1574, null
  br i1 %1575, label %1579, label %1576

1576:                                             ; preds = %1571
  %1577 = ptrtoint i32* %1574 to i64
  store i64 %1577, i64* %169, align 8
  %1578 = bitcast i32* %1574 to i8*
  call void @_ZdlPv(i8* %1578) #13
  br label %1579

1579:                                             ; preds = %1576, %1571
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #12
  br label %1580

1580:                                             ; preds = %1579, %987, %930
  %1581 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %1582 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1581, i64 0, i32 4
  %1583 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1582, align 8
  %1584 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %117, align 8
  %1585 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1583, i64 0, i32 1, i32 0, i32 0, i32 0
  %1586 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1585, align 8
  %1587 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1586, i64 0, i32 4
  %1588 = load i8, i8* %1587, align 1, !range !15
  %1589 = icmp eq i8 %1588, 0
  br i1 %1589, label %1595, label %1590

1590:                                             ; preds = %1580
  %1591 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1586, i64 0, i32 3
  %1592 = load i8, i8* %1591, align 4, !range !15
  %1593 = zext i8 %1592 to i32
  %1594 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1586, i32 %1593) #12
  br label %1595

1595:                                             ; preds = %1590, %1580
  %1596 = phi i32 [ %1594, %1590 ], [ 0, %1580 ]
  %1597 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1584, i64 0, i32 3
  %1598 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1597, i64 0, i32 0, i32 0
  %1599 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1598, align 8
  %1600 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1584, i64 0, i32 3, i32 0, i32 1
  %1601 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1600, align 8
  %1602 = icmp eq %"class.std::__1::unique_ptr.40"* %1599, %1601
  br i1 %1602, label %1623, label %1603

1603:                                             ; preds = %1595, %1620
  %1604 = phi %"class.std::__1::unique_ptr.40"* [ %1621, %1620 ], [ %1599, %1595 ]
  %1605 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1604, i64 0, i32 0, i32 0, i32 0
  %1606 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1605, align 8
  %1607 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1606, i64 0, i32 1, i32 0, i32 0, i32 0
  %1608 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1607, align 8
  %1609 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1608, i64 0, i32 4
  %1610 = load i8, i8* %1609, align 1, !range !15
  %1611 = icmp eq i8 %1610, 0
  br i1 %1611, label %1617, label %1612

1612:                                             ; preds = %1603
  %1613 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1608, i64 0, i32 3
  %1614 = load i8, i8* %1613, align 4, !range !15
  %1615 = zext i8 %1614 to i32
  %1616 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1608, i32 %1615) #12
  br label %1617

1617:                                             ; preds = %1612, %1603
  %1618 = phi i32 [ %1616, %1612 ], [ 0, %1603 ]
  %1619 = icmp eq i32 %1618, %1596
  br i1 %1619, label %1623, label %1620

1620:                                             ; preds = %1617
  %1621 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1604, i64 1
  %1622 = icmp eq %"class.std::__1::unique_ptr.40"* %1621, %1601
  br i1 %1622, label %1623, label %1603

1623:                                             ; preds = %1620, %1617, %1595
  %1624 = phi %"class.std::__1::unique_ptr.40"* [ %1599, %1595 ], [ %1601, %1620 ], [ %1604, %1617 ]
  %1625 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1624, i64 1
  %1626 = call fastcc %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch16CreateBasicBlockENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nonnull %54, %"class.std::__1::vector.38"* %1597, %"class.std::__1::unique_ptr.40"* %1625) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #12
  %1627 = load i64, i64* %121, align 8
  %1628 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1626, i64 0, i32 2, i32 0, i32 1
  %1629 = ptrtoint %"class.spvtools::opt::Instruction"* %1628 to i64
  store i64 %1627, i64* %187, align 8
  store %"class.spvtools::opt::BasicBlock"* %1626, %"class.spvtools::opt::BasicBlock"** %188, align 8
  store i64 %1629, i64* %190, align 8
  store i32 3, i32* %191, align 8
  %1630 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %1631 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1630, i64 0, i32 1
  %1632 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1631, align 8
  %1633 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1632, i64 0, i32 1, i32 0, i32 0, i32 0
  %1634 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1633, align 8
  %1635 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1634, i64 0, i32 4
  %1636 = load i8, i8* %1635, align 1, !range !15
  %1637 = icmp eq i8 %1636, 0
  br i1 %1637, label %1643, label %1638

1638:                                             ; preds = %1623
  %1639 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1634, i64 0, i32 3
  %1640 = load i8, i8* %1639, align 4, !range !15
  %1641 = zext i8 %1640 to i32
  %1642 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1634, i32 %1641) #12
  br label %1643

1643:                                             ; preds = %1638, %1623
  %1644 = phi i32 [ %1642, %1638 ], [ 0, %1623 ]
  %1645 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %34, i32 %1644) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #12
  %1646 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1583, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1647 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1646, align 8, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %192) #12
  %1648 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1626, i64 0, i32 1, i32 0, i32 0, i32 0
  %1649 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  %1650 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1649, i64 0, i32 4
  %1651 = load i8, i8* %1650, align 1, !range !15
  %1652 = icmp eq i8 %1651, 0
  br i1 %1652, label %1658, label %1653

1653:                                             ; preds = %1643
  %1654 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1649, i64 0, i32 3
  %1655 = load i8, i8* %1654, align 4, !range !15
  %1656 = zext i8 %1655 to i32
  %1657 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1649, i32 %1656) #12
  br label %1658

1658:                                             ; preds = %1653, %1643
  %1659 = phi i32 [ %1657, %1653 ], [ 0, %1643 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %196, %"struct.std::__1::aligned_storage<4, 4>::type"** %197, align 8
  store i64 0, i64* %199, align 8
  store i64 1, i64* %194, align 8
  store i32 %1659, i32* %200, align 8
  %1660 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1647, i64 0, i32 3
  %1661 = load i8, i8* %1660, align 4, !range !15
  %1662 = icmp eq i8 %1661, 0
  %1663 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1647, i64 0, i32 4
  %1664 = load i8, i8* %1663, align 1, !range !15
  %1665 = icmp eq i8 %1664, 0
  %1666 = select i1 %1665, i64 1, i64 2
  %1667 = xor i1 %1665, true
  %1668 = zext i1 %1667 to i64
  %1669 = select i1 %1662, i64 %1668, i64 %1666
  %1670 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1647, i64 0, i32 6, i32 0, i32 0
  %1671 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1670, align 8
  %1672 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1671, i64 %1669, i32 1
  %1673 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %1672, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %35) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %1674 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %201, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %201, align 8
  %1675 = icmp eq %"class.std::__1::vector.3"* %1674, null
  br i1 %1675, label %1687, label %1676

1676:                                             ; preds = %1658
  %1677 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1674, i64 0, i32 0, i32 0
  %1678 = load i32*, i32** %1677, align 8
  %1679 = icmp eq i32* %1678, null
  br i1 %1679, label %1685, label %1680

1680:                                             ; preds = %1676
  %1681 = ptrtoint i32* %1678 to i64
  %1682 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1674, i64 0, i32 0, i32 1
  %1683 = bitcast i32** %1682 to i64*
  store i64 %1681, i64* %1683, align 8
  %1684 = bitcast i32* %1678 to i8*
  call void @_ZdlPv(i8* %1684) #13
  br label %1685

1685:                                             ; preds = %1680, %1676
  %1686 = bitcast %"class.std::__1::vector.3"* %1674 to i8*
  call void @_ZdlPv(i8* %1686) #13
  br label %1687

1687:                                             ; preds = %1685, %1658
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %192) #12
  %1688 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %119, align 8
  %1689 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1585, align 8
  %1690 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1689, i64 0, i32 4
  %1691 = load i8, i8* %1690, align 1, !range !15
  %1692 = icmp eq i8 %1691, 0
  br i1 %1692, label %1698, label %1693

1693:                                             ; preds = %1687
  %1694 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1689, i64 0, i32 3
  %1695 = load i8, i8* %1694, align 4, !range !15
  %1696 = zext i8 %1695 to i32
  %1697 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1689, i32 %1696) #12
  br label %1698

1698:                                             ; preds = %1693, %1687
  %1699 = phi i32 [ %1697, %1693 ], [ 0, %1687 ]
  %1700 = zext i32 %1699 to i64
  %1701 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1702 = load i64, i64* %1701, align 8
  %1703 = icmp eq i64 %1702, 0
  br i1 %1703, label %1794, label %1704

1704:                                             ; preds = %1698
  %1705 = call i64 @llvm.ctpop.i64(i64 %1702) #12, !range !8
  %1706 = icmp ugt i64 %1705, 1
  br i1 %1706, label %1710, label %1707

1707:                                             ; preds = %1704
  %1708 = add i64 %1702, 4294967295
  %1709 = and i64 %1708, %1700
  br label %1714

1710:                                             ; preds = %1704
  %1711 = icmp ugt i64 %1702, %1700
  br i1 %1711, label %1714, label %1712

1712:                                             ; preds = %1710
  %1713 = urem i64 %1700, %1702
  br label %1714

1714:                                             ; preds = %1712, %1710, %1707
  %1715 = phi i64 [ %1709, %1707 ], [ %1713, %1712 ], [ %1700, %1710 ]
  %1716 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1717 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %1716, align 8
  %1718 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %1717, i64 %1715
  %1719 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %1718, align 8
  %1720 = icmp eq %"struct.std::__1::__hash_node_base.970"* %1719, null
  br i1 %1720, label %1794, label %1721

1721:                                             ; preds = %1714
  %1722 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1719, i64 0, i32 0
  %1723 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %1722, align 8
  %1724 = icmp eq %"struct.std::__1::__hash_node_base.970"* %1723, null
  br i1 %1724, label %1794, label %1725

1725:                                             ; preds = %1721
  %1726 = add i64 %1702, -1
  br label %1727

1727:                                             ; preds = %1748, %1725
  %1728 = phi %"struct.std::__1::__hash_node_base.970"* [ %1723, %1725 ], [ %1750, %1748 ]
  %1729 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1728, i64 1
  %1730 = bitcast %"struct.std::__1::__hash_node_base.970"* %1729 to i64*
  %1731 = load i64, i64* %1730, align 8
  %1732 = icmp eq i64 %1731, %1700
  br i1 %1732, label %1743, label %1733

1733:                                             ; preds = %1727
  br i1 %1706, label %1736, label %1734

1734:                                             ; preds = %1733
  %1735 = and i64 %1731, %1726
  br label %1740

1736:                                             ; preds = %1733
  %1737 = icmp ult i64 %1731, %1702
  br i1 %1737, label %1740, label %1738

1738:                                             ; preds = %1736
  %1739 = urem i64 %1731, %1702
  br label %1740

1740:                                             ; preds = %1738, %1736, %1734
  %1741 = phi i64 [ %1735, %1734 ], [ %1739, %1738 ], [ %1731, %1736 ]
  %1742 = icmp eq i64 %1741, %1715
  br i1 %1742, label %1748, label %1794

1743:                                             ; preds = %1727
  %1744 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1728, i64 2
  %1745 = bitcast %"struct.std::__1::__hash_node_base.970"* %1744 to i32*
  %1746 = load i32, i32* %1745, align 4
  %1747 = icmp eq i32 %1746, %1699
  br i1 %1747, label %1752, label %1748

1748:                                             ; preds = %1743, %1740
  %1749 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1728, i64 0, i32 0
  %1750 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %1749, align 8
  %1751 = icmp eq %"struct.std::__1::__hash_node_base.970"* %1750, null
  br i1 %1751, label %1794, label %1727

1752:                                             ; preds = %1743
  %1753 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1728, i64 3
  %1754 = bitcast %"struct.std::__1::__hash_node_base.970"* %1753 to %"class.spvtools::opt::Loop"**
  %1755 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1754, align 8
  %1756 = icmp eq %"class.spvtools::opt::Loop"* %1755, null
  br i1 %1756, label %1794, label %1757

1757:                                             ; preds = %1752
  %1758 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  %1759 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1758, i64 0, i32 4
  %1760 = load i8, i8* %1759, align 1, !range !15
  %1761 = icmp eq i8 %1760, 0
  br i1 %1761, label %1767, label %1762

1762:                                             ; preds = %1757
  %1763 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1758, i64 0, i32 3
  %1764 = load i8, i8* %1763, align 4, !range !15
  %1765 = zext i8 %1764 to i32
  %1766 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1758, i32 %1765) #12
  br label %1767

1767:                                             ; preds = %1762, %1757
  %1768 = phi i32 [ %1766, %1762 ], [ 0, %1757 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #12
  store i32 %1768, i32* %17, align 4
  br label %1769

1769:                                             ; preds = %1769, %1767
  %1770 = phi %"class.spvtools::opt::Loop"* [ %1774, %1769 ], [ %1755, %1767 ]
  %1771 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1770, i64 0, i32 8, i32 0
  %1772 = call { %"struct.std::__1::__hash_node_base.948"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.944"* %1771, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %17) #12
  %1773 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1770, i64 0, i32 6
  %1774 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1773, align 8
  %1775 = icmp eq %"class.spvtools::opt::Loop"* %1774, null
  br i1 %1775, label %1776, label %1769

1776:                                             ; preds = %1769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %202) #12
  %1777 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %119, align 8
  %1778 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  %1779 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1778, i64 0, i32 4
  %1780 = load i8, i8* %1779, align 1, !range !15
  %1781 = icmp eq i8 %1780, 0
  br i1 %1781, label %1787, label %1782

1782:                                             ; preds = %1776
  %1783 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1778, i64 0, i32 3
  %1784 = load i8, i8* %1783, align 4, !range !15
  %1785 = zext i8 %1784 to i32
  %1786 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1778, i32 %1785) #12
  br label %1787

1787:                                             ; preds = %1782, %1776
  %1788 = phi i32 [ %1786, %1782 ], [ 0, %1776 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #12
  store i32 %1788, i32* %16, align 4
  %1789 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1777, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #12
  store i32* %16, i32** %205, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %206) #12
  %1790 = call { %"struct.std::__1::__hash_node_base.970"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.966"* %1789, i32* nonnull dereferenceable(4) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %15) #12
  %1791 = extractvalue { %"struct.std::__1::__hash_node_base.970"*, i8 } %1790, 0
  %1792 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %1791, i64 3
  %1793 = bitcast %"struct.std::__1::__hash_node_base.970"* %1792 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %206) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #12
  store %"class.spvtools::opt::Loop"* %1755, %"class.spvtools::opt::Loop"** %1793, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #12
  br label %1794

1794:                                             ; preds = %1748, %1740, %1787, %1752, %1721, %1714, %1698
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #12
  store i32 -1431655766, i32* %13, align 4
  %1795 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  %1796 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1795, i64 0, i32 4
  %1797 = load i8, i8* %1796, align 1, !range !15
  %1798 = icmp eq i8 %1797, 0
  br i1 %1798, label %1804, label %1799

1799:                                             ; preds = %1794
  %1800 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1795, i64 0, i32 3
  %1801 = load i8, i8* %1800, align 4, !range !15
  %1802 = zext i8 %1801 to i32
  %1803 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1795, i32 %1802) #12
  br label %1804

1804:                                             ; preds = %1799, %1794
  %1805 = phi i32 [ %1803, %1799 ], [ 0, %1794 ]
  store i32 %1805, i32* %13, align 4
  %1806 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 5, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  store i32* %13, i32** %209, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %210) #12
  %1807 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %1806, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %12) #12
  %1808 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %1807, 0
  %1809 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %1808, i64 3
  %1810 = bitcast %"struct.std::__1::__hash_node_base.333"* %1809 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %210) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  store %"class.spvtools::opt::BasicBlock"* %1626, %"class.spvtools::opt::BasicBlock"** %1810, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %896, %"class.spvtools::opt::BasicBlock"* %1626) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #12
  %1811 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %933, %"class.spvtools::opt::Instruction"* %1811) #12
  %1812 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1585, align 8
  %1813 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1812, i64 0, i32 4
  %1814 = load i8, i8* %1813, align 1, !range !15
  %1815 = icmp eq i8 %1814, 0
  br i1 %1815, label %1821, label %1816

1816:                                             ; preds = %1804
  %1817 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1812, i64 0, i32 3
  %1818 = load i8, i8* %1817, align 4, !range !15
  %1819 = zext i8 %1818 to i32
  %1820 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1812, i32 %1819) #12
  br label %1821

1821:                                             ; preds = %1816, %1804
  %1822 = phi i32 [ %1820, %1816 ], [ 0, %1804 ]
  %1823 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1648, align 8
  %1824 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1823, i64 0, i32 4
  %1825 = load i8, i8* %1824, align 1, !range !15
  %1826 = icmp eq i8 %1825, 0
  br i1 %1826, label %1832, label %1827

1827:                                             ; preds = %1821
  %1828 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1823, i64 0, i32 3
  %1829 = load i8, i8* %1828, align 4, !range !15
  %1830 = zext i8 %1829 to i32
  %1831 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1823, i32 %1830) #12
  br label %1832

1832:                                             ; preds = %1827, %1821
  %1833 = phi i32 [ %1831, %1827 ], [ 0, %1821 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211) #12
  store i32 %1833, i32* %10, align 4
  %1834 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %896, i64 0, i32 4, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #12
  store i32* %10, i32** %213, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %214) #12
  %1835 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %1834, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %9) #12
  %1836 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %1835, 0
  %1837 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1836, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %214) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #12
  %1838 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1836, i64 4
  %1839 = bitcast %"struct.std::__1::__hash_node_base.309"* %1838 to i32**
  %1840 = load i32*, i32** %1839, align 8
  %1841 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %1836, i64 5
  %1842 = bitcast %"struct.std::__1::__hash_node_base.309"* %1841 to i32**
  %1843 = load i32*, i32** %1842, align 8
  %1844 = icmp eq i32* %1840, %1843
  %1845 = ptrtoint i32* %1843 to i64
  br i1 %1844, label %1850, label %1846

1846:                                             ; preds = %1832
  store i32 %1822, i32* %1840, align 4
  %1847 = getelementptr inbounds i32, i32* %1840, i64 1
  %1848 = ptrtoint i32* %1847 to i64
  %1849 = bitcast %"struct.std::__1::__hash_node_base.309"* %1838 to i64*
  store i64 %1848, i64* %1849, align 8
  br label %1906

1850:                                             ; preds = %1832
  %1851 = ptrtoint i32* %1840 to i64
  %1852 = bitcast %"struct.std::__1::__hash_node_base.309"* %1838 to i64*
  %1853 = bitcast %"struct.std::__1::__hash_node_base.309"* %1837 to i64*
  %1854 = load i64, i64* %1853, align 8
  %1855 = sub i64 %1851, %1854
  %1856 = ashr exact i64 %1855, 2
  %1857 = add nsw i64 %1856, 1
  %1858 = icmp ugt i64 %1857, 4611686018427387903
  br i1 %1858, label %1859, label %1861

1859:                                             ; preds = %1850
  %1860 = bitcast %"struct.std::__1::__hash_node_base.309"* %1837 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1860) #14
  unreachable

1861:                                             ; preds = %1850
  %1862 = bitcast %"struct.std::__1::__hash_node_base.309"* %1841 to i64*
  %1863 = sub i64 %1845, %1854
  %1864 = ashr exact i64 %1863, 2
  %1865 = icmp ult i64 %1864, 2305843009213693951
  br i1 %1865, label %1866, label %1874

1866:                                             ; preds = %1861
  %1867 = ashr exact i64 %1863, 1
  %1868 = icmp ult i64 %1867, %1857
  %1869 = select i1 %1868, i64 %1857, i64 %1867
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1879, label %1871

1871:                                             ; preds = %1866
  %1872 = icmp ugt i64 %1869, 4611686018427387903
  br i1 %1872, label %1873, label %1874

1873:                                             ; preds = %1871
  call void @abort() #14
  unreachable

1874:                                             ; preds = %1871, %1861
  %1875 = phi i64 [ %1869, %1871 ], [ 4611686018427387903, %1861 ]
  %1876 = shl i64 %1875, 2
  %1877 = call i8* @_Znwm(i64 %1876) #13
  %1878 = bitcast i8* %1877 to i32*
  br label %1879

1879:                                             ; preds = %1874, %1866
  %1880 = phi i64 [ %1875, %1874 ], [ 0, %1866 ]
  %1881 = phi i32* [ %1878, %1874 ], [ null, %1866 ]
  %1882 = getelementptr inbounds i32, i32* %1881, i64 %1856
  %1883 = getelementptr inbounds i32, i32* %1881, i64 %1880
  %1884 = ptrtoint i32* %1883 to i64
  store i32 %1822, i32* %1882, align 4
  %1885 = getelementptr inbounds i32, i32* %1882, i64 1
  %1886 = ptrtoint i32* %1885 to i64
  %1887 = bitcast %"struct.std::__1::__hash_node_base.309"* %1837 to i32**
  %1888 = load i32*, i32** %1887, align 8
  %1889 = load i64, i64* %1852, align 8
  %1890 = ptrtoint i32* %1888 to i64
  %1891 = sub i64 %1889, %1890
  %1892 = ashr exact i64 %1891, 2
  %1893 = sub nsw i64 0, %1892
  %1894 = getelementptr inbounds i32, i32* %1882, i64 %1893
  %1895 = ptrtoint i32* %1894 to i64
  %1896 = icmp sgt i64 %1891, 0
  br i1 %1896, label %1897, label %1901

1897:                                             ; preds = %1879
  %1898 = bitcast i32* %1894 to i8*
  %1899 = bitcast i32* %1888 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1898, i8* align 4 %1899, i64 %1891, i1 false) #12
  %1900 = load i32*, i32** %1887, align 8
  br label %1901

1901:                                             ; preds = %1897, %1879
  %1902 = phi i32* [ %1888, %1879 ], [ %1900, %1897 ]
  store i64 %1895, i64* %1853, align 8
  store i64 %1886, i64* %1852, align 8
  store i64 %1884, i64* %1862, align 8
  %1903 = icmp eq i32* %1902, null
  br i1 %1903, label %1906, label %1904

1904:                                             ; preds = %1901
  %1905 = bitcast i32* %1902 to i8*
  call void @_ZdlPv(i8* %1905) #13
  br label %1906

1906:                                             ; preds = %1904, %1901, %1846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211) #12
  %1907 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %1908 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1907, i64 0, i32 1
  %1909 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1908, align 8
  %1910 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1909, i64 0, i32 1, i32 0, i32 0, i32 0
  %1911 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1910, align 8
  %1912 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1911, i64 0, i32 4
  %1913 = load i8, i8* %1912, align 1, !range !15
  %1914 = icmp eq i8 %1913, 0
  br i1 %1914, label %1920, label %1915

1915:                                             ; preds = %1906
  %1916 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1911, i64 0, i32 3
  %1917 = load i8, i8* %1916, align 4, !range !15
  %1918 = zext i8 %1917 to i32
  %1919 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1911, i32 %1918) #12
  br label %1920

1920:                                             ; preds = %1915, %1906
  %1921 = phi i32 [ %1919, %1915 ], [ 0, %1906 ]
  call void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"* %896, i32 %1921) #12
  %1922 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %1923 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1922, i64 0, i32 1
  %1924 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1923, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %215) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E0_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %216, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE0_FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %217, align 8
  store %"class.spvtools::opt::BasicBlock"* %1626, %"class.spvtools::opt::BasicBlock"** %218, align 8
  store %"class.spvtools::opt::BasicBlock"* %1583, %"class.spvtools::opt::BasicBlock"** %220, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %223, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %224, align 8
  store i64 %222, i64* %225, align 8
  %1925 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1924, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %1926 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1925, align 8
  %1927 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1926, i64 0, i32 0, i32 3
  %1928 = load i8, i8* %1927, align 8, !range !15
  %1929 = icmp ne i8 %1928, 0
  %1930 = icmp eq %"class.spvtools::opt::Instruction"* %1926, null
  %1931 = or i1 %1930, %1929
  br i1 %1931, label %1950, label %1932

1932:                                             ; preds = %1920, %1941
  %1933 = phi %"class.spvtools::opt::Instruction"* [ %1945, %1941 ], [ %1926, %1920 ]
  %1934 = icmp eq %"class.spvtools::opt::Instruction"* %1933, null
  br i1 %1934, label %1948, label %1935

1935:                                             ; preds = %1932
  %1936 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1933, i64 0, i32 0, i32 1
  %1937 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1936, align 8
  %1938 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1933, i64 0, i32 2
  %1939 = load i32, i32* %1938, align 8
  %1940 = icmp eq i32 %1939, 245
  br i1 %1940, label %1941, label %1948

1941:                                             ; preds = %1935
  %1942 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1937, i64 0, i32 0, i32 3
  %1943 = load i8, i8* %1942, align 8, !range !15
  %1944 = icmp eq i8 %1943, 0
  %1945 = select i1 %1944, %"class.spvtools::opt::Instruction"* %1937, %"class.spvtools::opt::Instruction"* null
  %1946 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %223, align 8
  %1947 = call zeroext i1 %1946(%"union.std::__1::__function::__policy_storage"* nonnull %226, %"class.spvtools::opt::Instruction"* nonnull %1933) #12
  br i1 %1947, label %1932, label %1948

1948:                                             ; preds = %1941, %1935, %1932
  %1949 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %224, align 8
  br label %1950

1950:                                             ; preds = %1948, %1920
  %1951 = phi %"struct.std::__1::__function::__policy"* [ %1949, %1948 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %1920 ]
  %1952 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1951, i64 0, i32 1
  %1953 = load void (i8*)*, void (i8*)** %1952, align 8
  %1954 = icmp eq void (i8*)* %1953, null
  br i1 %1954, label %1957, label %1955

1955:                                             ; preds = %1950
  %1956 = load i8*, i8** %227, align 8
  call void %1953(i8* %1956) #12
  br label %1957

1957:                                             ; preds = %1955, %1950
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #12
  %1958 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %217, align 8
  %1959 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1958, i64 0, i32 1
  %1960 = load void (i8*)*, void (i8*)** %1959, align 8
  %1961 = icmp eq void (i8*)* %1960, null
  br i1 %1961, label %1964, label %1962

1962:                                             ; preds = %1957
  %1963 = load i8*, i8** %228, align 8
  call void %1960(i8* %1963) #12
  br label %1964

1964:                                             ; preds = %1962, %1957
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %215) #12
  %1965 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1965, %"class.spvtools::opt::BasicBlock"* %1626) #12
  %1966 = call %"struct.spvtools::opt::DominatorTreeNode"* @_ZN8spvtools3opt13DominatorTree15GetOrInsertNodeEPNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %899, %"class.spvtools::opt::BasicBlock"* %1626) #12
  %1967 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %1966 to i64
  %1968 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1585, align 8
  %1969 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1968, i64 0, i32 4
  %1970 = load i8, i8* %1969, align 1, !range !15
  %1971 = icmp eq i8 %1970, 0
  br i1 %1971, label %1977, label %1972

1972:                                             ; preds = %1964
  %1973 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1968, i64 0, i32 3
  %1974 = load i8, i8* %1973, align 4, !range !15
  %1975 = zext i8 %1974 to i32
  %1976 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1968, i32 %1975) #12
  br label %1977

1977:                                             ; preds = %1972, %1964
  %1978 = phi i32 [ %1976, %1972 ], [ 0, %1964 ]
  %1979 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %898, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %1980 = bitcast %"class.std::__1::__tree_end_node"* %1979 to %"class.std::__1::__tree_node.1320"**
  %1981 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %1980, align 8
  %1982 = icmp eq %"class.std::__1::__tree_node.1320"* %1981, null
  br i1 %1982, label %2007, label %1983

1983:                                             ; preds = %1977, %1983
  %1984 = phi %"class.std::__1::__tree_end_node"* [ %1994, %1983 ], [ %1979, %1977 ]
  %1985 = phi %"class.std::__1::__tree_node.1320"* [ %1995, %1983 ], [ %1981, %1977 ]
  %1986 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %1985, i64 0, i32 1, i32 0, i32 0
  %1987 = load i32, i32* %1986, align 4
  %1988 = icmp ult i32 %1987, %1978
  %1989 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %1985, i64 0, i32 0, i32 1
  %1990 = bitcast %"class.std::__1::__tree_node_base"** %1989 to %"class.std::__1::__tree_node.1320"**
  %1991 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %1985, i64 0, i32 0, i32 0
  %1992 = bitcast %"class.std::__1::__tree_node.1320"* %1985 to %"class.std::__1::__tree_node.1320"**
  %1993 = select i1 %1988, %"class.std::__1::__tree_node.1320"** %1990, %"class.std::__1::__tree_node.1320"** %1992
  %1994 = select i1 %1988, %"class.std::__1::__tree_end_node"* %1984, %"class.std::__1::__tree_end_node"* %1991
  %1995 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %1993, align 8
  %1996 = icmp eq %"class.std::__1::__tree_node.1320"* %1995, null
  br i1 %1996, label %1997, label %1983

1997:                                             ; preds = %1983
  %1998 = icmp eq %"class.std::__1::__tree_end_node"* %1994, %1979
  br i1 %1998, label %2007, label %1999

1999:                                             ; preds = %1997
  %2000 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1994, i64 4
  %2001 = bitcast %"class.std::__1::__tree_end_node"* %2000 to i32*
  %2002 = load i32, i32* %2001, align 4
  %2003 = icmp ugt i32 %2002, %1978
  br i1 %2003, label %2007, label %2004

2004:                                             ; preds = %1999
  %2005 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1994, i64 5
  %2006 = bitcast %"class.std::__1::__tree_end_node"* %2005 to %"struct.spvtools::opt::DominatorTreeNode"*
  br label %2007

2007:                                             ; preds = %2004, %1999, %1997, %1977
  %2008 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %2006, %2004 ], [ null, %1977 ], [ null, %1997 ], [ null, %1999 ]
  %2009 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1966, i64 0, i32 1
  store %"struct.spvtools::opt::DominatorTreeNode"* %2008, %"struct.spvtools::opt::DominatorTreeNode"** %2009, align 8
  %2010 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1966, i64 0, i32 2
  %2011 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %2008, i64 0, i32 2
  %2012 = getelementptr inbounds %"class.std::__1::vector.1056", %"class.std::__1::vector.1056"* %2011, i64 0, i32 0, i32 0
  %2013 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2012, align 8
  %2014 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1966, i64 0, i32 2, i32 0, i32 1
  %2015 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2014, align 8
  %2016 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1966, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %2017 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2016, align 8
  %2018 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %2015, %2017
  %2019 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2017 to i64
  br i1 %2018, label %2027, label %2020

2020:                                             ; preds = %2007
  %2021 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2013 to i64*
  %2022 = load i64, i64* %2021, align 8
  %2023 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2015 to i64*
  store i64 %2022, i64* %2023, align 8
  %2024 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2015, i64 1
  %2025 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2024 to i64
  %2026 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %2014 to i64*
  store i64 %2025, i64* %2026, align 8
  br label %2086

2027:                                             ; preds = %2007
  %2028 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2015 to i64
  %2029 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %2014 to i64*
  %2030 = bitcast %"class.std::__1::vector.1056"* %2010 to i64*
  %2031 = load i64, i64* %2030, align 8
  %2032 = sub i64 %2028, %2031
  %2033 = ashr exact i64 %2032, 3
  %2034 = add nsw i64 %2033, 1
  %2035 = icmp ugt i64 %2034, 2305843009213693951
  br i1 %2035, label %2036, label %2038

2036:                                             ; preds = %2027
  %2037 = bitcast %"class.std::__1::vector.1056"* %2010 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2037) #14
  unreachable

2038:                                             ; preds = %2027
  %2039 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %2016 to i64*
  %2040 = sub i64 %2019, %2031
  %2041 = ashr exact i64 %2040, 3
  %2042 = icmp ult i64 %2041, 1152921504606846975
  br i1 %2042, label %2043, label %2051

2043:                                             ; preds = %2038
  %2044 = ashr exact i64 %2040, 2
  %2045 = icmp ult i64 %2044, %2034
  %2046 = select i1 %2045, i64 %2034, i64 %2044
  %2047 = icmp eq i64 %2046, 0
  br i1 %2047, label %2056, label %2048

2048:                                             ; preds = %2043
  %2049 = icmp ugt i64 %2046, 2305843009213693951
  br i1 %2049, label %2050, label %2051

2050:                                             ; preds = %2048
  call void @abort() #14
  unreachable

2051:                                             ; preds = %2048, %2038
  %2052 = phi i64 [ %2046, %2048 ], [ 2305843009213693951, %2038 ]
  %2053 = shl i64 %2052, 3
  %2054 = call i8* @_Znwm(i64 %2053) #13
  %2055 = bitcast i8* %2054 to %"struct.spvtools::opt::DominatorTreeNode"**
  br label %2056

2056:                                             ; preds = %2051, %2043
  %2057 = phi i64 [ %2052, %2051 ], [ 0, %2043 ]
  %2058 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %2055, %2051 ], [ null, %2043 ]
  %2059 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2058, i64 %2033
  %2060 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2058, i64 %2057
  %2061 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2060 to i64
  %2062 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2013 to i64*
  %2063 = load i64, i64* %2062, align 8
  %2064 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2059 to i64*
  store i64 %2063, i64* %2064, align 8
  %2065 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2059, i64 1
  %2066 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2065 to i64
  %2067 = getelementptr inbounds %"class.std::__1::vector.1056", %"class.std::__1::vector.1056"* %2010, i64 0, i32 0, i32 0
  %2068 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2067, align 8
  %2069 = load i64, i64* %2029, align 8
  %2070 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2068 to i64
  %2071 = sub i64 %2069, %2070
  %2072 = ashr exact i64 %2071, 3
  %2073 = sub nsw i64 0, %2072
  %2074 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2059, i64 %2073
  %2075 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2074 to i64
  %2076 = icmp sgt i64 %2071, 0
  br i1 %2076, label %2077, label %2081

2077:                                             ; preds = %2056
  %2078 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2074 to i8*
  %2079 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2068 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2078, i8* align 8 %2079, i64 %2071, i1 false) #12
  %2080 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2067, align 8
  br label %2081

2081:                                             ; preds = %2077, %2056
  %2082 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %2068, %2056 ], [ %2080, %2077 ]
  store i64 %2075, i64* %2030, align 8
  store i64 %2066, i64* %2029, align 8
  store i64 %2061, i64* %2039, align 8
  %2083 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %2082, null
  br i1 %2083, label %2086, label %2084

2084:                                             ; preds = %2081
  %2085 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2082 to i8*
  call void @_ZdlPv(i8* %2085) #13
  br label %2086

2086:                                             ; preds = %2084, %2081, %2020
  %2087 = bitcast %"class.std::__1::vector.1056"* %2011 to i64*
  %2088 = load i64, i64* %2087, align 8
  %2089 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %2008, i64 0, i32 2, i32 0, i32 1
  %2090 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %2089 to i64*
  store i64 %2088, i64* %2090, align 8
  %2091 = inttoptr i64 %2088 to %"struct.spvtools::opt::DominatorTreeNode"**
  %2092 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %2008, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %2093 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2092, align 8
  %2094 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %2093, %2091
  br i1 %2094, label %2099, label %2095

2095:                                             ; preds = %2086
  %2096 = inttoptr i64 %2088 to i64*
  store i64 %1967, i64* %2096, align 8
  %2097 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2091, i64 1
  %2098 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2097 to i64
  store i64 %2098, i64* %2090, align 8
  br label %2124

2099:                                             ; preds = %2086
  %2100 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %2092 to i64*
  %2101 = call i8* @_Znwm(i64 8) #13
  %2102 = bitcast i8* %2101 to %"struct.spvtools::opt::DominatorTreeNode"**
  %2103 = getelementptr inbounds i8, i8* %2101, i64 8
  %2104 = ptrtoint i8* %2103 to i64
  %2105 = bitcast i8* %2101 to i64*
  store i64 %1967, i64* %2105, align 8
  %2106 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2012, align 8
  %2107 = load i64, i64* %2090, align 8
  %2108 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2106 to i64
  %2109 = sub i64 %2107, %2108
  %2110 = ashr exact i64 %2109, 3
  %2111 = sub nsw i64 0, %2110
  %2112 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2102, i64 %2111
  %2113 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %2112 to i64
  %2114 = icmp sgt i64 %2109, 0
  br i1 %2114, label %2115, label %2119

2115:                                             ; preds = %2099
  %2116 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2112 to i8*
  %2117 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2116, i8* align 8 %2117, i64 %2109, i1 false) #12
  %2118 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %2012, align 8
  br label %2119

2119:                                             ; preds = %2115, %2099
  %2120 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %2106, %2099 ], [ %2118, %2115 ]
  store i64 %2113, i64* %2087, align 8
  store i64 %2104, i64* %2090, align 8
  store i64 %2104, i64* %2100, align 8
  %2121 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %2120, null
  br i1 %2121, label %2124, label %2122

2122:                                             ; preds = %2119
  %2123 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %2120 to i8*
  call void @_ZdlPv(i8* %2123) #13
  br label %2124

2124:                                             ; preds = %2122, %2119, %2095
  call void @_ZN8spvtools3opt13DominatorTree16ResetDFNumberingEv(%"class.spvtools::opt::DominatorTree"* %899) #12
  %2125 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %2125, %"class.std::__1::vector.1037"* %126, i1 zeroext true, i1 zeroext true) #12
  %2126 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %122, align 8
  %2127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2126, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %2128 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2127, align 8, !noalias !31
  %2129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 2
  %2130 = load i32, i32* %2129, align 8
  %2131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 6, i32 0, i32 0
  %2132 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %2131, align 8
  %2133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2132, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %2134 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2133, align 8
  %2135 = icmp eq %"class.std::__1::vector.3"* %2134, null
  %2136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2134, i64 0, i32 0, i32 0
  %2137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2132, i64 0, i32 1, i32 2
  %2138 = select i1 %2135, i32** %2137, i32** %2136
  %2139 = load i32*, i32** %2138, align 8
  %2140 = load i32, i32* %2139, align 4
  %2141 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %933, i32 %2140) #12
  %2142 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %2143 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2142, i64 0, i32 11
  %2144 = load i32, i32* %2143, align 8
  %2145 = and i32 %2144, 16384
  %2146 = icmp eq i32 %2145, 0
  br i1 %2146, label %2147, label %2164

2147:                                             ; preds = %2124
  %2148 = call i8* @_Znwm(i64 136) #13
  %2149 = bitcast i8* %2148 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %2149, %"class.spvtools::opt::IRContext"* %2142) #12
  %2150 = ptrtoint i8* %2148 to i64
  %2151 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2142, i64 0, i32 19
  %2152 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %2151, i64 0, i32 0, i32 0, i32 0
  %2153 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %2152, align 8
  %2154 = bitcast %"class.std::__1::unique_ptr.400"* %2151 to i64*
  store i64 %2150, i64* %2154, align 8
  %2155 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %2153, null
  br i1 %2155, label %2158, label %2156

2156:                                             ; preds = %2147
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %2153) #12
  %2157 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %2153 to i8*
  call void @_ZdlPv(i8* %2157) #13
  br label %2158

2158:                                             ; preds = %2156, %2147
  %2159 = load i32, i32* %2143, align 8
  %2160 = or i32 %2159, 16384
  store i32 %2160, i32* %2143, align 8
  %2161 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %2162 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2161, i64 0, i32 11
  %2163 = load i32, i32* %2162, align 8
  br label %2164

2164:                                             ; preds = %2158, %2124
  %2165 = phi i32 [ %2144, %2124 ], [ %2163, %2158 ]
  %2166 = phi %"class.spvtools::opt::IRContext"* [ %2142, %2124 ], [ %2161, %2158 ]
  %2167 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2142, i64 0, i32 19, i32 0, i32 0, i32 0
  %2168 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %2167, align 8
  %2169 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2166, i64 0, i32 11
  %2170 = trunc i32 %2165 to i16
  %2171 = icmp slt i16 %2170, 0
  br i1 %2171, label %2187, label %2172

2172:                                             ; preds = %2164
  %2173 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2166, i64 0, i32 5
  %2174 = call i8* @_Znwm(i64 240) #13
  %2175 = bitcast i8* %2174 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %2175, %"class.std::__1::function"* dereferenceable(32) %2173, %"class.spvtools::opt::IRContext"* %2166) #12
  %2176 = ptrtoint i8* %2174 to i64
  %2177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2166, i64 0, i32 20
  %2178 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %2177, i64 0, i32 0, i32 0, i32 0
  %2179 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %2178, align 8
  %2180 = bitcast %"class.std::__1::unique_ptr.480"* %2177 to i64*
  store i64 %2176, i64* %2180, align 8
  %2181 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %2179, null
  br i1 %2181, label %2184, label %2182

2182:                                             ; preds = %2172
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %2179) #12
  %2183 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %2179 to i8*
  call void @_ZdlPv(i8* %2183) #13
  br label %2184

2184:                                             ; preds = %2182, %2172
  %2185 = load i32, i32* %2169, align 8
  %2186 = or i32 %2185, 32768
  store i32 %2186, i32* %2169, align 8
  br label %2187

2187:                                             ; preds = %2184, %2164
  %2188 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2166, i64 0, i32 20, i32 0, i32 0, i32 0
  %2189 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %2188, align 8
  %2190 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2141, i64 0, i32 3
  %2191 = load i8, i8* %2190, align 4, !range !15
  %2192 = icmp eq i8 %2191, 0
  br i1 %2192, label %2195, label %2193

2193:                                             ; preds = %2187
  %2194 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2141, i32 0) #12
  br label %2195

2195:                                             ; preds = %2193, %2187
  %2196 = phi i32 [ %2194, %2193 ], [ 0, %2187 ]
  %2197 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %2189, i32 %2196) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %229, i8 0, i64 24, i1 false) #12
  %2198 = icmp eq i32 %2130, 250
  br i1 %2198, label %2199, label %2280

2199:                                             ; preds = %2195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #12
  %2200 = call i8* @_Znwm(i64 4) #13
  store i8* %2200, i8** %252, align 8
  %2201 = getelementptr inbounds i8, i8* %2200, i64 4
  store i8* %2201, i8** %254, align 8
  %2202 = bitcast i8* %2200 to i32*
  store i32 0, i32* %2202, align 4
  %2203 = ptrtoint i8* %2201 to i64
  store i64 %2203, i64* %255, align 8
  %2204 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Type"* %2197, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %38) #12
  %2205 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Constant"* %2204, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #12
  %2206 = ptrtoint %"class.spvtools::opt::Instruction"* %2205 to i64
  %2207 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %231, align 8
  %2208 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %232, align 8
  %2209 = icmp ult %"struct.std::__1::pair.1191"* %2207, %2208
  %2210 = ptrtoint %"struct.std::__1::pair.1191"* %2208 to i64
  br i1 %2209, label %2211, label %2216

2211:                                             ; preds = %2199
  %2212 = bitcast %"struct.std::__1::pair.1191"* %2207 to i64*
  store i64 %2206, i64* %2212, align 8
  %2213 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2207, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2213, align 8
  %2214 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2207, i64 1
  %2215 = ptrtoint %"struct.std::__1::pair.1191"* %2214 to i64
  store i64 %2215, i64* %247, align 8
  br label %2261

2216:                                             ; preds = %2199
  %2217 = ptrtoint %"struct.std::__1::pair.1191"* %2207 to i64
  %2218 = load i64, i64* %248, align 8
  %2219 = sub i64 %2217, %2218
  %2220 = ashr exact i64 %2219, 4
  %2221 = add nsw i64 %2220, 1
  %2222 = icmp ugt i64 %2221, 1152921504606846975
  br i1 %2222, label %2223, label %2225

2223:                                             ; preds = %2216
  %2224 = bitcast %"class.std::__1::vector.1189"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2224) #14
  unreachable

2225:                                             ; preds = %2216
  %2226 = sub i64 %2210, %2218
  %2227 = ashr exact i64 %2226, 4
  %2228 = icmp ult i64 %2227, 576460752303423487
  br i1 %2228, label %2229, label %2237

2229:                                             ; preds = %2225
  %2230 = ashr exact i64 %2226, 3
  %2231 = icmp ult i64 %2230, %2221
  %2232 = select i1 %2231, i64 %2221, i64 %2230
  %2233 = icmp eq i64 %2232, 0
  br i1 %2233, label %2242, label %2234

2234:                                             ; preds = %2229
  %2235 = icmp ugt i64 %2232, 1152921504606846975
  br i1 %2235, label %2236, label %2237

2236:                                             ; preds = %2234
  call void @abort() #14
  unreachable

2237:                                             ; preds = %2234, %2225
  %2238 = phi i64 [ %2232, %2234 ], [ 1152921504606846975, %2225 ]
  %2239 = shl i64 %2238, 4
  %2240 = call i8* @_Znwm(i64 %2239) #13
  %2241 = bitcast i8* %2240 to %"struct.std::__1::pair.1191"*
  br label %2242

2242:                                             ; preds = %2237, %2229
  %2243 = phi i64 [ %2238, %2237 ], [ 0, %2229 ]
  %2244 = phi i8* [ %2240, %2237 ], [ null, %2229 ]
  %2245 = phi %"struct.std::__1::pair.1191"* [ %2241, %2237 ], [ null, %2229 ]
  %2246 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2245, i64 %2220
  %2247 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2245, i64 %2243
  %2248 = ptrtoint %"struct.std::__1::pair.1191"* %2247 to i64
  %2249 = bitcast %"struct.std::__1::pair.1191"* %2246 to i64*
  store i64 %2206, i64* %2249, align 8
  %2250 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2245, i64 %2220, i32 1
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2250, align 8
  %2251 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2246, i64 1
  %2252 = ptrtoint %"struct.std::__1::pair.1191"* %2251 to i64
  %2253 = ptrtoint %"struct.std::__1::pair.1191"* %2245 to i64
  %2254 = icmp sgt i64 %2219, 0
  br i1 %2254, label %2255, label %2257

2255:                                             ; preds = %2242
  %2256 = inttoptr i64 %2218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2244, i8* align 8 %2256, i64 %2219, i1 false) #12
  br label %2257

2257:                                             ; preds = %2255, %2242
  store i64 %2253, i64* %248, align 8
  store i64 %2252, i64* %247, align 8
  store i64 %2248, i64* %249, align 8
  %2258 = icmp eq i64 %2218, 0
  br i1 %2258, label %2261, label %2259

2259:                                             ; preds = %2257
  %2260 = inttoptr i64 %2218 to i8*
  call void @_ZdlPv(i8* %2260) #13
  br label %2261

2261:                                             ; preds = %2259, %2257, %2211
  %2262 = load i32*, i32** %256, align 8
  %2263 = icmp eq i32* %2262, null
  br i1 %2263, label %2267, label %2264

2264:                                             ; preds = %2261
  %2265 = ptrtoint i32* %2262 to i64
  store i64 %2265, i64* %255, align 8
  %2266 = bitcast i32* %2262 to i8*
  call void @_ZdlPv(i8* %2266) #13
  br label %2267

2267:                                             ; preds = %2264, %2261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #12
  %2268 = call i8* @_Znwm(i64 4) #13
  store i8* %2268, i8** %259, align 8
  %2269 = getelementptr inbounds i8, i8* %2268, i64 4
  store i8* %2269, i8** %261, align 8
  %2270 = bitcast i8* %2268 to i32*
  store i32 1, i32* %2270, align 4
  %2271 = ptrtoint i8* %2269 to i64
  store i64 %2271, i64* %262, align 8
  %2272 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Type"* %2197, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %39) #12
  %2273 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Constant"* %2272, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #12
  %2274 = load i32*, i32** %263, align 8
  %2275 = icmp eq i32* %2274, null
  br i1 %2275, label %2279, label %2276

2276:                                             ; preds = %2267
  %2277 = ptrtoint i32* %2274 to i64
  store i64 %2277, i64* %262, align 8
  %2278 = bitcast i32* %2274 to i8*
  call void @_ZdlPv(i8* %2278) #13
  br label %2279

2279:                                             ; preds = %2276, %2267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #12
  br label %2540

2280:                                             ; preds = %2195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 0, i64 24, i1 false) #12
  %2281 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 6
  %2282 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 6, i32 0, i32 1
  %2283 = bitcast %"struct.spvtools::opt::Operand"** %2282 to i64*
  %2284 = bitcast %"class.std::__1::vector"* %2281 to i64*
  %2285 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 3
  %2286 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2128, i64 0, i32 4
  br label %2287

2287:                                             ; preds = %2372, %2280
  %2288 = phi i64 [ 0, %2280 ], [ %2373, %2372 ]
  %2289 = phi i32* [ null, %2280 ], [ %2374, %2372 ]
  %2290 = phi i32 [ 2, %2280 ], [ %2375, %2372 ]
  %2291 = load i64, i64* %2283, align 8
  %2292 = load i64, i64* %2284, align 8
  %2293 = sub i64 %2291, %2292
  %2294 = sdiv exact i64 %2293, 48
  %2295 = load i8, i8* %2285, align 4, !range !15
  %2296 = icmp eq i8 %2295, 0
  %2297 = load i8, i8* %2286, align 1, !range !15
  %2298 = icmp eq i8 %2297, 0
  %2299 = select i1 %2298, i32 1, i32 2
  %2300 = xor i1 %2298, true
  %2301 = zext i1 %2300 to i32
  %2302 = select i1 %2296, i32 %2301, i32 %2299
  %2303 = trunc i64 %2294 to i32
  %2304 = sub i32 %2303, %2302
  %2305 = icmp ult i32 %2290, %2304
  br i1 %2305, label %2316, label %2306

2306:                                             ; preds = %2287
  %2307 = load i32*, i32** %234, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %240) #12
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %2307, i32* %2289, %"struct.std::__1::__less.1343"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %240) #12
  %2308 = load i64, i64* %237, align 8
  %2309 = load i64, i64* %238, align 8
  %2310 = sub i64 %2308, %2309
  %2311 = ashr exact i64 %2310, 2
  %2312 = icmp ult i64 %2311, 4294967295
  %2313 = icmp ne i64 %2310, 0
  %2314 = and i1 %2313, %2312
  %2315 = inttoptr i64 %2309 to i32*
  br i1 %2314, label %2376, label %2386

2316:                                             ; preds = %2287
  %2317 = add i32 %2302, %2290
  %2318 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2128, i32 %2317) #12
  %2319 = load i32*, i32** %236, align 8
  %2320 = icmp ult i32* %2289, %2319
  %2321 = ptrtoint i32* %2319 to i64
  br i1 %2320, label %2322, label %2325

2322:                                             ; preds = %2316
  store i32 %2318, i32* %2289, align 4
  %2323 = getelementptr inbounds i32, i32* %2289, i64 1
  %2324 = ptrtoint i32* %2323 to i64
  store i64 %2324, i64* %237, align 8
  br label %2372

2325:                                             ; preds = %2316
  %2326 = ptrtoint i32* %2289 to i64
  %2327 = load i64, i64* %238, align 8
  %2328 = sub i64 %2326, %2327
  %2329 = ashr exact i64 %2328, 2
  %2330 = add nsw i64 %2329, 1
  %2331 = icmp ugt i64 %2330, 4611686018427387903
  br i1 %2331, label %2332, label %2334

2332:                                             ; preds = %2325
  %2333 = bitcast %"class.std::__1::vector.3"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2333) #14
  unreachable

2334:                                             ; preds = %2325
  %2335 = sub i64 %2321, %2327
  %2336 = ashr exact i64 %2335, 2
  %2337 = icmp ult i64 %2336, 2305843009213693951
  br i1 %2337, label %2338, label %2346

2338:                                             ; preds = %2334
  %2339 = ashr exact i64 %2335, 1
  %2340 = icmp ult i64 %2339, %2330
  %2341 = select i1 %2340, i64 %2330, i64 %2339
  %2342 = icmp eq i64 %2341, 0
  br i1 %2342, label %2351, label %2343

2343:                                             ; preds = %2338
  %2344 = icmp ugt i64 %2341, 4611686018427387903
  br i1 %2344, label %2345, label %2346

2345:                                             ; preds = %2343
  call void @abort() #14
  unreachable

2346:                                             ; preds = %2343, %2334
  %2347 = phi i64 [ %2341, %2343 ], [ 4611686018427387903, %2334 ]
  %2348 = shl i64 %2347, 2
  %2349 = call i8* @_Znwm(i64 %2348) #13
  %2350 = bitcast i8* %2349 to i32*
  br label %2351

2351:                                             ; preds = %2346, %2338
  %2352 = phi i64 [ %2347, %2346 ], [ 0, %2338 ]
  %2353 = phi i32* [ %2350, %2346 ], [ null, %2338 ]
  %2354 = getelementptr inbounds i32, i32* %2353, i64 %2329
  %2355 = getelementptr inbounds i32, i32* %2353, i64 %2352
  %2356 = ptrtoint i32* %2355 to i64
  store i32 %2318, i32* %2354, align 4
  %2357 = getelementptr inbounds i32, i32* %2354, i64 1
  %2358 = ptrtoint i32* %2357 to i64
  %2359 = sub i64 %2288, %2327
  %2360 = ashr exact i64 %2359, 2
  %2361 = sub nsw i64 0, %2360
  %2362 = getelementptr inbounds i32, i32* %2354, i64 %2361
  %2363 = ptrtoint i32* %2362 to i64
  %2364 = icmp sgt i64 %2359, 0
  br i1 %2364, label %2365, label %2368

2365:                                             ; preds = %2351
  %2366 = bitcast i32* %2362 to i8*
  %2367 = inttoptr i64 %2327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2366, i8* align 4 %2367, i64 %2359, i1 false) #12
  br label %2368

2368:                                             ; preds = %2365, %2351
  store i64 %2363, i64* %238, align 8
  store i64 %2358, i64* %237, align 8
  store i64 %2356, i64* %239, align 8
  %2369 = icmp eq i64 %2327, 0
  br i1 %2369, label %2372, label %2370

2370:                                             ; preds = %2368
  %2371 = inttoptr i64 %2327 to i8*
  call void @_ZdlPv(i8* %2371) #13
  br label %2372

2372:                                             ; preds = %2370, %2368, %2322
  %2373 = phi i64 [ %2324, %2322 ], [ %2358, %2368 ], [ %2358, %2370 ]
  %2374 = phi i32* [ %2323, %2322 ], [ %2357, %2368 ], [ %2357, %2370 ]
  %2375 = add i32 %2290, 2
  br label %2287

2376:                                             ; preds = %2306, %2382
  %2377 = phi i64 [ %2384, %2382 ], [ 0, %2306 ]
  %2378 = phi i32 [ %2383, %2382 ], [ 0, %2306 ]
  %2379 = getelementptr inbounds i32, i32* %2315, i64 %2377
  %2380 = load i32, i32* %2379, align 4
  %2381 = icmp eq i32 %2380, %2378
  br i1 %2381, label %2382, label %2386

2382:                                             ; preds = %2376
  %2383 = add i32 %2378, 1
  %2384 = zext i32 %2383 to i64
  %2385 = icmp ugt i64 %2311, %2384
  br i1 %2385, label %2376, label %2386

2386:                                             ; preds = %2382, %2376, %2306
  %2387 = phi i32 [ 0, %2306 ], [ %2383, %2382 ], [ %2378, %2376 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 -86, i64 32, i1 false) #12
  %2388 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %2389 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2388, i64 0, i32 11
  %2390 = load i32, i32* %2389, align 8
  %2391 = and i32 %2390, 2
  %2392 = icmp eq i32 %2391, 0
  br i1 %2392, label %2393, label %2394

2393:                                             ; preds = %2386
  call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %2388) #12
  br label %2394

2394:                                             ; preds = %2393, %2386
  %2395 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2388, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %2396 = load i64, i64* %2395, align 8
  %2397 = icmp eq i64 %2396, 0
  br i1 %2397, label %2450, label %2398

2398:                                             ; preds = %2394
  %2399 = call i64 @llvm.ctpop.i64(i64 %2396) #12, !range !8
  %2400 = icmp ugt i64 %2399, 1
  br i1 %2400, label %2404, label %2401

2401:                                             ; preds = %2398
  %2402 = add i64 %2396, -1
  %2403 = and i64 %2402, -2900209833538066566
  br label %2408

2404:                                             ; preds = %2398
  %2405 = icmp ugt i64 %2396, -2900209833538066566
  br i1 %2405, label %2408, label %2406

2406:                                             ; preds = %2404
  %2407 = urem i64 -2900209833538066566, %2396
  br label %2408

2408:                                             ; preds = %2406, %2404, %2401
  %2409 = phi i64 [ %2403, %2401 ], [ %2407, %2406 ], [ -2900209833538066566, %2404 ]
  %2410 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2388, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %2411 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %2410, align 8
  %2412 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %2411, i64 %2409
  %2413 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %2412, align 8
  %2414 = icmp eq %"struct.std::__1::__hash_node_base.178"* %2413, null
  br i1 %2414, label %2450, label %2415

2415:                                             ; preds = %2408
  %2416 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %2413, i64 0, i32 0
  %2417 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %2416, align 8
  %2418 = icmp eq %"struct.std::__1::__hash_node_base.178"* %2417, null
  br i1 %2418, label %2450, label %2419

2419:                                             ; preds = %2415
  %2420 = add i64 %2396, -1
  br label %2421

2421:                                             ; preds = %2442, %2419
  %2422 = phi %"struct.std::__1::__hash_node_base.178"* [ %2417, %2419 ], [ %2444, %2442 ]
  %2423 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %2422, i64 1
  %2424 = bitcast %"struct.std::__1::__hash_node_base.178"* %2423 to i64*
  %2425 = load i64, i64* %2424, align 8
  %2426 = icmp eq i64 %2425, -2900209833538066566
  br i1 %2426, label %2437, label %2427

2427:                                             ; preds = %2421
  br i1 %2400, label %2430, label %2428

2428:                                             ; preds = %2427
  %2429 = and i64 %2425, %2420
  br label %2434

2430:                                             ; preds = %2427
  %2431 = icmp ult i64 %2425, %2396
  br i1 %2431, label %2434, label %2432

2432:                                             ; preds = %2430
  %2433 = urem i64 %2425, %2396
  br label %2434

2434:                                             ; preds = %2432, %2430, %2428
  %2435 = phi i64 [ %2429, %2428 ], [ %2433, %2432 ], [ %2425, %2430 ]
  %2436 = icmp eq i64 %2435, %2409
  br i1 %2436, label %2442, label %2450

2437:                                             ; preds = %2421
  %2438 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %2422, i64 2
  %2439 = bitcast %"struct.std::__1::__hash_node_base.178"* %2438 to %"class.spvtools::opt::Instruction"**
  %2440 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2439, align 8
  %2441 = icmp eq %"class.spvtools::opt::Instruction"* %2440, null
  br i1 %2441, label %2446, label %2442

2442:                                             ; preds = %2437, %2434
  %2443 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %2422, i64 0, i32 0
  %2444 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %2443, align 8
  %2445 = icmp eq %"struct.std::__1::__hash_node_base.178"* %2444, null
  br i1 %2445, label %2450, label %2421

2446:                                             ; preds = %2437
  %2447 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %2422, i64 3
  %2448 = bitcast %"struct.std::__1::__hash_node_base.178"* %2447 to %"class.spvtools::opt::BasicBlock"**
  %2449 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2448, align 8
  br label %2450

2450:                                             ; preds = %2442, %2434, %2446, %2415, %2408, %2394
  %2451 = phi %"class.spvtools::opt::BasicBlock"* [ %2449, %2446 ], [ null, %2408 ], [ null, %2394 ], [ null, %2415 ], [ null, %2434 ], [ null, %2442 ]
  store %"class.spvtools::opt::IRContext"* %2388, %"class.spvtools::opt::IRContext"** %242, align 8
  store %"class.spvtools::opt::BasicBlock"* %2451, %"class.spvtools::opt::BasicBlock"** %243, align 8
  store i64 0, i64* %246, align 8
  store i32 3, i32* %244, align 8
  %2452 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %6, i32 %2387, i1 zeroext false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #12
  %2453 = load i32*, i32** %234, align 8
  %2454 = icmp eq i32* %2453, null
  br i1 %2454, label %2458, label %2455

2455:                                             ; preds = %2450
  %2456 = ptrtoint i32* %2453 to i64
  store i64 %2456, i64* %237, align 8
  %2457 = bitcast i32* %2453 to i8*
  call void @_ZdlPv(i8* %2457) #13
  br label %2458

2458:                                             ; preds = %2455, %2450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #12
  br label %2459

2459:                                             ; preds = %2538, %2458
  %2460 = phi i32 [ 2, %2458 ], [ %2539, %2538 ]
  %2461 = load i64, i64* %2283, align 8
  %2462 = load i64, i64* %2284, align 8
  %2463 = sub i64 %2461, %2462
  %2464 = sdiv exact i64 %2463, 48
  %2465 = load i8, i8* %2285, align 4, !range !15
  %2466 = icmp eq i8 %2465, 0
  %2467 = load i8, i8* %2286, align 1, !range !15
  %2468 = icmp eq i8 %2467, 0
  %2469 = select i1 %2468, i32 1, i32 2
  %2470 = xor i1 %2468, true
  %2471 = zext i1 %2470 to i32
  %2472 = select i1 %2466, i32 %2471, i32 %2469
  %2473 = trunc i64 %2464 to i32
  %2474 = sub i32 %2473, %2472
  %2475 = icmp ult i32 %2460, %2474
  br i1 %2475, label %2476, label %2540

2476:                                             ; preds = %2459
  %2477 = inttoptr i64 %2462 to %"struct.spvtools::opt::Operand"*
  %2478 = add i32 %2472, %2460
  %2479 = zext i32 %2478 to i64
  %2480 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2477, i64 %2479, i32 1
  %2481 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Type"* %2197, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %2480) #12
  %2482 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %2168, %"class.spvtools::opt::analysis::Constant"* %2481, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #12
  %2483 = ptrtoint %"class.spvtools::opt::Instruction"* %2482 to i64
  %2484 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %231, align 8
  %2485 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %232, align 8
  %2486 = icmp ult %"struct.std::__1::pair.1191"* %2484, %2485
  %2487 = ptrtoint %"struct.std::__1::pair.1191"* %2485 to i64
  br i1 %2486, label %2488, label %2493

2488:                                             ; preds = %2476
  %2489 = bitcast %"struct.std::__1::pair.1191"* %2484 to i64*
  store i64 %2483, i64* %2489, align 8
  %2490 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2484, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2490, align 8
  %2491 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2484, i64 1
  %2492 = ptrtoint %"struct.std::__1::pair.1191"* %2491 to i64
  store i64 %2492, i64* %247, align 8
  br label %2538

2493:                                             ; preds = %2476
  %2494 = ptrtoint %"struct.std::__1::pair.1191"* %2484 to i64
  %2495 = load i64, i64* %248, align 8
  %2496 = sub i64 %2494, %2495
  %2497 = ashr exact i64 %2496, 4
  %2498 = add nsw i64 %2497, 1
  %2499 = icmp ugt i64 %2498, 1152921504606846975
  br i1 %2499, label %2500, label %2502

2500:                                             ; preds = %2493
  %2501 = bitcast %"class.std::__1::vector.1189"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2501) #14
  unreachable

2502:                                             ; preds = %2493
  %2503 = sub i64 %2487, %2495
  %2504 = ashr exact i64 %2503, 4
  %2505 = icmp ult i64 %2504, 576460752303423487
  br i1 %2505, label %2506, label %2514

2506:                                             ; preds = %2502
  %2507 = ashr exact i64 %2503, 3
  %2508 = icmp ult i64 %2507, %2498
  %2509 = select i1 %2508, i64 %2498, i64 %2507
  %2510 = icmp eq i64 %2509, 0
  br i1 %2510, label %2519, label %2511

2511:                                             ; preds = %2506
  %2512 = icmp ugt i64 %2509, 1152921504606846975
  br i1 %2512, label %2513, label %2514

2513:                                             ; preds = %2511
  call void @abort() #14
  unreachable

2514:                                             ; preds = %2511, %2502
  %2515 = phi i64 [ %2509, %2511 ], [ 1152921504606846975, %2502 ]
  %2516 = shl i64 %2515, 4
  %2517 = call i8* @_Znwm(i64 %2516) #13
  %2518 = bitcast i8* %2517 to %"struct.std::__1::pair.1191"*
  br label %2519

2519:                                             ; preds = %2514, %2506
  %2520 = phi i64 [ %2515, %2514 ], [ 0, %2506 ]
  %2521 = phi i8* [ %2517, %2514 ], [ null, %2506 ]
  %2522 = phi %"struct.std::__1::pair.1191"* [ %2518, %2514 ], [ null, %2506 ]
  %2523 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2522, i64 %2497
  %2524 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2522, i64 %2520
  %2525 = ptrtoint %"struct.std::__1::pair.1191"* %2524 to i64
  %2526 = bitcast %"struct.std::__1::pair.1191"* %2523 to i64*
  store i64 %2483, i64* %2526, align 8
  %2527 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2522, i64 %2497, i32 1
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %2527, align 8
  %2528 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2523, i64 1
  %2529 = ptrtoint %"struct.std::__1::pair.1191"* %2528 to i64
  %2530 = ptrtoint %"struct.std::__1::pair.1191"* %2522 to i64
  %2531 = icmp sgt i64 %2496, 0
  br i1 %2531, label %2532, label %2534

2532:                                             ; preds = %2519
  %2533 = inttoptr i64 %2495 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2521, i8* align 8 %2533, i64 %2496, i1 false) #12
  br label %2534

2534:                                             ; preds = %2532, %2519
  store i64 %2530, i64* %248, align 8
  store i64 %2529, i64* %247, align 8
  store i64 %2525, i64* %249, align 8
  %2535 = icmp eq i64 %2495, 0
  br i1 %2535, label %2538, label %2536

2536:                                             ; preds = %2534
  %2537 = inttoptr i64 %2495 to i8*
  call void @_ZdlPv(i8* %2537) #13
  br label %2538

2538:                                             ; preds = %2536, %2534, %2488
  %2539 = add i32 %2460, 2
  br label %2459

2540:                                             ; preds = %2459, %2279
  %2541 = phi %"class.spvtools::opt::Instruction"* [ %2273, %2279 ], [ %2452, %2459 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %264) #12
  store i32 -1431655766, i32* %270, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %269, align 8
  %2542 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %2543 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2542, i64 0, i32 1
  %2544 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2543, align 8
  %2545 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %2544) #12
  %2546 = icmp eq %"class.spvtools::opt::Instruction"* %2545, null
  br i1 %2546, label %2561, label %2547

2547:                                             ; preds = %2540
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271) #12
  %2548 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %945, i64 0, i32 1, i32 0, i32 0, i32 0
  %2549 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2548, align 8
  %2550 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2549, i64 0, i32 4
  %2551 = load i8, i8* %2550, align 1, !range !15
  %2552 = icmp eq i8 %2551, 0
  br i1 %2552, label %2558, label %2553

2553:                                             ; preds = %2547
  %2554 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2549, i64 0, i32 3
  %2555 = load i8, i8* %2554, align 4, !range !15
  %2556 = zext i8 %2555 to i32
  %2557 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2549, i32 %2556) #12
  br label %2558

2558:                                             ; preds = %2553, %2547
  %2559 = phi i32 [ %2557, %2553 ], [ 0, %2547 ]
  store i32 %2559, i32* %41, align 4
  %2560 = call { %"struct.std::__1::__hash_node_base.948"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.944"* nonnull %272, i32* nonnull dereferenceable(4) %41, i32* nonnull dereferenceable(4) %41) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271) #12
  br label %2563

2561:                                             ; preds = %2540
  %2562 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  call void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %2562, %"class.std::__1::unordered_set.943"* nonnull %40) #12
  br label %2563

2563:                                             ; preds = %2561, %2558
  %2564 = phi i64 [ ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE0_S2_EEEEbPKNS0_16__policy_storageEj to i64), %2561 ], [ ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE_S2_EEEEbPKNS0_16__policy_storageEj to i64), %2558 ]
  %2565 = phi i64 [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE0_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %2561 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %2558 ]
  %2566 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %230, align 8
  %2567 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %231, align 8
  %2568 = icmp eq %"struct.std::__1::pair.1191"* %2566, %2567
  br i1 %2568, label %2573, label %2569

2569:                                             ; preds = %2563
  %2570 = inttoptr i64 %2565 to %"struct.std::__1::__function::__policy"*
  %2571 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2570, i64 0, i32 0
  %2572 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2570, i64 0, i32 1
  br label %2584

2573:                                             ; preds = %2637, %2563
  %2574 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS0_4LoopEPNS0_11InstructionES6_(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nonnull %54, %"class.spvtools::opt::Loop"* %2574, %"class.spvtools::opt::Instruction"* %2141, %"class.spvtools::opt::Instruction"* %2541) #12
  %2575 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %118, align 8
  %2576 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2575, i64 0, i32 4
  %2577 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2576, align 8
  %2578 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %2579 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1646, align 8, !noalias !34
  %2580 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %2578, %"class.spvtools::opt::Instruction"* %2579) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %305) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 -86, i64 32, i1 false) #12
  %2581 = load i64, i64* %121, align 8
  %2582 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1583, i64 0, i32 2, i32 0, i32 1
  %2583 = ptrtoint %"class.spvtools::opt::Instruction"* %2582 to i64
  store i64 %2581, i64* %308, align 8
  store %"class.spvtools::opt::BasicBlock"* %1583, %"class.spvtools::opt::BasicBlock"** %306, align 8
  store i64 %2583, i64* %310, align 8
  store i32 0, i32* %307, align 8
  br i1 %2198, label %2796, label %2847

2584:                                             ; preds = %2637, %2569
  %2585 = phi %"struct.std::__1::pair.1191"* [ %2566, %2569 ], [ %2641, %2637 ]
  %2586 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2585, i64 0, i32 0
  %2587 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2586, align 8
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %273) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %273, i8* align 8 bitcast (%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* @__const._ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEv.clone_result to i8*), i64 160, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %275, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %278, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %283, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %282, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %287, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %286, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %289, i8 0, i64 24, i1 false) #12
  %2588 = call %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"* nonnull %29, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %42, %"class.std::__1::vector.1037"* dereferenceable(24) %126) #12
  %2589 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2588, i64 0, i32 4
  %2590 = bitcast %"class.spvtools::opt::BasicBlock"** %2589 to i64*
  %2591 = load i64, i64* %2590, align 8
  %2592 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2585, i64 0, i32 1
  %2593 = bitcast %"class.spvtools::opt::BasicBlock"** %2592 to i64*
  store i64 %2591, i64* %2593, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS0_4LoopEPNS0_11InstructionES6_(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nonnull %54, %"class.spvtools::opt::Loop"* %2588, %"class.spvtools::opt::Instruction"* %2141, %"class.spvtools::opt::Instruction"* %2587) #12
  %2594 = load i64, i64* %290, align 8
  %2595 = icmp eq i64 %2594, 0
  br i1 %2595, label %2596, label %2643

2596:                                             ; preds = %2792, %2584
  %2597 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %117, align 8
  %2598 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %303, align 8
  %2599 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %304, align 8
  %2600 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1585, align 8
  %2601 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2600, i64 0, i32 4
  %2602 = load i8, i8* %2601, align 1, !range !15
  %2603 = icmp eq i8 %2602, 0
  br i1 %2603, label %2609, label %2604

2604:                                             ; preds = %2596
  %2605 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2600, i64 0, i32 3
  %2606 = load i8, i8* %2605, align 4, !range !15
  %2607 = zext i8 %2606 to i32
  %2608 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2600, i32 %2607) #12
  br label %2609

2609:                                             ; preds = %2604, %2596
  %2610 = phi i32 [ %2608, %2604 ], [ 0, %2596 ]
  %2611 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %2597, i64 0, i32 3
  %2612 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2611, i64 0, i32 0, i32 0
  %2613 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %2612, align 8
  %2614 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %2597, i64 0, i32 3, i32 0, i32 1
  %2615 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %2614, align 8
  %2616 = icmp eq %"class.std::__1::unique_ptr.40"* %2613, %2615
  br i1 %2616, label %2637, label %2617

2617:                                             ; preds = %2609, %2634
  %2618 = phi %"class.std::__1::unique_ptr.40"* [ %2635, %2634 ], [ %2613, %2609 ]
  %2619 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2618, i64 0, i32 0, i32 0, i32 0
  %2620 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2619, align 8
  %2621 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2620, i64 0, i32 1, i32 0, i32 0, i32 0
  %2622 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2621, align 8
  %2623 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2622, i64 0, i32 4
  %2624 = load i8, i8* %2623, align 1, !range !15
  %2625 = icmp eq i8 %2624, 0
  br i1 %2625, label %2631, label %2626

2626:                                             ; preds = %2617
  %2627 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2622, i64 0, i32 3
  %2628 = load i8, i8* %2627, align 4, !range !15
  %2629 = zext i8 %2628 to i32
  %2630 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2622, i32 %2629) #12
  br label %2631

2631:                                             ; preds = %2626, %2617
  %2632 = phi i32 [ %2630, %2626 ], [ 0, %2617 ]
  %2633 = icmp eq i32 %2632, %2610
  br i1 %2633, label %2637, label %2634

2634:                                             ; preds = %2631
  %2635 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2618, i64 1
  %2636 = icmp eq %"class.std::__1::unique_ptr.40"* %2635, %2615
  br i1 %2636, label %2637, label %2617

2637:                                             ; preds = %2634, %2631, %2609
  %2638 = phi %"class.std::__1::unique_ptr.40"* [ %2613, %2609 ], [ %2615, %2634 ], [ %2618, %2631 ]
  %2639 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2638, i64 1
  %2640 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.38"* %2611, %"class.std::__1::unique_ptr.40"* %2639, %"class.std::__1::unique_ptr.40"* %2598, %"class.std::__1::unique_ptr.40"* %2599) #12
  call void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %273) #12
  %2641 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2585, i64 1
  %2642 = icmp eq %"struct.std::__1::pair.1191"* %2641, %2567
  br i1 %2642, label %2573, label %2584

2643:                                             ; preds = %2584, %2792
  %2644 = phi i64 [ %2794, %2792 ], [ %2594, %2584 ]
  %2645 = inttoptr i64 %2644 to %"struct.std::__1::__hash_node.1054"*
  %2646 = getelementptr inbounds %"struct.std::__1::__hash_node.1054", %"struct.std::__1::__hash_node.1054"* %2645, i64 0, i32 2
  %2647 = load i32, i32* %2646, align 4
  %2648 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  %2649 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2648, i64 0, i32 11
  %2650 = load i32, i32* %2649, align 8
  %2651 = and i32 %2650, 16
  %2652 = icmp eq i32 %2651, 0
  br i1 %2652, label %2653, label %2669

2653:                                             ; preds = %2643
  %2654 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2648, i64 0, i32 4, i32 0, i32 0, i32 0
  %2655 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %2654, align 8
  %2656 = call i8* @_Znwm(i64 400) #13
  %2657 = bitcast i8* %2656 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %2657, %"class.spvtools::opt::Module"* %2655) #12
  %2658 = ptrtoint i8* %2656 to i64
  %2659 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2648, i64 0, i32 15
  %2660 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %2659, i64 0, i32 0, i32 0, i32 0
  %2661 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %2660, align 8
  %2662 = bitcast %"class.std::__1::unique_ptr.273"* %2659 to i64*
  store i64 %2658, i64* %2662, align 8
  %2663 = icmp eq %"class.spvtools::opt::CFG"* %2661, null
  br i1 %2663, label %2666, label %2664

2664:                                             ; preds = %2653
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %2661) #12
  %2665 = bitcast %"class.spvtools::opt::CFG"* %2661 to i8*
  call void @_ZdlPv(i8* %2665) #13
  br label %2666

2666:                                             ; preds = %2664, %2653
  %2667 = load i32, i32* %2649, align 8
  %2668 = or i32 %2667, 16
  store i32 %2668, i32* %2649, align 8
  br label %2669

2669:                                             ; preds = %2666, %2643
  %2670 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2648, i64 0, i32 15, i32 0, i32 0, i32 0
  %2671 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %2670, align 8
  %2672 = zext i32 %2647 to i64
  %2673 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %2671, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %2674 = load i64, i64* %2673, align 8
  %2675 = icmp eq i64 %2674, 0
  br i1 %2675, label %2724, label %2676

2676:                                             ; preds = %2669
  %2677 = call i64 @llvm.ctpop.i64(i64 %2674) #12, !range !8
  %2678 = icmp ugt i64 %2677, 1
  br i1 %2678, label %2682, label %2679

2679:                                             ; preds = %2676
  %2680 = add i64 %2674, 4294967295
  %2681 = and i64 %2680, %2672
  br label %2686

2682:                                             ; preds = %2676
  %2683 = icmp ugt i64 %2674, %2672
  br i1 %2683, label %2686, label %2684

2684:                                             ; preds = %2682
  %2685 = urem i64 %2672, %2674
  br label %2686

2686:                                             ; preds = %2684, %2682, %2679
  %2687 = phi i64 [ %2681, %2679 ], [ %2685, %2684 ], [ %2672, %2682 ]
  %2688 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %2671, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %2689 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %2688, align 8
  %2690 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2689, i64 %2687
  %2691 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2690, align 8
  %2692 = icmp eq %"struct.std::__1::__hash_node_base.333"* %2691, null
  br i1 %2692, label %2724, label %2693

2693:                                             ; preds = %2686
  %2694 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2691, i64 0, i32 0
  %2695 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2694, align 8
  %2696 = icmp eq %"struct.std::__1::__hash_node_base.333"* %2695, null
  br i1 %2696, label %2724, label %2697

2697:                                             ; preds = %2693
  %2698 = add i64 %2674, -1
  br label %2699

2699:                                             ; preds = %2720, %2697
  %2700 = phi %"struct.std::__1::__hash_node_base.333"* [ %2695, %2697 ], [ %2722, %2720 ]
  %2701 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2700, i64 1
  %2702 = bitcast %"struct.std::__1::__hash_node_base.333"* %2701 to i64*
  %2703 = load i64, i64* %2702, align 8
  %2704 = icmp eq i64 %2703, %2672
  br i1 %2704, label %2715, label %2705

2705:                                             ; preds = %2699
  br i1 %2678, label %2708, label %2706

2706:                                             ; preds = %2705
  %2707 = and i64 %2703, %2698
  br label %2712

2708:                                             ; preds = %2705
  %2709 = icmp ult i64 %2703, %2674
  br i1 %2709, label %2712, label %2710

2710:                                             ; preds = %2708
  %2711 = urem i64 %2703, %2674
  br label %2712

2712:                                             ; preds = %2710, %2708, %2706
  %2713 = phi i64 [ %2707, %2706 ], [ %2711, %2710 ], [ %2703, %2708 ]
  %2714 = icmp eq i64 %2713, %2687
  br i1 %2714, label %2720, label %2724

2715:                                             ; preds = %2699
  %2716 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2700, i64 2
  %2717 = bitcast %"struct.std::__1::__hash_node_base.333"* %2716 to i32*
  %2718 = load i32, i32* %2717, align 4
  %2719 = icmp eq i32 %2718, %2647
  br i1 %2719, label %2725, label %2720

2720:                                             ; preds = %2715, %2712
  %2721 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2700, i64 0, i32 0
  %2722 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2721, align 8
  %2723 = icmp eq %"struct.std::__1::__hash_node_base.333"* %2722, null
  br i1 %2723, label %2724, label %2699

2724:                                             ; preds = %2693, %2686, %2669, %2720, %2712
  call void @abort() #14
  unreachable

2725:                                             ; preds = %2715
  %2726 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2700, i64 3
  %2727 = bitcast %"struct.std::__1::__hash_node_base.333"* %2726 to %"class.spvtools::opt::BasicBlock"**
  %2728 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2727, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #12
  %2729 = load i8* (i8*)*, i8* (i8*)** %2571, align 8
  %2730 = icmp eq i8* (i8*)* %2729, null
  br i1 %2730, label %2733, label %2731

2731:                                             ; preds = %2725
  %2732 = call i8* %2729(i8* nonnull %115) #12
  br label %2733

2733:                                             ; preds = %2731, %2725
  %2734 = phi i8* [ %115, %2725 ], [ %2732, %2731 ]
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E1_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %293, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %294, align 8
  %2735 = call i8* @_Znwm(i64 40) #13, !noalias !37
  %2736 = bitcast i8* %2735 to i8**
  store i8* %2734, i8** %2736, align 8
  %2737 = getelementptr inbounds i8, i8* %2735, i64 8
  %2738 = bitcast i8* %2737 to i64*
  store i64 -6148914691236517206, i64* %2738, align 8
  %2739 = getelementptr inbounds i8, i8* %2735, i64 16
  %2740 = bitcast i8* %2739 to i64*
  store i64 %2564, i64* %2740, align 8
  %2741 = getelementptr inbounds i8, i8* %2735, i64 24
  %2742 = bitcast i8* %2741 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* %2570, %"struct.std::__1::__function::__policy"** %2742, align 8
  %2743 = load void (i8*)*, void (i8*)** %2572, align 8
  %2744 = icmp eq void (i8*)* %2743, null
  %2745 = select i1 %2744, %"struct.std::__1::__function::__policy"* %2570, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_
  %2746 = getelementptr inbounds i8, i8* %2735, i64 32
  %2747 = bitcast i8* %2746 to i64*
  store i64 %292, i64* %2747, align 8
  store i8* %2735, i8** %295, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %296) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %298, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %299, align 8
  store i64 %297, i64* %300, align 8
  %2748 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2728, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %2749 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2748, align 8
  %2750 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2749, i64 0, i32 0, i32 3
  %2751 = load i8, i8* %2750, align 8, !range !15
  %2752 = icmp ne i8 %2751, 0
  %2753 = icmp eq %"class.spvtools::opt::Instruction"* %2749, null
  %2754 = or i1 %2753, %2752
  br i1 %2754, label %2773, label %2755

2755:                                             ; preds = %2733, %2764
  %2756 = phi %"class.spvtools::opt::Instruction"* [ %2768, %2764 ], [ %2749, %2733 ]
  %2757 = icmp eq %"class.spvtools::opt::Instruction"* %2756, null
  br i1 %2757, label %2771, label %2758

2758:                                             ; preds = %2755
  %2759 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2756, i64 0, i32 0, i32 1
  %2760 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2759, align 8
  %2761 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2756, i64 0, i32 2
  %2762 = load i32, i32* %2761, align 8
  %2763 = icmp eq i32 %2762, 245
  br i1 %2763, label %2764, label %2771

2764:                                             ; preds = %2758
  %2765 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2760, i64 0, i32 0, i32 3
  %2766 = load i8, i8* %2765, align 8, !range !15
  %2767 = icmp eq i8 %2766, 0
  %2768 = select i1 %2767, %"class.spvtools::opt::Instruction"* %2760, %"class.spvtools::opt::Instruction"* null
  %2769 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %298, align 8
  %2770 = call zeroext i1 %2769(%"union.std::__1::__function::__policy_storage"* nonnull %301, %"class.spvtools::opt::Instruction"* nonnull %2756) #12
  br i1 %2770, label %2755, label %2771

2771:                                             ; preds = %2764, %2758, %2755
  %2772 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %299, align 8
  br label %2773

2773:                                             ; preds = %2771, %2733
  %2774 = phi %"struct.std::__1::__function::__policy"* [ %2772, %2771 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2733 ]
  %2775 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2774, i64 0, i32 1
  %2776 = load void (i8*)*, void (i8*)** %2775, align 8
  %2777 = icmp eq void (i8*)* %2776, null
  br i1 %2777, label %2780, label %2778

2778:                                             ; preds = %2773
  %2779 = load i8*, i8** %302, align 8
  call void %2776(i8* %2779) #12
  br label %2780

2780:                                             ; preds = %2778, %2773
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %296) #12
  %2781 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %294, align 8
  %2782 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2781, i64 0, i32 1
  %2783 = load void (i8*)*, void (i8*)** %2782, align 8
  %2784 = icmp eq void (i8*)* %2783, null
  br i1 %2784, label %2787, label %2785

2785:                                             ; preds = %2780
  %2786 = load i8*, i8** %295, align 8
  call void %2783(i8* %2786) #12
  br label %2787

2787:                                             ; preds = %2785, %2780
  %2788 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2745, i64 0, i32 1
  %2789 = load void (i8*)*, void (i8*)** %2788, align 8
  %2790 = icmp eq void (i8*)* %2789, null
  br i1 %2790, label %2792, label %2791

2791:                                             ; preds = %2787
  call void %2789(i8* %2734) #12
  br label %2792

2792:                                             ; preds = %2791, %2787
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #12
  %2793 = inttoptr i64 %2644 to i64*
  %2794 = load i64, i64* %2793, align 8
  %2795 = icmp eq i64 %2794, 0
  br i1 %2795, label %2596, label %2643

2796:                                             ; preds = %2573
  %2797 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2141, i64 0, i32 4
  %2798 = load i8, i8* %2797, align 1, !range !15
  %2799 = icmp eq i8 %2798, 0
  br i1 %2799, label %2804, label %2800

2800:                                             ; preds = %2796
  %2801 = load i8, i8* %2190, align 4, !range !15
  %2802 = zext i8 %2801 to i32
  %2803 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2141, i32 %2802) #12
  br label %2804

2804:                                             ; preds = %2800, %2796
  %2805 = phi i32 [ %2803, %2800 ], [ 0, %2796 ]
  %2806 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2577, i64 0, i32 1, i32 0, i32 0, i32 0
  %2807 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2806, align 8
  %2808 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2807, i64 0, i32 4
  %2809 = load i8, i8* %2808, align 1, !range !15
  %2810 = icmp eq i8 %2809, 0
  br i1 %2810, label %2816, label %2811

2811:                                             ; preds = %2804
  %2812 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2807, i64 0, i32 3
  %2813 = load i8, i8* %2812, align 4, !range !15
  %2814 = zext i8 %2813 to i32
  %2815 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2807, i32 %2814) #12
  br label %2816

2816:                                             ; preds = %2811, %2804
  %2817 = phi i32 [ %2815, %2811 ], [ 0, %2804 ]
  %2818 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %230, align 8
  %2819 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2818, i64 0, i32 1
  %2820 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2819, align 8
  %2821 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2820, i64 0, i32 1, i32 0, i32 0, i32 0
  %2822 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2821, align 8
  %2823 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2822, i64 0, i32 4
  %2824 = load i8, i8* %2823, align 1, !range !15
  %2825 = icmp eq i8 %2824, 0
  br i1 %2825, label %2831, label %2826

2826:                                             ; preds = %2816
  %2827 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2822, i64 0, i32 3
  %2828 = load i8, i8* %2827, align 4, !range !15
  %2829 = zext i8 %2828 to i32
  %2830 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2822, i32 %2829) #12
  br label %2831

2831:                                             ; preds = %2826, %2816
  %2832 = phi i32 [ %2830, %2826 ], [ 0, %2816 ]
  br i1 %946, label %2833, label %2844

2833:                                             ; preds = %2831
  %2834 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %945, i64 0, i32 1, i32 0, i32 0, i32 0
  %2835 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2834, align 8
  %2836 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2835, i64 0, i32 4
  %2837 = load i8, i8* %2836, align 1, !range !15
  %2838 = icmp eq i8 %2837, 0
  br i1 %2838, label %2844, label %2839

2839:                                             ; preds = %2833
  %2840 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2835, i64 0, i32 3
  %2841 = load i8, i8* %2840, align 4, !range !15
  %2842 = zext i8 %2841 to i32
  %2843 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2835, i32 %2842) #12
  br label %2844

2844:                                             ; preds = %2839, %2833, %2831
  %2845 = phi i32 [ -1, %2831 ], [ %2843, %2839 ], [ 0, %2833 ]
  %2846 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %44, i32 %2805, i32 %2817, i32 %2832, i32 %2845, i32 0) #12
  br label %2970

2847:                                             ; preds = %2573
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 0, i64 24, i1 false) #12
  %2848 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %230, align 8
  %2849 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %231, align 8
  %2850 = icmp eq %"struct.std::__1::pair.1191"* %2848, %2849
  br i1 %2850, label %2851, label %2873

2851:                                             ; preds = %2922, %2847
  %2852 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2141, i64 0, i32 4
  %2853 = load i8, i8* %2852, align 1, !range !15
  %2854 = icmp eq i8 %2853, 0
  br i1 %2854, label %2859, label %2855

2855:                                             ; preds = %2851
  %2856 = load i8, i8* %2190, align 4, !range !15
  %2857 = zext i8 %2856 to i32
  %2858 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2141, i32 %2857) #12
  br label %2859

2859:                                             ; preds = %2855, %2851
  %2860 = phi i32 [ %2858, %2855 ], [ 0, %2851 ]
  %2861 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2577, i64 0, i32 1, i32 0, i32 0, i32 0
  %2862 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2861, align 8
  %2863 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2862, i64 0, i32 4
  %2864 = load i8, i8* %2863, align 1, !range !15
  %2865 = icmp eq i8 %2864, 0
  br i1 %2865, label %2871, label %2866

2866:                                             ; preds = %2859
  %2867 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2862, i64 0, i32 3
  %2868 = load i8, i8* %2867, align 4, !range !15
  %2869 = zext i8 %2868 to i32
  %2870 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2862, i32 %2869) #12
  br label %2871

2871:                                             ; preds = %2866, %2859
  %2872 = phi i32 [ %2870, %2866 ], [ 0, %2859 ]
  br i1 %946, label %2925, label %2936

2873:                                             ; preds = %2847, %2922
  %2874 = phi %"struct.std::__1::pair.1191"* [ %2923, %2922 ], [ %2848, %2847 ]
  %2875 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2874, i64 0, i32 0
  %2876 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2875, align 8
  %2877 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2876, i64 0, i32 3
  %2878 = load i8, i8* %2877, align 4, !range !15
  %2879 = icmp eq i8 %2878, 0
  %2880 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2876, i64 0, i32 4
  %2881 = load i8, i8* %2880, align 1, !range !15
  %2882 = icmp eq i8 %2881, 0
  %2883 = select i1 %2882, i64 1, i64 2
  %2884 = xor i1 %2882, true
  %2885 = zext i1 %2884 to i64
  %2886 = select i1 %2879, i64 %2885, i64 %2883
  %2887 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2876, i64 0, i32 6, i32 0, i32 0
  %2888 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %2887, align 8
  %2889 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2888, i64 %2886, i32 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %315) #12
  %2890 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2874, i64 0, i32 1
  %2891 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2890, align 8
  %2892 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2891, i64 0, i32 1, i32 0, i32 0, i32 0
  %2893 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2892, align 8
  %2894 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2893, i64 0, i32 4
  %2895 = load i8, i8* %2894, align 1, !range !15
  %2896 = icmp eq i8 %2895, 0
  br i1 %2896, label %2902, label %2897

2897:                                             ; preds = %2873
  %2898 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2893, i64 0, i32 3
  %2899 = load i8, i8* %2898, align 4, !range !15
  %2900 = zext i8 %2899 to i32
  %2901 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2893, i32 %2900) #12
  br label %2902

2902:                                             ; preds = %2897, %2873
  %2903 = phi i32 [ %2901, %2897 ], [ 0, %2873 ]
  store i32 %2903, i32* %46, align 4
  %2904 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %313, align 8
  %2905 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %314, align 8
  %2906 = icmp ult %"struct.std::__1::pair.1235"* %2904, %2905
  br i1 %2906, label %2907, label %2921

2907:                                             ; preds = %2902
  %2908 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0
  %2909 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2909, align 8
  %2910 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0, i32 1
  store i64 0, i64* %2910, align 8
  %2911 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0, i32 2
  %2912 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0, i32 3, i64 0
  %2913 = bitcast i32** %2911 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %2912, %"struct.std::__1::aligned_storage<4, 4>::type"** %2913, align 8
  %2914 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 0, i32 4
  %2915 = bitcast %"class.std::__1::unique_ptr.0"* %2914 to i64*
  store i64 0, i64* %2915, align 8
  %2916 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %2908, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %2889) #12
  %2917 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 0, i32 1
  %2918 = load i32, i32* %46, align 4
  store i32 %2918, i32* %2917, align 8
  %2919 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2904, i64 1
  %2920 = ptrtoint %"struct.std::__1::pair.1235"* %2919 to i64
  store i64 %2920, i64* %316, align 8
  br label %2922

2921:                                             ; preds = %2902
  call void @_ZNSt3__16vectorINS_4pairIN8spvtools5utils11SmallVectorIjLm2EEEjEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRS5_jEEEvDpOT_(%"class.std::__1::vector.1233"* nonnull %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %2889, i32* nonnull dereferenceable(4) %46) #12
  br label %2922

2922:                                             ; preds = %2921, %2907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %315) #12
  %2923 = getelementptr inbounds %"struct.std::__1::pair.1191", %"struct.std::__1::pair.1191"* %2874, i64 1
  %2924 = icmp eq %"struct.std::__1::pair.1191"* %2923, %2849
  br i1 %2924, label %2851, label %2873

2925:                                             ; preds = %2871
  %2926 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %945, i64 0, i32 1, i32 0, i32 0, i32 0
  %2927 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2926, align 8
  %2928 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2927, i64 0, i32 4
  %2929 = load i8, i8* %2928, align 1, !range !15
  %2930 = icmp eq i8 %2929, 0
  br i1 %2930, label %2936, label %2931

2931:                                             ; preds = %2925
  %2932 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2927, i64 0, i32 3
  %2933 = load i8, i8* %2932, align 4, !range !15
  %2934 = zext i8 %2933 to i32
  %2935 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2927, i32 %2934) #12
  br label %2936

2936:                                             ; preds = %2931, %2925, %2871
  %2937 = phi i32 [ -1, %2871 ], [ %2935, %2931 ], [ 0, %2925 ]
  %2938 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %44, i32 %2860, i32 %2872, %"class.std::__1::vector.1233"* nonnull dereferenceable(24) %45, i32 %2937, i32 0) #12
  %2939 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %312, align 8
  %2940 = icmp eq %"struct.std::__1::pair.1235"* %2939, null
  br i1 %2940, label %2969, label %2941

2941:                                             ; preds = %2936
  %2942 = bitcast %"struct.std::__1::pair.1235"* %2939 to i8*
  %2943 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %313, align 8
  %2944 = icmp eq %"struct.std::__1::pair.1235"* %2943, %2939
  br i1 %2944, label %2967, label %2945

2945:                                             ; preds = %2941, %2963
  %2946 = phi %"struct.std::__1::pair.1235"* [ %2947, %2963 ], [ %2943, %2941 ]
  %2947 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2946, i64 -1
  %2948 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2947, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2948, align 8
  %2949 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %2946, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 0
  %2950 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2949, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %2949, align 8
  %2951 = icmp eq %"class.std::__1::vector.3"* %2950, null
  br i1 %2951, label %2963, label %2952

2952:                                             ; preds = %2945
  %2953 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2950, i64 0, i32 0, i32 0
  %2954 = load i32*, i32** %2953, align 8
  %2955 = icmp eq i32* %2954, null
  br i1 %2955, label %2961, label %2956

2956:                                             ; preds = %2952
  %2957 = ptrtoint i32* %2954 to i64
  %2958 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2950, i64 0, i32 0, i32 1
  %2959 = bitcast i32** %2958 to i64*
  store i64 %2957, i64* %2959, align 8
  %2960 = bitcast i32* %2954 to i8*
  call void @_ZdlPv(i8* %2960) #13
  br label %2961

2961:                                             ; preds = %2956, %2952
  %2962 = bitcast %"class.std::__1::vector.3"* %2950 to i8*
  call void @_ZdlPv(i8* %2962) #13
  br label %2963

2963:                                             ; preds = %2961, %2945
  %2964 = icmp eq %"struct.std::__1::pair.1235"* %2947, %2939
  br i1 %2964, label %2965, label %2945

2965:                                             ; preds = %2963
  %2966 = load i8*, i8** %317, align 8
  br label %2967

2967:                                             ; preds = %2965, %2941
  %2968 = phi i8* [ %2966, %2965 ], [ %2942, %2941 ]
  store %"struct.std::__1::pair.1235"* %2939, %"struct.std::__1::pair.1235"** %313, align 8
  call void @_ZdlPv(i8* %2968) #13
  br label %2969

2969:                                             ; preds = %2967, %2936
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #12
  br label %2970

2970:                                             ; preds = %2969, %2844
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %122, align 8
  %2971 = load i64, i64* %318, align 8
  store i64 %2971, i64* %320, align 8
  %2972 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %120, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %2972, i32 64) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %305) #12
  %2973 = inttoptr i64 %2565 to %"struct.std::__1::__function::__policy"*
  %2974 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %2973, i64 0, i32 1
  %2975 = load void (i8*)*, void (i8*)** %2974, align 8
  %2976 = icmp eq void (i8*)* %2975, null
  br i1 %2976, label %2978, label %2977

2977:                                             ; preds = %2970
  call void %2975(i8* nonnull %115) #12
  br label %2978

2978:                                             ; preds = %2977, %2970
  %2979 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %266, align 8
  %2980 = icmp eq %"struct.std::__1::__hash_node_base.948"* %2979, null
  br i1 %2980, label %2987, label %2981

2981:                                             ; preds = %2978, %2981
  %2982 = phi %"struct.std::__1::__hash_node_base.948"* [ %2984, %2981 ], [ %2979, %2978 ]
  %2983 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %2982, i64 0, i32 0
  %2984 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %2983, align 8
  %2985 = bitcast %"struct.std::__1::__hash_node_base.948"* %2982 to i8*
  call void @_ZdlPv(i8* %2985) #13
  %2986 = icmp eq %"struct.std::__1::__hash_node_base.948"* %2984, null
  br i1 %2986, label %2987, label %2981

2987:                                             ; preds = %2981, %2978
  %2988 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %265, align 8
  store %"struct.std::__1::__hash_node_base.948"** null, %"struct.std::__1::__hash_node_base.948"*** %265, align 8
  %2989 = icmp eq %"struct.std::__1::__hash_node_base.948"** %2988, null
  br i1 %2989, label %2992, label %2990

2990:                                             ; preds = %2987
  %2991 = bitcast %"struct.std::__1::__hash_node_base.948"** %2988 to i8*
  call void @_ZdlPv(i8* %2991) #13
  br label %2992

2992:                                             ; preds = %2990, %2987
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %264) #12
  %2993 = load %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"** %230, align 8
  %2994 = icmp eq %"struct.std::__1::pair.1191"* %2993, null
  br i1 %2994, label %2998, label %2995

2995:                                             ; preds = %2992
  %2996 = ptrtoint %"struct.std::__1::pair.1191"* %2993 to i64
  store i64 %2996, i64* %247, align 8
  %2997 = bitcast %"struct.std::__1::pair.1191"* %2993 to i8*
  call void @_ZdlPv(i8* %2997) #13
  br label %2998

2998:                                             ; preds = %2992, %2995
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #12
  %2999 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %122, align 8
  br label %673

3000:                                             ; preds = %857, %678
  %3001 = and i8 %675, 1
  %3002 = icmp eq i8 %3001, 0
  %3003 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %321, align 8
  %3004 = icmp eq %"class.spvtools::opt::BasicBlock"** %3003, null
  br i1 %3004, label %3008, label %3005

3005:                                             ; preds = %3000
  %3006 = ptrtoint %"class.spvtools::opt::BasicBlock"** %3003 to i64
  store i64 %3006, i64* %320, align 8
  %3007 = bitcast %"class.spvtools::opt::BasicBlock"** %3003 to i8*
  call void @_ZdlPv(i8* %3007) #13
  br label %3008

3008:                                             ; preds = %3005, %3000
  %3009 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %322, align 8
  %3010 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %3009, null
  br i1 %3010, label %3017, label %3011

3011:                                             ; preds = %3008, %3011
  %3012 = phi %"struct.std::__1::__hash_node_base.1018"* [ %3014, %3011 ], [ %3009, %3008 ]
  %3013 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %3012, i64 0, i32 0
  %3014 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %3013, align 8
  %3015 = bitcast %"struct.std::__1::__hash_node_base.1018"* %3012 to i8*
  call void @_ZdlPv(i8* %3015) #13
  %3016 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %3014, null
  br i1 %3016, label %3017, label %3011

3017:                                             ; preds = %3011, %3008
  %3018 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %323, align 8
  store %"struct.std::__1::__hash_node_base.1018"** null, %"struct.std::__1::__hash_node_base.1018"*** %323, align 8
  %3019 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %3018, null
  br i1 %3019, label %3022, label %3020

3020:                                             ; preds = %3017
  %3021 = bitcast %"struct.std::__1::__hash_node_base.1018"** %3018 to i8*
  call void @_ZdlPv(i8* %3021) #13
  br label %3022

3022:                                             ; preds = %3017, %3020
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %115) #12
  br i1 %3002, label %3023, label %3029

3023:                                             ; preds = %659, %3022
  %3024 = phi i8 [ %676, %3022 ], [ %603, %659 ]
  %3025 = phi i8 [ %675, %3022 ], [ %604, %659 ]
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %51) #12
  %3026 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %111, align 8
  %3027 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %112, align 8
  %3028 = icmp eq %"class.spvtools::opt::Loop"* %3026, %3027
  br i1 %3028, label %3029, label %601

3029:                                             ; preds = %3022, %3023, %594
  %3030 = phi i8 [ 0, %594 ], [ %3025, %3023 ], [ %675, %3022 ]
  %3031 = phi i8 [ %341, %594 ], [ %3024, %3023 ], [ %676, %3022 ]
  %3032 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %324, align 8
  %3033 = load i64, i64* %325, align 8
  %3034 = lshr i64 %3033, 8
  %3035 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3032, i64 %3034
  %3036 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %326, align 8
  %3037 = icmp eq %"struct.std::__1::pair.1002"** %3036, %3032
  %3038 = ptrtoint %"struct.std::__1::pair.1002"** %3036 to i64
  %3039 = ptrtoint %"struct.std::__1::pair.1002"** %3032 to i64
  br i1 %3037, label %3052, label %3040

3040:                                             ; preds = %3029
  %3041 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3035, align 8
  %3042 = and i64 %3033, 255
  %3043 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3041, i64 %3042
  %3044 = load i64, i64* %327, align 8
  %3045 = add i64 %3044, %3033
  %3046 = lshr i64 %3045, 8
  %3047 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3032, i64 %3046
  %3048 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3047, align 8
  %3049 = and i64 %3045, 255
  %3050 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3048, i64 %3049
  %3051 = icmp eq %"struct.std::__1::pair.1002"* %3050, %3043
  br i1 %3051, label %3052, label %3056

3052:                                             ; preds = %3069, %3029, %3040
  store i64 0, i64* %327, align 8
  %3053 = sub i64 %3038, %3039
  %3054 = ashr exact i64 %3053, 3
  %3055 = icmp ugt i64 %3054, 2
  br i1 %3055, label %3074, label %3087

3056:                                             ; preds = %3040, %3069
  %3057 = phi %"struct.std::__1::pair.1002"* [ %3072, %3069 ], [ %3043, %3040 ]
  %3058 = phi %"struct.std::__1::pair.1002"** [ %3071, %3069 ], [ %3035, %3040 ]
  %3059 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3057, i64 1
  %3060 = ptrtoint %"struct.std::__1::pair.1002"* %3059 to i64
  %3061 = bitcast %"struct.std::__1::pair.1002"** %3058 to i64*
  %3062 = load i64, i64* %3061, align 8
  %3063 = sub i64 %3060, %3062
  %3064 = icmp eq i64 %3063, 4096
  br i1 %3064, label %3065, label %3069

3065:                                             ; preds = %3056
  %3066 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3058, i64 1
  %3067 = bitcast %"struct.std::__1::pair.1002"** %3066 to i64*
  %3068 = load i64, i64* %3067, align 8
  br label %3069

3069:                                             ; preds = %3065, %3056
  %3070 = phi i64 [ %3068, %3065 ], [ %3060, %3056 ]
  %3071 = phi %"struct.std::__1::pair.1002"** [ %3066, %3065 ], [ %3058, %3056 ]
  %3072 = inttoptr i64 %3070 to %"struct.std::__1::pair.1002"*
  %3073 = icmp eq %"struct.std::__1::pair.1002"* %3050, %3072
  br i1 %3073, label %3052, label %3056

3074:                                             ; preds = %3052, %3074
  %3075 = phi %"struct.std::__1::pair.1002"** [ %3079, %3074 ], [ %3032, %3052 ]
  %3076 = bitcast %"struct.std::__1::pair.1002"** %3075 to i8**
  %3077 = load i8*, i8** %3076, align 8
  call void @_ZdlPv(i8* %3077) #13
  %3078 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %324, align 8
  %3079 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3078, i64 1
  store %"struct.std::__1::pair.1002"** %3079, %"struct.std::__1::pair.1002"*** %324, align 8
  %3080 = load i64, i64* %328, align 8
  %3081 = ptrtoint %"struct.std::__1::pair.1002"** %3079 to i64
  %3082 = sub i64 %3080, %3081
  %3083 = ashr exact i64 %3082, 3
  %3084 = icmp ugt i64 %3083, 2
  br i1 %3084, label %3074, label %3085

3085:                                             ; preds = %3074
  %3086 = inttoptr i64 %3080 to %"struct.std::__1::pair.1002"**
  br label %3087

3087:                                             ; preds = %3085, %3052
  %3088 = phi %"struct.std::__1::pair.1002"** [ %3036, %3052 ], [ %3086, %3085 ]
  %3089 = phi %"struct.std::__1::pair.1002"** [ %3032, %3052 ], [ %3079, %3085 ]
  %3090 = phi i64 [ %3054, %3052 ], [ %3083, %3085 ]
  switch i64 %3090, label %3094 [
    i64 1, label %3092
    i64 2, label %3091
  ]

3091:                                             ; preds = %3087
  br label %3092

3092:                                             ; preds = %3087, %3091
  %3093 = phi i64 [ 256, %3091 ], [ 128, %3087 ]
  store i64 %3093, i64* %325, align 8
  br label %3094

3094:                                             ; preds = %3092, %3087
  %3095 = icmp eq %"struct.std::__1::pair.1002"** %3089, %3088
  br i1 %3095, label %3114, label %3096

3096:                                             ; preds = %3094, %3096
  %3097 = phi %"struct.std::__1::pair.1002"** [ %3100, %3096 ], [ %3089, %3094 ]
  %3098 = bitcast %"struct.std::__1::pair.1002"** %3097 to i8**
  %3099 = load i8*, i8** %3098, align 8
  call void @_ZdlPv(i8* %3099) #13
  %3100 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3097, i64 1
  %3101 = icmp eq %"struct.std::__1::pair.1002"** %3100, %3088
  br i1 %3101, label %3102, label %3096

3102:                                             ; preds = %3096
  %3103 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %324, align 8
  %3104 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %326, align 8
  %3105 = icmp eq %"struct.std::__1::pair.1002"** %3104, %3103
  br i1 %3105, label %3114, label %3106

3106:                                             ; preds = %3102
  %3107 = ptrtoint %"struct.std::__1::pair.1002"** %3103 to i64
  %3108 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3104, i64 -1
  %3109 = ptrtoint %"struct.std::__1::pair.1002"** %3108 to i64
  %3110 = sub i64 %3109, %3107
  %3111 = lshr i64 %3110, 3
  %3112 = xor i64 %3111, -1
  %3113 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3104, i64 %3112
  store %"struct.std::__1::pair.1002"** %3113, %"struct.std::__1::pair.1002"*** %326, align 8
  br label %3114

3114:                                             ; preds = %3106, %3102, %3094
  %3115 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %329, align 8
  %3116 = icmp eq %"struct.std::__1::pair.1002"** %3115, null
  br i1 %3116, label %3119, label %3117

3117:                                             ; preds = %3114
  %3118 = bitcast %"struct.std::__1::pair.1002"** %3115 to i8*
  call void @_ZdlPv(i8* %3118) #13
  br label %3119

3119:                                             ; preds = %3114, %3117
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %100) #12
  %3120 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %330, align 8
  %3121 = load i64, i64* %331, align 8
  %3122 = lshr i64 %3121, 8
  %3123 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3120, i64 %3122
  %3124 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %332, align 8
  %3125 = icmp eq %"struct.std::__1::pair.1002"** %3124, %3120
  %3126 = ptrtoint %"struct.std::__1::pair.1002"** %3124 to i64
  %3127 = ptrtoint %"struct.std::__1::pair.1002"** %3120 to i64
  br i1 %3125, label %3140, label %3128

3128:                                             ; preds = %3119
  %3129 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3123, align 8
  %3130 = and i64 %3121, 255
  %3131 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3129, i64 %3130
  %3132 = load i64, i64* %333, align 8
  %3133 = add i64 %3132, %3121
  %3134 = lshr i64 %3133, 8
  %3135 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3120, i64 %3134
  %3136 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3135, align 8
  %3137 = and i64 %3133, 255
  %3138 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3136, i64 %3137
  %3139 = icmp eq %"struct.std::__1::pair.1002"* %3138, %3131
  br i1 %3139, label %3140, label %3144

3140:                                             ; preds = %3157, %3119, %3128
  store i64 0, i64* %333, align 8
  %3141 = sub i64 %3126, %3127
  %3142 = ashr exact i64 %3141, 3
  %3143 = icmp ugt i64 %3142, 2
  br i1 %3143, label %3162, label %3175

3144:                                             ; preds = %3128, %3157
  %3145 = phi %"struct.std::__1::pair.1002"* [ %3160, %3157 ], [ %3131, %3128 ]
  %3146 = phi %"struct.std::__1::pair.1002"** [ %3159, %3157 ], [ %3123, %3128 ]
  %3147 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3145, i64 1
  %3148 = ptrtoint %"struct.std::__1::pair.1002"* %3147 to i64
  %3149 = bitcast %"struct.std::__1::pair.1002"** %3146 to i64*
  %3150 = load i64, i64* %3149, align 8
  %3151 = sub i64 %3148, %3150
  %3152 = icmp eq i64 %3151, 4096
  br i1 %3152, label %3153, label %3157

3153:                                             ; preds = %3144
  %3154 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3146, i64 1
  %3155 = bitcast %"struct.std::__1::pair.1002"** %3154 to i64*
  %3156 = load i64, i64* %3155, align 8
  br label %3157

3157:                                             ; preds = %3153, %3144
  %3158 = phi i64 [ %3156, %3153 ], [ %3148, %3144 ]
  %3159 = phi %"struct.std::__1::pair.1002"** [ %3154, %3153 ], [ %3146, %3144 ]
  %3160 = inttoptr i64 %3158 to %"struct.std::__1::pair.1002"*
  %3161 = icmp eq %"struct.std::__1::pair.1002"* %3138, %3160
  br i1 %3161, label %3140, label %3144

3162:                                             ; preds = %3140, %3162
  %3163 = phi %"struct.std::__1::pair.1002"** [ %3167, %3162 ], [ %3120, %3140 ]
  %3164 = bitcast %"struct.std::__1::pair.1002"** %3163 to i8**
  %3165 = load i8*, i8** %3164, align 8
  call void @_ZdlPv(i8* %3165) #13
  %3166 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %330, align 8
  %3167 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3166, i64 1
  store %"struct.std::__1::pair.1002"** %3167, %"struct.std::__1::pair.1002"*** %330, align 8
  %3168 = load i64, i64* %334, align 8
  %3169 = ptrtoint %"struct.std::__1::pair.1002"** %3167 to i64
  %3170 = sub i64 %3168, %3169
  %3171 = ashr exact i64 %3170, 3
  %3172 = icmp ugt i64 %3171, 2
  br i1 %3172, label %3162, label %3173

3173:                                             ; preds = %3162
  %3174 = inttoptr i64 %3168 to %"struct.std::__1::pair.1002"**
  br label %3175

3175:                                             ; preds = %3173, %3140
  %3176 = phi %"struct.std::__1::pair.1002"** [ %3124, %3140 ], [ %3174, %3173 ]
  %3177 = phi %"struct.std::__1::pair.1002"** [ %3120, %3140 ], [ %3167, %3173 ]
  %3178 = phi i64 [ %3142, %3140 ], [ %3171, %3173 ]
  switch i64 %3178, label %3182 [
    i64 1, label %3180
    i64 2, label %3179
  ]

3179:                                             ; preds = %3175
  br label %3180

3180:                                             ; preds = %3175, %3179
  %3181 = phi i64 [ 256, %3179 ], [ 128, %3175 ]
  store i64 %3181, i64* %331, align 8
  br label %3182

3182:                                             ; preds = %3180, %3175
  %3183 = icmp eq %"struct.std::__1::pair.1002"** %3177, %3176
  br i1 %3183, label %3202, label %3184

3184:                                             ; preds = %3182, %3184
  %3185 = phi %"struct.std::__1::pair.1002"** [ %3188, %3184 ], [ %3177, %3182 ]
  %3186 = bitcast %"struct.std::__1::pair.1002"** %3185 to i8**
  %3187 = load i8*, i8** %3186, align 8
  call void @_ZdlPv(i8* %3187) #13
  %3188 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3185, i64 1
  %3189 = icmp eq %"struct.std::__1::pair.1002"** %3188, %3176
  br i1 %3189, label %3190, label %3184

3190:                                             ; preds = %3184
  %3191 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %330, align 8
  %3192 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %332, align 8
  %3193 = icmp eq %"struct.std::__1::pair.1002"** %3192, %3191
  br i1 %3193, label %3202, label %3194

3194:                                             ; preds = %3190
  %3195 = ptrtoint %"struct.std::__1::pair.1002"** %3191 to i64
  %3196 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3192, i64 -1
  %3197 = ptrtoint %"struct.std::__1::pair.1002"** %3196 to i64
  %3198 = sub i64 %3197, %3195
  %3199 = lshr i64 %3198, 3
  %3200 = xor i64 %3199, -1
  %3201 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3192, i64 %3200
  store %"struct.std::__1::pair.1002"** %3201, %"struct.std::__1::pair.1002"*** %332, align 8
  br label %3202

3202:                                             ; preds = %3194, %3190, %3182
  %3203 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %335, align 8
  %3204 = icmp eq %"struct.std::__1::pair.1002"** %3203, null
  br i1 %3204, label %3207, label %3205

3205:                                             ; preds = %3202
  %3206 = bitcast %"struct.std::__1::pair.1002"** %3203 to i8*
  call void @_ZdlPv(i8* %3206) #13
  br label %3207

3207:                                             ; preds = %3202, %3205
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %90) #12
  %3208 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %107, align 8
  %3209 = load i64, i64* %108, align 8
  %3210 = lshr i64 %3209, 8
  %3211 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3208, i64 %3210
  %3212 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %109, align 8
  %3213 = icmp eq %"struct.std::__1::pair.1002"** %3212, %3208
  %3214 = ptrtoint %"struct.std::__1::pair.1002"** %3212 to i64
  %3215 = ptrtoint %"struct.std::__1::pair.1002"** %3208 to i64
  br i1 %3213, label %3228, label %3216

3216:                                             ; preds = %3207
  %3217 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3211, align 8
  %3218 = and i64 %3209, 255
  %3219 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3217, i64 %3218
  %3220 = load i64, i64* %110, align 8
  %3221 = add i64 %3220, %3209
  %3222 = lshr i64 %3221, 8
  %3223 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3208, i64 %3222
  %3224 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3223, align 8
  %3225 = and i64 %3221, 255
  %3226 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3224, i64 %3225
  %3227 = icmp eq %"struct.std::__1::pair.1002"* %3226, %3219
  br i1 %3227, label %3228, label %3232

3228:                                             ; preds = %3245, %3207, %3216
  store i64 0, i64* %110, align 8
  %3229 = sub i64 %3214, %3215
  %3230 = ashr exact i64 %3229, 3
  %3231 = icmp ugt i64 %3230, 2
  br i1 %3231, label %3250, label %3263

3232:                                             ; preds = %3216, %3245
  %3233 = phi %"struct.std::__1::pair.1002"* [ %3248, %3245 ], [ %3219, %3216 ]
  %3234 = phi %"struct.std::__1::pair.1002"** [ %3247, %3245 ], [ %3211, %3216 ]
  %3235 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3233, i64 1
  %3236 = ptrtoint %"struct.std::__1::pair.1002"* %3235 to i64
  %3237 = bitcast %"struct.std::__1::pair.1002"** %3234 to i64*
  %3238 = load i64, i64* %3237, align 8
  %3239 = sub i64 %3236, %3238
  %3240 = icmp eq i64 %3239, 4096
  br i1 %3240, label %3241, label %3245

3241:                                             ; preds = %3232
  %3242 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3234, i64 1
  %3243 = bitcast %"struct.std::__1::pair.1002"** %3242 to i64*
  %3244 = load i64, i64* %3243, align 8
  br label %3245

3245:                                             ; preds = %3241, %3232
  %3246 = phi i64 [ %3244, %3241 ], [ %3236, %3232 ]
  %3247 = phi %"struct.std::__1::pair.1002"** [ %3242, %3241 ], [ %3234, %3232 ]
  %3248 = inttoptr i64 %3246 to %"struct.std::__1::pair.1002"*
  %3249 = icmp eq %"struct.std::__1::pair.1002"* %3226, %3248
  br i1 %3249, label %3228, label %3232

3250:                                             ; preds = %3228, %3250
  %3251 = phi %"struct.std::__1::pair.1002"** [ %3255, %3250 ], [ %3208, %3228 ]
  %3252 = bitcast %"struct.std::__1::pair.1002"** %3251 to i8**
  %3253 = load i8*, i8** %3252, align 8
  call void @_ZdlPv(i8* %3253) #13
  %3254 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %107, align 8
  %3255 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3254, i64 1
  store %"struct.std::__1::pair.1002"** %3255, %"struct.std::__1::pair.1002"*** %107, align 8
  %3256 = load i64, i64* %336, align 8
  %3257 = ptrtoint %"struct.std::__1::pair.1002"** %3255 to i64
  %3258 = sub i64 %3256, %3257
  %3259 = ashr exact i64 %3258, 3
  %3260 = icmp ugt i64 %3259, 2
  br i1 %3260, label %3250, label %3261

3261:                                             ; preds = %3250
  %3262 = inttoptr i64 %3256 to %"struct.std::__1::pair.1002"**
  br label %3263

3263:                                             ; preds = %3261, %3228
  %3264 = phi %"struct.std::__1::pair.1002"** [ %3212, %3228 ], [ %3262, %3261 ]
  %3265 = phi %"struct.std::__1::pair.1002"** [ %3208, %3228 ], [ %3255, %3261 ]
  %3266 = phi i64 [ %3230, %3228 ], [ %3259, %3261 ]
  switch i64 %3266, label %3270 [
    i64 1, label %3268
    i64 2, label %3267
  ]

3267:                                             ; preds = %3263
  br label %3268

3268:                                             ; preds = %3263, %3267
  %3269 = phi i64 [ 256, %3267 ], [ 128, %3263 ]
  store i64 %3269, i64* %108, align 8
  br label %3270

3270:                                             ; preds = %3268, %3263
  %3271 = icmp eq %"struct.std::__1::pair.1002"** %3265, %3264
  br i1 %3271, label %3290, label %3272

3272:                                             ; preds = %3270, %3272
  %3273 = phi %"struct.std::__1::pair.1002"** [ %3276, %3272 ], [ %3265, %3270 ]
  %3274 = bitcast %"struct.std::__1::pair.1002"** %3273 to i8**
  %3275 = load i8*, i8** %3274, align 8
  call void @_ZdlPv(i8* %3275) #13
  %3276 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3273, i64 1
  %3277 = icmp eq %"struct.std::__1::pair.1002"** %3276, %3264
  br i1 %3277, label %3278, label %3272

3278:                                             ; preds = %3272
  %3279 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %107, align 8
  %3280 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %109, align 8
  %3281 = icmp eq %"struct.std::__1::pair.1002"** %3280, %3279
  br i1 %3281, label %3290, label %3282

3282:                                             ; preds = %3278
  %3283 = ptrtoint %"struct.std::__1::pair.1002"** %3279 to i64
  %3284 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3280, i64 -1
  %3285 = ptrtoint %"struct.std::__1::pair.1002"** %3284 to i64
  %3286 = sub i64 %3285, %3283
  %3287 = lshr i64 %3286, 3
  %3288 = xor i64 %3287, -1
  %3289 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3280, i64 %3288
  store %"struct.std::__1::pair.1002"** %3289, %"struct.std::__1::pair.1002"*** %109, align 8
  br label %3290

3290:                                             ; preds = %3282, %3278, %3270
  %3291 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %337, align 8
  %3292 = icmp eq %"struct.std::__1::pair.1002"** %3291, null
  br i1 %3292, label %3295, label %3293

3293:                                             ; preds = %3290
  %3294 = bitcast %"struct.std::__1::pair.1002"** %3291 to i8*
  call void @_ZdlPv(i8* %3294) #13
  br label %3295

3295:                                             ; preds = %3290, %3293
  %3296 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %96, align 8
  %3297 = load i64, i64* %97, align 8
  %3298 = lshr i64 %3297, 8
  %3299 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3296, i64 %3298
  %3300 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %98, align 8
  %3301 = icmp eq %"struct.std::__1::pair.1002"** %3300, %3296
  %3302 = ptrtoint %"struct.std::__1::pair.1002"** %3300 to i64
  %3303 = ptrtoint %"struct.std::__1::pair.1002"** %3296 to i64
  br i1 %3301, label %3316, label %3304

3304:                                             ; preds = %3295
  %3305 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3299, align 8
  %3306 = and i64 %3297, 255
  %3307 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3305, i64 %3306
  %3308 = load i64, i64* %99, align 8
  %3309 = add i64 %3308, %3297
  %3310 = lshr i64 %3309, 8
  %3311 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3296, i64 %3310
  %3312 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3311, align 8
  %3313 = and i64 %3309, 255
  %3314 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3312, i64 %3313
  %3315 = icmp eq %"struct.std::__1::pair.1002"* %3314, %3307
  br i1 %3315, label %3316, label %3320

3316:                                             ; preds = %3333, %3295, %3304
  store i64 0, i64* %99, align 8
  %3317 = sub i64 %3302, %3303
  %3318 = ashr exact i64 %3317, 3
  %3319 = icmp ugt i64 %3318, 2
  br i1 %3319, label %3338, label %3351

3320:                                             ; preds = %3304, %3333
  %3321 = phi %"struct.std::__1::pair.1002"* [ %3336, %3333 ], [ %3307, %3304 ]
  %3322 = phi %"struct.std::__1::pair.1002"** [ %3335, %3333 ], [ %3299, %3304 ]
  %3323 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %3321, i64 1
  %3324 = ptrtoint %"struct.std::__1::pair.1002"* %3323 to i64
  %3325 = bitcast %"struct.std::__1::pair.1002"** %3322 to i64*
  %3326 = load i64, i64* %3325, align 8
  %3327 = sub i64 %3324, %3326
  %3328 = icmp eq i64 %3327, 4096
  br i1 %3328, label %3329, label %3333

3329:                                             ; preds = %3320
  %3330 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3322, i64 1
  %3331 = bitcast %"struct.std::__1::pair.1002"** %3330 to i64*
  %3332 = load i64, i64* %3331, align 8
  br label %3333

3333:                                             ; preds = %3329, %3320
  %3334 = phi i64 [ %3332, %3329 ], [ %3324, %3320 ]
  %3335 = phi %"struct.std::__1::pair.1002"** [ %3330, %3329 ], [ %3322, %3320 ]
  %3336 = inttoptr i64 %3334 to %"struct.std::__1::pair.1002"*
  %3337 = icmp eq %"struct.std::__1::pair.1002"* %3314, %3336
  br i1 %3337, label %3316, label %3320

3338:                                             ; preds = %3316, %3338
  %3339 = phi %"struct.std::__1::pair.1002"** [ %3343, %3338 ], [ %3296, %3316 ]
  %3340 = bitcast %"struct.std::__1::pair.1002"** %3339 to i8**
  %3341 = load i8*, i8** %3340, align 8
  call void @_ZdlPv(i8* %3341) #13
  %3342 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %96, align 8
  %3343 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3342, i64 1
  store %"struct.std::__1::pair.1002"** %3343, %"struct.std::__1::pair.1002"*** %96, align 8
  %3344 = load i64, i64* %338, align 8
  %3345 = ptrtoint %"struct.std::__1::pair.1002"** %3343 to i64
  %3346 = sub i64 %3344, %3345
  %3347 = ashr exact i64 %3346, 3
  %3348 = icmp ugt i64 %3347, 2
  br i1 %3348, label %3338, label %3349

3349:                                             ; preds = %3338
  %3350 = inttoptr i64 %3344 to %"struct.std::__1::pair.1002"**
  br label %3351

3351:                                             ; preds = %3349, %3316
  %3352 = phi %"struct.std::__1::pair.1002"** [ %3300, %3316 ], [ %3350, %3349 ]
  %3353 = phi %"struct.std::__1::pair.1002"** [ %3296, %3316 ], [ %3343, %3349 ]
  %3354 = phi i64 [ %3318, %3316 ], [ %3347, %3349 ]
  switch i64 %3354, label %3358 [
    i64 1, label %3356
    i64 2, label %3355
  ]

3355:                                             ; preds = %3351
  br label %3356

3356:                                             ; preds = %3351, %3355
  %3357 = phi i64 [ 256, %3355 ], [ 128, %3351 ]
  store i64 %3357, i64* %97, align 8
  br label %3358

3358:                                             ; preds = %3356, %3351
  %3359 = icmp eq %"struct.std::__1::pair.1002"** %3353, %3352
  br i1 %3359, label %3378, label %3360

3360:                                             ; preds = %3358, %3360
  %3361 = phi %"struct.std::__1::pair.1002"** [ %3364, %3360 ], [ %3353, %3358 ]
  %3362 = bitcast %"struct.std::__1::pair.1002"** %3361 to i8**
  %3363 = load i8*, i8** %3362, align 8
  call void @_ZdlPv(i8* %3363) #13
  %3364 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3361, i64 1
  %3365 = icmp eq %"struct.std::__1::pair.1002"** %3364, %3352
  br i1 %3365, label %3366, label %3360

3366:                                             ; preds = %3360
  %3367 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %96, align 8
  %3368 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %98, align 8
  %3369 = icmp eq %"struct.std::__1::pair.1002"** %3368, %3367
  br i1 %3369, label %3378, label %3370

3370:                                             ; preds = %3366
  %3371 = ptrtoint %"struct.std::__1::pair.1002"** %3367 to i64
  %3372 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3368, i64 -1
  %3373 = ptrtoint %"struct.std::__1::pair.1002"** %3372 to i64
  %3374 = sub i64 %3373, %3371
  %3375 = lshr i64 %3374, 3
  %3376 = xor i64 %3375, -1
  %3377 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %3368, i64 %3376
  store %"struct.std::__1::pair.1002"** %3377, %"struct.std::__1::pair.1002"*** %98, align 8
  br label %3378

3378:                                             ; preds = %3370, %3366, %3358
  %3379 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %339, align 8
  %3380 = icmp eq %"struct.std::__1::pair.1002"** %3379, null
  br i1 %3380, label %3383, label %3381

3381:                                             ; preds = %3378
  %3382 = bitcast %"struct.std::__1::pair.1002"** %3379 to i8*
  call void @_ZdlPv(i8* %3382) #13
  br label %3383

3383:                                             ; preds = %3378, %3381
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %67) #12
  %3384 = and i8 %3030, 1
  %3385 = icmp eq i8 %3384, 0
  br i1 %3385, label %3386, label %340

3386:                                             ; preds = %3383
  %3387 = and i8 %3031, 1
  %3388 = icmp ne i8 %3387, 0
  %3389 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %59, align 8
  %3390 = icmp eq %"struct.std::__1::__hash_node_base.915"* %3389, null
  br i1 %3390, label %3397, label %3391

3391:                                             ; preds = %3386, %3391
  %3392 = phi %"struct.std::__1::__hash_node_base.915"* [ %3394, %3391 ], [ %3389, %3386 ]
  %3393 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %3392, i64 0, i32 0
  %3394 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3393, align 8
  %3395 = bitcast %"struct.std::__1::__hash_node_base.915"* %3392 to i8*
  call void @_ZdlPv(i8* %3395) #13
  %3396 = icmp eq %"struct.std::__1::__hash_node_base.915"* %3394, null
  br i1 %3396, label %3397, label %3391

3397:                                             ; preds = %3391, %3386
  %3398 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %57, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %57, align 8
  %3399 = icmp eq %"struct.std::__1::__hash_node_base.915"** %3398, null
  br i1 %3399, label %3402, label %3400

3400:                                             ; preds = %3397
  %3401 = bitcast %"struct.std::__1::__hash_node_base.915"** %3398 to i8*
  call void @_ZdlPv(i8* %3401) #13
  br label %3402

3402:                                             ; preds = %3397, %3400
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #12
  ret i1 %3388
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt16LoopUnswitchPassD0Ev(%"class.spvtools::opt::LoopUnswitchPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopUnswitchPass", %"class.spvtools::opt::LoopUnswitchPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopUnswitchPass", %"class.spvtools::opt::LoopUnswitchPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopUnswitchPass", %"class.spvtools::opt::LoopUnswitchPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::LoopUnswitchPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt16LoopUnswitchPass4nameEv(%"class.spvtools::opt::LoopUnswitchPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK8spvtools3opt4Loop13IsSafeToCloneEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !15
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #12
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #12
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !15
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !15
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #12
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !15
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #12
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #12
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !15
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #12
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #12
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !15
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !15
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #12
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !15
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #12
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #12
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #13
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #13
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !15
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !15
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !15
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !15
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !15
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !15
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !15
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !15
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #12
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !15
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !15
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !15
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !15
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #12
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS0_11InstructionEPKNS0_10BasicBlockERKNS0_13DominatorTreeE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::DominatorTree"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1108", align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::function.1081", align 8
  %9 = alloca %"class.std::__1::function.1087", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, i64 0, i32 3
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #13
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #12
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #12
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #12
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  br label %40

40:                                               ; preds = %4, %37
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !15
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !15
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %50) #12
  br label %52

52:                                               ; preds = %40, %47
  %53 = phi i32 [ %51, %47 ], [ 0, %40 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %111, label %58

58:                                               ; preds = %52
  %59 = tail call i64 @llvm.ctpop.i64(i64 %56) #12, !range !8
  %60 = icmp ugt i64 %59, 1
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = add i64 %56, 4294967295
  %63 = and i64 %62, %54
  br label %68

64:                                               ; preds = %58
  %65 = icmp ugt i64 %56, %54
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %54, %56
  br label %68

68:                                               ; preds = %66, %64, %61
  %69 = phi i64 [ %63, %61 ], [ %67, %66 ], [ %54, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::unordered_map.1013", %"class.std::__1::unordered_map.1013"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %71, i64 %69
  %73 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %73, null
  br i1 %74, label %111, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %73, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %77, null
  br i1 %78, label %111, label %79

79:                                               ; preds = %75
  %80 = add i64 %56, -1
  br label %81

81:                                               ; preds = %102, %79
  %82 = phi %"struct.std::__1::__hash_node_base.1018"* [ %77, %79 ], [ %104, %102 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %82, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1018"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %54
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  br i1 %60, label %90, label %88

88:                                               ; preds = %87
  %89 = and i64 %85, %80
  br label %94

90:                                               ; preds = %87
  %91 = icmp ult i64 %85, %56
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = urem i64 %85, %56
  br label %94

94:                                               ; preds = %92, %90, %88
  %95 = phi i64 [ %89, %88 ], [ %93, %92 ], [ %85, %90 ]
  %96 = icmp eq i64 %95, %69
  br i1 %96, label %102, label %111

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %82, i64 2
  %99 = bitcast %"struct.std::__1::__hash_node_base.1018"* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, %53
  br i1 %101, label %106, label %102

102:                                              ; preds = %97, %94
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %82, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %104, null
  br i1 %105, label %111, label %81

106:                                              ; preds = %97
  %107 = bitcast %"struct.std::__1::__hash_node_base.1018"* %98 to %"struct.std::__1::pair.1079"*
  %108 = getelementptr inbounds %"struct.std::__1::pair.1079", %"struct.std::__1::pair.1079"* %107, i64 0, i32 1
  %109 = load i8, i8* %108, align 4, !range !15
  %110 = icmp ne i8 %109, 0
  br label %304

111:                                              ; preds = %94, %102, %68, %52, %75
  %112 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 11
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %138

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = bitcast %"class.spvtools::opt::Module"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i8* @_Znwm(i64 48) #13
  %122 = bitcast i8* %121 to %"class.spvtools::opt::analysis::DecorationManager"*
  %123 = getelementptr inbounds i8, i8* %121, i64 32
  %124 = bitcast i8* %123 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %121, i64 40
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %122) #12
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 7
  %128 = ptrtoint i8* %121 to i64
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %127, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %129, align 8
  %131 = bitcast %"class.std::__1::unique_ptr.122"* %127 to i64*
  store i64 %128, i64* %131, align 8
  %132 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %130, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %117
  %134 = bitcast %"class.std::__1::unique_ptr.122"* %127 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %134, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %130) #12
  br label %135

135:                                              ; preds = %133, %117
  %136 = load i32, i32* %113, align 8
  %137 = or i32 %136, 4
  store i32 %137, i32* %113, align 8
  br label %138

138:                                              ; preds = %111, %135
  %139 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 7, i32 0, i32 0, i32 0
  %140 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %139, align 8
  %141 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #12
  %142 = load i8, i8* %44, align 1, !range !15
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %146 = load i8, i8* %145, align 4, !range !15
  %147 = zext i8 %146 to i32
  %148 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %147) #12
  br label %149

149:                                              ; preds = %138, %144
  %150 = phi i32 [ %148, %144 ], [ 0, %138 ]
  store i32 %150, i32* %7, align 4
  %151 = getelementptr inbounds %"class.std::__1::unordered_map.1013", %"class.std::__1::unordered_map.1013"* %43, i64 0, i32 0
  %152 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #12
  %153 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %154) #12
  %155 = call { %"struct.std::__1::__hash_node_base.1018"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1014"* %151, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %6) #12
  %156 = extractvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } %155, 0
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %156, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1018"* %157 to %"struct.std::__1::pair.1079"*
  %159 = getelementptr inbounds %"struct.std::__1::pair.1079", %"struct.std::__1::pair.1079"* %158, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %154) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #12
  store i8 0, i8* %159, align 1
  %160 = load i8, i8* %44, align 1, !range !15
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %149
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %164 = load i8, i8* %163, align 4, !range !15
  %165 = zext i8 %164 to i32
  %166 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %165) #12
  br label %167

167:                                              ; preds = %149, %162
  %168 = phi i32 [ %166, %162 ], [ 0, %149 ]
  %169 = ptrtoint i8* %159 to i64
  %170 = getelementptr inbounds %"class.std::__1::function.1081", %"class.std::__1::function.1081"* %8, i64 0, i32 0, i32 1, i32 0
  %171 = getelementptr inbounds %"class.std::__1::function.1081", %"class.std::__1::function.1081"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPS4_PKNS3_10BasicBlockERKNS3_13DominatorTreeEEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %170, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlRKS8_E_FbSH_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %171, align 8
  %172 = bitcast %"class.std::__1::function.1081"* %8 to i64*
  store i64 %169, i64* %172, align 8
  %173 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %140, i32 %168, i32 26, %"class.std::__1::function.1081"* nonnull %8) #12
  %174 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %171, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %174, i64 0, i32 1
  %176 = load void (i8*)*, void (i8*)** %175, align 8
  %177 = icmp eq void (i8*)* %176, null
  br i1 %177, label %181, label %178

178:                                              ; preds = %167
  %179 = getelementptr inbounds %"class.std::__1::function.1081", %"class.std::__1::function.1081"* %8, i64 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  call void %176(i8* %180) #12
  br label %181

181:                                              ; preds = %167, %178
  %182 = load i8, i8* %159, align 1, !range !15
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %304

184:                                              ; preds = %181
  %185 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %186 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %185, %"class.spvtools::opt::Instruction"* %1)
  %187 = icmp eq %"class.spvtools::opt::BasicBlock"* %186, null
  br i1 %187, label %188, label %189

188:                                              ; preds = %184
  store i8 1, i8* %159, align 1
  br label %304

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %186, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, align 8
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %191, i64 0, i32 4
  %193 = load i8, i8* %192, align 1, !range !15
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %200, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %191, i64 0, i32 3
  %197 = load i8, i8* %196, align 4, !range !15
  %198 = zext i8 %197 to i32
  %199 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %191, i32 %198) #12
  br label %200

200:                                              ; preds = %189, %195
  %201 = phi i32 [ %199, %195 ], [ 0, %189 ]
  %202 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %202, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 4
  %205 = load i8, i8* %204, align 1, !range !15
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 3
  %209 = load i8, i8* %208, align 4, !range !15
  %210 = zext i8 %209 to i32
  %211 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %203, i32 %210) #12
  br label %212

212:                                              ; preds = %200, %207
  %213 = phi i32 [ %211, %207 ], [ 0, %200 ]
  %214 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %3, i32 %201, i32 %213) #12
  br i1 %214, label %216, label %215

215:                                              ; preds = %212
  store i8 0, i8* %159, align 1
  br label %304

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 61
  br i1 %219, label %220, label %254

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %222 = load i8, i8* %221, align 4, !range !15
  %223 = icmp eq i8 %222, 0
  %224 = load i8, i8* %44, align 1, !range !15
  %225 = icmp eq i8 %224, 0
  %226 = select i1 %225, i32 1, i32 2
  %227 = xor i1 %225, true
  %228 = zext i1 %227 to i32
  %229 = select i1 %223, i32 %228, i32 %226
  %230 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %229) #12
  %231 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %42, i32 %230) #12
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 3
  %233 = load i8, i8* %232, align 4, !range !15
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %220
  %236 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %231, i32 0) #12
  br label %237

237:                                              ; preds = %220, %235
  %238 = phi i32 [ %236, %235 ], [ 0, %220 ]
  %239 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %42, i32 %238) #12
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 3
  %241 = load i8, i8* %240, align 4, !range !15
  %242 = icmp eq i8 %241, 0
  %243 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 4
  %244 = load i8, i8* %243, align 1, !range !15
  %245 = icmp eq i8 %244, 0
  %246 = select i1 %245, i32 1, i32 2
  %247 = xor i1 %245, true
  %248 = zext i1 %247 to i32
  %249 = select i1 %242, i32 %248, i32 %246
  %250 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %239, i32 %249) #12
  %251 = and i32 %250, -3
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %237
  store i8 0, i8* %159, align 1
  br label %304

254:                                              ; preds = %216
  %255 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %256 = call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %255, %"class.spvtools::opt::Instruction"* %1)
  br i1 %256, label %258, label %257

257:                                              ; preds = %254
  store i8 0, i8* %159, align 1
  br label %304

258:                                              ; preds = %237, %254
  %259 = bitcast %"class.std::__1::function.1087"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %259) #12
  %260 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %9, i64 0, i32 0, i32 1, i32 0
  %261 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %9, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS8_11InstructionEPKNS8_10BasicBlockERKNS8_13DominatorTreeEEUlPKjE_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %260, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %261, align 8
  %262 = call i8* @_Znwm(i64 24) #13, !noalias !42
  %263 = bitcast i8* %262 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %2, %"class.spvtools::opt::BasicBlock"** %263, align 8
  %264 = getelementptr inbounds i8, i8* %262, i64 8
  %265 = bitcast i8* %264 to %"class.spvtools::opt::DominatorTree"**
  store %"class.spvtools::opt::DominatorTree"* %3, %"class.spvtools::opt::DominatorTree"** %265, align 8
  %266 = getelementptr inbounds i8, i8* %262, i64 16
  %267 = bitcast i8* %266 to %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"**
  store %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %267, align 8
  %268 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %262, i8** %268, align 8
  %269 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %270 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %269, align 8
  %271 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %272 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %271, align 8
  %273 = icmp eq %"struct.spvtools::opt::Operand"* %270, %272
  br i1 %273, label %294, label %274

274:                                              ; preds = %258
  %275 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %9, i64 0, i32 0, i32 0
  br label %276

276:                                              ; preds = %291, %274
  %277 = phi %"struct.spvtools::opt::Operand"* [ %270, %274 ], [ %292, %291 ]
  %278 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %277, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %279) #12
  br i1 %280, label %281, label %291

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %277, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %283 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %282, align 8
  %284 = icmp eq %"class.std::__1::vector.3"* %283, null
  %285 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %283, i64 0, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %277, i64 0, i32 1, i32 2
  %287 = select i1 %284, i32** %286, i32** %285
  %288 = load i32*, i32** %287, align 8
  %289 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %260, align 8
  %290 = call zeroext i1 %289(%"union.std::__1::__function::__policy_storage"* nonnull %275, i32* %288) #12
  br i1 %290, label %291, label %294

291:                                              ; preds = %281, %276
  %292 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %277, i64 1
  %293 = icmp eq %"struct.spvtools::opt::Operand"* %292, %272
  br i1 %293, label %294, label %276

294:                                              ; preds = %281, %291, %258
  %295 = phi i1 [ true, %258 ], [ false, %281 ], [ true, %291 ]
  %296 = zext i1 %295 to i8
  store i8 %296, i8* %159, align 1
  %297 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %261, align 8
  %298 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %297, i64 0, i32 1
  %299 = load void (i8*)*, void (i8*)** %298, align 8
  %300 = icmp eq void (i8*)* %299, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %294
  %302 = load i8*, i8** %268, align 8
  call void %299(i8* %302) #12
  br label %303

303:                                              ; preds = %294, %301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %259) #12
  br label %304

304:                                              ; preds = %181, %253, %303, %257, %215, %188, %106
  %305 = phi i1 [ %110, %106 ], [ true, %181 ], [ %295, %303 ], [ false, %257 ], [ false, %215 ], [ true, %188 ], [ false, %253 ]
  ret i1 %305
}

declare %"class.spvtools::opt::PostDominatorAnalysis"* @_ZN8spvtools3opt9IRContext24GetPostDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.1081"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #12, !range !8
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1108", align 1
  %5 = alloca %"class.std::__1::tuple.1166", align 8
  %6 = alloca %"class.std::__1::tuple.1108", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #12
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #12
  %24 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %4) #12
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.230"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #12, !range !8
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.230"* %26 to %"struct.std::__1::__hash_node_base.948"***
  %46 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.948"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.948"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.948"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.948"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.948"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.948"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !15
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !15
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #12
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !15
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !15
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #12
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.1166"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #12
  %108 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1166"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %6) #12
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.230"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #12, !range !8
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to %"struct.std::__1::__hash_node_base.948"***
  %129 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.948"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.948"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.948"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.948"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.948"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.948"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.948"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #12
  %167 = icmp ne %"struct.std::__1::__hash_node_base.948"* %166, null
  ret i1 %167
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1018"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1014"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.1018"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1018"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1018"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #13, !noalias !47
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !47
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !47
  store i32 %62, i32* %61, align 4, !noalias !47
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  store i8 0, i8* %63, align 4, !noalias !47
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !47
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1018"**
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %66, align 8, !noalias !47
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #12
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #12, !range !8
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.1018"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.1018"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.1018"* %109, %"struct.std::__1::__hash_node_base.1018"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.1018"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #12, !range !8
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.1018"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.1018"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.1018"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1018"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.1018"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } undef, %"struct.std::__1::__hash_node_base.1018"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.1018"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1014"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1014"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1018"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1020", %"class.std::__1::__bucket_list_deallocator.1020"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !50

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1018"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1018"* %36, %"struct.std::__1::__hash_node_base.1018"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1018"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1018"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1018"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1018"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1018"* %82, %"struct.std::__1::__hash_node_base.1018"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1018"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1018"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1018"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1018"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1018"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1018"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1018"* %80, %"struct.std::__1::__hash_node_base.1018"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1018"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1018"** null, %"struct.std::__1::__hash_node_base.1018"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1018"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1020", %"class.std::__1::__bucket_list_deallocator.1020"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPS4_PKNS3_10BasicBlockERKNS3_13DominatorTreeEEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readnone dereferenceable(112)) #8 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8 1, i8* %4, align 1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1142", align 8
  %3 = alloca %"class.std::__1::tuple.1108", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1129", align 8
  %6 = alloca %"class.std::__1::function.1120", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !52

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1120"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1120"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1129"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1120"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1129"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1129", %"class.std::__1::function.1129"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1142"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1142", %"class.std::__1::tuple.1142"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #12
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1142"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %3) #12
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !15
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !15
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #12
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #12
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #12
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1120"**
  %4 = load %"class.std::__1::function.1120"*, %"class.std::__1::function.1120"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1142", align 8
  %4 = alloca %"class.std::__1::tuple.1108", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1142"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::tuple.1142", %"class.std::__1::tuple.1142"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1142"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %4) #12
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1142"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !8
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !53
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1142"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !53
  %75 = load i64, i64* %74, align 8, !noalias !53
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !53
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !53
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !53
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !53
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !8
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !8
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !8
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !56

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #13, !noalias !57
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !57
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !57
  store i32 %62, i32* %61, align 8, !noalias !57
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #12, !noalias !57
  store i32 1065353216, i32* %65, align 4, !noalias !57
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !57
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !57
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #12
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #12, !range !8
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #12, !range !8
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.226"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.230"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.230"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !60

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.230"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.230"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.230"* %36, %"struct.std::__1::__hash_node_base.230"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.230"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.230"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.230"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.230"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.230"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.230"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.230"* %82, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.230"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.230"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.230"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.230"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.230"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.230"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.230"* %80, %"struct.std::__1::__hash_node_base.230"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.230"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.230"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.230"** null, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.230"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.230"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1166"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #13, !noalias !61
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !61
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !61
  store i32 %62, i32* %61, align 8, !noalias !61
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #12, !noalias !61
  store i32 1065353216, i32* %65, align 4, !noalias !61
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !61
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !61
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #12
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #12, !range !8
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #12, !range !8
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS8_11InstructionEPKNS8_10BasicBlockERKNS8_13DominatorTreeEEUlPKjE_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1175"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1175"*, %"class.std::__1::__function::__default_alloc_func.1175"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1175", %"class.std::__1::__function::__default_alloc_func.1175"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %6, i64 0, i32 3
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 104) #13
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DefUseManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 64
  %24 = getelementptr inbounds i8, i8* %16, i64 96
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %25, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %17, %"class.spvtools::opt::Module"* %15) #12
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6
  %27 = ptrtoint i8* %16 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %26 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %26 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %33, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %29) #12
  br label %34

34:                                               ; preds = %32, %13
  %35 = load i32, i32* %9, align 8
  %36 = or i32 %35, 1
  store i32 %36, i32* %9, align 8
  br label %37

37:                                               ; preds = %2, %34
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load i32, i32* %1, align 4
  %41 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %39, i32 %40) #12
  %42 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1175", %"class.std::__1::__function::__default_alloc_func.1175"* %4, i64 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1175", %"class.std::__1::__function::__default_alloc_func.1175"* %4, i64 0, i32 0, i32 1
  %45 = load %"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::DominatorTree"** %44, align 8
  %46 = tail call fastcc zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS0_11InstructionEPKNS0_10BasicBlockERKNS0_13DominatorTreeE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %6, %"class.spvtools::opt::Instruction"* %41, %"class.spvtools::opt::BasicBlock"* %43, %"class.spvtools::opt::DominatorTree"* dereferenceable(56) %45) #12
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEPvPKv(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEEvPv(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch16CreateBasicBlockENS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEE(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* nocapture readonly, %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1142", align 8
  %5 = alloca %"class.std::__1::tuple.1108", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::unique_ptr.40", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = ptrtoint %"class.std::__1::unique_ptr.40"* %2 to i64
  %10 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, i64 0, i32 3
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #13
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #12
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #12
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #12
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  br label %40

40:                                               ; preds = %3, %37
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = tail call i8* @_Znwm(i64 136) #13
  %44 = tail call i8* @_Znwm(i64 112) #13
  %45 = bitcast i8* %44 to %"class.spvtools::opt::Instruction"*
  %46 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %47, align 8
  %49 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %48) #12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 2
  %53 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !15
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %51
  %58 = tail call i8* @_Znwm(i64 48) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 37, i1 false) #12
  %59 = getelementptr inbounds i8, i8* %58, i64 37
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 1, i32 0
  %61 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 0
  tail call void %61(%"union.std::__1::__function::__policy_storage"* %62, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.5, i8* nonnull %58) #12
  tail call void @_ZdlPv(i8* nonnull %58) #13
  br label %63

63:                                               ; preds = %40, %51, %57
  %64 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #12
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %45, %"class.spvtools::opt::IRContext"* %46, i32 248, i32 0, i32 %49, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #12
  %65 = ptrtoint i8* %44 to i64
  %66 = bitcast i8* %43 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %66, align 8
  %67 = getelementptr inbounds i8, i8* %43, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 %65, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %43, i64 16
  %70 = bitcast i8* %69 to i32 (...)***
  %71 = getelementptr inbounds i8, i8* %43, i64 24
  %72 = bitcast i8* %71 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %43, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %74 = getelementptr inbounds i8, i8* %43, i64 56
  %75 = getelementptr inbounds i8, i8* %43, i64 72
  %76 = bitcast i8* %75 to i32*
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %43, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 14, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 56, i1 false) #12
  %78 = bitcast i8* %73 to i8**
  store i8* %71, i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %43, i64 40
  %80 = bitcast i8* %79 to i8**
  store i8* %71, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %43, i64 48
  store i8 1, i8* %81, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i8**
  store i8* %43, i8** %84, align 8
  %85 = bitcast %"class.std::__1::vector.38"* %1 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %9, %86
  %88 = ashr exact i64 %87, 3
  %89 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %1, %"class.std::__1::unique_ptr.40"* %2, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %7) #12
  %90 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %90, align 8
  %92 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %83, align 8
  %93 = icmp eq %"class.spvtools::opt::BasicBlock"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %63
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %7 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %95, %"class.spvtools::opt::BasicBlock"* nonnull %92) #12
  br label %96

96:                                               ; preds = %63, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %91, i64 %88, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %100 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %99, align 8
  %101 = icmp eq %"struct.spvtools::opt::Operand"* %100, null
  br i1 %101, label %132, label %102

102:                                              ; preds = %96
  %103 = bitcast %"struct.spvtools::opt::Operand"* %100 to i8*
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %105 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %104, align 8
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %105, %100
  br i1 %106, label %130, label %107

107:                                              ; preds = %102, %125
  %108 = phi %"struct.spvtools::opt::Operand"* [ %109, %125 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %108, i64 -1
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %108, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %108, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %111, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %111, align 8
  %113 = icmp eq %"class.std::__1::vector.3"* %112, null
  br i1 %113, label %125, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %112, i64 0, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %114
  %119 = ptrtoint i32* %116 to i64
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %112, i64 0, i32 0, i32 1
  %121 = bitcast i32** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = bitcast i32* %116 to i8*
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %118, %114
  %124 = bitcast %"class.std::__1::vector.3"* %112 to i8*
  call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %123, %107
  %126 = icmp eq %"struct.spvtools::opt::Operand"* %109, %100
  br i1 %126, label %127, label %107

127:                                              ; preds = %125
  %128 = bitcast %"class.std::__1::vector"* %8 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %102
  %131 = phi i8* [ %129, %127 ], [ %103, %102 ]
  store %"struct.spvtools::opt::Operand"* %100, %"struct.spvtools::opt::Operand"** %104, align 8
  call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %96, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  %133 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.spvtools::opt::BasicBlock"* %98 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %137 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %42, %"class.spvtools::opt::Instruction"* %137) #12
  %138 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %139 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141)
  %142 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  store i64 %140, i64* %142, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %138, i64 0, i32 11
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %156, label %147

147:                                              ; preds = %132
  %148 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %138, i64 0, i32 9, i32 0
  %149 = bitcast %"class.std::__1::tuple.1142"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #12
  %150 = getelementptr inbounds %"class.std::__1::tuple.1142", %"class.std::__1::tuple.1142"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %151) #12
  %152 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %148, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1142"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %5) #12
  %153 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %152, 0
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %153, i64 3
  %155 = bitcast %"struct.std::__1::__hash_node_base.178"* %154 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #12
  store %"class.spvtools::opt::BasicBlock"* %98, %"class.spvtools::opt::BasicBlock"** %155, align 8
  br label %156

156:                                              ; preds = %132, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141)
  ret %"class.spvtools::opt::BasicBlock"* %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #13
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #12
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #12
  %33 = call i8* @_Znwm(i64 48) #13
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #12
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #12
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #12
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret %"class.spvtools::opt::Instruction"* %123
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1179"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"*, i32) local_unnamed_addr #2

declare %"struct.spvtools::opt::DominatorTreeNode"* @_ZN8spvtools3opt13DominatorTree15GetOrInsertNodeEPNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt13DominatorTree16ResetDFNumberingEv(%"class.spvtools::opt::DominatorTree"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.1037"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %6, align 8
  %8 = icmp eq %"class.std::__1::vector.3"* %7, null
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 2
  %11 = select i1 %8, i32** %10, i32** %9
  %12 = load i32*, i32** %11, align 8
  br i1 %8, label %22, label %13

13:                                               ; preds = %3
  %14 = load i32*, i32** %9, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i32* %14 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 2
  %21 = getelementptr inbounds i32, i32* %14, i64 %20
  br label %27

22:                                               ; preds = %3
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  br label %27

27:                                               ; preds = %13, %22
  %28 = phi i32* [ %21, %13 ], [ %26, %22 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  %29 = ptrtoint i32* %28 to i64
  %30 = ptrtoint i32* %12 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %56, label %34

34:                                               ; preds = %27
  %35 = icmp ugt i64 %32, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #14
  unreachable

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 %31) #13
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %39, i8** %43, align 8
  %44 = getelementptr inbounds i32, i32* %40, i64 %32
  %45 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %44, i32** %45, align 8
  %46 = bitcast i32** %41 to i64*
  %47 = ptrtoint i8* %39 to i64
  %48 = icmp sgt i64 %31, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %38
  %50 = lshr exact i64 %31, 2
  %51 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %51, i64 %31, i1 false) #12
  %52 = getelementptr inbounds i32, i32* %40, i64 %50
  %53 = ptrtoint i32* %52 to i64
  br label %54

54:                                               ; preds = %49, %38
  %55 = phi i64 [ %53, %49 ], [ %47, %38 ]
  store i64 %55, i64* %46, align 8
  br label %56

56:                                               ; preds = %27, %54
  %57 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %0, %"class.spvtools::opt::analysis::Type"* %1, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4) #12
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %56, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret %"class.spvtools::opt::analysis::Constant"* %57
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::unordered_set.943"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.std::__1::vector.1037"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS0_4LoopEPNS0_11InstructionES6_(%"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.1197", align 8
  %6 = alloca %"class.std::__1::vector.1365", align 8
  %7 = alloca %"class.std::__1::function.1374", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, i64 0, i32 3
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #13
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #12
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #12
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #12
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %36, %4
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = bitcast %"class.std::__1::function.1197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.std::__1::function.1197", %"class.std::__1::function.1197"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.1197", %"class.std::__1::function.1197"* %5, i64 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.std::__1::function.1197", %"class.std::__1::function.1197"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %46 = ptrtoint %"class.spvtools::opt::Loop"* %1 to i64
  %47 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS7_4LoopEPNS7_11InstructionESD_EUljE_S2_EEEEbPKNS0_16__policy_storageEj to i64)>, <2 x i64>* %47, align 8
  %48 = bitcast %"struct.std::__1::__function::__policy"** %44 to i64*
  store i64 ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUljE_FbjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), i64* %48, align 8
  %49 = bitcast %"class.std::__1::function.1197"* %5 to i64*
  store i64 %46, i64* %49, align 8
  %50 = bitcast %"class.std::__1::vector.1365"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.std::__1::vector.1365", %"class.std::__1::vector.1365"* %6, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.1365", %"class.std::__1::vector.1365"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #12
  %53 = bitcast %"class.std::__1::function.1374"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.std::__1::function.1374", %"class.std::__1::function.1374"* %7, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.std::__1::function.1374", %"class.std::__1::function.1374"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS3_4LoopES5_S5_EUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %54, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %55, align 8
  %56 = tail call i8* @_Znwm(i64 24) #13, !noalias !69
  %57 = bitcast i8* %56 to %"class.std::__1::vector.1365"**
  store %"class.std::__1::vector.1365"* %6, %"class.std::__1::vector.1365"** %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to %"class.std::__1::function.1197"**
  store %"class.std::__1::function.1197"* %5, %"class.std::__1::function.1197"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 16
  %61 = bitcast i8* %60 to %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"**
  store %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %0, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::function.1374", %"class.std::__1::function.1374"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %62, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %41, %"class.spvtools::opt::Instruction"* %2, %"class.std::__1::function.1374"* nonnull dereferenceable(32) %7) #12
  %63 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %63, i64 0, i32 1
  %65 = load void (i8*)*, void (i8*)** %64, align 8
  %66 = icmp eq void (i8*)* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %39
  %68 = load i8*, i8** %62, align 8
  call void %65(i8* %68) #12
  br label %69

69:                                               ; preds = %39, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  %70 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %51, align 8
  %71 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %52, align 8
  %72 = icmp eq %"struct.std::__1::pair.1367"* %70, %71
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 4
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 3
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %81 = bitcast i32** %79 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %83 = bitcast %"class.std::__1::unique_ptr.0"* %82 to i64*
  %84 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %80 to i32*
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %103

86:                                               ; preds = %135
  %87 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %51, align 8
  br label %88

88:                                               ; preds = %86, %69
  %89 = phi %"struct.std::__1::pair.1367"* [ %87, %86 ], [ %70, %69 ]
  %90 = icmp eq %"struct.std::__1::pair.1367"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %88
  %92 = ptrtoint %"struct.std::__1::pair.1367"* %89 to i64
  %93 = bitcast %"struct.std::__1::pair.1367"** %52 to i64*
  store i64 %92, i64* %93, align 8
  %94 = bitcast %"struct.std::__1::pair.1367"* %89 to i8*
  call void @_ZdlPv(i8* %94) #13
  br label %95

95:                                               ; preds = %88, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  %96 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %44, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %96, i64 0, i32 1
  %98 = load void (i8*)*, void (i8*)** %97, align 8
  %99 = icmp eq void (i8*)* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = load i8*, i8** %43, align 8
  call void %98(i8* %101) #12
  br label %102

102:                                              ; preds = %95, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #12
  ret void

103:                                              ; preds = %73, %135
  %104 = phi %"struct.std::__1::pair.1367"* [ %70, %73 ], [ %136, %135 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %104, i64 0, i32 0
  %106 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #12
  %109 = load i8, i8* %75, align 1, !range !15
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %103
  %112 = load i8, i8* %76, align 4, !range !15
  %113 = zext i8 %112 to i32
  %114 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %3, i32 %113) #12
  br label %115

115:                                              ; preds = %103, %111
  %116 = phi i32 [ %114, %111 ], [ 0, %103 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %80, %"struct.std::__1::aligned_storage<4, 4>::type"** %81, align 8
  store i64 0, i64* %83, align 8
  store i64 1, i64* %78, align 8
  store i32 %116, i32* %84, align 8
  %117 = zext i32 %108 to i64
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 6, i32 0, i32 0
  %119 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %118, align 8
  %120 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %119, i64 %117, i32 1
  %121 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %120, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %122 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %85, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %85, align 8
  %123 = icmp eq %"class.std::__1::vector.3"* %122, null
  br i1 %123, label %135, label %124

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %122, i64 0, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = ptrtoint i32* %126 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %122, i64 0, i32 0, i32 1
  %131 = bitcast i32** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast i32* %126 to i8*
  call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %128, %124
  %134 = bitcast %"class.std::__1::vector.3"* %122 to i8*
  call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %115, %133
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #12
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %41, %"class.spvtools::opt::Instruction"* %106) #12
  %136 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %104, i64 1
  %137 = icmp eq %"struct.std::__1::pair.1367"* %136, %71
  br i1 %137, label %86, label %103
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.40"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i8*
  %8 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.40"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.40"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::BasicBlock"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %13 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %18, %"class.spvtools::opt::BasicBlock"* nonnull %15) #12
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.40"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.38"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.40"* %4, %"class.std::__1::unique_ptr.40"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.333"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = bitcast %"struct.std::__1::__hash_node_base.333"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  %35 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %37, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base.333"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.333"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42, %46
  %47 = phi %"struct.std::__1::__hash_node_base.333"* [ %49, %46 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %47, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, align 8
  %50 = bitcast %"struct.std::__1::__hash_node_base.333"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  %51 = icmp eq %"struct.std::__1::__hash_node_base.333"* %49, null
  br i1 %51, label %52, label %46

52:                                               ; preds = %46, %42
  %53 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %53, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.333"** %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast %"struct.std::__1::__hash_node_base.333"** %54 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %52, %56
  %59 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.254"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"struct.std::__1::__hash_node_base.254"* [ %65, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %63, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %64, align 8
  %66 = bitcast %"struct.std::__1::__hash_node_base.254"* %63 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  %67 = icmp eq %"struct.std::__1::__hash_node_base.254"* %65, null
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %58
  %69 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %69, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.254"** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast %"struct.std::__1::__hash_node_base.254"** %70 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.1213"*, %"struct.std::__1::__hash_node_base.1213"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.1213"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %74, %78
  %79 = phi %"struct.std::__1::__hash_node_base.1213"* [ %81, %78 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1213", %"struct.std::__1::__hash_node_base.1213"* %79, i64 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.1213"*, %"struct.std::__1::__hash_node_base.1213"** %80, align 8
  %82 = bitcast %"struct.std::__1::__hash_node_base.1213"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1213"* %81, null
  br i1 %83, label %84, label %78

84:                                               ; preds = %78, %74
  %85 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.1213"**, %"struct.std::__1::__hash_node_base.1213"*** %85, align 8
  store %"struct.std::__1::__hash_node_base.1213"** null, %"struct.std::__1::__hash_node_base.1213"*** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.1213"** %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = bitcast %"struct.std::__1::__hash_node_base.1213"** %86 to i8*
  tail call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %84, %88
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %4, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %16

16:                                               ; preds = %6, %14
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %18, align 8
  %19 = tail call i8* @_Znwm(i64 112) #13
  %20 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #12
  %24 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %28 to i32*
  store i64 1, i64* %26, align 8
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %34, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %34, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #12
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  store i64 1, i64* %45, align 8
  store i32 %2, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %57 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #12
  %62 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %67 = bitcast i32** %65 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %66, %"struct.std::__1::aligned_storage<4, 4>::type"** %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %69 = bitcast %"class.std::__1::unique_ptr.0"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  store i64 1, i64* %64, align 8
  store i32 %3, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %72, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %76 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %72, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #12
  %81 = call i8* @_Znwm(i64 144) #13
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 144
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.spvtools::opt::Operand"** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i8* %81 to i32*
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::utils::SmallVector"*
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %81, i64 24
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %81, i64 40
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #12
  %103 = getelementptr inbounds i8, i8* %81, i64 48
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %81, i64 56
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %81, i64 64
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %81, i64 72
  %114 = getelementptr inbounds i8, i8* %81, i64 80
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %81, i64 88
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #12
  %119 = getelementptr inbounds i8, i8* %81, i64 96
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds i8, i8* %81, i64 104
  %124 = bitcast i8* %123 to %"class.spvtools::utils::SmallVector"*
  %125 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %81, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %81, i64 120
  %130 = getelementptr inbounds i8, i8* %81, i64 128
  %131 = bitcast i8* %129 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %81, i64 136
  %133 = bitcast i8* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %124, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %125) #12
  %135 = getelementptr inbounds i8, i8* %81, i64 144
  %136 = bitcast i8* %19 to %"class.spvtools::opt::Instruction"*
  %137 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %138 = ptrtoint i8* %135 to i64
  store i64 %138, i64* %137, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %136, %"class.spvtools::opt::IRContext"* %21, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #12
  %139 = ptrtoint i8* %19 to i64
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %16
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %82, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %170, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = load i8*, i8** %84, align 8
  br label %170

170:                                              ; preds = %168, %144
  %171 = phi i8* [ %169, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %82, align 8
  call void @_ZdlPv(i8* %171) #13
  br label %172

172:                                              ; preds = %16, %170
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %176 = icmp eq %"class.std::__1::vector.3"* %175, null
  br i1 %176, label %188, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i32* %179 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %181, %177
  %187 = bitcast %"class.std::__1::vector.3"* %175 to i8*
  call void @_ZdlPv(i8* %187) #13
  br label %188

188:                                              ; preds = %172, %186
  %189 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %255, label %244

193:                                              ; preds = %271
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #13
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %273 to i8*
  call void @_ZdlPv(i8* %203) #13
  br label %204

204:                                              ; preds = %271, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #13
  br label %219

219:                                              ; preds = %204, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #13
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #13
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  %235 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.spvtools::opt::Instruction"* %236 to void (%"class.spvtools::opt::Instruction"*)***
  %240 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %240, i64 1
  %242 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %241, align 8
  call void %242(%"class.spvtools::opt::Instruction"* nonnull %236) #12
  br label %243

243:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret %"class.spvtools::opt::Instruction"* %235

244:                                              ; preds = %188
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #13
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %254) #13
  br label %255

255:                                              ; preds = %253, %188
  %256 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %257, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.3"* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i32* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 1
  %267 = bitcast i32** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast i32* %262 to i8*
  call void @_ZdlPv(i8* %268) #13
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.3"* %258 to i8*
  call void @_ZdlPv(i8* %270) #13
  br label %271

271:                                              ; preds = %269, %255
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %272, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %272, align 8
  %274 = icmp eq %"class.std::__1::vector.3"* %273, null
  br i1 %274, label %204, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.1233"* dereferenceable(24), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"struct.spvtools::opt::Operand", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"struct.spvtools::opt::Operand", align 8
  %13 = alloca %"struct.spvtools::opt::Operand", align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = alloca %"class.std::__1::unique_ptr.21", align 8
  %16 = icmp eq i32 %4, -1
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %19

19:                                               ; preds = %6, %17
  %20 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #12
  %24 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #12
  %25 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %29 to i32*
  store i64 1, i64* %27, align 8
  store i32 %1, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %35, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #12
  %44 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %45 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %46 = icmp ult %"struct.spvtools::opt::Operand"* %44, %45
  br i1 %46, label %47, label %62

47:                                               ; preds = %19
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 0
  %49 = load i32, i32* %34, align 8
  store i32 %49, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %50, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 1
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 2
  %54 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 3, i64 0
  %55 = bitcast i32** %53 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %54, %"struct.std::__1::aligned_storage<4, 4>::type"** %55, align 8
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 4
  %57 = bitcast %"class.std::__1::unique_ptr.0"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %50, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %35) #12
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 1
  %60 = ptrtoint %"struct.spvtools::opt::Operand"* %59 to i64
  %61 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  store i64 %60, i64* %61, align 8
  br label %63

62:                                               ; preds = %19
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #12
  br label %63

63:                                               ; preds = %47, %62
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %65, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %65, align 8
  %67 = icmp eq %"class.std::__1::vector.3"* %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i32* %70 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast i32* %70 to i8*
  call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %72, %68
  %78 = bitcast %"class.std::__1::vector.3"* %66 to i8*
  call void @_ZdlPv(i8* %78) #13
  br label %79

79:                                               ; preds = %63, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %80, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %80, align 8
  %82 = icmp eq %"class.std::__1::vector.3"* %81, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %87, %83
  %93 = bitcast %"class.std::__1::vector.3"* %81 to i8*
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %79, %92
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #12
  %95 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %95) #12
  %96 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %99 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %100 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %101 = bitcast i32** %99 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %100, %"struct.std::__1::aligned_storage<4, 4>::type"** %101, align 8
  %102 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %103 = bitcast %"class.std::__1::unique_ptr.0"* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %100 to i32*
  store i64 1, i64* %98, align 8
  store i32 %2, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 0
  store i32 1, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1
  %107 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %106, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 1
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 3, i64 0
  %111 = bitcast i32** %109 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %110, %"struct.std::__1::aligned_storage<4, 4>::type"** %111, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4
  %113 = bitcast %"class.std::__1::unique_ptr.0"* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %106, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #12
  %115 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %116 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %117 = icmp ult %"struct.spvtools::opt::Operand"* %115, %116
  br i1 %117, label %118, label %133

118:                                              ; preds = %94
  %119 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 0
  %120 = load i32, i32* %105, align 8
  store i32 %120, i32* %119, align 8
  %121 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %121, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 1
  store i64 0, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 2
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 3, i64 0
  %126 = bitcast i32** %124 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %125, %"struct.std::__1::aligned_storage<4, 4>::type"** %126, align 8
  %127 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 4
  %128 = bitcast %"class.std::__1::unique_ptr.0"* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %121, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %106) #12
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 1
  %131 = ptrtoint %"struct.spvtools::opt::Operand"* %130 to i64
  %132 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  store i64 %131, i64* %132, align 8
  br label %134

133:                                              ; preds = %94
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %10) #12
  br label %134

134:                                              ; preds = %118, %133
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %136, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %136, align 8
  %138 = icmp eq %"class.std::__1::vector.3"* %137, null
  br i1 %138, label %150, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = ptrtoint i32* %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 1
  %146 = bitcast i32** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast i32* %141 to i8*
  call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %143, %139
  %149 = bitcast %"class.std::__1::vector.3"* %137 to i8*
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %134, %148
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %151, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %151, align 8
  %153 = icmp eq %"class.std::__1::vector.3"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i32* %156 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %158, %154
  %164 = bitcast %"class.std::__1::vector.3"* %152 to i8*
  call void @_ZdlPv(i8* %164) #13
  br label %165

165:                                              ; preds = %150, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %95) #12
  %166 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %3, i64 0, i32 0, i32 0
  %167 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %3, i64 0, i32 0, i32 1
  %169 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %168, align 8
  %170 = icmp eq %"struct.std::__1::pair.1235"* %167, %169
  br i1 %170, label %207, label %171

171:                                              ; preds = %165
  %172 = bitcast %"struct.spvtools::opt::Operand"* %12 to i8*
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1
  %175 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %174, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 1
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 2
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 3, i64 0
  %179 = bitcast i32** %177 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4
  %181 = bitcast %"class.std::__1::unique_ptr.0"* %180 to i64*
  %182 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %185 = bitcast %"struct.spvtools::opt::Operand"* %13 to i8*
  %186 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %189 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %190 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %191 = bitcast i32** %189 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %192 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %193 = bitcast %"class.std::__1::unique_ptr.0"* %192 to i64*
  %194 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %190 to i32*
  %195 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 0
  %196 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %196, i64 0, i32 0
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 1
  %199 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 2
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 3, i64 0
  %201 = bitcast i32** %199 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4
  %203 = bitcast %"class.std::__1::unique_ptr.0"* %202 to i64*
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 0
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %257

207:                                              ; preds = %343, %165
  %208 = bitcast %"class.std::__1::unique_ptr.21"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %15, i64 0, i32 0, i32 0, i32 0
  %210 = call i8* @_Znwm(i64 112) #13
  %211 = bitcast i8* %210 to %"class.spvtools::opt::Instruction"*
  %212 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %213 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %212, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %211, %"class.spvtools::opt::IRContext"* %213, i32 251, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #12
  %214 = ptrtoint i8* %210 to i64
  %215 = bitcast %"class.std::__1::unique_ptr.21"* %15 to i64*
  store i64 %214, i64* %215, align 8
  %216 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %15)
  %217 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %209, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %209, align 8
  %218 = icmp eq %"class.spvtools::opt::Instruction"* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %207
  %220 = bitcast %"class.spvtools::opt::Instruction"* %217 to void (%"class.spvtools::opt::Instruction"*)***
  %221 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %221, i64 1
  %223 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %222, align 8
  call void %223(%"class.spvtools::opt::Instruction"* nonnull %217) #12
  br label %224

224:                                              ; preds = %207, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  %225 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %21, align 8
  %226 = icmp eq %"struct.spvtools::opt::Operand"* %225, null
  br i1 %226, label %256, label %227

227:                                              ; preds = %224
  %228 = bitcast %"struct.spvtools::opt::Operand"* %225 to i8*
  %229 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %230 = icmp eq %"struct.spvtools::opt::Operand"* %229, %225
  br i1 %230, label %254, label %231

231:                                              ; preds = %227, %249
  %232 = phi %"struct.spvtools::opt::Operand"* [ %233, %249 ], [ %229, %227 ]
  %233 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1
  %234 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %234, align 8
  %235 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %236 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %235, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %235, align 8
  %237 = icmp eq %"class.std::__1::vector.3"* %236, null
  br i1 %237, label %249, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %236, i64 0, i32 0, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %238
  %243 = ptrtoint i32* %240 to i64
  %244 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %236, i64 0, i32 0, i32 1
  %245 = bitcast i32** %244 to i64*
  store i64 %243, i64* %245, align 8
  %246 = bitcast i32* %240 to i8*
  call void @_ZdlPv(i8* %246) #13
  br label %247

247:                                              ; preds = %242, %238
  %248 = bitcast %"class.std::__1::vector.3"* %236 to i8*
  call void @_ZdlPv(i8* %248) #13
  br label %249

249:                                              ; preds = %247, %231
  %250 = icmp eq %"struct.spvtools::opt::Operand"* %233, %225
  br i1 %250, label %251, label %231

251:                                              ; preds = %249
  %252 = bitcast %"class.std::__1::vector"* %7 to i8**
  %253 = load i8*, i8** %252, align 8
  br label %254

254:                                              ; preds = %251, %227
  %255 = phi i8* [ %253, %251 ], [ %228, %227 ]
  store %"struct.spvtools::opt::Operand"* %225, %"struct.spvtools::opt::Operand"** %22, align 8
  call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %224, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  ret %"class.spvtools::opt::Instruction"* %216

257:                                              ; preds = %171, %343
  %258 = phi %"struct.std::__1::pair.1235"* [ %167, %171 ], [ %344, %343 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %172) #12
  %259 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %258, i64 0, i32 0
  store i32 9, i32* %173, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  store i64 0, i64* %176, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %178, %"struct.std::__1::aligned_storage<4, 4>::type"** %179, align 8
  store i64 0, i64* %181, align 8
  %260 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %174, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %259) #12
  %261 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %262 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %263 = icmp ult %"struct.spvtools::opt::Operand"* %261, %262
  br i1 %263, label %264, label %278

264:                                              ; preds = %257
  %265 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 0
  %266 = load i32, i32* %173, align 8
  store i32 %266, i32* %265, align 8
  %267 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1
  %268 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %267, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8
  %269 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 1
  store i64 0, i64* %269, align 8
  %270 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 2
  %271 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 3, i64 0
  %272 = bitcast i32** %270 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %271, %"struct.std::__1::aligned_storage<4, 4>::type"** %272, align 8
  %273 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 4
  %274 = bitcast %"class.std::__1::unique_ptr.0"* %273 to i64*
  store i64 0, i64* %274, align 8
  %275 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %267, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %174) #12
  %276 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 1
  %277 = ptrtoint %"struct.spvtools::opt::Operand"* %276 to i64
  store i64 %277, i64* %182, align 8
  br label %279

278:                                              ; preds = %257
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %12) #12
  br label %279

279:                                              ; preds = %264, %278
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %280 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %184, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %184, align 8
  %281 = icmp eq %"class.std::__1::vector.3"* %280, null
  br i1 %281, label %293, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %280, i64 0, i32 0, i32 0
  %284 = load i32*, i32** %283, align 8
  %285 = icmp eq i32* %284, null
  br i1 %285, label %291, label %286

286:                                              ; preds = %282
  %287 = ptrtoint i32* %284 to i64
  %288 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %280, i64 0, i32 0, i32 1
  %289 = bitcast i32** %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = bitcast i32* %284 to i8*
  call void @_ZdlPv(i8* %290) #13
  br label %291

291:                                              ; preds = %286, %282
  %292 = bitcast %"class.std::__1::vector.3"* %280 to i8*
  call void @_ZdlPv(i8* %292) #13
  br label %293

293:                                              ; preds = %279, %291
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %172) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %185) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #12
  %294 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %258, i64 0, i32 1
  %295 = load i32, i32* %294, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %190, %"struct.std::__1::aligned_storage<4, 4>::type"** %191, align 8
  store i64 0, i64* %193, align 8
  store i64 1, i64* %188, align 8
  store i32 %295, i32* %194, align 8
  store i32 1, i32* %195, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %197, align 8
  store i64 0, i64* %198, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %200, %"struct.std::__1::aligned_storage<4, 4>::type"** %201, align 8
  store i64 0, i64* %203, align 8
  %296 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %196, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #12
  %297 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %298 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %299 = icmp ult %"struct.spvtools::opt::Operand"* %297, %298
  br i1 %299, label %300, label %314

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 0
  %302 = load i32, i32* %195, align 8
  store i32 %302, i32* %301, align 8
  %303 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1
  %304 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %303, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 1
  store i64 0, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 2
  %307 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 3, i64 0
  %308 = bitcast i32** %306 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %307, %"struct.std::__1::aligned_storage<4, 4>::type"** %308, align 8
  %309 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 4
  %310 = bitcast %"class.std::__1::unique_ptr.0"* %309 to i64*
  store i64 0, i64* %310, align 8
  %311 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %303, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %196) #12
  %312 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 1
  %313 = ptrtoint %"struct.spvtools::opt::Operand"* %312 to i64
  store i64 %313, i64* %182, align 8
  br label %315

314:                                              ; preds = %293
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %13) #12
  br label %315

315:                                              ; preds = %300, %314
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %204, align 8
  %316 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %317 = icmp eq %"class.std::__1::vector.3"* %316, null
  br i1 %317, label %329, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %316, i64 0, i32 0, i32 0
  %320 = load i32*, i32** %319, align 8
  %321 = icmp eq i32* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %318
  %323 = ptrtoint i32* %320 to i64
  %324 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %316, i64 0, i32 0, i32 1
  %325 = bitcast i32** %324 to i64*
  store i64 %323, i64* %325, align 8
  %326 = bitcast i32* %320 to i8*
  call void @_ZdlPv(i8* %326) #13
  br label %327

327:                                              ; preds = %322, %318
  %328 = bitcast %"class.std::__1::vector.3"* %316 to i8*
  call void @_ZdlPv(i8* %328) #13
  br label %329

329:                                              ; preds = %315, %327
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %330 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %206, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %206, align 8
  %331 = icmp eq %"class.std::__1::vector.3"* %330, null
  br i1 %331, label %343, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %341, label %336

336:                                              ; preds = %332
  %337 = ptrtoint i32* %334 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 1
  %339 = bitcast i32** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast i32* %334 to i8*
  call void @_ZdlPv(i8* %340) #13
  br label %341

341:                                              ; preds = %336, %332
  %342 = bitcast %"class.std::__1::vector.3"* %330 to i8*
  call void @_ZdlPv(i8* %342) #13
  br label %343

343:                                              ; preds = %329, %341
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %185) #12
  %344 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %258, i64 1
  %345 = icmp eq %"struct.std::__1::pair.1235"* %344, %169
  br i1 %345, label %207, label %257
}

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1243", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.40"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.40"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.40"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.40"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.40"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.40"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.40"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !74

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.40"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.40"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %70 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #12
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.40"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.40"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %1 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #12
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.1243"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.1243"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #14
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #14
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #13
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.40"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.40"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.40"* %191, %"class.std::__1::unique_ptr.40"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %189
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %149, align 8
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %190
  store %"class.std::__1::unique_ptr.40"* %193, %"class.std::__1::unique_ptr.40"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1243"* nonnull %5, %"class.std::__1::unique_ptr.40"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.40"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.40"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.40"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.40"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %216, i64 -1
  store %"class.std::__1::unique_ptr.40"* %217, %"class.std::__1::unique_ptr.40"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !75

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.40"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.40"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.40"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.40"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -1
  store %"class.std::__1::unique_ptr.40"* %235, %"class.std::__1::unique_ptr.40"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.40"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -1
  store %"class.std::__1::unique_ptr.40"* %243, %"class.std::__1::unique_ptr.40"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.40"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.40"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  store %"class.std::__1::unique_ptr.40"* %251, %"class.std::__1::unique_ptr.40"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.40"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.40"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %258, i64 -1
  store %"class.std::__1::unique_ptr.40"* %259, %"class.std::__1::unique_ptr.40"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.40"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.40"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.40"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.40"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.40"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.40"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.40"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %289, i64 1
  store %"class.std::__1::unique_ptr.40"* %290, %"class.std::__1::unique_ptr.40"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !76

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.40"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.40"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.40"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.40"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %308, i64 1
  store %"class.std::__1::unique_ptr.40"* %309, %"class.std::__1::unique_ptr.40"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.40"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.40"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %315, i64 1
  store %"class.std::__1::unique_ptr.40"* %316, %"class.std::__1::unique_ptr.40"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.40"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 1
  store %"class.std::__1::unique_ptr.40"* %323, %"class.std::__1::unique_ptr.40"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %329, i64 1
  store %"class.std::__1::unique_ptr.40"* %330, %"class.std::__1::unique_ptr.40"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.40"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.40"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.40"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.40"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.1243"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.40"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.40"*
  %353 = icmp eq %"class.std::__1::unique_ptr.40"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.40"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %355, i64 -1
  store %"class.std::__1::unique_ptr.40"* %356, %"class.std::__1::unique_ptr.40"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.40"* %356 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #12
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.40"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.40"* %368 to i8*
  call void @_ZdlPv(i8* %371) #13
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #12
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.40"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.40"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1243"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.40"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1243", %"struct.std::__1::__split_buffer.1243"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.40"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.40"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.40"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.40"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.40"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.40"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %25 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #12
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.40"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.40"* %44, %"class.std::__1::unique_ptr.40"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %43, i64 %21
  store %"class.std::__1::unique_ptr.40"* %45, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.1243"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #14
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #13
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.40"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.40"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.40"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !77

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.40"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.40"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.40"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.40"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.40"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.40"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.40"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.40"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.40"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.40"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.40"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.40"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.40"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.40"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.40"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.40"* %167 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #12
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.40"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #13
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 1
  store %"class.std::__1::unique_ptr.40"* %186, %"class.std::__1::unique_ptr.40"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !15
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #12
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !15
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !15
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #12
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !15
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #12
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #12
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1142", align 8
  %4 = alloca %"class.std::__1::tuple.1108", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #12
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1142"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::tuple.1142", %"class.std::__1::tuple.1142"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1108", %"class.std::__1::tuple.1108"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #12
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1142"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1108"* nonnull dereferenceable(1) %4) #12
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #12
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #12
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #13
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #12
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1166"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !78
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !78
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !78
  store i32 %62, i32* %61, align 8, !noalias !78
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !78
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !78
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !78
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !8
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !8
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !81

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1120"**
  %4 = load %"class.std::__1::function.1120"*, %"class.std::__1::function.1120"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1266"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.1266"*, %"class.std::__1::__function::__default_alloc_func.1266"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1266", %"class.std::__1::__function::__default_alloc_func.1266"* %8, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %10, i64 0, i32 3
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::IRContext"* %12) #12
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %16) #12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !15
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = tail call i8* @_Znwm(i64 48) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 37, i1 false) #12
  %27 = getelementptr inbounds i8, i8* %26, i64 37
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 1, i32 0
  %29 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 5, i32 0, i32 0
  tail call void %29(%"union.std::__1::__function::__policy_storage"* %30, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.5, i8* nonnull %26) #12
  tail call void @_ZdlPv(i8* nonnull %26) #13
  br label %31

31:                                               ; preds = %25, %19, %2
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !15
  %34 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %38 to i32*
  store i64 1, i64* %36, align 8
  store i32 %17, i32* %42, align 8
  %43 = zext i8 %33 to i64
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 6, i32 0, i32 0
  %45 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %44, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %45, i64 %43, i32 1
  %47 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %46, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %48, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.3"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.std::__1::vector.3"* %49 to i8*
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %60, %31
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #12
  %63 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1266", %"class.std::__1::__function::__default_alloc_func.1266"* %8, i64 0, i32 0, i32 1
  %64 = load %"class.spvtools::opt::InstructionBuilder"*, %"class.spvtools::opt::InstructionBuilder"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  %66 = ptrtoint %"class.spvtools::opt::Instruction"* %13 to i64
  %67 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %66, i64* %67, align 8
  %68 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %64, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4) #12
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %69, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %69, align 8
  %71 = icmp eq %"class.spvtools::opt::Instruction"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %62
  %73 = bitcast %"class.spvtools::opt::Instruction"* %70 to void (%"class.spvtools::opt::Instruction"*)***
  %74 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %74, i64 1
  %76 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %75, align 8
  call void %76(%"class.spvtools::opt::Instruction"* nonnull %70) #12
  br label %77

77:                                               ; preds = %72, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  %78 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #12
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !range !15
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = load i8, i8* %32, align 4, !range !15
  %84 = zext i8 %83 to i32
  %85 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %13, i32 %84) #12
  br label %86

86:                                               ; preds = %82, %77
  %87 = phi i32 [ %85, %82 ], [ 0, %77 ]
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %89 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %92 = bitcast i32** %90 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %91, %"struct.std::__1::aligned_storage<4, 4>::type"** %92, align 8
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %94 = bitcast %"class.std::__1::unique_ptr.0"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %91 to i32*
  store i64 1, i64* %89, align 8
  store i32 %87, i32* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !range !15
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !range !15
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i64 1, i64 2
  %103 = xor i1 %101, true
  %104 = zext i1 %103 to i64
  %105 = select i1 %98, i64 %104, i64 %102
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %107 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %106, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %107, i64 %105, i32 1
  %109 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %110 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %111 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %110, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %110, align 8
  %112 = icmp eq %"class.std::__1::vector.3"* %111, null
  br i1 %112, label %124, label %113

113:                                              ; preds = %86
  %114 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %111, i64 0, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = icmp eq i32* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %113
  %118 = ptrtoint i32* %115 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %111, i64 0, i32 0, i32 1
  %120 = bitcast i32** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = bitcast i32* %115 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %117, %113
  %123 = bitcast %"class.std::__1::vector.3"* %111 to i8*
  call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %122, %86
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #12
  %125 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %125) #12
  %126 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1266", %"class.std::__1::__function::__default_alloc_func.1266"* %8, i64 0, i32 0, i32 0
  %127 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 4
  %131 = load i8, i8* %130, align 1, !range !15
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 3
  %135 = load i8, i8* %134, align 4, !range !15
  %136 = zext i8 %135 to i32
  %137 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %129, i32 %136) #12
  br label %138

138:                                              ; preds = %133, %124
  %139 = phi i32 [ %137, %133 ], [ 0, %124 ]
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %142 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %144 = bitcast i32** %142 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %143, %"struct.std::__1::aligned_storage<4, 4>::type"** %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %146 = bitcast %"class.std::__1::unique_ptr.0"* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %143 to i32*
  store i64 1, i64* %141, align 8
  store i32 %139, i32* %147, align 8
  %148 = load i8, i8* %96, align 4, !range !15
  %149 = icmp eq i8 %148, 0
  %150 = load i8, i8* %99, align 1, !range !15
  %151 = icmp eq i8 %150, 0
  %152 = select i1 %151, i64 1, i64 2
  %153 = xor i1 %151, true
  %154 = zext i1 %153 to i64
  %155 = select i1 %149, i64 %154, i64 %152
  %156 = add nuw nsw i64 %155, 1
  %157 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %106, align 8
  %158 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %157, i64 %156, i32 1
  %159 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %158, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %160, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %160, align 8
  %162 = icmp eq %"class.std::__1::vector.3"* %161, null
  br i1 %162, label %174, label %163

163:                                              ; preds = %138
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %161, i64 0, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = icmp eq i32* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %163
  %168 = ptrtoint i32* %165 to i64
  %169 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %161, i64 0, i32 0, i32 1
  %170 = bitcast i32** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = bitcast i32* %165 to i8*
  call void @_ZdlPv(i8* %171) #13
  br label %172

172:                                              ; preds = %167, %163
  %173 = bitcast %"class.std::__1::vector.3"* %161 to i8*
  call void @_ZdlPv(i8* %173) #13
  br label %174

174:                                              ; preds = %172, %138
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %125) #12
  %175 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %177 = bitcast %"struct.spvtools::opt::Operand"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::vector"* %175 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %178, %180
  %182 = sdiv exact i64 %181, 48
  %183 = load i8, i8* %96, align 4, !range !15
  %184 = icmp eq i8 %183, 0
  %185 = load i8, i8* %99, align 1, !range !15
  %186 = icmp eq i8 %185, 0
  %187 = select i1 %186, i32 1, i32 2
  %188 = xor i1 %186, true
  %189 = zext i1 %188 to i32
  %190 = select i1 %184, i32 %189, i32 %187
  %191 = trunc i64 %182 to i32
  %192 = xor i32 %190, -1
  %193 = add i32 %192, %191
  %194 = icmp ugt i32 %193, 1
  br i1 %194, label %195, label %199

195:                                              ; preds = %174, %195
  %196 = phi i32 [ %197, %195 ], [ %193, %174 ]
  call void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %196) #12
  %197 = add i32 %196, -1
  %198 = icmp ugt i32 %197, 1
  br i1 %198, label %195, label %199

199:                                              ; preds = %195, %174
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 %5
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !15
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !15
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i64 1, i64 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i64
  %16 = select i1 %9, i64 %15, i64 %13
  %17 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 %16
  %18 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %20 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %21 = icmp eq %"struct.spvtools::opt::Operand"* %18, %20
  br i1 %21, label %37, label %22

22:                                               ; preds = %2, %22
  %23 = phi %"struct.spvtools::opt::Operand"* [ %32, %22 ], [ %17, %2 ]
  %24 = phi %"struct.spvtools::opt::Operand"* [ %31, %22 ], [ %18, %2 ]
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 0
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1
  %30 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %28, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %29) #12
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 1
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 1
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %31, %20
  br i1 %33, label %34, label %22

34:                                               ; preds = %22
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %35, %32
  br i1 %36, label %60, label %37

37:                                               ; preds = %34, %2
  %38 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %17, %2 ]
  %39 = phi %"struct.spvtools::opt::Operand"* [ %35, %34 ], [ %18, %2 ]
  br label %40

40:                                               ; preds = %58, %37
  %41 = phi %"struct.spvtools::opt::Operand"* [ %42, %58 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %44, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.3"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.std::__1::vector.3"* %45 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %40
  %59 = icmp eq %"struct.spvtools::opt::Operand"* %42, %38
  br i1 %59, label %60, label %40

60:                                               ; preds = %58, %34
  %61 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %38, %58 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEPvPKv(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEEvPv(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %5 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !15
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #12
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  %18 = icmp eq i32 %3, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to %"class.spvtools::opt::BasicBlock"**
  %22 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !15
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !15
  %31 = zext i8 %30 to i32
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %24, i32 %31) #12
  br label %33

33:                                               ; preds = %28, %19
  %34 = phi i32 [ %32, %28 ], [ 0, %19 ]
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %16, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1166"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.309"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.309"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.309"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.309"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.309"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #13, !noalias !87
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !87
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !87
  store i32 %62, i32* %61, align 8, !noalias !87
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12, !noalias !87
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !87
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"**
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %66, align 8, !noalias !87
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #12
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #12, !range !8
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.309"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.309"* %109, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.309"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #12, !range !8
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.309"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.309"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } undef, %"struct.std::__1::__hash_node_base.309"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.309"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.305"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.309"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !90

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.309"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.309"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.309"* %36, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.309"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.309"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.309"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.309"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.309"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.309"* %82, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.309"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.309"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.309"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"* %80, %"struct.std::__1::__hash_node_base.309"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.309"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.309"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.309"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.309"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.948"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.944"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.948"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.948"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.948"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.948"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.948"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !91
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !91
  store i32 %58, i32* %57, align 4, !noalias !91
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !91
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.948"**
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %61, align 8, !noalias !91
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.944"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !8
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.948"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.948"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.948"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.948"* %104, %"struct.std::__1::__hash_node_base.948"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.948"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.948"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !8
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.948"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.948"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.948"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.948"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.948"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.948"*, i8 } undef, %"struct.std::__1::__hash_node_base.948"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.948"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.948"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.944"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.944"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.944"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.944"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.944"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.948"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.948"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.950", %"class.std::__1::__bucket_list_deallocator.950"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !94

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.948"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.948"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.948"* %36, %"struct.std::__1::__hash_node_base.948"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.948"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.948"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.948"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.948"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.948"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.948"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.948"* %82, %"struct.std::__1::__hash_node_base.948"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.948"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.948"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.948"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.948"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.948"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.948"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.948"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.948"* %80, %"struct.std::__1::__hash_node_base.948"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.948"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.948"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.948"** null, %"struct.std::__1::__hash_node_base.948"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.948"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.948"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.950", %"class.std::__1::__bucket_list_deallocator.950"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.970"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.966"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1166"* dereferenceable(8), %"class.std::__1::tuple.1108"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.970"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.970"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.970"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.970"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.970"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !95
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1166", %"class.std::__1::tuple.1166"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !95
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !95
  store i32 %62, i32* %61, align 8, !noalias !95
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %64, align 8, !noalias !95
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !95
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.970"**
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %67, align 8, !noalias !95
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.966"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !8
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.970"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.970"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.970"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.970"* %110, %"struct.std::__1::__hash_node_base.970"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.970"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.970"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !8
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.970"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.970"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.970"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.970"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.970"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.970"*, i8 } undef, %"struct.std::__1::__hash_node_base.970"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.970"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.970"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.966"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.966"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.966"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.966"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.966"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.970"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.970"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.972", %"class.std::__1::__bucket_list_deallocator.972"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !98

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.970"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.970"* null, %"struct.std::__1::__hash_node_base.970"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.970"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.970"* %36, %"struct.std::__1::__hash_node_base.970"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.970"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.970"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.970"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.970"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.970"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.970"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.970"* %82, %"struct.std::__1::__hash_node_base.970"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.970"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.970"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.970"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.970"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.970"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.970"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.970"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.970"* %80, %"struct.std::__1::__hash_node_base.970"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.970"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.970", %"struct.std::__1::__hash_node_base.970"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.970"*, %"struct.std::__1::__hash_node_base.970"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.970"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.966", %"class.std::__1::__hash_table.966"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.970"**, %"struct.std::__1::__hash_node_base.970"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.970"** null, %"struct.std::__1::__hash_node_base.970"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.970"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.970"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.972", %"class.std::__1::__bucket_list_deallocator.972"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E0_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1087", align 8
  %4 = alloca %"class.std::__1::function.1179", align 16
  %5 = bitcast %"class.std::__1::function.1179"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %4, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvENKUlPNS8_11InstructionEE0_clESC_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %8, align 16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvENKUlPNS5_11InstructionEE0_clES9_EUlPjE_FvSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = bitcast %"class.std::__1::function.1179"* %4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %10, align 16
  %11 = bitcast %"class.std::__1::function.1087"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  %12 = ptrtoint %"class.std::__1::function.1179"* %4 to i64
  %13 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %3, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %14, align 8
  %15 = bitcast %"class.std::__1::function.1087"* %3 to i64*
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %19 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %18, align 8
  %20 = icmp eq %"struct.spvtools::opt::Operand"* %17, %19
  br i1 %20, label %43, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %3, i64 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %38, %21
  %24 = phi %"struct.spvtools::opt::Operand"* [ %17, %21 ], [ %39, %38 ]
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %26) #12
  br i1 %27, label %28, label %38

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %29, align 8
  %31 = icmp eq %"class.std::__1::vector.3"* %30, null
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %30, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1, i32 2
  %34 = select i1 %31, i32** %33, i32** %32
  %35 = load i32*, i32** %34, align 8
  %36 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %13, align 8
  %37 = call zeroext i1 %36(%"union.std::__1::__function::__policy_storage"* nonnull %22, i32* %35) #12
  br i1 %37, label %38, label %41

38:                                               ; preds = %28, %23
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 1
  %40 = icmp eq %"struct.spvtools::opt::Operand"* %39, %19
  br i1 %40, label %41, label %23

41:                                               ; preds = %38, %28
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  br label %43

43:                                               ; preds = %41, %2
  %44 = phi %"struct.std::__1::__function::__policy"* [ %42, %41 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::function.1087", %"class.std::__1::function.1087"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #12
  br label %51

51:                                               ; preds = %48, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 16
  call void %54(i8* %58) #12
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1179"**
  %4 = load %"class.std::__1::function.1179"*, %"class.std::__1::function.1179"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1179", %"class.std::__1::function.1179"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvENKUlPNS8_11InstructionEE0_clESC_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::BasicBlock"**
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !15
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !15
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %8, i32 %15) #12
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  %19 = icmp eq i32 %3, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %17
  %21 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %22 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !15
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !15
  %31 = zext i8 %30 to i32
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %24, i32 %31) #12
  br label %33

33:                                               ; preds = %28, %20
  %34 = phi i32 [ %32, %28 ], [ 0, %20 ]
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %17, %33
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #12
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1322"**
  %49 = load %"class.std::__1::__tree_node.1322"*, %"class.std::__1::__tree_node.1322"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1322"* %49) #12
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1322"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1322"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1322"* %1 to %"class.std::__1::__tree_node.1322"**
  %6 = load %"class.std::__1::__tree_node.1322"*, %"class.std::__1::__tree_node.1322"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1322"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1322", %"class.std::__1::__tree_node.1322"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1322"**
  %9 = load %"class.std::__1::__tree_node.1322"*, %"class.std::__1::__tree_node.1322"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1322"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1322"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #12
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #12
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.1343"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #12
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #13
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #12
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #12
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #12
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #13
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #12
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #12
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #12
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #13
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #12
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #12
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = call i8* @_Znwm(i64 4) #13
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #12
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #13
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #12
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #12
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #12
  ret %"class.spvtools::opt::Instruction"* %126
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.948"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.944"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.948"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.948"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.948"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.948"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.948"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !99
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !99
  store i32 %58, i32* %57, align 4, !noalias !99
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !99
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.948"**
  store %"struct.std::__1::__hash_node_base.948"* null, %"struct.std::__1::__hash_node_base.948"** %61, align 8, !noalias !99
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.944"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !8
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.948"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.944", %"class.std::__1::__hash_table.944"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.948"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.948"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.948"* %104, %"struct.std::__1::__hash_node_base.948"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.948"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.948"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !8
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.948"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.948"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.948"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.948"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.948"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.948"*, i8 } undef, %"struct.std::__1::__hash_node_base.948"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.948"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.948"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE_S2_EEEEbPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"**
  %4 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %59, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.948"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.948"* %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.948"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.948"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %59

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.948"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %75, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.948"* %57, null
  br i1 %58, label %59, label %34

59:                                               ; preds = %55, %47, %28, %21, %2
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 3
  %61 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %61, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 4
  %65 = load i8, i8* %64, align 1, !range !15
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !15
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %63, i32 %70) #12
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i32 [ %71, %67 ], [ 0, %59 ]
  %74 = icmp eq i32 %73, %1
  br label %75

75:                                               ; preds = %50, %72
  %76 = phi i1 [ %74, %72 ], [ true, %50 ]
  ret i1 %76
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUljE0_S2_EEEEbPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #11 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"**
  %4 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %59, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.948"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.948"* %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.948"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.948"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %59

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.948"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.948"* %57, null
  br i1 %58, label %59, label %34

59:                                               ; preds = %47, %50, %55, %2, %21, %28
  %60 = phi %"struct.std::__1::__hash_node_base.948"* [ null, %21 ], [ null, %2 ], [ null, %28 ], [ %35, %50 ], [ null, %55 ], [ null, %47 ]
  %61 = icmp ne %"struct.std::__1::__hash_node_base.948"* %60, null
  ret i1 %61
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1374"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS7_4LoopEPNS7_11InstructionESD_EUljE_S2_EEEEbPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #11 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Loop"**
  %4 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.948"**, %"struct.std::__1::__hash_node_base.948"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.948"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.948"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.948"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.948"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.948"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.948", %"struct.std::__1::__hash_node_base.948"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.948"*, %"struct.std::__1::__hash_node_base.948"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.948"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %45, %48, %53, %2, %19, %26
  %58 = phi %"struct.std::__1::__hash_node_base.948"* [ null, %19 ], [ null, %2 ], [ null, %26 ], [ %33, %48 ], [ null, %53 ], [ null, %45 ]
  %59 = icmp eq %"struct.std::__1::__hash_node_base.948"* %58, null
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS3_4LoopES5_S5_EUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1384"**
  %5 = load %"class.std::__1::__function::__default_alloc_func.1384"*, %"class.std::__1::__function::__default_alloc_func.1384"** %4, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1384", %"class.std::__1::__function::__default_alloc_func.1384"* %5, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch", %"class.spvtools::opt::(anonymous namespace)::LoopUnswitch"* %8, i64 0, i32 3
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %10, %"class.spvtools::opt::Instruction"* %1) #12
  %12 = icmp eq %"class.spvtools::opt::BasicBlock"* %11, null
  br i1 %12, label %105, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1384", %"class.std::__1::__function::__default_alloc_func.1384"* %5, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::function.1197"*, %"class.std::__1::function.1197"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !15
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !15
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %17, i32 %24) #12
  br label %26

26:                                               ; preds = %21, %13
  %27 = phi i32 [ %25, %21 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.std::__1::function.1197", %"class.std::__1::function.1197"* %15, i64 0, i32 0, i32 1, i32 0
  %29 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32)** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::function.1197", %"class.std::__1::function.1197"* %15, i64 0, i32 0, i32 0
  %31 = tail call zeroext i1 %29(%"union.std::__1::__function::__policy_storage"* %30, i32 %27) #12
  br i1 %31, label %105, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1384", %"class.std::__1::__function::__default_alloc_func.1384"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::vector.1365"*, %"class.std::__1::vector.1365"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.1365", %"class.std::__1::vector.1365"* %34, i64 0, i32 0, i32 1
  %36 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.1365", %"class.std::__1::vector.1365"* %34, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %37, align 8
  %39 = icmp ult %"struct.std::__1::pair.1367"* %36, %38
  %40 = ptrtoint %"struct.std::__1::pair.1367"* %38 to i64
  br i1 %39, label %41, label %47

41:                                               ; preds = %32
  %42 = bitcast %"struct.std::__1::pair.1367"* %36 to i64*
  store i64 %6, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %36, i64 0, i32 1
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %36, i64 1
  %45 = ptrtoint %"struct.std::__1::pair.1367"* %44 to i64
  %46 = bitcast %"struct.std::__1::pair.1367"** %35 to i64*
  store i64 %45, i64* %46, align 8
  br label %105

47:                                               ; preds = %32
  %48 = ptrtoint %"struct.std::__1::pair.1367"* %36 to i64
  %49 = bitcast %"struct.std::__1::pair.1367"** %35 to i64*
  %50 = bitcast %"class.std::__1::vector.1365"* %34 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %48, %51
  %53 = ashr exact i64 %52, 4
  %54 = add nsw i64 %53, 1
  %55 = icmp ugt i64 %54, 1152921504606846975
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::vector.1365"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #14
  unreachable

58:                                               ; preds = %47
  %59 = bitcast %"struct.std::__1::pair.1367"** %37 to i64*
  %60 = sub i64 %40, %51
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 576460752303423487
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %54
  %66 = select i1 %65, i64 %54, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 1152921504606846975
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %68, %58
  %72 = phi i64 [ %66, %68 ], [ 1152921504606846975, %58 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"struct.std::__1::pair.1367"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"struct.std::__1::pair.1367"* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %78, i64 %53
  %80 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %78, i64 %77
  %81 = ptrtoint %"struct.std::__1::pair.1367"* %80 to i64
  %82 = bitcast %"struct.std::__1::pair.1367"* %79 to i64*
  store i64 %6, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %78, i64 %53, i32 1
  store i32 %2, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %79, i64 1
  %85 = ptrtoint %"struct.std::__1::pair.1367"* %84 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.1365", %"class.std::__1::vector.1365"* %34, i64 0, i32 0, i32 0
  %87 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %86, align 8
  %88 = load i64, i64* %49, align 8
  %89 = ptrtoint %"struct.std::__1::pair.1367"* %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 4
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds %"struct.std::__1::pair.1367", %"struct.std::__1::pair.1367"* %79, i64 %92
  %94 = ptrtoint %"struct.std::__1::pair.1367"* %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %76
  %97 = bitcast %"struct.std::__1::pair.1367"* %93 to i8*
  %98 = bitcast %"struct.std::__1::pair.1367"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %90, i1 false) #12
  %99 = load %"struct.std::__1::pair.1367"*, %"struct.std::__1::pair.1367"** %86, align 8
  br label %100

100:                                              ; preds = %96, %76
  %101 = phi %"struct.std::__1::pair.1367"* [ %87, %76 ], [ %99, %96 ]
  store i64 %94, i64* %50, align 8
  store i64 %85, i64* %49, align 8
  store i64 %81, i64* %59, align 8
  %102 = icmp eq %"struct.std::__1::pair.1367"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = bitcast %"struct.std::__1::pair.1367"* %101 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %3, %26, %41, %100, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEPvPKv(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !102
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEEvPv(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlS5_E1_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::Operand", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1389"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.1389"*, %"class.std::__1::__function::__default_alloc_func.1389"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %11 = bitcast %"struct.spvtools::opt::Operand"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 48
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !15
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !range !15
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 1, i32 2
  %24 = xor i1 %22, true
  %25 = zext i1 %24 to i32
  %26 = select i1 %19, i32 %25, i32 %23
  %27 = trunc i64 %16 to i32
  %28 = sub i32 %27, %26
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %324, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1389", %"class.std::__1::__function::__default_alloc_func.1389"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1389", %"class.std::__1::__function::__default_alloc_func.1389"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1389", %"class.std::__1::__function::__default_alloc_func.1389"* %8, i64 0, i32 0, i32 1
  %34 = bitcast %"struct.spvtools::opt::Operand"* %3 to i8*
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 2
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %51 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  %58 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %63 = bitcast i32** %61 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %65 = bitcast %"class.std::__1::unique_ptr.0"* %64 to i64*
  %66 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %62 to i32*
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %73 = bitcast i32** %71 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %75 = bitcast %"class.std::__1::unique_ptr.0"* %74 to i64*
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %321, %30
  %80 = phi i8 [ %21, %30 ], [ %323, %321 ]
  %81 = phi i8 [ %18, %30 ], [ %322, %321 ]
  %82 = phi i32 [ 0, %30 ], [ %319, %321 ]
  %83 = or i32 %82, 1
  %84 = icmp eq i8 %81, 0
  %85 = icmp eq i8 %80, 0
  %86 = select i1 %85, i32 1, i32 2
  %87 = xor i1 %85, true
  %88 = zext i1 %87 to i32
  %89 = select i1 %84, i32 %88, i32 %86
  %90 = add i32 %89, %83
  %91 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %90) #12
  %92 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32)** %31, align 8
  %93 = call zeroext i1 %92(%"union.std::__1::__function::__policy_storage"* %32, i32 %91) #12
  br i1 %93, label %94, label %318

94:                                               ; preds = %79
  %95 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %33, align 8
  %96 = zext i32 %91 to i64
  %97 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %95, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %148, label %100

100:                                              ; preds = %94
  %101 = call i64 @llvm.ctpop.i64(i64 %98) #12, !range !8
  %102 = icmp ugt i64 %101, 1
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = add i64 %98, 4294967295
  %105 = and i64 %104, %96
  br label %110

106:                                              ; preds = %100
  %107 = icmp ugt i64 %98, %96
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = urem i64 %96, %98
  br label %110

110:                                              ; preds = %108, %106, %103
  %111 = phi i64 [ %105, %103 ], [ %109, %108 ], [ %96, %106 ]
  %112 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %95, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %148, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.254"* %119, null
  br i1 %120, label %148, label %121

121:                                              ; preds = %117
  %122 = add i64 %98, -1
  br label %123

123:                                              ; preds = %144, %121
  %124 = phi %"struct.std::__1::__hash_node_base.254"* [ %119, %121 ], [ %146, %144 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %124, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base.254"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, %96
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  br i1 %102, label %132, label %130

130:                                              ; preds = %129
  %131 = and i64 %127, %122
  br label %136

132:                                              ; preds = %129
  %133 = icmp ult i64 %127, %98
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %127, %98
  br label %136

136:                                              ; preds = %134, %132, %130
  %137 = phi i64 [ %131, %130 ], [ %135, %134 ], [ %127, %132 ]
  %138 = icmp eq i64 %137, %111
  br i1 %138, label %144, label %148

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %124, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base.254"* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, %91
  br i1 %143, label %149, label %144

144:                                              ; preds = %139, %136
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %124, i64 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %145, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.254"* %146, null
  br i1 %147, label %148, label %123

148:                                              ; preds = %117, %110, %94, %144, %136
  call void @abort() #14
  unreachable

149:                                              ; preds = %139
  %150 = bitcast %"struct.std::__1::__hash_node_base.254"* %140 to %"struct.std::__1::pair.1392"*
  %151 = getelementptr inbounds %"struct.std::__1::pair.1392", %"struct.std::__1::pair.1392"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = load i8, i8* %17, align 4, !range !15
  %154 = icmp eq i8 %153, 0
  %155 = load i8, i8* %20, align 1, !range !15
  %156 = icmp eq i8 %155, 0
  %157 = select i1 %156, i32 1, i32 2
  %158 = xor i1 %156, true
  %159 = zext i1 %158 to i32
  %160 = select i1 %154, i32 %159, i32 %157
  %161 = add i32 %160, %82
  %162 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %161) #12
  %163 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %33, align 8
  %164 = zext i32 %162 to i64
  %165 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %163, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %220, label %168

168:                                              ; preds = %149
  %169 = call i64 @llvm.ctpop.i64(i64 %166) #12, !range !8
  %170 = icmp ugt i64 %169, 1
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = add i64 %166, 4294967295
  %173 = and i64 %172, %164
  br label %178

174:                                              ; preds = %168
  %175 = icmp ugt i64 %166, %164
  br i1 %175, label %178, label %176

176:                                              ; preds = %174
  %177 = urem i64 %164, %166
  br label %178

178:                                              ; preds = %176, %174, %171
  %179 = phi i64 [ %173, %171 ], [ %177, %176 ], [ %164, %174 ]
  %180 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %163, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %180, align 8
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %181, i64 %179
  %183 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base.254"* %183, null
  br i1 %184, label %220, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %183, i64 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.254"* %187, null
  br i1 %188, label %220, label %189

189:                                              ; preds = %185
  %190 = add i64 %166, -1
  br label %191

191:                                              ; preds = %212, %189
  %192 = phi %"struct.std::__1::__hash_node_base.254"* [ %187, %189 ], [ %214, %212 ]
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %192, i64 1
  %194 = bitcast %"struct.std::__1::__hash_node_base.254"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = icmp eq i64 %195, %164
  br i1 %196, label %207, label %197

197:                                              ; preds = %191
  br i1 %170, label %200, label %198

198:                                              ; preds = %197
  %199 = and i64 %195, %190
  br label %204

200:                                              ; preds = %197
  %201 = icmp ult i64 %195, %166
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = urem i64 %195, %166
  br label %204

204:                                              ; preds = %202, %200, %198
  %205 = phi i64 [ %199, %198 ], [ %203, %202 ], [ %195, %200 ]
  %206 = icmp eq i64 %205, %179
  br i1 %206, label %212, label %220

207:                                              ; preds = %191
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %192, i64 2
  %209 = bitcast %"struct.std::__1::__hash_node_base.254"* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %162
  br i1 %211, label %216, label %212

212:                                              ; preds = %207, %204
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %192, i64 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %213, align 8
  %215 = icmp eq %"struct.std::__1::__hash_node_base.254"* %214, null
  br i1 %215, label %220, label %191

216:                                              ; preds = %207
  %217 = bitcast %"struct.std::__1::__hash_node_base.254"* %208 to %"struct.std::__1::pair.1392"*
  %218 = getelementptr inbounds %"struct.std::__1::pair.1392", %"struct.std::__1::pair.1392"* %217, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  br label %220

220:                                              ; preds = %212, %204, %216, %185, %178, %149
  %221 = phi i32 [ %219, %216 ], [ %162, %178 ], [ %162, %149 ], [ %162, %185 ], [ %162, %204 ], [ %162, %212 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  store i64 0, i64* %42, align 8
  store i64 1, i64* %37, align 8
  store i32 %221, i32* %43, align 8
  store i32 1, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  store i64 0, i64* %47, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  store i64 0, i64* %52, align 8
  %222 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #12
  %223 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %53, align 8
  %225 = icmp ult %"struct.spvtools::opt::Operand"* %223, %224
  br i1 %225, label %226, label %240

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 0
  %228 = load i32, i32* %44, align 8
  store i32 %228, i32* %227, align 8
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 1
  %230 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %229, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %231 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 1, i32 1
  store i64 0, i64* %231, align 8
  %232 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 1, i32 2
  %233 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 1, i32 3, i64 0
  %234 = bitcast i32** %232 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %233, %"struct.std::__1::aligned_storage<4, 4>::type"** %234, align 8
  %235 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 0, i32 1, i32 4
  %236 = bitcast %"class.std::__1::unique_ptr.0"* %235 to i64*
  store i64 0, i64* %236, align 8
  %237 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %229, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %45) #12
  %238 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %223, i64 1
  %239 = ptrtoint %"struct.spvtools::opt::Operand"* %238 to i64
  store i64 %239, i64* %11, align 8
  br label %241

240:                                              ; preds = %220
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %9, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %3) #12
  br label %241

241:                                              ; preds = %240, %226
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %242 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %55, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %55, align 8
  %243 = icmp eq %"class.std::__1::vector.3"* %242, null
  br i1 %243, label %255, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %242, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %242, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #13
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %242 to i8*
  call void @_ZdlPv(i8* %254) #13
  br label %255

255:                                              ; preds = %253, %241
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %256 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %56, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %56, align 8
  %257 = icmp eq %"class.std::__1::vector.3"* %256, null
  br i1 %257, label %269, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %256, i64 0, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = icmp eq i32* %260, null
  br i1 %261, label %267, label %262

262:                                              ; preds = %258
  %263 = ptrtoint i32* %260 to i64
  %264 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %256, i64 0, i32 0, i32 1
  %265 = bitcast i32** %264 to i64*
  store i64 %263, i64* %265, align 8
  %266 = bitcast i32* %260 to i8*
  call void @_ZdlPv(i8* %266) #13
  br label %267

267:                                              ; preds = %262, %258
  %268 = bitcast %"class.std::__1::vector.3"* %256 to i8*
  call void @_ZdlPv(i8* %268) #13
  br label %269

269:                                              ; preds = %267, %255
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %58) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %62, %"struct.std::__1::aligned_storage<4, 4>::type"** %63, align 8
  store i64 0, i64* %65, align 8
  store i64 1, i64* %60, align 8
  store i32 %152, i32* %66, align 8
  store i32 1, i32* %67, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  store i64 0, i64* %70, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %72, %"struct.std::__1::aligned_storage<4, 4>::type"** %73, align 8
  store i64 0, i64* %75, align 8
  %270 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %68, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #12
  %271 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %272 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %53, align 8
  %273 = icmp ult %"struct.spvtools::opt::Operand"* %271, %272
  br i1 %273, label %274, label %288

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 0
  %276 = load i32, i32* %67, align 8
  store i32 %276, i32* %275, align 8
  %277 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1
  %278 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %277, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %278, align 8
  %279 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 1
  store i64 0, i64* %279, align 8
  %280 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 2
  %281 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 3, i64 0
  %282 = bitcast i32** %280 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %281, %"struct.std::__1::aligned_storage<4, 4>::type"** %282, align 8
  %283 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 4
  %284 = bitcast %"class.std::__1::unique_ptr.0"* %283 to i64*
  store i64 0, i64* %284, align 8
  %285 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %277, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %68) #12
  %286 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 1
  %287 = ptrtoint %"struct.spvtools::opt::Operand"* %286 to i64
  store i64 %287, i64* %11, align 8
  br label %289

288:                                              ; preds = %269
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %9, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #12
  br label %289

289:                                              ; preds = %288, %274
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %290 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %77, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %77, align 8
  %291 = icmp eq %"class.std::__1::vector.3"* %290, null
  br i1 %291, label %303, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %290, i64 0, i32 0, i32 0
  %294 = load i32*, i32** %293, align 8
  %295 = icmp eq i32* %294, null
  br i1 %295, label %301, label %296

296:                                              ; preds = %292
  %297 = ptrtoint i32* %294 to i64
  %298 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %290, i64 0, i32 0, i32 1
  %299 = bitcast i32** %298 to i64*
  store i64 %297, i64* %299, align 8
  %300 = bitcast i32* %294 to i8*
  call void @_ZdlPv(i8* %300) #13
  br label %301

301:                                              ; preds = %296, %292
  %302 = bitcast %"class.std::__1::vector.3"* %290 to i8*
  call void @_ZdlPv(i8* %302) #13
  br label %303

303:                                              ; preds = %301, %289
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %304 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %78, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %78, align 8
  %305 = icmp eq %"class.std::__1::vector.3"* %304, null
  br i1 %305, label %317, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %306
  %311 = ptrtoint i32* %308 to i64
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 1
  %313 = bitcast i32** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = bitcast i32* %308 to i8*
  call void @_ZdlPv(i8* %314) #13
  br label %315

315:                                              ; preds = %310, %306
  %316 = bitcast %"class.std::__1::vector.3"* %304 to i8*
  call void @_ZdlPv(i8* %316) #13
  br label %317

317:                                              ; preds = %315, %303
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %58) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #12
  br label %318

318:                                              ; preds = %317, %79
  %319 = add i32 %82, 2
  %320 = icmp ult i32 %319, %28
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = load i8, i8* %17, align 4, !range !15
  %323 = load i8, i8* %20, align 1, !range !15
  br label %79

324:                                              ; preds = %318, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEPvPKv(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #13, !noalias !107
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 16, i1 false) #12
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"struct.std::__1::__function::__policy"**
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to %"struct.std::__1::__function::__policy"**
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  store %"struct.std::__1::__function::__policy"* %12, %"struct.std::__1::__function::__policy"** %9, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 0
  %14 = load i8* (i8*)*, i8* (i8*)** %13, align 8
  %15 = icmp eq i8* (i8*)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i8* %14(i8* %18) #12
  %20 = bitcast i8* %2 to i8**
  store i8* %19, i8** %20, align 8
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = getelementptr inbounds i8, i8* %0, i64 32
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEEvPv(i8*) #0 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %"struct.std::__1::__function::__policy"**
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr.40"* %2 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %559

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.40"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.40"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::unique_ptr.40"** %16 to i64*
  br i1 %21, label %246, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::unique_ptr.40"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.spvtools::opt::BasicBlock"** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::unique_ptr.40"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.std::__1::unique_ptr.40"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %40 to i64*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.40"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %44, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !112

51:                                               ; preds = %39, %30
  %52 = phi %"class.std::__1::unique_ptr.40"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.std::__1::unique_ptr.40"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::unique_ptr.40"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.std::__1::unique_ptr.40"* %57 to i64*
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %60, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 1
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %66, align 8
  store i64 %68, i64* %65, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 2
  %71 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %72, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 3
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 3
  %77 = bitcast %"class.std::__1::unique_ptr.40"* %76 to i64*
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8
  store i64 %80, i64* %77, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 4
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 4
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %82 to i64*
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.40"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %84, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 5
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 5
  %89 = bitcast %"class.std::__1::unique_ptr.40"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr.40"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %90, align 8
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 6
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %94 to i64*
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.40"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %96, align 8
  store i64 %98, i64* %95, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 7
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 7
  %101 = bitcast %"class.std::__1::unique_ptr.40"* %100 to i64*
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store i64 %104, i64* %101, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 8
  %107 = icmp eq %"class.std::__1::unique_ptr.40"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.std::__1::unique_ptr.40"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.std::__1::unique_ptr.40"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %559

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.std::__1::unique_ptr.40"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.std::__1::unique_ptr.40"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.std::__1::unique_ptr.40"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %10
  %121 = ptrtoint %"class.std::__1::unique_ptr.40"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %123
  %125 = icmp ult %"class.std::__1::unique_ptr.40"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %"class.spvtools::opt::BasicBlock"** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.std::__1::unique_ptr.40"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.40"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.40"* %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !113

149:                                              ; preds = %137, %126
  %150 = phi %"class.std::__1::unique_ptr.40"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.std::__1::unique_ptr.40"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.std::__1::unique_ptr.40"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %176

154:                                              ; preds = %176, %149
  %155 = phi %"class.std::__1::unique_ptr.40"* [ %152, %149 ], [ %226, %176 ]
  %156 = ptrtoint %"class.std::__1::unique_ptr.40"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %228, label %160

160:                                              ; preds = %157, %174
  %161 = phi %"class.std::__1::unique_ptr.40"* [ %164, %174 ], [ %118, %157 ]
  %162 = phi %"class.std::__1::unique_ptr.40"* [ %163, %174 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %161, i64 -1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr.40"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %165, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %164, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr.40"* %164 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %160
  %173 = bitcast %"class.std::__1::unique_ptr.40"* %164 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %173, %"class.spvtools::opt::BasicBlock"* nonnull %169) #12
  br label %174

174:                                              ; preds = %172, %160
  %175 = icmp eq %"class.std::__1::unique_ptr.40"* %163, %1
  br i1 %175, label %228, label %160

176:                                              ; preds = %149, %176
  %177 = phi %"class.std::__1::unique_ptr.40"* [ %226, %176 ], [ %150, %149 ]
  %178 = phi %"class.std::__1::unique_ptr.40"* [ %225, %176 ], [ %151, %149 ]
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr.40"* %178 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.40"* %177 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 1
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 1
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr.40"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.40"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 2
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 2
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr.40"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr.40"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 3
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 3
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr.40"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr.40"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 4
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 4
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.std::__1::unique_ptr.40"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %203, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.40"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 5
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 5
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 0, i32 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::unique_ptr.40"* %207 to i64*
  %211 = load i64, i64* %210, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %209, align 8
  %212 = bitcast %"class.std::__1::unique_ptr.40"* %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 6
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 6
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = bitcast %"class.std::__1::unique_ptr.40"* %213 to i64*
  %217 = load i64, i64* %216, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %218 = bitcast %"class.std::__1::unique_ptr.40"* %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 7
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 7
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %219, i64 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.std::__1::unique_ptr.40"* %219 to i64*
  %223 = load i64, i64* %222, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %221, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.40"* %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 8
  %227 = icmp ult %"class.std::__1::unique_ptr.40"* %225, %17
  br i1 %227, label %176, label %154

228:                                              ; preds = %174, %157
  %229 = icmp eq %"class.std::__1::unique_ptr.40"* %119, %2
  br i1 %229, label %559, label %230

230:                                              ; preds = %228, %242
  %231 = phi %"class.std::__1::unique_ptr.40"* [ %244, %242 ], [ %1, %228 ]
  %232 = phi %"class.std::__1::unique_ptr.40"* [ %243, %242 ], [ %2, %228 ]
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %232, i64 0, i32 0, i32 0, i32 0
  %234 = bitcast %"class.std::__1::unique_ptr.40"* %232 to i64*
  %235 = load i64, i64* %234, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %233, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %231, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.40"* %231 to i64*
  store i64 %235, i64* %238, align 8
  %239 = icmp eq %"class.spvtools::opt::BasicBlock"* %237, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %230
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %231 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %241, %"class.spvtools::opt::BasicBlock"* nonnull %237) #12
  br label %242

242:                                              ; preds = %240, %230
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %232, i64 1
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %231, i64 1
  %245 = icmp eq %"class.std::__1::unique_ptr.40"* %243, %119
  br i1 %245, label %559, label %230

246:                                              ; preds = %12
  %247 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %18, %248
  %250 = ashr exact i64 %249, 3
  %251 = add nsw i64 %250, %10
  %252 = icmp ugt i64 %251, 2305843009213693951
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #14
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %15, %248
  %257 = ashr exact i64 %256, 3
  %258 = icmp ult i64 %257, 1152921504606846975
  br i1 %258, label %262, label %259

259:                                              ; preds = %255
  %260 = sub i64 %6, %248
  %261 = ashr exact i64 %260, 3
  br label %272

262:                                              ; preds = %255
  %263 = ashr exact i64 %256, 2
  %264 = icmp ult i64 %263, %251
  %265 = select i1 %264, i64 %251, i64 %263
  %266 = sub i64 %6, %248
  %267 = ashr exact i64 %266, 3
  %268 = icmp eq i64 %265, 0
  br i1 %268, label %278, label %269

269:                                              ; preds = %262
  %270 = icmp ugt i64 %265, 2305843009213693951
  br i1 %270, label %271, label %272

271:                                              ; preds = %269
  tail call void @abort() #14
  unreachable

272:                                              ; preds = %259, %269
  %273 = phi i64 [ 2305843009213693951, %259 ], [ %265, %269 ]
  %274 = phi i64 [ %261, %259 ], [ %267, %269 ]
  %275 = shl i64 %273, 3
  %276 = tail call i8* @_Znwm(i64 %275) #13
  %277 = bitcast i8* %276 to %"class.std::__1::unique_ptr.40"*
  br label %278

278:                                              ; preds = %272, %262
  %279 = phi i64 [ %274, %272 ], [ %267, %262 ]
  %280 = phi i64 [ %273, %272 ], [ 0, %262 ]
  %281 = phi %"class.std::__1::unique_ptr.40"* [ %277, %272 ], [ null, %262 ]
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %281, i64 %279
  %283 = ptrtoint %"class.std::__1::unique_ptr.40"* %282 to i64
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %281, i64 %280
  %285 = ptrtoint %"class.std::__1::unique_ptr.40"* %284 to i64
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %282, i64 %10
  %287 = add i64 %9, -8
  %288 = lshr i64 %287, 3
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %278, %292
  %293 = phi %"class.std::__1::unique_ptr.40"* [ %301, %292 ], [ %282, %278 ]
  %294 = phi i64 [ %302, %292 ], [ %283, %278 ]
  %295 = phi %"class.std::__1::unique_ptr.40"* [ %303, %292 ], [ %2, %278 ]
  %296 = phi i64 [ %304, %292 ], [ %290, %278 ]
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %295, i64 0, i32 0, i32 0, i32 0
  %298 = bitcast %"class.std::__1::unique_ptr.40"* %295 to i64*
  %299 = load i64, i64* %298, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %297, align 8
  %300 = inttoptr i64 %294 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %293, i64 1
  %302 = ptrtoint %"class.std::__1::unique_ptr.40"* %301 to i64
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %295, i64 1
  %304 = add i64 %296, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %292, !llvm.loop !114

306:                                              ; preds = %292
  %307 = ptrtoint %"class.std::__1::unique_ptr.40"* %301 to i64
  br label %308

308:                                              ; preds = %278, %306
  %309 = phi %"class.std::__1::unique_ptr.40"* [ %282, %278 ], [ %301, %306 ]
  %310 = phi i64 [ %283, %278 ], [ %307, %306 ]
  %311 = phi %"class.std::__1::unique_ptr.40"* [ %2, %278 ], [ %303, %306 ]
  %312 = icmp ult i64 %287, 56
  br i1 %312, label %367, label %313

313:                                              ; preds = %308, %313
  %314 = phi %"class.std::__1::unique_ptr.40"* [ %363, %313 ], [ %309, %308 ]
  %315 = phi i64 [ %364, %313 ], [ %310, %308 ]
  %316 = phi %"class.std::__1::unique_ptr.40"* [ %365, %313 ], [ %311, %308 ]
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %319 = load i64, i64* %318, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  %320 = inttoptr i64 %315 to i64*
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 1
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 1
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %323, align 8
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 2
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 2
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::unique_ptr.40"* %328 to i64*
  %331 = load i64, i64* %330, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %329, align 8
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 3
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 3
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::unique_ptr.40"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %335, align 8
  %338 = bitcast %"class.std::__1::unique_ptr.40"* %333 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 4
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 4
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::unique_ptr.40"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %341, align 8
  %344 = bitcast %"class.std::__1::unique_ptr.40"* %339 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 5
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 5
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %346, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::unique_ptr.40"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %347, align 8
  %350 = bitcast %"class.std::__1::unique_ptr.40"* %345 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 6
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 6
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.std::__1::unique_ptr.40"* %352 to i64*
  %355 = load i64, i64* %354, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %353, align 8
  %356 = bitcast %"class.std::__1::unique_ptr.40"* %351 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 7
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 7
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.std::__1::unique_ptr.40"* %358 to i64*
  %361 = load i64, i64* %360, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %359, align 8
  %362 = bitcast %"class.std::__1::unique_ptr.40"* %357 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 8
  %364 = ptrtoint %"class.std::__1::unique_ptr.40"* %363 to i64
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 8
  %366 = icmp eq %"class.std::__1::unique_ptr.40"* %286, %363
  br i1 %366, label %367, label %313

367:                                              ; preds = %313, %308
  %368 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, %1
  br i1 %369, label %451, label %370

370:                                              ; preds = %367
  %371 = ptrtoint %"class.std::__1::unique_ptr.40"* %368 to i64
  %372 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %373 = ptrtoint %"class.spvtools::opt::BasicBlock"** %372 to i64
  %374 = sub i64 %373, %371
  %375 = lshr i64 %374, 3
  %376 = add nuw nsw i64 %375, 1
  %377 = and i64 %376, 7
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %391, label %379

379:                                              ; preds = %370, %379
  %380 = phi %"class.std::__1::unique_ptr.40"* [ %383, %379 ], [ %282, %370 ]
  %381 = phi %"class.std::__1::unique_ptr.40"* [ %384, %379 ], [ %1, %370 ]
  %382 = phi i64 [ %389, %379 ], [ %377, %370 ]
  %383 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %380, i64 -1
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %381, i64 -1
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %384, i64 0, i32 0, i32 0, i32 0
  %386 = bitcast %"class.std::__1::unique_ptr.40"* %384 to i64*
  %387 = load i64, i64* %386, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %385, align 8
  %388 = bitcast %"class.std::__1::unique_ptr.40"* %383 to i64*
  store i64 %387, i64* %388, align 8
  %389 = add i64 %382, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %379, !llvm.loop !115

391:                                              ; preds = %379, %370
  %392 = phi %"class.std::__1::unique_ptr.40"* [ undef, %370 ], [ %383, %379 ]
  %393 = phi %"class.std::__1::unique_ptr.40"* [ %282, %370 ], [ %383, %379 ]
  %394 = phi %"class.std::__1::unique_ptr.40"* [ %1, %370 ], [ %384, %379 ]
  %395 = icmp ult i64 %374, 56
  br i1 %395, label %448, label %396

396:                                              ; preds = %391, %396
  %397 = phi %"class.std::__1::unique_ptr.40"* [ %441, %396 ], [ %393, %391 ]
  %398 = phi %"class.std::__1::unique_ptr.40"* [ %442, %396 ], [ %394, %391 ]
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -1
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = bitcast %"class.std::__1::unique_ptr.40"* %400 to i64*
  %403 = load i64, i64* %402, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %401, align 8
  %404 = bitcast %"class.std::__1::unique_ptr.40"* %399 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -2
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -2
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.std::__1::unique_ptr.40"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %407, align 8
  %410 = bitcast %"class.std::__1::unique_ptr.40"* %405 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -3
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -3
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %412, i64 0, i32 0, i32 0, i32 0
  %414 = bitcast %"class.std::__1::unique_ptr.40"* %412 to i64*
  %415 = load i64, i64* %414, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %413, align 8
  %416 = bitcast %"class.std::__1::unique_ptr.40"* %411 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -4
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -4
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %418, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr.40"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %419, align 8
  %422 = bitcast %"class.std::__1::unique_ptr.40"* %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -5
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -5
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::unique_ptr.40"* %424 to i64*
  %427 = load i64, i64* %426, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %425, align 8
  %428 = bitcast %"class.std::__1::unique_ptr.40"* %423 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -6
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -6
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::unique_ptr.40"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %431, align 8
  %434 = bitcast %"class.std::__1::unique_ptr.40"* %429 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -7
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -7
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.std::__1::unique_ptr.40"* %436 to i64*
  %439 = load i64, i64* %438, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %437, align 8
  %440 = bitcast %"class.std::__1::unique_ptr.40"* %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -8
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -8
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = bitcast %"class.std::__1::unique_ptr.40"* %442 to i64*
  %445 = load i64, i64* %444, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %443, align 8
  %446 = bitcast %"class.std::__1::unique_ptr.40"* %441 to i64*
  store i64 %445, i64* %446, align 8
  %447 = icmp eq %"class.std::__1::unique_ptr.40"* %442, %368
  br i1 %447, label %448, label %396

448:                                              ; preds = %396, %391
  %449 = phi %"class.std::__1::unique_ptr.40"* [ %392, %391 ], [ %441, %396 ]
  %450 = ptrtoint %"class.std::__1::unique_ptr.40"* %449 to i64
  br label %451

451:                                              ; preds = %448, %367
  %452 = phi i64 [ %283, %367 ], [ %450, %448 ]
  %453 = phi %"class.std::__1::unique_ptr.40"* [ %282, %367 ], [ %449, %448 ]
  %454 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  %455 = icmp eq %"class.std::__1::unique_ptr.40"* %454, %1
  br i1 %455, label %481, label %456

456:                                              ; preds = %451
  %457 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %454, i64 -1, i32 0, i32 0, i32 0
  %458 = ptrtoint %"class.spvtools::opt::BasicBlock"** %457 to i64
  %459 = sub i64 %458, %6
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %476, label %464

464:                                              ; preds = %456, %464
  %465 = phi %"class.std::__1::unique_ptr.40"* [ %473, %464 ], [ %286, %456 ]
  %466 = phi %"class.std::__1::unique_ptr.40"* [ %472, %464 ], [ %1, %456 ]
  %467 = phi i64 [ %474, %464 ], [ %462, %456 ]
  %468 = bitcast %"class.std::__1::unique_ptr.40"* %465 to i64*
  %469 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %466, i64 0, i32 0, i32 0, i32 0
  %470 = bitcast %"class.std::__1::unique_ptr.40"* %466 to i64*
  %471 = load i64, i64* %470, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %469, align 8
  store i64 %471, i64* %468, align 8
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %466, i64 1
  %473 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %465, i64 1
  %474 = add i64 %467, -1
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %464, !llvm.loop !116

476:                                              ; preds = %464, %456
  %477 = phi %"class.std::__1::unique_ptr.40"* [ undef, %456 ], [ %473, %464 ]
  %478 = phi %"class.std::__1::unique_ptr.40"* [ %286, %456 ], [ %473, %464 ]
  %479 = phi %"class.std::__1::unique_ptr.40"* [ %1, %456 ], [ %472, %464 ]
  %480 = icmp ult i64 %459, 56
  br i1 %480, label %535, label %483

481:                                              ; preds = %451
  %482 = ptrtoint %"class.std::__1::unique_ptr.40"* %453 to i64
  br label %538

483:                                              ; preds = %476, %483
  %484 = phi %"class.std::__1::unique_ptr.40"* [ %533, %483 ], [ %478, %476 ]
  %485 = phi %"class.std::__1::unique_ptr.40"* [ %532, %483 ], [ %479, %476 ]
  %486 = bitcast %"class.std::__1::unique_ptr.40"* %484 to i64*
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 0, i32 0, i32 0, i32 0
  %488 = bitcast %"class.std::__1::unique_ptr.40"* %485 to i64*
  %489 = load i64, i64* %488, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  store i64 %489, i64* %486, align 8
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 1
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 1
  %492 = bitcast %"class.std::__1::unique_ptr.40"* %491 to i64*
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %490, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr.40"* %490 to i64*
  %495 = load i64, i64* %494, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %493, align 8
  store i64 %495, i64* %492, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 2
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 2
  %498 = bitcast %"class.std::__1::unique_ptr.40"* %497 to i64*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %496, i64 0, i32 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::unique_ptr.40"* %496 to i64*
  %501 = load i64, i64* %500, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %499, align 8
  store i64 %501, i64* %498, align 8
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 3
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 3
  %504 = bitcast %"class.std::__1::unique_ptr.40"* %503 to i64*
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %502, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.std::__1::unique_ptr.40"* %502 to i64*
  %507 = load i64, i64* %506, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %505, align 8
  store i64 %507, i64* %504, align 8
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 4
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 4
  %510 = bitcast %"class.std::__1::unique_ptr.40"* %509 to i64*
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %508, i64 0, i32 0, i32 0, i32 0
  %512 = bitcast %"class.std::__1::unique_ptr.40"* %508 to i64*
  %513 = load i64, i64* %512, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %511, align 8
  store i64 %513, i64* %510, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 5
  %515 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 5
  %516 = bitcast %"class.std::__1::unique_ptr.40"* %515 to i64*
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = bitcast %"class.std::__1::unique_ptr.40"* %514 to i64*
  %519 = load i64, i64* %518, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %517, align 8
  store i64 %519, i64* %516, align 8
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 6
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 6
  %522 = bitcast %"class.std::__1::unique_ptr.40"* %521 to i64*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %520, i64 0, i32 0, i32 0, i32 0
  %524 = bitcast %"class.std::__1::unique_ptr.40"* %520 to i64*
  %525 = load i64, i64* %524, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %523, align 8
  store i64 %525, i64* %522, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 7
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 7
  %528 = bitcast %"class.std::__1::unique_ptr.40"* %527 to i64*
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %526, i64 0, i32 0, i32 0, i32 0
  %530 = bitcast %"class.std::__1::unique_ptr.40"* %526 to i64*
  %531 = load i64, i64* %530, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %529, align 8
  store i64 %531, i64* %528, align 8
  %532 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 8
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 8
  %534 = icmp eq %"class.std::__1::unique_ptr.40"* %532, %454
  br i1 %534, label %535, label %483

535:                                              ; preds = %483, %476
  %536 = phi %"class.std::__1::unique_ptr.40"* [ %477, %476 ], [ %533, %483 ]
  %537 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  br label %538

538:                                              ; preds = %535, %481
  %539 = phi %"class.std::__1::unique_ptr.40"* [ %1, %481 ], [ %537, %535 ]
  %540 = phi %"class.std::__1::unique_ptr.40"* [ %286, %481 ], [ %536, %535 ]
  %541 = phi i64 [ %482, %481 ], [ %452, %535 ]
  %542 = ptrtoint %"class.std::__1::unique_ptr.40"* %540 to i64
  %543 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  store i64 %541, i64* %247, align 8
  store i64 %542, i64* %22, align 8
  store i64 %285, i64* %14, align 8
  %544 = icmp eq %"class.std::__1::unique_ptr.40"* %539, %543
  br i1 %544, label %555, label %545

545:                                              ; preds = %538, %553
  %546 = phi %"class.std::__1::unique_ptr.40"* [ %547, %553 ], [ %539, %538 ]
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %546, i64 -1
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %547, i64 0, i32 0, i32 0, i32 0
  %549 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %548, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %548, align 8
  %550 = icmp eq %"class.spvtools::opt::BasicBlock"* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %545
  %552 = bitcast %"class.std::__1::unique_ptr.40"* %547 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %552, %"class.spvtools::opt::BasicBlock"* nonnull %549) #12
  br label %553

553:                                              ; preds = %551, %545
  %554 = icmp eq %"class.std::__1::unique_ptr.40"* %547, %543
  br i1 %554, label %555, label %545

555:                                              ; preds = %553, %538
  %556 = icmp eq %"class.std::__1::unique_ptr.40"* %543, null
  br i1 %556, label %559, label %557

557:                                              ; preds = %555
  %558 = bitcast %"class.std::__1::unique_ptr.40"* %543 to i8*
  tail call void @_ZdlPv(i8* %558) #13
  br label %559

559:                                              ; preds = %242, %557, %555, %111, %228, %4
  %560 = phi %"class.std::__1::unique_ptr.40"* [ %1, %4 ], [ %1, %228 ], [ %1, %111 ], [ %282, %555 ], [ %282, %557 ], [ %1, %242 ]
  ret %"class.std::__1::unique_ptr.40"* %560
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 112) #13
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #12
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #12
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 39, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #12
  %54 = call i8* @_Znwm(i64 96) #13
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to %"class.spvtools::utils::SmallVector"*
  %65 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %66 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %54, i64 24
  %70 = getelementptr inbounds i8, i8* %54, i64 32
  %71 = bitcast i8* %69 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %65) #12
  %75 = getelementptr inbounds i8, i8* %54, i64 48
  %76 = bitcast i8* %75 to i32*
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 56
  %80 = bitcast i8* %79 to %"class.spvtools::utils::SmallVector"*
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %54, i64 64
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %54, i64 72
  %86 = getelementptr inbounds i8, i8* %54, i64 80
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %54, i64 88
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %81) #12
  %91 = getelementptr inbounds i8, i8* %54, i64 96
  %92 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %93 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %94 = ptrtoint i8* %91 to i64
  store i64 %94, i64* %93, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %92, %"class.spvtools::opt::IRContext"* %13, i32 247, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #12
  %95 = ptrtoint i8* %11 to i64
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %3
  %101 = bitcast %"struct.spvtools::opt::Operand"* %98 to i8*
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %102, %98
  br i1 %103, label %126, label %104

104:                                              ; preds = %100, %122
  %105 = phi %"struct.spvtools::opt::Operand"* [ %106, %122 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %104
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %106, %98
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load i8*, i8** %56, align 8
  br label %126

126:                                              ; preds = %124, %100
  %127 = phi i8* [ %125, %124 ], [ %101, %100 ]
  store %"struct.spvtools::opt::Operand"* %98, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %3, %126
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %130, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %130, align 8
  %132 = icmp eq %"class.std::__1::vector.3"* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %137, %133
  %143 = bitcast %"class.std::__1::vector.3"* %131 to i8*
  call void @_ZdlPv(i8* %143) #13
  br label %144

144:                                              ; preds = %128, %142
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %196, label %185

149:                                              ; preds = %196
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %198 to i8*
  call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %196, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %161, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.3"* %162, null
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i32* %166 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %172) #13
  br label %173

173:                                              ; preds = %168, %164
  %174 = bitcast %"class.std::__1::vector.3"* %162 to i8*
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %160, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %10, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #12
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret %"class.spvtools::opt::Instruction"* %176

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  call void @_ZdlPv(i8* %193) #13
  br label %194

194:                                              ; preds = %189, %185
  %195 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %194, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %199 = icmp eq %"class.std::__1::vector.3"* %198, null
  br i1 %199, label %160, label %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN8spvtools5utils11SmallVectorIjLm2EEEjEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRS5_jEEEvDpOT_(%"class.std::__1::vector.1233"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair.1235"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1233"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 384307168202282325
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.1233"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #14
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair.1235"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 48
  %21 = icmp ult i64 %20, 192153584101141162
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 384307168202282325, %15 ]
  %29 = mul i64 %28, 48
  %30 = tail call i8* @_Znwm(i64 %29) #13
  %31 = bitcast i8* %30 to %"struct.std::__1::pair.1235"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.std::__1::pair.1235"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %33
  %37 = ptrtoint %"struct.std::__1::pair.1235"* %36 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %35, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10, i32 0, i32 1
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10, i32 0, i32 2
  %42 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10, i32 0, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10, i32 0, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %38, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %1) #12
  %47 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %34, i64 %10, i32 1
  %48 = load i32, i32* %2, align 4
  store i32 %48, i32* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %35, i64 1
  %50 = ptrtoint %"struct.std::__1::pair.1235"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1233", %"class.std::__1::vector.1233"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %51, align 8
  %53 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %4, align 8
  %54 = icmp eq %"struct.std::__1::pair.1235"* %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %32
  %56 = ptrtoint %"struct.std::__1::pair.1235"* %52 to i64
  br label %79

57:                                               ; preds = %32, %57
  %58 = phi %"struct.std::__1::pair.1235"* [ %60, %57 ], [ %35, %32 ]
  %59 = phi %"struct.std::__1::pair.1235"* [ %61, %57 ], [ %53, %32 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1
  %61 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %59, i64 -1
  %62 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %60, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %61, i64 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %60, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1, i32 0, i32 1
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1, i32 0, i32 2
  %67 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1, i32 0, i32 3, i64 0
  %68 = bitcast i32** %66 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %67, %"struct.std::__1::aligned_storage<4, 4>::type"** %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1, i32 0, i32 4
  %70 = bitcast %"class.std::__1::unique_ptr.0"* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %62, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %63) #12
  %72 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %58, i64 -1, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %59, i64 -1, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = icmp eq %"struct.std::__1::pair.1235"* %61, %52
  br i1 %75, label %76, label %57

76:                                               ; preds = %57
  %77 = load i64, i64* %7, align 8
  %78 = load %"struct.std::__1::pair.1235"*, %"struct.std::__1::pair.1235"** %4, align 8
  br label %79

79:                                               ; preds = %55, %76
  %80 = phi %"struct.std::__1::pair.1235"* [ %52, %55 ], [ %78, %76 ]
  %81 = phi %"struct.std::__1::pair.1235"* [ %35, %55 ], [ %60, %76 ]
  %82 = phi i64 [ %56, %55 ], [ %77, %76 ]
  %83 = ptrtoint %"struct.std::__1::pair.1235"* %81 to i64
  store i64 %83, i64* %7, align 8
  store i64 %50, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %84 = inttoptr i64 %82 to %"struct.std::__1::pair.1235"*
  %85 = icmp eq %"struct.std::__1::pair.1235"* %80, %84
  br i1 %85, label %106, label %86

86:                                               ; preds = %79, %104
  %87 = phi %"struct.std::__1::pair.1235"* [ %88, %104 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %87, i64 -1
  %89 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %88, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.1235", %"struct.std::__1::pair.1235"* %87, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %90, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %90, align 8
  %92 = icmp eq %"class.std::__1::vector.3"* %91, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %91, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %91, i64 0, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %97, %93
  %103 = bitcast %"class.std::__1::vector.3"* %91 to i8*
  tail call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %102, %86
  %105 = icmp eq %"struct.std::__1::pair.1235"* %88, %84
  br i1 %105, label %106, label %86

106:                                              ; preds = %104, %79
  %107 = icmp eq i64 %82, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = inttoptr i64 %82 to i8*
  tail call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %106, %108
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #12
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #12
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1002"*, align 8
  %3 = alloca %"struct.std::__1::pair.1002"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1407", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1002"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 1
  store %"struct.std::__1::pair.1002"** %14, %"struct.std::__1::pair.1002"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1002"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1002"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1002"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1002"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1002"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1002"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1002"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1002"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1002"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1002"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %33, i64 %36
  store %"struct.std::__1::pair.1002"** %44, %"struct.std::__1::pair.1002"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %43, i64 %32
  store %"struct.std::__1::pair.1002"** %45, %"struct.std::__1::pair.1002"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1002"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1002"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1002"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1002"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1002"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1002"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1002"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1002"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1002"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1002"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1002"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !117

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1002"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1002"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1002"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1002"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1002"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1002"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1002"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1002"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1002"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1002"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1002"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1002"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1002"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1002"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1002"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1002"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1002"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1002"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1002"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1002"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1002"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1002"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1002"** %70 to i64
  %146 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1002"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1002"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1002"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1002"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1002"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast %"struct.std::__1::pair.1002"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %160, i64 1
  store %"struct.std::__1::pair.1002"** %161, %"struct.std::__1::pair.1002"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1002"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1002"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1002"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1002"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1002"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1002"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4096) #13
  %187 = bitcast %"struct.std::__1::pair.1002"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1002"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1002"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4096) #13
  %191 = bitcast %"struct.std::__1::pair.1002"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1002"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1002"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %192, i64 1
  store %"struct.std::__1::pair.1002"** %195, %"struct.std::__1::pair.1002"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1002"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1002"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1002"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1002"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1002"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1002"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1002"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1002"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1002"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1002"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %212, i64 %215
  store %"struct.std::__1::pair.1002"** %223, %"struct.std::__1::pair.1002"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %222, i64 %211
  store %"struct.std::__1::pair.1002"** %224, %"struct.std::__1::pair.1002"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1002"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1002"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1002"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1002"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1002"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1002"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1002"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1002"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1002"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1002"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !118

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1002"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1002"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1002"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1002"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1002"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1002"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1002"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1002"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1002"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1002"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1002"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1002"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1002"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1002"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1002"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1002"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1002"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1002"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1002"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1002"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1002"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1002"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1002"** %247 to i64
  %323 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1002"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1002"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1002"** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast %"struct.std::__1::pair.1002"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %335, i64 1
  store %"struct.std::__1::pair.1002"** %336, %"struct.std::__1::pair.1002"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1002"** null, %"struct.std::__1::pair.1002"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1006"** %342 to %"class.std::__1::__compressed_pair.1003"**
  store %"class.std::__1::__compressed_pair.1003"* %346, %"class.std::__1::__compressed_pair.1003"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1002"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %354, i64 %171
  store %"struct.std::__1::pair.1002"** %356, %"struct.std::__1::pair.1002"*** %340, align 8
  store %"struct.std::__1::pair.1002"** %356, %"struct.std::__1::pair.1002"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %354, i64 %345
  store %"struct.std::__1::pair.1002"** %357, %"struct.std::__1::pair.1002"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1002"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1002"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1002"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %356, i64 %370
  store %"struct.std::__1::pair.1002"** %371, %"struct.std::__1::pair.1002"*** %340, align 8
  store %"struct.std::__1::pair.1002"** %371, %"struct.std::__1::pair.1002"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1002"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1002"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1002"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1002"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1002"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1002"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1002"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1002"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1002"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1002"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1002"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1002"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1002"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %406, i64 1
  store %"struct.std::__1::pair.1002"** %408, %"struct.std::__1::pair.1002"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1002"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1002"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1002"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1002"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1002"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1002"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1407"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1002"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1002"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1002"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1002"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1002"**
  %442 = icmp eq %"struct.std::__1::pair.1002"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1002"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %441, i64 %448
  store %"struct.std::__1::pair.1002"** %449, %"struct.std::__1::pair.1002"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1002"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1407"* nonnull %4, %"struct.std::__1::pair.1002"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1002"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1002"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1002"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1002"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1002"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1002"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1002"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1002"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1002"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1002"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1002"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %23, i64 %26
  store %"struct.std::__1::pair.1002"** %34, %"struct.std::__1::pair.1002"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %33, i64 %22
  store %"struct.std::__1::pair.1002"** %35, %"struct.std::__1::pair.1002"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1002"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1002"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1002"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1002"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1002"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1002"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1002"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1002"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1002"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1002"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !119

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1002"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1002"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1002"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1002"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1002"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1002"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1002"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1002"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1002"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1002"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1002"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1002"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1002"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1002"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1002"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1002"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1002"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1002"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1002"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1002"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1002"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1002"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1002"** %60 to i64
  %136 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1002"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1002"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1002"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1002"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1002"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"struct.std::__1::pair.1002"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1002"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %152, i64 1
  store %"struct.std::__1::pair.1002"** %153, %"struct.std::__1::pair.1002"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1002"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1002"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1002"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1002"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1002"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1002"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1002"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1002"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1002"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1002"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1002"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1002"** %36, %"struct.std::__1::pair.1002"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %35, i64 %22
  store %"struct.std::__1::pair.1002"** %37, %"struct.std::__1::pair.1002"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1002"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1002"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1002"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1002"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1002"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1002"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1002"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1002"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !120

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1002"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1002"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1002"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1002"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1002"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1002"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1002"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1002"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1002"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1002"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1002"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1002"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1002"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1002"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1002"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1002"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1002"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1002"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1002"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1002"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1002"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1002"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1002"** %61 to i64
  %137 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1002"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1002"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1002"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1002"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1002"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1002"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1002"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1002"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %153, i64 -1
  store %"struct.std::__1::pair.1002"** %154, %"struct.std::__1::pair.1002"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1407"*, %"struct.std::__1::pair.1002"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1002"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1002"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1002"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1002"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1002"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1002"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1002"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1002"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1002"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1002"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1002"** %36, %"struct.std::__1::pair.1002"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %35, i64 %22
  store %"struct.std::__1::pair.1002"** %37, %"struct.std::__1::pair.1002"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1407"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1002"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1002"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1002"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1002"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1002"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1002"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1002"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1002"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1002"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !121

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1002"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1002"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1002"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1002"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1002"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1002"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1002"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1002"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1002"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1002"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1002"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1002"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1002"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1002"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1002"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1002"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1002"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1002"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1002"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1002"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1002"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1002"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1002"** %61 to i64
  %137 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1002"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1002"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1002"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1002"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1002"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1002"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1002"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1002"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %153, i64 -1
  store %"struct.std::__1::pair.1002"** %154, %"struct.std::__1::pair.1002"*** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %108

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %19, i64 %20, i32 1, i32 0
  %22 = bitcast %"class.spvtools::opt::Loop"*** %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::TreeDFIterator"* %0 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %21, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %26, i64 1
  store %"class.spvtools::opt::Loop"** %27, %"class.spvtools::opt::Loop"*** %21, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %19, i64 %20, i32 0
  %29 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %29, i64 0, i32 7, i32 0, i32 1
  %31 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Loop"** %31, %27
  br i1 %32, label %33, label %58

33:                                               ; preds = %10
  %34 = load i64, i64* %6, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %34, -1
  store i64 %36, i64* %6, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"struct.std::__1::pair.1002"*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.1002"*** %15 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 0
  %44 = shl i64 %42, 5
  %45 = add i64 %44, -1
  %46 = select i1 %43, i64 0, i64 %45
  %47 = sub i64 1, %34
  %48 = sub i64 %47, %35
  %49 = add i64 %48, %46
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %58, label %51

51:                                               ; preds = %33
  %52 = inttoptr i64 %39 to %"struct.std::__1::pair.1002"**
  %53 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %52, i64 -1
  %54 = bitcast %"struct.std::__1::pair.1002"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #13
  %56 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %37, align 8
  %57 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %56, i64 -1
  store %"struct.std::__1::pair.1002"** %57, %"struct.std::__1::pair.1002"*** %37, align 8
  br label %58

58:                                               ; preds = %51, %33, %10
  %59 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %59, i64 0, i32 7, i32 0, i32 0
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %59, i64 0, i32 7, i32 0, i32 1
  %63 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %62, align 8
  %64 = icmp eq %"class.spvtools::opt::Loop"** %61, %63
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"struct.std::__1::pair.1002"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::pair.1002"*** %15 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 0
  %73 = shl i64 %71, 5
  %74 = add i64 %73, -1
  %75 = select i1 %72, i64 0, i64 %74
  %76 = load i64, i64* %11, align 8
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, %76
  %79 = icmp eq i64 %75, %78
  %80 = inttoptr i64 %70 to %"struct.std::__1::pair.1002"**
  %81 = inttoptr i64 %68 to %"struct.std::__1::pair.1002"**
  br i1 %79, label %82, label %89

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %83) #12
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* %11, align 8
  %86 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %15, align 8
  %87 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %66, align 8
  %88 = add i64 %85, %84
  br label %89

89:                                               ; preds = %82, %65
  %90 = phi i64 [ %88, %82 ], [ %78, %65 ]
  %91 = phi %"struct.std::__1::pair.1002"** [ %87, %82 ], [ %81, %65 ]
  %92 = phi %"struct.std::__1::pair.1002"** [ %86, %82 ], [ %80, %65 ]
  %93 = icmp eq %"struct.std::__1::pair.1002"** %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = lshr i64 %90, 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %92, i64 %95
  %97 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %96, align 8
  %98 = and i64 %90, 255
  %99 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %97, i64 %98
  %100 = bitcast %"struct.std::__1::pair.1002"* %99 to i8*
  br label %101

101:                                              ; preds = %89, %94
  %102 = phi i8* [ %100, %94 ], [ null, %89 ]
  %103 = bitcast i8* %102 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %59, %"class.spvtools::opt::Loop"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %61, %"class.spvtools::opt::Loop"*** %105, align 8
  %106 = load i64, i64* %6, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %6, align 8
  br label %108

108:                                              ; preds = %58, %101, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_(%"class.spvtools::opt::IteratorRange"*, %"class.spvtools::opt::TreeDFIterator"* dereferenceable(56), %"class.spvtools::opt::TreeDFIterator"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::TreeDFIterator"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.spvtools::opt::IteratorRange"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %7, i64 0, i32 0
  %9 = bitcast %"class.std::__1::stack"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 %14
  %16 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.1002"** %17, %11
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %13
  %23 = lshr i64 %22, 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 %23
  br label %37

25:                                               ; preds = %3
  %26 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %15, align 8
  %27 = and i64 %13, 255
  %28 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %26, i64 %27
  %29 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %13
  %32 = lshr i64 %31, 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %11, i64 %32
  %34 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %33, align 8
  %35 = and i64 %31, 255
  %36 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %34, i64 %35
  br label %37

37:                                               ; preds = %19, %25
  %38 = phi %"struct.std::__1::pair.1002"** [ %33, %25 ], [ %24, %19 ]
  %39 = phi %"struct.std::__1::pair.1002"* [ %28, %25 ], [ null, %19 ]
  %40 = phi %"struct.std::__1::pair.1002"* [ %36, %25 ], [ null, %19 ]
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %8, %"struct.std::__1::pair.1002"** %15, %"struct.std::__1::pair.1002"* %39, %"struct.std::__1::pair.1002"** %38, %"struct.std::__1::pair.1002"* %40, i8* null) #12
  %41 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 1
  %42 = bitcast %"class.spvtools::opt::TreeDFIterator"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.spvtools::opt::TreeDFIterator"* %41 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %45, i64 0, i32 0
  %47 = bitcast %"class.std::__1::stack"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 48, i1 false) #12
  %48 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = lshr i64 %51, 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %49, i64 %52
  %54 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %55 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %54, align 8
  %56 = icmp eq %"struct.std::__1::pair.1002"** %55, %49
  br i1 %56, label %57, label %63

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %51
  %61 = lshr i64 %60, 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %49, i64 %61
  br label %75

63:                                               ; preds = %37
  %64 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %53, align 8
  %65 = and i64 %51, 255
  %66 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %64, i64 %65
  %67 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %51
  %70 = lshr i64 %69, 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %49, i64 %70
  %72 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %71, align 8
  %73 = and i64 %69, 255
  %74 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %72, i64 %73
  br label %75

75:                                               ; preds = %57, %63
  %76 = phi %"struct.std::__1::pair.1002"** [ %71, %63 ], [ %62, %57 ]
  %77 = phi %"struct.std::__1::pair.1002"* [ %66, %63 ], [ null, %57 ]
  %78 = phi %"struct.std::__1::pair.1002"* [ %74, %63 ], [ null, %57 ]
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %46, %"struct.std::__1::pair.1002"** %53, %"struct.std::__1::pair.1002"* %77, %"struct.std::__1::pair.1002"** %76, %"struct.std::__1::pair.1002"* %78, i8* null) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"*, %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.std::__1::pair.1002"* %2 to i64
  %8 = icmp eq %"struct.std::__1::pair.1002"* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.std::__1::pair.1002"* %4 to i64
  %11 = ptrtoint %"struct.std::__1::pair.1002"** %3 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1002"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 5
  %15 = bitcast %"struct.std::__1::pair.1002"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 4
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.std::__1::pair.1002"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 4
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"struct.std::__1::pair.1002"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair.1002"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 5
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to %"struct.std::__1::pair.1002"**
  %46 = inttoptr i64 %29 to %"struct.std::__1::pair.1002"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %30, align 8
  %52 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi %"struct.std::__1::pair.1002"** [ %52, %47 ], [ %46, %25 ]
  %57 = phi %"struct.std::__1::pair.1002"** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %57, i64 %59
  %61 = icmp eq %"struct.std::__1::pair.1002"** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, align 8
  %64 = and i64 %55, 255
  %65 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %63, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair.1002"* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast %"struct.std::__1::pair.1002"** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, i64 %78
  %80 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %79, align 8
  %81 = and i64 %75, 255
  %82 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %80, i64 %81
  %83 = ptrtoint %"struct.std::__1::pair.1002"* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 255, %75
  %86 = sdiv i64 %85, -256
  %87 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, i64 %86
  %88 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %87, align 8
  %89 = srem i64 %85, 256
  %90 = sub nsw i64 255, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %88, i64 %90
  %92 = ptrtoint %"struct.std::__1::pair.1002"* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi %"struct.std::__1::pair.1002"** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to %"struct.std::__1::pair.1002"*
  %97 = inttoptr i64 %68 to %"struct.std::__1::pair.1002"*
  %98 = icmp eq %"struct.std::__1::pair.1002"* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %184, %192, %93
  ret void

100:                                              ; preds = %93, %192
  %101 = phi i64 [ %191, %192 ], [ %58, %93 ]
  %102 = phi i64 [ %187, %192 ], [ %7, %93 ]
  %103 = phi %"struct.std::__1::pair.1002"** [ %186, %192 ], [ %1, %93 ]
  %104 = phi i64 [ %195, %192 ], [ %68, %93 ]
  %105 = phi %"struct.std::__1::pair.1002"** [ %193, %192 ], [ %60, %93 ]
  %106 = icmp eq %"struct.std::__1::pair.1002"** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %108, i64 256
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi %"struct.std::__1::pair.1002"* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to %"struct.std::__1::pair.1002"*
  %113 = icmp eq %"struct.std::__1::pair.1002"* %111, %112
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = getelementptr %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %111, i64 -1
  %116 = bitcast %"struct.std::__1::pair.1002"* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 16
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to %"struct.std::__1::pair.1002"*
  %124 = inttoptr i64 %104 to i8*
  %125 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %112, i64 1
  %127 = ptrtoint %"struct.std::__1::pair.1002"* %126 to i64
  %128 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %123, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.1002"* %128 to i64
  %130 = bitcast %"struct.std::__1::pair.1002"** %103 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = icmp eq i64 %132, 4096
  br i1 %133, label %134, label %138

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %103, i64 1
  %136 = bitcast %"struct.std::__1::pair.1002"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %114, %134, %122
  %139 = phi %"struct.std::__1::pair.1002"** [ undef, %114 ], [ %135, %134 ], [ %103, %122 ]
  %140 = phi i64 [ undef, %114 ], [ %137, %134 ], [ %129, %122 ]
  %141 = phi %"struct.std::__1::pair.1002"* [ %112, %114 ], [ %126, %134 ], [ %126, %122 ]
  %142 = phi i64 [ %104, %114 ], [ %127, %134 ], [ %127, %122 ]
  %143 = phi i64 [ %102, %114 ], [ %137, %134 ], [ %129, %122 ]
  %144 = phi %"struct.std::__1::pair.1002"** [ %103, %114 ], [ %135, %134 ], [ %103, %122 ]
  %145 = icmp ult i8* %118, inttoptr (i64 16 to i8*)
  br i1 %145, label %179, label %146

146:                                              ; preds = %138, %202
  %147 = phi %"struct.std::__1::pair.1002"* [ %171, %202 ], [ %141, %138 ]
  %148 = phi i64 [ %172, %202 ], [ %142, %138 ]
  %149 = phi i64 [ %204, %202 ], [ %143, %138 ]
  %150 = phi %"struct.std::__1::pair.1002"** [ %203, %202 ], [ %144, %138 ]
  %151 = inttoptr i64 %149 to %"struct.std::__1::pair.1002"*
  %152 = inttoptr i64 %148 to i8*
  %153 = inttoptr i64 %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #12
  %154 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %147, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %151, i64 1
  %156 = ptrtoint %"struct.std::__1::pair.1002"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair.1002"** %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = icmp eq i64 %159, 4096
  br i1 %160, label %161, label %165

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %150, i64 1
  %163 = bitcast %"struct.std::__1::pair.1002"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %146, %161
  %166 = phi %"struct.std::__1::pair.1002"** [ %162, %161 ], [ %150, %146 ]
  %167 = phi i64 [ %164, %161 ], [ %156, %146 ]
  %168 = inttoptr i64 %167 to %"struct.std::__1::pair.1002"*
  %169 = bitcast %"struct.std::__1::pair.1002"* %154 to i8*
  %170 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #12
  %171 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %147, i64 2
  %172 = ptrtoint %"struct.std::__1::pair.1002"* %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::pair.1002", %"struct.std::__1::pair.1002"* %168, i64 1
  %174 = ptrtoint %"struct.std::__1::pair.1002"* %173 to i64
  %175 = bitcast %"struct.std::__1::pair.1002"** %166 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = icmp eq i64 %177, 4096
  br i1 %178, label %198, label %202

179:                                              ; preds = %202, %138
  %180 = phi %"struct.std::__1::pair.1002"** [ %139, %138 ], [ %203, %202 ]
  %181 = phi i64 [ %140, %138 ], [ %204, %202 ]
  %182 = ptrtoint %"struct.std::__1::pair.1002"* %111 to i64
  %183 = load i64, i64* %40, align 8
  br label %184

184:                                              ; preds = %179, %110
  %185 = phi i64 [ %183, %179 ], [ %101, %110 ]
  %186 = phi %"struct.std::__1::pair.1002"** [ %180, %179 ], [ %103, %110 ]
  %187 = phi i64 [ %181, %179 ], [ %102, %110 ]
  %188 = phi i64 [ %182, %179 ], [ %104, %110 ]
  %189 = sub i64 %188, %104
  %190 = ashr exact i64 %189, 4
  %191 = add i64 %185, %190
  store i64 %191, i64* %40, align 8
  br i1 %106, label %99, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %105, i64 1
  %194 = bitcast %"struct.std::__1::pair.1002"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair.1002"*
  %197 = icmp eq %"struct.std::__1::pair.1002"* %196, %96
  br i1 %197, label %99, label %100

198:                                              ; preds = %165
  %199 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %166, i64 1
  %200 = bitcast %"struct.std::__1::pair.1002"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %198, %165
  %203 = phi %"struct.std::__1::pair.1002"** [ %199, %198 ], [ %166, %165 ]
  %204 = phi i64 [ %201, %198 ], [ %174, %165 ]
  %205 = icmp eq %"struct.std::__1::pair.1002"* %111, %171
  br i1 %205, label %179, label %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.1002"*, align 8
  %4 = alloca %"struct.std::__1::pair.1002"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.1407", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.1002"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 8
  %15 = and i64 %13, 255
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.std::__1::pair.1002"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 8
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.1002"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = bitcast %"struct.std::__1::pair.1002"*** %9 to i64*
  %37 = bitcast %"struct.std::__1::pair.1002"*** %7 to i64*
  %38 = bitcast %"struct.std::__1::pair.1002"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.std::__1::pair.1002"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.std::__1::pair.1002"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.std::__1::pair.1002"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %41, i64 1
  store %"struct.std::__1::pair.1002"** %45, %"struct.std::__1::pair.1002"*** %9, align 8
  %46 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %32, align 8
  %47 = icmp eq %"struct.std::__1::pair.1002"** %40, %46
  %48 = ptrtoint %"struct.std::__1::pair.1002"** %46 to i64
  %49 = bitcast %"struct.std::__1::pair.1002"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %33, align 8
  %52 = icmp ugt %"struct.std::__1::pair.1002"** %45, %51
  %53 = ptrtoint %"struct.std::__1::pair.1002"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1002"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.std::__1::pair.1002"** %60 to i8*
  %66 = bitcast %"struct.std::__1::pair.1002"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #12
  %67 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.std::__1::pair.1002"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %60, i64 %62
  store %"struct.std::__1::pair.1002"** %70, %"struct.std::__1::pair.1002"*** %7, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %69, i64 %59
  store %"struct.std::__1::pair.1002"** %71, %"struct.std::__1::pair.1002"*** %9, align 8
  %72 = bitcast %"struct.std::__1::pair.1002"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #14
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #13
  %84 = bitcast i8* %83 to %"struct.std::__1::pair.1002"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %84, i64 %81
  %87 = ptrtoint %"struct.std::__1::pair.1002"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %84, i64 %77
  %89 = ptrtoint %"struct.std::__1::pair.1002"** %88 to i64
  %90 = ptrtoint %"struct.std::__1::pair.1002"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.std::__1::pair.1002"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.std::__1::pair.1002"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.std::__1::pair.1002"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.1002"** %109 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !122

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.std::__1::pair.1002"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.std::__1::pair.1002"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.std::__1::pair.1002"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.std::__1::pair.1002"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.std::__1::pair.1002"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.std::__1::pair.1002"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 1
  %130 = bitcast %"struct.std::__1::pair.1002"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::pair.1002"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 2
  %134 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 2
  %135 = bitcast %"struct.std::__1::pair.1002"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.std::__1::pair.1002"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 3
  %139 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 3
  %140 = bitcast %"struct.std::__1::pair.1002"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.std::__1::pair.1002"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 4
  %145 = bitcast %"struct.std::__1::pair.1002"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.std::__1::pair.1002"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 5
  %149 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 5
  %150 = bitcast %"struct.std::__1::pair.1002"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1002"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 6
  %154 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 6
  %155 = bitcast %"struct.std::__1::pair.1002"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.std::__1::pair.1002"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 7
  %159 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 7
  %160 = bitcast %"struct.std::__1::pair.1002"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::pair.1002"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %122, i64 8
  %164 = ptrtoint %"struct.std::__1::pair.1002"** %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %124, i64 8
  %166 = icmp eq %"struct.std::__1::pair.1002"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.std::__1::pair.1002"** %93 to i64
  %169 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.std::__1::pair.1002"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.std::__1::pair.1002"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.std::__1::pair.1002"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #13
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %7, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %180, i64 1
  store %"struct.std::__1::pair.1002"** %181, %"struct.std::__1::pair.1002"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.std::__1::pair.1002"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.std::__1::pair.1002"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.std::__1::pair.1002"*** %7 to i64*
  %196 = bitcast %"struct.std::__1::pair.1002"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.std::__1::pair.1002"** %3 to i8*
  %203 = bitcast %"struct.std::__1::pair.1002"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #12
  %207 = call i8* @_Znwm(i64 4096) #13
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %6, %"struct.std::__1::pair.1002"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #12
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.std::__1::pair.1002"** %4 to i8*
  %221 = bitcast %"struct.std::__1::pair.1002"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #12
  %224 = call i8* @_Znwm(i64 4096) #13
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %6, %"struct.std::__1::pair.1002"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #12
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 255, i64 256
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 8
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.std::__1::pair.1002"*** %7 to i64**
  %245 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.std::__1::pair.1002"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  %250 = bitcast %"struct.std::__1::pair.1002"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %249, i64 1
  store %"struct.std::__1::pair.1002"** %252, %"struct.std::__1::pair.1002"*** %9, align 8
  %253 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %188, align 8
  %254 = icmp eq %"struct.std::__1::pair.1002"** %247, %253
  %255 = ptrtoint %"struct.std::__1::pair.1002"** %253 to i64
  %256 = bitcast %"struct.std::__1::pair.1002"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %243, align 8
  %259 = icmp ugt %"struct.std::__1::pair.1002"** %252, %258
  %260 = ptrtoint %"struct.std::__1::pair.1002"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.std::__1::pair.1002"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.std::__1::pair.1002"** %267 to i8*
  %273 = bitcast %"struct.std::__1::pair.1002"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #12
  %274 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.std::__1::pair.1002"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %267, i64 %269
  store %"struct.std::__1::pair.1002"** %277, %"struct.std::__1::pair.1002"*** %7, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %276, i64 %266
  store %"struct.std::__1::pair.1002"** %278, %"struct.std::__1::pair.1002"*** %9, align 8
  %279 = bitcast %"struct.std::__1::pair.1002"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #14
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #13
  %291 = bitcast i8* %290 to %"struct.std::__1::pair.1002"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %291, i64 %288
  %294 = ptrtoint %"struct.std::__1::pair.1002"** %293 to i64
  %295 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %291, i64 %284
  %296 = ptrtoint %"struct.std::__1::pair.1002"** %295 to i64
  %297 = ptrtoint %"struct.std::__1::pair.1002"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::pair.1002"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.std::__1::pair.1002"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.std::__1::pair.1002"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %309, i64 1
  %317 = ptrtoint %"struct.std::__1::pair.1002"** %316 to i64
  %318 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !123

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.std::__1::pair.1002"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.std::__1::pair.1002"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.std::__1::pair.1002"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.std::__1::pair.1002"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.std::__1::pair.1002"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.std::__1::pair.1002"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 1
  %336 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 1
  %337 = bitcast %"struct.std::__1::pair.1002"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.std::__1::pair.1002"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 2
  %341 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 2
  %342 = bitcast %"struct.std::__1::pair.1002"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::pair.1002"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 3
  %346 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 3
  %347 = bitcast %"struct.std::__1::pair.1002"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::pair.1002"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 4
  %352 = bitcast %"struct.std::__1::pair.1002"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.std::__1::pair.1002"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 5
  %356 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 5
  %357 = bitcast %"struct.std::__1::pair.1002"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.std::__1::pair.1002"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 6
  %361 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 6
  %362 = bitcast %"struct.std::__1::pair.1002"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair.1002"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 7
  %366 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 7
  %367 = bitcast %"struct.std::__1::pair.1002"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.std::__1::pair.1002"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %329, i64 8
  %371 = ptrtoint %"struct.std::__1::pair.1002"** %370 to i64
  %372 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %331, i64 8
  %373 = icmp eq %"struct.std::__1::pair.1002"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.std::__1::pair.1002"** %300 to i64
  %376 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.std::__1::pair.1002"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.std::__1::pair.1002"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.std::__1::pair.1002"** %378 to i8*
  call void @_ZdlPv(i8* %383) #13
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %7, align 8
  %388 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %387, i64 1
  store %"struct.std::__1::pair.1002"** %388, %"struct.std::__1::pair.1002"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 8
  %393 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #12
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.1407", %"struct.std::__1::__split_buffer.1407"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1002"** null, %"struct.std::__1::pair.1002"*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.1006"** %398 to %"class.std::__1::__compressed_pair.1003"**
  store %"class.std::__1::__compressed_pair.1003"* %404, %"class.std::__1::__compressed_pair.1003"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #14
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #13
  %414 = bitcast i8* %413 to %"struct.std::__1::pair.1002"**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi %"struct.std::__1::pair.1002"** [ %414, %411 ], [ null, %391 ]
  store %"struct.std::__1::pair.1002"** %416, %"struct.std::__1::pair.1002"*** %394, align 16
  %417 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %416, i64 %403
  store %"struct.std::__1::pair.1002"** %417, %"struct.std::__1::pair.1002"*** %396, align 16
  store %"struct.std::__1::pair.1002"** %417, %"struct.std::__1::pair.1002"*** %395, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %416, i64 %402
  store %"struct.std::__1::pair.1002"** %418, %"struct.std::__1::pair.1002"*** %397, align 8
  %419 = bitcast %"struct.std::__1::pair.1002"*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to i64*
  %421 = bitcast %"struct.std::__1::pair.1002"*** %395 to i64*
  %422 = bitcast %"struct.std::__1::pair.1002"*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast %"struct.std::__1::pair.1002"*** %9 to i64**
  %429 = bitcast %"struct.std::__1::pair.1002"*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to i64*
  %431 = bitcast %"struct.std::__1::pair.1002"*** %395 to i64*
  %432 = bitcast %"struct.std::__1::pair.1002"*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi %"struct.std::__1::pair.1002"** [ %418, %415 ], [ %575, %574 ]
  %436 = phi %"struct.std::__1::pair.1002"** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #13
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq %"struct.std::__1::pair.1002"** %436, %435
  %441 = ptrtoint %"struct.std::__1::pair.1002"** %435 to i64
  %442 = bitcast %"struct.std::__1::pair.1002"** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %395, align 8
  %445 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %394, align 16
  %446 = icmp ugt %"struct.std::__1::pair.1002"** %444, %445
  %447 = ptrtoint %"struct.std::__1::pair.1002"** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint %"struct.std::__1::pair.1002"** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast %"struct.std::__1::pair.1002"** %454 to i8*
  %460 = bitcast %"struct.std::__1::pair.1002"** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #12
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %454, i64 %456
  store %"struct.std::__1::pair.1002"** %462, %"struct.std::__1::pair.1002"*** %396, align 16
  store %"struct.std::__1::pair.1002"** %454, %"struct.std::__1::pair.1002"*** %395, align 8
  %463 = bitcast %"struct.std::__1::pair.1002"** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #14
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #13
  %475 = bitcast i8* %474 to %"struct.std::__1::pair.1002"**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %475, i64 %472
  %478 = ptrtoint %"struct.std::__1::pair.1002"** %477 to i64
  %479 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %475, i64 %468
  %480 = ptrtoint %"struct.std::__1::pair.1002"** %479 to i64
  %481 = ptrtoint %"struct.std::__1::pair.1002"** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi %"struct.std::__1::pair.1002"** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi %"struct.std::__1::pair.1002"** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast %"struct.std::__1::pair.1002"** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %493, i64 1
  %501 = ptrtoint %"struct.std::__1::pair.1002"** %500 to i64
  %502 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !124

505:                                              ; preds = %492
  %506 = ptrtoint %"struct.std::__1::pair.1002"** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi %"struct.std::__1::pair.1002"** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi %"struct.std::__1::pair.1002"** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi %"struct.std::__1::pair.1002"** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi %"struct.std::__1::pair.1002"** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast %"struct.std::__1::pair.1002"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 1
  %520 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 1
  %521 = bitcast %"struct.std::__1::pair.1002"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"struct.std::__1::pair.1002"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 2
  %525 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 2
  %526 = bitcast %"struct.std::__1::pair.1002"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"struct.std::__1::pair.1002"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 3
  %530 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 3
  %531 = bitcast %"struct.std::__1::pair.1002"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.std::__1::pair.1002"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 4
  %535 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 4
  %536 = bitcast %"struct.std::__1::pair.1002"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.std::__1::pair.1002"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 5
  %540 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 5
  %541 = bitcast %"struct.std::__1::pair.1002"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.1002"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 6
  %545 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 6
  %546 = bitcast %"struct.std::__1::pair.1002"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.std::__1::pair.1002"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 7
  %550 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 7
  %551 = bitcast %"struct.std::__1::pair.1002"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.std::__1::pair.1002"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %513, i64 8
  %555 = ptrtoint %"struct.std::__1::pair.1002"** %554 to i64
  %556 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %515, i64 8
  %557 = icmp eq %"struct.std::__1::pair.1002"** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint %"struct.std::__1::pair.1002"** %484 to i64
  %560 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi %"struct.std::__1::pair.1002"** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq %"struct.std::__1::pair.1002"** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast %"struct.std::__1::pair.1002"** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #13
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %396, align 16
  %571 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %570, i64 1
  store %"struct.std::__1::pair.1002"** %571, %"struct.std::__1::pair.1002"*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi %"struct.std::__1::pair.1002"** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %397, align 8
  %581 = icmp eq %"struct.std::__1::pair.1002"** %577, %580
  %582 = ptrtoint %"struct.std::__1::pair.1002"** %580 to i64
  %583 = bitcast %"struct.std::__1::pair.1002"** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %395, align 8
  %586 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %394, align 16
  %587 = icmp ugt %"struct.std::__1::pair.1002"** %585, %586
  %588 = ptrtoint %"struct.std::__1::pair.1002"** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint %"struct.std::__1::pair.1002"** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast %"struct.std::__1::pair.1002"** %595 to i8*
  %601 = bitcast %"struct.std::__1::pair.1002"** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #12
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %595, i64 %597
  store %"struct.std::__1::pair.1002"** %603, %"struct.std::__1::pair.1002"*** %396, align 16
  store %"struct.std::__1::pair.1002"** %595, %"struct.std::__1::pair.1002"*** %395, align 8
  %604 = bitcast %"struct.std::__1::pair.1002"** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #14
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #13
  %616 = bitcast i8* %615 to %"struct.std::__1::pair.1002"**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %616, i64 %613
  %619 = ptrtoint %"struct.std::__1::pair.1002"** %618 to i64
  %620 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %616, i64 %609
  %621 = ptrtoint %"struct.std::__1::pair.1002"** %620 to i64
  %622 = ptrtoint %"struct.std::__1::pair.1002"** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi %"struct.std::__1::pair.1002"** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi %"struct.std::__1::pair.1002"** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast %"struct.std::__1::pair.1002"** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %634, i64 1
  %642 = ptrtoint %"struct.std::__1::pair.1002"** %641 to i64
  %643 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !125

646:                                              ; preds = %633
  %647 = ptrtoint %"struct.std::__1::pair.1002"** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi %"struct.std::__1::pair.1002"** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi %"struct.std::__1::pair.1002"** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi %"struct.std::__1::pair.1002"** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi %"struct.std::__1::pair.1002"** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast %"struct.std::__1::pair.1002"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 1
  %661 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 1
  %662 = bitcast %"struct.std::__1::pair.1002"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"struct.std::__1::pair.1002"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 2
  %666 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 2
  %667 = bitcast %"struct.std::__1::pair.1002"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"struct.std::__1::pair.1002"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 3
  %671 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 3
  %672 = bitcast %"struct.std::__1::pair.1002"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"struct.std::__1::pair.1002"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 4
  %676 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 4
  %677 = bitcast %"struct.std::__1::pair.1002"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"struct.std::__1::pair.1002"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 5
  %681 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 5
  %682 = bitcast %"struct.std::__1::pair.1002"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"struct.std::__1::pair.1002"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 6
  %686 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 6
  %687 = bitcast %"struct.std::__1::pair.1002"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.std::__1::pair.1002"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 7
  %691 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 7
  %692 = bitcast %"struct.std::__1::pair.1002"** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"struct.std::__1::pair.1002"** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %654, i64 8
  %696 = ptrtoint %"struct.std::__1::pair.1002"** %695 to i64
  %697 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %656, i64 8
  %698 = icmp eq %"struct.std::__1::pair.1002"** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint %"struct.std::__1::pair.1002"** %625 to i64
  %701 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi %"struct.std::__1::pair.1002"** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq %"struct.std::__1::pair.1002"** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast %"struct.std::__1::pair.1002"** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #13
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %396, align 16
  %713 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %712, i64 1
  store %"struct.std::__1::pair.1002"** %713, %"struct.std::__1::pair.1002"*** %396, align 16
  %714 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  %715 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %714, i64 1
  store %"struct.std::__1::pair.1002"** %715, %"struct.std::__1::pair.1002"*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast %"struct.std::__1::pair.1002"** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi %"struct.std::__1::pair.1002"** [ %571, %425 ], [ %713, %709 ]
  %721 = phi %"struct.std::__1::pair.1002"** [ %426, %425 ], [ %715, %709 ]
  %722 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %7, align 8
  %723 = icmp eq %"struct.std::__1::pair.1002"** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint %"struct.std::__1::pair.1002"** %722 to i64
  %726 = ptrtoint %"struct.std::__1::pair.1002"** %720 to i64
  %727 = bitcast %"struct.std::__1::pair.1002"*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast %"struct.std::__1::pair.1002"*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi %"struct.std::__1::pair.1002"** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint %"struct.std::__1::pair.1002"** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to i64*
  %740 = bitcast %"struct.std::__1::pair.1002"*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.1407"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast %"struct.std::__1::pair.1002"*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to %"struct.std::__1::pair.1002"**
  %750 = icmp eq %"struct.std::__1::pair.1002"** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %749, i64 -1
  %753 = ptrtoint %"struct.std::__1::pair.1002"** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %749, i64 %756
  store %"struct.std::__1::pair.1002"** %757, %"struct.std::__1::pair.1002"*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #13
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #12
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi %"struct.std::__1::pair.1002"** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1002"*, %"struct.std::__1::pair.1002"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1407"* nonnull %5, %"struct.std::__1::pair.1002"** dereferenceable(8) %765)
  %766 = load %"struct.std::__1::pair.1002"**, %"struct.std::__1::pair.1002"*** %9, align 8
  %767 = icmp eq %"struct.std::__1::pair.1002"** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, %"class.spvtools::opt::Loop"** dereferenceable(8), %"class.spvtools::opt::Loop"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Loop"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !8
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.915"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.915"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.915"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.915"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.915"* %62 to %"class.spvtools::opt::Loop"**
  %64 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Loop"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !126
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Loop"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !126
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !126
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !126
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %75, align 8, !noalias !126
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #12, !range !8
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #12
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #12, !range !8
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.915"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.915"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.915"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.915"* %118, %"struct.std::__1::__hash_node_base.915"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.915"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.915"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #12, !range !8
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.915"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.915"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.915"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.915"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.915"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !129

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to %"class.spvtools::opt::Loop"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to %"class.spvtools::opt::Loop"**
  %112 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %102, align 8
  %113 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Loop"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE3endEv"}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!11 = distinct !{!11, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!14 = distinct !{!14, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!15 = !{i8 0, i8 2}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!19 = distinct !{!19, !20, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!21 = distinct !{!21, !22, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!26 = distinct !{!26, !27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!30 = distinct !{!30, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!33 = distinct !{!33, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!36 = distinct !{!36, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!40 = distinct !{!40, !41, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!45 = distinct !{!45, !46, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjbEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!50 = distinct !{!50, !51}
!51 = !{!"llvm.loop.unroll.disable"}
!52 = distinct !{!52, !51}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!56 = distinct !{!56, !51}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!60 = distinct !{!60, !51}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!67 = distinct !{!67, !68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch20IsDynamicallyUniformEPNS5_11InstructionEPKNS5_10BasicBlockERKNS5_13DominatorTreeEEUlPKjE_FbPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!69 = !{!70, !72}
!70 = distinct !{!70, !71, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!72 = distinct !{!72, !73, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!74 = distinct !{!74, !51}
!75 = distinct !{!75, !51}
!76 = distinct !{!76, !51}
!77 = distinct !{!77, !51}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!80 = distinct !{!80, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!81 = distinct !{!81, !51}
!82 = !{!83, !85}
!83 = distinct !{!83, !84, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!84 = distinct !{!84, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!85 = distinct !{!85, !86, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!86 = distinct !{!86, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!89 = distinct !{!89, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!90 = distinct !{!90, !51}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!94 = distinct !{!94, !51}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!98 = distinct !{!98, !51}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!101 = distinct !{!101, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!102 = !{!103, !105}
!103 = distinct !{!103, !104, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!104 = distinct !{!104, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!105 = distinct !{!105, !106, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch14SpecializeLoopEPNS5_4LoopEPNS5_11InstructionESB_EUlSB_jE_FvSB_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!107 = !{!108, !110}
!108 = distinct !{!108, !109, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!110 = distinct !{!110, !111, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_112LoopUnswitch15PerformUnswitchEvEUlPNS5_11InstructionEE1_FvS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!112 = distinct !{!112, !51}
!113 = distinct !{!113, !51}
!114 = distinct !{!114, !51}
!115 = distinct !{!115, !51}
!116 = distinct !{!116, !51}
!117 = distinct !{!117, !51}
!118 = distinct !{!118, !51}
!119 = distinct !{!119, !51}
!120 = distinct !{!120, !51}
!121 = distinct !{!121, !51}
!122 = distinct !{!122, !51}
!123 = distinct !{!123, !51}
!124 = distinct !{!124, !51}
!125 = distinct !{!125, !51}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!128 = distinct !{!128, !"_ZNSt3__112__hash_tableIPN8spvtools3opt4LoopENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!129 = distinct !{!129, !51}
