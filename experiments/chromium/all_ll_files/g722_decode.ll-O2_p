; ModuleID = '../../third_party/webrtc/modules/third_party/g722/g722_decode.c'
source_filename = "../../third_party/webrtc/modules/third_party/g722/g722_decode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.G722DecoderState = type { i32, i32, i32, i32, [24 x i32], [2 x %struct.anon], i32, i32, i32, i32 }
%struct.anon = type { i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [7 x i32], [7 x i32], [7 x i32], [7 x i32], i32, i32 }

@WebRtc_g722_decode.wl = internal unnamed_addr constant [8 x i32] [i32 -60, i32 -30, i32 58, i32 172, i32 334, i32 538, i32 1198, i32 3042], align 16
@WebRtc_g722_decode.rl42 = internal unnamed_addr constant [16 x i32] [i32 0, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0], align 16
@WebRtc_g722_decode.ilb = internal unnamed_addr constant [32 x i32] [i32 2048, i32 2093, i32 2139, i32 2186, i32 2233, i32 2282, i32 2332, i32 2383, i32 2435, i32 2489, i32 2543, i32 2599, i32 2656, i32 2714, i32 2774, i32 2834, i32 2896, i32 2960, i32 3025, i32 3091, i32 3158, i32 3228, i32 3298, i32 3371, i32 3444, i32 3520, i32 3597, i32 3676, i32 3756, i32 3838, i32 3922, i32 4008], align 16
@WebRtc_g722_decode.wh = internal unnamed_addr constant [3 x i32] [i32 0, i32 -214, i32 798], align 4
@WebRtc_g722_decode.rh2 = internal unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 2, i32 1], align 16
@WebRtc_g722_decode.qm2 = internal unnamed_addr constant [4 x i32] [i32 -7408, i32 -1616, i32 7408, i32 1616], align 16
@WebRtc_g722_decode.qm4 = internal unnamed_addr constant [16 x i32] [i32 0, i32 -20456, i32 -12896, i32 -8968, i32 -6288, i32 -4240, i32 -2584, i32 -1200, i32 20456, i32 12896, i32 8968, i32 6288, i32 4240, i32 2584, i32 1200, i32 0], align 16
@WebRtc_g722_decode.qm5 = internal unnamed_addr constant [32 x i32] [i32 -280, i32 -280, i32 -23352, i32 -17560, i32 -14120, i32 -11664, i32 -9752, i32 -8184, i32 -6864, i32 -5712, i32 -4696, i32 -3784, i32 -2960, i32 -2208, i32 -1520, i32 -880, i32 23352, i32 17560, i32 14120, i32 11664, i32 9752, i32 8184, i32 6864, i32 5712, i32 4696, i32 3784, i32 2960, i32 2208, i32 1520, i32 880, i32 280, i32 -280], align 16
@WebRtc_g722_decode.qm6 = internal unnamed_addr constant [64 x i32] [i32 -136, i32 -136, i32 -136, i32 -136, i32 -24808, i32 -21904, i32 -19008, i32 -16704, i32 -14984, i32 -13512, i32 -12280, i32 -11192, i32 -10232, i32 -9360, i32 -8576, i32 -7856, i32 -7192, i32 -6576, i32 -6000, i32 -5456, i32 -4944, i32 -4464, i32 -4008, i32 -3576, i32 -3168, i32 -2776, i32 -2400, i32 -2032, i32 -1688, i32 -1360, i32 -1040, i32 -728, i32 24808, i32 21904, i32 19008, i32 16704, i32 14984, i32 13512, i32 12280, i32 11192, i32 10232, i32 9360, i32 8576, i32 7856, i32 7192, i32 6576, i32 6000, i32 5456, i32 4944, i32 4464, i32 4008, i32 3576, i32 3168, i32 2776, i32 2400, i32 2032, i32 1688, i32 1360, i32 1040, i32 728, i32 432, i32 136, i32 -432, i32 -136], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct.G722DecoderState* @WebRtc_g722_decode_init(%struct.G722DecoderState*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.G722DecoderState* %0, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.G722DecoderState* %0 to i8*
  br label %9

7:                                                ; preds = %3
  %8 = tail call noalias i8* @malloc(i64 488) #5
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i8* [ %6, %5 ], [ %8, %7 ]
  %11 = bitcast i8* %10 to %struct.G722DecoderState*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 488, i1 false)
  %12 = icmp eq i32 %1, 48000
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %10, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 6, i32* %15, align 4
  br label %22

16:                                               ; preds = %9
  %17 = icmp eq i32 %1, 56000
  %18 = getelementptr inbounds i8, i8* %10, i64 12
  %19 = bitcast i8* %18 to i32*
  br i1 %17, label %20, label %21

20:                                               ; preds = %16
  store i32 7, i32* %19, align 4
  br label %22

21:                                               ; preds = %16
  store i32 8, i32* %19, align 4
  br label %22

22:                                               ; preds = %20, %21, %13
  %23 = phi i32 [ 7, %20 ], [ 8, %21 ], [ 6, %13 ]
  %24 = and i32 %2, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %10, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  br label %29

29:                                               ; preds = %22, %26
  %30 = and i32 %2, 2
  %31 = icmp ne i32 %30, 0
  %32 = icmp ne i32 %23, 8
  %33 = getelementptr inbounds i8, i8* %10, i64 4
  %34 = bitcast i8* %33 to i32*
  %35 = and i1 %32, %31
  %36 = zext i1 %35 to i32
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds i8, i8* %10, i64 288
  %38 = bitcast i8* %37 to i32*
  store i32 32, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %10, i64 468
  %40 = bitcast i8* %39 to i32*
  store i32 8, i32* %40, align 4
  ret %struct.G722DecoderState* %11
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtc_g722_decode_release(%struct.G722DecoderState* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.G722DecoderState* %0 to i8*
  tail call void @free(i8* %2) #5
  ret i32 0
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @WebRtc_g722_decode(%struct.G722DecoderState*, i16* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #4 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %272, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 6
  %11 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 0, i32 12
  %12 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 0, i32 0
  %13 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 0, i32 11
  %14 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 1, i32 12
  %16 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 1, i32 0
  %17 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 1, i32 11
  %18 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 0
  %19 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 22
  %20 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 23
  %21 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 2
  %22 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 0
  %23 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 4
  %24 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 6
  %25 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 8
  %26 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 10
  %27 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 12
  %28 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 14
  %29 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 16
  %30 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 18
  %31 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 20
  %32 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 21
  %33 = bitcast i32* %21 to <4 x i32>*
  %34 = bitcast i32* %22 to <4 x i32>*
  %35 = bitcast i32* %24 to <4 x i32>*
  %36 = bitcast i32* %23 to <4 x i32>*
  %37 = bitcast i32* %26 to <4 x i32>*
  %38 = bitcast i32* %25 to <4 x i32>*
  %39 = bitcast i32* %28 to <4 x i32>*
  %40 = bitcast i32* %27 to <4 x i32>*
  %41 = bitcast i32* %30 to <4 x i32>*
  %42 = bitcast i32* %29 to <4 x i32>*
  %43 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 0
  %44 = bitcast i32* %43 to <8 x i32>*
  %45 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 8
  %46 = bitcast i32* %45 to <8 x i32>*
  %47 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 4, i64 16
  %48 = bitcast i32* %47 to <8 x i32>*
  br label %49

49:                                               ; preds = %6, %265
  %50 = phi i64 [ 0, %6 ], [ %88, %265 ]
  %51 = phi i64 [ 0, %6 ], [ %269, %265 ]
  %52 = phi i32 [ 0, %6 ], [ %194, %265 ]
  %53 = load i32, i32* %7, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %49
  %56 = load i32, i32* %8, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = load i32, i32* %10, align 4
  br label %70

61:                                               ; preds = %55
  %62 = add nuw i64 %50, 1
  %63 = getelementptr inbounds i8, i8* %2, i64 %50
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, %56
  %67 = load i32, i32* %10, align 4
  %68 = or i32 %66, %67
  store i32 %68, i32* %10, align 4
  %69 = add nsw i32 %56, 8
  store i32 %69, i32* %8, align 4
  br label %70

70:                                               ; preds = %59, %61
  %71 = phi i32 [ %69, %61 ], [ %56, %59 ]
  %72 = phi i32 [ %68, %61 ], [ %60, %59 ]
  %73 = phi i64 [ %62, %61 ], [ %50, %59 ]
  %74 = shl nsw i32 -1, %57
  %75 = xor i32 %74, -1
  %76 = and i32 %72, %75
  %77 = lshr i32 %72, %57
  store i32 %77, i32* %10, align 4
  %78 = sub nsw i32 %71, %57
  store i32 %78, i32* %8, align 4
  br label %85

79:                                               ; preds = %49
  %80 = add nuw i64 %50, 1
  %81 = getelementptr inbounds i8, i8* %2, i64 %50
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = load i32, i32* %9, align 4
  br label %85

85:                                               ; preds = %79, %70
  %86 = phi i32 [ %57, %70 ], [ %84, %79 ]
  %87 = phi i32 [ %76, %70 ], [ %83, %79 ]
  %88 = phi i64 [ %73, %70 ], [ %80, %79 ]
  switch i32 %86, label %89 [
    i32 6, label %101
    i32 7, label %95
  ]

89:                                               ; preds = %85
  %90 = and i32 %87, 63
  %91 = ashr i32 %87, 6
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds [64 x i32], [64 x i32]* @WebRtc_g722_decode.qm6, i64 0, i64 %92
  %94 = lshr i32 %90, 2
  br label %106

95:                                               ; preds = %85
  %96 = and i32 %87, 31
  %97 = lshr i32 %87, 5
  %98 = zext i32 %96 to i64
  %99 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_decode.qm5, i64 0, i64 %98
  %100 = lshr i32 %96, 1
  br label %106

101:                                              ; preds = %85
  %102 = and i32 %87, 15
  %103 = ashr i32 %87, 4
  %104 = zext i32 %102 to i64
  %105 = getelementptr inbounds [16 x i32], [16 x i32]* @WebRtc_g722_decode.qm4, i64 0, i64 %104
  br label %106

106:                                              ; preds = %101, %95, %89
  %107 = phi i32 [ %91, %89 ], [ %97, %95 ], [ %103, %101 ]
  %108 = phi i32 [ %94, %89 ], [ %100, %95 ], [ %102, %101 ]
  %109 = phi i32* [ %93, %89 ], [ %99, %95 ], [ %105, %101 ]
  %110 = load i32, i32* %109, align 4
  %111 = load i32, i32* %11, align 4
  %112 = mul nsw i32 %111, %110
  %113 = ashr i32 %112, 15
  %114 = load i32, i32* %12, align 4
  %115 = add nsw i32 %113, %114
  %116 = icmp sgt i32 %115, -16384
  %117 = select i1 %116, i32 %115, i32 -16384
  %118 = icmp slt i32 %117, 16383
  %119 = select i1 %118, i32 %117, i32 16383
  %120 = zext i32 %108 to i64
  %121 = getelementptr inbounds [16 x i32], [16 x i32]* @WebRtc_g722_decode.qm4, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %111
  %124 = ashr i32 %123, 15
  %125 = getelementptr inbounds [16 x i32], [16 x i32]* @WebRtc_g722_decode.rl42, i64 0, i64 %120
  %126 = load i32, i32* %125, align 4
  %127 = load i32, i32* %13, align 4
  %128 = mul nsw i32 %127, 127
  %129 = ashr i32 %128, 7
  %130 = sext i32 %126 to i64
  %131 = getelementptr inbounds [8 x i32], [8 x i32]* @WebRtc_g722_decode.wl, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = add nsw i32 %129, %132
  %134 = icmp slt i32 %133, 18432
  %135 = select i1 %134, i32 %133, i32 18432
  %136 = icmp sgt i32 %135, 0
  %137 = select i1 %136, i32 %135, i32 0
  store i32 %137, i32* %13, align 4
  %138 = lshr i32 %137, 6
  %139 = and i32 %138, 31
  %140 = lshr i32 %137, 11
  %141 = sub nsw i32 8, %140
  %142 = icmp sgt i32 %137, 18431
  %143 = zext i32 %139 to i64
  %144 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_decode.ilb, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %140, -8
  %147 = shl i32 %145, %146
  %148 = ashr i32 %145, %141
  %149 = select i1 %142, i32 %147, i32 %148
  %150 = shl i32 %149, 2
  store i32 %150, i32* %11, align 4
  tail call fastcc void @block4(%struct.G722DecoderState* %0, i32 0, i32 %124)
  %151 = load i32, i32* %14, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %193

153:                                              ; preds = %106
  %154 = and i32 %107, 3
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [4 x i32], [4 x i32]* @WebRtc_g722_decode.qm2, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = load i32, i32* %15, align 4
  %159 = mul nsw i32 %158, %157
  %160 = ashr i32 %159, 15
  %161 = load i32, i32* %16, align 4
  %162 = add nsw i32 %160, %161
  %163 = icmp sgt i32 %162, -16384
  %164 = select i1 %163, i32 %162, i32 -16384
  %165 = icmp slt i32 %164, 16383
  %166 = select i1 %165, i32 %164, i32 16383
  %167 = getelementptr inbounds [4 x i32], [4 x i32]* @WebRtc_g722_decode.rh2, i64 0, i64 %155
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* %17, align 4
  %170 = mul nsw i32 %169, 127
  %171 = ashr i32 %170, 7
  %172 = sext i32 %168 to i64
  %173 = getelementptr inbounds [3 x i32], [3 x i32]* @WebRtc_g722_decode.wh, i64 0, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %171, %174
  %176 = icmp slt i32 %175, 22528
  %177 = select i1 %176, i32 %175, i32 22528
  %178 = icmp sgt i32 %177, 0
  %179 = select i1 %178, i32 %177, i32 0
  store i32 %179, i32* %17, align 4
  %180 = lshr i32 %179, 6
  %181 = and i32 %180, 31
  %182 = lshr i32 %179, 11
  %183 = sub nsw i32 10, %182
  %184 = icmp sgt i32 %179, 22527
  %185 = zext i32 %181 to i64
  %186 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_decode.ilb, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %182, -10
  %189 = shl i32 %187, %188
  %190 = ashr i32 %187, %183
  %191 = select i1 %184, i32 %189, i32 %190
  %192 = shl i32 %191, 2
  store i32 %192, i32* %15, align 4
  tail call fastcc void @block4(%struct.G722DecoderState* %0, i32 1, i32 %160)
  br label %193

193:                                              ; preds = %106, %153
  %194 = phi i32 [ %52, %106 ], [ %166, %153 ]
  %195 = load i32, i32* %18, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %204, label %197

197:                                              ; preds = %193
  %198 = trunc i32 %119 to i16
  %199 = shl i16 %198, 1
  %200 = add i64 %51, 1
  %201 = getelementptr inbounds i16, i16* %1, i64 %51
  store i16 %199, i16* %201, align 2
  %202 = trunc i32 %194 to i16
  %203 = shl i16 %202, 1
  br label %265

204:                                              ; preds = %193
  %205 = load i32, i32* %14, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %262

207:                                              ; preds = %204
  %208 = load <4 x i32>, <4 x i32>* %33, align 4
  store <4 x i32> %208, <4 x i32>* %34, align 4
  %209 = load <4 x i32>, <4 x i32>* %35, align 4
  store <4 x i32> %209, <4 x i32>* %36, align 4
  %210 = load <4 x i32>, <4 x i32>* %37, align 4
  store <4 x i32> %210, <4 x i32>* %38, align 4
  %211 = load <4 x i32>, <4 x i32>* %39, align 4
  store <4 x i32> %211, <4 x i32>* %40, align 4
  %212 = load <4 x i32>, <4 x i32>* %41, align 4
  store <4 x i32> %212, <4 x i32>* %42, align 4
  %213 = load i32, i32* %19, align 4
  store i32 %213, i32* %31, align 4
  %214 = load i32, i32* %20, align 4
  store i32 %214, i32* %32, align 4
  %215 = add nsw i32 %194, %119
  store i32 %215, i32* %19, align 4
  %216 = sub nsw i32 %119, %194
  store i32 %216, i32* %20, align 4
  %217 = load <8 x i32>, <8 x i32>* %44, align 4
  %218 = shufflevector <8 x i32> %217, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %219 = shufflevector <8 x i32> %217, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %220 = mul nsw <4 x i32> %218, <i32 3, i32 -11, i32 12, i32 32>
  %221 = mul nsw <4 x i32> %219, <i32 -11, i32 53, i32 -156, i32 362>
  %222 = load <8 x i32>, <8 x i32>* %46, align 4
  %223 = shufflevector <8 x i32> %222, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %224 = shufflevector <8 x i32> %222, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %225 = mul nsw <4 x i32> %223, <i32 -210, i32 951, i32 3876, i32 -805>
  %226 = add nsw <4 x i32> %225, %220
  %227 = mul nsw <4 x i32> %224, <i32 -805, i32 3876, i32 951, i32 -210>
  %228 = add nsw <4 x i32> %227, %221
  %229 = load <8 x i32>, <8 x i32>* %48, align 4
  %230 = shufflevector <8 x i32> %229, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %231 = shufflevector <8 x i32> %229, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %232 = mul nsw <4 x i32> %230, <i32 362, i32 -156, i32 53, i32 -11>
  %233 = add nsw <4 x i32> %232, %226
  %234 = mul nsw <4 x i32> %231, <i32 32, i32 12, i32 -11, i32 3>
  %235 = add nsw <4 x i32> %234, %228
  %236 = shufflevector <4 x i32> %235, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %237 = add <4 x i32> %235, %236
  %238 = shufflevector <4 x i32> %237, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %239 = add <4 x i32> %237, %238
  %240 = extractelement <4 x i32> %239, i32 0
  %241 = shufflevector <4 x i32> %233, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %242 = add <4 x i32> %233, %241
  %243 = shufflevector <4 x i32> %242, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %244 = add <4 x i32> %242, %243
  %245 = extractelement <4 x i32> %244, i32 0
  %246 = ashr i32 %240, 11
  %247 = add nsw i32 %246, 32768
  %248 = icmp ult i32 %247, 65536
  %249 = trunc i32 %246 to i16
  %250 = icmp sgt i32 %240, 67108863
  %251 = select i1 %250, i16 32767, i16 -32768
  %252 = select i1 %248, i16 %249, i16 %251
  %253 = add i64 %51, 1
  %254 = getelementptr inbounds i16, i16* %1, i64 %51
  store i16 %252, i16* %254, align 2
  %255 = ashr i32 %245, 11
  %256 = add nsw i32 %255, 32768
  %257 = icmp ult i32 %256, 65536
  %258 = trunc i32 %255 to i16
  %259 = icmp sgt i32 %245, 67108863
  %260 = select i1 %259, i16 32767, i16 -32768
  %261 = select i1 %257, i16 %258, i16 %260
  br label %265

262:                                              ; preds = %204
  %263 = trunc i32 %119 to i16
  %264 = shl i16 %263, 1
  br label %265

265:                                              ; preds = %262, %207, %197
  %266 = phi i64 [ 1, %262 ], [ 2, %207 ], [ 2, %197 ]
  %267 = phi i64 [ %51, %262 ], [ %253, %207 ], [ %200, %197 ]
  %268 = phi i16 [ %264, %262 ], [ %261, %207 ], [ %203, %197 ]
  %269 = add i64 %51, %266
  %270 = getelementptr inbounds i16, i16* %1, i64 %267
  store i16 %268, i16* %270, align 2
  %271 = icmp ult i64 %88, %3
  br i1 %271, label %49, label %272

272:                                              ; preds = %265, %4
  %273 = phi i64 [ 0, %4 ], [ %269, %265 ]
  ret i64 %273
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @block4(%struct.G722DecoderState*, i32, i32) unnamed_addr #4 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 0
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %2
  %9 = add i32 %8, 32768
  %10 = icmp ult i32 %9, 65536
  %11 = icmp sgt i32 %8, 32767
  %12 = select i1 %11, i32 32767, i32 32768
  %13 = select i1 %10, i32 %8, i32 %12
  %14 = shl i32 %13, 16
  %15 = ashr exact i32 %14, 16
  %16 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %2
  %20 = add i32 %19, 32768
  %21 = icmp ult i32 %20, 65536
  %22 = icmp sgt i32 %19, 32767
  %23 = select i1 %22, i32 32767, i32 32768
  %24 = select i1 %21, i32 %19, i32 %23
  %25 = shl i32 %24, 16
  %26 = ashr exact i32 %25, 16
  %27 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 0
  store i32 %26, i32* %27, align 4
  %28 = ashr i32 %25, 31
  %29 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 0
  %30 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = ashr i32 %31, 15
  %33 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 1
  %34 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 2
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 15
  %37 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 2
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 4, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = shl nsw i32 %39, 2
  %41 = add i32 %40, 32768
  %42 = icmp ult i32 %41, 65536
  %43 = icmp sgt i32 %39, 8191
  %44 = select i1 %43, i32 32767, i32 32768
  %45 = select i1 %42, i32 %40, i32 %44
  %46 = shl i32 %45, 16
  %47 = ashr exact i32 %46, 16
  %48 = icmp eq i32 %28, %32
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp slt i32 %50, 32767
  %52 = select i1 %51, i32 %50, i32 32767
  %53 = icmp eq i32 %28, %36
  %54 = select i1 %53, i32 128, i32 -128
  %55 = ashr i32 %52, 7
  %56 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 4, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, 32512
  %59 = ashr i32 %58, 15
  %60 = add nsw i32 %59, %54
  %61 = add nsw i32 %60, %55
  %62 = icmp sgt i32 %61, -12288
  %63 = select i1 %62, i32 %61, i32 -12288
  %64 = icmp slt i32 %63, 12288
  %65 = select i1 %64, i32 %63, i32 12288
  %66 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 5, i64 2
  store i32 %65, i32* %66, align 4
  %67 = ashr i32 %25, 31
  store i32 %67, i32* %29, align 4
  store i32 %32, i32* %33, align 4
  %68 = icmp eq i32 %67, %32
  %69 = select i1 %68, i32 192, i32 -192
  %70 = mul nsw i32 %39, 32640
  %71 = ashr i32 %70, 15
  %72 = add nsw i32 %69, %71
  %73 = add nsw i32 %72, 32768
  %74 = icmp ult i32 %73, 65536
  %75 = icmp sgt i32 %72, 32767
  %76 = select i1 %75, i32 32767, i32 32768
  %77 = select i1 %74, i32 %72, i32 %76
  %78 = shl i32 %77, 16
  %79 = ashr exact i32 %78, 16
  %80 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 5, i64 1
  store i32 %79, i32* %80, align 4
  %81 = sub nsw i32 48128, %65
  %82 = icmp ult i32 %81, 65536
  %83 = sub nsw i32 15360, %65
  %84 = select i1 %82, i32 %83, i32 -32768
  %85 = icmp sgt i32 %79, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %3
  %87 = sub nsw i32 0, %84
  %88 = icmp slt i32 %79, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %86, %3
  %90 = phi i32 [ %84, %3 ], [ %87, %86 ]
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %86
  %92 = icmp eq i32 %2, 0
  %93 = select i1 %92, i32 0, i32 128
  %94 = ashr i32 %2, 15
  store i32 %94, i32* %29, align 4
  %95 = sub nsw i32 0, %93
  %96 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 1
  %97 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 2
  %98 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 3
  %99 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 4
  %100 = bitcast i32* %96 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4
  %102 = ashr <4 x i32> %101, <i32 15, i32 15, i32 15, i32 15>
  %103 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 1
  %104 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 1
  %105 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 2
  %106 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 3
  %107 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %107, align 4
  %108 = insertelement <4 x i32> undef, i32 %94, i32 0
  %109 = shufflevector <4 x i32> %108, <4 x i32> undef, <4 x i32> zeroinitializer
  %110 = icmp eq <4 x i32> %102, %109
  %111 = insertelement <4 x i32> undef, i32 %93, i32 0
  %112 = shufflevector <4 x i32> %111, <4 x i32> undef, <4 x i32> zeroinitializer
  %113 = insertelement <4 x i32> undef, i32 %95, i32 0
  %114 = shufflevector <4 x i32> %113, <4 x i32> undef, <4 x i32> zeroinitializer
  %115 = select <4 x i1> %110, <4 x i32> %112, <4 x i32> %114
  %116 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 4
  %117 = bitcast i32* %103 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4
  %119 = mul nsw <4 x i32> %118, <i32 32640, i32 32640, i32 32640, i32 32640>
  %120 = ashr <4 x i32> %119, <i32 15, i32 15, i32 15, i32 15>
  %121 = add nsw <4 x i32> %120, %115
  %122 = add nsw <4 x i32> %121, <i32 32768, i32 32768, i32 32768, i32 32768>
  %123 = icmp ult <4 x i32> %122, <i32 65536, i32 65536, i32 65536, i32 65536>
  %124 = icmp sgt <4 x i32> %121, <i32 32767, i32 32767, i32 32767, i32 32767>
  %125 = select <4 x i1> %124, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> <i32 32768, i32 32768, i32 32768, i32 32768>
  %126 = select <4 x i1> %123, <4 x i32> %121, <4 x i32> %125
  %127 = shl <4 x i32> %126, <i32 16, i32 16, i32 16, i32 16>
  %128 = ashr exact <4 x i32> %127, <i32 16, i32 16, i32 16, i32 16>
  %129 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 5
  %131 = load i32, i32* %130, align 4
  %132 = ashr i32 %131, 15
  %133 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 5
  store i32 %132, i32* %133, align 4
  %134 = icmp eq i32 %132, %94
  %135 = select i1 %134, i32 %93, i32 %95
  %136 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 5
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, 32640
  %139 = ashr i32 %138, 15
  %140 = add nsw i32 %139, %135
  %141 = add nsw i32 %140, 32768
  %142 = icmp ult i32 %141, 65536
  %143 = icmp sgt i32 %140, 32767
  %144 = select i1 %143, i32 32767, i32 32768
  %145 = select i1 %142, i32 %140, i32 %144
  %146 = shl i32 %145, 16
  %147 = ashr exact i32 %146, 16
  %148 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 5
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 6
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 15
  %152 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 6
  store i32 %151, i32* %152, align 4
  %153 = load i32, i32* %29, align 4
  %154 = icmp eq i32 %151, %153
  %155 = select i1 %154, i32 %93, i32 %95
  %156 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 6
  %157 = load i32, i32* %156, align 4
  %158 = mul nsw i32 %157, 32640
  %159 = ashr i32 %158, 15
  %160 = add nsw i32 %159, %155
  %161 = add nsw i32 %160, 32768
  %162 = icmp ult i32 %161, 65536
  %163 = icmp sgt i32 %160, 32767
  %164 = select i1 %163, i32 32767, i32 32768
  %165 = select i1 %162, i32 %160, i32 %164
  %166 = shl i32 %165, 16
  %167 = ashr exact i32 %166, 16
  %168 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 6
  store i32 %167, i32* %168, align 4
  store i32 %131, i32* %149, align 4
  store i32 %167, i32* %156, align 4
  %169 = extractelement <4 x i32> %101, i32 3
  store i32 %169, i32* %130, align 4
  store i32 %147, i32* %136, align 4
  %170 = extractelement <4 x i32> %101, i32 2
  store i32 %170, i32* %99, align 4
  %171 = extractelement <4 x i32> %128, i32 3
  store i32 %171, i32* %116, align 4
  %172 = load i32, i32* %97, align 4
  store i32 %172, i32* %98, align 4
  %173 = extractelement <4 x i32> %128, i32 2
  store i32 %173, i32* %106, align 4
  %174 = load i32, i32* %96, align 4
  store i32 %174, i32* %97, align 4
  %175 = extractelement <4 x i32> %128, i32 1
  store i32 %175, i32* %105, align 4
  %176 = load i32, i32* %5, align 4
  store i32 %176, i32* %96, align 4
  %177 = load i32, i32* %104, align 4
  store i32 %177, i32* %103, align 4
  %178 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 2
  store i32 %179, i32* %180, align 4
  %181 = load i32, i32* %30, align 4
  store i32 %181, i32* %34, align 4
  %182 = load i32, i32* %66, align 4
  store i32 %182, i32* %56, align 4
  %183 = load i32, i32* %16, align 4
  store i32 %183, i32* %178, align 4
  %184 = load i32, i32* %27, align 4
  store i32 %184, i32* %30, align 4
  %185 = load i32, i32* %80, align 4
  store i32 %185, i32* %38, align 4
  %186 = shl nsw i32 %183, 1
  %187 = add i32 %186, 32768
  %188 = icmp ult i32 %187, 65536
  %189 = icmp sgt i32 %183, 16383
  %190 = select i1 %189, i32 32767, i32 32768
  %191 = select i1 %188, i32 %186, i32 %190
  %192 = shl i32 %191, 16
  %193 = ashr exact i32 %192, 16
  %194 = mul nsw i32 %193, %185
  %195 = ashr i32 %194, 15
  %196 = shl nsw i32 %179, 1
  %197 = add i32 %196, 32768
  %198 = icmp ult i32 %197, 65536
  %199 = icmp sgt i32 %179, 16383
  %200 = select i1 %199, i32 32767, i32 32768
  %201 = select i1 %198, i32 %196, i32 %200
  %202 = shl i32 %201, 16
  %203 = ashr exact i32 %202, 16
  %204 = mul nsw i32 %203, %182
  %205 = ashr i32 %204, 15
  %206 = add nsw i32 %205, %195
  %207 = add nsw i32 %206, 32768
  %208 = icmp ult i32 %207, 65536
  %209 = icmp sgt i32 %206, 32767
  %210 = select i1 %209, i32 32767, i32 32768
  %211 = select i1 %208, i32 %206, i32 %210
  %212 = shl i32 %211, 16
  %213 = ashr exact i32 %212, 16
  %214 = getelementptr inbounds %struct.G722DecoderState, %struct.G722DecoderState* %0, i64 0, i32 5, i64 %4, i32 1
  store i32 %213, i32* %214, align 4
  %215 = shl nsw i32 %131, 1
  %216 = add i32 %215, 32768
  %217 = icmp ult i32 %216, 65536
  %218 = icmp sgt i32 %131, 16383
  %219 = select i1 %218, i32 32767, i32 32768
  %220 = select i1 %217, i32 %215, i32 %219
  %221 = shl i32 %220, 16
  %222 = ashr exact i32 %221, 16
  %223 = mul nsw i32 %222, %167
  %224 = ashr i32 %223, 15
  %225 = shl nsw i32 %169, 1
  %226 = add i32 %225, 32768
  %227 = icmp ult i32 %226, 65536
  %228 = icmp sgt i32 %169, 16383
  %229 = select i1 %228, i32 32767, i32 32768
  %230 = select i1 %227, i32 %225, i32 %229
  %231 = shl i32 %230, 16
  %232 = ashr exact i32 %231, 16
  %233 = mul nsw i32 %232, %147
  %234 = ashr i32 %233, 15
  %235 = load i32, i32* %96, align 4
  %236 = insertelement <4 x i32> undef, i32 %235, i32 0
  %237 = insertelement <4 x i32> %236, i32 %174, i32 1
  %238 = insertelement <4 x i32> %237, i32 %172, i32 2
  %239 = shufflevector <4 x i32> %238, <4 x i32> %101, <4 x i32> <i32 0, i32 1, i32 2, i32 6>
  %240 = shl nsw <4 x i32> %239, <i32 1, i32 1, i32 1, i32 1>
  %241 = add <4 x i32> %240, <i32 32768, i32 32768, i32 32768, i32 32768>
  %242 = icmp ult <4 x i32> %241, <i32 65536, i32 65536, i32 65536, i32 65536>
  %243 = icmp sgt <4 x i32> %239, <i32 16383, i32 16383, i32 16383, i32 16383>
  %244 = select <4 x i1> %243, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> <i32 32768, i32 32768, i32 32768, i32 32768>
  %245 = select <4 x i1> %242, <4 x i32> %240, <4 x i32> %244
  %246 = shl <4 x i32> %245, <i32 16, i32 16, i32 16, i32 16>
  %247 = ashr exact <4 x i32> %246, <i32 16, i32 16, i32 16, i32 16>
  %248 = bitcast i32* %103 to <2 x i32>*
  %249 = load <2 x i32>, <2 x i32>* %248, align 4
  %250 = shufflevector <2 x i32> %249, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %251 = shufflevector <4 x i32> %250, <4 x i32> %128, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %252 = mul nsw <4 x i32> %247, %251
  %253 = ashr <4 x i32> %252, <i32 15, i32 15, i32 15, i32 15>
  %254 = shufflevector <4 x i32> %253, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %255 = add nsw <4 x i32> %253, %254
  %256 = shufflevector <4 x i32> %255, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %257 = add nsw <4 x i32> %255, %256
  %258 = extractelement <4 x i32> %257, i32 0
  %259 = add nsw i32 %258, %234
  %260 = add nsw i32 %259, %224
  %261 = add nsw i32 %260, 32768
  %262 = icmp ult i32 %261, 65536
  %263 = icmp sgt i32 %260, 32767
  %264 = select i1 %263, i32 32767, i32 32768
  %265 = select i1 %262, i32 %260, i32 %264
  %266 = shl i32 %265, 16
  %267 = ashr exact i32 %266, 16
  store i32 %267, i32* %17, align 4
  %268 = add nsw i32 %267, %213
  %269 = add nsw i32 %268, 32768
  %270 = icmp ult i32 %269, 65536
  %271 = icmp sgt i32 %268, 32767
  %272 = select i1 %271, i32 32767, i32 32768
  %273 = select i1 %270, i32 %268, i32 %272
  %274 = shl i32 %273, 16
  %275 = ashr exact i32 %274, 16
  store i32 %275, i32* %6, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
