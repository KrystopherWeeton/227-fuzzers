; ModuleID = '../../extensions/browser/api/declarative_net_request/ruleset_matcher_base.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/ruleset_matcher_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::declarative_net_request::RulesetMatcherBase" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.util::IdType", %"class.std::__1::map" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.85" }
%"struct.std::__1::pair.85" = type { %"struct.content::GlobalFrameRoutingId", %"struct.extensions::declarative_net_request::RequestAction" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"struct.extensions::declarative_net_request::RequestAction" = type <{ i32, [4 x i8], %"class.absl::optional.39", i32, [4 x i8], i64, %"class.util::IdType", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.44", %"class.std::__1::vector.44", i8, [7 x i8] }>
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"class.std::__1::__compressed_pair.46" }
%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional.19" }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, [7 x i8], %union.anon.38 }
%union.anon.38 = type { %"struct.extensions::declarative_net_request::RequestAction" }
%"struct.extensions::declarative_net_request::RequestParams" = type { %class.GURL*, %"class.url::Origin", i32, i8, i32, %"struct.content::GlobalFrameRoutingId", %"class.base::RepeatingCallback", %"class.base::flat_map", %"class.absl::optional.19", %"class.base::flat_map.24" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.24" = type { %"class.base::internal::flat_tree.25" }
%"class.base::internal::flat_tree.25" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair.28" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair.28"* }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"struct.std::__1::pair.67" = type { %"struct.content::GlobalFrameRoutingId", %"struct.extensions::declarative_net_request::RequestAction" }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.55", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.content::NavigationHandle" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"struct.url_pattern_index::flat::UrlRule" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"class.flatbuffers::Vector" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.97" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::basic_string"* }
%"class.net::QueryIterator" = type { %class.GURL*, %"struct.url::Component", i8, %"struct.url::Component", %"struct.url::Component", %"class.std::__1::basic_string" }
%"struct.extensions::declarative_net_request::flat::UrlRuleMetadata" = type { %"class.flatbuffers::Table" }
%"struct.extensions::declarative_net_request::flat::UrlTransform" = type { %"class.flatbuffers::Table" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.extensions::declarative_net_request::flat::QueryKeyValue" = type { %"class.flatbuffers::Table" }
%"struct.flatbuffers::String" = type { %"class.flatbuffers::Vector.69" }
%"class.flatbuffers::Vector.69" = type { i32 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.113" }
%"struct.std::__1::pair.113" = type { %"class.base::BasicStringPiece", %"class.base::BasicStringPiece" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.extensions::declarative_net_request::RequestAction"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"**, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.url_pattern_index::flat::UrlRule"** }
%"class.flatbuffers::Vector.84" = type { i32 }
%"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo" = type { %"class.flatbuffers::Table" }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestAction10HeaderInfoENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRKNS2_4flat16ModifyHeaderInfoEEEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S6_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE14__erase_uniqueIS3_EEmRKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZTVN10extensions23declarative_net_request18RulesetMatcherBaseE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::declarative_net_request::RulesetMatcherBase"*)* @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev to i8*), i8* bitcast (void (%"class.extensions::declarative_net_request::RulesetMatcherBase"*)* @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url10kFtpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = linkonce_odr hidden constant i8 0, comdat, align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"=\00", align 1

@_ZN10extensions23declarative_net_request18RulesetMatcherBaseD1Ev = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::RulesetMatcherBase"*), void (%"class.extensions::declarative_net_request::RulesetMatcherBase"*)* @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions23declarative_net_request18RulesetMatcherBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #14
  br label %18

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %15, i64 %17) #14
  br label %18

18:                                               ; preds = %10, %13
  %19 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev(%"class.extensions::declarative_net_request::RulesetMatcherBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions23declarative_net_request18RulesetMatcherBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD0Ev(%"class.extensions::declarative_net_request::RulesetMatcherBase"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase22GetBeforeRequestActionERKNS0_13RequestParamsE(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = alloca %"class.absl::optional.34", align 8
  %6 = alloca %"class.absl::optional.34", align 8
  %7 = alloca %"class.absl::optional.34", align 8
  %8 = alloca %"class.absl::optional.34", align 8
  %9 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %9) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 248, i1 false)
  %10 = bitcast %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1 to void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)***
  %11 = load void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)**, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)** %11, i64 6
  %13 = load void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)** %12, align 8
  call void %13(%"class.absl::optional.34"* nonnull sret %5, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2) #14
  %14 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 248, i1 false)
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 5
  %16 = bitcast %"struct.content::GlobalFrameRoutingId"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8, !noalias !2
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %64, label %25

25:                                               ; preds = %3, %45
  %26 = phi %"class.std::__1::__tree_end_node"* [ %47, %45 ], [ %21, %3 ]
  %27 = phi %"class.std::__1::__tree_node"* [ %48, %45 ], [ %23, %3 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = load i32, i32* %28, align 4, !noalias !2
  %31 = icmp slt i32 %30, %18
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::__tree_node_base"** %33 to %"class.std::__1::__tree_node"**
  br label %45

35:                                               ; preds = %25
  %36 = icmp sgt i32 %30, %18
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %29, align 4
  %39 = icmp slt i32 %38, %20
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  br i1 %39, label %45, label %42

42:                                               ; preds = %37, %35
  %43 = bitcast %"class.std::__1::__tree_node"* %27 to %"class.std::__1::__tree_node"**
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %42, %37, %32
  %46 = phi %"class.std::__1::__tree_node"** [ %43, %42 ], [ %34, %32 ], [ %41, %37 ]
  %47 = phi %"class.std::__1::__tree_end_node"* [ %44, %42 ], [ %26, %32 ], [ %26, %37 ]
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %46, align 8, !noalias !2
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %50, label %25

50:                                               ; preds = %45
  %51 = icmp eq %"class.std::__1::__tree_end_node"* %47, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 4
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"struct.std::__1::__value_type"*
  %55 = bitcast %"class.std::__1::__tree_end_node"* %53 to i32*
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %54, i64 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %55, align 4, !noalias !2
  %58 = icmp sgt i32 %57, %18
  br i1 %58, label %64, label %59

59:                                               ; preds = %52
  %60 = icmp slt i32 %57, %18
  br i1 %60, label %67, label %61

61:                                               ; preds = %59
  %62 = load i32, i32* %56, align 4
  %63 = icmp sgt i32 %62, %20
  br i1 %63, label %64, label %67

64:                                               ; preds = %61, %52, %50, %3
  store i8 0, i8* %14, align 8, !alias.scope !2
  %65 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = bitcast %union.anon.38* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 240, i1 false) #14, !alias.scope !2
  br label %72

67:                                               ; preds = %61, %59
  %68 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %68) #14, !noalias !2
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 5
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"struct.extensions::declarative_net_request::RequestAction"*
  call void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"struct.extensions::declarative_net_request::RequestAction"* %70) #14, !noalias !2
  store i8 1, i8* %14, align 8, !alias.scope !2
  %71 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %71, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %68) #14, !noalias !2
  br label %72

72:                                               ; preds = %64, %67
  %73 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 248, i1 false) #14
  %74 = load i8, i8* %9, align 8, !range !5
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %78 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %78, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %77) #14
  store i8 1, i8* %73, align 8
  br label %79

79:                                               ; preds = %72, %76
  %80 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 248, i1 false) #14
  %81 = load i8, i8* %14, align 8, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %85 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %85, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %84) #14
  store i8 1, i8* %80, align 8
  br label %86

86:                                               ; preds = %79, %83
  call void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.34"* sret %0, %"class.absl::optional.34"* nonnull %7, %"class.absl::optional.34"* nonnull %8) #14
  %87 = load i8, i8* %80, align 8, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %90) #14
  store i8 0, i8* %80, align 8
  br label %91

91:                                               ; preds = %86, %89
  %92 = load i8, i8* %73, align 8, !range !5
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %95) #14
  store i8 0, i8* %73, align 8
  br label %96

96:                                               ; preds = %91, %94
  %97 = load i8, i8* %14, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %100) #14
  store i8 0, i8* %14, align 8
  br label %101

101:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %14) #14
  %102 = load i8, i8* %9, align 8, !range !5
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %105) #14
  store i8 0, i8* %9, align 8
  br label %106

106:                                              ; preds = %101, %104
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %9) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %3, %32
  %13 = phi %"class.std::__1::__tree_end_node"* [ %34, %32 ], [ %8, %3 ]
  %14 = phi %"class.std::__1::__tree_node"* [ %35, %32 ], [ %10, %3 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = icmp slt i32 %17, %5
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  br label %32

22:                                               ; preds = %12
  %23 = icmp sgt i32 %17, %5
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = load i32, i32* %16, align 4
  %26 = icmp slt i32 %25, %7
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__tree_node_base"** %27 to %"class.std::__1::__tree_node"**
  br i1 %26, label %32, label %29

29:                                               ; preds = %24, %22
  %30 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %29, %24, %19
  %33 = phi %"class.std::__1::__tree_node"** [ %30, %29 ], [ %21, %19 ], [ %28, %24 ]
  %34 = phi %"class.std::__1::__tree_end_node"* [ %31, %29 ], [ %13, %19 ], [ %13, %24 ]
  %35 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %36 = icmp eq %"class.std::__1::__tree_node"* %35, null
  br i1 %36, label %37, label %12

37:                                               ; preds = %32
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %34, %8
  br i1 %38, label %51, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"struct.std::__1::__value_type"*
  %42 = bitcast %"class.std::__1::__tree_end_node"* %40 to i32*
  %43 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %41, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %42, align 4
  %45 = icmp sgt i32 %44, %5
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = icmp slt i32 %44, %5
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %43, align 4
  %50 = icmp sgt i32 %49, %7
  br i1 %50, label %51, label %55

51:                                               ; preds = %48, %39, %37, %3
  %52 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = bitcast %union.anon.38* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 240, i1 false) #14
  br label %61

55:                                               ; preds = %46, %48
  %56 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %56) #14
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 5
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"struct.extensions::declarative_net_request::RequestAction"*
  call void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"struct.extensions::declarative_net_request::RequestAction"* %58) #14
  %59 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %59, align 8
  %60 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %60, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %56) #14
  br label %61

61:                                               ; preds = %55, %51
  ret void
}

declare void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.34"* sret, %"class.absl::optional.34"*, %"class.absl::optional.34"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameCreatedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %4 = alloca %"class.absl::optional.34", align 8
  %5 = alloca %"struct.std::__1::pair.67", align 8
  %6 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %7 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %7, i64 20
  %9 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %8, align 8
  %10 = tail call %"class.content::RenderFrameHost"* %9(%"class.content::RenderFrameHost"* %1) #14
  %11 = icmp eq %"class.content::RenderFrameHost"* %10, null
  br i1 %11, label %117, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.content::RenderFrameHost"* %10 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %14 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %14, i64 14
  %16 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %15, align 8
  %17 = tail call %"class.content::RenderProcessHost"* %16(%"class.content::RenderFrameHost"* nonnull %10) #14
  %18 = bitcast %"class.content::RenderProcessHost"* %17 to i32 (%"class.content::RenderProcessHost"*)***
  %19 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %19, i64 29
  %21 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %20, align 8
  %22 = tail call i32 %21(%"class.content::RenderProcessHost"* %17) #14
  %23 = bitcast %"class.content::RenderFrameHost"* %10 to i32 (%"class.content::RenderFrameHost"*)***
  %24 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %24, i64 9
  %26 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %25, align 8
  %27 = tail call i32 %26(%"class.content::RenderFrameHost"* nonnull %10) #14
  %28 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 248, i1 false)
  %29 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8, !noalias !6
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %72, label %33

33:                                               ; preds = %12, %53
  %34 = phi %"class.std::__1::__tree_end_node"* [ %55, %53 ], [ %29, %12 ]
  %35 = phi %"class.std::__1::__tree_node"* [ %56, %53 ], [ %31, %12 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %36, align 4, !noalias !6
  %39 = icmp slt i32 %38, %22
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  br label %53

43:                                               ; preds = %33
  %44 = icmp sgt i32 %38, %22
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = load i32, i32* %37, align 4
  %47 = icmp slt i32 %46, %27
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  br i1 %47, label %53, label %50

50:                                               ; preds = %45, %43
  %51 = bitcast %"class.std::__1::__tree_node"* %35 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %50, %45, %40
  %54 = phi %"class.std::__1::__tree_node"** [ %51, %50 ], [ %42, %40 ], [ %49, %45 ]
  %55 = phi %"class.std::__1::__tree_end_node"* [ %52, %50 ], [ %34, %40 ], [ %34, %45 ]
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8, !noalias !6
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %53
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %55, %29
  br i1 %59, label %72, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"struct.std::__1::__value_type"*
  %63 = bitcast %"class.std::__1::__tree_end_node"* %61 to i32*
  %64 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %62, i64 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %63, align 4, !noalias !6
  %66 = icmp sgt i32 %65, %22
  br i1 %66, label %72, label %67

67:                                               ; preds = %60
  %68 = icmp slt i32 %65, %22
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = load i32, i32* %64, align 4
  %71 = icmp sgt i32 %70, %27
  br i1 %71, label %72, label %75

72:                                               ; preds = %12, %58, %60, %69
  store i8 0, i8* %28, align 8, !alias.scope !6
  %73 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = bitcast %union.anon.38* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 240, i1 false) #14, !alias.scope !6
  br label %116

75:                                               ; preds = %67, %69
  %76 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %76) #14, !noalias !6
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 5
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"struct.extensions::declarative_net_request::RequestAction"*
  call void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %3, %"struct.extensions::declarative_net_request::RequestAction"* %78) #14, !noalias !6
  store i8 1, i8* %28, align 8, !alias.scope !6
  %79 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %79, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %3) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %76) #14, !noalias !6
  %80 = load i8, i8* %28, align 8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %116, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %84 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %84, i64 14
  %86 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %85, align 8
  %87 = call %"class.content::RenderProcessHost"* %86(%"class.content::RenderFrameHost"* %1) #14
  %88 = bitcast %"class.content::RenderProcessHost"* %87 to i32 (%"class.content::RenderProcessHost"*)***
  %89 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %89, i64 29
  %91 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %90, align 8
  %92 = call i32 %91(%"class.content::RenderProcessHost"* %87) #14
  %93 = bitcast %"class.content::RenderFrameHost"* %1 to i32 (%"class.content::RenderFrameHost"*)***
  %94 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %94, i64 9
  %96 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %95, align 8
  %97 = call i32 %96(%"class.content::RenderFrameHost"* %1) #14
  %98 = bitcast %"struct.std::__1::pair.67"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %98) #14
  %99 = load i8, i8* %28, align 8, !range !5
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %102, !prof !9

101:                                              ; preds = %82
  call void @llvm.trap() #14
  unreachable

102:                                              ; preds = %82
  %103 = bitcast %"struct.std::__1::pair.67"* %5 to i64*
  %104 = zext i32 %97 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %92 to i64
  %107 = or i64 %105, %106
  store i64 %107, i64* %103, align 8, !alias.scope !10
  %108 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %5, i64 0, i32 1
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %108, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %79) #14
  %109 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %5, i64 0, i32 0
  %111 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S6_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %109, %"struct.content::GlobalFrameRoutingId"* nonnull dereferenceable(8) %110, %"struct.std::__1::pair.67"* nonnull dereferenceable(248) %5) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %108) #14
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %98) #14
  %112 = load i8, i8* %28, align 8, !range !5
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %102
  %115 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %115) #14
  store i8 0, i8* %28, align 8
  br label %116

116:                                              ; preds = %72, %75, %102, %114
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %28) #14
  br label %117

117:                                              ; preds = %2, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameDeletedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.content::GlobalFrameRoutingId", align 4
  %4 = bitcast %"struct.content::GlobalFrameRoutingId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %6 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %6, i64 14
  %8 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %7, align 8
  %9 = tail call %"class.content::RenderProcessHost"* %8(%"class.content::RenderFrameHost"* %1) #14
  %10 = bitcast %"class.content::RenderProcessHost"* %9 to i32 (%"class.content::RenderProcessHost"*)***
  %11 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %11, i64 29
  %13 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %12, align 8
  %14 = tail call i32 %13(%"class.content::RenderProcessHost"* %9) #14
  %15 = bitcast %"class.content::RenderFrameHost"* %1 to i32 (%"class.content::RenderFrameHost"*)***
  %16 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %16, i64 9
  %18 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %17, align 8
  %19 = tail call i32 %18(%"class.content::RenderFrameHost"* %1) #14
  %20 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %3, i64 0, i32 0
  store i32 %14, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %3, i64 0, i32 1
  store i32 %19, i32* %21, align 4
  %22 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0
  %23 = call i64 @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE14__erase_uniqueIS3_EEmRKT_(%"class.std::__1::__tree"* %22, %"struct.content::GlobalFrameRoutingId"* nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18RulesetMatcherBase21OnDidFinishNavigationEPN7content16NavigationHandleE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::NavigationHandle"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %4 = alloca %"struct.extensions::declarative_net_request::RequestParams", align 8
  %5 = alloca %"class.absl::optional.34", align 8
  %6 = alloca %"class.absl::optional.34", align 8
  %7 = alloca %"class.absl::optional.34", align 8
  %8 = alloca %"class.absl::optional.34", align 8
  %9 = alloca %"class.absl::optional.34", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.content::GlobalFrameRoutingId"*
  %12 = alloca %"struct.std::__1::pair.67", align 8
  %13 = bitcast %"class.content::NavigationHandle"* %1 to %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)***
  %14 = load %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)**, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)** %14, i64 33
  %16 = load %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)** %15, align 8
  %17 = tail call %"class.content::RenderFrameHost"* %16(%"class.content::NavigationHandle"* %1) #14
  %18 = bitcast %"struct.extensions::declarative_net_request::RequestParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %18) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 200, i1 false)
  %19 = bitcast %"class.content::NavigationHandle"* %1 to i1 (%"class.content::NavigationHandle"*)***
  %20 = load i1 (%"class.content::NavigationHandle"*)**, i1 (%"class.content::NavigationHandle"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %20, i64 24
  %22 = load i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.content::NavigationHandle"* %1) #14
  call void @_ZN10extensions23declarative_net_request13RequestParamsC1EPN7content15RenderFrameHostEb(%"struct.extensions::declarative_net_request::RequestParams"* nonnull %4, %"class.content::RenderFrameHost"* %17, i1 zeroext %23) #14
  %24 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 248, i1 false)
  %25 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %4, i64 0, i32 5
  %26 = bitcast %"struct.content::GlobalFrameRoutingId"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8, !noalias !13
  %34 = icmp eq %"class.std::__1::__tree_node"* %33, null
  br i1 %34, label %74, label %35

35:                                               ; preds = %2, %55
  %36 = phi %"class.std::__1::__tree_end_node"* [ %57, %55 ], [ %31, %2 ]
  %37 = phi %"class.std::__1::__tree_node"* [ %58, %55 ], [ %33, %2 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 1
  %40 = load i32, i32* %38, align 4, !noalias !13
  %41 = icmp slt i32 %40, %28
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  br label %55

45:                                               ; preds = %35
  %46 = icmp sgt i32 %40, %28
  br i1 %46, label %52, label %47

47:                                               ; preds = %45
  %48 = load i32, i32* %39, align 4
  %49 = icmp slt i32 %48, %30
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  br i1 %49, label %55, label %52

52:                                               ; preds = %47, %45
  %53 = bitcast %"class.std::__1::__tree_node"* %37 to %"class.std::__1::__tree_node"**
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %47, %42
  %56 = phi %"class.std::__1::__tree_node"** [ %53, %52 ], [ %44, %42 ], [ %51, %47 ]
  %57 = phi %"class.std::__1::__tree_end_node"* [ %54, %52 ], [ %36, %42 ], [ %36, %47 ]
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8, !noalias !13
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %60, label %35

60:                                               ; preds = %55
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %57, %31
  br i1 %61, label %74, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 4
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"struct.std::__1::__value_type"*
  %65 = bitcast %"class.std::__1::__tree_end_node"* %63 to i32*
  %66 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %64, i64 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %65, align 4, !noalias !13
  %68 = icmp sgt i32 %67, %28
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = icmp slt i32 %67, %28
  br i1 %70, label %77, label %71

71:                                               ; preds = %69
  %72 = load i32, i32* %66, align 4
  %73 = icmp sgt i32 %72, %30
  br i1 %73, label %74, label %77

74:                                               ; preds = %71, %62, %60, %2
  store i8 0, i8* %24, align 8, !alias.scope !13
  %75 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %76 = bitcast %union.anon.38* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 240, i1 false) #14, !alias.scope !13
  br label %82

77:                                               ; preds = %71, %69
  %78 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %78) #14, !noalias !13
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 5
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"struct.extensions::declarative_net_request::RequestAction"*
  call void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %3, %"struct.extensions::declarative_net_request::RequestAction"* %80) #14, !noalias !13
  store i8 1, i8* %24, align 8, !alias.scope !13
  %81 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %81, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %3) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %78) #14, !noalias !13
  br label %82

82:                                               ; preds = %74, %77
  %83 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %83) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 248, i1 false)
  %84 = bitcast %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0 to void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)***
  %85 = load void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)**, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)** %85, i64 5
  %87 = load void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)*, void (%"class.absl::optional.34"*, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*)** %86, align 8
  call void %87(%"class.absl::optional.34"* nonnull sret %6, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, %"struct.extensions::declarative_net_request::RequestParams"* nonnull dereferenceable(200) %4) #14
  %88 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %88) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 248, i1 false)
  %89 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 248, i1 false) #14
  %90 = load i8, i8* %24, align 8, !range !5
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %94 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %94, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %93) #14
  store i8 1, i8* %89, align 8
  br label %95

95:                                               ; preds = %82, %92
  %96 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 248, i1 false) #14
  %97 = load i8, i8* %83, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %101 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %101, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %100) #14
  store i8 1, i8* %96, align 8
  br label %102

102:                                              ; preds = %95, %99
  call void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.34"* nonnull sret %7, %"class.absl::optional.34"* nonnull %8, %"class.absl::optional.34"* nonnull %9) #14
  %103 = load i8, i8* %96, align 8, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %106) #14
  store i8 0, i8* %96, align 8
  br label %107

107:                                              ; preds = %102, %105
  %108 = load i8, i8* %89, align 8, !range !5
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %111) #14
  store i8 0, i8* %89, align 8
  br label %112

112:                                              ; preds = %107, %110
  %113 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #14
  %114 = bitcast i64* %10 to i32*
  store i32 -1431655766, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %11, i64 0, i32 1
  store i32 -1431655766, i32* %115, align 4
  %116 = bitcast %"class.content::RenderFrameHost"* %17 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %117 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %117, i64 14
  %119 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %118, align 8
  %120 = call %"class.content::RenderProcessHost"* %119(%"class.content::RenderFrameHost"* %17) #14
  %121 = bitcast %"class.content::RenderProcessHost"* %120 to i32 (%"class.content::RenderProcessHost"*)***
  %122 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %121, align 8
  %123 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %122, i64 29
  %124 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %123, align 8
  %125 = call i32 %124(%"class.content::RenderProcessHost"* %120) #14
  %126 = bitcast %"class.content::RenderFrameHost"* %17 to i32 (%"class.content::RenderFrameHost"*)***
  %127 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %126, align 8
  %128 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %127, i64 9
  %129 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %128, align 8
  %130 = call i32 %129(%"class.content::RenderFrameHost"* %17) #14
  store i32 %125, i32* %114, align 8
  store i32 %130, i32* %115, align 4
  %131 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %0, i64 0, i32 3, i32 0
  %132 = call i64 @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE14__erase_uniqueIS3_EEmRKT_(%"class.std::__1::__tree"* %131, %"struct.content::GlobalFrameRoutingId"* nonnull dereferenceable(8) %11) #14
  %133 = load i8, i8* %88, align 8, !range !5
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #14
  br label %148

136:                                              ; preds = %112
  %137 = bitcast %"struct.std::__1::pair.67"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %137) #14
  %138 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %139 = bitcast %"struct.std::__1::pair.67"* %12 to i64*
  %140 = load i64, i64* %10, align 8, !noalias !16
  store i64 %140, i64* %139, align 8, !alias.scope !16
  %141 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %12, i64 0, i32 1
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %141, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %138) #14
  %142 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %12, i64 0, i32 0
  %143 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S6_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %131, %"struct.content::GlobalFrameRoutingId"* nonnull dereferenceable(8) %142, %"struct.std::__1::pair.67"* nonnull dereferenceable(248) %12) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %141) #14
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %137) #14
  %144 = load i8, i8* %88, align 8, !range !5
  %145 = icmp eq i8 %144, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #14
  br i1 %145, label %148, label %146

146:                                              ; preds = %136
  %147 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %147) #14
  store i8 0, i8* %88, align 8
  br label %148

148:                                              ; preds = %135, %136, %146
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %88) #14
  %149 = load i8, i8* %83, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %152) #14
  store i8 0, i8* %83, align 8
  br label %153

153:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %83) #14
  %154 = load i8, i8* %24, align 8, !range !5
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %157) #14
  store i8 0, i8* %24, align 8
  br label %158

158:                                              ; preds = %153, %156
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %24) #14
  call void @_ZN10extensions23declarative_net_request13RequestParamsD1Ev(%"struct.extensions::declarative_net_request::RequestParams"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %18) #14
  ret void
}

declare void @_ZN10extensions23declarative_net_request13RequestParamsC1EPN7content15RenderFrameHostEb(%"struct.extensions::declarative_net_request::RequestParams"*, %"class.content::RenderFrameHost"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request13RequestParamsD1Ev(%"struct.extensions::declarative_net_request::RequestParams"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetAllowlistedFrameActionForTestingEPN7content15RenderFrameHostE(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = bitcast %"class.content::RenderFrameHost"* %2 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %6 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %6, i64 14
  %8 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %7, align 8
  %9 = tail call %"class.content::RenderProcessHost"* %8(%"class.content::RenderFrameHost"* %2) #14
  %10 = bitcast %"class.content::RenderProcessHost"* %9 to i32 (%"class.content::RenderProcessHost"*)***
  %11 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %11, i64 29
  %13 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %12, align 8
  %14 = tail call i32 %13(%"class.content::RenderProcessHost"* %9) #14
  %15 = bitcast %"class.content::RenderFrameHost"* %2 to i32 (%"class.content::RenderFrameHost"*)***
  %16 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %16, i64 9
  %18 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %17, align 8
  %19 = tail call i32 %18(%"class.content::RenderFrameHost"* %2) #14
  %20 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8, !noalias !19
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %63, label %24

24:                                               ; preds = %3, %44
  %25 = phi %"class.std::__1::__tree_end_node"* [ %46, %44 ], [ %20, %3 ]
  %26 = phi %"class.std::__1::__tree_node"* [ %47, %44 ], [ %22, %3 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 2, i32 0, i32 0, i32 1
  %29 = load i32, i32* %27, align 4, !noalias !19
  %30 = icmp slt i32 %29, %14
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__tree_node_base"** %32 to %"class.std::__1::__tree_node"**
  br label %44

34:                                               ; preds = %24
  %35 = icmp sgt i32 %29, %14
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = load i32, i32* %28, align 4
  %38 = icmp slt i32 %37, %19
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  br i1 %38, label %44, label %41

41:                                               ; preds = %36, %34
  %42 = bitcast %"class.std::__1::__tree_node"* %26 to %"class.std::__1::__tree_node"**
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %41, %36, %31
  %45 = phi %"class.std::__1::__tree_node"** [ %42, %41 ], [ %33, %31 ], [ %40, %36 ]
  %46 = phi %"class.std::__1::__tree_end_node"* [ %43, %41 ], [ %25, %31 ], [ %25, %36 ]
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8, !noalias !19
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %49, label %24

49:                                               ; preds = %44
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %46, %20
  br i1 %50, label %63, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 4
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"struct.std::__1::__value_type"*
  %54 = bitcast %"class.std::__1::__tree_end_node"* %52 to i32*
  %55 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %53, i64 0, i32 0, i32 0, i32 1
  %56 = load i32, i32* %54, align 4, !noalias !19
  %57 = icmp sgt i32 %56, %14
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = icmp slt i32 %56, %14
  br i1 %59, label %67, label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %55, align 4
  %62 = icmp sgt i32 %61, %19
  br i1 %62, label %63, label %67

63:                                               ; preds = %60, %51, %49, %3
  %64 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %64, align 8, !alias.scope !19
  %65 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = bitcast %union.anon.38* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 240, i1 false) #14, !alias.scope !19
  br label %73

67:                                               ; preds = %60, %58
  %68 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %68) #14, !noalias !19
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 5
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"struct.extensions::declarative_net_request::RequestAction"*
  call void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"struct.extensions::declarative_net_request::RequestAction"* %70) #14, !noalias !19
  %71 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %71, align 8, !alias.scope !19
  %72 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %72, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %68) #14, !noalias !19
  br label %73

73:                                               ; preds = %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase34CreateBlockOrCollapseRequestActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readonly dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 4
  %8 = icmp eq i32 %6, 128
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i32
  %11 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %12 = load i32, i32* %11, align 4, !noalias !22
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 0, %13
  %15 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %14
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 2, !noalias !22
  %18 = icmp ugt i16 %17, 24
  br i1 %18, label %19, label %42

19:                                               ; preds = %4
  %20 = getelementptr inbounds i8, i8* %15, i64 24
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2, !noalias !22
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = zext i16 %22 to i64
  %26 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %25
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !22
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi i32 [ %28, %24 ], [ 0, %19 ]
  %31 = icmp ugt i16 %17, 26
  br i1 %31, label %32, label %42

32:                                               ; preds = %29
  %33 = getelementptr inbounds i8, i8* %15, i64 26
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2, !noalias !22
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = zext i16 %35 to i64
  %39 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %38
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !22
  br label %42

42:                                               ; preds = %4, %29, %32, %37
  %43 = phi i32 [ %30, %37 ], [ %30, %32 ], [ %30, %29 ], [ 0, %4 ]
  %44 = phi i64 [ %41, %37 ], [ 0, %32 ], [ 0, %29 ], [ 0, %4 ]
  %45 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %46 = load i32, i32* %45, align 8, !noalias !22
  %47 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* %0, i32 %10, i32 %43, i64 %44, i32 %46, %"class.std::__1::basic_string"* dereferenceable(24) %47) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, i32, %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = icmp ugt i16 %11, 24
  br i1 %12, label %13, label %36

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %9, i64 24
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = zext i16 %16 to i64
  %20 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi i32 [ %22, %18 ], [ 0, %13 ]
  %25 = icmp ugt i16 %11, 26
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %9, i64 26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = zext i16 %29 to i64
  %33 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %32
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %4, %23, %26, %31
  %37 = phi i32 [ %24, %31 ], [ %24, %26 ], [ %24, %23 ], [ 0, %4 ]
  %38 = phi i64 [ %35, %31 ], [ 0, %26 ], [ 0, %23 ], [ 0, %4 ]
  %39 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* %0, i32 %2, i32 %37, i64 %38, i32 %40, %"class.std::__1::basic_string"* dereferenceable(24) %41) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase17CreateAllowActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readnone dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %6 = load i32, i32* %5, align 4, !noalias !25
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2, !noalias !25
  %12 = icmp ugt i16 %11, 24
  br i1 %12, label %13, label %36

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %9, i64 24
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2, !noalias !25
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = zext i16 %16 to i64
  %20 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !25
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i32 [ %22, %18 ], [ 0, %13 ]
  %25 = icmp ugt i16 %11, 26
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %9, i64 26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2, !noalias !25
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = zext i16 %29 to i64
  %33 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %32
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !25
  br label %36

36:                                               ; preds = %4, %23, %26, %31
  %37 = phi i32 [ %24, %31 ], [ %24, %26 ], [ %24, %23 ], [ 0, %4 ]
  %38 = phi i64 [ %35, %31 ], [ 0, %26 ], [ 0, %23 ], [ 0, %4 ]
  %39 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %40 = load i32, i32* %39, align 8, !noalias !25
  %41 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* %0, i32 2, i32 %37, i64 %38, i32 %40, %"class.std::__1::basic_string"* dereferenceable(24) %41) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase28CreateAllowAllRequestsActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readnone dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %6 = load i32, i32* %5, align 4, !noalias !28
  %7 = sext i32 %6 to i64
  %8 = sub nsw i64 0, %7
  %9 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2, !noalias !28
  %12 = icmp ugt i16 %11, 24
  br i1 %12, label %13, label %36

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %9, i64 24
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2, !noalias !28
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = zext i16 %16 to i64
  %20 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !28
  br label %23

23:                                               ; preds = %18, %13
  %24 = phi i32 [ %22, %18 ], [ 0, %13 ]
  %25 = icmp ugt i16 %11, 26
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %9, i64 26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2, !noalias !28
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = zext i16 %29 to i64
  %33 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %32
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !28
  br label %36

36:                                               ; preds = %4, %23, %26, %31
  %37 = phi i32 [ %24, %31 ], [ %24, %26 ], [ %24, %23 ], [ 0, %4 ]
  %38 = phi i64 [ %35, %31 ], [ 0, %26 ], [ 0, %23 ], [ 0, %4 ]
  %39 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %40 = load i32, i32* %39, align 8, !noalias !28
  %41 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* %0, i32 5, i32 %37, i64 %38, i32 %40, %"class.std::__1::basic_string"* dereferenceable(24) %41) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateUpgradeActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readonly dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.url::StringPieceReplacements", align 8
  %6 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %7 = alloca %class.GURL, align 8
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #14
  %11 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %10) #14
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i64 0, i64 0)) #14
  %14 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i64 0, i64 0), i64 %13) #14
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %union.anon.38* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 240, i1 false) #14
  br label %79

19:                                               ; preds = %4, %12
  %20 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 240, i1 false)
  %21 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !31
  %23 = sext i32 %22 to i64
  %24 = sub nsw i64 0, %23
  %25 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2, !noalias !31
  %28 = icmp ugt i16 %27, 24
  br i1 %28, label %29, label %52

29:                                               ; preds = %19
  %30 = getelementptr inbounds i8, i8* %25, i64 24
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 2, !noalias !31
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = zext i16 %32 to i64
  %36 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %35
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4, !noalias !31
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi i32 [ %38, %34 ], [ 0, %29 ]
  %41 = icmp ugt i16 %27, 26
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %25, i64 26
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2, !noalias !31
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = zext i16 %45 to i64
  %49 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %48
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !31
  br label %52

52:                                               ; preds = %19, %39, %42, %47
  %53 = phi i32 [ %40, %47 ], [ %40, %42 ], [ %40, %39 ], [ 0, %19 ]
  %54 = phi i64 [ %51, %47 ], [ 0, %42 ], [ 0, %39 ], [ 0, %19 ]
  %55 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %56 = load i32, i32* %55, align 8, !noalias !31
  %57 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6, i32 4, i32 %53, i64 %54, i32 %56, %"class.std::__1::basic_string"* dereferenceable(24) %57) #14
  %58 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %58) #14
  %59 = load %class.GURL*, %class.GURL** %8, align 8
  %60 = bitcast %"class.url::StringPieceReplacements"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %60) #14, !noalias !34
  %61 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 1
  %62 = bitcast %"struct.url::Parsed"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 80, i1 false) #14, !noalias !34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 64, i1 false) #14, !noalias !34
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %61) #14, !noalias !34
  %63 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #14, !noalias !34
  %64 = shl i64 %63, 32
  %65 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i8** %65, align 8, !noalias !34
  %66 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 1, i32 0
  %67 = bitcast %"struct.url::Component"* %66 to i64*
  store i64 %64, i64* %67, align 8, !noalias !34
  %68 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %7, %class.GURL* %59, %"class.url::Replacements"* nonnull dereferenceable(144) %68) #14
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %61) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %60) #14, !noalias !34
  %69 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !5
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %71, label %75, label %73

73:                                               ; preds = %52
  %74 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %72, %class.GURL* nonnull dereferenceable(120) %7) #14
  br label %76

75:                                               ; preds = %52
  call void @_ZN4GURLC1EOS_(%class.GURL* %72, %class.GURL* nonnull dereferenceable(120) %7) #14
  store i8 1, i8* %69, align 8
  br label %76

76:                                               ; preds = %73, %75
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %58) #14
  %77 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %77, align 8
  %78 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %78, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %6) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %20) #14
  br label %79

79:                                               ; preds = %76, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase32CreateRedirectActionFromMetadataERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleERKN11flatbuffers6VectorINSA_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readonly dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1), %"class.flatbuffers::Vector"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca [3 x %"class.base::BasicStringPiece"], align 16
  %7 = alloca %"class.std::__1::vector.90", align 8
  %8 = alloca %"class.std::__1::list", align 8
  %9 = alloca %"class.std::__1::vector.102", align 8
  %10 = alloca %"class.net::QueryIterator", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.url::StringPieceReplacements", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %class.GURL, align 8
  %20 = alloca %class.GURL, align 8
  %21 = alloca %class.GURL, align 8
  %22 = alloca %class.GURL, align 8
  %23 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp ugt i16 %29, 24
  br i1 %30, label %31, label %41

31:                                               ; preds = %5
  %32 = getelementptr inbounds i8, i8* %27, i64 24
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = zext i16 %34 to i64
  %38 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %5, %31, %36
  %42 = phi i32 [ %40, %36 ], [ 0, %31 ], [ 0, %5 ]
  %43 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %4, i64 1, i32 0
  %44 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %4, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %99, label %47

47:                                               ; preds = %41
  %48 = zext i32 %45 to i64
  br label %49

49:                                               ; preds = %91, %47
  %50 = phi i64 [ %93, %91 ], [ %48, %47 ]
  %51 = phi i64 [ %92, %91 ], [ 0, %47 ]
  %52 = add i64 %51, %50
  %53 = lshr i64 %52, 1
  %54 = getelementptr i32, i32* %43, i64 %53
  %55 = bitcast i32* %54 to i8*
  %56 = load i32, i32* %54, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = bitcast i8* %58 to %"class.flatbuffers::Table"*
  %60 = bitcast i8* %58 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %59, i64 0, i32 0, i64 %63
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = icmp ugt i16 %66, 4
  br i1 %67, label %68, label %80

68:                                               ; preds = %49
  %69 = getelementptr inbounds i8, i8* %64, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %68
  %74 = zext i16 %71 to i64
  %75 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %59, i64 0, i32 0, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = icmp ugt i32 %77, %42
  %79 = zext i1 %78 to i32
  br label %80

80:                                               ; preds = %73, %68, %49
  %81 = phi i32 [ %79, %73 ], [ 0, %49 ], [ 0, %68 ]
  %82 = phi i32 [ %77, %73 ], [ 0, %49 ], [ 0, %68 ]
  %83 = icmp ult i32 %82, %42
  %84 = zext i1 %83 to i32
  %85 = sub nsw i32 %84, %81
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = icmp eq i32 %85, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %87
  %90 = add nuw i64 %53, 1
  br label %91

91:                                               ; preds = %89, %80
  %92 = phi i64 [ %90, %89 ], [ %51, %80 ]
  %93 = phi i64 [ %50, %89 ], [ %53, %80 ]
  %94 = icmp ult i64 %92, %93
  br i1 %94, label %49, label %99

95:                                               ; preds = %87
  %96 = icmp eq i32* %54, null
  %97 = bitcast i8* %58 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %98 = select i1 %96, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* null, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %97
  br label %99

99:                                               ; preds = %91, %95, %41
  %100 = phi %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* [ null, %41 ], [ %98, %95 ], [ null, %91 ]
  %101 = bitcast %class.GURL* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %101) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %19) #14
  %102 = bitcast %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %100 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = sub nsw i64 0, %104
  %106 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %100, i64 0, i32 0, i32 0, i64 %105
  %107 = bitcast i8* %106 to i16*
  %108 = load i16, i16* %107, align 2
  %109 = icmp ugt i16 %108, 8
  br i1 %109, label %112, label %110

110:                                              ; preds = %99
  %111 = bitcast %class.GURL* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %111) #14
  br label %147

112:                                              ; preds = %99
  %113 = getelementptr inbounds i8, i8* %106, i64 8
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %100, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %119
  %126 = bitcast %class.GURL* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %126) #14
  %127 = getelementptr inbounds i8, i8* %123, i64 4
  %128 = bitcast i8* %123 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %20, i8* %127, i64 %130) #14
  br label %1055

131:                                              ; preds = %112, %119
  %132 = bitcast %class.GURL* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %132) #14
  %133 = icmp ugt i16 %108, 10
  br i1 %133, label %134, label %147

134:                                              ; preds = %131
  %135 = getelementptr inbounds i8, i8* %106, i64 10
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %100, i64 0, i32 0, i32 0, i64 %138
  %140 = icmp eq i16 %137, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %134
  %142 = bitcast i8* %139 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %139, i64 %144
  %146 = bitcast i8* %145 to %"struct.extensions::declarative_net_request::flat::UrlTransform"*
  br label %147

147:                                              ; preds = %110, %131, %134, %141
  %148 = phi i8* [ %132, %141 ], [ %132, %134 ], [ %132, %131 ], [ %111, %110 ]
  %149 = phi %"struct.extensions::declarative_net_request::flat::UrlTransform"* [ %146, %141 ], [ null, %134 ], [ null, %131 ], [ null, %110 ]
  %150 = bitcast %"class.url::StringPieceReplacements"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %150) #14, !noalias !37
  %151 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1
  %152 = bitcast %"struct.url::Parsed"* %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 80, i1 false) #14, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 64, i1 false) #14, !noalias !37
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %151) #14, !noalias !37
  %153 = bitcast %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149 to i32*
  %154 = load i32, i32* %153, align 4, !noalias !37
  %155 = sext i32 %154 to i64
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to i16*
  %159 = load i16, i16* %158, align 2, !noalias !37
  %160 = icmp ugt i16 %159, 4
  br i1 %160, label %161, label %287

161:                                              ; preds = %147
  %162 = getelementptr inbounds i8, i8* %157, i64 4
  %163 = bitcast i8* %162 to i16*
  %164 = load i16, i16* %163, align 2, !noalias !37
  %165 = zext i16 %164 to i64
  %166 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %165
  %167 = icmp eq i16 %164, 0
  br i1 %167, label %183, label %168

168:                                              ; preds = %161
  %169 = bitcast i8* %166 to i32*
  %170 = load i32, i32* %169, align 4, !noalias !37
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %166, i64 %171
  %173 = icmp eq i8* %172, null
  br i1 %173, label %183, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds i8, i8* %172, i64 4
  %176 = bitcast i8* %172 to i32*
  %177 = load i32, i32* %176, align 4, !noalias !37
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 0
  store i8* %175, i8** %179, align 8, !noalias !37
  %180 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 0
  %181 = bitcast %"struct.url::Component"* %180 to i64*
  %182 = shl nuw i64 %178, 32
  store i64 %182, i64* %181, align 8, !noalias !37
  br label %183

183:                                              ; preds = %174, %168, %161
  %184 = icmp ugt i16 %159, 6
  br i1 %184, label %185, label %287

185:                                              ; preds = %183
  %186 = getelementptr inbounds i8, i8* %157, i64 6
  %187 = bitcast i8* %186 to i16*
  %188 = load i16, i16* %187, align 2, !noalias !37
  %189 = zext i16 %188 to i64
  %190 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %189
  %191 = icmp eq i16 %188, 0
  br i1 %191, label %207, label %192

192:                                              ; preds = %185
  %193 = bitcast i8* %190 to i32*
  %194 = load i32, i32* %193, align 4, !noalias !37
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %190, i64 %195
  %197 = icmp eq i8* %196, null
  br i1 %197, label %207, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds i8, i8* %196, i64 4
  %200 = bitcast i8* %196 to i32*
  %201 = load i32, i32* %200, align 4, !noalias !37
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 3
  store i8* %199, i8** %203, align 8, !noalias !37
  %204 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 3
  %205 = bitcast %"struct.url::Component"* %204 to i64*
  %206 = shl nuw i64 %202, 32
  store i64 %206, i64* %205, align 8, !noalias !37
  br label %207

207:                                              ; preds = %198, %192, %185
  %208 = icmp ugt i16 %159, 8
  br i1 %208, label %209, label %287

209:                                              ; preds = %207
  %210 = getelementptr inbounds i8, i8* %157, i64 8
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2, !noalias !37
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %223, label %214

214:                                              ; preds = %209
  %215 = zext i16 %212 to i64
  %216 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %215
  %217 = load i8, i8* %216, align 1, !noalias !37
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 4
  store i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8** %220, align 8, !noalias !37
  %221 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 4
  %222 = bitcast %"struct.url::Component"* %221 to i64*
  store i64 -4294967296, i64* %222, align 8, !noalias !37
  br label %247

223:                                              ; preds = %214, %209
  %224 = icmp ugt i16 %159, 10
  br i1 %224, label %225, label %287

225:                                              ; preds = %223
  %226 = getelementptr inbounds i8, i8* %157, i64 10
  %227 = bitcast i8* %226 to i16*
  %228 = load i16, i16* %227, align 2, !noalias !37
  %229 = zext i16 %228 to i64
  %230 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %229
  %231 = icmp eq i16 %228, 0
  br i1 %231, label %247, label %232

232:                                              ; preds = %225
  %233 = bitcast i8* %230 to i32*
  %234 = load i32, i32* %233, align 4, !noalias !37
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %230, i64 %235
  %237 = icmp eq i8* %236, null
  br i1 %237, label %247, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds i8, i8* %236, i64 4
  %240 = bitcast i8* %236 to i32*
  %241 = load i32, i32* %240, align 4, !noalias !37
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 4
  store i8* %239, i8** %243, align 8, !noalias !37
  %244 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 4
  %245 = bitcast %"struct.url::Component"* %244 to i64*
  %246 = shl nuw i64 %242, 32
  store i64 %246, i64* %245, align 8, !noalias !37
  br label %247

247:                                              ; preds = %238, %232, %225, %219
  %248 = icmp ugt i16 %159, 12
  br i1 %248, label %249, label %287

249:                                              ; preds = %247
  %250 = getelementptr inbounds i8, i8* %157, i64 12
  %251 = bitcast i8* %250 to i16*
  %252 = load i16, i16* %251, align 2, !noalias !37
  %253 = icmp eq i16 %252, 0
  br i1 %253, label %263, label %254

254:                                              ; preds = %249
  %255 = zext i16 %252 to i64
  %256 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %255
  %257 = load i8, i8* %256, align 1, !noalias !37
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %263, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 5
  store i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8** %260, align 8, !noalias !37
  %261 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 5
  %262 = bitcast %"struct.url::Component"* %261 to i64*
  store i64 -4294967296, i64* %262, align 8, !noalias !37
  br label %287

263:                                              ; preds = %254, %249
  %264 = icmp ugt i16 %159, 14
  br i1 %264, label %265, label %287

265:                                              ; preds = %263
  %266 = getelementptr inbounds i8, i8* %157, i64 14
  %267 = bitcast i8* %266 to i16*
  %268 = load i16, i16* %267, align 2, !noalias !37
  %269 = zext i16 %268 to i64
  %270 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %269
  %271 = icmp eq i16 %268, 0
  br i1 %271, label %287, label %272

272:                                              ; preds = %265
  %273 = bitcast i8* %270 to i32*
  %274 = load i32, i32* %273, align 4, !noalias !37
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %270, i64 %275
  %277 = icmp eq i8* %276, null
  br i1 %277, label %287, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds i8, i8* %276, i64 4
  %280 = bitcast i8* %276 to i32*
  %281 = load i32, i32* %280, align 4, !noalias !37
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 5
  store i8* %279, i8** %283, align 8, !noalias !37
  %284 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 5
  %285 = bitcast %"struct.url::Component"* %284 to i64*
  %286 = shl nuw i64 %282, 32
  store i64 %286, i64* %285, align 8, !noalias !37
  br label %287

287:                                              ; preds = %278, %272, %265, %263, %259, %247, %223, %207, %183, %147
  %288 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %288) #14, !noalias !37
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 0, i64 24, i1 false) #14, !noalias !37
  %291 = icmp ugt i16 %159, 16
  br i1 %291, label %292, label %950

292:                                              ; preds = %287
  %293 = getelementptr inbounds i8, i8* %157, i64 16
  %294 = bitcast i8* %293 to i16*
  %295 = load i16, i16* %294, align 2, !noalias !37
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %306, label %297

297:                                              ; preds = %292
  %298 = zext i16 %295 to i64
  %299 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %298
  %300 = load i8, i8* %299, align 1, !noalias !37
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 6
  store i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8** %303, align 8, !noalias !37
  %304 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 6
  %305 = bitcast %"struct.url::Component"* %304 to i64*
  store i64 -4294967296, i64* %305, align 8, !noalias !37
  br label %950

306:                                              ; preds = %297, %292
  %307 = icmp ugt i16 %159, 18
  br i1 %307, label %308, label %950

308:                                              ; preds = %306
  %309 = getelementptr inbounds i8, i8* %157, i64 18
  %310 = bitcast i8* %309 to i16*
  %311 = load i16, i16* %310, align 2, !noalias !37
  %312 = zext i16 %311 to i64
  %313 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %312
  %314 = icmp eq i16 %311, 0
  br i1 %314, label %330, label %315

315:                                              ; preds = %308
  %316 = bitcast i8* %313 to i32*
  %317 = load i32, i32* %316, align 4, !noalias !37
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds i8, i8* %313, i64 %318
  %320 = icmp eq i8* %319, null
  br i1 %320, label %330, label %321

321:                                              ; preds = %315
  %322 = getelementptr inbounds i8, i8* %319, i64 4
  %323 = bitcast i8* %319 to i32*
  %324 = load i32, i32* %323, align 4, !noalias !37
  %325 = zext i32 %324 to i64
  %326 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 6
  store i8* %322, i8** %326, align 8, !noalias !37
  %327 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 6
  %328 = bitcast %"struct.url::Component"* %327 to i64*
  %329 = shl nuw i64 %325, 32
  store i64 %329, i64* %328, align 8, !noalias !37
  br label %950

330:                                              ; preds = %315, %308
  %331 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %332 = load %class.GURL*, %class.GURL** %331, align 8, !noalias !37
  %333 = icmp ugt i16 %159, 20
  br i1 %333, label %334, label %950

334:                                              ; preds = %330
  %335 = getelementptr inbounds i8, i8* %157, i64 20
  %336 = bitcast i8* %335 to i16*
  %337 = load i16, i16* %336, align 2, !noalias !37
  %338 = zext i16 %337 to i64
  %339 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %338
  %340 = icmp eq i16 %337, 0
  br i1 %340, label %351, label %341

341:                                              ; preds = %334
  %342 = bitcast i8* %339 to i32*
  %343 = load i32, i32* %342, align 4, !noalias !37
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds i8, i8* %339, i64 %344
  %346 = icmp eq i8* %345, null
  br i1 %346, label %351, label %347

347:                                              ; preds = %341
  %348 = bitcast i8* %345 to i32*
  %349 = load i32, i32* %348, align 4, !noalias !37
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %370

351:                                              ; preds = %347, %341, %334
  %352 = icmp ugt i16 %159, 22
  br i1 %352, label %353, label %950

353:                                              ; preds = %351
  %354 = getelementptr inbounds i8, i8* %157, i64 22
  %355 = bitcast i8* %354 to i16*
  %356 = load i16, i16* %355, align 2, !noalias !37
  %357 = zext i16 %356 to i64
  %358 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %357
  %359 = icmp eq i16 %356, 0
  br i1 %359, label %950, label %360

360:                                              ; preds = %353
  %361 = bitcast i8* %358 to i32*
  %362 = load i32, i32* %361, align 4, !noalias !37
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds i8, i8* %358, i64 %363
  %365 = icmp eq i8* %364, null
  br i1 %365, label %950, label %366

366:                                              ; preds = %360
  %367 = bitcast i8* %364 to i32*
  %368 = load i32, i32* %367, align 4, !noalias !37
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %950, label %370

370:                                              ; preds = %366, %347
  %371 = bitcast %"class.std::__1::vector.90"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #14, !noalias !37
  %372 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %7, i64 0, i32 0, i32 0
  %373 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %7, i64 0, i32 0, i32 1
  %374 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %371, i8 0, i64 24, i1 false) #14, !noalias !37
  br i1 %340, label %483, label %375

375:                                              ; preds = %370
  %376 = bitcast i8* %339 to i32*
  %377 = load i32, i32* %376, align 4, !noalias !37
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds i8, i8* %339, i64 %378
  %380 = icmp eq i8* %379, null
  br i1 %380, label %483, label %381

381:                                              ; preds = %375
  %382 = bitcast i8* %379 to i32*
  %383 = load i32, i32* %382, align 4, !noalias !37
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %483, label %385

385:                                              ; preds = %381
  %386 = zext i32 %383 to i64
  %387 = bitcast %"class.base::BasicStringPiece"** %374 to i64*
  %388 = bitcast %"class.std::__1::vector.90"* %7 to i64*
  %389 = bitcast %"class.base::BasicStringPiece"** %373 to i64*
  %390 = shl nuw nsw i64 %386, 4
  %391 = call i8* @_Znwm(i64 %390) #15
  %392 = bitcast i8* %391 to %"class.base::BasicStringPiece"*
  %393 = ptrtoint i8* %391 to i64
  %394 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %392, i64 %386
  %395 = ptrtoint %"class.base::BasicStringPiece"* %394 to i64
  store i64 %393, i64* %388, align 8, !noalias !37
  store i64 %393, i64* %389, align 8, !noalias !37
  store i64 %395, i64* %387, align 8, !noalias !37
  %396 = getelementptr inbounds i8, i8* %379, i64 4
  %397 = bitcast i8* %396 to i32*
  %398 = getelementptr inbounds i32, i32* %397, i64 %386
  %399 = bitcast i32* %398 to i8*
  br label %400

400:                                              ; preds = %474, %385
  %401 = phi i64 [ %393, %385 ], [ %470, %474 ]
  %402 = phi %"class.base::BasicStringPiece"* [ %394, %385 ], [ %475, %474 ]
  %403 = phi %"class.base::BasicStringPiece"* [ %392, %385 ], [ %471, %474 ]
  %404 = phi i8* [ %396, %385 ], [ %472, %474 ]
  %405 = bitcast i8* %404 to i32*
  %406 = load i32, i32* %405, align 4, !noalias !37
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds i8, i8* %404, i64 %407
  %409 = getelementptr inbounds i8, i8* %408, i64 4
  %410 = bitcast i8* %408 to i32*
  %411 = load i32, i32* %410, align 4, !noalias !37
  %412 = zext i32 %411 to i64
  %413 = icmp ult %"class.base::BasicStringPiece"* %403, %402
  %414 = ptrtoint %"class.base::BasicStringPiece"* %402 to i64
  br i1 %413, label %415, label %420

415:                                              ; preds = %400
  %416 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %403, i64 0, i32 0
  store i8* %409, i8** %416, align 8, !noalias !37
  %417 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %403, i64 0, i32 1
  store i64 %412, i64* %417, align 8, !noalias !37
  %418 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %403, i64 1
  %419 = ptrtoint %"class.base::BasicStringPiece"* %418 to i64
  store i64 %419, i64* %389, align 8, !noalias !37
  br label %469

420:                                              ; preds = %400
  %421 = ptrtoint %"class.base::BasicStringPiece"* %403 to i64
  %422 = load i64, i64* %388, align 8, !noalias !37
  %423 = sub i64 %421, %422
  %424 = ashr exact i64 %423, 4
  %425 = add nsw i64 %424, 1
  %426 = icmp ugt i64 %425, 1152921504606846975
  br i1 %426, label %427, label %429

427:                                              ; preds = %420
  %428 = bitcast %"class.std::__1::vector.90"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %428) #16
  unreachable

429:                                              ; preds = %420
  %430 = sub i64 %414, %422
  %431 = ashr exact i64 %430, 4
  %432 = icmp ult i64 %431, 576460752303423487
  br i1 %432, label %433, label %441

433:                                              ; preds = %429
  %434 = ashr exact i64 %430, 3
  %435 = icmp ult i64 %434, %425
  %436 = select i1 %435, i64 %425, i64 %434
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %446, label %438

438:                                              ; preds = %433
  %439 = icmp ugt i64 %436, 1152921504606846975
  br i1 %439, label %440, label %441

440:                                              ; preds = %438
  call void @abort() #16
  unreachable

441:                                              ; preds = %438, %429
  %442 = phi i64 [ %436, %438 ], [ 1152921504606846975, %429 ]
  %443 = shl i64 %442, 4
  %444 = call i8* @_Znwm(i64 %443) #15
  %445 = bitcast i8* %444 to %"class.base::BasicStringPiece"*
  br label %446

446:                                              ; preds = %441, %433
  %447 = phi i64 [ %442, %441 ], [ 0, %433 ]
  %448 = phi %"class.base::BasicStringPiece"* [ %445, %441 ], [ null, %433 ]
  %449 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %448, i64 %424
  %450 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %448, i64 %447
  %451 = ptrtoint %"class.base::BasicStringPiece"* %450 to i64
  %452 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %449, i64 0, i32 0
  store i8* %409, i8** %452, align 8, !noalias !37
  %453 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %448, i64 %424, i32 1
  store i64 %412, i64* %453, align 8, !noalias !37
  %454 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %449, i64 1
  %455 = ptrtoint %"class.base::BasicStringPiece"* %454 to i64
  %456 = sub i64 %401, %422
  %457 = ashr exact i64 %456, 4
  %458 = sub nsw i64 0, %457
  %459 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %449, i64 %458
  %460 = ptrtoint %"class.base::BasicStringPiece"* %459 to i64
  %461 = icmp sgt i64 %456, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %446
  %463 = bitcast %"class.base::BasicStringPiece"* %459 to i8*
  %464 = inttoptr i64 %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* align 8 %464, i64 %456, i1 false) #14
  br label %465

465:                                              ; preds = %462, %446
  store i64 %460, i64* %388, align 8, !noalias !37
  store i64 %455, i64* %389, align 8, !noalias !37
  store i64 %451, i64* %387, align 8, !noalias !37
  %466 = icmp eq i64 %422, 0
  br i1 %466, label %469, label %467

467:                                              ; preds = %465
  %468 = inttoptr i64 %422 to i8*
  call void @_ZdlPv(i8* %468) #15
  br label %469

469:                                              ; preds = %467, %465, %415
  %470 = phi i64 [ %419, %415 ], [ %455, %465 ], [ %455, %467 ]
  %471 = phi %"class.base::BasicStringPiece"* [ %418, %415 ], [ %454, %465 ], [ %454, %467 ]
  %472 = getelementptr inbounds i8, i8* %404, i64 4
  %473 = icmp eq i8* %472, %399
  br i1 %473, label %476, label %474

474:                                              ; preds = %469
  %475 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %374, align 8, !noalias !37
  br label %400

476:                                              ; preds = %469
  %477 = load i32, i32* %153, align 4, !noalias !37
  %478 = sext i32 %477 to i64
  %479 = sub nsw i64 0, %478
  %480 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %479
  %481 = bitcast i8* %480 to i16*
  %482 = load i16, i16* %481, align 2, !noalias !37
  br label %483

483:                                              ; preds = %476, %381, %375, %370
  %484 = phi i16 [ %482, %476 ], [ %159, %370 ], [ %159, %375 ], [ %159, %381 ]
  %485 = phi i64 [ %479, %476 ], [ %156, %370 ], [ %156, %375 ], [ %156, %381 ]
  %486 = bitcast %"class.std::__1::list"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %486) #14, !noalias !37
  %487 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 0
  %488 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 1
  %489 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %490 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %490, %"struct.std::__1::__list_node_base"** %487, align 8, !noalias !37
  store %"struct.std::__1::__list_node_base"* %490, %"struct.std::__1::__list_node_base"** %488, align 8, !noalias !37
  store i64 0, i64* %489, align 8, !noalias !37
  %491 = icmp ugt i16 %484, 22
  br i1 %491, label %492, label %598

492:                                              ; preds = %483
  %493 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %485
  %494 = getelementptr inbounds i8, i8* %493, i64 22
  %495 = bitcast i8* %494 to i16*
  %496 = load i16, i16* %495, align 2, !noalias !37
  %497 = zext i16 %496 to i64
  %498 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %497
  %499 = icmp eq i16 %496, 0
  br i1 %499, label %598, label %500

500:                                              ; preds = %492
  %501 = bitcast i8* %498 to i32*
  %502 = load i32, i32* %501, align 4, !noalias !37
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i8, i8* %498, i64 %503
  %505 = icmp eq i8* %504, null
  br i1 %505, label %598, label %506

506:                                              ; preds = %500
  %507 = bitcast i8* %504 to i32*
  %508 = load i32, i32* %507, align 4, !noalias !37
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %598, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds i8, i8* %504, i64 4
  %512 = bitcast i8* %511 to i32*
  %513 = zext i32 %508 to i64
  %514 = getelementptr inbounds i32, i32* %512, i64 %513
  %515 = bitcast i32* %514 to i8*
  %516 = bitcast %"class.std::__1::list"* %8 to i8**
  br label %517

517:                                              ; preds = %570, %510
  %518 = phi %"struct.std::__1::__list_node_base"* [ %490, %510 ], [ %597, %570 ]
  %519 = phi i8* [ %511, %510 ], [ %595, %570 ]
  %520 = bitcast i8* %519 to i32*
  %521 = load i32, i32* %520, align 4, !noalias !37
  %522 = zext i32 %521 to i64
  %523 = getelementptr inbounds i8, i8* %519, i64 %522
  %524 = bitcast i8* %523 to %"struct.extensions::declarative_net_request::flat::QueryKeyValue"*
  %525 = bitcast i8* %523 to i32*
  %526 = load i32, i32* %525, align 4, !noalias !37
  %527 = sext i32 %526 to i64
  %528 = sub nsw i64 0, %527
  %529 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::QueryKeyValue", %"struct.extensions::declarative_net_request::flat::QueryKeyValue"* %524, i64 0, i32 0, i32 0, i64 %528
  %530 = bitcast i8* %529 to i16*
  %531 = load i16, i16* %530, align 2, !noalias !37
  %532 = icmp ugt i16 %531, 4
  br i1 %532, label %536, label %533

533:                                              ; preds = %517
  %534 = load i32, i32* null, align 536870912, !noalias !37
  %535 = zext i32 %534 to i64
  br label %570

536:                                              ; preds = %517
  %537 = getelementptr inbounds i8, i8* %529, i64 4
  %538 = bitcast i8* %537 to i16*
  %539 = load i16, i16* %538, align 2, !noalias !37
  %540 = zext i16 %539 to i64
  %541 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::QueryKeyValue", %"struct.extensions::declarative_net_request::flat::QueryKeyValue"* %524, i64 0, i32 0, i32 0, i64 %540
  %542 = icmp eq i16 %539, 0
  br i1 %542, label %549, label %543

543:                                              ; preds = %536
  %544 = bitcast i8* %541 to i32*
  %545 = load i32, i32* %544, align 4, !noalias !37
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds i8, i8* %541, i64 %546
  %548 = bitcast i8* %547 to %"struct.flatbuffers::String"*
  br label %549

549:                                              ; preds = %543, %536
  %550 = phi %"struct.flatbuffers::String"* [ %548, %543 ], [ null, %536 ]
  %551 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %550, i64 0, i32 0
  %552 = getelementptr inbounds %"class.flatbuffers::Vector.69", %"class.flatbuffers::Vector.69"* %551, i64 1, i32 0
  %553 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %550, i64 0, i32 0, i32 0
  %554 = load i32, i32* %553, align 4, !noalias !37
  %555 = zext i32 %554 to i64
  %556 = icmp ugt i16 %531, 6
  br i1 %556, label %557, label %570

557:                                              ; preds = %549
  %558 = getelementptr inbounds i8, i8* %529, i64 6
  %559 = bitcast i8* %558 to i16*
  %560 = load i16, i16* %559, align 2, !noalias !37
  %561 = zext i16 %560 to i64
  %562 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::QueryKeyValue", %"struct.extensions::declarative_net_request::flat::QueryKeyValue"* %524, i64 0, i32 0, i32 0, i64 %561
  %563 = icmp eq i16 %560, 0
  br i1 %563, label %570, label %564

564:                                              ; preds = %557
  %565 = bitcast i8* %562 to i32*
  %566 = load i32, i32* %565, align 4, !noalias !37
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %562, i64 %567
  %569 = bitcast i8* %568 to %"struct.flatbuffers::String"*
  br label %570

570:                                              ; preds = %564, %557, %549, %533
  %571 = phi i64 [ %555, %564 ], [ %555, %557 ], [ %555, %549 ], [ %535, %533 ]
  %572 = phi i32* [ %552, %564 ], [ %552, %557 ], [ %552, %549 ], [ inttoptr (i64 4 to i32*), %533 ]
  %573 = phi %"struct.flatbuffers::String"* [ %569, %564 ], [ null, %557 ], [ null, %549 ], [ null, %533 ]
  %574 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %573, i64 0, i32 0
  %575 = getelementptr inbounds %"class.flatbuffers::Vector.69", %"class.flatbuffers::Vector.69"* %574, i64 1, i32 0
  %576 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %573, i64 0, i32 0, i32 0
  %577 = load i32, i32* %576, align 4, !noalias !37
  %578 = zext i32 %577 to i64
  %579 = call i8* @_Znwm(i64 48) #15, !noalias !40
  %580 = bitcast i8* %579 to %"struct.std::__1::__list_node_base"**
  %581 = getelementptr inbounds i8, i8* %579, i64 16
  %582 = bitcast i8* %581 to i32**
  store i32* %572, i32** %582, align 8, !noalias !37
  %583 = getelementptr inbounds i8, i8* %579, i64 24
  %584 = bitcast i8* %583 to i64*
  store i64 %571, i64* %584, align 8, !noalias !37
  %585 = getelementptr inbounds i8, i8* %579, i64 32
  %586 = bitcast i8* %585 to i32**
  store i32* %575, i32** %586, align 8, !noalias !37
  %587 = getelementptr inbounds i8, i8* %579, i64 40
  %588 = bitcast i8* %587 to i64*
  store i64 %578, i64* %588, align 8, !noalias !37
  %589 = getelementptr inbounds i8, i8* %579, i64 8
  %590 = bitcast i8* %589 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %490, %"struct.std::__1::__list_node_base"** %590, align 8, !noalias !37
  store %"struct.std::__1::__list_node_base"* %518, %"struct.std::__1::__list_node_base"** %580, align 8, !noalias !37
  %591 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %518, i64 0, i32 1
  %592 = bitcast %"struct.std::__1::__list_node_base"** %591 to i8**
  store i8* %579, i8** %592, align 8, !noalias !37
  store i8* %579, i8** %516, align 8, !noalias !37
  %593 = load i64, i64* %489, align 8, !noalias !37
  %594 = add i64 %593, 1
  store i64 %594, i64* %489, align 8, !noalias !37
  %595 = getelementptr inbounds i8, i8* %519, i64 4
  %596 = icmp eq i8* %595, %515
  %597 = bitcast i8* %579 to %"struct.std::__1::__list_node_base"*
  br i1 %596, label %598, label %517

598:                                              ; preds = %570, %506, %500, %492, %483
  %599 = bitcast %"class.std::__1::vector.102"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %599) #14, !noalias !37
  %600 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %9, i64 0, i32 0, i32 0
  %601 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %9, i64 0, i32 0, i32 1
  %602 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %599, i8 0, i64 24, i1 false) #14, !noalias !37
  %603 = bitcast %"class.net::QueryIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %603) #14, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %603, i8 -86, i64 64, i1 false) #14, !noalias !37
  call void @_ZN3net13QueryIteratorC1ERK4GURL(%"class.net::QueryIterator"* nonnull %10, %class.GURL* dereferenceable(120) %332) #14
  %604 = call zeroext i1 @_ZNK3net13QueryIterator7IsAtEndEv(%"class.net::QueryIterator"* nonnull %10) #14
  br i1 %604, label %634, label %605

605:                                              ; preds = %598
  %606 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %607 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %609 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %610 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %609, i64 0, i32 1, i32 0
  %611 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %612 = bitcast [3 x %"class.base::BasicStringPiece"]* %6 to i8*
  %613 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0
  %614 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 0
  %615 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 1
  %616 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 0
  %617 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 1
  %618 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 2, i32 0
  %619 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 2, i32 1
  %620 = bitcast %"class.std::__1::basic_string"** %601 to i64*
  %621 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %622 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %621, i64 0, i32 1, i32 0
  %623 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %625 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %626 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %627 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %626, i64 0, i32 1, i32 0
  %628 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %629 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %630 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = bitcast i8** %618 to <2 x i64>*
  br label %653

634:                                              ; preds = %825, %598
  %635 = phi i8 [ 0, %598 ], [ %820, %825 ]
  call void @_ZN3net13QueryIteratorD1Ev(%"class.net::QueryIterator"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %603) #14, !noalias !37
  %636 = bitcast %"struct.std::__1::__list_node_base"** %488 to i64*
  %637 = load i64, i64* %636, align 8, !noalias !37
  %638 = inttoptr i64 %637 to %"struct.std::__1::__list_node_base"*
  %639 = icmp eq %"struct.std::__1::__list_node_base"* %490, %638
  br i1 %639, label %827, label %640

640:                                              ; preds = %634
  %641 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %642 = bitcast [3 x %"class.base::BasicStringPiece"]* %6 to i8*
  %643 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0
  %644 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 0
  %645 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 1
  %646 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 2, i32 0
  %647 = bitcast %"class.std::__1::basic_string"** %601 to i64*
  %648 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %649 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %648, i64 0, i32 1, i32 0
  %650 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = bitcast [3 x %"class.base::BasicStringPiece"]* %6 to <2 x i64>*
  %652 = bitcast i8** %646 to <2 x i64>*
  br label %835

653:                                              ; preds = %825, %605
  %654 = phi i8 [ 0, %605 ], [ %820, %825 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %606) #14, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %606, i8 -86, i64 24, i1 false) #14, !noalias !37
  call void @_ZNK3net13QueryIterator6GetKeyEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.net::QueryIterator"* nonnull %10) #14
  %655 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %372, align 8, !noalias !37
  %656 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %373, align 8, !noalias !37
  %657 = ptrtoint %"class.base::BasicStringPiece"* %655 to i64
  %658 = ptrtoint %"class.base::BasicStringPiece"* %656 to i64
  %659 = sub i64 %658, %657
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %695, label %661

661:                                              ; preds = %653
  %662 = ashr exact i64 %659, 4
  %663 = load i8, i8* %610, align 1, !noalias !37
  %664 = icmp slt i8 %663, 0
  %665 = load i8*, i8** %607, align 8, !noalias !37
  %666 = select i1 %664, i8* %665, i8* %606
  %667 = load i64, i64* %608, align 8, !noalias !37
  %668 = zext i8 %663 to i64
  %669 = select i1 %664, i64 %667, i64 %668
  br label %670

670:                                              ; preds = %691, %661
  %671 = phi %"class.base::BasicStringPiece"* [ %655, %661 ], [ %693, %691 ]
  %672 = phi i64 [ %662, %661 ], [ %692, %691 ]
  %673 = lshr i64 %672, 1
  %674 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %671, i64 %673
  %675 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %674, i64 0, i32 0
  %676 = load i8*, i8** %675, align 8
  %677 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %671, i64 %673, i32 1
  %678 = load i64, i64* %677, align 8
  %679 = icmp ugt i64 %678, %669
  %680 = select i1 %679, i64 %669, i64 %678
  %681 = call i32 @memcmp(i8* %676, i8* %666, i64 %680) #14
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %685

683:                                              ; preds = %670
  %684 = icmp ult i64 %678, %669
  br i1 %684, label %687, label %691

685:                                              ; preds = %670
  %686 = icmp slt i32 %681, 0
  br i1 %686, label %687, label %691

687:                                              ; preds = %685, %683
  %688 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %674, i64 1
  %689 = xor i64 %673, -1
  %690 = add i64 %672, %689
  br label %691

691:                                              ; preds = %687, %685, %683
  %692 = phi i64 [ %690, %687 ], [ %673, %685 ], [ %673, %683 ]
  %693 = phi %"class.base::BasicStringPiece"* [ %688, %687 ], [ %671, %685 ], [ %671, %683 ]
  %694 = icmp eq i64 %692, 0
  br i1 %694, label %695, label %670

695:                                              ; preds = %691, %653
  %696 = phi %"class.base::BasicStringPiece"* [ %655, %653 ], [ %693, %691 ]
  %697 = icmp eq %"class.base::BasicStringPiece"* %696, %656
  br i1 %697, label %718, label %698

698:                                              ; preds = %695
  %699 = load i8, i8* %610, align 1, !noalias !37
  %700 = icmp slt i8 %699, 0
  %701 = load i8*, i8** %607, align 8, !noalias !37
  %702 = select i1 %700, i8* %701, i8* %606
  %703 = load i64, i64* %608, align 8, !noalias !37
  %704 = zext i8 %699 to i64
  %705 = select i1 %700, i64 %703, i64 %704
  %706 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %696, i64 0, i32 0
  %707 = load i8*, i8** %706, align 8
  %708 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %696, i64 0, i32 1
  %709 = load i64, i64* %708, align 8
  %710 = icmp ugt i64 %705, %709
  %711 = select i1 %710, i64 %709, i64 %705
  %712 = call i32 @memcmp(i8* %702, i8* %707, i64 %711) #14
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %716

714:                                              ; preds = %698
  %715 = icmp ult i64 %705, %709
  br i1 %715, label %718, label %819

716:                                              ; preds = %698
  %717 = icmp sgt i32 %712, -1
  br i1 %717, label %819, label %718

718:                                              ; preds = %716, %714, %695
  %719 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %488, align 8, !noalias !37
  %720 = icmp eq %"struct.std::__1::__list_node_base"* %719, %490
  br i1 %720, label %721, label %726

721:                                              ; preds = %718
  %722 = load i8, i8* %610, align 1, !noalias !37
  %723 = load i8*, i8** %607, align 8, !noalias !37
  %724 = load i64, i64* %608, align 8, !noalias !37
  %725 = zext i8 %722 to i64
  br label %755

726:                                              ; preds = %718
  %727 = ptrtoint %"struct.std::__1::__list_node_base"* %719 to i64
  %728 = load i8, i8* %610, align 1, !noalias !37
  %729 = icmp slt i8 %728, 0
  %730 = load i64, i64* %608, align 8, !noalias !37
  %731 = zext i8 %728 to i64
  %732 = select i1 %729, i64 %730, i64 %731
  %733 = load i8*, i8** %607, align 8, !noalias !37
  %734 = select i1 %729, i8* %733, i8* %606
  br label %735

735:                                              ; preds = %747, %726
  %736 = phi %"struct.std::__1::__list_node_base"* [ %719, %726 ], [ %751, %747 ]
  %737 = phi i64 [ %727, %726 ], [ %750, %747 ]
  %738 = inttoptr i64 %737 to %"struct.std::__1::__list_node"*
  %739 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %738, i64 0, i32 1, i32 0, i32 1
  %740 = load i64, i64* %739, align 8
  %741 = icmp eq i64 %740, %732
  br i1 %741, label %742, label %747

742:                                              ; preds = %735
  %743 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %738, i64 0, i32 1, i32 0, i32 0
  %744 = load i8*, i8** %743, align 8
  %745 = call i32 @bcmp(i8* %744, i8* %734, i64 %732) #14
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %753, label %747

747:                                              ; preds = %742, %735
  %748 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %736, i64 0, i32 1
  %749 = bitcast %"struct.std::__1::__list_node_base"** %748 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = inttoptr i64 %750 to %"struct.std::__1::__list_node_base"*
  %752 = icmp eq %"struct.std::__1::__list_node_base"* %490, %751
  br i1 %752, label %755, label %735

753:                                              ; preds = %742
  %754 = icmp eq %"struct.std::__1::__list_node_base"* %736, %490
  br i1 %754, label %755, label %788

755:                                              ; preds = %747, %753, %721
  %756 = phi i64 [ %725, %721 ], [ %731, %753 ], [ %731, %747 ]
  %757 = phi i64 [ %724, %721 ], [ %730, %753 ], [ %730, %747 ]
  %758 = phi i8* [ %723, %721 ], [ %733, %753 ], [ %733, %747 ]
  %759 = phi i8 [ %722, %721 ], [ %728, %753 ], [ %728, %747 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %624) #14, !noalias !37
  %760 = icmp slt i8 %759, 0
  %761 = select i1 %760, i8* %758, i8* %606
  %762 = select i1 %760, i64 %757, i64 %756
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %625) #14, !noalias !37
  call void @_ZNK3net13QueryIterator8GetValueEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.net::QueryIterator"* nonnull %10) #14
  %763 = load i8, i8* %627, align 1, !noalias !37
  %764 = icmp slt i8 %763, 0
  %765 = load i8*, i8** %628, align 8, !noalias !37
  %766 = select i1 %764, i8* %765, i8* %625
  %767 = load i64, i64* %629, align 8, !noalias !37
  %768 = zext i8 %763 to i64
  %769 = select i1 %764, i64 %767, i64 %768
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %612) #14, !noalias !43
  store i8* %761, i8** %614, align 16, !noalias !43
  store i64 %762, i64* %615, align 8, !noalias !43
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %616, align 16, !noalias !43
  store i64 1, i64* %617, align 8, !noalias !43
  store i8* %766, i8** %618, align 16, !noalias !43
  store i64 %769, i64* %619, align 8, !noalias !43
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %12, i64 3, %"class.base::BasicStringPiece"* nonnull %613) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %612) #14, !noalias !43
  %770 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %601, align 8, !noalias !37
  %771 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %602, align 8, !noalias !37
  %772 = icmp ult %"class.std::__1::basic_string"* %770, %771
  br i1 %772, label %773, label %777

773:                                              ; preds = %755
  %774 = bitcast %"class.std::__1::basic_string"* %770 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %774, i8* nonnull align 8 %624, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %624, i8 0, i64 24, i1 false) #14, !noalias !37
  %775 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %770, i64 1
  %776 = ptrtoint %"class.std::__1::basic_string"* %775 to i64
  store i64 %776, i64* %620, align 8, !noalias !37
  br label %782

777:                                              ; preds = %755
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.102"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #14
  %778 = load i8, i8* %631, align 1, !noalias !37
  %779 = icmp slt i8 %778, 0
  br i1 %779, label %780, label %782

780:                                              ; preds = %777
  %781 = load i8*, i8** %632, align 8, !noalias !37
  call void @_ZdlPv(i8* %781) #15
  br label %782

782:                                              ; preds = %780, %777, %773
  %783 = load i8, i8* %627, align 1, !noalias !37
  %784 = icmp slt i8 %783, 0
  br i1 %784, label %785, label %787

785:                                              ; preds = %782
  %786 = load i8*, i8** %628, align 8, !noalias !37
  call void @_ZdlPv(i8* %786) #15
  br label %787

787:                                              ; preds = %785, %782
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %625) #14, !noalias !37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %624) #14, !noalias !37
  br label %819

788:                                              ; preds = %753
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %611) #14, !noalias !37
  %789 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %736, i64 2
  %790 = bitcast %"struct.std::__1::__list_node_base"* %789 to <2 x i64>*
  %791 = load <2 x i64>, <2 x i64>* %790, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %612) #14, !noalias !46
  store i8* %734, i8** %614, align 16, !noalias !46
  store i64 %732, i64* %615, align 8, !noalias !46
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %616, align 16, !noalias !46
  store i64 1, i64* %617, align 8, !noalias !46
  store <2 x i64> %791, <2 x i64>* %633, align 16, !noalias !46
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %14, i64 3, %"class.base::BasicStringPiece"* nonnull %613) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %612) #14, !noalias !46
  %792 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %601, align 8, !noalias !37
  %793 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %602, align 8, !noalias !37
  %794 = icmp ult %"class.std::__1::basic_string"* %792, %793
  br i1 %794, label %795, label %799

795:                                              ; preds = %788
  %796 = bitcast %"class.std::__1::basic_string"* %792 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %796, i8* nonnull align 8 %611, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %611, i8 0, i64 24, i1 false) #14, !noalias !37
  %797 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %792, i64 1
  %798 = ptrtoint %"class.std::__1::basic_string"* %797 to i64
  store i64 %798, i64* %620, align 8, !noalias !37
  br label %804

799:                                              ; preds = %788
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.102"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #14
  %800 = load i8, i8* %622, align 1, !noalias !37
  %801 = icmp slt i8 %800, 0
  br i1 %801, label %802, label %804

802:                                              ; preds = %799
  %803 = load i8*, i8** %623, align 8, !noalias !37
  call void @_ZdlPv(i8* %803) #15
  br label %804

804:                                              ; preds = %802, %799, %795
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %611) #14, !noalias !37
  %805 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %736, i64 0, i32 1
  %806 = bitcast %"struct.std::__1::__list_node_base"** %805 to i64*
  %807 = load i64, i64* %806, align 8
  %808 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %736, i64 0, i32 0
  %809 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %808, align 8
  %810 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %809, i64 0, i32 1
  %811 = bitcast %"struct.std::__1::__list_node_base"** %810 to i64*
  store i64 %807, i64* %811, align 8
  %812 = bitcast %"struct.std::__1::__list_node_base"* %736 to i64*
  %813 = load i64, i64* %812, align 8
  %814 = bitcast %"struct.std::__1::__list_node_base"** %805 to i64**
  %815 = load i64*, i64** %814, align 8
  store i64 %813, i64* %815, align 8
  %816 = load i64, i64* %489, align 8, !noalias !37
  %817 = add i64 %816, -1
  store i64 %817, i64* %489, align 8, !noalias !37
  %818 = bitcast %"struct.std::__1::__list_node_base"* %736 to i8*
  call void @_ZdlPv(i8* %818) #15
  br label %819

819:                                              ; preds = %804, %787, %716, %714
  %820 = phi i8 [ 1, %716 ], [ %654, %787 ], [ 1, %804 ], [ 1, %714 ]
  %821 = load i8, i8* %610, align 1, !noalias !37
  %822 = icmp slt i8 %821, 0
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = load i8*, i8** %607, align 8, !noalias !37
  call void @_ZdlPv(i8* %824) #15
  br label %825

825:                                              ; preds = %823, %819
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %606) #14, !noalias !37
  call void @_ZN3net13QueryIterator7AdvanceEv(%"class.net::QueryIterator"* nonnull %10) #14
  %826 = call zeroext i1 @_ZNK3net13QueryIterator7IsAtEndEv(%"class.net::QueryIterator"* nonnull %10) #14
  br i1 %826, label %634, label %653

827:                                              ; preds = %857, %634
  %828 = load i64, i64* %489, align 8, !noalias !37
  %829 = icmp ne i64 %828, 0
  %830 = zext i1 %829 to i32
  %831 = and i8 %635, 1
  %832 = zext i8 %831 to i32
  %833 = or i32 %830, %832
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %879, label %863

835:                                              ; preds = %857, %640
  %836 = phi %"struct.std::__1::__list_node_base"* [ %638, %640 ], [ %861, %857 ]
  %837 = phi i64 [ %637, %640 ], [ %860, %857 ]
  %838 = inttoptr i64 %837 to %"struct.std::__1::__list_node"*
  %839 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %838, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %641) #14, !noalias !37
  %840 = bitcast %"struct.std::__1::pair.113"* %839 to <2 x i64>*
  %841 = load <2 x i64>, <2 x i64>* %840, align 8
  %842 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %838, i64 0, i32 1, i32 1, i32 0
  %843 = bitcast i8** %842 to <2 x i64>*
  %844 = load <2 x i64>, <2 x i64>* %843, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %642) #14, !noalias !49
  store <2 x i64> %841, <2 x i64>* %651, align 16, !noalias !49
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %644, align 16, !noalias !49
  store i64 1, i64* %645, align 8, !noalias !49
  store <2 x i64> %844, <2 x i64>* %652, align 16, !noalias !49
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %15, i64 3, %"class.base::BasicStringPiece"* nonnull %643) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %642) #14, !noalias !49
  %845 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %601, align 8, !noalias !37
  %846 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %602, align 8, !noalias !37
  %847 = icmp ult %"class.std::__1::basic_string"* %845, %846
  br i1 %847, label %848, label %852

848:                                              ; preds = %835
  %849 = bitcast %"class.std::__1::basic_string"* %845 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %849, i8* nonnull align 8 %641, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %641, i8 0, i64 24, i1 false) #14, !noalias !37
  %850 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %845, i64 1
  %851 = ptrtoint %"class.std::__1::basic_string"* %850 to i64
  store i64 %851, i64* %647, align 8, !noalias !37
  br label %857

852:                                              ; preds = %835
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.102"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #14
  %853 = load i8, i8* %649, align 1, !noalias !37
  %854 = icmp slt i8 %853, 0
  br i1 %854, label %855, label %857

855:                                              ; preds = %852
  %856 = load i8*, i8** %650, align 8, !noalias !37
  call void @_ZdlPv(i8* %856) #15
  br label %857

857:                                              ; preds = %855, %852, %848
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %641) #14, !noalias !37
  %858 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %836, i64 0, i32 1
  %859 = bitcast %"struct.std::__1::__list_node_base"** %858 to i64*
  %860 = load i64, i64* %859, align 8
  %861 = inttoptr i64 %860 to %"struct.std::__1::__list_node_base"*
  %862 = icmp eq %"struct.std::__1::__list_node_base"* %490, %861
  br i1 %862, label %827, label %835

863:                                              ; preds = %827
  %864 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %864) #14, !noalias !37
  %865 = bitcast %"class.std::__1::vector.102"* %9 to i64*
  %866 = load i64, i64* %865, align 8, !noalias !37
  %867 = bitcast %"class.std::__1::basic_string"** %601 to i64*
  %868 = load i64, i64* %867, align 8, !noalias !37
  %869 = sub i64 %868, %866
  %870 = sdiv exact i64 %869, 24
  %871 = inttoptr i64 %866 to %"class.std::__1::basic_string"*
  call void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* nonnull sret %16, i64 %870, %"class.std::__1::basic_string"* %871, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #14
  %872 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %873 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %872, i64 0, i32 1, i32 0
  %874 = load i8, i8* %873, align 1, !noalias !37
  %875 = icmp slt i8 %874, 0
  br i1 %875, label %876, label %878

876:                                              ; preds = %863
  %877 = load i8*, i8** %289, align 8, !noalias !37
  call void @_ZdlPv(i8* %877) #15
  br label %878

878:                                              ; preds = %876, %863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %288, i8* nonnull align 8 %864, i64 24, i1 false) #14, !noalias !37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %864) #14, !noalias !37
  br label %879

879:                                              ; preds = %878, %827
  %880 = phi i1 [ true, %878 ], [ false, %827 ]
  %881 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %600, align 8, !noalias !37
  %882 = icmp eq %"class.std::__1::basic_string"* %881, null
  br i1 %882, label %904, label %883

883:                                              ; preds = %879
  %884 = bitcast %"class.std::__1::basic_string"* %881 to i8*
  %885 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %601, align 8, !noalias !37
  %886 = icmp eq %"class.std::__1::basic_string"* %885, %881
  br i1 %886, label %902, label %887

887:                                              ; preds = %883, %897
  %888 = phi %"class.std::__1::basic_string"* [ %889, %897 ], [ %885, %883 ]
  %889 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %888, i64 -1
  %890 = bitcast %"class.std::__1::basic_string"* %889 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %891 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %890, i64 0, i32 1, i32 0
  %892 = load i8, i8* %891, align 1
  %893 = icmp slt i8 %892, 0
  br i1 %893, label %894, label %897

894:                                              ; preds = %887
  %895 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %889, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %896 = load i8*, i8** %895, align 8
  call void @_ZdlPv(i8* %896) #15
  br label %897

897:                                              ; preds = %894, %887
  %898 = icmp eq %"class.std::__1::basic_string"* %889, %881
  br i1 %898, label %899, label %887

899:                                              ; preds = %897
  %900 = bitcast %"class.std::__1::vector.102"* %9 to i8**
  %901 = load i8*, i8** %900, align 8, !noalias !37
  br label %902

902:                                              ; preds = %899, %883
  %903 = phi i8* [ %901, %899 ], [ %884, %883 ]
  store %"class.std::__1::basic_string"* %881, %"class.std::__1::basic_string"** %601, align 8, !noalias !37
  call void @_ZdlPv(i8* %903) #15
  br label %904

904:                                              ; preds = %902, %879
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %599) #14, !noalias !37
  %905 = load i64, i64* %489, align 8, !noalias !37
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %928, label %907

907:                                              ; preds = %904
  %908 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %488, align 8, !noalias !37
  %909 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %487, align 8, !noalias !37
  %910 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %909, i64 0, i32 1
  %911 = bitcast %"struct.std::__1::__list_node_base"** %910 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %908, i64 0, i32 0
  %914 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %913, align 8
  %915 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %914, i64 0, i32 1
  %916 = bitcast %"struct.std::__1::__list_node_base"** %915 to i64*
  store i64 %912, i64* %916, align 8
  %917 = bitcast %"struct.std::__1::__list_node_base"* %908 to i64*
  %918 = load i64, i64* %917, align 8
  %919 = bitcast %"struct.std::__1::__list_node_base"** %910 to i64**
  %920 = load i64*, i64** %919, align 8
  store i64 %918, i64* %920, align 8
  store i64 0, i64* %489, align 8, !noalias !37
  %921 = icmp eq %"struct.std::__1::__list_node_base"* %908, %490
  br i1 %921, label %928, label %922

922:                                              ; preds = %907, %922
  %923 = phi %"struct.std::__1::__list_node_base"* [ %925, %922 ], [ %908, %907 ]
  %924 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %923, i64 0, i32 1
  %925 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %924, align 8
  %926 = bitcast %"struct.std::__1::__list_node_base"* %923 to i8*
  call void @_ZdlPv(i8* %926) #15
  %927 = icmp eq %"struct.std::__1::__list_node_base"* %925, %490
  br i1 %927, label %928, label %922

928:                                              ; preds = %922, %907, %904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %486) #14, !noalias !37
  %929 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %372, align 8, !noalias !37
  %930 = icmp eq %"class.base::BasicStringPiece"* %929, null
  br i1 %930, label %935, label %931

931:                                              ; preds = %928
  %932 = ptrtoint %"class.base::BasicStringPiece"* %929 to i64
  %933 = bitcast %"class.base::BasicStringPiece"** %373 to i64*
  store i64 %932, i64* %933, align 8, !noalias !37
  %934 = bitcast %"class.base::BasicStringPiece"* %929 to i8*
  call void @_ZdlPv(i8* %934) #15
  br label %935

935:                                              ; preds = %931, %928
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #14, !noalias !37
  br i1 %880, label %936, label %950

936:                                              ; preds = %935
  %937 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %938 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %937, i64 0, i32 1, i32 0
  %939 = load i8, i8* %938, align 1, !noalias !37
  %940 = icmp slt i8 %939, 0
  %941 = load i8*, i8** %289, align 8, !noalias !37
  %942 = select i1 %940, i8* %941, i8* %288
  %943 = load i64, i64* %290, align 8, !noalias !37
  %944 = zext i8 %939 to i64
  %945 = select i1 %940, i64 %943, i64 %944
  %946 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 6
  store i8* %942, i8** %946, align 8, !noalias !37
  %947 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 6
  %948 = bitcast %"struct.url::Component"* %947 to i64*
  %949 = shl i64 %945, 32
  store i64 %949, i64* %948, align 8, !noalias !37
  br label %950

950:                                              ; preds = %936, %935, %366, %360, %353, %351, %330, %321, %306, %302, %287
  %951 = load i32, i32* %153, align 4, !noalias !37
  %952 = sext i32 %951 to i64
  %953 = sub nsw i64 0, %952
  %954 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %953
  %955 = bitcast i8* %954 to i16*
  %956 = load i16, i16* %955, align 2, !noalias !37
  %957 = icmp ugt i16 %956, 24
  br i1 %957, label %958, label %1044

958:                                              ; preds = %950
  %959 = getelementptr inbounds i8, i8* %954, i64 24
  %960 = bitcast i8* %959 to i16*
  %961 = load i16, i16* %960, align 2, !noalias !37
  %962 = icmp eq i16 %961, 0
  br i1 %962, label %972, label %963

963:                                              ; preds = %958
  %964 = zext i16 %961 to i64
  %965 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %964
  %966 = load i8, i8* %965, align 1, !noalias !37
  %967 = icmp eq i8 %966, 0
  br i1 %967, label %972, label %968

968:                                              ; preds = %963
  %969 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 7
  store i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8** %969, align 8, !noalias !37
  %970 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 7
  %971 = bitcast %"struct.url::Component"* %970 to i64*
  store i64 -4294967296, i64* %971, align 8, !noalias !37
  br label %996

972:                                              ; preds = %963, %958
  %973 = icmp ugt i16 %956, 26
  br i1 %973, label %974, label %1044

974:                                              ; preds = %972
  %975 = getelementptr inbounds i8, i8* %954, i64 26
  %976 = bitcast i8* %975 to i16*
  %977 = load i16, i16* %976, align 2, !noalias !37
  %978 = zext i16 %977 to i64
  %979 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %978
  %980 = icmp eq i16 %977, 0
  br i1 %980, label %996, label %981

981:                                              ; preds = %974
  %982 = bitcast i8* %979 to i32*
  %983 = load i32, i32* %982, align 4, !noalias !37
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds i8, i8* %979, i64 %984
  %986 = icmp eq i8* %985, null
  br i1 %986, label %996, label %987

987:                                              ; preds = %981
  %988 = getelementptr inbounds i8, i8* %985, i64 4
  %989 = bitcast i8* %985 to i32*
  %990 = load i32, i32* %989, align 4, !noalias !37
  %991 = zext i32 %990 to i64
  %992 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 7
  store i8* %988, i8** %992, align 8, !noalias !37
  %993 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 7
  %994 = bitcast %"struct.url::Component"* %993 to i64*
  %995 = shl nuw i64 %991, 32
  store i64 %995, i64* %994, align 8, !noalias !37
  br label %996

996:                                              ; preds = %987, %981, %974, %968
  %997 = icmp ugt i16 %956, 30
  br i1 %997, label %998, label %1020

998:                                              ; preds = %996
  %999 = getelementptr inbounds i8, i8* %954, i64 30
  %1000 = bitcast i8* %999 to i16*
  %1001 = load i16, i16* %1000, align 2, !noalias !37
  %1002 = zext i16 %1001 to i64
  %1003 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %1002
  %1004 = icmp eq i16 %1001, 0
  br i1 %1004, label %1022, label %1005

1005:                                             ; preds = %998
  %1006 = bitcast i8* %1003 to i32*
  %1007 = load i32, i32* %1006, align 4, !noalias !37
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds i8, i8* %1003, i64 %1008
  %1010 = icmp eq i8* %1009, null
  br i1 %1010, label %1022, label %1011

1011:                                             ; preds = %1005
  %1012 = getelementptr inbounds i8, i8* %1009, i64 4
  %1013 = bitcast i8* %1009 to i32*
  %1014 = load i32, i32* %1013, align 4, !noalias !37
  %1015 = zext i32 %1014 to i64
  %1016 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 2
  store i8* %1012, i8** %1016, align 8, !noalias !37
  %1017 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 2
  %1018 = bitcast %"struct.url::Component"* %1017 to i64*
  %1019 = shl nuw i64 %1015, 32
  store i64 %1019, i64* %1018, align 8, !noalias !37
  br label %1022

1020:                                             ; preds = %996
  %1021 = icmp ugt i16 %956, 28
  br i1 %1021, label %1022, label %1044

1022:                                             ; preds = %1020, %1011, %1005, %998
  %1023 = getelementptr inbounds i8, i8* %954, i64 28
  %1024 = bitcast i8* %1023 to i16*
  %1025 = load i16, i16* %1024, align 2, !noalias !37
  %1026 = zext i16 %1025 to i64
  %1027 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransform", %"struct.extensions::declarative_net_request::flat::UrlTransform"* %149, i64 0, i32 0, i32 0, i64 %1026
  %1028 = icmp eq i16 %1025, 0
  br i1 %1028, label %1044, label %1029

1029:                                             ; preds = %1022
  %1030 = bitcast i8* %1027 to i32*
  %1031 = load i32, i32* %1030, align 4, !noalias !37
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds i8, i8* %1027, i64 %1032
  %1034 = icmp eq i8* %1033, null
  br i1 %1034, label %1044, label %1035

1035:                                             ; preds = %1029
  %1036 = getelementptr inbounds i8, i8* %1033, i64 4
  %1037 = bitcast i8* %1033 to i32*
  %1038 = load i32, i32* %1037, align 4, !noalias !37
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 0, i32 1
  store i8* %1036, i8** %1040, align 8, !noalias !37
  %1041 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0, i32 1, i32 1
  %1042 = bitcast %"struct.url::Component"* %1041 to i64*
  %1043 = shl nuw i64 %1039, 32
  store i64 %1043, i64* %1042, align 8, !noalias !37
  br label %1044

1044:                                             ; preds = %1035, %1029, %1022, %1020, %972, %950
  %1045 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %1046 = load %class.GURL*, %class.GURL** %1045, align 8, !noalias !37
  %1047 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %17, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %21, %class.GURL* %1046, %"class.url::Replacements"* nonnull dereferenceable(144) %1047) #14
  %1048 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1049 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1048, i64 0, i32 1, i32 0
  %1050 = load i8, i8* %1049, align 1, !noalias !37
  %1051 = icmp slt i8 %1050, 0
  br i1 %1051, label %1052, label %1054

1052:                                             ; preds = %1044
  %1053 = load i8*, i8** %289, align 8, !noalias !37
  call void @_ZdlPv(i8* %1053) #15
  br label %1054

1054:                                             ; preds = %1044, %1052
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %288) #14, !noalias !37
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %151) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %150) #14, !noalias !37
  br label %1055

1055:                                             ; preds = %1054, %125
  %1056 = phi %class.GURL* [ %21, %1054 ], [ %20, %125 ]
  %1057 = phi i8* [ %148, %1054 ], [ %126, %125 ]
  %1058 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %19, %class.GURL* nonnull dereferenceable(120) %1056) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %1056) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %1057) #14
  call void @_ZN4GURLC1EOS_(%class.GURL* nonnull %22, %class.GURL* nonnull dereferenceable(120) %19) #14
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase20CreateRedirectActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE4GURL(%"class.absl::optional.34"* sret %0, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1) %3, %class.GURL* nonnull %22)
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #14
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %101) #14
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase20CreateRedirectActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE4GURL(%"class.absl::optional.34"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readonly dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* nocapture readonly dereferenceable(1), %class.GURL*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2048
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %union.anon.38* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 240, i1 false) #14
  br label %75

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %20 = load %class.GURL*, %class.GURL** %19, align 8
  %21 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %20, %class.GURL* dereferenceable(120) %4) #14
  br i1 %21, label %22, label %26

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %union.anon.38* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 240, i1 false) #14
  br label %75

26:                                               ; preds = %18
  %27 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 240, i1 false)
  %28 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %3 to i32*
  %29 = load i32, i32* %28, align 4, !noalias !52
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %31
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2, !noalias !52
  %35 = icmp ugt i16 %34, 24
  br i1 %35, label %36, label %59

36:                                               ; preds = %26
  %37 = getelementptr inbounds i8, i8* %32, i64 24
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2, !noalias !52
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = zext i16 %39 to i64
  %43 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %42
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4, !noalias !52
  br label %46

46:                                               ; preds = %41, %36
  %47 = phi i32 [ %45, %41 ], [ 0, %36 ]
  %48 = icmp ugt i16 %34, 26
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %32, i64 26
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2, !noalias !52
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = zext i16 %52 to i64
  %56 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %3, i64 0, i32 0, i32 0, i64 %55
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !52
  br label %59

59:                                               ; preds = %26, %46, %49, %54
  %60 = phi i32 [ %47, %54 ], [ %47, %49 ], [ %47, %46 ], [ 0, %26 ]
  %61 = phi i64 [ %58, %54 ], [ 0, %49 ], [ 0, %46 ], [ 0, %26 ]
  %62 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %63 = load i32, i32* %62, align 8, !noalias !52
  %64 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6, i32 3, i32 %60, i64 %61, i32 %63, %"class.std::__1::basic_string"* dereferenceable(24) %64) #14
  %65 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !5
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %67, label %71, label %69

69:                                               ; preds = %59
  %70 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %68, %class.GURL* dereferenceable(120) %4) #14
  br label %72

71:                                               ; preds = %59
  call void @_ZN4GURLC1EOS_(%class.GURL* %68, %class.GURL* dereferenceable(120) %4) #14
  store i8 1, i8* %65, align 8
  br label %72

72:                                               ; preds = %69, %71
  %73 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %73, align 8
  %74 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %74, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %6) #14
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %27) #14
  br label %75

75:                                               ; preds = %72, %22, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.std::__1::vector.77"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* nocapture readnone dereferenceable(200), %"class.std::__1::vector.70"* nocapture readonly dereferenceable(24), %"class.flatbuffers::Vector"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %7 = alloca %"class.std::__1::vector.44", align 16
  %8 = alloca %"class.std::__1::vector.44", align 16
  %9 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.77"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  %12 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %3, i64 0, i32 0, i32 0
  %13 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %3, i64 0, i32 0, i32 1
  %15 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %14, align 8
  %16 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %13, %15
  br i1 %16, label %52, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %4, i64 1, i32 0
  %19 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %4, i64 0, i32 0
  %20 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %6 to i8*
  %21 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.extensions::declarative_net_request::RulesetMatcherBase"* %1, i64 0, i32 1
  %23 = bitcast %"class.std::__1::vector.44"* %7 to i8*
  %24 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %24 to i64*
  %27 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 9
  %28 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %27, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 9, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.44"* %27 to i8**
  %31 = bitcast %"class.std::__1::vector.44"* %27 to i8*
  %32 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %25 to i64*
  %33 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %33 to i64*
  %35 = bitcast %"class.std::__1::vector.44"* %8 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %8, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %36 to i64*
  %39 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 10
  %40 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %39, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 10, i32 0, i32 1
  %42 = bitcast %"class.std::__1::vector.44"* %39 to i8**
  %43 = bitcast %"class.std::__1::vector.44"* %39 to i8*
  %44 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %37 to i64*
  %45 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %6, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %45 to i64*
  %47 = bitcast %"struct.extensions::declarative_net_request::RequestAction"** %9 to i64*
  %48 = bitcast %"class.std::__1::vector.44"* %7 to <2 x i64>*
  %49 = bitcast %"class.std::__1::vector.44"* %27 to <2 x i64>*
  %50 = bitcast %"class.std::__1::vector.44"* %8 to <2 x i64>*
  %51 = bitcast %"class.std::__1::vector.44"* %39 to <2 x i64>*
  br label %53

52:                                               ; preds = %312, %5
  ret void

53:                                               ; preds = %17, %312
  %54 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %13, %17 ], [ %313, %312 ]
  %55 = load %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %54, align 8
  %56 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %55, i64 0, i32 0, i32 0, i64 %59
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 2
  %63 = icmp ugt i16 %62, 24
  br i1 %63, label %64, label %74

64:                                               ; preds = %53
  %65 = getelementptr inbounds i8, i8* %60, i64 24
  %66 = bitcast i8* %65 to i16*
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = zext i16 %67 to i64
  %71 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %55, i64 0, i32 0, i32 0, i64 %70
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %53, %64, %69
  %75 = phi i32 [ %73, %69 ], [ 0, %64 ], [ 0, %53 ]
  %76 = load i32, i32* %19, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %130, label %78

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  br label %80

80:                                               ; preds = %122, %78
  %81 = phi i64 [ %124, %122 ], [ %79, %78 ]
  %82 = phi i64 [ %123, %122 ], [ 0, %78 ]
  %83 = add i64 %82, %81
  %84 = lshr i64 %83, 1
  %85 = getelementptr i32, i32* %18, i64 %84
  %86 = bitcast i32* %85 to i8*
  %87 = load i32, i32* %85, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = bitcast i8* %89 to %"class.flatbuffers::Table"*
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %90, i64 0, i32 0, i64 %94
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 2
  %98 = icmp ugt i16 %97, 4
  br i1 %98, label %99, label %111

99:                                               ; preds = %80
  %100 = getelementptr inbounds i8, i8* %95, i64 4
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = zext i16 %102 to i64
  %106 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %90, i64 0, i32 0, i64 %105
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp ugt i32 %108, %75
  %110 = zext i1 %109 to i32
  br label %111

111:                                              ; preds = %104, %99, %80
  %112 = phi i32 [ %110, %104 ], [ 0, %80 ], [ 0, %99 ]
  %113 = phi i32 [ %108, %104 ], [ 0, %80 ], [ 0, %99 ]
  %114 = icmp ult i32 %113, %75
  %115 = zext i1 %114 to i32
  %116 = sub nsw i32 %115, %112
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %111
  %119 = icmp eq i32 %116, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %118
  %121 = add nuw i64 %84, 1
  br label %122

122:                                              ; preds = %120, %111
  %123 = phi i64 [ %121, %120 ], [ %82, %111 ]
  %124 = phi i64 [ %81, %120 ], [ %84, %111 ]
  %125 = icmp ult i64 %123, %124
  br i1 %125, label %80, label %130

126:                                              ; preds = %118
  %127 = icmp eq i32* %85, null
  %128 = bitcast i8* %89 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %129 = select i1 %127, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* null, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %128
  br label %130

130:                                              ; preds = %122, %126, %74
  %131 = phi %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* [ null, %74 ], [ %129, %126 ], [ null, %122 ]
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 240, i1 false)
  %132 = load i32, i32* %56, align 4, !noalias !55
  %133 = sext i32 %132 to i64
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %55, i64 0, i32 0, i32 0, i64 %134
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2, !noalias !55
  %138 = icmp ugt i16 %137, 24
  br i1 %138, label %139, label %162

139:                                              ; preds = %130
  %140 = getelementptr inbounds i8, i8* %135, i64 24
  %141 = bitcast i8* %140 to i16*
  %142 = load i16, i16* %141, align 2, !noalias !55
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %139
  %145 = zext i16 %142 to i64
  %146 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %55, i64 0, i32 0, i32 0, i64 %145
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 4, !noalias !55
  br label %149

149:                                              ; preds = %144, %139
  %150 = phi i32 [ %148, %144 ], [ 0, %139 ]
  %151 = icmp ugt i16 %137, 26
  br i1 %151, label %152, label %162

152:                                              ; preds = %149
  %153 = getelementptr inbounds i8, i8* %135, i64 26
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 2, !noalias !55
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %152
  %158 = zext i16 %155 to i64
  %159 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %55, i64 0, i32 0, i32 0, i64 %158
  %160 = bitcast i8* %159 to i64*
  %161 = load i64, i64* %160, align 8, !noalias !55
  br label %162

162:                                              ; preds = %130, %149, %152, %157
  %163 = phi i32 [ %150, %157 ], [ %150, %152 ], [ %150, %149 ], [ 0, %130 ]
  %164 = phi i64 [ %161, %157 ], [ 0, %152 ], [ 0, %149 ], [ 0, %130 ]
  %165 = load i32, i32* %21, align 8, !noalias !55
  call void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6, i32 6, i32 %163, i64 %164, i32 %165, %"class.std::__1::basic_string"* dereferenceable(24) %22) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %166 = bitcast %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %131 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %131, i64 0, i32 0, i32 0, i64 %169
  %171 = bitcast i8* %170 to i16*
  %172 = load i16, i16* %171, align 2
  %173 = icmp ugt i16 %172, 12
  br i1 %173, label %174, label %187

174:                                              ; preds = %162
  %175 = getelementptr inbounds i8, i8* %170, i64 12
  %176 = bitcast i8* %175 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i64
  %179 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %131, i64 0, i32 0, i32 0, i64 %178
  %180 = icmp eq i16 %177, 0
  br i1 %180, label %187, label %181

181:                                              ; preds = %174
  %182 = bitcast i8* %179 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %179, i64 %184
  %186 = bitcast i8* %185 to %"class.flatbuffers::Vector.84"*
  br label %187

187:                                              ; preds = %162, %174, %181
  %188 = phi %"class.flatbuffers::Vector.84"* [ %186, %181 ], [ null, %174 ], [ null, %162 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 24, i1 false) #14, !alias.scope !58
  %189 = getelementptr inbounds %"class.flatbuffers::Vector.84", %"class.flatbuffers::Vector.84"* %188, i64 1, i32 0
  %190 = getelementptr inbounds %"class.flatbuffers::Vector.84", %"class.flatbuffers::Vector.84"* %188, i64 0, i32 0
  %191 = load i32, i32* %190, align 4, !noalias !61
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i32, i32* %189, i64 %192
  %194 = bitcast i32* %193 to i8*
  %195 = icmp eq i32 %191, 0
  br i1 %195, label %218, label %196

196:                                              ; preds = %187
  %197 = bitcast i32* %189 to i8*
  br label %198

198:                                              ; preds = %215, %196
  %199 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ null, %196 ], [ %217, %215 ]
  %200 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ null, %196 ], [ %216, %215 ]
  %201 = phi i8* [ %197, %196 ], [ %213, %215 ]
  %202 = bitcast i8* %201 to i32*
  %203 = load i32, i32* %202, align 4, !noalias !58
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %201, i64 %204
  %206 = bitcast i8* %205 to %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"*
  %207 = icmp ult %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %200, %199
  br i1 %207, label %208, label %211

208:                                              ; preds = %198
  call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1ERKNS0_4flat16ModifyHeaderInfoE(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %200, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1) %206) #14
  %209 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %200, i64 1
  %210 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %209 to i64
  store i64 %210, i64* %26, align 8, !alias.scope !58
  br label %212

211:                                              ; preds = %198
  call void @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestAction10HeaderInfoENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRKNS2_4flat16ModifyHeaderInfoEEEEvDpOT_(%"class.std::__1::vector.44"* nonnull %7, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1) %206) #14
  br label %212

212:                                              ; preds = %211, %208
  %213 = getelementptr inbounds i8, i8* %201, i64 4
  %214 = icmp eq i8* %213, %194
  br i1 %214, label %218, label %215

215:                                              ; preds = %212
  %216 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %24, align 8, !alias.scope !58
  %217 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %25, align 16, !alias.scope !58
  br label %198

218:                                              ; preds = %212, %187
  %219 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %28, align 8
  %220 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %219, null
  br i1 %220, label %233, label %221

221:                                              ; preds = %218
  %222 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %219 to i8*
  %223 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %29, align 8
  %224 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %223, %219
  br i1 %224, label %231, label %225

225:                                              ; preds = %221, %225
  %226 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %227, %225 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %226, i64 -1
  call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoD1Ev(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %227) #14
  %228 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %227, %219
  br i1 %228, label %229, label %225

229:                                              ; preds = %225
  %230 = load i8*, i8** %30, align 8
  br label %231

231:                                              ; preds = %229, %221
  %232 = phi i8* [ %230, %229 ], [ %222, %221 ]
  store %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %219, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %29, align 8
  call void @_ZdlPv(i8* %232) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14
  br label %233

233:                                              ; preds = %218, %231
  %234 = load <2 x i64>, <2 x i64>* %48, align 16
  store <2 x i64> %234, <2 x i64>* %49, align 8
  %235 = load i64, i64* %32, align 16
  store i64 %235, i64* %34, align 8
  %236 = load i32, i32* %166, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #14
  %237 = sext i32 %236 to i64
  %238 = sub nsw i64 0, %237
  %239 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %131, i64 0, i32 0, i32 0, i64 %238
  %240 = bitcast i8* %239 to i16*
  %241 = load i16, i16* %240, align 2
  %242 = icmp ugt i16 %241, 14
  br i1 %242, label %243, label %256

243:                                              ; preds = %233
  %244 = getelementptr inbounds i8, i8* %239, i64 14
  %245 = bitcast i8* %244 to i16*
  %246 = load i16, i16* %245, align 2
  %247 = zext i16 %246 to i64
  %248 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %131, i64 0, i32 0, i32 0, i64 %247
  %249 = icmp eq i16 %246, 0
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = bitcast i8* %248 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %248, i64 %253
  %255 = bitcast i8* %254 to %"class.flatbuffers::Vector.84"*
  br label %256

256:                                              ; preds = %233, %243, %250
  %257 = phi %"class.flatbuffers::Vector.84"* [ %255, %250 ], [ null, %243 ], [ null, %233 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 0, i64 24, i1 false) #14, !alias.scope !64
  %258 = getelementptr inbounds %"class.flatbuffers::Vector.84", %"class.flatbuffers::Vector.84"* %257, i64 1, i32 0
  %259 = getelementptr inbounds %"class.flatbuffers::Vector.84", %"class.flatbuffers::Vector.84"* %257, i64 0, i32 0
  %260 = load i32, i32* %259, align 4, !noalias !67
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %258, i64 %261
  %263 = bitcast i32* %262 to i8*
  %264 = icmp eq i32 %260, 0
  br i1 %264, label %287, label %265

265:                                              ; preds = %256
  %266 = bitcast i32* %258 to i8*
  br label %267

267:                                              ; preds = %284, %265
  %268 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ null, %265 ], [ %286, %284 ]
  %269 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ null, %265 ], [ %285, %284 ]
  %270 = phi i8* [ %266, %265 ], [ %282, %284 ]
  %271 = bitcast i8* %270 to i32*
  %272 = load i32, i32* %271, align 4, !noalias !64
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* %270, i64 %273
  %275 = bitcast i8* %274 to %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"*
  %276 = icmp ult %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %269, %268
  br i1 %276, label %277, label %280

277:                                              ; preds = %267
  call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1ERKNS0_4flat16ModifyHeaderInfoE(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %269, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1) %275) #14
  %278 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %269, i64 1
  %279 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %278 to i64
  store i64 %279, i64* %38, align 8, !alias.scope !64
  br label %281

280:                                              ; preds = %267
  call void @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestAction10HeaderInfoENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRKNS2_4flat16ModifyHeaderInfoEEEEvDpOT_(%"class.std::__1::vector.44"* nonnull %8, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1) %275) #14
  br label %281

281:                                              ; preds = %280, %277
  %282 = getelementptr inbounds i8, i8* %270, i64 4
  %283 = icmp eq i8* %282, %263
  br i1 %283, label %287, label %284

284:                                              ; preds = %281
  %285 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %36, align 8, !alias.scope !64
  %286 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %37, align 16, !alias.scope !64
  br label %267

287:                                              ; preds = %281, %256
  %288 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %40, align 8
  %289 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %288, null
  br i1 %289, label %302, label %290

290:                                              ; preds = %287
  %291 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %288 to i8*
  %292 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %41, align 8
  %293 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %292, %288
  br i1 %293, label %300, label %294

294:                                              ; preds = %290, %294
  %295 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %296, %294 ], [ %292, %290 ]
  %296 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %295, i64 -1
  call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoD1Ev(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %296) #14
  %297 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %296, %288
  br i1 %297, label %298, label %294

298:                                              ; preds = %294
  %299 = load i8*, i8** %42, align 8
  br label %300

300:                                              ; preds = %298, %290
  %301 = phi i8* [ %299, %298 ], [ %291, %290 ]
  store %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %288, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %41, align 8
  call void @_ZdlPv(i8* %301) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  br label %302

302:                                              ; preds = %287, %300
  %303 = load <2 x i64>, <2 x i64>* %50, align 16
  store <2 x i64> %303, <2 x i64>* %51, align 8
  %304 = load i64, i64* %44, align 16
  store i64 %304, i64* %46, align 8
  %305 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %9, align 8
  %306 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #14
  %307 = icmp ult %"struct.extensions::declarative_net_request::RequestAction"* %305, %306
  br i1 %307, label %308, label %311

308:                                              ; preds = %302
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %305, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %6) #14
  %309 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %305, i64 1
  %310 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %309 to i64
  store i64 %310, i64* %47, align 8
  br label %312

311:                                              ; preds = %302
  call void @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.77"* %0, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %6) #14
  br label %312

312:                                              ; preds = %308, %311
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %20) #14
  %313 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %54, i64 1
  %314 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %313, %15
  br i1 %314, label %52, label %53
}

declare void @_ZN10extensions23declarative_net_request13RequestActionC1ENS1_4TypeEjmN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"struct.extensions::declarative_net_request::RequestAction"*, i32, i32, i64, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare void @_ZNK10extensions23declarative_net_request13RequestAction5CloneEv(%"struct.extensions::declarative_net_request::RequestAction"* sret, %"struct.extensions::declarative_net_request::RequestAction"*) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240)) unnamed_addr #4

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #4

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #5

declare void @_ZN3net13QueryIteratorC1ERK4GURL(%"class.net::QueryIterator"*, %class.GURL* dereferenceable(120)) unnamed_addr #4

declare zeroext i1 @_ZNK3net13QueryIterator7IsAtEndEv(%"class.net::QueryIterator"*) local_unnamed_addr #4

declare void @_ZNK3net13QueryIterator6GetKeyEv(%"class.std::__1::basic_string"* sret, %"class.net::QueryIterator"*) local_unnamed_addr #4

declare void @_ZNK3net13QueryIterator8GetValueEv(%"class.std::__1::basic_string"* sret, %"class.net::QueryIterator"*) local_unnamed_addr #4

declare void @_ZN3net13QueryIterator7AdvanceEv(%"class.net::QueryIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net13QueryIteratorD1Ev(%"class.net::QueryIterator"*) unnamed_addr #5

declare void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* sret, i64, %"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.102"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.102"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.102"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #14
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.102", %"class.std::__1::vector.102"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #14
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestAction10HeaderInfoENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJRKNS2_4flat16ModifyHeaderInfoEEEEvDpOT_(%"class.std::__1::vector.44"*, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %36, i64 %35
  %39 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %38 to i64
  tail call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1ERKNS0_4flat16ModifyHeaderInfoE(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %37, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1) %1) #14
  %40 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %37, i64 1
  %41 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %42, align 8
  %44 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %3, align 8
  %45 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %50, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1EOS2_(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %51, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* dereferenceable(64) %52) #14
  %53 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*
  %63 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo", %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %65, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoD1Ev(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %66) #14
  %67 = icmp eq %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1ERKNS0_4flat16ModifyHeaderInfoE(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::flat::ModifyHeaderInfo"* dereferenceable(1)) unnamed_addr #4

declare void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoC1EOS2_(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* dereferenceable(64)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request13RequestAction10HeaderInfoD1Ev(%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*) unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %10) #14
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S6_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.content::GlobalFrameRoutingId"* dereferenceable(8), %"struct.std::__1::pair.67"* dereferenceable(248)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %1, i64 0, i32 1
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %11, align 4
  br label %14

14:                                               ; preds = %42, %8
  %15 = phi %"class.std::__1::__tree_node"* [ %45, %42 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %19 = load i32, i32* %17, align 4
  %20 = icmp slt i32 %12, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = icmp slt i32 %19, %12
  br i1 %22, label %34, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %18, align 4
  %25 = icmp slt i32 %13, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %23, %14
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %23
  %33 = icmp slt i32 %24, %13
  br i1 %33, label %34, label %40

34:                                               ; preds = %32, %21
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node"*
  br label %14

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %48

48:                                               ; preds = %30, %38, %40, %46
  %49 = phi %"class.std::__1::__tree_end_node"* [ %4, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %16, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %84

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 280) #15, !noalias !70
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast %"struct.std::__1::pair.67"* %2 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 4, !noalias !70
  store i64 %59, i64* %58, align 8, !noalias !70
  %60 = getelementptr inbounds i8, i8* %55, i64 40
  %61 = bitcast i8* %60 to %"struct.extensions::declarative_net_request::RequestAction"*
  %62 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %2, i64 0, i32 1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %61, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %62) #14, !noalias !70
  %63 = bitcast i8* %55 to %"class.std::__1::__tree_node"*
  %64 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %55, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %54
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %77

77:                                               ; preds = %73, %54
  %78 = phi %"class.std::__1::__tree_node_base"* [ %64, %54 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #14
  %81 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %77, %48
  %85 = phi i8 [ 1, %77 ], [ 0, %48 ]
  %86 = phi %"class.std::__1::__tree_node"* [ %63, %77 ], [ %52, %48 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %86, i64 0, i32 0, i32 0
  %88 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %87, 0
  %89 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %88, i8 %85, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE14__erase_uniqueIS3_EEmRKT_(%"class.std::__1::__tree"*, %"struct.content::GlobalFrameRoutingId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %96, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.content::GlobalFrameRoutingId", %"struct.content::GlobalFrameRoutingId"* %1, i64 0, i32 1
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  br label %13

13:                                               ; preds = %33, %8
  %14 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %35, %33 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %5, %8 ], [ %36, %33 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = load i32, i32* %16, align 4
  %19 = icmp slt i32 %18, %11
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node"**
  br label %33

23:                                               ; preds = %13
  %24 = icmp slt i32 %11, %18
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %17, align 4
  %27 = icmp slt i32 %26, %12
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::__tree_node_base"** %28 to %"class.std::__1::__tree_node"**
  br i1 %27, label %33, label %30

30:                                               ; preds = %25, %23
  %31 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %30, %25, %20
  %34 = phi %"class.std::__1::__tree_node"** [ %31, %30 ], [ %22, %20 ], [ %29, %25 ]
  %35 = phi %"class.std::__1::__tree_end_node"* [ %32, %30 ], [ %14, %20 ], [ %14, %25 ]
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %34, align 8
  %37 = icmp eq %"class.std::__1::__tree_node"* %36, null
  br i1 %37, label %38, label %13

38:                                               ; preds = %33
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %35, %3
  br i1 %39, label %96, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 4
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"struct.std::__1::__value_type"*
  %43 = bitcast %"class.std::__1::__tree_end_node"* %41 to i32*
  %44 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %42, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp slt i32 %11, %45
  br i1 %46, label %96, label %47

47:                                               ; preds = %40
  %48 = icmp slt i32 %45, %11
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp slt i32 %12, %50
  br i1 %51, label %96, label %52

52:                                               ; preds = %47, %49
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 1, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 2
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_end_node"**
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %57
  br i1 %63, label %80, label %71

64:                                               ; preds = %52, %64
  %65 = phi %"class.std::__1::__tree_node_base"* [ %67, %64 ], [ %54, %52 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %64

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0
  br label %80

71:                                               ; preds = %56, %71
  %72 = phi %"class.std::__1::__tree_end_node"** [ %75, %71 ], [ %59, %56 ]
  %73 = bitcast %"class.std::__1::__tree_end_node"** %72 to %"class.std::__1::__tree_node_base"**
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 2
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %74
  br i1 %79, label %80, label %71

80:                                               ; preds = %71, %69, %56
  %81 = phi %"class.std::__1::__tree_end_node"* [ %70, %69 ], [ %60, %56 ], [ %76, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_end_node"* %83, %35
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = ptrtoint %"class.std::__1::__tree_end_node"* %81 to i64
  %87 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %86, i64* %87, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %92) #14
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 5
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"struct.extensions::declarative_net_request::RequestAction"*
  tail call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %94) #14
  %95 = bitcast %"class.std::__1::__tree_end_node"* %35 to i8*
  tail call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %49, %40, %38, %2, %88
  %97 = phi i64 [ 1, %88 ], [ 0, %2 ], [ 0, %38 ], [ 0, %40 ], [ 0, %49 ]
  ret i64 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !5
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !5
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !5
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !5
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !5
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !5
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !5
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.77"*, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::declarative_net_request::RequestAction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 240
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 76861433640456465
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::declarative_net_request::RequestAction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 240
  %20 = icmp ult i64 %19, 38430716820228232
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 76861433640456465, %14 ]
  %28 = mul i64 %27, 240
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.extensions::declarative_net_request::RequestAction"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %33, i64 %32
  %36 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %35 to i64
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %34, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %1) #14
  %37 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %34, i64 1
  %38 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %39, align 8
  %41 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %3, align 8
  %42 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %47, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %48, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %49) #14
  %50 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.extensions::declarative_net_request::RequestAction"*
  %60 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %62, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %63) #14
  %64 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE: argument 0"}
!4 = distinct !{!4, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE: argument 0"}
!8 = distinct !{!8, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__19make_pairIRN7content20GlobalFrameRoutingIdEN10extensions23declarative_net_request13RequestActionEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__19make_pairIRN7content20GlobalFrameRoutingIdEN10extensions23declarative_net_request13RequestActionEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE: argument 0"}
!15 = distinct !{!15, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__19make_pairIRN7content20GlobalFrameRoutingIdEN10extensions23declarative_net_request13RequestActionEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__19make_pairIRN7content20GlobalFrameRoutingIdEN10extensions23declarative_net_request13RequestActionEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE: argument 0"}
!21 = distinct !{!21, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase25GetAllowlistedFrameActionEN7content20GlobalFrameRoutingIdE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!24 = distinct !{!24, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!27 = distinct !{!27, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!30 = distinct !{!30, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!33 = distinct !{!33, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_114GetUpgradedUrlERK4GURL: argument 0"}
!36 = distinct !{!36, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_114GetUpgradedUrlERK4GURL"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_117GetTransformedURLERKNS0_13RequestParamsERKNS0_4flat12UrlTransformE: argument 0"}
!39 = distinct !{!39, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_117GetTransformedURLERKNS0_13RequestParamsERKNS0_4flat12UrlTransformE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__14listINS_4pairIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__14listINS_4pairIN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_EENS_9allocatorIS7_EEE15__allocate_nodeERNS8_INS_11__list_nodeIS7_PvEEEE"}
!43 = !{!44, !38}
!44 = distinct !{!44, !45, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_: argument 0"}
!45 = distinct !{!45, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_"}
!46 = !{!47, !38}
!47 = distinct !{!47, !48, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_: argument 0"}
!48 = distinct !{!48, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_"}
!49 = !{!50, !38}
!50 = distinct !{!50, !51, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_: argument 0"}
!51 = distinct !{!51, !"_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetModifiedQueryERK4GURLRKNS0_4flat12UrlTransformEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEENK3$_3clEN4base16BasicStringPieceIcSC_EESK_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!54 = distinct !{!54, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE: argument 0"}
!57 = distinct !{!57, !"_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateRequestActionENS0_13RequestAction4TypeERKN17url_pattern_index4flat7UrlRuleE"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEEENK3$_0clERKNSI_INSJ_INSK_16ModifyHeaderInfoEEEEE: argument 0"}
!60 = distinct !{!60, !"_ZZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEEENK3$_0clERKNSI_INSJ_INSK_16ModifyHeaderInfoEEEEE"}
!61 = !{!62, !59}
!62 = distinct !{!62, !63, !"_ZNK11flatbuffers6VectorINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEE3endEv: argument 0"}
!63 = distinct !{!63, !"_ZNK11flatbuffers6VectorINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEE3endEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEEENK3$_0clERKNSI_INSJ_INSK_16ModifyHeaderInfoEEEEE: argument 0"}
!66 = distinct !{!66, !"_ZZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEEENK3$_0clERKNSI_INSJ_INSK_16ModifyHeaderInfoEEEEE"}
!67 = !{!68, !65}
!68 = distinct !{!68, !69, !"_ZNK11flatbuffers6VectorINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEE3endEv: argument 0"}
!69 = distinct !{!69, !"_ZNK11flatbuffers6VectorINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEE3endEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIS3_S6_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISM_EEEEEEDpOT_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__16__treeINS_12__value_typeIN7content20GlobalFrameRoutingIdEKN10extensions23declarative_net_request13RequestActionEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIS3_S6_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISM_EEEEEEDpOT_"}
