; ModuleID = 'gen/extensions/common/api/content_scripts.cc'
source_filename = "gen/extensions/common/api/content_scripts.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::api::content_scripts::ContentScript" = type <{ %"class.std::__1::vector", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::vector"* }
%"struct.extensions::api::content_scripts::ManifestKeys" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.extensions::api::content_scripts::ContentScript"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.48 }
%struct.anon.48 = type { %"struct.std::__1::__padding.49", i8 }
%"struct.std::__1::__padding.49" = type { [1 x i8] }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::Value"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.72" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE = comdat any

$_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE = comdat any

$_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api15content_scripts5RunAtEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api15content_scripts13ContentScriptEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE = comdat any

$_ZNSt3__16vectorIN10extensions3api15content_scripts13ContentScriptENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@.str = private unnamed_addr constant [14 x i8] c"document_idle\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"document_start\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"document_end\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN10extensions3api15content_scripts13ContentScript8kMatchesE = hidden constant [8 x i8] c"matches\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript15kExcludeMatchesE = hidden constant [16 x i8] c"exclude_matches\00", align 16
@_ZN10extensions3api15content_scripts13ContentScript4kCssE = hidden constant [4 x i8] c"css\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript3kJsE = hidden constant [3 x i8] c"js\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript10kAllFramesE = hidden constant [11 x i8] c"all_frames\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript22kMatchOriginAsFallbackE = hidden constant [25 x i8] c"match_origin_as_fallback\00", align 16
@_ZN10extensions3api15content_scripts13ContentScript16kMatchAboutBlankE = hidden constant [18 x i8] c"match_about_blank\00", align 16
@_ZN10extensions3api15content_scripts13ContentScript13kIncludeGlobsE = hidden constant [14 x i8] c"include_globs\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript13kExcludeGlobsE = hidden constant [14 x i8] c"exclude_globs\00", align 1
@_ZN10extensions3api15content_scripts13ContentScript6kRunAtE = hidden constant [7 x i8] c"run_at\00", align 1
@.str.4 = private unnamed_addr constant [26 x i16] [i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 100, i16 105, i16 99, i16 116, i16 105, i16 111, i16 110, i16 97, i16 114, i16 121, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.6 = private unnamed_addr constant [22 x i16] [i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 32, i16 105, i16 115, i16 32, i16 114, i16 101, i16 113, i16 117, i16 105, i16 114, i16 101, i16 100, i16 0], align 2
@.str.7 = private unnamed_addr constant [31 x i16] [i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.8 = private unnamed_addr constant [25 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.10 = private unnamed_addr constant [39 x i16] [i16 39, i16 101, i16 120, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.11 = private unnamed_addr constant [33 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 101, i16 120, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.13 = private unnamed_addr constant [27 x i16] [i16 39, i16 99, i16 115, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.14 = private unnamed_addr constant [21 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 99, i16 115, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.16 = private unnamed_addr constant [26 x i16] [i16 39, i16 106, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.17 = private unnamed_addr constant [20 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 106, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.19 = private unnamed_addr constant [40 x i16] [i16 39, i16 97, i16 108, i16 108, i16 95, i16 102, i16 114, i16 97, i16 109, i16 101, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 97, i16 108, i16 108, i16 95, i16 102, i16 114, i16 97, i16 109, i16 101, i16 115, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.21 = private unnamed_addr constant [68 x i16] [i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 95, i16 111, i16 114, i16 105, i16 103, i16 105, i16 110, i16 95, i16 97, i16 115, i16 95, i16 102, i16 97, i16 108, i16 108, i16 98, i16 97, i16 99, i16 107, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 109, i16 97, i16 116, i16 99, i16 104, i16 95, i16 111, i16 114, i16 105, i16 103, i16 105, i16 110, i16 95, i16 97, i16 115, i16 95, i16 102, i16 97, i16 108, i16 108, i16 98, i16 97, i16 99, i16 107, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.23 = private unnamed_addr constant [54 x i16] [i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 95, i16 97, i16 98, i16 111, i16 117, i16 116, i16 95, i16 98, i16 108, i16 97, i16 110, i16 107, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 109, i16 97, i16 116, i16 99, i16 104, i16 95, i16 97, i16 98, i16 111, i16 117, i16 116, i16 95, i16 98, i16 108, i16 97, i16 110, i16 107, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.25 = private unnamed_addr constant [37 x i16] [i16 39, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 103, i16 108, i16 111, i16 98, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.26 = private unnamed_addr constant [31 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 103, i16 108, i16 111, i16 98, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.28 = private unnamed_addr constant [37 x i16] [i16 39, i16 101, i16 120, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 103, i16 108, i16 111, i16 98, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.29 = private unnamed_addr constant [31 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 101, i16 120, i16 99, i16 108, i16 117, i16 100, i16 101, i16 95, i16 103, i16 108, i16 111, i16 98, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.31 = private unnamed_addr constant [31 x i16] [i16 39, i16 82, i16 117, i16 110, i16 65, i16 116, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 115, i16 116, i16 114, i16 105, i16 110, i16 103, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.32 = private unnamed_addr constant [79 x i16] [i16 39, i16 82, i16 117, i16 110, i16 65, i16 116, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 34, i16 100, i16 111, i16 99, i16 117, i16 109, i16 101, i16 110, i16 116, i16 95, i16 105, i16 100, i16 108, i16 101, i16 34, i16 32, i16 111, i16 114, i16 32, i16 34, i16 100, i16 111, i16 99, i16 117, i16 109, i16 101, i16 110, i16 116, i16 95, i16 115, i16 116, i16 97, i16 114, i16 116, i16 34, i16 32, i16 111, i16 114, i16 32, i16 34, i16 100, i16 111, i16 99, i16 117, i16 109, i16 101, i16 110, i16 116, i16 95, i16 101, i16 110, i16 100, i16 34, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 34, i16 0], align 2
@.str.33 = private unnamed_addr constant [2 x i16] [i16 34, i16 0], align 2
@_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE = hidden constant [16 x i8] c"content_scripts\00", align 16
@.str.34 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"Parsing array failed at index %zu: %s\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.39 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.42 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@switch.table._ZN10extensions3api15content_scripts8ToStringENS1_5RunAtE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)], align 8

@_ZN10extensions3api15content_scripts13ContentScriptC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ContentScript"*), void (%"struct.extensions::api::content_scripts::ContentScript"*)* @_ZN10extensions3api15content_scripts13ContentScriptC2Ev
@_ZN10extensions3api15content_scripts13ContentScriptD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ContentScript"*), void (%"struct.extensions::api::content_scripts::ContentScript"*)* @_ZN10extensions3api15content_scripts13ContentScriptD2Ev
@_ZN10extensions3api15content_scripts13ContentScriptC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"*), void (%"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"*)* @_ZN10extensions3api15content_scripts13ContentScriptC2EOS2_
@_ZN10extensions3api15content_scripts12ManifestKeysC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ManifestKeys"*), void (%"struct.extensions::api::content_scripts::ManifestKeys"*)* @_ZN10extensions3api15content_scripts12ManifestKeysC2Ev
@_ZN10extensions3api15content_scripts12ManifestKeysD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ManifestKeys"*), void (%"struct.extensions::api::content_scripts::ManifestKeys"*)* @_ZN10extensions3api15content_scripts12ManifestKeysD2Ev
@_ZN10extensions3api15content_scripts12ManifestKeysC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::content_scripts::ManifestKeys"*, %"struct.extensions::api::content_scripts::ManifestKeys"*), void (%"struct.extensions::api::content_scripts::ManifestKeys"*, %"struct.extensions::api::content_scripts::ManifestKeys"*)* @_ZN10extensions3api15content_scripts12ManifestKeysC2EOS2_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10extensions3api15content_scripts8ToStringENS1_5RunAtE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN10extensions3api15content_scripts8ToStringENS1_5RunAtE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions3api15content_scripts10ParseRunAtERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 13
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 14
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #13
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %3, align 1
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %29 to i64
  br label %32

32:                                               ; preds = %28, %18
  %33 = phi i64 [ %31, %28 ], [ %19, %18 ]
  %34 = phi i64 [ %30, %28 ], [ %20, %18 ]
  %35 = phi i8 [ %29, %28 ], [ %21, %18 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 12
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #13
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 3, i32 0
  ret i32 %42

43:                                               ; preds = %32, %25, %11
  %44 = phi i32 [ 1, %11 ], [ 2, %25 ], [ 0, %32 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts13ContentScriptC2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 92, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %7
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %24
  %15 = phi %"class.std::__1::basic_string"* [ %16, %24 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.std::__1::basic_string"* %16, %7
  br i1 %25, label %26, label %14

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %9
  %30 = phi i8* [ %28, %26 ], [ %10, %9 ]
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %11, align 8
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %29, %5
  %32 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %1, %31
  %34 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %34, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %34, align 8
  %36 = icmp eq %"class.std::__1::vector"* %35, null
  br i1 %36, label %65, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = icmp eq %"class.std::__1::basic_string"* %39, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, %39
  br i1 %45, label %61, label %46

46:                                               ; preds = %41, %56
  %47 = phi %"class.std::__1::basic_string"* [ %48, %56 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 -1
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %53, %46
  %57 = icmp eq %"class.std::__1::basic_string"* %48, %39
  br i1 %57, label %58, label %46

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %35 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %41
  %62 = phi i8* [ %60, %58 ], [ %42, %41 ]
  store %"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"** %43, align 8
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %61, %37
  %64 = bitcast %"class.std::__1::vector"* %35 to i8*
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %33, %63
  %66 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  store i8* null, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  tail call void @_ZdlPv(i8* nonnull %67) #14
  br label %70

70:                                               ; preds = %65, %69
  %71 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  store i8* null, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void @_ZdlPv(i8* nonnull %72) #14
  br label %75

75:                                               ; preds = %70, %74
  %76 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  store i8* null, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_ZdlPv(i8* nonnull %77) #14
  br label %80

80:                                               ; preds = %75, %79
  %81 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %81, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector"* %82, null
  br i1 %83, label %112, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %82, i64 0, i32 0, i32 0
  %86 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %85, align 8
  %87 = icmp eq %"class.std::__1::basic_string"* %86, null
  br i1 %87, label %110, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %82, i64 0, i32 0, i32 1
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8
  %92 = icmp eq %"class.std::__1::basic_string"* %91, %86
  br i1 %92, label %108, label %93

93:                                               ; preds = %88, %103
  %94 = phi %"class.std::__1::basic_string"* [ %95, %103 ], [ %91, %88 ]
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 -1
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %100, %93
  %104 = icmp eq %"class.std::__1::basic_string"* %95, %86
  br i1 %104, label %105, label %93

105:                                              ; preds = %103
  %106 = bitcast %"class.std::__1::vector"* %82 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %105, %88
  %109 = phi i8* [ %107, %105 ], [ %89, %88 ]
  store %"class.std::__1::basic_string"* %86, %"class.std::__1::basic_string"** %90, align 8
  tail call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %108, %84
  %111 = bitcast %"class.std::__1::vector"* %82 to i8*
  tail call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %80, %110
  %113 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %113, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %113, align 8
  %115 = icmp eq %"class.std::__1::vector"* %114, null
  br i1 %115, label %144, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %114, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %117, align 8
  %119 = icmp eq %"class.std::__1::basic_string"* %118, null
  br i1 %119, label %142, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %114, i64 0, i32 0, i32 1
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  %124 = icmp eq %"class.std::__1::basic_string"* %123, %118
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %135
  %126 = phi %"class.std::__1::basic_string"* [ %127, %135 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 -1
  %128 = bitcast %"class.std::__1::basic_string"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %132, %125
  %136 = icmp eq %"class.std::__1::basic_string"* %127, %118
  br i1 %136, label %137, label %125

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector"* %114 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"class.std::__1::basic_string"* %118, %"class.std::__1::basic_string"** %122, align 8
  tail call void @_ZdlPv(i8* %141) #14
  br label %142

142:                                              ; preds = %140, %116
  %143 = bitcast %"class.std::__1::vector"* %114 to i8*
  tail call void @_ZdlPv(i8* %143) #14
  br label %144

144:                                              ; preds = %112, %142
  %145 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %146 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %145, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %145, align 8
  %147 = icmp eq %"class.std::__1::vector"* %146, null
  br i1 %147, label %176, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %146, i64 0, i32 0, i32 0
  %150 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %149, align 8
  %151 = icmp eq %"class.std::__1::basic_string"* %150, null
  br i1 %151, label %174, label %152

152:                                              ; preds = %148
  %153 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %154 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %146, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %154, align 8
  %156 = icmp eq %"class.std::__1::basic_string"* %155, %150
  br i1 %156, label %172, label %157

157:                                              ; preds = %152, %167
  %158 = phi %"class.std::__1::basic_string"* [ %159, %167 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 -1
  %160 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  tail call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %164, %157
  %168 = icmp eq %"class.std::__1::basic_string"* %159, %150
  br i1 %168, label %169, label %157

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::vector"* %146 to i8**
  %171 = load i8*, i8** %170, align 8
  br label %172

172:                                              ; preds = %169, %152
  %173 = phi i8* [ %171, %169 ], [ %153, %152 ]
  store %"class.std::__1::basic_string"* %150, %"class.std::__1::basic_string"** %154, align 8
  tail call void @_ZdlPv(i8* %173) #14
  br label %174

174:                                              ; preds = %172, %148
  %175 = bitcast %"class.std::__1::vector"* %146 to i8*
  tail call void @_ZdlPv(i8* %175) #14
  br label %176

176:                                              ; preds = %144, %174
  %177 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %177, align 8
  %179 = icmp eq %"class.std::__1::basic_string"* %178, null
  br i1 %179, label %202, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  %182 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 1
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %182, align 8
  %184 = icmp eq %"class.std::__1::basic_string"* %183, %178
  br i1 %184, label %200, label %185

185:                                              ; preds = %180, %195
  %186 = phi %"class.std::__1::basic_string"* [ %187, %195 ], [ %183, %180 ]
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %186, i64 -1
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  tail call void @_ZdlPv(i8* %194) #14
  br label %195

195:                                              ; preds = %192, %185
  %196 = icmp eq %"class.std::__1::basic_string"* %187, %178
  br i1 %196, label %197, label %185

197:                                              ; preds = %195
  %198 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i8**
  %199 = load i8*, i8** %198, align 8
  br label %200

200:                                              ; preds = %197, %180
  %201 = phi i8* [ %199, %197 ], [ %181, %180 ]
  store %"class.std::__1::basic_string"* %178, %"class.std::__1::basic_string"** %182, align 8
  tail call void @_ZdlPv(i8* %201) #14
  br label %202

202:                                              ; preds = %176, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts13ContentScriptC2EOS2_(%"struct.extensions::api::content_scripts::ContentScript"* nocapture, %"struct.extensions::api::content_scripts::ContentScript"* nocapture dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %32, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 4
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.9"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  store i8* null, i8** %38, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.9"* %36 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 5
  %43 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 5
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.9"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store i8* null, i8** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.9"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 6
  %49 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 6
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.9"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  store i8* null, i8** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.9"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 7
  %55 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 7
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %56, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 8
  %61 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %62, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 9
  %67 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 9
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"struct.extensions::api::content_scripts::ContentScript"* @_ZN10extensions3api15content_scripts13ContentScriptaSEOS2_(%"struct.extensions::api::content_scripts::ContentScript"* returned, %"struct.extensions::api::content_scripts::ContentScript"* nocapture dereferenceable(96)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #14
  %28 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  br label %29

29:                                               ; preds = %2, %26
  %30 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %46, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %48, i64* %51, align 8
  %52 = icmp eq %"class.std::__1::vector"* %50, null
  br i1 %52, label %81, label %53

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %54, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %79, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %55
  br i1 %61, label %77, label %62

62:                                               ; preds = %57, %72
  %63 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %60, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %69, %62
  %73 = icmp eq %"class.std::__1::basic_string"* %64, %55
  br i1 %73, label %74, label %62

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector"* %50 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %57
  %78 = phi i8* [ %76, %74 ], [ %58, %57 ]
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %59, align 8
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %53
  %80 = bitcast %"class.std::__1::vector"* %50 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %29, %79
  %82 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 2
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.std::__1::vector"* %88, null
  br i1 %90, label %119, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 0
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %92, align 8
  %94 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %94, label %117, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 1
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  %99 = icmp eq %"class.std::__1::basic_string"* %98, %93
  br i1 %99, label %115, label %100

100:                                              ; preds = %95, %110
  %101 = phi %"class.std::__1::basic_string"* [ %102, %110 ], [ %98, %95 ]
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 -1
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"class.std::__1::basic_string"* %102, %93
  br i1 %111, label %112, label %100

112:                                              ; preds = %110
  %113 = bitcast %"class.std::__1::vector"* %88 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %95
  %116 = phi i8* [ %114, %112 ], [ %96, %95 ]
  store %"class.std::__1::basic_string"* %93, %"class.std::__1::basic_string"** %97, align 8
  tail call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %115, %91
  %118 = bitcast %"class.std::__1::vector"* %88 to i8*
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %81, %117
  %120 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 3
  %121 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %122, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %120, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %120 to i64*
  store i64 %124, i64* %127, align 8
  %128 = icmp eq %"class.std::__1::vector"* %126, null
  br i1 %128, label %157, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %126, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  %132 = icmp eq %"class.std::__1::basic_string"* %131, null
  br i1 %132, label %155, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %126, i64 0, i32 0, i32 1
  %136 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %135, align 8
  %137 = icmp eq %"class.std::__1::basic_string"* %136, %131
  br i1 %137, label %153, label %138

138:                                              ; preds = %133, %148
  %139 = phi %"class.std::__1::basic_string"* [ %140, %148 ], [ %136, %133 ]
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 -1
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  tail call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %145, %138
  %149 = icmp eq %"class.std::__1::basic_string"* %140, %131
  br i1 %149, label %150, label %138

150:                                              ; preds = %148
  %151 = bitcast %"class.std::__1::vector"* %126 to i8**
  %152 = load i8*, i8** %151, align 8
  br label %153

153:                                              ; preds = %150, %133
  %154 = phi i8* [ %152, %150 ], [ %134, %133 ]
  store %"class.std::__1::basic_string"* %131, %"class.std::__1::basic_string"** %135, align 8
  tail call void @_ZdlPv(i8* %154) #14
  br label %155

155:                                              ; preds = %153, %129
  %156 = bitcast %"class.std::__1::vector"* %126 to i8*
  tail call void @_ZdlPv(i8* %156) #14
  br label %157

157:                                              ; preds = %119, %155
  %158 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 4
  %159 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.9"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store i8* null, i8** %160, align 8
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %158, i64 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.9"* %158 to i64*
  store i64 %162, i64* %165, align 8
  %166 = icmp eq i8* %164, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %157
  tail call void @_ZdlPv(i8* nonnull %164) #14
  br label %168

168:                                              ; preds = %157, %167
  %169 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 5
  %170 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 5
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr.9"* %170 to i64*
  %173 = load i64, i64* %172, align 8
  store i8* null, i8** %171, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %169, i64 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast %"class.std::__1::unique_ptr.9"* %169 to i64*
  store i64 %173, i64* %176, align 8
  %177 = icmp eq i8* %175, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %168
  tail call void @_ZdlPv(i8* nonnull %175) #14
  br label %179

179:                                              ; preds = %168, %178
  %180 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 6
  %181 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 6
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.9"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store i8* null, i8** %182, align 8
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %180, i64 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.9"* %180 to i64*
  store i64 %184, i64* %187, align 8
  %188 = icmp eq i8* %186, null
  br i1 %188, label %190, label %189

189:                                              ; preds = %179
  tail call void @_ZdlPv(i8* nonnull %186) #14
  br label %190

190:                                              ; preds = %179, %189
  %191 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 7
  %192 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 7
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  %195 = load i64, i64* %194, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %193, align 8
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr"* %191 to i64*
  store i64 %195, i64* %198, align 8
  %199 = icmp eq %"class.std::__1::vector"* %197, null
  br i1 %199, label %228, label %200

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 0
  %202 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %201, align 8
  %203 = icmp eq %"class.std::__1::basic_string"* %202, null
  br i1 %203, label %226, label %204

204:                                              ; preds = %200
  %205 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  %206 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 1
  %207 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %206, align 8
  %208 = icmp eq %"class.std::__1::basic_string"* %207, %202
  br i1 %208, label %224, label %209

209:                                              ; preds = %204, %219
  %210 = phi %"class.std::__1::basic_string"* [ %211, %219 ], [ %207, %204 ]
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 -1
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  tail call void @_ZdlPv(i8* %218) #14
  br label %219

219:                                              ; preds = %216, %209
  %220 = icmp eq %"class.std::__1::basic_string"* %211, %202
  br i1 %220, label %221, label %209

221:                                              ; preds = %219
  %222 = bitcast %"class.std::__1::vector"* %197 to i8**
  %223 = load i8*, i8** %222, align 8
  br label %224

224:                                              ; preds = %221, %204
  %225 = phi i8* [ %223, %221 ], [ %205, %204 ]
  store %"class.std::__1::basic_string"* %202, %"class.std::__1::basic_string"** %206, align 8
  tail call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %224, %200
  %227 = bitcast %"class.std::__1::vector"* %197 to i8*
  tail call void @_ZdlPv(i8* %227) #14
  br label %228

228:                                              ; preds = %190, %226
  %229 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 8
  %230 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 8
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %230, i64 0, i32 0, i32 0, i32 0
  %232 = bitcast %"class.std::__1::unique_ptr"* %230 to i64*
  %233 = load i64, i64* %232, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %231, align 8
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %229, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %234, align 8
  %236 = bitcast %"class.std::__1::unique_ptr"* %229 to i64*
  store i64 %233, i64* %236, align 8
  %237 = icmp eq %"class.std::__1::vector"* %235, null
  br i1 %237, label %266, label %238

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %235, i64 0, i32 0, i32 0
  %240 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %239, align 8
  %241 = icmp eq %"class.std::__1::basic_string"* %240, null
  br i1 %241, label %264, label %242

242:                                              ; preds = %238
  %243 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  %244 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %235, i64 0, i32 0, i32 1
  %245 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %244, align 8
  %246 = icmp eq %"class.std::__1::basic_string"* %245, %240
  br i1 %246, label %262, label %247

247:                                              ; preds = %242, %257
  %248 = phi %"class.std::__1::basic_string"* [ %249, %257 ], [ %245, %242 ]
  %249 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %248, i64 -1
  %250 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  tail call void @_ZdlPv(i8* %256) #14
  br label %257

257:                                              ; preds = %254, %247
  %258 = icmp eq %"class.std::__1::basic_string"* %249, %240
  br i1 %258, label %259, label %247

259:                                              ; preds = %257
  %260 = bitcast %"class.std::__1::vector"* %235 to i8**
  %261 = load i8*, i8** %260, align 8
  br label %262

262:                                              ; preds = %259, %242
  %263 = phi i8* [ %261, %259 ], [ %243, %242 ]
  store %"class.std::__1::basic_string"* %240, %"class.std::__1::basic_string"** %244, align 8
  tail call void @_ZdlPv(i8* %263) #14
  br label %264

264:                                              ; preds = %262, %238
  %265 = bitcast %"class.std::__1::vector"* %235 to i8*
  tail call void @_ZdlPv(i8* %265) #14
  br label %266

266:                                              ; preds = %228, %264
  %267 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 9
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 9
  store i32 %268, i32* %269, align 8
  ret %"struct.extensions::api::content_scripts::ContentScript"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api15content_scripts13ContentScript8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"struct.extensions::api::content_scripts::ContentScript"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca [15 x i8], align 8
  %16 = alloca %"class.std::__1::basic_string.44", align 8
  %17 = alloca %"class.base::Value"*, align 8
  %18 = alloca %"class.base::ListValue"*, align 8
  %19 = alloca [15 x i8], align 8
  %20 = alloca %"class.std::__1::basic_string.44", align 8
  %21 = alloca %"class.std::__1::basic_string.44", align 8
  %22 = alloca %"class.std::__1::basic_string.44", align 8
  %23 = alloca %"class.base::Value"*, align 8
  %24 = alloca %"class.base::ListValue"*, align 8
  %25 = alloca [15 x i8], align 8
  %26 = alloca %"class.std::__1::basic_string.44", align 8
  %27 = alloca %"class.std::__1::basic_string.44", align 8
  %28 = alloca %"class.std::__1::basic_string.44", align 8
  %29 = alloca %"class.base::Value"*, align 8
  %30 = alloca %"class.base::ListValue"*, align 8
  %31 = alloca [15 x i8], align 8
  %32 = alloca %"class.std::__1::basic_string.44", align 8
  %33 = alloca %"class.std::__1::basic_string.44", align 8
  %34 = alloca %"class.std::__1::basic_string.44", align 8
  %35 = alloca %"class.base::Value"*, align 8
  %36 = alloca %"class.base::ListValue"*, align 8
  %37 = alloca [15 x i8], align 8
  %38 = alloca %"class.std::__1::basic_string.44", align 8
  %39 = alloca %"class.std::__1::basic_string.44", align 8
  %40 = alloca %"class.std::__1::basic_string.44", align 8
  %41 = alloca %"class.base::Value"*, align 8
  %42 = alloca i8, align 1
  %43 = alloca [15 x i8], align 8
  %44 = alloca %"class.std::__1::basic_string.44", align 8
  %45 = alloca %"class.base::Value"*, align 8
  %46 = alloca i8, align 1
  %47 = alloca [15 x i8], align 8
  %48 = alloca %"class.std::__1::basic_string.44", align 8
  %49 = alloca %"class.base::Value"*, align 8
  %50 = alloca i8, align 1
  %51 = alloca [15 x i8], align 8
  %52 = alloca %"class.std::__1::basic_string.44", align 8
  %53 = alloca %"class.base::Value"*, align 8
  %54 = alloca %"class.base::ListValue"*, align 8
  %55 = alloca [15 x i8], align 8
  %56 = alloca %"class.std::__1::basic_string.44", align 8
  %57 = alloca %"class.std::__1::basic_string.44", align 8
  %58 = alloca %"class.std::__1::basic_string.44", align 8
  %59 = alloca %"class.base::Value"*, align 8
  %60 = alloca %"class.base::ListValue"*, align 8
  %61 = alloca [15 x i8], align 8
  %62 = alloca %"class.std::__1::basic_string.44", align 8
  %63 = alloca %"class.std::__1::basic_string.44", align 8
  %64 = alloca %"class.std::__1::basic_string.44", align 8
  %65 = alloca %"class.base::Value"*, align 8
  %66 = alloca %"class.std::__1::basic_string", align 8
  %67 = alloca [15 x i8], align 8
  %68 = alloca %"class.std::__1::basic_string.44", align 8
  %69 = alloca [15 x i8], align 8
  %70 = alloca %"class.std::__1::basic_string.44", align 8
  %71 = alloca %"class.std::__1::basic_string.44", align 8
  %72 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i8
  %75 = icmp eq i8 %74, 6
  br i1 %75, label %117, label %76

76:                                               ; preds = %3
  %77 = getelementptr inbounds [15 x i8], [15 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %77)
  %78 = bitcast %"class.std::__1::basic_string.44"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = tail call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %74) #13
  %80 = icmp eq i8* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = tail call i64 @strlen(i8* nonnull %79) #13
  br label %86

83:                                               ; preds = %76
  %84 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  br label %86

86:                                               ; preds = %81, %83
  %87 = phi i64 [ 0, %83 ], [ %82, %81 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %16, i8* %79, i64 %87) #13
  %88 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %16, i64 0, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @.str.4, i64 0, i64 0), i64 25) #13, !noalias !2
  %89 = bitcast %"class.std::__1::basic_string.44"* %88 to i8*
  %90 = bitcast %"class.std::__1::basic_string.44"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast i64* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %93, i64 15, i1 false)
  %94 = getelementptr inbounds i8, i8* %89, i64 23
  %95 = load i8, i8* %94, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #13, !noalias !2
  %96 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %86
  %101 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %100, %86
  %104 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %91, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = bitcast i64* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %77, i64 15, i1 false)
  %107 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 23
  store i8 %95, i8* %108, align 1
  %109 = bitcast %"class.std::__1::basic_string.44"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %103
  %114 = bitcast %"class.std::__1::basic_string.44"* %16 to i8**
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %103, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %77)
  br label %1000

117:                                              ; preds = %3
  %118 = bitcast %"class.base::Value"* %0 to %"class.base::DictionaryValue"*
  %119 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 9
  store i32 0, i32* %119, align 8
  %120 = bitcast %"class.base::Value"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  store %"class.base::Value"* null, %"class.base::Value"** %17, align 8
  %121 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api15content_scripts13ContentScript8kMatchesE, i64 0, i64 0), i64 7, %"class.base::Value"** nonnull %17) #13
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.44"* %2, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @.str.6, i64 0, i64 0)) #13
  br label %998

124:                                              ; preds = %117
  %125 = bitcast %"class.base::ListValue"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %18, align 8
  %126 = load %"class.base::Value"*, %"class.base::Value"** %17, align 8
  %127 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %126, %"class.base::ListValue"** nonnull %18) #13
  br i1 %127, label %173, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds [15 x i8], [15 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %129)
  %130 = bitcast %"class.std::__1::basic_string.44"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  %131 = load %"class.base::Value"*, %"class.base::Value"** %17, align 8
  %132 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i8
  %135 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %134) #13
  %136 = icmp eq i8* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %128
  %138 = call i64 @strlen(i8* nonnull %135) #13
  br label %142

139:                                              ; preds = %128
  %140 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #13
  br label %142

142:                                              ; preds = %137, %139
  %143 = phi i64 [ 0, %139 ], [ %138, %137 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %20, i8* %135, i64 %143) #13
  %144 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %20, i64 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.7, i64 0, i64 0), i64 30) #13, !noalias !5
  %145 = bitcast %"class.std::__1::basic_string.44"* %144 to i8*
  %146 = bitcast %"class.std::__1::basic_string.44"* %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = bitcast i64* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 8 %149, i64 15, i1 false)
  %150 = getelementptr inbounds i8, i8* %145, i64 23
  %151 = load i8, i8* %150, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #13, !noalias !5
  %152 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %142
  %157 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %156, %142
  %160 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %147, i64* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast i64* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* nonnull align 8 %129, i64 15, i1 false)
  %163 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %164 = getelementptr inbounds i8, i8* %163, i64 23
  store i8 %151, i8* %164, align 1
  %165 = bitcast %"class.std::__1::basic_string.44"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %159
  %170 = bitcast %"class.std::__1::basic_string.44"* %20 to i8**
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %169, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %129)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  br label %998

173:                                              ; preds = %124
  %174 = bitcast %"class.std::__1::basic_string.44"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 24, i1 false) #13
  %175 = load %"class.base::ListValue"*, %"class.base::ListValue"** %18, align 8
  %176 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0
  %177 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %175, %"class.std::__1::vector"* %176, %"class.std::__1::basic_string.44"* nonnull %21)
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = bitcast %"class.std::__1::basic_string.44"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %191

180:                                              ; preds = %173
  %181 = bitcast %"class.std::__1::basic_string.44"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %22, i16* getelementptr inbounds ([25 x i16], [25 x i16]* @.str.8, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %21)
  %182 = bitcast %"class.std::__1::basic_string.44"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %182, i64 0, i32 1, i32 1
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = bitcast %"class.std::__1::basic_string.44"* %21 to i8**
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #14
  br label %189

189:                                              ; preds = %186, %180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %174, i8* nonnull align 8 %181, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #13
  %190 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %21)
  br label %191

191:                                              ; preds = %178, %189
  %192 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %179, %178 ], [ %182, %189 ]
  %193 = phi i32 [ 0, %178 ], [ 1, %189 ]
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %192, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %191
  %198 = bitcast %"class.std::__1::basic_string.44"* %21 to i8**
  %199 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %199) #14
  br label %200

200:                                              ; preds = %197, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  %201 = icmp eq i32 %193, 0
  br i1 %201, label %202, label %998

202:                                              ; preds = %200
  %203 = bitcast %"class.base::Value"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13
  store %"class.base::Value"* null, %"class.base::Value"** %23, align 8
  %204 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts13ContentScript15kExcludeMatchesE, i64 0, i64 0), i64 15, %"class.base::Value"** nonnull %23) #13
  br i1 %204, label %205, label %283

205:                                              ; preds = %202
  %206 = bitcast %"class.base::ListValue"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %24, align 8
  %207 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  %208 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %207, %"class.base::ListValue"** nonnull %24) #13
  br i1 %208, label %254, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds [15 x i8], [15 x i8]* %25, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %210)
  %211 = bitcast %"class.std::__1::basic_string.44"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #13
  %212 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  %213 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = trunc i64 %214 to i8
  %216 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %215) #13
  %217 = icmp eq i8* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %209
  %219 = call i64 @strlen(i8* nonnull %216) #13
  br label %223

220:                                              ; preds = %209
  %221 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %222 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #13
  br label %223

223:                                              ; preds = %218, %220
  %224 = phi i64 [ 0, %220 ], [ %219, %218 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %26, i8* %216, i64 %224) #13
  %225 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %26, i64 0, i16* getelementptr inbounds ([39 x i16], [39 x i16]* @.str.10, i64 0, i64 0), i64 38) #13, !noalias !8
  %226 = bitcast %"class.std::__1::basic_string.44"* %225 to i8*
  %227 = bitcast %"class.std::__1::basic_string.44"* %225 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %230 = bitcast i64* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %210, i8* align 8 %230, i64 15, i1 false)
  %231 = getelementptr inbounds i8, i8* %226, i64 23
  %232 = load i8, i8* %231, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #13, !noalias !8
  %233 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %223
  %238 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %239 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %239) #14
  br label %240

240:                                              ; preds = %237, %223
  %241 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %228, i64* %241, align 8
  %242 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = bitcast i64* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* nonnull align 8 %210, i64 15, i1 false)
  %244 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %245 = getelementptr inbounds i8, i8* %244, i64 23
  store i8 %232, i8* %245, align 1
  %246 = bitcast %"class.std::__1::basic_string.44"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %246, i64 0, i32 1, i32 1
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %240
  %251 = bitcast %"class.std::__1::basic_string.44"* %26 to i8**
  %252 = load i8*, i8** %251, align 8
  call void @_ZdlPv(i8* %252) #14
  br label %253

253:                                              ; preds = %250, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %210)
  br label %993

254:                                              ; preds = %205
  %255 = bitcast %"class.std::__1::basic_string.44"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %255) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %255, i8 0, i64 24, i1 false) #13
  %256 = load %"class.base::ListValue"*, %"class.base::ListValue"** %24, align 8
  %257 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 1
  %258 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %256, %"class.std::__1::unique_ptr"* %257, %"class.std::__1::basic_string.44"* nonnull %27)
  br i1 %258, label %259, label %261

259:                                              ; preds = %254
  %260 = bitcast %"class.std::__1::basic_string.44"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %272

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::basic_string.44"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %28, i16* getelementptr inbounds ([33 x i16], [33 x i16]* @.str.11, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %27)
  %263 = bitcast %"class.std::__1::basic_string.44"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %263, i64 0, i32 1, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %270

267:                                              ; preds = %261
  %268 = bitcast %"class.std::__1::basic_string.44"* %27 to i8**
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #14
  br label %270

270:                                              ; preds = %267, %261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %255, i8* nonnull align 8 %262, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #13
  %271 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %27)
  br label %272

272:                                              ; preds = %259, %270
  %273 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %260, %259 ], [ %263, %270 ]
  %274 = phi i32 [ 0, %259 ], [ 1, %270 ]
  %275 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %273, i64 0, i32 1, i32 1
  %276 = load i8, i8* %275, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %272
  %279 = bitcast %"class.std::__1::basic_string.44"* %27 to i8**
  %280 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %280) #14
  br label %281

281:                                              ; preds = %278, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %255) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #13
  %282 = icmp eq i32 %274, 0
  br i1 %282, label %283, label %996

283:                                              ; preds = %281, %202
  %284 = bitcast %"class.base::Value"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #13
  store %"class.base::Value"* null, %"class.base::Value"** %29, align 8
  %285 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN10extensions3api15content_scripts13ContentScript4kCssE, i64 0, i64 0), i64 3, %"class.base::Value"** nonnull %29) #13
  br i1 %285, label %286, label %364

286:                                              ; preds = %283
  %287 = bitcast %"class.base::ListValue"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %30, align 8
  %288 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %289 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %288, %"class.base::ListValue"** nonnull %30) #13
  br i1 %289, label %335, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds [15 x i8], [15 x i8]* %31, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %291)
  %292 = bitcast %"class.std::__1::basic_string.44"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #13
  %293 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %294 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = trunc i64 %295 to i8
  %297 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %296) #13
  %298 = icmp eq i8* %297, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %290
  %300 = call i64 @strlen(i8* nonnull %297) #13
  br label %304

301:                                              ; preds = %290
  %302 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #13
  br label %304

304:                                              ; preds = %299, %301
  %305 = phi i64 [ 0, %301 ], [ %300, %299 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %32, i8* %297, i64 %305) #13
  %306 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %32, i64 0, i16* getelementptr inbounds ([27 x i16], [27 x i16]* @.str.13, i64 0, i64 0), i64 26) #13, !noalias !11
  %307 = bitcast %"class.std::__1::basic_string.44"* %306 to i8*
  %308 = bitcast %"class.std::__1::basic_string.44"* %306 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %311 = bitcast i64* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %291, i8* align 8 %311, i64 15, i1 false)
  %312 = getelementptr inbounds i8, i8* %307, i64 23
  %313 = load i8, i8* %312, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %307, i8 0, i64 24, i1 false) #13, !noalias !11
  %314 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %314, i64 0, i32 1, i32 1
  %316 = load i8, i8* %315, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %304
  %319 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %320 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %320) #14
  br label %321

321:                                              ; preds = %318, %304
  %322 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %309, i64* %322, align 8
  %323 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %324 = bitcast i64* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* nonnull align 8 %291, i64 15, i1 false)
  %325 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %326 = getelementptr inbounds i8, i8* %325, i64 23
  store i8 %313, i8* %326, align 1
  %327 = bitcast %"class.std::__1::basic_string.44"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %327, i64 0, i32 1, i32 1
  %329 = load i8, i8* %328, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %321
  %332 = bitcast %"class.std::__1::basic_string.44"* %32 to i8**
  %333 = load i8*, i8** %332, align 8
  call void @_ZdlPv(i8* %333) #14
  br label %334

334:                                              ; preds = %331, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %291)
  br label %990

335:                                              ; preds = %286
  %336 = bitcast %"class.std::__1::basic_string.44"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 0, i64 24, i1 false) #13
  %337 = load %"class.base::ListValue"*, %"class.base::ListValue"** %30, align 8
  %338 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 2
  %339 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %337, %"class.std::__1::unique_ptr"* %338, %"class.std::__1::basic_string.44"* nonnull %33)
  br i1 %339, label %340, label %342

340:                                              ; preds = %335
  %341 = bitcast %"class.std::__1::basic_string.44"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %353

342:                                              ; preds = %335
  %343 = bitcast %"class.std::__1::basic_string.44"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %34, i16* getelementptr inbounds ([21 x i16], [21 x i16]* @.str.14, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %33)
  %344 = bitcast %"class.std::__1::basic_string.44"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %345 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %344, i64 0, i32 1, i32 1
  %346 = load i8, i8* %345, align 1
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %351

348:                                              ; preds = %342
  %349 = bitcast %"class.std::__1::basic_string.44"* %33 to i8**
  %350 = load i8*, i8** %349, align 8
  call void @_ZdlPv(i8* %350) #14
  br label %351

351:                                              ; preds = %348, %342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %336, i8* nonnull align 8 %343, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #13
  %352 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %33)
  br label %353

353:                                              ; preds = %340, %351
  %354 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %341, %340 ], [ %344, %351 ]
  %355 = phi i32 [ 0, %340 ], [ 1, %351 ]
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %354, i64 0, i32 1, i32 1
  %357 = load i8, i8* %356, align 1
  %358 = icmp slt i8 %357, 0
  br i1 %358, label %359, label %362

359:                                              ; preds = %353
  %360 = bitcast %"class.std::__1::basic_string.44"* %33 to i8**
  %361 = load i8*, i8** %360, align 8
  call void @_ZdlPv(i8* %361) #14
  br label %362

362:                                              ; preds = %359, %353
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #13
  %363 = icmp eq i32 %355, 0
  br i1 %363, label %364, label %993

364:                                              ; preds = %362, %283
  %365 = bitcast %"class.base::Value"** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #13
  store %"class.base::Value"* null, %"class.base::Value"** %35, align 8
  %366 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN10extensions3api15content_scripts13ContentScript3kJsE, i64 0, i64 0), i64 2, %"class.base::Value"** nonnull %35) #13
  br i1 %366, label %367, label %445

367:                                              ; preds = %364
  %368 = bitcast %"class.base::ListValue"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %368) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %36, align 8
  %369 = load %"class.base::Value"*, %"class.base::Value"** %35, align 8
  %370 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %369, %"class.base::ListValue"** nonnull %36) #13
  br i1 %370, label %416, label %371

371:                                              ; preds = %367
  %372 = getelementptr inbounds [15 x i8], [15 x i8]* %37, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %372)
  %373 = bitcast %"class.std::__1::basic_string.44"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #13
  %374 = load %"class.base::Value"*, %"class.base::Value"** %35, align 8
  %375 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %374, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %376 = load i64, i64* %375, align 8
  %377 = trunc i64 %376 to i8
  %378 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %377) #13
  %379 = icmp eq i8* %378, null
  br i1 %379, label %382, label %380

380:                                              ; preds = %371
  %381 = call i64 @strlen(i8* nonnull %378) #13
  br label %385

382:                                              ; preds = %371
  %383 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %384 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #13
  br label %385

385:                                              ; preds = %380, %382
  %386 = phi i64 [ 0, %382 ], [ %381, %380 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %38, i8* %378, i64 %386) #13
  %387 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %38, i64 0, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @.str.16, i64 0, i64 0), i64 25) #13, !noalias !14
  %388 = bitcast %"class.std::__1::basic_string.44"* %387 to i8*
  %389 = bitcast %"class.std::__1::basic_string.44"* %387 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %392 = bitcast i64* %391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %372, i8* align 8 %392, i64 15, i1 false)
  %393 = getelementptr inbounds i8, i8* %388, i64 23
  %394 = load i8, i8* %393, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 24, i1 false) #13, !noalias !14
  %395 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %395, i64 0, i32 1, i32 1
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %402

399:                                              ; preds = %385
  %400 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %401 = load i8*, i8** %400, align 8
  call void @_ZdlPv(i8* %401) #14
  br label %402

402:                                              ; preds = %399, %385
  %403 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %390, i64* %403, align 8
  %404 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %405 = bitcast i64* %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %405, i8* nonnull align 8 %372, i64 15, i1 false)
  %406 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %407 = getelementptr inbounds i8, i8* %406, i64 23
  store i8 %394, i8* %407, align 1
  %408 = bitcast %"class.std::__1::basic_string.44"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %408, i64 0, i32 1, i32 1
  %410 = load i8, i8* %409, align 1
  %411 = icmp slt i8 %410, 0
  br i1 %411, label %412, label %415

412:                                              ; preds = %402
  %413 = bitcast %"class.std::__1::basic_string.44"* %38 to i8**
  %414 = load i8*, i8** %413, align 8
  call void @_ZdlPv(i8* %414) #14
  br label %415

415:                                              ; preds = %412, %402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %372)
  br label %987

416:                                              ; preds = %367
  %417 = bitcast %"class.std::__1::basic_string.44"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %417) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %417, i8 0, i64 24, i1 false) #13
  %418 = load %"class.base::ListValue"*, %"class.base::ListValue"** %36, align 8
  %419 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 3
  %420 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %418, %"class.std::__1::unique_ptr"* %419, %"class.std::__1::basic_string.44"* nonnull %39)
  br i1 %420, label %421, label %423

421:                                              ; preds = %416
  %422 = bitcast %"class.std::__1::basic_string.44"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %434

423:                                              ; preds = %416
  %424 = bitcast %"class.std::__1::basic_string.44"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %424) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %40, i16* getelementptr inbounds ([20 x i16], [20 x i16]* @.str.17, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %39)
  %425 = bitcast %"class.std::__1::basic_string.44"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %426 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %425, i64 0, i32 1, i32 1
  %427 = load i8, i8* %426, align 1
  %428 = icmp slt i8 %427, 0
  br i1 %428, label %429, label %432

429:                                              ; preds = %423
  %430 = bitcast %"class.std::__1::basic_string.44"* %39 to i8**
  %431 = load i8*, i8** %430, align 8
  call void @_ZdlPv(i8* %431) #14
  br label %432

432:                                              ; preds = %429, %423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %417, i8* nonnull align 8 %424, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %424) #13
  %433 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %39)
  br label %434

434:                                              ; preds = %421, %432
  %435 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %422, %421 ], [ %425, %432 ]
  %436 = phi i32 [ 0, %421 ], [ 1, %432 ]
  %437 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %435, i64 0, i32 1, i32 1
  %438 = load i8, i8* %437, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %443

440:                                              ; preds = %434
  %441 = bitcast %"class.std::__1::basic_string.44"* %39 to i8**
  %442 = load i8*, i8** %441, align 8
  call void @_ZdlPv(i8* %442) #14
  br label %443

443:                                              ; preds = %440, %434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %368) #13
  %444 = icmp eq i32 %436, 0
  br i1 %444, label %445, label %990

445:                                              ; preds = %443, %364
  %446 = bitcast %"class.base::Value"** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #13
  store %"class.base::Value"* null, %"class.base::Value"** %41, align 8
  %447 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10extensions3api15content_scripts13ContentScript10kAllFramesE, i64 0, i64 0), i64 10, %"class.base::Value"** nonnull %41) #13
  br i1 %447, label %448, label %512

448:                                              ; preds = %445
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #13
  store i8 -86, i8* %42, align 1
  %449 = load %"class.base::Value"*, %"class.base::Value"** %41, align 8
  %450 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %449, i8* nonnull %42) #13
  br i1 %450, label %501, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds [15 x i8], [15 x i8]* %43, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %452)
  %453 = bitcast %"class.std::__1::basic_string.44"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %453) #13
  %454 = load %"class.base::Value"*, %"class.base::Value"** %41, align 8
  %455 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %454, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %456 = load i64, i64* %455, align 8
  %457 = trunc i64 %456 to i8
  %458 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %457) #13
  %459 = icmp eq i8* %458, null
  br i1 %459, label %462, label %460

460:                                              ; preds = %451
  %461 = call i64 @strlen(i8* nonnull %458) #13
  br label %465

462:                                              ; preds = %451
  %463 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %464 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463) #13
  br label %465

465:                                              ; preds = %460, %462
  %466 = phi i64 [ 0, %462 ], [ %461, %460 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %44, i8* %458, i64 %466) #13
  %467 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %44, i64 0, i16* getelementptr inbounds ([40 x i16], [40 x i16]* @.str.19, i64 0, i64 0), i64 39) #13, !noalias !17
  %468 = bitcast %"class.std::__1::basic_string.44"* %467 to i8*
  %469 = bitcast %"class.std::__1::basic_string.44"* %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %467, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %472 = bitcast i64* %471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %452, i8* align 8 %472, i64 15, i1 false)
  %473 = getelementptr inbounds i8, i8* %468, i64 23
  %474 = load i8, i8* %473, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %468, i8 0, i64 24, i1 false) #13, !noalias !17
  %475 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %476 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %475, i64 0, i32 1, i32 1
  %477 = load i8, i8* %476, align 1
  %478 = icmp slt i8 %477, 0
  br i1 %478, label %479, label %482

479:                                              ; preds = %465
  %480 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %481 = load i8*, i8** %480, align 8
  call void @_ZdlPv(i8* %481) #14
  br label %482

482:                                              ; preds = %479, %465
  %483 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %470, i64* %483, align 8
  %484 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %485 = bitcast i64* %484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %485, i8* nonnull align 8 %452, i64 15, i1 false)
  %486 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %487 = getelementptr inbounds i8, i8* %486, i64 23
  store i8 %474, i8* %487, align 1
  %488 = bitcast %"class.std::__1::basic_string.44"* %44 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %488, i64 0, i32 1, i32 1
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %482
  %493 = bitcast %"class.std::__1::basic_string.44"* %44 to i8**
  %494 = load i8*, i8** %493, align 8
  call void @_ZdlPv(i8* %494) #14
  br label %495

495:                                              ; preds = %482, %492
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %452)
  %496 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %497 = load i8*, i8** %496, align 8
  store i8* null, i8** %496, align 8
  %498 = icmp eq i8* %497, null
  br i1 %498, label %500, label %499

499:                                              ; preds = %495
  call void @_ZdlPv(i8* nonnull %497) #14
  br label %500

500:                                              ; preds = %495, %499
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #13
  br label %987

501:                                              ; preds = %448
  %502 = call i8* @_Znwm(i64 1) #14
  %503 = load i8, i8* %42, align 1, !range !20
  store i8 %503, i8* %502, align 1
  %504 = ptrtoint i8* %502 to i64
  %505 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 4
  %506 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %505, i64 0, i32 0, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  %508 = bitcast %"class.std::__1::unique_ptr.9"* %505 to i64*
  store i64 %504, i64* %508, align 8
  %509 = icmp eq i8* %507, null
  br i1 %509, label %511, label %510

510:                                              ; preds = %501
  call void @_ZdlPv(i8* nonnull %507) #14
  br label %511

511:                                              ; preds = %510, %501
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #13
  br label %512

512:                                              ; preds = %511, %445
  %513 = bitcast %"class.base::Value"** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %513) #13
  store %"class.base::Value"* null, %"class.base::Value"** %45, align 8
  %514 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api15content_scripts13ContentScript22kMatchOriginAsFallbackE, i64 0, i64 0), i64 24, %"class.base::Value"** nonnull %45) #13
  br i1 %514, label %515, label %579

515:                                              ; preds = %512
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #13
  store i8 -86, i8* %46, align 1
  %516 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %517 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %516, i8* nonnull %46) #13
  br i1 %517, label %568, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds [15 x i8], [15 x i8]* %47, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %519)
  %520 = bitcast %"class.std::__1::basic_string.44"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #13
  %521 = load %"class.base::Value"*, %"class.base::Value"** %45, align 8
  %522 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %521, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %523 = load i64, i64* %522, align 8
  %524 = trunc i64 %523 to i8
  %525 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %524) #13
  %526 = icmp eq i8* %525, null
  br i1 %526, label %529, label %527

527:                                              ; preds = %518
  %528 = call i64 @strlen(i8* nonnull %525) #13
  br label %532

529:                                              ; preds = %518
  %530 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %531 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #13
  br label %532

532:                                              ; preds = %527, %529
  %533 = phi i64 [ 0, %529 ], [ %528, %527 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %48, i8* %525, i64 %533) #13
  %534 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %48, i64 0, i16* getelementptr inbounds ([68 x i16], [68 x i16]* @.str.21, i64 0, i64 0), i64 67) #13, !noalias !21
  %535 = bitcast %"class.std::__1::basic_string.44"* %534 to i8*
  %536 = bitcast %"class.std::__1::basic_string.44"* %534 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %534, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %539 = bitcast i64* %538 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %519, i8* align 8 %539, i64 15, i1 false)
  %540 = getelementptr inbounds i8, i8* %535, i64 23
  %541 = load i8, i8* %540, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %535, i8 0, i64 24, i1 false) #13, !noalias !21
  %542 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %543 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %542, i64 0, i32 1, i32 1
  %544 = load i8, i8* %543, align 1
  %545 = icmp slt i8 %544, 0
  br i1 %545, label %546, label %549

546:                                              ; preds = %532
  %547 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %548 = load i8*, i8** %547, align 8
  call void @_ZdlPv(i8* %548) #14
  br label %549

549:                                              ; preds = %546, %532
  %550 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %537, i64* %550, align 8
  %551 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %552 = bitcast i64* %551 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %552, i8* nonnull align 8 %519, i64 15, i1 false)
  %553 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %554 = getelementptr inbounds i8, i8* %553, i64 23
  store i8 %541, i8* %554, align 1
  %555 = bitcast %"class.std::__1::basic_string.44"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %555, i64 0, i32 1, i32 1
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %549
  %560 = bitcast %"class.std::__1::basic_string.44"* %48 to i8**
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #14
  br label %562

562:                                              ; preds = %549, %559
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %519)
  %563 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %564 = load i8*, i8** %563, align 8
  store i8* null, i8** %563, align 8
  %565 = icmp eq i8* %564, null
  br i1 %565, label %567, label %566

566:                                              ; preds = %562
  call void @_ZdlPv(i8* nonnull %564) #14
  br label %567

567:                                              ; preds = %562, %566
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #13
  br label %985

568:                                              ; preds = %515
  %569 = call i8* @_Znwm(i64 1) #14
  %570 = load i8, i8* %46, align 1, !range !20
  store i8 %570, i8* %569, align 1
  %571 = ptrtoint i8* %569 to i64
  %572 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 5
  %573 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %572, i64 0, i32 0, i32 0, i32 0
  %574 = load i8*, i8** %573, align 8
  %575 = bitcast %"class.std::__1::unique_ptr.9"* %572 to i64*
  store i64 %571, i64* %575, align 8
  %576 = icmp eq i8* %574, null
  br i1 %576, label %578, label %577

577:                                              ; preds = %568
  call void @_ZdlPv(i8* nonnull %574) #14
  br label %578

578:                                              ; preds = %577, %568
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #13
  br label %579

579:                                              ; preds = %578, %512
  %580 = bitcast %"class.base::Value"** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %580) #13
  store %"class.base::Value"* null, %"class.base::Value"** %49, align 8
  %581 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN10extensions3api15content_scripts13ContentScript16kMatchAboutBlankE, i64 0, i64 0), i64 17, %"class.base::Value"** nonnull %49) #13
  br i1 %581, label %582, label %646

582:                                              ; preds = %579
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #13
  store i8 -86, i8* %50, align 1
  %583 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8
  %584 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %583, i8* nonnull %50) #13
  br i1 %584, label %635, label %585

585:                                              ; preds = %582
  %586 = getelementptr inbounds [15 x i8], [15 x i8]* %51, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %586)
  %587 = bitcast %"class.std::__1::basic_string.44"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %587) #13
  %588 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8
  %589 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %588, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %590 = load i64, i64* %589, align 8
  %591 = trunc i64 %590 to i8
  %592 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %591) #13
  %593 = icmp eq i8* %592, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %585
  %595 = call i64 @strlen(i8* nonnull %592) #13
  br label %599

596:                                              ; preds = %585
  %597 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %597) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %598 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %597) #13
  br label %599

599:                                              ; preds = %594, %596
  %600 = phi i64 [ 0, %596 ], [ %595, %594 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %52, i8* %592, i64 %600) #13
  %601 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %52, i64 0, i16* getelementptr inbounds ([54 x i16], [54 x i16]* @.str.23, i64 0, i64 0), i64 53) #13, !noalias !24
  %602 = bitcast %"class.std::__1::basic_string.44"* %601 to i8*
  %603 = bitcast %"class.std::__1::basic_string.44"* %601 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %601, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %606 = bitcast i64* %605 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %586, i8* align 8 %606, i64 15, i1 false)
  %607 = getelementptr inbounds i8, i8* %602, i64 23
  %608 = load i8, i8* %607, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %602, i8 0, i64 24, i1 false) #13, !noalias !24
  %609 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %610 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %609, i64 0, i32 1, i32 1
  %611 = load i8, i8* %610, align 1
  %612 = icmp slt i8 %611, 0
  br i1 %612, label %613, label %616

613:                                              ; preds = %599
  %614 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %615 = load i8*, i8** %614, align 8
  call void @_ZdlPv(i8* %615) #14
  br label %616

616:                                              ; preds = %613, %599
  %617 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %604, i64* %617, align 8
  %618 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %619 = bitcast i64* %618 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %619, i8* nonnull align 8 %586, i64 15, i1 false)
  %620 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %621 = getelementptr inbounds i8, i8* %620, i64 23
  store i8 %608, i8* %621, align 1
  %622 = bitcast %"class.std::__1::basic_string.44"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %622, i64 0, i32 1, i32 1
  %624 = load i8, i8* %623, align 1
  %625 = icmp slt i8 %624, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %616
  %627 = bitcast %"class.std::__1::basic_string.44"* %52 to i8**
  %628 = load i8*, i8** %627, align 8
  call void @_ZdlPv(i8* %628) #14
  br label %629

629:                                              ; preds = %616, %626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %587) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %586)
  %630 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %631 = load i8*, i8** %630, align 8
  store i8* null, i8** %630, align 8
  %632 = icmp eq i8* %631, null
  br i1 %632, label %634, label %633

633:                                              ; preds = %629
  call void @_ZdlPv(i8* nonnull %631) #14
  br label %634

634:                                              ; preds = %629, %633
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #13
  br label %983

635:                                              ; preds = %582
  %636 = call i8* @_Znwm(i64 1) #14
  %637 = load i8, i8* %50, align 1, !range !20
  store i8 %637, i8* %636, align 1
  %638 = ptrtoint i8* %636 to i64
  %639 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 6
  %640 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %639, i64 0, i32 0, i32 0, i32 0
  %641 = load i8*, i8** %640, align 8
  %642 = bitcast %"class.std::__1::unique_ptr.9"* %639 to i64*
  store i64 %638, i64* %642, align 8
  %643 = icmp eq i8* %641, null
  br i1 %643, label %645, label %644

644:                                              ; preds = %635
  call void @_ZdlPv(i8* nonnull %641) #14
  br label %645

645:                                              ; preds = %644, %635
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #13
  br label %646

646:                                              ; preds = %645, %579
  %647 = bitcast %"class.base::Value"** %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %647) #13
  store %"class.base::Value"* null, %"class.base::Value"** %53, align 8
  %648 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kIncludeGlobsE, i64 0, i64 0), i64 13, %"class.base::Value"** nonnull %53) #13
  br i1 %648, label %649, label %727

649:                                              ; preds = %646
  %650 = bitcast %"class.base::ListValue"** %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %650) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %54, align 8
  %651 = load %"class.base::Value"*, %"class.base::Value"** %53, align 8
  %652 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %651, %"class.base::ListValue"** nonnull %54) #13
  br i1 %652, label %698, label %653

653:                                              ; preds = %649
  %654 = getelementptr inbounds [15 x i8], [15 x i8]* %55, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %654)
  %655 = bitcast %"class.std::__1::basic_string.44"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %655) #13
  %656 = load %"class.base::Value"*, %"class.base::Value"** %53, align 8
  %657 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %656, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %658 = load i64, i64* %657, align 8
  %659 = trunc i64 %658 to i8
  %660 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %659) #13
  %661 = icmp eq i8* %660, null
  br i1 %661, label %664, label %662

662:                                              ; preds = %653
  %663 = call i64 @strlen(i8* nonnull %660) #13
  br label %667

664:                                              ; preds = %653
  %665 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %665) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %666 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %665) #13
  br label %667

667:                                              ; preds = %662, %664
  %668 = phi i64 [ 0, %664 ], [ %663, %662 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %56, i8* %660, i64 %668) #13
  %669 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %56, i64 0, i16* getelementptr inbounds ([37 x i16], [37 x i16]* @.str.25, i64 0, i64 0), i64 36) #13, !noalias !27
  %670 = bitcast %"class.std::__1::basic_string.44"* %669 to i8*
  %671 = bitcast %"class.std::__1::basic_string.44"* %669 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %669, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %674 = bitcast i64* %673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %654, i8* align 8 %674, i64 15, i1 false)
  %675 = getelementptr inbounds i8, i8* %670, i64 23
  %676 = load i8, i8* %675, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %670, i8 0, i64 24, i1 false) #13, !noalias !27
  %677 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %684

681:                                              ; preds = %667
  %682 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %683 = load i8*, i8** %682, align 8
  call void @_ZdlPv(i8* %683) #14
  br label %684

684:                                              ; preds = %681, %667
  %685 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %672, i64* %685, align 8
  %686 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %687 = bitcast i64* %686 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %687, i8* nonnull align 8 %654, i64 15, i1 false)
  %688 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %689 = getelementptr inbounds i8, i8* %688, i64 23
  store i8 %676, i8* %689, align 1
  %690 = bitcast %"class.std::__1::basic_string.44"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %691 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %690, i64 0, i32 1, i32 1
  %692 = load i8, i8* %691, align 1
  %693 = icmp slt i8 %692, 0
  br i1 %693, label %694, label %697

694:                                              ; preds = %684
  %695 = bitcast %"class.std::__1::basic_string.44"* %56 to i8**
  %696 = load i8*, i8** %695, align 8
  call void @_ZdlPv(i8* %696) #14
  br label %697

697:                                              ; preds = %694, %684
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %655) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %654)
  br label %978

698:                                              ; preds = %649
  %699 = bitcast %"class.std::__1::basic_string.44"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %699) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %699, i8 0, i64 24, i1 false) #13
  %700 = load %"class.base::ListValue"*, %"class.base::ListValue"** %54, align 8
  %701 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 7
  %702 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %700, %"class.std::__1::unique_ptr"* %701, %"class.std::__1::basic_string.44"* nonnull %57)
  br i1 %702, label %703, label %705

703:                                              ; preds = %698
  %704 = bitcast %"class.std::__1::basic_string.44"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %716

705:                                              ; preds = %698
  %706 = bitcast %"class.std::__1::basic_string.44"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %58, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.26, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %57)
  %707 = bitcast %"class.std::__1::basic_string.44"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %708 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %707, i64 0, i32 1, i32 1
  %709 = load i8, i8* %708, align 1
  %710 = icmp slt i8 %709, 0
  br i1 %710, label %711, label %714

711:                                              ; preds = %705
  %712 = bitcast %"class.std::__1::basic_string.44"* %57 to i8**
  %713 = load i8*, i8** %712, align 8
  call void @_ZdlPv(i8* %713) #14
  br label %714

714:                                              ; preds = %711, %705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %699, i8* nonnull align 8 %706, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #13
  %715 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %57)
  br label %716

716:                                              ; preds = %703, %714
  %717 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %704, %703 ], [ %707, %714 ]
  %718 = phi i32 [ 0, %703 ], [ 1, %714 ]
  %719 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %717, i64 0, i32 1, i32 1
  %720 = load i8, i8* %719, align 1
  %721 = icmp slt i8 %720, 0
  br i1 %721, label %722, label %725

722:                                              ; preds = %716
  %723 = bitcast %"class.std::__1::basic_string.44"* %57 to i8**
  %724 = load i8*, i8** %723, align 8
  call void @_ZdlPv(i8* %724) #14
  br label %725

725:                                              ; preds = %722, %716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %699) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %650) #13
  %726 = icmp eq i32 %718, 0
  br i1 %726, label %727, label %981

727:                                              ; preds = %725, %646
  %728 = bitcast %"class.base::Value"** %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %728) #13
  store %"class.base::Value"* null, %"class.base::Value"** %59, align 8
  %729 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kExcludeGlobsE, i64 0, i64 0), i64 13, %"class.base::Value"** nonnull %59) #13
  br i1 %729, label %730, label %808

730:                                              ; preds = %727
  %731 = bitcast %"class.base::ListValue"** %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %731) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %60, align 8
  %732 = load %"class.base::Value"*, %"class.base::Value"** %59, align 8
  %733 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %732, %"class.base::ListValue"** nonnull %60) #13
  br i1 %733, label %779, label %734

734:                                              ; preds = %730
  %735 = getelementptr inbounds [15 x i8], [15 x i8]* %61, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %735)
  %736 = bitcast %"class.std::__1::basic_string.44"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %736) #13
  %737 = load %"class.base::Value"*, %"class.base::Value"** %59, align 8
  %738 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %737, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %739 = load i64, i64* %738, align 8
  %740 = trunc i64 %739 to i8
  %741 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %740) #13
  %742 = icmp eq i8* %741, null
  br i1 %742, label %745, label %743

743:                                              ; preds = %734
  %744 = call i64 @strlen(i8* nonnull %741) #13
  br label %748

745:                                              ; preds = %734
  %746 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %746) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %747 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %746) #13
  br label %748

748:                                              ; preds = %743, %745
  %749 = phi i64 [ 0, %745 ], [ %744, %743 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %62, i8* %741, i64 %749) #13
  %750 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %62, i64 0, i16* getelementptr inbounds ([37 x i16], [37 x i16]* @.str.28, i64 0, i64 0), i64 36) #13, !noalias !30
  %751 = bitcast %"class.std::__1::basic_string.44"* %750 to i8*
  %752 = bitcast %"class.std::__1::basic_string.44"* %750 to i64*
  %753 = load i64, i64* %752, align 8
  %754 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %750, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %755 = bitcast i64* %754 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %735, i8* align 8 %755, i64 15, i1 false)
  %756 = getelementptr inbounds i8, i8* %751, i64 23
  %757 = load i8, i8* %756, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %751, i8 0, i64 24, i1 false) #13, !noalias !30
  %758 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %759 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %758, i64 0, i32 1, i32 1
  %760 = load i8, i8* %759, align 1
  %761 = icmp slt i8 %760, 0
  br i1 %761, label %762, label %765

762:                                              ; preds = %748
  %763 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %764 = load i8*, i8** %763, align 8
  call void @_ZdlPv(i8* %764) #14
  br label %765

765:                                              ; preds = %762, %748
  %766 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %753, i64* %766, align 8
  %767 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %768 = bitcast i64* %767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %768, i8* nonnull align 8 %735, i64 15, i1 false)
  %769 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %770 = getelementptr inbounds i8, i8* %769, i64 23
  store i8 %757, i8* %770, align 1
  %771 = bitcast %"class.std::__1::basic_string.44"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %772 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %771, i64 0, i32 1, i32 1
  %773 = load i8, i8* %772, align 1
  %774 = icmp slt i8 %773, 0
  br i1 %774, label %775, label %778

775:                                              ; preds = %765
  %776 = bitcast %"class.std::__1::basic_string.44"* %62 to i8**
  %777 = load i8*, i8** %776, align 8
  call void @_ZdlPv(i8* %777) #14
  br label %778

778:                                              ; preds = %775, %765
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %736) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %735)
  br label %975

779:                                              ; preds = %730
  %780 = bitcast %"class.std::__1::basic_string.44"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %780) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %780, i8 0, i64 24, i1 false) #13
  %781 = load %"class.base::ListValue"*, %"class.base::ListValue"** %60, align 8
  %782 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 8
  %783 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %781, %"class.std::__1::unique_ptr"* %782, %"class.std::__1::basic_string.44"* nonnull %63)
  br i1 %783, label %784, label %786

784:                                              ; preds = %779
  %785 = bitcast %"class.std::__1::basic_string.44"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %797

786:                                              ; preds = %779
  %787 = bitcast %"class.std::__1::basic_string.44"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %787) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %64, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.29, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %63)
  %788 = bitcast %"class.std::__1::basic_string.44"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %789 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %788, i64 0, i32 1, i32 1
  %790 = load i8, i8* %789, align 1
  %791 = icmp slt i8 %790, 0
  br i1 %791, label %792, label %795

792:                                              ; preds = %786
  %793 = bitcast %"class.std::__1::basic_string.44"* %63 to i8**
  %794 = load i8*, i8** %793, align 8
  call void @_ZdlPv(i8* %794) #14
  br label %795

795:                                              ; preds = %792, %786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %780, i8* nonnull align 8 %787, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %787) #13
  %796 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %63)
  br label %797

797:                                              ; preds = %784, %795
  %798 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %785, %784 ], [ %788, %795 ]
  %799 = phi i32 [ 0, %784 ], [ 1, %795 ]
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %798, i64 0, i32 1, i32 1
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %797
  %804 = bitcast %"class.std::__1::basic_string.44"* %63 to i8**
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #14
  br label %806

806:                                              ; preds = %803, %797
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %780) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %731) #13
  %807 = icmp eq i32 %799, 0
  br i1 %807, label %808, label %978

808:                                              ; preds = %806, %727
  %809 = bitcast %"class.base::Value"** %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %809) #13
  store %"class.base::Value"* null, %"class.base::Value"** %65, align 8
  %810 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10extensions3api15content_scripts13ContentScript6kRunAtE, i64 0, i64 0), i64 6, %"class.base::Value"** nonnull %65) #13
  br i1 %810, label %811, label %974

811:                                              ; preds = %808
  %812 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %812) #13
  %813 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %814 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %812, i8 0, i64 24, i1 false) #13
  %815 = load %"class.base::Value"*, %"class.base::Value"** %65, align 8
  %816 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %815, %"class.std::__1::basic_string"* nonnull %66) #13
  br i1 %816, label %869, label %817

817:                                              ; preds = %811
  %818 = getelementptr inbounds [15 x i8], [15 x i8]* %67, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %818)
  %819 = bitcast %"class.std::__1::basic_string.44"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %819) #13
  %820 = load %"class.base::Value"*, %"class.base::Value"** %65, align 8
  %821 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %820, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %822 = load i64, i64* %821, align 8
  %823 = trunc i64 %822 to i8
  %824 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %823) #13
  %825 = icmp eq i8* %824, null
  br i1 %825, label %828, label %826

826:                                              ; preds = %817
  %827 = call i64 @strlen(i8* nonnull %824) #13
  br label %831

828:                                              ; preds = %817
  %829 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %829) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #13
  %830 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %829) #13
  br label %831

831:                                              ; preds = %826, %828
  %832 = phi i64 [ 0, %828 ], [ %827, %826 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %68, i8* %824, i64 %832) #13
  %833 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %68, i64 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.31, i64 0, i64 0), i64 30) #13, !noalias !33
  %834 = bitcast %"class.std::__1::basic_string.44"* %833 to i8*
  %835 = bitcast %"class.std::__1::basic_string.44"* %833 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %833, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %838 = bitcast i64* %837 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %818, i8* align 8 %838, i64 15, i1 false)
  %839 = getelementptr inbounds i8, i8* %834, i64 23
  %840 = load i8, i8* %839, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %834, i8 0, i64 24, i1 false) #13, !noalias !33
  %841 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %842 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %841, i64 0, i32 1, i32 1
  %843 = load i8, i8* %842, align 1
  %844 = icmp slt i8 %843, 0
  br i1 %844, label %845, label %848

845:                                              ; preds = %831
  %846 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %847 = load i8*, i8** %846, align 8
  call void @_ZdlPv(i8* %847) #14
  br label %848

848:                                              ; preds = %845, %831
  %849 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %836, i64* %849, align 8
  %850 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %851 = bitcast i64* %850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %851, i8* nonnull align 8 %818, i64 15, i1 false)
  %852 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %853 = getelementptr inbounds i8, i8* %852, i64 23
  store i8 %840, i8* %853, align 1
  %854 = bitcast %"class.std::__1::basic_string.44"* %68 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %855 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %854, i64 0, i32 1, i32 1
  %856 = load i8, i8* %855, align 1
  %857 = icmp slt i8 %856, 0
  br i1 %857, label %858, label %861

858:                                              ; preds = %848
  %859 = bitcast %"class.std::__1::basic_string.44"* %68 to i8**
  %860 = load i8*, i8** %859, align 8
  call void @_ZdlPv(i8* %860) #14
  br label %861

861:                                              ; preds = %848, %858
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %819) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %818)
  %862 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %863 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %862, i64 0, i32 1, i32 0
  %864 = load i8, i8* %863, align 1
  %865 = icmp slt i8 %864, 0
  br i1 %865, label %866, label %868

866:                                              ; preds = %861
  %867 = load i8*, i8** %813, align 8
  call void @_ZdlPv(i8* %867) #14
  br label %868

868:                                              ; preds = %861, %866
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %812) #13
  br label %975

869:                                              ; preds = %811
  %870 = call i32 @_ZN10extensions3api15content_scripts10ParseRunAtERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %66)
  store i32 %870, i32* %119, align 8
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %966

872:                                              ; preds = %869
  %873 = getelementptr inbounds [15 x i8], [15 x i8]* %69, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %873)
  %874 = bitcast %"class.std::__1::basic_string.44"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #13
  %875 = bitcast %"class.std::__1::basic_string.44"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #13
  %876 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %877 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %876, i64 0, i32 1, i32 0
  %878 = load i8, i8* %877, align 1
  %879 = icmp slt i8 %878, 0
  %880 = load i8*, i8** %813, align 8
  %881 = select i1 %879, i8* %880, i8* %812
  %882 = load i64, i64* %814, align 8
  %883 = zext i8 %878 to i64
  %884 = select i1 %879, i64 %882, i64 %883
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %71, i8* %881, i64 %884) #13
  %885 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %71, i64 0, i16* getelementptr inbounds ([79 x i16], [79 x i16]* @.str.32, i64 0, i64 0), i64 78) #13, !noalias !36
  %886 = bitcast %"class.std::__1::basic_string.44"* %885 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %874, i8* align 8 %886, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %886, i8 0, i64 24, i1 false) #13, !noalias !36
  %887 = bitcast %"class.std::__1::basic_string.44"* %70 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %888 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %887, i64 0, i32 1, i32 1
  %889 = load i8, i8* %888, align 1, !noalias !39
  %890 = icmp slt i8 %889, 0
  br i1 %890, label %891, label %898

891:                                              ; preds = %872
  %892 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %893 = load i64, i64* %892, align 8, !noalias !39
  %894 = and i64 %893, 9223372036854775807
  %895 = add nsw i64 %894, -1
  %896 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %897 = load i64, i64* %896, align 8, !noalias !39
  br label %900

898:                                              ; preds = %872
  %899 = zext i8 %889 to i64
  br label %900

900:                                              ; preds = %898, %891
  %901 = phi i64 [ %895, %891 ], [ 10, %898 ]
  %902 = phi i64 [ %897, %891 ], [ %899, %898 ]
  %903 = icmp eq i64 %901, %902
  br i1 %903, label %919, label %904

904:                                              ; preds = %900
  %905 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %906 = load i16*, i16** %905, align 8, !noalias !39
  %907 = bitcast %"class.std::__1::basic_string.44"* %70 to i16*
  %908 = select i1 %890, i16* %906, i16* %907
  %909 = getelementptr inbounds i16, i16* %908, i64 %902
  store i16 34, i16* %909, align 2, !noalias !39
  %910 = add i64 %902, 1
  %911 = load i8, i8* %888, align 1, !noalias !39
  %912 = icmp slt i8 %911, 0
  br i1 %912, label %913, label %915

913:                                              ; preds = %904
  %914 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %910, i64* %914, align 8, !noalias !39
  br label %917

915:                                              ; preds = %904
  %916 = trunc i64 %910 to i8
  store i8 %916, i8* %888, align 1, !noalias !39
  br label %917

917:                                              ; preds = %915, %913
  %918 = getelementptr inbounds i16, i16* %908, i64 %910
  store i16 0, i16* %918, align 2, !noalias !39
  br label %922

919:                                              ; preds = %900
  %920 = add i64 %902, 1
  %921 = sub i64 %920, %901
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* nonnull %70, i64 %901, i64 %921, i64 %902, i64 %902, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.33, i64 0, i64 0)) #13, !noalias !39
  br label %922

922:                                              ; preds = %917, %919
  %923 = bitcast %"class.std::__1::basic_string.44"* %70 to i8**
  %924 = bitcast %"class.std::__1::basic_string.44"* %70 to i64*
  %925 = load i64, i64* %924, align 8
  %926 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %927 = bitcast i64* %926 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %873, i8* align 8 %927, i64 15, i1 false)
  %928 = getelementptr inbounds i8, i8* %874, i64 23
  %929 = load i8, i8* %928, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %874, i8 0, i64 24, i1 false) #13, !noalias !39
  %930 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %931 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %930, i64 0, i32 1, i32 1
  %932 = load i8, i8* %931, align 1
  %933 = icmp slt i8 %932, 0
  br i1 %933, label %940, label %934

934:                                              ; preds = %922
  %935 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %925, i64* %935, align 8
  %936 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %937 = bitcast i64* %936 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %937, i8* nonnull align 8 %873, i64 15, i1 false)
  %938 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %939 = getelementptr inbounds i8, i8* %938, i64 23
  store i8 %929, i8* %939, align 1
  br label %952

940:                                              ; preds = %922
  %941 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %942 = load i8*, i8** %941, align 8
  call void @_ZdlPv(i8* %942) #14
  %943 = load i8, i8* %888, align 1
  %944 = icmp slt i8 %943, 0
  %945 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %925, i64* %945, align 8
  %946 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %947 = bitcast i64* %946 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %947, i8* nonnull align 8 %873, i64 15, i1 false)
  %948 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %949 = getelementptr inbounds i8, i8* %948, i64 23
  store i8 %929, i8* %949, align 1
  br i1 %944, label %950, label %952

950:                                              ; preds = %940
  %951 = load i8*, i8** %923, align 8
  call void @_ZdlPv(i8* %951) #14
  br label %952

952:                                              ; preds = %934, %940, %950
  %953 = bitcast %"class.std::__1::basic_string.44"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %954 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %953, i64 0, i32 1, i32 1
  %955 = load i8, i8* %954, align 1
  %956 = icmp slt i8 %955, 0
  br i1 %956, label %957, label %960

957:                                              ; preds = %952
  %958 = bitcast %"class.std::__1::basic_string.44"* %71 to i8**
  %959 = load i8*, i8** %958, align 8
  call void @_ZdlPv(i8* %959) #14
  br label %960

960:                                              ; preds = %952, %957
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %873)
  %961 = load i8, i8* %877, align 1
  %962 = icmp slt i8 %961, 0
  br i1 %962, label %963, label %965

963:                                              ; preds = %960
  %964 = load i8*, i8** %813, align 8
  call void @_ZdlPv(i8* %964) #14
  br label %965

965:                                              ; preds = %960, %963
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %812) #13
  br label %975

966:                                              ; preds = %869
  %967 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %968 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %967, i64 0, i32 1, i32 0
  %969 = load i8, i8* %968, align 1
  %970 = icmp slt i8 %969, 0
  br i1 %970, label %971, label %973

971:                                              ; preds = %966
  %972 = load i8*, i8** %813, align 8
  call void @_ZdlPv(i8* %972) #14
  br label %973

973:                                              ; preds = %966, %971
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %812) #13
  br label %975

974:                                              ; preds = %808
  store i32 0, i32* %119, align 8
  br label %975

975:                                              ; preds = %965, %868, %973, %974, %778
  %976 = phi i8* [ %731, %778 ], [ %809, %974 ], [ %809, %973 ], [ %809, %868 ], [ %809, %965 ]
  %977 = phi i1 [ false, %778 ], [ true, %974 ], [ true, %973 ], [ false, %868 ], [ false, %965 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %976) #13
  br label %978

978:                                              ; preds = %806, %975, %697
  %979 = phi i8* [ %650, %697 ], [ %728, %975 ], [ %728, %806 ]
  %980 = phi i1 [ false, %697 ], [ %977, %975 ], [ false, %806 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %979) #13
  br label %981

981:                                              ; preds = %978, %725
  %982 = phi i1 [ false, %725 ], [ %980, %978 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %647) #13
  br label %983

983:                                              ; preds = %634, %981
  %984 = phi i1 [ %982, %981 ], [ false, %634 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %580) #13
  br label %985

985:                                              ; preds = %567, %983
  %986 = phi i1 [ %984, %983 ], [ false, %567 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %513) #13
  br label %987

987:                                              ; preds = %985, %500, %415
  %988 = phi i8* [ %368, %415 ], [ %446, %500 ], [ %446, %985 ]
  %989 = phi i1 [ false, %415 ], [ false, %500 ], [ %986, %985 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %988) #13
  br label %990

990:                                              ; preds = %443, %987, %334
  %991 = phi i8* [ %287, %334 ], [ %365, %987 ], [ %365, %443 ]
  %992 = phi i1 [ false, %334 ], [ %989, %987 ], [ false, %443 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %991) #13
  br label %993

993:                                              ; preds = %362, %990, %253
  %994 = phi i8* [ %206, %253 ], [ %284, %990 ], [ %284, %362 ]
  %995 = phi i1 [ false, %253 ], [ %992, %990 ], [ false, %362 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %994) #13
  br label %996

996:                                              ; preds = %993, %281
  %997 = phi i1 [ false, %281 ], [ %995, %993 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13
  br label %998

998:                                              ; preds = %172, %200, %996, %122
  %999 = phi i1 [ false, %122 ], [ %997, %996 ], [ false, %200 ], [ false, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  br label %1000

1000:                                             ; preds = %998, %116
  %1001 = phi i1 [ %999, %998 ], [ false, %116 ]
  ret i1 %1001
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* sret, i8*, i64) local_unnamed_addr #3

declare i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"**) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.44", align 8
  %8 = alloca %"class.std::__1::basic_string.44", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %14, %12
  br i1 %15, label %28, label %16

16:                                               ; preds = %3, %26
  %17 = phi %"class.std::__1::basic_string"* [ %18, %26 ], [ %14, %3 ]
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 -1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %23, %16
  %27 = icmp eq %"class.std::__1::basic_string"* %18, %12
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %3
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %13, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #13
  %31 = bitcast %"class.std::__1::basic_string.44"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  %34 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %35 = tail call %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %34) #13
  %36 = icmp eq %"class.std::__1::vector.36"* %35, null
  %37 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %35, i64 0, i32 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = bitcast %"class.std::__1::vector.36"* %35 to i64*
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %35, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  br label %45

45:                                               ; preds = %131, %28
  %46 = phi i64 [ 0, %28 ], [ %132, %131 ]
  br i1 %36, label %52, label %47

47:                                               ; preds = %45
  %48 = load i64, i64* %38, align 8
  %49 = load i64, i64* %39, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 5
  br label %52

52:                                               ; preds = %45, %47
  %53 = phi i64 [ %51, %47 ], [ 0, %45 ]
  %54 = icmp ult i64 %46, %53
  br i1 %54, label %55, label %134

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  br i1 %36, label %62, label %56

56:                                               ; preds = %55
  %57 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %58 = load i64, i64* %38, align 8
  %59 = ptrtoint %"class.base::Value"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 5
  br label %62

62:                                               ; preds = %55, %56
  %63 = phi %"class.base::Value"* [ %57, %56 ], [ null, %55 ]
  %64 = phi i64 [ %61, %56 ], [ 0, %55 ]
  %65 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %63, i64 %64
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %63, %"class.base::Value"* %63, %"class.base::Value"* %65) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %41, i64 24, i1 false) #13
  %66 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %4, i64 %46) #13
  %67 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  %68 = call zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS6_IDsNS7_IDsEENS9_IDsEEEE(%"class.base::Value"* dereferenceable(32) %67, %"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string.44"* nonnull %7) #13
  br i1 %68, label %122, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::basic_string.44"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  %71 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  %73 = bitcast %"class.std::__1::basic_string.44"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i16*, i16** %32, align 8
  %78 = bitcast %"class.std::__1::basic_string.44"* %7 to i16*
  %79 = select i1 %76, i16* %77, i16* %78
  %80 = load i64, i64* %33, align 8
  %81 = zext i8 %75 to i64
  %82 = select i1 %76, i64 %80, i64 %81
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %79, i64 %82) #13
  %83 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = select i1 %86, i8* %88, i8* %72
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i64 %46, i8* %89) #13
  %90 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = select i1 %93, i8* %95, i8* %71
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %92 to i64
  %100 = select i1 %93, i64 %98, i64 %99
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %8, i8* %96, i64 %100) #13
  %101 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %69
  %106 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %105, %69
  %109 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %70, i64 24, i1 false) #13
  %110 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  store i8 0, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string.44"* %8 to i16*
  store i16 0, i16* %112, align 8
  %113 = load i8, i8* %91, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %108, %115
  %118 = load i8, i8* %84, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %133

120:                                              ; preds = %117
  %121 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %121) #14
  br label %133

122:                                              ; preds = %62
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %125 = icmp ult %"class.std::__1::basic_string"* %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %29, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #13
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 1
  %129 = ptrtoint %"class.std::__1::basic_string"* %128 to i64
  store i64 %129, i64* %44, align 8
  br label %131

130:                                              ; preds = %122
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #13
  br label %131

131:                                              ; preds = %126, %130
  %132 = add nuw i64 %46, 1
  br label %45

133:                                              ; preds = %120, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  br label %136

134:                                              ; preds = %52
  %135 = bitcast %"class.std::__1::basic_string.44"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %136

136:                                              ; preds = %134, %133
  %137 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %135, %134 ], [ %73, %133 ]
  %138 = phi i1 [ true, %134 ], [ false, %133 ]
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %137, i64 0, i32 1, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = bitcast %"class.std::__1::basic_string.44"* %7 to i8**
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #14
  br label %145

145:                                              ; preds = %136, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %146 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  %151 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %145, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* noalias sret, i16*, %"class.std::__1::basic_string.44"* dereferenceable(24)) local_unnamed_addr #1 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.44"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = load i16, i16* %1, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %3 ]
  %12 = phi i16* [ %14, %10 ], [ %1, %3 ]
  %13 = add i64 %11, 1
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %3
  %18 = phi i64 [ 0, %3 ], [ %13, %10 ]
  %19 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = add i64 %26, %18
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #15
  unreachable

31:                                               ; preds = %17
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %18 to i8
  %35 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %49

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #14
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %49

49:                                               ; preds = %43, %33
  %50 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %51 = icmp eq i64 %18, 0
  br i1 %51, label %208, label %52

52:                                               ; preds = %49
  store i16 %8, i16* %50, align 2
  %53 = add i64 %18, -1
  %54 = getelementptr inbounds i16, i16* %1, i64 1
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %206, label %56

56:                                               ; preds = %52
  %57 = icmp ult i64 %53, 16
  br i1 %57, label %153, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %50, i64 1
  %60 = getelementptr i16, i16* %50, i64 %18
  %61 = getelementptr i16, i16* %1, i64 %18
  %62 = icmp ult i16* %59, %61
  %63 = icmp ult i16* %54, %60
  %64 = and i1 %62, %63
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = and i64 %53, -16
  %67 = getelementptr i16, i16* %54, i64 %66
  %68 = sub i64 %53, %66
  %69 = getelementptr i16, i16* %50, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %130, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  %77 = getelementptr i16, i16* %50, i64 1
  %78 = getelementptr i16, i16* %50, i64 1
  %79 = getelementptr i16, i16* %50, i64 1
  %80 = getelementptr i16, i16* %50, i64 1
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ 0, %75 ], [ %127, %81 ]
  %83 = phi i64 [ %76, %75 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %54, i64 %82
  %85 = getelementptr inbounds i16, i16* %77, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !42
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !42
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !45, !noalias !42
  %92 = getelementptr inbounds i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !45, !noalias !42
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %54, i64 %94
  %96 = getelementptr inbounds i16, i16* %78, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !42
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !42
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !45, !noalias !42
  %103 = getelementptr inbounds i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !45, !noalias !42
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %54, i64 %105
  %107 = getelementptr inbounds i16, i16* %79, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !42
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !42
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !45, !noalias !42
  %114 = getelementptr inbounds i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !45, !noalias !42
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %54, i64 %116
  %118 = getelementptr inbounds i16, i16* %80, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !42
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !42
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !45, !noalias !42
  %125 = getelementptr inbounds i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !45, !noalias !42
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !47

130:                                              ; preds = %81, %65
  %131 = phi i64 [ 0, %65 ], [ %127, %81 ]
  %132 = icmp eq i64 %73, 0
  br i1 %132, label %151, label %133

133:                                              ; preds = %130
  %134 = getelementptr i16, i16* %50, i64 1
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %131, %133 ], [ %148, %135 ]
  %137 = phi i64 [ %73, %133 ], [ %149, %135 ]
  %138 = getelementptr i16, i16* %54, i64 %136
  %139 = getelementptr inbounds i16, i16* %134, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !42
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !42
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !45, !noalias !42
  %146 = getelementptr inbounds i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !45, !noalias !42
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !49

151:                                              ; preds = %135, %130
  %152 = icmp eq i64 %53, %66
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %58, %56
  %154 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %67, %151 ]
  %155 = phi i64 [ %53, %58 ], [ %53, %56 ], [ %68, %151 ]
  %156 = phi i16* [ %50, %58 ], [ %50, %56 ], [ %69, %151 ]
  %157 = add i64 %155, -1
  %158 = and i64 %155, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i16* [ %168, %160 ], [ %154, %153 ]
  %162 = phi i64 [ %167, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %165, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = load i16, i16* %161, align 2
  store i16 %166, i16* %165, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %161, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !51

171:                                              ; preds = %160, %153
  %172 = phi i16* [ %154, %153 ], [ %168, %160 ]
  %173 = phi i64 [ %155, %153 ], [ %167, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %165, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i16* [ %204, %176 ], [ %172, %171 ]
  %178 = phi i64 [ %203, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %201, %176 ], [ %174, %171 ]
  %180 = getelementptr inbounds i16, i16* %179, i64 1
  %181 = load i16, i16* %177, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 2
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 3
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 4
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 5
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 6
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 7
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %177, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 8
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %177, i64 8
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %176, !llvm.loop !52

206:                                              ; preds = %171, %176, %151, %52
  %207 = load i8, i8* %20, align 1
  br label %208

208:                                              ; preds = %206, %49
  %209 = phi i8 [ %207, %206 ], [ %21, %49 ]
  %210 = getelementptr inbounds i16, i16* %50, i64 %18
  store i16 0, i16* %210, align 2
  %211 = icmp slt i8 %209, 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string.44"* %2 to i16*
  %215 = select i1 %211, i16* %213, i16* %214
  %216 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %216, i64 0, i32 1, i32 1
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %208
  %221 = load i64, i64* %6, align 8
  %222 = and i64 %221, 9223372036854775807
  %223 = add nsw i64 %222, -1
  %224 = load i64, i64* %5, align 8
  br label %227

225:                                              ; preds = %208
  %226 = zext i8 %218 to i64
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64 [ %223, %220 ], [ 10, %225 ]
  %229 = phi i64 [ %224, %220 ], [ %226, %225 ]
  %230 = sub i64 %228, %229
  %231 = icmp ult i64 %230, %26
  br i1 %231, label %391, label %232

232:                                              ; preds = %227
  %233 = icmp eq i64 %26, 0
  br i1 %233, label %394, label %234

234:                                              ; preds = %232
  %235 = load i16*, i16** %4, align 8
  %236 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  %237 = select i1 %219, i16* %235, i16* %236
  %238 = getelementptr inbounds i16, i16* %237, i64 %229
  %239 = icmp ult i64 %26, 16
  br i1 %239, label %329, label %240

240:                                              ; preds = %234
  %241 = add i64 %26, %229
  %242 = getelementptr i16, i16* %237, i64 %241
  %243 = getelementptr i16, i16* %215, i64 %26
  %244 = icmp ult i16* %238, %243
  %245 = icmp ult i16* %215, %242
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %240
  %248 = and i64 %26, -16
  %249 = sub i64 %26, %248
  %250 = getelementptr i16, i16* %215, i64 %248
  %251 = getelementptr i16, i16* %238, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %215, i64 %260
  %263 = getelementptr i16, i16* %238, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !53
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !53
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !56, !noalias !53
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !56, !noalias !53
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %215, i64 %272
  %274 = getelementptr i16, i16* %238, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !53
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !53
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !56, !noalias !53
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !56, !noalias !53
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %215, i64 %283
  %285 = getelementptr i16, i16* %238, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !53
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !53
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !56, !noalias !53
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !56, !noalias !53
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %215, i64 %294
  %296 = getelementptr i16, i16* %238, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !53
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !53
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !56, !noalias !53
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !56, !noalias !53
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !58

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %215, i64 %312
  %315 = getelementptr i16, i16* %238, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !53
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !53
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !56, !noalias !53
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !56, !noalias !53
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !59

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %26, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %240, %234
  %330 = phi i64 [ %26, %240 ], [ %26, %234 ], [ %249, %327 ]
  %331 = phi i16* [ %215, %240 ], [ %215, %234 ], [ %250, %327 ]
  %332 = phi i16* [ %238, %240 ], [ %238, %234 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !60

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !61

382:                                              ; preds = %347, %352, %327
  %383 = add i64 %229, %26
  %384 = load i8, i8* %217, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %382
  store i64 %383, i64* %5, align 8
  br label %389

387:                                              ; preds = %382
  %388 = trunc i64 %383 to i8
  store i8 %388, i8* %217, align 1
  br label %389

389:                                              ; preds = %387, %386
  %390 = getelementptr inbounds i16, i16* %237, i64 %383
  store i16 0, i16* %390, align 2
  br label %394

391:                                              ; preds = %227
  %392 = add i64 %229, %26
  %393 = sub i64 %392, %228
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %228, i64 %393, i64 %229, i64 %229, i64 0, i64 %26, i16* %215) #13
  br label %394

394:                                              ; preds = %232, %389, %391
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"*, %"class.std::__1::basic_string.44"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.44"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.44"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.44"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.44"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.44"*
  %35 = icmp ugt %"class.std::__1::basic_string.44"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !62
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !62
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !65, !noalias !62
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !65, !noalias !62
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !62
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !62
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !65, !noalias !62
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !65, !noalias !62
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !62
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !62
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !65, !noalias !62
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !65, !noalias !62
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !62
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !62
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !65, !noalias !62
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !65, !noalias !62
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !67

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !62
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !62
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !65, !noalias !62
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !65, !noalias !62
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !68

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !69

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !70

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #15
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !71
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !71
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !74, !noalias !71
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !74, !noalias !71
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !71
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !71
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !74, !noalias !71
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !74, !noalias !71
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !71
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !71
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !74, !noalias !71
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !74, !noalias !71
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !71
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !71
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !74, !noalias !71
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !74, !noalias !71
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !76

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !71
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !71
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !74, !noalias !71
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !74, !noalias !71
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !77

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !78

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !79

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.44"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !80
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !80
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !83, !noalias !80
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !83, !noalias !80
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !80
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !80
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !83, !noalias !80
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !83, !noalias !80
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !80
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !80
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !83, !noalias !80
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !83, !noalias !80
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !80
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !80
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !83, !noalias !80
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !83, !noalias !80
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !85

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !80
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !80
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !83, !noalias !80
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !83, !noalias !80
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !86

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !87

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !88

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::unique_ptr"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 comdat {
  %4 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %1 to i8**
  store i8* %4, i8** %7, align 8
  %8 = icmp eq %"class.std::__1::vector"* %6, null
  %9 = bitcast i8* %4 to %"class.std::__1::vector"*
  br i1 %8, label %39, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %10
  %37 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @_ZdlPv(i8* %37) #14
  %38 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  br label %39

39:                                               ; preds = %3, %36
  %40 = phi %"class.std::__1::vector"* [ %9, %3 ], [ %38, %36 ]
  %41 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %0, %"class.std::__1::vector"* %40, %"class.std::__1::basic_string.44"* %2)
  br i1 %41, label %73, label %42

42:                                               ; preds = %39
  %43 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %5, align 8
  %44 = icmp eq %"class.std::__1::vector"* %43, null
  br i1 %44, label %73, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %43, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %71, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %43, i64 0, i32 0, i32 1
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %52, %47
  br i1 %53, label %69, label %54

54:                                               ; preds = %49, %64
  %55 = phi %"class.std::__1::basic_string"* [ %56, %64 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 -1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #14
  br label %64

64:                                               ; preds = %61, %54
  %65 = icmp eq %"class.std::__1::basic_string"* %56, %47
  br i1 %65, label %66, label %54

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector"* %43 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %49
  %70 = phi i8* [ %68, %66 ], [ %50, %49 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %51, align 8
  tail call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %69, %45
  %72 = bitcast %"class.std::__1::vector"* %43 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %42, %39
  %74 = phi i1 [ true, %39 ], [ false, %42 ], [ false, %71 ]
  ret i1 %74
}

declare zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::content_scripts::ContentScript"* @_ZN10extensions3api15content_scripts13ContentScript9FromValueERKN4base5ValueEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 96) #14
  %4 = bitcast i8* %3 to %"struct.extensions::api::content_scripts::ContentScript"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 92, i1 false) #13
  %5 = ptrtoint i8* %3 to i64
  %6 = tail call zeroext i1 @_ZN10extensions3api15content_scripts13ContentScript8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32) %0, %"struct.extensions::api::content_scripts::ContentScript"* nonnull %4, %"class.std::__1::basic_string.44"* %1)
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %4) #13
  tail call void @_ZdlPv(i8* nonnull %3) #14
  br label %8

8:                                                ; preds = %2, %7
  %9 = phi i64 [ 0, %7 ], [ %5, %2 ]
  %10 = inttoptr i64 %9 to %"struct.extensions::api::content_scripts::ContentScript"*
  ret %"struct.extensions::api::content_scripts::ContentScript"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DictionaryValue"* @_ZNK10extensions3api15content_scripts13ContentScript7ToValueEv(%"struct.extensions::api::content_scripts::ContentScript"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #14
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #13
  %4 = tail call i8* @_Znwm(i64 32) #14
  %5 = bitcast i8* %4 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %5) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::basic_string"* [ %13, %11 ], [ %7, %1 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.base::ListValue"* nonnull %5) #13
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %9
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %1
  %16 = bitcast i8* %4 to %"class.base::Value"*
  %17 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api15content_scripts13ContentScript8kMatchesE, i64 0, i64 0), i64 7, %"class.base::Value"* nonnull %16) #13
  %18 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %18, align 8
  %20 = icmp eq %"class.std::__1::vector"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %15
  %22 = tail call i8* @_Znwm(i64 32) #14
  %23 = bitcast i8* %22 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %23) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %23) #13
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %21, %29
  %30 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %25, %21 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %30, %"class.base::ListValue"* nonnull %23) #13
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %32 = icmp eq %"class.std::__1::basic_string"* %31, %27
  br i1 %32, label %33, label %29

33:                                               ; preds = %29, %21
  %34 = bitcast i8* %22 to %"class.base::Value"*
  %35 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts13ContentScript15kExcludeMatchesE, i64 0, i64 0), i64 15, %"class.base::Value"* nonnull %34) #13
  br label %36

36:                                               ; preds = %15, %33
  %37 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector"* %38, null
  br i1 %39, label %55, label %40

40:                                               ; preds = %36
  %41 = tail call i8* @_Znwm(i64 32) #14
  %42 = bitcast i8* %41 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %42) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 1
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %44, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %40, %48
  %49 = phi %"class.std::__1::basic_string"* [ %50, %48 ], [ %44, %40 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %49, %"class.base::ListValue"* nonnull %42) #13
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %51 = icmp eq %"class.std::__1::basic_string"* %50, %46
  br i1 %51, label %52, label %48

52:                                               ; preds = %48, %40
  %53 = bitcast i8* %41 to %"class.base::Value"*
  %54 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN10extensions3api15content_scripts13ContentScript4kCssE, i64 0, i64 0), i64 3, %"class.base::Value"* nonnull %53) #13
  br label %55

55:                                               ; preds = %36, %52
  %56 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %56, align 8
  %58 = icmp eq %"class.std::__1::vector"* %57, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %55
  %60 = tail call i8* @_Znwm(i64 32) #14
  %61 = bitcast i8* %60 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %61) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %61) #13
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %57, i64 0, i32 0, i32 0
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %57, i64 0, i32 0, i32 1
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = icmp eq %"class.std::__1::basic_string"* %63, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"class.std::__1::basic_string"* [ %69, %67 ], [ %63, %59 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %68, %"class.base::ListValue"* nonnull %61) #13
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 1
  %70 = icmp eq %"class.std::__1::basic_string"* %69, %65
  br i1 %70, label %71, label %67

71:                                               ; preds = %67, %59
  %72 = bitcast i8* %60 to %"class.base::Value"*
  %73 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN10extensions3api15content_scripts13ContentScript3kJsE, i64 0, i64 0), i64 2, %"class.base::Value"* nonnull %72) #13
  br label %74

74:                                               ; preds = %55, %71
  %75 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = tail call i8* @_Znwm(i64 32) #14
  %80 = bitcast i8* %79 to %"class.base::Value"*
  %81 = load i8, i8* %76, align 1, !range !20
  %82 = icmp ne i8 %81, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %80, i1 zeroext %82) #13
  %83 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10extensions3api15content_scripts13ContentScript10kAllFramesE, i64 0, i64 0), i64 10, %"class.base::Value"* nonnull %80) #13
  br label %84

84:                                               ; preds = %74, %78
  %85 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = tail call i8* @_Znwm(i64 32) #14
  %90 = bitcast i8* %89 to %"class.base::Value"*
  %91 = load i8, i8* %86, align 1, !range !20
  %92 = icmp ne i8 %91, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %90, i1 zeroext %92) #13
  %93 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api15content_scripts13ContentScript22kMatchOriginAsFallbackE, i64 0, i64 0), i64 24, %"class.base::Value"* nonnull %90) #13
  br label %94

94:                                               ; preds = %84, %88
  %95 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = tail call i8* @_Znwm(i64 32) #14
  %100 = bitcast i8* %99 to %"class.base::Value"*
  %101 = load i8, i8* %96, align 1, !range !20
  %102 = icmp ne i8 %101, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %100, i1 zeroext %102) #13
  %103 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN10extensions3api15content_scripts13ContentScript16kMatchAboutBlankE, i64 0, i64 0), i64 17, %"class.base::Value"* nonnull %100) #13
  br label %104

104:                                              ; preds = %94, %98
  %105 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %106 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %105, align 8
  %107 = icmp eq %"class.std::__1::vector"* %106, null
  br i1 %107, label %123, label %108

108:                                              ; preds = %104
  %109 = tail call i8* @_Znwm(i64 32) #14
  %110 = bitcast i8* %109 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %110) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %110) #13
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %106, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %106, i64 0, i32 0, i32 1
  %114 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %113, align 8
  %115 = icmp eq %"class.std::__1::basic_string"* %112, %114
  br i1 %115, label %120, label %116

116:                                              ; preds = %108, %116
  %117 = phi %"class.std::__1::basic_string"* [ %118, %116 ], [ %112, %108 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %117, %"class.base::ListValue"* nonnull %110) #13
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 1
  %119 = icmp eq %"class.std::__1::basic_string"* %118, %114
  br i1 %119, label %120, label %116

120:                                              ; preds = %116, %108
  %121 = bitcast i8* %109 to %"class.base::Value"*
  %122 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kIncludeGlobsE, i64 0, i64 0), i64 13, %"class.base::Value"* nonnull %121) #13
  br label %123

123:                                              ; preds = %104, %120
  %124 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %125 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %124, align 8
  %126 = icmp eq %"class.std::__1::vector"* %125, null
  br i1 %126, label %142, label %127

127:                                              ; preds = %123
  %128 = tail call i8* @_Znwm(i64 32) #14
  %129 = bitcast i8* %128 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %129) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %129) #13
  %130 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %125, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %125, i64 0, i32 0, i32 1
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %134 = icmp eq %"class.std::__1::basic_string"* %131, %133
  br i1 %134, label %139, label %135

135:                                              ; preds = %127, %135
  %136 = phi %"class.std::__1::basic_string"* [ %137, %135 ], [ %131, %127 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %136, %"class.base::ListValue"* nonnull %129) #13
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 1
  %138 = icmp eq %"class.std::__1::basic_string"* %137, %133
  br i1 %138, label %139, label %135

139:                                              ; preds = %135, %127
  %140 = bitcast i8* %128 to %"class.base::Value"*
  %141 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kExcludeGlobsE, i64 0, i64 0), i64 13, %"class.base::Value"* nonnull %140) #13
  br label %142

142:                                              ; preds = %123, %139
  %143 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %0, i64 0, i32 9
  %144 = load i32, i32* %143, align 8
  switch i32 %144, label %147 [
    i32 0, label %153
    i32 1, label %148
    i32 2, label %145
    i32 3, label %146
  ]

145:                                              ; preds = %142
  br label %148

146:                                              ; preds = %142
  br label %148

147:                                              ; preds = %142
  br label %148

148:                                              ; preds = %142, %145, %146, %147
  %149 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %147 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), %146 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), %145 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %142 ]
  %150 = tail call i8* @_Znwm(i64 32) #14
  %151 = bitcast i8* %150 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1EPKc(%"class.base::Value"* nonnull %151, i8* nonnull %149) #13
  %152 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10extensions3api15content_scripts13ContentScript6kRunAtE, i64 0, i64 0), i64 6, %"class.base::Value"* nonnull %151) #13
  br label %153

153:                                              ; preds = %142, %148
  ret %"class.base::DictionaryValue"* %3
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api15content_scripts13ContentScript19ParseFromDictionaryERKN4base15DictionaryValueENS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS2_PNS8_12basic_stringIDsNS9_IDsEENS8_9allocatorIDsEEEEPNS8_6vectorISB_NSF_ISB_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, %"struct.extensions::api::content_scripts::ContentScript"*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #1 align 2 {
  %7 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 6, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %8 = icmp eq %"class.base::Value"* %7, null
  br i1 %8, label %859, label %9

9:                                                ; preds = %6
  %10 = tail call dereferenceable(32) %"class.base::DictionaryValue"* @_ZN4base5Value17AsDictionaryValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %7) #13
  %11 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 9
  store i32 0, i32* %11, align 8
  %12 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api15content_scripts13ContentScript8kMatchesE, i64 0, i64 0), i64 7, i8 zeroext 7, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %13 = icmp eq %"class.base::Value"* %12, null
  br i1 %13, label %89, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 0
  %16 = tail call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %12) #13
  %17 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %16, %"class.std::__1::vector"* %15, %"class.std::__1::basic_string.44"* %4) #13
  br i1 %17, label %160, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %20 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %21, align 8
  %23 = icmp eq %"class.base::BasicStringPiece"* %20, %22
  %24 = ptrtoint %"class.base::BasicStringPiece"* %22 to i64
  br i1 %23, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api15content_scripts13ContentScript8kMatchesE, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 1
  store i64 7, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 1
  %29 = ptrtoint %"class.base::BasicStringPiece"* %28 to i64
  %30 = bitcast %"class.base::BasicStringPiece"** %19 to i64*
  store i64 %29, i64* %30, align 8
  br label %89

31:                                               ; preds = %18
  %32 = ptrtoint %"class.base::BasicStringPiece"* %20 to i64
  %33 = bitcast %"class.base::BasicStringPiece"** %19 to i64*
  %34 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 4
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 1152921504606846975
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #15
  unreachable

42:                                               ; preds = %31
  %43 = bitcast %"class.base::BasicStringPiece"** %21 to i64*
  %44 = sub i64 %24, %35
  %45 = ashr exact i64 %44, 4
  %46 = icmp ult i64 %45, 576460752303423487
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 3
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 1152921504606846975
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #15
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 1152921504606846975, %42 ]
  %57 = shl i64 %56, 4
  %58 = tail call i8* @_Znwm(i64 %57) #14
  %59 = bitcast i8* %58 to %"class.base::BasicStringPiece"*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"class.base::BasicStringPiece"* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 %37
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 %61
  %65 = ptrtoint %"class.base::BasicStringPiece"* %64 to i64
  %66 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api15content_scripts13ContentScript8kMatchesE, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 %37, i32 1
  store i64 7, i64* %67, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 1
  %69 = ptrtoint %"class.base::BasicStringPiece"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %71 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %70, align 8
  %72 = load i64, i64* %33, align 8
  %73 = ptrtoint %"class.base::BasicStringPiece"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 4
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %76
  %78 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %60
  %81 = bitcast %"class.base::BasicStringPiece"* %77 to i8*
  %82 = bitcast %"class.base::BasicStringPiece"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #13
  %83 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %70, align 8
  br label %84

84:                                               ; preds = %80, %60
  %85 = phi %"class.base::BasicStringPiece"* [ %71, %60 ], [ %83, %80 ]
  store i64 %78, i64* %34, align 8
  store i64 %69, i64* %33, align 8
  store i64 %65, i64* %43, align 8
  %86 = icmp eq %"class.base::BasicStringPiece"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.base::BasicStringPiece"* %85 to i8*
  tail call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %9, %25, %84, %87
  %90 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %91 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %92, align 8
  %94 = icmp eq %"class.base::BasicStringPiece"* %91, %93
  %95 = ptrtoint %"class.base::BasicStringPiece"* %93 to i64
  br i1 %94, label %102, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 0, i32 0
  store i8* %1, i8** %97, align 8
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 0, i32 1
  store i64 %2, i64* %98, align 8
  %99 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %91, i64 1
  %100 = ptrtoint %"class.base::BasicStringPiece"* %99 to i64
  %101 = bitcast %"class.base::BasicStringPiece"** %90 to i64*
  store i64 %100, i64* %101, align 8
  br label %859

102:                                              ; preds = %89
  %103 = ptrtoint %"class.base::BasicStringPiece"* %91 to i64
  %104 = bitcast %"class.base::BasicStringPiece"** %90 to i64*
  %105 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = ashr exact i64 %107, 4
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %102
  %112 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #15
  unreachable

113:                                              ; preds = %102
  %114 = bitcast %"class.base::BasicStringPiece"** %92 to i64*
  %115 = sub i64 %95, %106
  %116 = ashr exact i64 %115, 4
  %117 = icmp ult i64 %116, 576460752303423487
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = ashr exact i64 %115, 3
  %120 = icmp ult i64 %119, %109
  %121 = select i1 %120, i64 %109, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 1152921504606846975
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  tail call void @abort() #15
  unreachable

126:                                              ; preds = %123, %113
  %127 = phi i64 [ %121, %123 ], [ 1152921504606846975, %113 ]
  %128 = shl i64 %127, 4
  %129 = tail call i8* @_Znwm(i64 %128) #14
  %130 = bitcast i8* %129 to %"class.base::BasicStringPiece"*
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi %"class.base::BasicStringPiece"* [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 %108
  %135 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 %132
  %136 = ptrtoint %"class.base::BasicStringPiece"* %135 to i64
  %137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %134, i64 0, i32 0
  store i8* %1, i8** %137, align 8
  %138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 %108, i32 1
  store i64 %2, i64* %138, align 8
  %139 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %134, i64 1
  %140 = ptrtoint %"class.base::BasicStringPiece"* %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %142 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %141, align 8
  %143 = load i64, i64* %104, align 8
  %144 = ptrtoint %"class.base::BasicStringPiece"* %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 4
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %134, i64 %147
  %149 = ptrtoint %"class.base::BasicStringPiece"* %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %131
  %152 = bitcast %"class.base::BasicStringPiece"* %148 to i8*
  %153 = bitcast %"class.base::BasicStringPiece"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 %145, i1 false) #13
  %154 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %141, align 8
  br label %155

155:                                              ; preds = %151, %131
  %156 = phi %"class.base::BasicStringPiece"* [ %142, %131 ], [ %154, %151 ]
  store i64 %149, i64* %105, align 8
  store i64 %140, i64* %104, align 8
  store i64 %136, i64* %114, align 8
  %157 = icmp eq %"class.base::BasicStringPiece"* %156, null
  br i1 %157, label %859, label %158

158:                                              ; preds = %155
  %159 = bitcast %"class.base::BasicStringPiece"* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #14
  br label %859

160:                                              ; preds = %14
  %161 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 1
  %162 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts13ContentScript15kExcludeMatchesE, i64 0, i64 0), i64 15, %"class.std::__1::unique_ptr"* %161, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %162, label %234, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %165 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %166, align 8
  %168 = icmp eq %"class.base::BasicStringPiece"* %165, %167
  %169 = ptrtoint %"class.base::BasicStringPiece"* %167 to i64
  br i1 %168, label %176, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 0, i32 0
  store i8* %1, i8** %171, align 8
  %172 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 0, i32 1
  store i64 %2, i64* %172, align 8
  %173 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 1
  %174 = ptrtoint %"class.base::BasicStringPiece"* %173 to i64
  %175 = bitcast %"class.base::BasicStringPiece"** %164 to i64*
  store i64 %174, i64* %175, align 8
  br label %859

176:                                              ; preds = %163
  %177 = ptrtoint %"class.base::BasicStringPiece"* %165 to i64
  %178 = bitcast %"class.base::BasicStringPiece"** %164 to i64*
  %179 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %177, %180
  %182 = ashr exact i64 %181, 4
  %183 = add nsw i64 %182, 1
  %184 = icmp ugt i64 %183, 1152921504606846975
  br i1 %184, label %185, label %187

185:                                              ; preds = %176
  %186 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %186) #15
  unreachable

187:                                              ; preds = %176
  %188 = bitcast %"class.base::BasicStringPiece"** %166 to i64*
  %189 = sub i64 %169, %180
  %190 = ashr exact i64 %189, 4
  %191 = icmp ult i64 %190, 576460752303423487
  br i1 %191, label %192, label %200

192:                                              ; preds = %187
  %193 = ashr exact i64 %189, 3
  %194 = icmp ult i64 %193, %183
  %195 = select i1 %194, i64 %183, i64 %193
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %205, label %197

197:                                              ; preds = %192
  %198 = icmp ugt i64 %195, 1152921504606846975
  br i1 %198, label %199, label %200

199:                                              ; preds = %197
  tail call void @abort() #15
  unreachable

200:                                              ; preds = %197, %187
  %201 = phi i64 [ %195, %197 ], [ 1152921504606846975, %187 ]
  %202 = shl i64 %201, 4
  %203 = tail call i8* @_Znwm(i64 %202) #14
  %204 = bitcast i8* %203 to %"class.base::BasicStringPiece"*
  br label %205

205:                                              ; preds = %200, %192
  %206 = phi i64 [ %201, %200 ], [ 0, %192 ]
  %207 = phi %"class.base::BasicStringPiece"* [ %204, %200 ], [ null, %192 ]
  %208 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 %182
  %209 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 %206
  %210 = ptrtoint %"class.base::BasicStringPiece"* %209 to i64
  %211 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 0, i32 0
  store i8* %1, i8** %211, align 8
  %212 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 %182, i32 1
  store i64 %2, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 1
  %214 = ptrtoint %"class.base::BasicStringPiece"* %213 to i64
  %215 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %216 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %215, align 8
  %217 = load i64, i64* %178, align 8
  %218 = ptrtoint %"class.base::BasicStringPiece"* %216 to i64
  %219 = sub i64 %217, %218
  %220 = ashr exact i64 %219, 4
  %221 = sub nsw i64 0, %220
  %222 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %208, i64 %221
  %223 = ptrtoint %"class.base::BasicStringPiece"* %222 to i64
  %224 = icmp sgt i64 %219, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %205
  %226 = bitcast %"class.base::BasicStringPiece"* %222 to i8*
  %227 = bitcast %"class.base::BasicStringPiece"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 %219, i1 false) #13
  %228 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %215, align 8
  br label %229

229:                                              ; preds = %225, %205
  %230 = phi %"class.base::BasicStringPiece"* [ %216, %205 ], [ %228, %225 ]
  store i64 %223, i64* %179, align 8
  store i64 %214, i64* %178, align 8
  store i64 %210, i64* %188, align 8
  %231 = icmp eq %"class.base::BasicStringPiece"* %230, null
  br i1 %231, label %859, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.base::BasicStringPiece"* %230 to i8*
  tail call void @_ZdlPv(i8* %233) #14
  br label %859

234:                                              ; preds = %160
  %235 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 2
  %236 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN10extensions3api15content_scripts13ContentScript4kCssE, i64 0, i64 0), i64 3, %"class.std::__1::unique_ptr"* %235, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %236, label %308, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %239 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %241 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %240, align 8
  %242 = icmp eq %"class.base::BasicStringPiece"* %239, %241
  %243 = ptrtoint %"class.base::BasicStringPiece"* %241 to i64
  br i1 %242, label %250, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 0, i32 0
  store i8* %1, i8** %245, align 8
  %246 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 0, i32 1
  store i64 %2, i64* %246, align 8
  %247 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %239, i64 1
  %248 = ptrtoint %"class.base::BasicStringPiece"* %247 to i64
  %249 = bitcast %"class.base::BasicStringPiece"** %238 to i64*
  store i64 %248, i64* %249, align 8
  br label %859

250:                                              ; preds = %237
  %251 = ptrtoint %"class.base::BasicStringPiece"* %239 to i64
  %252 = bitcast %"class.base::BasicStringPiece"** %238 to i64*
  %253 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = sub i64 %251, %254
  %256 = ashr exact i64 %255, 4
  %257 = add nsw i64 %256, 1
  %258 = icmp ugt i64 %257, 1152921504606846975
  br i1 %258, label %259, label %261

259:                                              ; preds = %250
  %260 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %260) #15
  unreachable

261:                                              ; preds = %250
  %262 = bitcast %"class.base::BasicStringPiece"** %240 to i64*
  %263 = sub i64 %243, %254
  %264 = ashr exact i64 %263, 4
  %265 = icmp ult i64 %264, 576460752303423487
  br i1 %265, label %266, label %274

266:                                              ; preds = %261
  %267 = ashr exact i64 %263, 3
  %268 = icmp ult i64 %267, %257
  %269 = select i1 %268, i64 %257, i64 %267
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %279, label %271

271:                                              ; preds = %266
  %272 = icmp ugt i64 %269, 1152921504606846975
  br i1 %272, label %273, label %274

273:                                              ; preds = %271
  tail call void @abort() #15
  unreachable

274:                                              ; preds = %271, %261
  %275 = phi i64 [ %269, %271 ], [ 1152921504606846975, %261 ]
  %276 = shl i64 %275, 4
  %277 = tail call i8* @_Znwm(i64 %276) #14
  %278 = bitcast i8* %277 to %"class.base::BasicStringPiece"*
  br label %279

279:                                              ; preds = %274, %266
  %280 = phi i64 [ %275, %274 ], [ 0, %266 ]
  %281 = phi %"class.base::BasicStringPiece"* [ %278, %274 ], [ null, %266 ]
  %282 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 %256
  %283 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 %280
  %284 = ptrtoint %"class.base::BasicStringPiece"* %283 to i64
  %285 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 0, i32 0
  store i8* %1, i8** %285, align 8
  %286 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 %256, i32 1
  store i64 %2, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 1
  %288 = ptrtoint %"class.base::BasicStringPiece"* %287 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %290 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %289, align 8
  %291 = load i64, i64* %252, align 8
  %292 = ptrtoint %"class.base::BasicStringPiece"* %290 to i64
  %293 = sub i64 %291, %292
  %294 = ashr exact i64 %293, 4
  %295 = sub nsw i64 0, %294
  %296 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %282, i64 %295
  %297 = ptrtoint %"class.base::BasicStringPiece"* %296 to i64
  %298 = icmp sgt i64 %293, 0
  br i1 %298, label %299, label %303

299:                                              ; preds = %279
  %300 = bitcast %"class.base::BasicStringPiece"* %296 to i8*
  %301 = bitcast %"class.base::BasicStringPiece"* %290 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 %293, i1 false) #13
  %302 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %289, align 8
  br label %303

303:                                              ; preds = %299, %279
  %304 = phi %"class.base::BasicStringPiece"* [ %290, %279 ], [ %302, %299 ]
  store i64 %297, i64* %253, align 8
  store i64 %288, i64* %252, align 8
  store i64 %284, i64* %262, align 8
  %305 = icmp eq %"class.base::BasicStringPiece"* %304, null
  br i1 %305, label %859, label %306

306:                                              ; preds = %303
  %307 = bitcast %"class.base::BasicStringPiece"* %304 to i8*
  tail call void @_ZdlPv(i8* %307) #14
  br label %859

308:                                              ; preds = %234
  %309 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 3
  %310 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN10extensions3api15content_scripts13ContentScript3kJsE, i64 0, i64 0), i64 2, %"class.std::__1::unique_ptr"* %309, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %310, label %382, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %313 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %312, align 8
  %314 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %315 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %314, align 8
  %316 = icmp eq %"class.base::BasicStringPiece"* %313, %315
  %317 = ptrtoint %"class.base::BasicStringPiece"* %315 to i64
  br i1 %316, label %324, label %318

318:                                              ; preds = %311
  %319 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %313, i64 0, i32 0
  store i8* %1, i8** %319, align 8
  %320 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %313, i64 0, i32 1
  store i64 %2, i64* %320, align 8
  %321 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %313, i64 1
  %322 = ptrtoint %"class.base::BasicStringPiece"* %321 to i64
  %323 = bitcast %"class.base::BasicStringPiece"** %312 to i64*
  store i64 %322, i64* %323, align 8
  br label %859

324:                                              ; preds = %311
  %325 = ptrtoint %"class.base::BasicStringPiece"* %313 to i64
  %326 = bitcast %"class.base::BasicStringPiece"** %312 to i64*
  %327 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %325, %328
  %330 = ashr exact i64 %329, 4
  %331 = add nsw i64 %330, 1
  %332 = icmp ugt i64 %331, 1152921504606846975
  br i1 %332, label %333, label %335

333:                                              ; preds = %324
  %334 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #15
  unreachable

335:                                              ; preds = %324
  %336 = bitcast %"class.base::BasicStringPiece"** %314 to i64*
  %337 = sub i64 %317, %328
  %338 = ashr exact i64 %337, 4
  %339 = icmp ult i64 %338, 576460752303423487
  br i1 %339, label %340, label %348

340:                                              ; preds = %335
  %341 = ashr exact i64 %337, 3
  %342 = icmp ult i64 %341, %331
  %343 = select i1 %342, i64 %331, i64 %341
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %353, label %345

345:                                              ; preds = %340
  %346 = icmp ugt i64 %343, 1152921504606846975
  br i1 %346, label %347, label %348

347:                                              ; preds = %345
  tail call void @abort() #15
  unreachable

348:                                              ; preds = %345, %335
  %349 = phi i64 [ %343, %345 ], [ 1152921504606846975, %335 ]
  %350 = shl i64 %349, 4
  %351 = tail call i8* @_Znwm(i64 %350) #14
  %352 = bitcast i8* %351 to %"class.base::BasicStringPiece"*
  br label %353

353:                                              ; preds = %348, %340
  %354 = phi i64 [ %349, %348 ], [ 0, %340 ]
  %355 = phi %"class.base::BasicStringPiece"* [ %352, %348 ], [ null, %340 ]
  %356 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %355, i64 %330
  %357 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %355, i64 %354
  %358 = ptrtoint %"class.base::BasicStringPiece"* %357 to i64
  %359 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %356, i64 0, i32 0
  store i8* %1, i8** %359, align 8
  %360 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %355, i64 %330, i32 1
  store i64 %2, i64* %360, align 8
  %361 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %356, i64 1
  %362 = ptrtoint %"class.base::BasicStringPiece"* %361 to i64
  %363 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %364 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %363, align 8
  %365 = load i64, i64* %326, align 8
  %366 = ptrtoint %"class.base::BasicStringPiece"* %364 to i64
  %367 = sub i64 %365, %366
  %368 = ashr exact i64 %367, 4
  %369 = sub nsw i64 0, %368
  %370 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %356, i64 %369
  %371 = ptrtoint %"class.base::BasicStringPiece"* %370 to i64
  %372 = icmp sgt i64 %367, 0
  br i1 %372, label %373, label %377

373:                                              ; preds = %353
  %374 = bitcast %"class.base::BasicStringPiece"* %370 to i8*
  %375 = bitcast %"class.base::BasicStringPiece"* %364 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* align 8 %375, i64 %367, i1 false) #13
  %376 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %363, align 8
  br label %377

377:                                              ; preds = %373, %353
  %378 = phi %"class.base::BasicStringPiece"* [ %364, %353 ], [ %376, %373 ]
  store i64 %371, i64* %327, align 8
  store i64 %362, i64* %326, align 8
  store i64 %358, i64* %336, align 8
  %379 = icmp eq %"class.base::BasicStringPiece"* %378, null
  br i1 %379, label %859, label %380

380:                                              ; preds = %377
  %381 = bitcast %"class.base::BasicStringPiece"* %378 to i8*
  tail call void @_ZdlPv(i8* %381) #14
  br label %859

382:                                              ; preds = %308
  %383 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 4
  %384 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %10, i64 0, i32 0
  %385 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %384, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10extensions3api15content_scripts13ContentScript10kAllFramesE, i64 0, i64 0), i64 10) #13
  %386 = icmp eq %"class.base::Value"* %385, null
  br i1 %386, label %468, label %387

387:                                              ; preds = %382
  %388 = tail call i8* @_Znwm(i64 1) #14
  store i8 0, i8* %388, align 1
  %389 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10extensions3api15content_scripts13ContentScript10kAllFramesE, i64 0, i64 0), i64 10, i8* nonnull %388, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  br i1 %389, label %390, label %397

390:                                              ; preds = %387
  %391 = ptrtoint i8* %388 to i64
  %392 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %383, i64 0, i32 0, i32 0, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = bitcast %"class.std::__1::unique_ptr.9"* %383 to i64*
  store i64 %391, i64* %394, align 8
  %395 = icmp eq i8* %393, null
  br i1 %395, label %468, label %396

396:                                              ; preds = %390
  tail call void @_ZdlPv(i8* nonnull %393) #14
  br label %468

397:                                              ; preds = %387
  tail call void @_ZdlPv(i8* nonnull %388) #14
  %398 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %399 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %398, align 8
  %400 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %401 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %400, align 8
  %402 = icmp eq %"class.base::BasicStringPiece"* %399, %401
  %403 = ptrtoint %"class.base::BasicStringPiece"* %401 to i64
  br i1 %402, label %410, label %404

404:                                              ; preds = %397
  %405 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %399, i64 0, i32 0
  store i8* %1, i8** %405, align 8
  %406 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %399, i64 0, i32 1
  store i64 %2, i64* %406, align 8
  %407 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %399, i64 1
  %408 = ptrtoint %"class.base::BasicStringPiece"* %407 to i64
  %409 = bitcast %"class.base::BasicStringPiece"** %398 to i64*
  store i64 %408, i64* %409, align 8
  br label %859

410:                                              ; preds = %397
  %411 = ptrtoint %"class.base::BasicStringPiece"* %399 to i64
  %412 = bitcast %"class.base::BasicStringPiece"** %398 to i64*
  %413 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = sub i64 %411, %414
  %416 = ashr exact i64 %415, 4
  %417 = add nsw i64 %416, 1
  %418 = icmp ugt i64 %417, 1152921504606846975
  br i1 %418, label %419, label %421

419:                                              ; preds = %410
  %420 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %420) #15
  unreachable

421:                                              ; preds = %410
  %422 = bitcast %"class.base::BasicStringPiece"** %400 to i64*
  %423 = sub i64 %403, %414
  %424 = ashr exact i64 %423, 4
  %425 = icmp ult i64 %424, 576460752303423487
  br i1 %425, label %426, label %434

426:                                              ; preds = %421
  %427 = ashr exact i64 %423, 3
  %428 = icmp ult i64 %427, %417
  %429 = select i1 %428, i64 %417, i64 %427
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %439, label %431

431:                                              ; preds = %426
  %432 = icmp ugt i64 %429, 1152921504606846975
  br i1 %432, label %433, label %434

433:                                              ; preds = %431
  tail call void @abort() #15
  unreachable

434:                                              ; preds = %431, %421
  %435 = phi i64 [ %429, %431 ], [ 1152921504606846975, %421 ]
  %436 = shl i64 %435, 4
  %437 = tail call i8* @_Znwm(i64 %436) #14
  %438 = bitcast i8* %437 to %"class.base::BasicStringPiece"*
  br label %439

439:                                              ; preds = %434, %426
  %440 = phi i64 [ %435, %434 ], [ 0, %426 ]
  %441 = phi %"class.base::BasicStringPiece"* [ %438, %434 ], [ null, %426 ]
  %442 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %441, i64 %416
  %443 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %441, i64 %440
  %444 = ptrtoint %"class.base::BasicStringPiece"* %443 to i64
  %445 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %442, i64 0, i32 0
  store i8* %1, i8** %445, align 8
  %446 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %441, i64 %416, i32 1
  store i64 %2, i64* %446, align 8
  %447 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %442, i64 1
  %448 = ptrtoint %"class.base::BasicStringPiece"* %447 to i64
  %449 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %450 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %449, align 8
  %451 = load i64, i64* %412, align 8
  %452 = ptrtoint %"class.base::BasicStringPiece"* %450 to i64
  %453 = sub i64 %451, %452
  %454 = ashr exact i64 %453, 4
  %455 = sub nsw i64 0, %454
  %456 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %442, i64 %455
  %457 = ptrtoint %"class.base::BasicStringPiece"* %456 to i64
  %458 = icmp sgt i64 %453, 0
  br i1 %458, label %459, label %463

459:                                              ; preds = %439
  %460 = bitcast %"class.base::BasicStringPiece"* %456 to i8*
  %461 = bitcast %"class.base::BasicStringPiece"* %450 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %460, i8* align 8 %461, i64 %453, i1 false) #13
  %462 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %449, align 8
  br label %463

463:                                              ; preds = %459, %439
  %464 = phi %"class.base::BasicStringPiece"* [ %450, %439 ], [ %462, %459 ]
  store i64 %457, i64* %413, align 8
  store i64 %448, i64* %412, align 8
  store i64 %444, i64* %422, align 8
  %465 = icmp eq %"class.base::BasicStringPiece"* %464, null
  br i1 %465, label %859, label %466

466:                                              ; preds = %463
  %467 = bitcast %"class.base::BasicStringPiece"* %464 to i8*
  tail call void @_ZdlPv(i8* %467) #14
  br label %859

468:                                              ; preds = %382, %390, %396
  %469 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 5
  %470 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %384, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api15content_scripts13ContentScript22kMatchOriginAsFallbackE, i64 0, i64 0), i64 24) #13
  %471 = icmp eq %"class.base::Value"* %470, null
  br i1 %471, label %553, label %472

472:                                              ; preds = %468
  %473 = tail call i8* @_Znwm(i64 1) #14
  store i8 0, i8* %473, align 1
  %474 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api15content_scripts13ContentScript22kMatchOriginAsFallbackE, i64 0, i64 0), i64 24, i8* nonnull %473, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  br i1 %474, label %475, label %482

475:                                              ; preds = %472
  %476 = ptrtoint i8* %473 to i64
  %477 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %469, i64 0, i32 0, i32 0, i32 0
  %478 = load i8*, i8** %477, align 8
  %479 = bitcast %"class.std::__1::unique_ptr.9"* %469 to i64*
  store i64 %476, i64* %479, align 8
  %480 = icmp eq i8* %478, null
  br i1 %480, label %553, label %481

481:                                              ; preds = %475
  tail call void @_ZdlPv(i8* nonnull %478) #14
  br label %553

482:                                              ; preds = %472
  tail call void @_ZdlPv(i8* nonnull %473) #14
  %483 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %484 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %483, align 8
  %485 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %486 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %485, align 8
  %487 = icmp eq %"class.base::BasicStringPiece"* %484, %486
  %488 = ptrtoint %"class.base::BasicStringPiece"* %486 to i64
  br i1 %487, label %495, label %489

489:                                              ; preds = %482
  %490 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %484, i64 0, i32 0
  store i8* %1, i8** %490, align 8
  %491 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %484, i64 0, i32 1
  store i64 %2, i64* %491, align 8
  %492 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %484, i64 1
  %493 = ptrtoint %"class.base::BasicStringPiece"* %492 to i64
  %494 = bitcast %"class.base::BasicStringPiece"** %483 to i64*
  store i64 %493, i64* %494, align 8
  br label %859

495:                                              ; preds = %482
  %496 = ptrtoint %"class.base::BasicStringPiece"* %484 to i64
  %497 = bitcast %"class.base::BasicStringPiece"** %483 to i64*
  %498 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = sub i64 %496, %499
  %501 = ashr exact i64 %500, 4
  %502 = add nsw i64 %501, 1
  %503 = icmp ugt i64 %502, 1152921504606846975
  br i1 %503, label %504, label %506

504:                                              ; preds = %495
  %505 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %505) #15
  unreachable

506:                                              ; preds = %495
  %507 = bitcast %"class.base::BasicStringPiece"** %485 to i64*
  %508 = sub i64 %488, %499
  %509 = ashr exact i64 %508, 4
  %510 = icmp ult i64 %509, 576460752303423487
  br i1 %510, label %511, label %519

511:                                              ; preds = %506
  %512 = ashr exact i64 %508, 3
  %513 = icmp ult i64 %512, %502
  %514 = select i1 %513, i64 %502, i64 %512
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %524, label %516

516:                                              ; preds = %511
  %517 = icmp ugt i64 %514, 1152921504606846975
  br i1 %517, label %518, label %519

518:                                              ; preds = %516
  tail call void @abort() #15
  unreachable

519:                                              ; preds = %516, %506
  %520 = phi i64 [ %514, %516 ], [ 1152921504606846975, %506 ]
  %521 = shl i64 %520, 4
  %522 = tail call i8* @_Znwm(i64 %521) #14
  %523 = bitcast i8* %522 to %"class.base::BasicStringPiece"*
  br label %524

524:                                              ; preds = %519, %511
  %525 = phi i64 [ %520, %519 ], [ 0, %511 ]
  %526 = phi %"class.base::BasicStringPiece"* [ %523, %519 ], [ null, %511 ]
  %527 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %526, i64 %501
  %528 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %526, i64 %525
  %529 = ptrtoint %"class.base::BasicStringPiece"* %528 to i64
  %530 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %527, i64 0, i32 0
  store i8* %1, i8** %530, align 8
  %531 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %526, i64 %501, i32 1
  store i64 %2, i64* %531, align 8
  %532 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %527, i64 1
  %533 = ptrtoint %"class.base::BasicStringPiece"* %532 to i64
  %534 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %535 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %534, align 8
  %536 = load i64, i64* %497, align 8
  %537 = ptrtoint %"class.base::BasicStringPiece"* %535 to i64
  %538 = sub i64 %536, %537
  %539 = ashr exact i64 %538, 4
  %540 = sub nsw i64 0, %539
  %541 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %527, i64 %540
  %542 = ptrtoint %"class.base::BasicStringPiece"* %541 to i64
  %543 = icmp sgt i64 %538, 0
  br i1 %543, label %544, label %548

544:                                              ; preds = %524
  %545 = bitcast %"class.base::BasicStringPiece"* %541 to i8*
  %546 = bitcast %"class.base::BasicStringPiece"* %535 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %545, i8* align 8 %546, i64 %538, i1 false) #13
  %547 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %534, align 8
  br label %548

548:                                              ; preds = %544, %524
  %549 = phi %"class.base::BasicStringPiece"* [ %535, %524 ], [ %547, %544 ]
  store i64 %542, i64* %498, align 8
  store i64 %533, i64* %497, align 8
  store i64 %529, i64* %507, align 8
  %550 = icmp eq %"class.base::BasicStringPiece"* %549, null
  br i1 %550, label %859, label %551

551:                                              ; preds = %548
  %552 = bitcast %"class.base::BasicStringPiece"* %549 to i8*
  tail call void @_ZdlPv(i8* %552) #14
  br label %859

553:                                              ; preds = %468, %475, %481
  %554 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 6
  %555 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN10extensions3api15content_scripts13ContentScript16kMatchAboutBlankE, i64 0, i64 0), i64 17) #13
  %556 = icmp eq %"class.base::Value"* %555, null
  br i1 %556, label %638, label %557

557:                                              ; preds = %553
  %558 = tail call i8* @_Znwm(i64 1) #14
  store i8 0, i8* %558, align 1
  %559 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN10extensions3api15content_scripts13ContentScript16kMatchAboutBlankE, i64 0, i64 0), i64 17, i8* nonnull %558, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  br i1 %559, label %560, label %567

560:                                              ; preds = %557
  %561 = ptrtoint i8* %558 to i64
  %562 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %554, i64 0, i32 0, i32 0, i32 0
  %563 = load i8*, i8** %562, align 8
  %564 = bitcast %"class.std::__1::unique_ptr.9"* %554 to i64*
  store i64 %561, i64* %564, align 8
  %565 = icmp eq i8* %563, null
  br i1 %565, label %638, label %566

566:                                              ; preds = %560
  tail call void @_ZdlPv(i8* nonnull %563) #14
  br label %638

567:                                              ; preds = %557
  tail call void @_ZdlPv(i8* nonnull %558) #14
  %568 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %569 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %568, align 8
  %570 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %571 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %570, align 8
  %572 = icmp eq %"class.base::BasicStringPiece"* %569, %571
  %573 = ptrtoint %"class.base::BasicStringPiece"* %571 to i64
  br i1 %572, label %580, label %574

574:                                              ; preds = %567
  %575 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %569, i64 0, i32 0
  store i8* %1, i8** %575, align 8
  %576 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %569, i64 0, i32 1
  store i64 %2, i64* %576, align 8
  %577 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %569, i64 1
  %578 = ptrtoint %"class.base::BasicStringPiece"* %577 to i64
  %579 = bitcast %"class.base::BasicStringPiece"** %568 to i64*
  store i64 %578, i64* %579, align 8
  br label %859

580:                                              ; preds = %567
  %581 = ptrtoint %"class.base::BasicStringPiece"* %569 to i64
  %582 = bitcast %"class.base::BasicStringPiece"** %568 to i64*
  %583 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %584 = load i64, i64* %583, align 8
  %585 = sub i64 %581, %584
  %586 = ashr exact i64 %585, 4
  %587 = add nsw i64 %586, 1
  %588 = icmp ugt i64 %587, 1152921504606846975
  br i1 %588, label %589, label %591

589:                                              ; preds = %580
  %590 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %590) #15
  unreachable

591:                                              ; preds = %580
  %592 = bitcast %"class.base::BasicStringPiece"** %570 to i64*
  %593 = sub i64 %573, %584
  %594 = ashr exact i64 %593, 4
  %595 = icmp ult i64 %594, 576460752303423487
  br i1 %595, label %596, label %604

596:                                              ; preds = %591
  %597 = ashr exact i64 %593, 3
  %598 = icmp ult i64 %597, %587
  %599 = select i1 %598, i64 %587, i64 %597
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %609, label %601

601:                                              ; preds = %596
  %602 = icmp ugt i64 %599, 1152921504606846975
  br i1 %602, label %603, label %604

603:                                              ; preds = %601
  tail call void @abort() #15
  unreachable

604:                                              ; preds = %601, %591
  %605 = phi i64 [ %599, %601 ], [ 1152921504606846975, %591 ]
  %606 = shl i64 %605, 4
  %607 = tail call i8* @_Znwm(i64 %606) #14
  %608 = bitcast i8* %607 to %"class.base::BasicStringPiece"*
  br label %609

609:                                              ; preds = %604, %596
  %610 = phi i64 [ %605, %604 ], [ 0, %596 ]
  %611 = phi %"class.base::BasicStringPiece"* [ %608, %604 ], [ null, %596 ]
  %612 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %611, i64 %586
  %613 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %611, i64 %610
  %614 = ptrtoint %"class.base::BasicStringPiece"* %613 to i64
  %615 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %612, i64 0, i32 0
  store i8* %1, i8** %615, align 8
  %616 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %611, i64 %586, i32 1
  store i64 %2, i64* %616, align 8
  %617 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %612, i64 1
  %618 = ptrtoint %"class.base::BasicStringPiece"* %617 to i64
  %619 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %620 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %619, align 8
  %621 = load i64, i64* %582, align 8
  %622 = ptrtoint %"class.base::BasicStringPiece"* %620 to i64
  %623 = sub i64 %621, %622
  %624 = ashr exact i64 %623, 4
  %625 = sub nsw i64 0, %624
  %626 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %612, i64 %625
  %627 = ptrtoint %"class.base::BasicStringPiece"* %626 to i64
  %628 = icmp sgt i64 %623, 0
  br i1 %628, label %629, label %633

629:                                              ; preds = %609
  %630 = bitcast %"class.base::BasicStringPiece"* %626 to i8*
  %631 = bitcast %"class.base::BasicStringPiece"* %620 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %630, i8* align 8 %631, i64 %623, i1 false) #13
  %632 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %619, align 8
  br label %633

633:                                              ; preds = %629, %609
  %634 = phi %"class.base::BasicStringPiece"* [ %620, %609 ], [ %632, %629 ]
  store i64 %627, i64* %583, align 8
  store i64 %618, i64* %582, align 8
  store i64 %614, i64* %592, align 8
  %635 = icmp eq %"class.base::BasicStringPiece"* %634, null
  br i1 %635, label %859, label %636

636:                                              ; preds = %633
  %637 = bitcast %"class.base::BasicStringPiece"* %634 to i8*
  tail call void @_ZdlPv(i8* %637) #14
  br label %859

638:                                              ; preds = %553, %560, %566
  %639 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 7
  %640 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kIncludeGlobsE, i64 0, i64 0), i64 13, %"class.std::__1::unique_ptr"* %639, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %640, label %712, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %643 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %642, align 8
  %644 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %645 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %644, align 8
  %646 = icmp eq %"class.base::BasicStringPiece"* %643, %645
  %647 = ptrtoint %"class.base::BasicStringPiece"* %645 to i64
  br i1 %646, label %654, label %648

648:                                              ; preds = %641
  %649 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %643, i64 0, i32 0
  store i8* %1, i8** %649, align 8
  %650 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %643, i64 0, i32 1
  store i64 %2, i64* %650, align 8
  %651 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %643, i64 1
  %652 = ptrtoint %"class.base::BasicStringPiece"* %651 to i64
  %653 = bitcast %"class.base::BasicStringPiece"** %642 to i64*
  store i64 %652, i64* %653, align 8
  br label %859

654:                                              ; preds = %641
  %655 = ptrtoint %"class.base::BasicStringPiece"* %643 to i64
  %656 = bitcast %"class.base::BasicStringPiece"** %642 to i64*
  %657 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = sub i64 %655, %658
  %660 = ashr exact i64 %659, 4
  %661 = add nsw i64 %660, 1
  %662 = icmp ugt i64 %661, 1152921504606846975
  br i1 %662, label %663, label %665

663:                                              ; preds = %654
  %664 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %664) #15
  unreachable

665:                                              ; preds = %654
  %666 = bitcast %"class.base::BasicStringPiece"** %644 to i64*
  %667 = sub i64 %647, %658
  %668 = ashr exact i64 %667, 4
  %669 = icmp ult i64 %668, 576460752303423487
  br i1 %669, label %670, label %678

670:                                              ; preds = %665
  %671 = ashr exact i64 %667, 3
  %672 = icmp ult i64 %671, %661
  %673 = select i1 %672, i64 %661, i64 %671
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %683, label %675

675:                                              ; preds = %670
  %676 = icmp ugt i64 %673, 1152921504606846975
  br i1 %676, label %677, label %678

677:                                              ; preds = %675
  tail call void @abort() #15
  unreachable

678:                                              ; preds = %675, %665
  %679 = phi i64 [ %673, %675 ], [ 1152921504606846975, %665 ]
  %680 = shl i64 %679, 4
  %681 = tail call i8* @_Znwm(i64 %680) #14
  %682 = bitcast i8* %681 to %"class.base::BasicStringPiece"*
  br label %683

683:                                              ; preds = %678, %670
  %684 = phi i64 [ %679, %678 ], [ 0, %670 ]
  %685 = phi %"class.base::BasicStringPiece"* [ %682, %678 ], [ null, %670 ]
  %686 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %685, i64 %660
  %687 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %685, i64 %684
  %688 = ptrtoint %"class.base::BasicStringPiece"* %687 to i64
  %689 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %686, i64 0, i32 0
  store i8* %1, i8** %689, align 8
  %690 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %685, i64 %660, i32 1
  store i64 %2, i64* %690, align 8
  %691 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %686, i64 1
  %692 = ptrtoint %"class.base::BasicStringPiece"* %691 to i64
  %693 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %694 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %693, align 8
  %695 = load i64, i64* %656, align 8
  %696 = ptrtoint %"class.base::BasicStringPiece"* %694 to i64
  %697 = sub i64 %695, %696
  %698 = ashr exact i64 %697, 4
  %699 = sub nsw i64 0, %698
  %700 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %686, i64 %699
  %701 = ptrtoint %"class.base::BasicStringPiece"* %700 to i64
  %702 = icmp sgt i64 %697, 0
  br i1 %702, label %703, label %707

703:                                              ; preds = %683
  %704 = bitcast %"class.base::BasicStringPiece"* %700 to i8*
  %705 = bitcast %"class.base::BasicStringPiece"* %694 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %704, i8* align 8 %705, i64 %697, i1 false) #13
  %706 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %693, align 8
  br label %707

707:                                              ; preds = %703, %683
  %708 = phi %"class.base::BasicStringPiece"* [ %694, %683 ], [ %706, %703 ]
  store i64 %701, i64* %657, align 8
  store i64 %692, i64* %656, align 8
  store i64 %688, i64* %666, align 8
  %709 = icmp eq %"class.base::BasicStringPiece"* %708, null
  br i1 %709, label %859, label %710

710:                                              ; preds = %707
  %711 = bitcast %"class.base::BasicStringPiece"* %708 to i8*
  tail call void @_ZdlPv(i8* %711) #14
  br label %859

712:                                              ; preds = %638
  %713 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %3, i64 0, i32 8
  %714 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api15content_scripts13ContentScript13kExcludeGlobsE, i64 0, i64 0), i64 13, %"class.std::__1::unique_ptr"* %713, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %714, label %786, label %715

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %717 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %716, align 8
  %718 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %719 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %718, align 8
  %720 = icmp eq %"class.base::BasicStringPiece"* %717, %719
  %721 = ptrtoint %"class.base::BasicStringPiece"* %719 to i64
  br i1 %720, label %728, label %722

722:                                              ; preds = %715
  %723 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %717, i64 0, i32 0
  store i8* %1, i8** %723, align 8
  %724 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %717, i64 0, i32 1
  store i64 %2, i64* %724, align 8
  %725 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %717, i64 1
  %726 = ptrtoint %"class.base::BasicStringPiece"* %725 to i64
  %727 = bitcast %"class.base::BasicStringPiece"** %716 to i64*
  store i64 %726, i64* %727, align 8
  br label %859

728:                                              ; preds = %715
  %729 = ptrtoint %"class.base::BasicStringPiece"* %717 to i64
  %730 = bitcast %"class.base::BasicStringPiece"** %716 to i64*
  %731 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %732 = load i64, i64* %731, align 8
  %733 = sub i64 %729, %732
  %734 = ashr exact i64 %733, 4
  %735 = add nsw i64 %734, 1
  %736 = icmp ugt i64 %735, 1152921504606846975
  br i1 %736, label %737, label %739

737:                                              ; preds = %728
  %738 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %738) #15
  unreachable

739:                                              ; preds = %728
  %740 = bitcast %"class.base::BasicStringPiece"** %718 to i64*
  %741 = sub i64 %721, %732
  %742 = ashr exact i64 %741, 4
  %743 = icmp ult i64 %742, 576460752303423487
  br i1 %743, label %744, label %752

744:                                              ; preds = %739
  %745 = ashr exact i64 %741, 3
  %746 = icmp ult i64 %745, %735
  %747 = select i1 %746, i64 %735, i64 %745
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %757, label %749

749:                                              ; preds = %744
  %750 = icmp ugt i64 %747, 1152921504606846975
  br i1 %750, label %751, label %752

751:                                              ; preds = %749
  tail call void @abort() #15
  unreachable

752:                                              ; preds = %749, %739
  %753 = phi i64 [ %747, %749 ], [ 1152921504606846975, %739 ]
  %754 = shl i64 %753, 4
  %755 = tail call i8* @_Znwm(i64 %754) #14
  %756 = bitcast i8* %755 to %"class.base::BasicStringPiece"*
  br label %757

757:                                              ; preds = %752, %744
  %758 = phi i64 [ %753, %752 ], [ 0, %744 ]
  %759 = phi %"class.base::BasicStringPiece"* [ %756, %752 ], [ null, %744 ]
  %760 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %759, i64 %734
  %761 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %759, i64 %758
  %762 = ptrtoint %"class.base::BasicStringPiece"* %761 to i64
  %763 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %760, i64 0, i32 0
  store i8* %1, i8** %763, align 8
  %764 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %759, i64 %734, i32 1
  store i64 %2, i64* %764, align 8
  %765 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %760, i64 1
  %766 = ptrtoint %"class.base::BasicStringPiece"* %765 to i64
  %767 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %768 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %767, align 8
  %769 = load i64, i64* %730, align 8
  %770 = ptrtoint %"class.base::BasicStringPiece"* %768 to i64
  %771 = sub i64 %769, %770
  %772 = ashr exact i64 %771, 4
  %773 = sub nsw i64 0, %772
  %774 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %760, i64 %773
  %775 = ptrtoint %"class.base::BasicStringPiece"* %774 to i64
  %776 = icmp sgt i64 %771, 0
  br i1 %776, label %777, label %781

777:                                              ; preds = %757
  %778 = bitcast %"class.base::BasicStringPiece"* %774 to i8*
  %779 = bitcast %"class.base::BasicStringPiece"* %768 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %778, i8* align 8 %779, i64 %771, i1 false) #13
  %780 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %767, align 8
  br label %781

781:                                              ; preds = %777, %757
  %782 = phi %"class.base::BasicStringPiece"* [ %768, %757 ], [ %780, %777 ]
  store i64 %775, i64* %731, align 8
  store i64 %766, i64* %730, align 8
  store i64 %762, i64* %740, align 8
  %783 = icmp eq %"class.base::BasicStringPiece"* %782, null
  br i1 %783, label %859, label %784

784:                                              ; preds = %781
  %785 = bitcast %"class.base::BasicStringPiece"* %782 to i8*
  tail call void @_ZdlPv(i8* %785) #14
  br label %859

786:                                              ; preds = %712
  %787 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api15content_scripts5RunAtEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10extensions3api15content_scripts13ContentScript6kRunAtE, i64 0, i64 0), i64 6, i32 (%"class.std::__1::basic_string"*)* nonnull @_ZN10extensions3api15content_scripts10ParseRunAtERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, i1 zeroext true, i32 0, i32* %11, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %787, label %859, label %788

788:                                              ; preds = %786
  %789 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %790 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %789, align 8
  %791 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %792 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %791, align 8
  %793 = icmp eq %"class.base::BasicStringPiece"* %790, %792
  %794 = ptrtoint %"class.base::BasicStringPiece"* %792 to i64
  br i1 %793, label %801, label %795

795:                                              ; preds = %788
  %796 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %790, i64 0, i32 0
  store i8* %1, i8** %796, align 8
  %797 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %790, i64 0, i32 1
  store i64 %2, i64* %797, align 8
  %798 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %790, i64 1
  %799 = ptrtoint %"class.base::BasicStringPiece"* %798 to i64
  %800 = bitcast %"class.base::BasicStringPiece"** %789 to i64*
  store i64 %799, i64* %800, align 8
  br label %859

801:                                              ; preds = %788
  %802 = ptrtoint %"class.base::BasicStringPiece"* %790 to i64
  %803 = bitcast %"class.base::BasicStringPiece"** %789 to i64*
  %804 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %805 = load i64, i64* %804, align 8
  %806 = sub i64 %802, %805
  %807 = ashr exact i64 %806, 4
  %808 = add nsw i64 %807, 1
  %809 = icmp ugt i64 %808, 1152921504606846975
  br i1 %809, label %810, label %812

810:                                              ; preds = %801
  %811 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %811) #15
  unreachable

812:                                              ; preds = %801
  %813 = bitcast %"class.base::BasicStringPiece"** %791 to i64*
  %814 = sub i64 %794, %805
  %815 = ashr exact i64 %814, 4
  %816 = icmp ult i64 %815, 576460752303423487
  br i1 %816, label %817, label %825

817:                                              ; preds = %812
  %818 = ashr exact i64 %814, 3
  %819 = icmp ult i64 %818, %808
  %820 = select i1 %819, i64 %808, i64 %818
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %830, label %822

822:                                              ; preds = %817
  %823 = icmp ugt i64 %820, 1152921504606846975
  br i1 %823, label %824, label %825

824:                                              ; preds = %822
  tail call void @abort() #15
  unreachable

825:                                              ; preds = %822, %812
  %826 = phi i64 [ %820, %822 ], [ 1152921504606846975, %812 ]
  %827 = shl i64 %826, 4
  %828 = tail call i8* @_Znwm(i64 %827) #14
  %829 = bitcast i8* %828 to %"class.base::BasicStringPiece"*
  br label %830

830:                                              ; preds = %825, %817
  %831 = phi i64 [ %826, %825 ], [ 0, %817 ]
  %832 = phi %"class.base::BasicStringPiece"* [ %829, %825 ], [ null, %817 ]
  %833 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %832, i64 %807
  %834 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %832, i64 %831
  %835 = ptrtoint %"class.base::BasicStringPiece"* %834 to i64
  %836 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %833, i64 0, i32 0
  store i8* %1, i8** %836, align 8
  %837 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %832, i64 %807, i32 1
  store i64 %2, i64* %837, align 8
  %838 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %833, i64 1
  %839 = ptrtoint %"class.base::BasicStringPiece"* %838 to i64
  %840 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %841 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %840, align 8
  %842 = load i64, i64* %803, align 8
  %843 = ptrtoint %"class.base::BasicStringPiece"* %841 to i64
  %844 = sub i64 %842, %843
  %845 = ashr exact i64 %844, 4
  %846 = sub nsw i64 0, %845
  %847 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %833, i64 %846
  %848 = ptrtoint %"class.base::BasicStringPiece"* %847 to i64
  %849 = icmp sgt i64 %844, 0
  br i1 %849, label %850, label %854

850:                                              ; preds = %830
  %851 = bitcast %"class.base::BasicStringPiece"* %847 to i8*
  %852 = bitcast %"class.base::BasicStringPiece"* %841 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %851, i8* align 8 %852, i64 %844, i1 false) #13
  %853 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %840, align 8
  br label %854

854:                                              ; preds = %850, %830
  %855 = phi %"class.base::BasicStringPiece"* [ %841, %830 ], [ %853, %850 ]
  store i64 %848, i64* %804, align 8
  store i64 %839, i64* %803, align 8
  store i64 %835, i64* %813, align 8
  %856 = icmp eq %"class.base::BasicStringPiece"* %855, null
  br i1 %856, label %859, label %857

857:                                              ; preds = %854
  %858 = bitcast %"class.base::BasicStringPiece"* %855 to i8*
  tail call void @_ZdlPv(i8* %858) #14
  br label %859

859:                                              ; preds = %857, %854, %795, %784, %781, %722, %710, %707, %648, %636, %633, %574, %551, %548, %489, %466, %463, %404, %380, %377, %318, %306, %303, %244, %232, %229, %170, %158, %155, %96, %786, %6
  %860 = phi i1 [ false, %6 ], [ true, %786 ], [ false, %96 ], [ false, %155 ], [ false, %158 ], [ false, %170 ], [ false, %229 ], [ false, %232 ], [ false, %244 ], [ false, %303 ], [ false, %306 ], [ false, %318 ], [ false, %377 ], [ false, %380 ], [ false, %404 ], [ false, %463 ], [ false, %466 ], [ false, %489 ], [ false, %548 ], [ false, %551 ], [ false, %574 ], [ false, %633 ], [ false, %636 ], [ false, %648 ], [ false, %707 ], [ false, %710 ], [ false, %722 ], [ false, %781 ], [ false, %784 ], [ false, %795 ], [ false, %854 ], [ false, %857 ]
  ret i1 %860
}

declare %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i8 zeroext, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(32) %"class.base::DictionaryValue"* @_ZN4base5Value17AsDictionaryValueERKS0_(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, %"class.std::__1::unique_ptr"*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #1 comdat {
  %7 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %0, i64 0, i32 0
  %8 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %7, i8* %1, i64 %2) #13
  %9 = icmp eq %"class.base::Value"* %8, null
  br i1 %9, label %151, label %10

10:                                               ; preds = %6
  %11 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = ptrtoint i8* %11 to i64
  %13 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 7, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %14 = icmp eq %"class.base::Value"* %13, null
  br i1 %14, label %123, label %15

15:                                               ; preds = %10
  %16 = bitcast i8* %11 to %"class.std::__1::vector"*
  %17 = tail call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %13) #13
  %18 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %17, %"class.std::__1::vector"* nonnull %16, %"class.std::__1::basic_string.44"* %4) #13
  br i1 %18, label %90, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %21 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %22, align 8
  %24 = icmp eq %"class.base::BasicStringPiece"* %21, %23
  %25 = ptrtoint %"class.base::BasicStringPiece"* %23 to i64
  br i1 %24, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 0
  store i8* %1, i8** %27, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 1
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 1
  %30 = ptrtoint %"class.base::BasicStringPiece"* %29 to i64
  %31 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  store i64 %30, i64* %31, align 8
  br label %123

32:                                               ; preds = %19
  %33 = ptrtoint %"class.base::BasicStringPiece"* %21 to i64
  %34 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  %35 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 4
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #15
  unreachable

43:                                               ; preds = %32
  %44 = bitcast %"class.base::BasicStringPiece"** %22 to i64*
  %45 = sub i64 %25, %36
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, 576460752303423487
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 3
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #15
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 1152921504606846975, %43 ]
  %58 = shl i64 %57, 4
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to %"class.base::BasicStringPiece"*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.base::BasicStringPiece"* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %62
  %66 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 0, i32 0
  store i8* %1, i8** %67, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38, i32 1
  store i64 %2, i64* %68, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 1
  %70 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %72 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8
  %73 = load i64, i64* %34, align 8
  %74 = ptrtoint %"class.base::BasicStringPiece"* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 %77
  %79 = ptrtoint %"class.base::BasicStringPiece"* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %61
  %82 = bitcast %"class.base::BasicStringPiece"* %78 to i8*
  %83 = bitcast %"class.base::BasicStringPiece"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 %75, i1 false) #13
  %84 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8
  br label %85

85:                                               ; preds = %81, %61
  %86 = phi %"class.base::BasicStringPiece"* [ %72, %61 ], [ %84, %81 ]
  store i64 %79, i64* %35, align 8
  store i64 %70, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %87 = icmp eq %"class.base::BasicStringPiece"* %86, null
  br i1 %87, label %123, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.base::BasicStringPiece"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #14
  br label %123

90:                                               ; preds = %15
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %12, i64* %93, align 8
  %94 = icmp eq %"class.std::__1::vector"* %92, null
  br i1 %94, label %151, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %96, align 8
  %98 = icmp eq %"class.std::__1::basic_string"* %97, null
  br i1 %98, label %121, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 1
  %102 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %101, align 8
  %103 = icmp eq %"class.std::__1::basic_string"* %102, %97
  br i1 %103, label %119, label %104

104:                                              ; preds = %99, %114
  %105 = phi %"class.std::__1::basic_string"* [ %106, %114 ], [ %102, %99 ]
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 -1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %111, %104
  %115 = icmp eq %"class.std::__1::basic_string"* %106, %97
  br i1 %115, label %116, label %104

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %92 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %99
  %120 = phi i8* [ %118, %116 ], [ %100, %99 ]
  store %"class.std::__1::basic_string"* %97, %"class.std::__1::basic_string"** %101, align 8
  tail call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %119, %95
  %122 = bitcast %"class.std::__1::vector"* %92 to i8*
  tail call void @_ZdlPv(i8* %122) #14
  br label %151

123:                                              ; preds = %88, %85, %26, %10
  %124 = bitcast i8* %11 to %"class.std::__1::basic_string"**
  %125 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %124, align 8
  %126 = icmp eq %"class.std::__1::basic_string"* %125, null
  br i1 %126, label %150, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %129 = getelementptr inbounds i8, i8* %11, i64 8
  %130 = bitcast i8* %129 to %"class.std::__1::basic_string"**
  %131 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  %132 = icmp eq %"class.std::__1::basic_string"* %131, %125
  br i1 %132, label %148, label %133

133:                                              ; preds = %127, %143
  %134 = phi %"class.std::__1::basic_string"* [ %135, %143 ], [ %131, %127 ]
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 -1
  %136 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  tail call void @_ZdlPv(i8* %142) #14
  br label %143

143:                                              ; preds = %140, %133
  %144 = icmp eq %"class.std::__1::basic_string"* %135, %125
  br i1 %144, label %145, label %133

145:                                              ; preds = %143
  %146 = bitcast i8* %11 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %127
  %149 = phi i8* [ %147, %145 ], [ %128, %127 ]
  store %"class.std::__1::basic_string"* %125, %"class.std::__1::basic_string"** %130, align 8
  tail call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %148, %123
  tail call void @_ZdlPv(i8* nonnull %11) #14
  br label %151

151:                                              ; preds = %121, %90, %150, %6
  %152 = phi i1 [ true, %6 ], [ false, %150 ], [ true, %90 ], [ true, %121 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util23ParseEnumFromDictionaryIN10extensions3api15content_scripts5RunAtEEEbRKN4base15DictionaryValueENS6_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPFT_RKNSB_12basic_stringIcSD_NSB_9allocatorIcEEEEEbSF_PSF_PNSG_IDsNSC_IDsEENSH_IDsEEEEPNSB_6vectorISE_NSH_ISE_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i32 (%"class.std::__1::basic_string"*)*, i1 zeroext, i32, i32*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #1 comdat {
  %10 = alloca %"class.std::__1::basic_string", align 8
  br i1 %4, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %0, i64 0, i32 0
  %13 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %12, i8* %1, i64 %2) #13
  %14 = icmp eq %"class.base::Value"* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %11, %9
  %16 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 4, %"class.std::__1::basic_string.44"* %7, %"class.std::__1::vector.70"* %8) #13
  %17 = icmp eq %"class.base::Value"* %16, null
  br i1 %17, label %48, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* nonnull %16) #13
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %28, i64 24, i1 false) #13
  br label %34

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %31, i64 %33) #13
  br label %34

34:                                               ; preds = %27, %29
  %35 = call i32 %3(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #13
  %36 = icmp eq i32 %35, %5
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZN20json_schema_compiler19manifest_parse_util29PopulateInvalidEnumValueErrorEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPNS7_IDsNS4_IDsEENS8_IDsEEEEPNS3_6vectorIS6_NS8_IS6_EEEE(i8* %1, i64 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string.44"* %7, %"class.std::__1::vector.70"* %8) #13
  br label %39

38:                                               ; preds = %34
  store i32 %35, i32* %6, align 4
  br label %39

39:                                               ; preds = %38, %37
  %40 = phi i1 [ false, %37 ], [ true, %38 ]
  %41 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %48

48:                                               ; preds = %47, %15, %11
  %49 = phi i1 [ true, %11 ], [ %40, %47 ], [ false, %15 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts12ManifestKeysC2Ev(%"struct.extensions::api::content_scripts::ManifestKeys"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts12ManifestKeysD2Ev(%"struct.extensions::api::content_scripts::ManifestKeys"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %2, align 8
  %4 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %3 to i8*
  %7 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %7, align 8
  %9 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %8, %3
  br i1 %9, label %17, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %11, i64 -1
  tail call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* %12) #13
  %13 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %12, %3
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i8* [ %16, %14 ], [ %6, %5 ]
  store %"struct.extensions::api::content_scripts::ContentScript"* %3, %"struct.extensions::api::content_scripts::ContentScript"** %7, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api15content_scripts12ManifestKeysC2EOS2_(%"struct.extensions::api::content_scripts::ManifestKeys"* nocapture, %"struct.extensions::api::content_scripts::ManifestKeys"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.extensions::api::content_scripts::ManifestKeys"* @_ZN10extensions3api15content_scripts12ManifestKeysaSEOS2_(%"struct.extensions::api::content_scripts::ManifestKeys"* returned, %"struct.extensions::api::content_scripts::ManifestKeys"* nocapture dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %3, align 8
  %5 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %8, align 8
  %10 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %12, i64 -1
  tail call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* %13) #13
  %14 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.extensions::api::content_scripts::ContentScript"* %4, %"struct.extensions::api::content_scripts::ContentScript"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #14
  %20 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  br label %21

21:                                               ; preds = %2, %18
  %22 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %0 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"struct.extensions::api::content_scripts::ManifestKeys"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #13
  ret %"struct.extensions::api::content_scripts::ManifestKeys"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api15content_scripts12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32), %"struct.extensions::api::content_scripts::ManifestKeys"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.70", align 8
  %5 = bitcast %"class.std::__1::vector.70"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #13
  %9 = call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE, i64 0, i64 0), i64 15, i8 zeroext 7, %"class.std::__1::basic_string.44"* %2, %"class.std::__1::vector.70"* nonnull %4) #13
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %74, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.extensions::api::content_scripts::ManifestKeys", %"struct.extensions::api::content_scripts::ManifestKeys"* %1, i64 0, i32 0
  %13 = call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %9) #13
  %14 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api15content_scripts13ContentScriptEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %13, %"class.std::__1::vector.77"* %12, %"class.std::__1::basic_string.44"* %2) #13
  br i1 %14, label %75, label %15

15:                                               ; preds = %11
  %16 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %17 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %18 = icmp eq %"class.base::BasicStringPiece"* %16, %17
  %19 = ptrtoint %"class.base::BasicStringPiece"* %17 to i64
  br i1 %18, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  store i64 15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 1
  %24 = ptrtoint %"class.base::BasicStringPiece"* %23 to i64
  %25 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %74

26:                                               ; preds = %15
  %27 = ptrtoint %"class.base::BasicStringPiece"* %16 to i64
  %28 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %29 = bitcast %"class.std::__1::vector.70"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 4
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 1152921504606846975
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.70"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %36) #15
  unreachable

37:                                               ; preds = %26
  %38 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %39 = sub i64 %19, %30
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #15
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %37 ]
  %52 = shl i64 %51, 4
  %53 = call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to %"class.base::BasicStringPiece"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8* [ %53, %50 ], [ null, %42 ]
  %58 = phi %"class.base::BasicStringPiece"* [ %54, %50 ], [ null, %42 ]
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %32
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %56
  %61 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %59, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %32, i32 1
  store i64 15, i64* %63, align 8
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %59, i64 1
  %65 = ptrtoint %"class.base::BasicStringPiece"* %64 to i64
  %66 = ptrtoint %"class.base::BasicStringPiece"* %58 to i64
  %67 = icmp sgt i64 %31, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = inttoptr i64 %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %69, i64 %31, i1 false) #13
  br label %70

70:                                               ; preds = %68, %55
  store i64 %66, i64* %29, align 8
  store i64 %65, i64* %28, align 8
  store i64 %61, i64* %38, align 8
  %71 = icmp eq i64 %30, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %30 to i8*
  call void @_ZdlPv(i8* %73) #14
  br label %74

74:                                               ; preds = %3, %20, %70, %72
  call void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::vector.70"* nonnull %4) #13
  br label %75

75:                                               ; preds = %11, %74
  %76 = phi i1 [ false, %74 ], [ true, %11 ]
  %77 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %78 = icmp eq %"class.base::BasicStringPiece"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  %81 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %80, i64* %81, align 8
  %82 = bitcast %"class.base::BasicStringPiece"* %77 to i8*
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret i1 %76
}

declare void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"*, i64, i16*, i64) local_unnamed_addr #1 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #15
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !89
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !89
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !92, !noalias !89
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !92, !noalias !89
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !89
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !89
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !92, !noalias !89
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !92, !noalias !89
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !89
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !89
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !92, !noalias !89
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !92, !noalias !89
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !89
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !89
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !92, !noalias !89
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !92, !noalias !89
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !94

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !89
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !89
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !92, !noalias !89
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !92, !noalias !89
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !95

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !96

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !97

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !98
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !98
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !101, !noalias !98
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !101, !noalias !98
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !98
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !98
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !101, !noalias !98
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !101, !noalias !98
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !103

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !98
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !98
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !101, !noalias !98
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !101, !noalias !98
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !104

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !105

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !106
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !106
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !109, !noalias !106
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !109, !noalias !106
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !106
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !106
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !109, !noalias !106
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !109, !noalias !106
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !106
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !106
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !109, !noalias !106
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !109, !noalias !106
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !106
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !106
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !109, !noalias !106
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !109, !noalias !106
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !111

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !106
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !106
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !109, !noalias !106
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !109, !noalias !106
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !112

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !113

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !114

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !115
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !115
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !118, !noalias !115
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !118, !noalias !115
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !115
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !115
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !118, !noalias !115
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !118, !noalias !115
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !120

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !115
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !115
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !118, !noalias !115
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !118, !noalias !115
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !121

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !122

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #1 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !123
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !123
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !126, !noalias !123
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !126, !noalias !123
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !123
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !123
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !126, !noalias !123
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !126, !noalias !123
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !123
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !123
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !126, !noalias !123
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !126, !noalias !123
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !123
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !123
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !126, !noalias !123
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !126, !noalias !123
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !128

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !123
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !123
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !126, !noalias !123
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !126, !noalias !123
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !129

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !130

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !131

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !132

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !133

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !134

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !136
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !136
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !139, !noalias !136
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !139, !noalias !136
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !136
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !136
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !139, !noalias !136
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !139, !noalias !136
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !136
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !136
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !139, !noalias !136
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !139, !noalias !136
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !136
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !136
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !139, !noalias !136
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !139, !noalias !136
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !141

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !136
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !136
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !139, !noalias !136
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !139, !noalias !136
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !142

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !143

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !144

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.44"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !145
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !145
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !148, !noalias !145
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !148, !noalias !145
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !145
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !145
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !148, !noalias !145
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !148, !noalias !145
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !145
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !145
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !148, !noalias !145
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !148, !noalias !145
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !145
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !145
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !148, !noalias !145
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !148, !noalias !145
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !150

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !145
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !145
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !148, !noalias !145
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !148, !noalias !145
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !151

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !152

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !153

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !154
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !154
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !157, !noalias !154
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !157, !noalias !154
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !154
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !154
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !157, !noalias !154
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !157, !noalias !154
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !159

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !154
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !154
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !157, !noalias !154
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !157, !noalias !154
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !160

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !161

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !162
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !162
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !165, !noalias !162
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !165, !noalias !162
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !162
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !162
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !165, !noalias !162
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !165, !noalias !162
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !162
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !162
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !165, !noalias !162
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !165, !noalias !162
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !162
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !162
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !165, !noalias !162
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !165, !noalias !162
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !167

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !162
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !162
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !165, !noalias !162
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !165, !noalias !162
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !168

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !169

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !170

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !171
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !171
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !174, !noalias !171
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !174, !noalias !171
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !171
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !171
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !174, !noalias !171
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !174, !noalias !171
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !176

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !171
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !171
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !174, !noalias !171
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !174, !noalias !171
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !177

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !178

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #13
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !179
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !179
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !182, !noalias !179
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !182, !noalias !179
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !179
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !179
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !182, !noalias !179
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !182, !noalias !179
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !179
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !179
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !182, !noalias !179
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !182, !noalias !179
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !179
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !179
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !182, !noalias !179
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !182, !noalias !179
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !184

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !179
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !179
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !182, !noalias !179
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !182, !noalias !179
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !185

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !186

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !187

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !188
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !188
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !191, !noalias !188
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !191, !noalias !188
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !188
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !188
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !191, !noalias !188
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !191, !noalias !188
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !193

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !188
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !188
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !191, !noalias !188
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !191, !noalias !188
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !194

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !195

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #13
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #10

declare %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #3

declare zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS6_IDsNS7_IDsEENS9_IDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #3

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #11 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast %"class.base::Value"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp slt i64 %20, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %56

33:                                               ; preds = %2
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = sub nsw i64 0, %1
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i64 %43, %36
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %36) #13
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %43) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42, i64 0, i64 0), i8* %48, i8* %49) #13
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #13
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #13
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %1
  store %"class.base::Value"* %60, %"class.base::Value"** %58, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #3

declare void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"*) local_unnamed_addr #3

declare void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::ListValue"*) local_unnamed_addr #3

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #3

declare void @_ZN4base5ValueC1EPKc(%"class.base::Value"*, i8*) unnamed_addr #3

declare dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i8*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #3

declare void @_ZN20json_schema_compiler19manifest_parse_util29PopulateInvalidEnumValueErrorEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPNS7_IDsNS4_IDsEENS8_IDsEEEEPNS3_6vectorIS6_NS8_IS6_EEEE(i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api15content_scripts13ContentScriptEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector.77"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #1 comdat {
  %4 = alloca %"struct.extensions::api::content_scripts::ContentScript", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"struct.extensions::api::content_scripts::ContentScript", align 8
  %8 = alloca %"class.std::__1::basic_string.44", align 8
  %9 = alloca %"class.std::__1::basic_string.44", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 0
  %13 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 1
  %15 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %14, align 8
  %16 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %3, %17
  %18 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %19, %17 ], [ %15, %3 ]
  %19 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %18, i64 -1
  tail call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* %19) #13
  %20 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %19, %13
  br i1 %20, label %21, label %17

21:                                               ; preds = %17, %3
  store %"struct.extensions::api::content_scripts::ContentScript"* %13, %"struct.extensions::api::content_scripts::ContentScript"** %14, align 8
  %22 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 96, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 92, i1 false) #13
  %23 = bitcast %"class.std::__1::basic_string.44"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #13
  %26 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %27 = tail call %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %26) #13
  %28 = icmp eq %"class.std::__1::vector.36"* %27, null
  %29 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %27, i64 0, i32 0, i32 1
  %30 = bitcast %"class.base::Value"** %29 to i64*
  %31 = bitcast %"class.std::__1::vector.36"* %27 to i64*
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  %34 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %27, i64 0, i32 0, i32 0
  %35 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %4 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %7 to i64*
  %38 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"** %38 to i64*
  %40 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  %42 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  %45 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 3
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %51 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 4
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.9"* %51 to i64*
  %54 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 5
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.9"* %54 to i64*
  %57 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 6
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.9"* %57 to i64*
  %60 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 7
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  %63 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  %66 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %7, i64 0, i32 9
  %67 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %14 to i64*
  br label %68

68:                                               ; preds = %189, %21
  %69 = phi i64 [ 0, %21 ], [ %190, %189 ]
  br i1 %28, label %75, label %70

70:                                               ; preds = %68
  %71 = load i64, i64* %30, align 8
  %72 = load i64, i64* %31, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 5
  br label %75

75:                                               ; preds = %68, %70
  %76 = phi i64 [ %74, %70 ], [ 0, %68 ]
  %77 = icmp ult i64 %69, %76
  br i1 %77, label %78, label %192

78:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  br i1 %28, label %85, label %79

79:                                               ; preds = %78
  %80 = load %"class.base::Value"*, %"class.base::Value"** %34, align 8
  %81 = load i64, i64* %30, align 8
  %82 = ptrtoint %"class.base::Value"* %80 to i64
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 5
  br label %85

85:                                               ; preds = %78, %79
  %86 = phi %"class.base::Value"* [ %80, %79 ], [ null, %78 ]
  %87 = phi i64 [ %84, %79 ], [ 0, %78 ]
  %88 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %86, i64 %87
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %86, %"class.base::Value"* %86, %"class.base::Value"* %88) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %33, i64 24, i1 false) #13
  %89 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %5, i64 %69) #13
  %90 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 96, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 92, i1 false) #13
  %91 = call zeroext i1 @_ZN10extensions3api15content_scripts13ContentScript8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32) %90, %"struct.extensions::api::content_scripts::ContentScript"* nonnull %4, %"class.std::__1::basic_string.44"* nonnull %8) #13
  br i1 %91, label %145, label %92

92:                                               ; preds = %85
  call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %35) #13
  %93 = bitcast %"class.std::__1::basic_string.44"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13
  %94 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #13
  %95 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #13
  %96 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i16*, i16** %24, align 8
  %101 = bitcast %"class.std::__1::basic_string.44"* %8 to i16*
  %102 = select i1 %99, i16* %100, i16* %101
  %103 = load i64, i64* %25, align 8
  %104 = zext i8 %98 to i64
  %105 = select i1 %99, i64 %103, i64 %104
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %102, i64 %105) #13
  %106 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = select i1 %109, i8* %111, i8* %95
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i64 %69, i8* %112) #13
  %113 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = select i1 %116, i8* %118, i8* %94
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = zext i8 %115 to i64
  %123 = select i1 %116, i64 %121, i64 %122
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %9, i8* %119, i64 %123) #13
  %124 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %124, i64 0, i32 1, i32 1
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %92
  %129 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %128, %92
  %132 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %93, i64 24, i1 false) #13
  %133 = bitcast %"class.std::__1::basic_string.44"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %133, i64 0, i32 1, i32 1
  store i8 0, i8* %134, align 1
  %135 = bitcast %"class.std::__1::basic_string.44"* %9 to i16*
  store i16 0, i16* %135, align 8
  %136 = load i8, i8* %114, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %131, %138
  %141 = load i8, i8* %107, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %191

143:                                              ; preds = %140
  %144 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %144) #14
  br label %191

145:                                              ; preds = %85
  %146 = call dereferenceable(96) %"struct.extensions::api::content_scripts::ContentScript"* @_ZN10extensions3api15content_scripts13ContentScriptaSEOS2_(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %7, %"struct.extensions::api::content_scripts::ContentScript"* nonnull dereferenceable(96) %4) #13
  call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %35) #13
  %147 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %14, align 8
  %148 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %36, align 8
  %149 = icmp ult %"struct.extensions::api::content_scripts::ContentScript"* %147, %148
  br i1 %149, label %150, label %188

150:                                              ; preds = %145
  %151 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 24, i1 false) #13
  %152 = load i64, i64* %37, align 8
  %153 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %147 to i64*
  store i64 %152, i64* %153, align 8
  %154 = load i64, i64* %39, align 8
  %155 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 0, i32 0, i32 1
  %156 = bitcast %"class.std::__1::basic_string"** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = load i64, i64* %41, align 8
  %158 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %159 = bitcast %"class.std::__1::basic_string"** %158 to i64*
  store i64 %157, i64* %159, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #13
  %160 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 1
  %161 = load i64, i64* %44, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %43, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 2
  %164 = load i64, i64* %47, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %46, align 8
  %165 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 3
  %167 = load i64, i64* %50, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %49, align 8
  %168 = bitcast %"class.std::__1::unique_ptr"* %166 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 4
  %170 = load i64, i64* %53, align 8
  store i8* null, i8** %52, align 8
  %171 = bitcast %"class.std::__1::unique_ptr.9"* %169 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 5
  %173 = load i64, i64* %56, align 8
  store i8* null, i8** %55, align 8
  %174 = bitcast %"class.std::__1::unique_ptr.9"* %172 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 6
  %176 = load i64, i64* %59, align 8
  store i8* null, i8** %58, align 8
  %177 = bitcast %"class.std::__1::unique_ptr.9"* %175 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 7
  %179 = load i64, i64* %62, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %61, align 8
  %180 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 8
  %182 = load i64, i64* %65, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %64, align 8
  %183 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 0, i32 9
  %185 = load i32, i32* %66, align 8
  store i32 %185, i32* %184, align 8
  %186 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %147, i64 1
  %187 = ptrtoint %"struct.extensions::api::content_scripts::ContentScript"* %186 to i64
  store i64 %187, i64* %67, align 8
  br label %189

188:                                              ; preds = %145
  call void @_ZNSt3__16vectorIN10extensions3api15content_scripts13ContentScriptENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.77"* %1, %"struct.extensions::api::content_scripts::ContentScript"* nonnull dereferenceable(96) %7) #13
  br label %189

189:                                              ; preds = %150, %188
  %190 = add nuw i64 %69, 1
  br label %68

191:                                              ; preds = %143, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  br label %194

192:                                              ; preds = %75
  %193 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %194

194:                                              ; preds = %192, %191
  %195 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %193, %192 ], [ %96, %191 ]
  %196 = phi i1 [ true, %192 ], [ false, %191 ]
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %195, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %194
  %201 = bitcast %"class.std::__1::basic_string.44"* %8 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #14
  br label %203

203:                                              ; preds = %194, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %22) #13
  ret i1 %196
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api15content_scripts13ContentScriptENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.77"*, %"struct.extensions::api::content_scripts::ContentScript"* dereferenceable(96)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::content_scripts::ContentScript"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.extensions::api::content_scripts::ContentScript"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %32
  %36 = ptrtoint %"struct.extensions::api::content_scripts::ContentScript"* %35 to i64
  %37 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #13
  %52 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 1
  %53 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::unique_ptr"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %54, align 8
  %57 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 2
  %59 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %60, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 3
  %65 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 3
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %66, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 4
  %71 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 4
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.9"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  store i8* null, i8** %72, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.9"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 5
  %77 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 5
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.9"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  store i8* null, i8** %78, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.9"* %76 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 6
  %83 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 6
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.9"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store i8* null, i8** %84, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.9"* %82 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 7
  %89 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 7
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %90, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 8
  %95 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %33, i64 %9, i32 9
  %101 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %1, i64 0, i32 9
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %34, i64 1
  %104 = ptrtoint %"struct.extensions::api::content_scripts::ContentScript"* %103 to i64
  %105 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %106 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %105, align 8
  %107 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %3, align 8
  %108 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %107, %106
  br i1 %108, label %109, label %111

109:                                              ; preds = %31
  %110 = ptrtoint %"struct.extensions::api::content_scripts::ContentScript"* %106 to i64
  br label %186

111:                                              ; preds = %31, %111
  %112 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %114, %111 ], [ %34, %31 ]
  %113 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %115, %111 ], [ %107, %31 ]
  %114 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1
  %115 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1
  %116 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #13
  %117 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %114 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 0, i32 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 0, i32 0, i32 1
  %124 = bitcast %"class.std::__1::basic_string"** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"class.std::__1::basic_string"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast %"class.std::__1::basic_string"** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #13
  %131 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 1
  %132 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 1
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.std::__1::unique_ptr"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %133, align 8
  %136 = bitcast %"class.std::__1::unique_ptr"* %131 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 2
  %138 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 2
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  %141 = load i64, i64* %140, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %139, align 8
  %142 = bitcast %"class.std::__1::unique_ptr"* %137 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 3
  %144 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 3
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::unique_ptr"* %144 to i64*
  %147 = load i64, i64* %146, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %145, align 8
  %148 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 4
  %150 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 4
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.9"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store i8* null, i8** %151, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.9"* %149 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 5
  %156 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 5
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr.9"* %156 to i64*
  %159 = load i64, i64* %158, align 8
  store i8* null, i8** %157, align 8
  %160 = bitcast %"class.std::__1::unique_ptr.9"* %155 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 6
  %162 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 6
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %162, i64 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.std::__1::unique_ptr.9"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  store i8* null, i8** %163, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.9"* %161 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 7
  %168 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 7
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.std::__1::unique_ptr"* %168 to i64*
  %171 = load i64, i64* %170, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %169, align 8
  %172 = bitcast %"class.std::__1::unique_ptr"* %167 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 8
  %174 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 8
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  %177 = load i64, i64* %176, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %175, align 8
  %178 = bitcast %"class.std::__1::unique_ptr"* %173 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %112, i64 -1, i32 9
  %180 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %113, i64 -1, i32 9
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %115, %106
  br i1 %182, label %183, label %111

183:                                              ; preds = %111
  %184 = load i64, i64* %6, align 8
  %185 = load %"struct.extensions::api::content_scripts::ContentScript"*, %"struct.extensions::api::content_scripts::ContentScript"** %3, align 8
  br label %186

186:                                              ; preds = %109, %183
  %187 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %106, %109 ], [ %185, %183 ]
  %188 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %34, %109 ], [ %114, %183 ]
  %189 = phi i64 [ %110, %109 ], [ %184, %183 ]
  %190 = ptrtoint %"struct.extensions::api::content_scripts::ContentScript"* %188 to i64
  store i64 %190, i64* %6, align 8
  store i64 %104, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %191 = inttoptr i64 %189 to %"struct.extensions::api::content_scripts::ContentScript"*
  %192 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %187, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %186, %193
  %194 = phi %"struct.extensions::api::content_scripts::ContentScript"* [ %195, %193 ], [ %187, %186 ]
  %195 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %194, i64 -1
  tail call void @_ZN10extensions3api15content_scripts13ContentScriptD2Ev(%"struct.extensions::api::content_scripts::ContentScript"* %195) #13
  %196 = icmp eq %"struct.extensions::api::content_scripts::ContentScript"* %195, %191
  br i1 %196, label %197, label %193

197:                                              ; preds = %193, %186
  %198 = icmp eq i64 %189, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = inttoptr i64 %189 to i8*
  tail call void @_ZdlPv(i8* %200) #14
  br label %201

201:                                              ; preds = %197, %199
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!20 = !{i8 0, i8 2}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.isvectorized", i32 1}
!49 = distinct !{!49, !50}
!50 = !{!"llvm.loop.unroll.disable"}
!51 = distinct !{!51, !50}
!52 = distinct !{!52, !48}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !48}
!59 = distinct !{!59, !50}
!60 = distinct !{!60, !50}
!61 = distinct !{!61, !48}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !48}
!68 = distinct !{!68, !50}
!69 = distinct !{!69, !50}
!70 = distinct !{!70, !48}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !48}
!77 = distinct !{!77, !50}
!78 = distinct !{!78, !50}
!79 = distinct !{!79, !48}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !48}
!86 = distinct !{!86, !50}
!87 = distinct !{!87, !50}
!88 = distinct !{!88, !48}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !48}
!95 = distinct !{!95, !50}
!96 = distinct !{!96, !50}
!97 = distinct !{!97, !48}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !48}
!104 = distinct !{!104, !50}
!105 = distinct !{!105, !48}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !48}
!112 = distinct !{!112, !50}
!113 = distinct !{!113, !50}
!114 = distinct !{!114, !48}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !48}
!121 = distinct !{!121, !50}
!122 = distinct !{!122, !48}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !48}
!129 = distinct !{!129, !50}
!130 = distinct !{!130, !50}
!131 = distinct !{!131, !48}
!132 = distinct !{!132, !48}
!133 = distinct !{!133, !50}
!134 = distinct !{!134, !135, !48}
!135 = !{!"llvm.loop.unroll.runtime.disable"}
!136 = !{!137}
!137 = distinct !{!137, !138}
!138 = distinct !{!138, !"LVerDomain"}
!139 = !{!140}
!140 = distinct !{!140, !138}
!141 = distinct !{!141, !48}
!142 = distinct !{!142, !50}
!143 = distinct !{!143, !50}
!144 = distinct !{!144, !48}
!145 = !{!146}
!146 = distinct !{!146, !147}
!147 = distinct !{!147, !"LVerDomain"}
!148 = !{!149}
!149 = distinct !{!149, !147}
!150 = distinct !{!150, !48}
!151 = distinct !{!151, !50}
!152 = distinct !{!152, !50}
!153 = distinct !{!153, !48}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !48}
!160 = distinct !{!160, !50}
!161 = distinct !{!161, !48}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !48}
!168 = distinct !{!168, !50}
!169 = distinct !{!169, !50}
!170 = distinct !{!170, !48}
!171 = !{!172}
!172 = distinct !{!172, !173}
!173 = distinct !{!173, !"LVerDomain"}
!174 = !{!175}
!175 = distinct !{!175, !173}
!176 = distinct !{!176, !48}
!177 = distinct !{!177, !50}
!178 = distinct !{!178, !48}
!179 = !{!180}
!180 = distinct !{!180, !181}
!181 = distinct !{!181, !"LVerDomain"}
!182 = !{!183}
!183 = distinct !{!183, !181}
!184 = distinct !{!184, !48}
!185 = distinct !{!185, !50}
!186 = distinct !{!186, !50}
!187 = distinct !{!187, !48}
!188 = !{!189}
!189 = distinct !{!189, !190}
!190 = distinct !{!190, !"LVerDomain"}
!191 = !{!192}
!192 = distinct !{!192, !190}
!193 = distinct !{!193, !48}
!194 = distinct !{!194, !50}
!195 = distinct !{!195, !48}
