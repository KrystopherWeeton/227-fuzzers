; ModuleID = '../../chrome/app/chrome_main.cc'
source_filename = "../../chrome/app/chrome_main.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ChromeMainDelegate = type { %"class.content::ContentMainDelegate", %class.ChromeContentClient, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13" }
%"class.content::ContentMainDelegate" = type { i32 (...)** }
%class.ChromeContentClient = type { %"class.content::ContentClient", %"class.base::Lock", %"class.std::__1::unique_ptr" }
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type opaque
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.embedder_support::OriginTrialPolicyImpl"* }
%"class.embedder_support::OriginTrialPolicyImpl" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.ChromeContentBrowserClient* }
%class.ChromeContentBrowserClient = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.tracing::TracingSamplerProfiler"* }
%"class.tracing::TracingSamplerProfiler" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.HeapProfilerController* }
%class.HeapProfilerController = type opaque
%"struct.content::ContentMainParams" = type <{ %"class.content::ContentMainDelegate"*, i32, [4 x i8], i8**, %"class.base::OnceCallback"*, %"class.base::OnceCallback.20"*, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.20" = type opaque
%class.MainThreadStackSamplingProfiler = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.ThreadProfiler* }
%class.ThreadProfiler = type opaque
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }

@_ZN8switches9kHeadlessE = external constant [0 x i8], align 1
@_ZN8switches15kEnableCrashpadE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define i32 @ChromeMain(i32, i8**) local_unnamed_addr #0 {
  %3 = alloca %class.ChromeMainDelegate, align 8
  %4 = alloca %"struct.content::ContentMainParams", align 8
  %5 = alloca %class.MainThreadStackSamplingProfiler, align 8
  %6 = bitcast %class.ChromeMainDelegate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 120, i1 false)
  call void @_ZN18ChromeMainDelegateC1EN4base9TimeTicksE(%class.ChromeMainDelegate* nonnull %3, i64 0) #5
  %7 = bitcast %"struct.content::ContentMainParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %class.ChromeMainDelegate, %class.ChromeMainDelegate* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.content::ContentMainParams", %"struct.content::ContentMainParams"* %4, i64 0, i32 0
  store %"class.content::ContentMainDelegate"* %8, %"class.content::ContentMainDelegate"** %9, align 8
  %10 = getelementptr inbounds %"struct.content::ContentMainParams", %"struct.content::ContentMainParams"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.content::ContentMainParams", %"struct.content::ContentMainParams"* %4, i64 0, i32 3
  %12 = getelementptr inbounds i8**, i8*** %11, i64 1
  %13 = bitcast i8*** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 17, i1 false) #5
  store i32 %0, i32* %10, align 8
  store i8** %1, i8*** %11, align 8
  %14 = call zeroext i1 @_ZN4base11CommandLine4InitEiPKPKc(i32 %0, i8** %1) #5
  %15 = call zeroext i1 @_ZN4base11CommandLine4InitEiPKPKc(i32 0, i8** null) #5
  %16 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %17 = bitcast %class.MainThreadStackSamplingProfiler* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  %18 = getelementptr inbounds %class.MainThreadStackSamplingProfiler, %class.MainThreadStackSamplingProfiler* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.ThreadProfiler* inttoptr (i64 -6148914691236517206 to %class.ThreadProfiler*), %class.ThreadProfiler** %18, align 8
  call void @_ZN31MainThreadStackSamplingProfilerC1Ev(%class.MainThreadStackSamplingProfiler* nonnull %5) #5
  %19 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches9kHeadlessE, i64 0, i64 0)) #5
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = call i32 @_ZN8headless17HeadlessShellMainERKN7content17ContentMainParamsE(%"struct.content::ContentMainParams"* nonnull dereferenceable(48) %4) #5
  br label %26

22:                                               ; preds = %2
  %23 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %24 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kEnableCrashpadE, i64 0, i64 0)) #5
  call void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %23, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kEnableCrashpadE, i64 0, i64 0), i64 %24) #5
  %25 = call i32 @_ZN7content11ContentMainERKNS_17ContentMainParamsE(%"struct.content::ContentMainParams"* nonnull dereferenceable(48) %4) #5
  br label %26

26:                                               ; preds = %22, %20
  %27 = phi i32 [ %21, %20 ], [ %25, %22 ]
  call void @_ZN31MainThreadStackSamplingProfilerD1Ev(%class.MainThreadStackSamplingProfiler* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #5
  call void @_ZN18ChromeMainDelegateD1Ev(%class.ChromeMainDelegate* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #5
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN18ChromeMainDelegateC1EN4base9TimeTicksE(%class.ChromeMainDelegate*, i64) unnamed_addr #2

declare zeroext i1 @_ZN4base11CommandLine4InitEiPKPKc(i32, i8**) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZN31MainThreadStackSamplingProfilerC1Ev(%class.MainThreadStackSamplingProfiler*) unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare i32 @_ZN8headless17HeadlessShellMainERKN7content17ContentMainParamsE(%"struct.content::ContentMainParams"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN4base11CommandLine12AppendSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN7content11ContentMainERKNS_17ContentMainParamsE(%"struct.content::ContentMainParams"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN31MainThreadStackSamplingProfilerD1Ev(%class.MainThreadStackSamplingProfiler*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18ChromeMainDelegateD1Ev(%class.ChromeMainDelegate*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
