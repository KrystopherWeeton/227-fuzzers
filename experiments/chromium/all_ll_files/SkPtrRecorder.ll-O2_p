; ModuleID = '../../third_party/skia/src/core/SkPtrRecorder.cpp'
source_filename = "../../third_party/skia/src/core/SkPtrRecorder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkPtrSet = type { %class.SkRefCnt.base, %class.SkTDArray }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %"struct.SkPtrSet::Pair"*, i32, i32 }
%"struct.SkPtrSet::Pair" = type { i8*, i32 }

@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkPtrSet5resetEv(%class.SkPtrSet*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %2, i64 0, i32 0
  %4 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %3, align 8
  %5 = icmp eq %"struct.SkPtrSet::Pair"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %4, i64 %9
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = bitcast %class.SkPtrSet* %0 to void (%class.SkPtrSet*, i8*)***
  br label %14

14:                                               ; preds = %12, %14
  %15 = phi %"struct.SkPtrSet::Pair"* [ %4, %12 ], [ %21, %14 ]
  %16 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %15, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load void (%class.SkPtrSet*, i8*)**, void (%class.SkPtrSet*, i8*)*** %13, align 8
  %19 = getelementptr inbounds void (%class.SkPtrSet*, i8*)*, void (%class.SkPtrSet*, i8*)** %18, i64 4
  %20 = load void (%class.SkPtrSet*, i8*)*, void (%class.SkPtrSet*, i8*)** %19, align 8
  tail call void %20(%class.SkPtrSet* %0, i8* %17) #7
  %21 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %15, i64 1
  %22 = icmp ult %"struct.SkPtrSet::Pair"* %21, %10
  br i1 %22, label %14, label %23

23:                                               ; preds = %14
  %24 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %3, align 8
  %25 = icmp eq %"struct.SkPtrSet::Pair"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %6, %23
  %27 = phi %"struct.SkPtrSet::Pair"* [ %24, %23 ], [ %4, %6 ]
  %28 = bitcast %"struct.SkPtrSet::Pair"* %27 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %28) #7
  %29 = bitcast %class.SkTDArray* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #7
  br label %30

30:                                               ; preds = %1, %23, %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN8SkPtrSet4LessERKNS_4PairES2_(%"struct.SkPtrSet::Pair"* nocapture readonly dereferenceable(16), %"struct.SkPtrSet::Pair"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  ret i1 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkPtrSet4findEPv(%class.SkPtrSet* nocapture readonly, i8*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %7, align 8
  %9 = icmp slt i32 %6, 1
  br i1 %9, label %46, label %10

10:                                               ; preds = %4
  %11 = add nsw i32 %6, -1
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %10, %13
  %14 = phi i32 [ %25, %13 ], [ 0, %10 ]
  %15 = phi i32 [ %24, %13 ], [ %11, %10 ]
  %16 = sub nsw i32 %15, %14
  %17 = ashr i32 %16, 1
  %18 = add nsw i32 %17, %14
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %19, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ult i8* %21, %1
  %23 = add nsw i32 %18, 1
  %24 = select i1 %22, i32 %15, i32 %18
  %25 = select i1 %22, i32 %23, i32 %14
  %26 = icmp sgt i32 %24, %25
  br i1 %26, label %13, label %27

27:                                               ; preds = %13, %10
  %28 = phi i32 [ 0, %10 ], [ %24, %13 ]
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %29, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ult i8* %31, %1
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = sub i32 -2, %28
  br label %39

35:                                               ; preds = %27
  %36 = icmp ugt i8* %31, %1
  %37 = sext i1 %36 to i32
  %38 = xor i32 %28, %37
  br label %39

39:                                               ; preds = %33, %35
  %40 = phi i32 [ %38, %35 ], [ %34, %33 ]
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %43, i32 1
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %4, %42, %39, %2
  %47 = phi i32 [ 0, %2 ], [ %45, %42 ], [ 0, %39 ], [ 0, %4 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkPtrSet3addEPv(%class.SkPtrSet*, i8*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %92, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %5, i64 0, i32 0
  %9 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %8, align 8
  %10 = icmp slt i32 %7, 1
  br i1 %10, label %43, label %11

11:                                               ; preds = %4
  %12 = add nsw i32 %7, -1
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %11, %14
  %15 = phi i32 [ %26, %14 ], [ 0, %11 ]
  %16 = phi i32 [ %25, %14 ], [ %12, %11 ]
  %17 = sub nsw i32 %16, %15
  %18 = ashr i32 %17, 1
  %19 = add nsw i32 %18, %15
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %9, i64 %20, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ult i8* %22, %1
  %24 = add nsw i32 %19, 1
  %25 = select i1 %23, i32 %16, i32 %19
  %26 = select i1 %23, i32 %24, i32 %15
  %27 = icmp sgt i32 %25, %26
  br i1 %27, label %14, label %28

28:                                               ; preds = %14, %11
  %29 = phi i32 [ 0, %11 ], [ %25, %14 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %9, i64 %30, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %32, %1
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = sub i32 -2, %29
  br label %40

36:                                               ; preds = %28
  %37 = icmp ugt i8* %32, %1
  %38 = sext i1 %37 to i32
  %39 = xor i32 %29, %38
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi i32 [ %39, %36 ], [ %35, %34 ]
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %88

43:                                               ; preds = %4, %40
  %44 = phi i32 [ %41, %40 ], [ -1, %4 ]
  %45 = xor i32 %44, -1
  %46 = bitcast %class.SkPtrSet* %0 to void (%class.SkPtrSet*, i8*)***
  %47 = load void (%class.SkPtrSet*, i8*)**, void (%class.SkPtrSet*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkPtrSet*, i8*)*, void (%class.SkPtrSet*, i8*)** %47, i64 3
  %49 = load void (%class.SkPtrSet*, i8*)*, void (%class.SkPtrSet*, i8*)** %48, align 8
  tail call void %49(%class.SkPtrSet* %0, i8* nonnull %1) #7
  %50 = add nsw i32 %7, 1
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = add i32 %51, 1
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %56, label %55

55:                                               ; preds = %43
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

56:                                               ; preds = %43
  %57 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %58, %53
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %8, align 8
  br label %75

62:                                               ; preds = %56
  %63 = add i32 %51, 5
  %64 = lshr i32 %63, 2
  %65 = add nuw i32 %64, %63
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

68:                                               ; preds = %62
  store i32 %65, i32* %57, align 8
  %69 = bitcast %class.SkTDArray* %5 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = sext i32 %65 to i64
  %72 = shl nsw i64 %71, 4
  %73 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %70, i64 %72) #7
  store i8* %73, i8** %69, align 8
  %74 = bitcast i8* %73 to %"struct.SkPtrSet::Pair"*
  br label %75

75:                                               ; preds = %60, %68
  %76 = phi %"struct.SkPtrSet::Pair"* [ %61, %60 ], [ %74, %68 ]
  store i32 %53, i32* %6, align 4
  %77 = sext i32 %45 to i64
  %78 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %76, i64 %77
  %79 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %78, i64 1
  %80 = bitcast %"struct.SkPtrSet::Pair"* %79 to i8*
  %81 = bitcast %"struct.SkPtrSet::Pair"* %78 to i8*
  %82 = sub nsw i64 %52, %77
  %83 = shl nsw i64 %82, 4
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %83, i1 false) #7
  %84 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %78, i64 0, i32 0
  store i8* %1, i8** %84, align 8
  %85 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %76, i64 %77, i32 1
  store i32 %50, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %81, i64 12
  %87 = bitcast i8* %86 to i32*
  store i32 -1431655766, i32* %87, align 4
  br label %92

88:                                               ; preds = %40
  %89 = sext i32 %41 to i64
  %90 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %9, i64 %89, i32 1
  %91 = load i32, i32* %90, align 8
  br label %92

92:                                               ; preds = %75, %88, %2
  %93 = phi i32 [ 0, %2 ], [ %50, %75 ], [ %91, %88 ]
  ret i32 %93
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8SkPtrSet11copyToArrayEPPv(%class.SkPtrSet* nocapture readonly, i8** nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkPtrSet, %class.SkPtrSet* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = and i64 %9, 1
  %11 = icmp eq i32 %4, 1
  br i1 %11, label %39, label %12

12:                                               ; preds = %6
  %13 = sub nsw i64 %9, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %36, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %37, %14 ]
  %17 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %15, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %15, i32 0
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds i8*, i8** %1, i64 %23
  %25 = bitcast i8** %24 to i64*
  store i64 %22, i64* %25, align 8
  %26 = or i64 %15, 1
  %27 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %26, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %26, i32 0
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sext i32 %29 to i64
  %34 = getelementptr inbounds i8*, i8** %1, i64 %33
  %35 = bitcast i8** %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = add nuw nsw i64 %15, 2
  %37 = add i64 %16, -2
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %14

39:                                               ; preds = %14, %6
  %40 = phi i64 [ 0, %6 ], [ %36, %14 ]
  %41 = icmp eq i64 %10, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %40, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -1
  %46 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %8, i64 %40, i32 0
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sext i32 %45 to i64
  %50 = getelementptr inbounds i8*, i8** %1, i64 %49
  %51 = bitcast i8** %50 to i64*
  store i64 %48, i64* %51, align 8
  br label %52

52:                                               ; preds = %42, %39, %2
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
