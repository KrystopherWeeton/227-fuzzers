; ModuleID = '../../net/url_request/url_fetcher.cc'
source_filename = "../../net/url_request/url_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::URLFetcher" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GURL* }
%"class.net::URLFetcherDelegate" = type opaque
%"class.net::URLFetcherFactory" = type { i32 (...)** }
%"class.net::URLFetcherImpl" = type { %"class.net::URLFetcher", %class.scoped_refptr }
%class.scoped_refptr = type { %"class.net::URLFetcherCore"* }
%"class.net::URLFetcherCore" = type opaque

@_ZTVN3net10URLFetcherE = hidden unnamed_addr constant { [42 x i8*] } { [42 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::URLFetcher"*)* @_ZN3net10URLFetcherD2Ev to i8*), i8* bitcast (void (%"class.net::URLFetcher"*)* @_ZN3net10URLFetcherD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3net10URLFetcherD1Ev = hidden unnamed_addr alias void (%"class.net::URLFetcher"*), void (%"class.net::URLFetcher"*)* @_ZN3net10URLFetcherD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net10URLFetcherD2Ev(%"class.net::URLFetcher"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net10URLFetcherD0Ev(%"class.net::URLFetcher"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10URLFetcher9CancelAllEv() local_unnamed_addr #3 align 2 {
  tail call void @_ZN3net14URLFetcherImpl9CancelAllEv() #7
  ret void
}

declare void @_ZN3net14URLFetcherImpl9CancelAllEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10URLFetcher28SetIgnoreCertificateRequestsEb(i1 zeroext) local_unnamed_addr #3 align 2 {
  tail call void @_ZN3net14URLFetcherImpl28SetIgnoreCertificateRequestsEb(i1 zeroext %0) #7
  ret void
}

declare void @_ZN3net14URLFetcherImpl28SetIgnoreCertificateRequestsEb(i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::URLFetcher"* @_ZN3net10URLFetcher6CreateERK4GURLNS0_11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(%class.GURL* dereferenceable(120), i32, %"class.net::URLFetcherDelegate"*, i32) local_unnamed_addr #3 align 2 {
  %5 = tail call %"class.net::URLFetcherFactory"* @_ZN3net14URLFetcherImpl7factoryEv() #7
  %6 = icmp eq %"class.net::URLFetcherFactory"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.net::URLFetcherFactory"* %5 to %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)***
  %9 = load %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)**, %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)*** %8, align 8
  %10 = load %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)*, %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)** %9, align 8
  %11 = tail call %"class.net::URLFetcher"* %10(%"class.net::URLFetcherFactory"* nonnull %5, i32 0, %class.GURL* dereferenceable(120) %0, i32 %1, %"class.net::URLFetcherDelegate"* %2, i32 %3) #7
  br label %16

12:                                               ; preds = %4
  %13 = tail call i8* @_Znwm(i64 16) #8
  %14 = bitcast i8* %13 to %"class.net::URLFetcherImpl"*
  tail call void @_ZN3net14URLFetcherImplC1ERK4GURLNS_10URLFetcher11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLFetcherImpl"* nonnull %14, %class.GURL* dereferenceable(120) %0, i32 %1, %"class.net::URLFetcherDelegate"* %2, i32 %3) #7
  %15 = bitcast i8* %13 to %"class.net::URLFetcher"*
  br label %16

16:                                               ; preds = %7, %12
  %17 = phi %"class.net::URLFetcher"* [ %15, %12 ], [ %11, %7 ]
  ret %"class.net::URLFetcher"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::URLFetcher"* @_ZN3net10URLFetcher6CreateEiRK4GURLNS0_11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(i32, %class.GURL* dereferenceable(120), i32, %"class.net::URLFetcherDelegate"*, i32) local_unnamed_addr #3 align 2 {
  %6 = tail call %"class.net::URLFetcherFactory"* @_ZN3net14URLFetcherImpl7factoryEv() #7
  %7 = icmp eq %"class.net::URLFetcherFactory"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.net::URLFetcherFactory"* %6 to %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)***
  %10 = load %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)**, %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)*** %9, align 8
  %11 = load %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)*, %"class.net::URLFetcher"* (%"class.net::URLFetcherFactory"*, i32, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)** %10, align 8
  %12 = tail call %"class.net::URLFetcher"* %11(%"class.net::URLFetcherFactory"* nonnull %6, i32 %0, %class.GURL* dereferenceable(120) %1, i32 %2, %"class.net::URLFetcherDelegate"* %3, i32 %4) #7
  br label %17

13:                                               ; preds = %5
  %14 = tail call i8* @_Znwm(i64 16) #8
  %15 = bitcast i8* %14 to %"class.net::URLFetcherImpl"*
  tail call void @_ZN3net14URLFetcherImplC1ERK4GURLNS_10URLFetcher11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLFetcherImpl"* nonnull %15, %class.GURL* dereferenceable(120) %1, i32 %2, %"class.net::URLFetcherDelegate"* %3, i32 %4) #7
  %16 = bitcast i8* %14 to %"class.net::URLFetcher"*
  br label %17

17:                                               ; preds = %13, %8
  %18 = phi %"class.net::URLFetcher"* [ %16, %13 ], [ %12, %8 ]
  ret %"class.net::URLFetcher"* %18
}

declare %"class.net::URLFetcherFactory"* @_ZN3net14URLFetcherImpl7factoryEv() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3net14URLFetcherImplC1ERK4GURLNS_10URLFetcher11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLFetcherImpl"*, %class.GURL* dereferenceable(120), i32, %"class.net::URLFetcherDelegate"*, i32) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
