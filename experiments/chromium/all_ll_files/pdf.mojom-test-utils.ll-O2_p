; ModuleID = 'gen/components/pdf/common/pdf.mojom-test-utils.cc'
source_filename = "gen/components/pdf/common/pdf.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdf::mojom::PdfListenerAsyncWaiter" = type { %"class.pdf::mojom::PdfListener"* }
%"class.pdf::mojom::PdfListener" = type { i32 (...)** }
%"class.pdf::mojom::PdfServiceAsyncWaiter" = type { %"class.pdf::mojom::PdfService"* }
%"class.pdf::mojom::PdfService" = type { i32 (...)** }
%"class.pdf::mojom::PdfListenerInterceptorForTesting" = type { %"class.pdf::mojom::PdfListener" }
%"class.gfx::PointF" = type { float, float }
%"class.pdf::mojom::PdfServiceInterceptorForTesting" = type { %"class.pdf::mojom::PdfService" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::mojom::Referrer"* }
%"class.blink::mojom::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>

$_ZN3pdf5mojom11PdfListenerD2Ev = comdat any

$_ZN3pdf5mojom32PdfListenerInterceptorForTestingD0Ev = comdat any

$_ZN3pdf5mojom10PdfServiceD2Ev = comdat any

$_ZN3pdf5mojom31PdfServiceInterceptorForTestingD0Ev = comdat any

@_ZTVN3pdf5mojom32PdfListenerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.pdf::mojom::PdfListener"*)* @_ZN3pdf5mojom11PdfListenerD2Ev to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)* @_ZN3pdf5mojom32PdfListenerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"*)* @_ZN3pdf5mojom32PdfListenerInterceptorForTesting16SetCaretPositionERKN3gfx6PointFE to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"*)* @_ZN3pdf5mojom32PdfListenerInterceptorForTesting24MoveRangeSelectionExtentERKN3gfx6PointFE to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)* @_ZN3pdf5mojom32PdfListenerInterceptorForTesting18SetSelectionBoundsERKN3gfx6PointFES5_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3pdf5mojom31PdfServiceInterceptorForTestingE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.pdf::mojom::PdfService"*)* @_ZN3pdf5mojom10PdfServiceD2Ev to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)* @_ZN3pdf5mojom31PdfServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %"class.mojo::PendingRemote"*)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting11SetListenerEN4mojo13PendingRemoteINS0_11PdfListenerEEE to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, i32)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting25UpdateContentRestrictionsEi to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting21HasUnsupportedFeatureEv to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %class.GURL*, %"class.mojo::StructPtr"*)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting9SaveUrlAsERK4GURLN4mojo9StructPtrIN5blink5mojom8ReferrerEEE to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting16SelectionChangedERKN3gfx6PointFEiS5_i to i8*), i8* bitcast (void (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, i1)* @_ZN3pdf5mojom31PdfServiceInterceptorForTesting16SetPluginCanSaveEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3pdf5mojom22PdfListenerAsyncWaiterC1EPNS0_11PdfListenerE = hidden unnamed_addr alias void (%"class.pdf::mojom::PdfListenerAsyncWaiter"*, %"class.pdf::mojom::PdfListener"*), void (%"class.pdf::mojom::PdfListenerAsyncWaiter"*, %"class.pdf::mojom::PdfListener"*)* @_ZN3pdf5mojom22PdfListenerAsyncWaiterC2EPNS0_11PdfListenerE
@_ZN3pdf5mojom22PdfListenerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.pdf::mojom::PdfListenerAsyncWaiter"*), void (%"class.pdf::mojom::PdfListenerAsyncWaiter"*)* @_ZN3pdf5mojom22PdfListenerAsyncWaiterD2Ev
@_ZN3pdf5mojom21PdfServiceAsyncWaiterC1EPNS0_10PdfServiceE = hidden unnamed_addr alias void (%"class.pdf::mojom::PdfServiceAsyncWaiter"*, %"class.pdf::mojom::PdfService"*), void (%"class.pdf::mojom::PdfServiceAsyncWaiter"*, %"class.pdf::mojom::PdfService"*)* @_ZN3pdf5mojom21PdfServiceAsyncWaiterC2EPNS0_10PdfServiceE
@_ZN3pdf5mojom21PdfServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.pdf::mojom::PdfServiceAsyncWaiter"*), void (%"class.pdf::mojom::PdfServiceAsyncWaiter"*)* @_ZN3pdf5mojom21PdfServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom32PdfListenerInterceptorForTesting16SetCaretPositionERKN3gfx6PointFE(%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)***
  %4 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)**, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.pdf::mojom::PdfListener"* %6(%"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.pdf::mojom::PdfListener"* %7 to void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)***
  %9 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)**, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)** %9, i64 2
  %11 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)** %10, align 8
  tail call void %11(%"class.pdf::mojom::PdfListener"* %7, %"class.gfx::PointF"* dereferenceable(8) %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom32PdfListenerInterceptorForTesting24MoveRangeSelectionExtentERKN3gfx6PointFE(%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)***
  %4 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)**, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.pdf::mojom::PdfListener"* %6(%"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.pdf::mojom::PdfListener"* %7 to void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)***
  %9 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)**, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)** %9, i64 3
  %11 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*)** %10, align 8
  tail call void %11(%"class.pdf::mojom::PdfListener"* %7, %"class.gfx::PointF"* dereferenceable(8) %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom32PdfListenerInterceptorForTesting18SetSelectionBoundsERKN3gfx6PointFES5_(%"class.pdf::mojom::PdfListenerInterceptorForTesting"*, %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)***
  %5 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)**, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)*, %"class.pdf::mojom::PdfListener"* (%"class.pdf::mojom::PdfListenerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.pdf::mojom::PdfListener"* %7(%"class.pdf::mojom::PdfListenerInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.pdf::mojom::PdfListener"* %8 to void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)***
  %10 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)**, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)** %10, i64 4
  %12 = load void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)*, void (%"class.pdf::mojom::PdfListener"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)** %11, align 8
  tail call void %12(%"class.pdf::mojom::PdfListener"* %8, %"class.gfx::PointF"* dereferenceable(8) %1, %"class.gfx::PointF"* dereferenceable(8) %2) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3pdf5mojom22PdfListenerAsyncWaiterC2EPNS0_11PdfListenerE(%"class.pdf::mojom::PdfListenerAsyncWaiter"* nocapture, %"class.pdf::mojom::PdfListener"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.pdf::mojom::PdfListenerAsyncWaiter", %"class.pdf::mojom::PdfListenerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.pdf::mojom::PdfListener"* %1, %"class.pdf::mojom::PdfListener"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3pdf5mojom22PdfListenerAsyncWaiterD2Ev(%"class.pdf::mojom::PdfListenerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting11SetListenerEN4mojo13PendingRemoteINS0_11PdfListenerEEE(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote", align 4
  %4 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %5 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %5, i64 8
  %7 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.pdf::mojom::PdfService"* %7(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %9 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #7
  %11 = bitcast %"class.pdf::mojom::PdfService"* %8 to void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)***
  %12 = load void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)**, void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)*, void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)** %12, i64 2
  %14 = load void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)*, void (%"class.pdf::mojom::PdfService"*, %"class.mojo::PendingRemote"*)** %13, align 8
  call void %14(%"class.pdf::mojom::PdfService"* %8, %"class.mojo::PendingRemote"* nonnull %3) #7
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting25UpdateContentRestrictionsEi(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %4 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %4, i64 8
  %6 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.pdf::mojom::PdfService"* %6(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.pdf::mojom::PdfService"* %7 to void (%"class.pdf::mojom::PdfService"*, i32)***
  %9 = load void (%"class.pdf::mojom::PdfService"*, i32)**, void (%"class.pdf::mojom::PdfService"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*, i32)*, void (%"class.pdf::mojom::PdfService"*, i32)** %9, i64 3
  %11 = load void (%"class.pdf::mojom::PdfService"*, i32)*, void (%"class.pdf::mojom::PdfService"*, i32)** %10, align 8
  tail call void %11(%"class.pdf::mojom::PdfService"* %7, i32 %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting21HasUnsupportedFeatureEv(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %3 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %3, i64 8
  %5 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.pdf::mojom::PdfService"* %5(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %7 = bitcast %"class.pdf::mojom::PdfService"* %6 to void (%"class.pdf::mojom::PdfService"*)***
  %8 = load void (%"class.pdf::mojom::PdfService"*)**, void (%"class.pdf::mojom::PdfService"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*)*, void (%"class.pdf::mojom::PdfService"*)** %8, i64 4
  %10 = load void (%"class.pdf::mojom::PdfService"*)*, void (%"class.pdf::mojom::PdfService"*)** %9, align 8
  tail call void %10(%"class.pdf::mojom::PdfService"* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting9SaveUrlAsERK4GURLN4mojo9StructPtrIN5blink5mojom8ReferrerEEE(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %class.GURL* dereferenceable(120), %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %6 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %6, i64 8
  %8 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.pdf::mojom::PdfService"* %8(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %10 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 0, i64* %12, align 8
  %14 = bitcast %"class.pdf::mojom::PdfService"* %9 to void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)***
  %15 = load void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)**, void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)*, void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)** %15, i64 5
  %17 = load void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)*, void (%"class.pdf::mojom::PdfService"*, %class.GURL*, %"class.mojo::StructPtr"*)** %16, align 8
  call void %17(%"class.pdf::mojom::PdfService"* %9, %class.GURL* dereferenceable(120) %1, %"class.mojo::StructPtr"* nonnull %4) #7
  %18 = load %"class.blink::mojom::Referrer"*, %"class.blink::mojom::Referrer"** %11, align 8
  store %"class.blink::mojom::Referrer"* null, %"class.blink::mojom::Referrer"** %11, align 8
  %19 = icmp eq %"class.blink::mojom::Referrer"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  call void @_ZN5blink5mojom8ReferrerD1Ev(%"class.blink::mojom::Referrer"* nonnull %18) #7
  %21 = bitcast %"class.blink::mojom::Referrer"* %18 to i8*
  call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting16SelectionChangedERKN3gfx6PointFEiS5_i(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, %"class.gfx::PointF"* dereferenceable(8), i32, %"class.gfx::PointF"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %7 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %7, i64 8
  %9 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.pdf::mojom::PdfService"* %9(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %11 = bitcast %"class.pdf::mojom::PdfService"* %10 to void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)***
  %12 = load void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)**, void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)*, void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)** %12, i64 6
  %14 = load void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)*, void (%"class.pdf::mojom::PdfService"*, %"class.gfx::PointF"*, i32, %"class.gfx::PointF"*, i32)** %13, align 8
  tail call void %14(%"class.pdf::mojom::PdfService"* %10, %"class.gfx::PointF"* dereferenceable(8) %1, i32 %2, %"class.gfx::PointF"* dereferenceable(8) %3, i32 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTesting16SetPluginCanSaveEb(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0 to %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)***
  %4 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)**, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %4, i64 8
  %6 = load %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)*, %"class.pdf::mojom::PdfService"* (%"class.pdf::mojom::PdfServiceInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.pdf::mojom::PdfService"* %6(%"class.pdf::mojom::PdfServiceInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.pdf::mojom::PdfService"* %7 to void (%"class.pdf::mojom::PdfService"*, i1)***
  %9 = load void (%"class.pdf::mojom::PdfService"*, i1)**, void (%"class.pdf::mojom::PdfService"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.pdf::mojom::PdfService"*, i1)*, void (%"class.pdf::mojom::PdfService"*, i1)** %9, i64 7
  %11 = load void (%"class.pdf::mojom::PdfService"*, i1)*, void (%"class.pdf::mojom::PdfService"*, i1)** %10, align 8
  tail call void %11(%"class.pdf::mojom::PdfService"* %7, i1 zeroext %1) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3pdf5mojom21PdfServiceAsyncWaiterC2EPNS0_10PdfServiceE(%"class.pdf::mojom::PdfServiceAsyncWaiter"* nocapture, %"class.pdf::mojom::PdfService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.pdf::mojom::PdfServiceAsyncWaiter", %"class.pdf::mojom::PdfServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.pdf::mojom::PdfService"* %1, %"class.pdf::mojom::PdfService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3pdf5mojom21PdfServiceAsyncWaiterD2Ev(%"class.pdf::mojom::PdfServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3pdf5mojom11PdfListenerD2Ev(%"class.pdf::mojom::PdfListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3pdf5mojom32PdfListenerInterceptorForTestingD0Ev(%"class.pdf::mojom::PdfListenerInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3pdf5mojom10PdfServiceD2Ev(%"class.pdf::mojom::PdfService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3pdf5mojom31PdfServiceInterceptorForTestingD0Ev(%"class.pdf::mojom::PdfServiceInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom8ReferrerD1Ev(%"class.blink::mojom::Referrer"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
