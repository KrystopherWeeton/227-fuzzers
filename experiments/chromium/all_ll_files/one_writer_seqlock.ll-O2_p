; ModuleID = '../../device/base/synchronization/one_writer_seqlock.cc'
source_filename = "../../device/base/synchronization/one_writer_seqlock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::OneWriterSeqLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN6device16OneWriterSeqLockC1Ev = hidden unnamed_addr alias void (%"class.device::OneWriterSeqLock"*), void (%"class.device::OneWriterSeqLock"*)* @_ZN6device16OneWriterSeqLockC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device16OneWriterSeqLockC2Ev(%"class.device::OneWriterSeqLock"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::OneWriterSeqLock", %"class.device::OneWriterSeqLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device16OneWriterSeqLock18AtomicWriterMemcpyEPvPKvm(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = lshr i64 %2, 2
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %0 to %"struct.std::__1::atomic"*
  %8 = bitcast i8* %1 to i32*
  %9 = add nsw i64 %4, -1
  %10 = and i64 %4, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = sub nsw i64 %4, %10
  br label %27

14:                                               ; preds = %27, %6
  %15 = phi i64 [ 0, %6 ], [ %45, %27 ]
  %16 = icmp eq i64 %10, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %23, %17 ], [ %15, %14 ]
  %19 = phi i64 [ %24, %17 ], [ %10, %14 ]
  %20 = getelementptr inbounds i32, i32* %8, i64 %18
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %21, i32* %22 monotonic, align 4
  %23 = add nuw nsw i64 %18, 1
  %24 = add i64 %19, -1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %17, !llvm.loop !2

26:                                               ; preds = %14, %17, %3
  ret void

27:                                               ; preds = %27, %12
  %28 = phi i64 [ 0, %12 ], [ %45, %27 ]
  %29 = phi i64 [ %13, %12 ], [ %46, %27 ]
  %30 = getelementptr inbounds i32, i32* %8, i64 %28
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %31, i32* %32 monotonic, align 4
  %33 = or i64 %28, 1
  %34 = getelementptr inbounds i32, i32* %8, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %33, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %35, i32* %36 monotonic, align 4
  %37 = or i64 %28, 2
  %38 = getelementptr inbounds i32, i32* %8, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %37, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %39, i32* %40 monotonic, align 4
  %41 = or i64 %28, 3
  %42 = getelementptr inbounds i32, i32* %8, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %41, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %43, i32* %44 monotonic, align 4
  %45 = add nuw nsw i64 %28, 4
  %46 = add i64 %29, -4
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %14, label %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device16OneWriterSeqLock18AtomicReaderMemcpyEPvPKvm(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = lshr i64 %2, 2
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %1 to %"struct.std::__1::atomic"*
  %8 = bitcast i8* %0 to i32*
  %9 = add nsw i64 %4, -1
  %10 = and i64 %4, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = sub nsw i64 %4, %10
  br label %27

14:                                               ; preds = %27, %6
  %15 = phi i64 [ 0, %6 ], [ %45, %27 ]
  %16 = icmp eq i64 %10, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %23, %17 ], [ %15, %14 ]
  %19 = phi i64 [ %24, %17 ], [ %10, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = getelementptr inbounds i32, i32* %8, i64 %18
  store i32 %21, i32* %22, align 4
  %23 = add nuw nsw i64 %18, 1
  %24 = add i64 %19, -1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %17, !llvm.loop !4

26:                                               ; preds = %14, %17, %3
  ret void

27:                                               ; preds = %27, %12
  %28 = phi i64 [ 0, %12 ], [ %45, %27 ]
  %29 = phi i64 [ %13, %12 ], [ %46, %27 ]
  %30 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = getelementptr inbounds i32, i32* %8, i64 %28
  store i32 %31, i32* %32, align 4
  %33 = or i64 %28, 1
  %34 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %33, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = getelementptr inbounds i32, i32* %8, i64 %33
  store i32 %35, i32* %36, align 4
  %37 = or i64 %28, 2
  %38 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %37, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = getelementptr inbounds i32, i32* %8, i64 %37
  store i32 %39, i32* %40, align 4
  %41 = or i64 %28, 3
  %42 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 %41, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = getelementptr inbounds i32, i32* %8, i64 %41
  store i32 %43, i32* %44, align 4
  %45 = add nuw nsw i64 %28, 4
  %46 = add i64 %29, -4
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %14, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6device16OneWriterSeqLock9ReadBeginEj(%"class.device::OneWriterSeqLock"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.device::OneWriterSeqLock", %"class.device::OneWriterSeqLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %4

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  %6 = load atomic i32, i32* %3 acquire, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = icmp ugt i32 %5, 10
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZN4base14PlatformThread18YieldCurrentThreadEv() #4
  br label %12

12:                                               ; preds = %9, %11
  %13 = add i32 %5, 1
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %15, label %4

15:                                               ; preds = %4, %12
  ret i32 %6
}

declare void @_ZN4base14PlatformThread18YieldCurrentThreadEv() local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6device16OneWriterSeqLock9ReadRetryEi(%"class.device::OneWriterSeqLock"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  fence acquire
  %3 = getelementptr inbounds %"class.device::OneWriterSeqLock", %"class.device::OneWriterSeqLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = icmp ne i32 %4, %1
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device16OneWriterSeqLock10WriteBeginEv(%"class.device::OneWriterSeqLock"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.device::OneWriterSeqLock", %"class.device::OneWriterSeqLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 monotonic
  fence release
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device16OneWriterSeqLock8WriteEndEv(%"class.device::OneWriterSeqLock"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.device::OneWriterSeqLock", %"class.device::OneWriterSeqLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 release
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
