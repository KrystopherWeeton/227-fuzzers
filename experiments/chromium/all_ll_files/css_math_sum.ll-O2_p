; ModuleID = '../../third_party/blink/renderer/core/css/cssom/css_math_sum.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/css_math_sum.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.226" }
%"class.WTF::HashMap.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.213", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.132", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.146", [4 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { float }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.155", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.164" }
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.104"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.111"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.217" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.300" }
%"struct.std::__1::atomic.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__atomic_base.302" }
%"struct.std::__1::__atomic_base.302" = type { %"struct.std::__1::__cxx_atomic_impl.303" }
%"struct.std::__1::__cxx_atomic_impl.303" = type { %"struct.std::__1::__cxx_atomic_base_impl.304" }
%"struct.std::__1::__cxx_atomic_base_impl.304" = type { i32 }
%"class.blink::CSSMathSum" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSMathVariadic" = type { %"class.blink::CSSMathValue", %"class.blink::Member" }
%"class.blink::CSSMathValue" = type { %"class.blink::CSSNumericValue" }
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase", [28 x i8] }>
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSNumericArray"* }
%"class.blink::CSSNumericArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.3" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"class.blink::Member.6"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::HeapVector.9" = type { %"class.WTF::Vector.12" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::Member.15"*, i32, i32 }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::V8UnionCSSNumericValueOrDouble"* }
%"class.blink::V8UnionCSSNumericValueOrDouble" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.18" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.18" = type { %"class.v8::TracedReference.19" }
%"class.v8::TracedReference.19" = type { %"class.v8::BasicTracedReference.20" }
%"class.v8::BasicTracedReference.20" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::VectorBuffer" = type <{ %"class.WTF::VectorBufferBase", [28 x i8], [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::CSSNumericSumValue" }
%"struct.blink::CSSNumericSumValue" = type { %"class.WTF::Vector.21" }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"struct.blink::CSSNumericSumValue::Term"*, i32, i32 }
%"struct.blink::CSSNumericSumValue::Term" = type { double, %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, i32 }
%"struct.blink::(anonymous namespace)::UnitMapComparator" = type { %"struct.blink::CSSNumericSumValue::Term" }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.30, i32, i8, i8, [2 x i8] }>
%union.anon.30 = type { %"class.WTF::Vector.31" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [16 x i8] }
%"class.WTF::VectorBufferBase.33" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.235, %"class.blink::Member.236", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.235 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.238" }
%"class.blink::Persistent.238" = type { %"class.blink::PersistentBase.239" }
%"class.blink::PersistentBase.239" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.244 }
%union.anon.244 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink15CSSNumericValueD2Ev = comdat any

$_ZN5blink10CSSMathSumD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink10CSSMathSum18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink10CSSMathSum7GetTypeEv = comdat any

$_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE = comdat any

$_ZNK5blink12CSSMathValue11IsUnitValueEv = comdat any

$_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE = comdat any

$_ZNK5blink10CSSMathSum11getOperatorEv = comdat any

$_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_ = comdat any

$_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink15CSSNumericArrayD0Ev = comdat any

$_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv = comdat any

$_ZN3WTFeqIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEEEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESJ_ = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink15CSSNumericArrayE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"Arguments can't be empty\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Incompatible types\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"calc(\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN5blink10CSSMathSumE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSMathSum"*)* @_ZN5blink10CSSMathSumD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSMathVariadic"*, %"class.blink::Visitor"*)* @_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSMathSum"*)* @_ZNK5blink10CSSMathSum18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::CSSMathSum"*)* @_ZNK5blink10CSSMathSum7GetTypeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSMathValue"*)* @_ZNK5blink12CSSMathValue10ToCSSValueEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSNumericValue8toStringEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6NegateEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6InvertEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathValue"*)* @_ZNK5blink12CSSMathValue11IsUnitValueEv to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.blink::CSSMathSum"*)* @_ZNK5blink10CSSMathSum8SumValueEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathVariadic"*, %"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE to i8*), i8* bitcast (%"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSMathSum"*)* @_ZNK5blink10CSSMathSum20ToCalcExpressionNodeEv to i8*), i8* bitcast (void (%"class.blink::CSSMathSum"*, i1, i1, %"class.WTF::StringBuilder"*)* @_ZNK5blink10CSSMathSum12BuildCSSTextENS_15CSSNumericValue6NestedENS1_9ParenLessERN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSMathSum"*)* @_ZNK5blink10CSSMathSum11getOperatorEv to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CSSPrimitiveValue::UnitType, int>]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink15CSSNumericValueE = external unnamed_addr constant { [22 x i8*] }, align 8
@_ZTVN5blink13CSSStyleValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZN5blink10CSSMathSum18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink15CSSNumericArrayE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSNumericArray"*)* @_ZN5blink15CSSNumericArrayD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSNumericArray"*, %"class.blink::Visitor"*)* @_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSNumericArray"*)* @_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink15CSSNumericArray18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSNumericSumValue::Term]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector.9"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.9", %"class.blink::HeapVector.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #8
  br label %12

8:                                                ; preds = %2
  call void @_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::HeapVector"* nonnull sret %3, %"class.blink::HeapVector.9"* dereferenceable(16) %0) #8
  %9 = call %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull %3, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  %10 = icmp eq %"class.blink::CSSMathSum"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %12

12:                                               ; preds = %11, %8, %7
  %13 = phi %"class.blink::CSSMathSum"* [ null, %7 ], [ null, %11 ], [ %9, %8 ]
  ret %"class.blink::CSSMathSum"* %13
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathSum"* @_ZN5blink10CSSMathSum6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericValueType", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 0, i8* %3, align 1
  %5 = bitcast %"class.blink::CSSNumericValueType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 64, i1 false)
  call void @_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_(%"class.blink::CSSNumericValueType"* nonnull sret %4, %"class.blink::HeapVector"* dereferenceable(16) %0, void (%"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8*)* nonnull @_ZN5blink19CSSNumericValueType3AddES0_S0_Rb, i8* nonnull dereferenceable(1) %3)
  %6 = load i8, i8* %3, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %57

8:                                                ; preds = %2
  %9 = call %"class.blink::CSSNumericArray"* @_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_(%"class.blink::HeapVector"* dereferenceable(16) %0) #8
  %10 = ptrtoint %"class.blink::CSSNumericArray"* %9 to i64
  %11 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #8
  %12 = bitcast i8* %11 to %"class.blink::CSSMathSum"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 40
  %19 = bitcast i8* %15 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 32
  %21 = bitcast i8* %20 to i32*
  store i32 7, i32* %21, align 8
  %22 = icmp ugt i32 %17, 7
  br i1 %22, label %23, label %31

23:                                               ; preds = %8
  %24 = zext i32 %17 to i64
  %25 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %24) #8
  %26 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast i8* %15 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = lshr i64 %25, 2
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %21, align 8
  br label %31

31:                                               ; preds = %23, %8
  %32 = phi i8* [ %18, %8 ], [ %26, %23 ]
  %33 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %11, i64 36
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = icmp ne i8* %32, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %46, !prof !3

42:                                               ; preds = %31
  %43 = zext i32 %34 to i64
  %44 = bitcast i32* %38 to i8*
  %45 = shl nuw nsw i64 %43, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #8
  br label %46

46:                                               ; preds = %42, %31
  %47 = getelementptr inbounds i8, i8* %11, i64 72
  %48 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 1
  %49 = bitcast i32* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %49, i64 12, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %11, i64 88
  %51 = bitcast i8* %50 to i64*
  store i64 %10, i64* %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink10CSSMathSumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %52 = getelementptr inbounds i8, i8* %11, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = icmp eq i8* %11, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %2, %46
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %58

58:                                               ; preds = %46, %57
  %59 = phi %"class.blink::CSSMathSum"* [ %12, %46 ], [ null, %57 ]
  %60 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !4

63:                                               ; preds = %58
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %58
  %65 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %68 = bitcast i8* %67 to i32*
  %69 = icmp eq i32* %66, %68
  br i1 %69, label %72, label %70, !prof !3

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::CSSNumericValueType"* %4 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %71, i32* %66) #8
  br label %72

72:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  ret %"class.blink::CSSMathSum"* %59
}

declare void @_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::HeapVector"* sret, %"class.blink::HeapVector.9"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_(%"class.blink::CSSNumericValueType"* noalias sret, %"class.blink::HeapVector"* dereferenceable(16), void (%"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8*)*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::CSSNumericValueType", align 8
  %6 = alloca %"class.blink::CSSNumericValueType", align 8
  %7 = alloca %"class.blink::CSSNumericValueType", align 8
  store i8 0, i8* %3, align 1
  %8 = bitcast %"class.blink::CSSNumericValueType"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 64, i1 false)
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %9, i32 0) #8
  %11 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %16 = bitcast %"class.blink::CSSNumericValueType"* %0 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 7, i32* %17, align 8
  %18 = icmp ugt i32 %14, 7
  br i1 %18, label %19, label %27

19:                                               ; preds = %4
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.blink::CSSNumericValueType"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 2
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %17, align 8
  br label %27

27:                                               ; preds = %19, %4
  %28 = phi i8* [ %15, %4 ], [ %22, %19 ]
  %29 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp ne i8* %28, null
  %35 = icmp ne i32* %33, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42, !prof !3

37:                                               ; preds = %27
  %38 = load i32, i32* %29, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast i32* %33 to i8*
  %41 = shl nuw nsw i64 %39, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #8
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 1
  %45 = bitcast i32* %43 to i8*
  %46 = bitcast i32* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 12, i1 false) #8
  %47 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, 1
  br i1 %49, label %50, label %163

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValueType"* %5 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %53 = bitcast %"class.blink::CSSNumericValueType"* %6 to i8**
  %54 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.blink::CSSNumericValueType"* %6 to i64*
  %56 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 1
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %61 = bitcast %"class.blink::CSSNumericValueType"* %7 to i8**
  %62 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.blink::CSSNumericValueType"* %7 to i64*
  %64 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 1
  %66 = bitcast i32* %65 to i8*
  %67 = bitcast %"class.blink::CSSNumericValueType"* %0 to %"class.WTF::VectorBuffer"*
  %68 = bitcast %"class.blink::CSSNumericValueType"* %5 to %"class.WTF::VectorBuffer"*
  %69 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 1
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast i8* %60 to i32*
  %77 = bitcast %"class.blink::CSSNumericValueType"* %7 to %"class.WTF::VectorBuffer"*
  %78 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast i8* %52 to i32*
  %80 = bitcast %"class.blink::CSSNumericValueType"* %6 to %"class.WTF::VectorBuffer"*
  br label %81

81:                                               ; preds = %156, %50
  %82 = phi i32 [ 1, %50 ], [ %159, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %51) #8
  %83 = load i32, i32* %17, align 8
  store i8* %52, i8** %53, align 8
  store i32 7, i32* %54, align 8
  %84 = icmp ugt i32 %83, 7
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = zext i32 %83 to i64
  %87 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %86) #8
  %88 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %87, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %89 = ptrtoint i8* %88 to i64
  store atomic i64 %89, i64* %55 monotonic, align 8
  %90 = lshr i64 %87, 2
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %54, align 8
  br label %92

92:                                               ; preds = %85, %81
  %93 = phi i8* [ %52, %81 ], [ %88, %85 ]
  %94 = load i32, i32* %31, align 4
  store i32 %94, i32* %56, align 4
  %95 = load i32*, i32** %57, align 8
  %96 = icmp ne i8* %93, null
  %97 = icmp ne i32* %95, null
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %103, !prof !3

99:                                               ; preds = %92
  %100 = zext i32 %94 to i64
  %101 = bitcast i32* %95 to i8*
  %102 = shl nuw nsw i64 %100, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* nonnull align 4 %101, i64 %102, i1 false) #8
  br label %103

103:                                              ; preds = %92, %99
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %45, i64 12, i1 false) #8
  %104 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %9, i32 %82) #8
  %105 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  store i8* %60, i8** %61, align 8
  store i32 7, i32* %62, align 8
  %109 = icmp ugt i32 %108, 7
  br i1 %109, label %110, label %117

110:                                              ; preds = %103
  %111 = zext i32 %108 to i64
  %112 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %111) #8
  %113 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %112, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %114 = ptrtoint i8* %113 to i64
  store atomic i64 %114, i64* %63 monotonic, align 8
  %115 = lshr i64 %112, 2
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %62, align 8
  br label %117

117:                                              ; preds = %110, %103
  %118 = phi i8* [ %60, %103 ], [ %113, %110 ]
  %119 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %64, align 4
  %121 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp ne i8* %118, null
  %124 = icmp ne i32* %122, null
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %130, !prof !3

126:                                              ; preds = %117
  %127 = zext i32 %120 to i64
  %128 = bitcast i32* %122 to i8*
  %129 = shl nuw nsw i64 %127, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* nonnull align 4 %128, i64 %129, i1 false) #8
  br label %130

130:                                              ; preds = %117, %126
  %131 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 1
  %132 = bitcast i32* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %132, i64 12, i1 false) #8
  call void %2(%"class.blink::CSSNumericValueType"* nonnull sret %5, %"class.blink::CSSNumericValueType"* nonnull %6, %"class.blink::CSSNumericValueType"* nonnull %7, i8* dereferenceable(1) %3) #8
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %67, %"class.WTF::VectorBuffer"* nonnull dereferenceable(48) %68, i64 0, i64 0) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %70, i64 12, i1 false) #8
  %133 = load i32, i32* %71, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135, !prof !4

135:                                              ; preds = %130
  store i32 0, i32* %71, align 4
  br label %136

136:                                              ; preds = %135, %130
  %137 = load i32*, i32** %72, align 8
  %138 = icmp eq i32* %137, %74
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %136
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %68, i32* %137) #8
  br label %140

140:                                              ; preds = %136, %139
  store i32* null, i32** %72, align 8
  %141 = load i32, i32* %64, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143, !prof !4

143:                                              ; preds = %140
  store i32 0, i32* %64, align 4
  br label %144

144:                                              ; preds = %143, %140
  %145 = load i32*, i32** %75, align 8
  %146 = icmp eq i32* %145, %76
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %144
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %77, i32* %145) #8
  br label %148

148:                                              ; preds = %144, %147
  store i32* null, i32** %75, align 8
  %149 = load i32, i32* %56, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !4

151:                                              ; preds = %148
  store i32 0, i32* %56, align 4
  br label %152

152:                                              ; preds = %151, %148
  %153 = load i32*, i32** %78, align 8
  %154 = icmp eq i32* %153, %79
  br i1 %154, label %156, label %155, !prof !3

155:                                              ; preds = %152
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %80, i32* %153) #8
  br label %156

156:                                              ; preds = %152, %155
  store i32* null, i32** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %51) #8
  %157 = load i8, i8* %3, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = add nuw i32 %82, 1
  %160 = load i32, i32* %47, align 4
  %161 = icmp ult i32 %159, %160
  %162 = and i1 %158, %161
  br i1 %162, label %81, label %163

163:                                              ; preds = %156, %42
  ret void
}

declare void @_ZN5blink19CSSNumericValueType3AddES0_S0_Rb(%"class.blink::CSSNumericValueType"* sret, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8* dereferenceable(1)) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10CSSMathSum8SumValueEv(%"class.absl::optional"* noalias nocapture sret, %"class.blink::CSSMathSum"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericValueType", align 8
  %5 = alloca %"class.blink::CSSNumericValueType", align 8
  %6 = alloca %"class.blink::CSSNumericValueType", align 8
  %7 = alloca %"class.blink::CSSNumericValueType", align 8
  %8 = alloca %"struct.blink::CSSNumericSumValue", align 8
  %9 = alloca %"class.absl::optional", align 8
  %10 = alloca %"struct.blink::(anonymous namespace)::UnitMapComparator", align 8
  %11 = bitcast %"struct.blink::CSSNumericSumValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %8, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #8
  %16 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %19, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %229, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"struct.blink::(anonymous namespace)::UnitMapComparator"* %10 to i8*
  %30 = bitcast %"struct.blink::(anonymous namespace)::UnitMapComparator"* %10 to i64*
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::UnitMapComparator", %"struct.blink::(anonymous namespace)::UnitMapComparator"* %10, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %31, i64 0, i32 0
  %33 = bitcast %"class.WTF::HashMap"* %31 to i8*
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::UnitMapComparator", %"struct.blink::(anonymous namespace)::UnitMapComparator"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"struct.blink::CSSNumericSumValue"* %36 to i8**
  br label %42

39:                                               ; preds = %201, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %40 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %43, i64 1
  %41 = icmp eq %"class.blink::Member.6"* %40, %23
  br i1 %41, label %229, label %42

42:                                               ; preds = %25, %39
  %43 = phi %"class.blink::Member.6"* [ %19, %25 ], [ %40, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %44 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %44, align 8
  %46 = bitcast %"class.blink::CSSNumericValue"* %45 to void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)***
  %47 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)**, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %47, i64 16
  %49 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %48, align 8
  call void %49(%"class.absl::optional"* nonnull sret %9, %"class.blink::CSSNumericValue"* %45) #8
  %50 = load i8, i8* %26, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %347, label %52

52:                                               ; preds = %42
  %53 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %27, align 8
  %54 = load i32, i32* %28, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %53, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %204, label %58

58:                                               ; preds = %52, %198
  %59 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %199, %198 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #8
  %60 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %30, align 8
  %62 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #8
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %32, i32 %63) #8
  %66 = load i32, i32* %62, align 4
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 0
  %69 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72
  br i1 %67, label %105, label %74

74:                                               ; preds = %65
  %75 = icmp eq i32 %71, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %74, %82
  %77 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ %69, %74 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = or i32 %79, 1
  %81 = icmp eq i32 %80, -127
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %73
  br i1 %84, label %105, label %76

85:                                               ; preds = %76, %74
  %86 = phi %"struct.WTF::KeyValuePair"* [ %69, %74 ], [ %77, %76 ]
  %87 = icmp eq %"struct.WTF::KeyValuePair"* %86, %73
  br i1 %87, label %105, label %88

88:                                               ; preds = %85, %103
  %89 = phi %"struct.WTF::KeyValuePair"* [ %95, %103 ], [ %86, %85 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0
  %91 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %32, i32* dereferenceable(4) %90, %"struct.WTF::KeyValuePair"* dereferenceable(8) %89) #8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair"* %92, %73
  br i1 %93, label %105, label %94

94:                                               ; preds = %88, %100
  %95 = phi %"struct.WTF::KeyValuePair"* [ %101, %100 ], [ %92, %88 ]
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 1
  %99 = icmp eq i32 %98, -127
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 1
  %102 = icmp eq %"struct.WTF::KeyValuePair"* %101, %73
  br i1 %102, label %105, label %94

103:                                              ; preds = %94
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %95, %73
  br i1 %104, label %105, label %88

105:                                              ; preds = %82, %88, %103, %100, %58, %65, %85
  %106 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %13, align 8
  %107 = load i32, i32* %15, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 %108
  %110 = icmp eq i32 %107, 0
  br i1 %110, label %124, label %111

111:                                              ; preds = %105, %115
  %112 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %116, %115 ], [ %106, %105 ]
  %113 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %112, i64 0, i32 1
  %114 = call zeroext i1 @_ZN3WTFeqIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEEEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESJ_(%"class.WTF::HashMap"* dereferenceable(24) %113, %"class.WTF::HashMap"* dereferenceable(24) %31) #8
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %112, i64 1
  %117 = icmp ult %"struct.blink::CSSNumericSumValue::Term"* %116, %109
  br i1 %117, label %111, label %124

118:                                              ; preds = %111
  %119 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %112 to i64
  %120 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %106 to i64
  %121 = sub i64 %119, %120
  %122 = lshr exact i64 %121, 5
  %123 = trunc i64 %122 to i32
  br label %124

124:                                              ; preds = %115, %105, %118
  %125 = phi i32 [ %123, %118 ], [ -1, %105 ], [ -1, %115 ]
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair"* %126, null
  br i1 %127, label %130, label %128, !prof !3

128:                                              ; preds = %124
  %129 = bitcast %"struct.WTF::KeyValuePair"* %126 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %34, align 8
  br label %130

130:                                              ; preds = %124, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #8
  %131 = icmp eq i32 %125, -1
  br i1 %131, label %132, label %191

132:                                              ; preds = %130
  %133 = load i32, i32* %15, align 4
  %134 = load i32, i32* %14, align 8
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %190, label %136, !prof !4

136:                                              ; preds = %132
  %137 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %13, align 8
  %138 = zext i32 %133 to i64
  %139 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %137, i64 %138
  %140 = load i64, i64* %60, align 8
  %141 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %139 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %137, i64 %138, i32 1
  %143 = bitcast %"class.WTF::HashMap"* %142 to i8*
  %144 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %142, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 20, i1 false) #8
  %145 = load i32, i32* %62, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %187, label %147

147:                                              ; preds = %136
  call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %144, i32 %145) #8
  %148 = load i32, i32* %62, align 4
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 0
  %151 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %150, align 8
  %152 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 1, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 %154
  br i1 %149, label %187, label %156

156:                                              ; preds = %147
  %157 = icmp eq i32 %153, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %156, %164
  %159 = phi %"struct.WTF::KeyValuePair"* [ %165, %164 ], [ %151, %156 ]
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = or i32 %161, 1
  %163 = icmp eq i32 %162, -127
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 1
  %166 = icmp eq %"struct.WTF::KeyValuePair"* %165, %155
  br i1 %166, label %187, label %158

167:                                              ; preds = %158, %156
  %168 = phi %"struct.WTF::KeyValuePair"* [ %151, %156 ], [ %159, %158 ]
  %169 = icmp eq %"struct.WTF::KeyValuePair"* %168, %155
  br i1 %169, label %187, label %170

170:                                              ; preds = %167, %185
  %171 = phi %"struct.WTF::KeyValuePair"* [ %177, %185 ], [ %168, %167 ]
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %171, i64 0, i32 0
  %173 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %144, i32* dereferenceable(4) %172, %"struct.WTF::KeyValuePair"* dereferenceable(8) %171) #8
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %171, i64 1
  %175 = icmp eq %"struct.WTF::KeyValuePair"* %174, %155
  br i1 %175, label %187, label %176

176:                                              ; preds = %170, %182
  %177 = phi %"struct.WTF::KeyValuePair"* [ %183, %182 ], [ %174, %170 ]
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %177, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = or i32 %179, 1
  %181 = icmp eq i32 %180, -127
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %177, i64 1
  %184 = icmp eq %"struct.WTF::KeyValuePair"* %183, %155
  br i1 %184, label %187, label %176

185:                                              ; preds = %176
  %186 = icmp eq %"struct.WTF::KeyValuePair"* %177, %155
  br i1 %186, label %187, label %170

187:                                              ; preds = %164, %185, %170, %182, %167, %147, %136
  %188 = load i32, i32* %15, align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* %15, align 4
  br label %198

190:                                              ; preds = %132
  call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.21"* nonnull %12, %"struct.blink::CSSNumericSumValue::Term"* dereferenceable(32) %59) #8
  br label %198

191:                                              ; preds = %130
  %192 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 0, i32 0
  %193 = load double, double* %192, align 8
  %194 = call dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* nonnull %12, i32 %125) #8
  %195 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %194, i64 0, i32 0
  %196 = load double, double* %195, align 8
  %197 = fadd double %193, %196
  store double %197, double* %195, align 8
  br label %198

198:                                              ; preds = %190, %187, %191
  %199 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %59, i64 1
  %200 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %199, %56
  br i1 %200, label %201, label %58

201:                                              ; preds = %198
  %202 = load i8, i8* %26, align 8, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %39, label %204

204:                                              ; preds = %52, %201
  %205 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %37, align 8
  %206 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %205, null
  br i1 %206, label %228, label %207, !prof !3

207:                                              ; preds = %204
  %208 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %205 to i8*
  %209 = load i32, i32* %28, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %226, label %211, !prof !4

211:                                              ; preds = %207
  %212 = zext i32 %209 to i64
  %213 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %205, i64 %212
  br label %214

214:                                              ; preds = %221, %211
  %215 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %222, %221 ], [ %205, %211 ]
  %216 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %215, i64 0, i32 1, i32 0, i32 0
  %217 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %216, align 8
  %218 = icmp eq %"struct.WTF::KeyValuePair"* %217, null
  br i1 %218, label %221, label %219, !prof !3

219:                                              ; preds = %214
  %220 = bitcast %"struct.WTF::KeyValuePair"* %217 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %220) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %216, align 8
  br label %221

221:                                              ; preds = %219, %214
  %222 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %215, i64 1
  %223 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %222, %213
  br i1 %223, label %224, label %214

224:                                              ; preds = %221
  store i32 0, i32* %28, align 4
  %225 = load i8*, i8** %38, align 8
  br label %226

226:                                              ; preds = %224, %207
  %227 = phi i8* [ %225, %224 ], [ %208, %207 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %227) #8
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %37, align 8
  br label %228

228:                                              ; preds = %226, %204
  store i8 0, i8* %26, align 8
  br label %39

229:                                              ; preds = %39, %2
  %230 = bitcast %"class.blink::CSSNumericValueType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %230) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 -86, i64 64, i1 false) #8
  %231 = call dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"* nonnull %12, i32 0) #8
  %232 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %231, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_122NumericTypeFromUnitMapERKN3WTF7HashMapINS_17CSSPrimitiveValue8UnitTypeEiNS1_7IntHashIS4_EENS1_10HashTraitsIS4_EENS7_IiEENS1_18PartitionAllocatorEEE(%"class.blink::CSSNumericValueType"* nonnull sret %7, %"class.WTF::HashMap"* dereferenceable(24) %232) #8
  %233 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %13, align 8
  %234 = load i32, i32* %15, align 4
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %233, i64 %235
  %237 = icmp eq i32 %234, 0
  br i1 %237, label %320, label %238

238:                                              ; preds = %229
  %239 = bitcast %"class.blink::CSSNumericValueType"* %4 to i8*
  %240 = bitcast %"class.blink::CSSNumericValueType"* %5 to i8*
  %241 = bitcast %"class.blink::CSSNumericValueType"* %6 to i8*
  %242 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %243 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %244 = bitcast %"class.blink::CSSNumericValueType"* %5 to i8**
  %245 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %246 = bitcast %"class.blink::CSSNumericValueType"* %5 to i64*
  %247 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %248 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %249 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %250 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 1
  %251 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 1
  %252 = bitcast i32* %250 to i8*
  %253 = bitcast i32* %251 to i8*
  %254 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %255 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %257 = bitcast i8* %256 to i32*
  %258 = bitcast %"class.blink::CSSNumericValueType"* %4 to %"class.WTF::VectorBuffer"*
  %259 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %260 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %262 = bitcast i8* %261 to i32*
  %263 = bitcast %"class.blink::CSSNumericValueType"* %6 to %"class.WTF::VectorBuffer"*
  %264 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %265 = bitcast i8* %243 to i32*
  %266 = bitcast %"class.blink::CSSNumericValueType"* %5 to %"class.WTF::VectorBuffer"*
  br label %269

267:                                              ; preds = %316
  %268 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %319, %236
  br i1 %268, label %320, label %269

269:                                              ; preds = %267, %238
  %270 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %233, %238 ], [ %319, %267 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %239) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %240) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %241) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 0, i8* %3, align 1
  %271 = load i32, i32* %242, align 8
  store i8* %243, i8** %244, align 8
  store i32 7, i32* %245, align 8
  %272 = icmp ugt i32 %271, 7
  br i1 %272, label %273, label %280

273:                                              ; preds = %269
  %274 = zext i32 %271 to i64
  %275 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %274) #8
  %276 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %275, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %277 = ptrtoint i8* %276 to i64
  store atomic i64 %277, i64* %246 monotonic, align 8
  %278 = lshr i64 %275, 2
  %279 = trunc i64 %278 to i32
  store i32 %279, i32* %245, align 8
  br label %280

280:                                              ; preds = %273, %269
  %281 = phi i8* [ %243, %269 ], [ %276, %273 ]
  %282 = load i32, i32* %247, align 4
  store i32 %282, i32* %248, align 4
  %283 = load i32*, i32** %249, align 8
  %284 = icmp ne i8* %281, null
  %285 = icmp ne i32* %283, null
  %286 = and i1 %284, %285
  br i1 %286, label %287, label %291, !prof !3

287:                                              ; preds = %280
  %288 = zext i32 %282 to i64
  %289 = bitcast i32* %283 to i8*
  %290 = shl nuw nsw i64 %288, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %281, i8* nonnull align 4 %289, i64 %290, i1 false) #8
  br label %291

291:                                              ; preds = %287, %280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 12, i1 false) #8
  %292 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %270, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_122NumericTypeFromUnitMapERKN3WTF7HashMapINS_17CSSPrimitiveValue8UnitTypeEiNS1_7IntHashIS4_EENS1_10HashTraitsIS4_EENS7_IiEENS1_18PartitionAllocatorEEE(%"class.blink::CSSNumericValueType"* nonnull sret %6, %"class.WTF::HashMap"* dereferenceable(24) %292) #8
  call void @_ZN5blink19CSSNumericValueType3AddES0_S0_Rb(%"class.blink::CSSNumericValueType"* nonnull sret %4, %"class.blink::CSSNumericValueType"* nonnull %5, %"class.blink::CSSNumericValueType"* nonnull %6, i8* nonnull dereferenceable(1) %3) #8
  %293 = load i32, i32* %254, align 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %296, label %295, !prof !4

295:                                              ; preds = %291
  store i32 0, i32* %254, align 4
  br label %296

296:                                              ; preds = %295, %291
  %297 = load i32*, i32** %255, align 8
  %298 = icmp eq i32* %297, %257
  br i1 %298, label %300, label %299, !prof !3

299:                                              ; preds = %296
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %258, i32* %297) #8
  br label %300

300:                                              ; preds = %299, %296
  store i32* null, i32** %255, align 8
  %301 = load i32, i32* %259, align 4
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %304, label %303, !prof !4

303:                                              ; preds = %300
  store i32 0, i32* %259, align 4
  br label %304

304:                                              ; preds = %303, %300
  %305 = load i32*, i32** %260, align 8
  %306 = icmp eq i32* %305, %262
  br i1 %306, label %308, label %307, !prof !3

307:                                              ; preds = %304
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %263, i32* %305) #8
  br label %308

308:                                              ; preds = %307, %304
  store i32* null, i32** %260, align 8
  %309 = load i32, i32* %248, align 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %312, label %311, !prof !4

311:                                              ; preds = %308
  store i32 0, i32* %248, align 4
  br label %312

312:                                              ; preds = %311, %308
  %313 = load i32*, i32** %264, align 8
  %314 = icmp eq i32* %313, %265
  br i1 %314, label %316, label %315, !prof !3

315:                                              ; preds = %312
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %266, i32* %313) #8
  br label %316

316:                                              ; preds = %315, %312
  %317 = load i8, i8* %3, align 1, !range !2
  %318 = icmp eq i8 %317, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %239) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %240) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %241) #8
  %319 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %270, i64 1
  br i1 %318, label %267, label %320

320:                                              ; preds = %316, %267, %229
  %321 = phi i1 [ true, %229 ], [ true, %267 ], [ false, %316 ]
  %322 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %326, label %325, !prof !4

325:                                              ; preds = %320
  store i32 0, i32* %322, align 4
  br label %326

326:                                              ; preds = %325, %320
  %327 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %330 = bitcast i8* %329 to i32*
  %331 = icmp eq i32* %328, %330
  br i1 %331, label %334, label %332, !prof !3

332:                                              ; preds = %326
  %333 = bitcast %"class.blink::CSSNumericValueType"* %7 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %333, i32* %328) #8
  br label %334

334:                                              ; preds = %326, %332
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %230) #8
  %335 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %321, label %337, label %336

336:                                              ; preds = %334
  store i8 0, i8* %335, align 8
  br label %348

337:                                              ; preds = %334
  store i8 1, i8* %335, align 8
  %338 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %339 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %341 = bitcast %"struct.blink::CSSNumericSumValue"* %8 to i64*
  %342 = bitcast %"struct.blink::CSSNumericSumValue"* %338 to i64*
  store i64 0, i64* %342, align 8
  %343 = load i64, i64* %341, align 8
  %344 = bitcast %"struct.blink::CSSNumericSumValue"* %338 to i64*
  store atomic i64 0, i64* %341 monotonic, align 8
  store atomic i64 %343, i64* %344 monotonic, align 8
  %345 = load i32, i32* %14, align 8
  store i32 %345, i32* %339, align 8
  store i32 0, i32* %14, align 8
  %346 = load i32, i32* %15, align 4
  store i32 %346, i32* %340, align 4
  store i32 0, i32* %15, align 4
  br label %348

347:                                              ; preds = %42
  store i8 0, i8* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  br label %348

348:                                              ; preds = %347, %337, %336
  %349 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %13, align 8
  %350 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %349, null
  br i1 %350, label %373, label %351, !prof !3

351:                                              ; preds = %348
  %352 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %349 to i8*
  %353 = load i32, i32* %15, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %371, label %355, !prof !4

355:                                              ; preds = %351
  %356 = zext i32 %353 to i64
  %357 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %349, i64 %356
  br label %358

358:                                              ; preds = %365, %355
  %359 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %366, %365 ], [ %349, %355 ]
  %360 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %359, i64 0, i32 1, i32 0, i32 0
  %361 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %360, align 8
  %362 = icmp eq %"struct.WTF::KeyValuePair"* %361, null
  br i1 %362, label %365, label %363, !prof !3

363:                                              ; preds = %358
  %364 = bitcast %"struct.WTF::KeyValuePair"* %361 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %364) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %360, align 8
  br label %365

365:                                              ; preds = %363, %358
  %366 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %359, i64 1
  %367 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %366, %357
  br i1 %367, label %368, label %358

368:                                              ; preds = %365
  store i32 0, i32* %15, align 4
  %369 = bitcast %"struct.blink::CSSNumericSumValue"* %8 to i8**
  %370 = load i8*, i8** %369, align 8
  br label %371

371:                                              ; preds = %368, %351
  %372 = phi i8* [ %370, %368 ], [ %352, %351 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %372) #8
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %13, align 8
  br label %373

373:                                              ; preds = %348, %371
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZNK5blink10CSSMathSum20ToCalcExpressionNodeEv(%"class.blink::CSSMathSum"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %3, i64 0, i32 1, i32 0
  %5 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %4, i32 0) #8
  %6 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %6, align 8
  %8 = bitcast %"class.blink::CSSNumericValue"* %7 to %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)***
  %9 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %9, i64 18
  %11 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %10, align 8
  %12 = tail call %"class.blink::CSSMathExpressionNode"* %11(%"class.blink::CSSNumericValue"* %7) #8
  %13 = icmp eq %"class.blink::CSSMathExpressionNode"* %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %1
  %15 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %16 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, 1
  br i1 %18, label %19, label %40

19:                                               ; preds = %14, %33
  %20 = phi %"class.blink::CSSNumericArray"* [ %36, %33 ], [ %15, %14 ]
  %21 = phi i32 [ %35, %33 ], [ 1, %14 ]
  %22 = phi %"class.blink::CSSMathExpressionNode"* [ %34, %33 ], [ %12, %14 ]
  %23 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %20, i64 0, i32 1, i32 0
  %24 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %23, i32 %21) #8
  %25 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %25, align 8
  %27 = bitcast %"class.blink::CSSNumericValue"* %26 to %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)***
  %28 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %28, i64 18
  %30 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %29, align 8
  %31 = tail call %"class.blink::CSSMathExpressionNode"* %30(%"class.blink::CSSNumericValue"* %26) #8
  %32 = icmp eq %"class.blink::CSSMathExpressionNode"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %19
  %34 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %22, %"class.blink::CSSMathExpressionNode"* nonnull %31, i32 0) #8
  %35 = add nuw i32 %21, 1
  %36 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %37 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %35, %38
  br i1 %39, label %19, label %40

40:                                               ; preds = %19, %33, %1, %14
  %41 = phi %"class.blink::CSSMathExpressionNode"* [ null, %1 ], [ %12, %14 ], [ %34, %33 ], [ null, %19 ]
  ret %"class.blink::CSSMathExpressionNode"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10CSSMathSum12BuildCSSTextENS_15CSSNumericValue6NestedENS1_9ParenLessERN3WTF13StringBuilderE(%"class.blink::CSSMathSum"* nocapture readonly, i1 zeroext, i1 zeroext, %"class.WTF::StringBuilder"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  br i1 %2, label %9, label %17

9:                                                ; preds = %4
  %10 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = select i1 %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)
  %12 = select i1 %1, i32 5, i32 1
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %11, i8** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %12, i32* %16, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %17

17:                                               ; preds = %9, %4
  %18 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %19, i64 0, i32 1, i32 0
  %21 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %20, i32 0) #8
  %22 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %22, align 8
  %24 = bitcast %"class.blink::CSSNumericValue"* %23 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %25 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %25, i64 19
  %27 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %26, align 8
  call void %27(%"class.blink::CSSNumericValue"* %23, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  %28 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %31, label %40

31:                                               ; preds = %17
  %32 = bitcast %"class.WTF::StringView"* %7 to i8*
  %33 = bitcast %"class.WTF::StringView"* %7 to i64*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %36 = bitcast %"class.WTF::StringView"* %6 to i8*
  %37 = bitcast %"class.WTF::StringView"* %6 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %41

40:                                               ; preds = %68, %17
  br i1 %2, label %72, label %78

41:                                               ; preds = %31, %68
  %42 = phi i32 [ 1, %31 ], [ %69, %68 ]
  %43 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %20, i32 %42) #8
  %44 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %45, i64 0, i32 0
  %47 = bitcast %"class.blink::CSSNumericValue"* %45 to i32 (%"class.blink::CSSStyleValue"*)***
  %48 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %48, i64 9
  %50 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %49, align 8
  %51 = call i32 %50(%"class.blink::CSSStyleValue"* %46) #8
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %53, label %62

53:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %54, i64* %37, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %38, align 8
  store i32 3, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  %55 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %45, i64 1
  %56 = bitcast %"class.blink::CSSNumericValue"* %55 to %"class.blink::CSSNumericValue"**
  %57 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %56, align 8
  %58 = bitcast %"class.blink::CSSNumericValue"* %57 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %59 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %59, i64 19
  %61 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %60, align 8
  call void %61(%"class.blink::CSSNumericValue"* %57, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  br label %68

62:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %63, i64* %33, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %34, align 8
  store i32 3, i32* %35, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  %64 = bitcast %"class.blink::CSSNumericValue"* %45 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %65 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %65, i64 19
  %67 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %66, align 8
  call void %67(%"class.blink::CSSNumericValue"* %45, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  br label %68

68:                                               ; preds = %62, %53
  %69 = add nuw i32 %42, 1
  %70 = load i32, i32* %28, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %41, label %40

72:                                               ; preds = %40
  %73 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %77, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #8
  br label %78

78:                                               ; preds = %72, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericValueD2Ev(%"class.blink::CSSNumericValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !4

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* %15, i32* %10) #8
  br label %16

16:                                               ; preds = %8, %14
  store i32* null, i32** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #8
  br label %33

33:                                               ; preds = %16, %29, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10CSSMathSumD0Ev(%"class.blink::CSSMathSum"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !4

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* %15, i32* %10) #8
  br label %16

16:                                               ; preds = %14, %8
  store i32* null, i32** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::CSSMathSum", %"class.blink::CSSMathSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #8
  br label %33

33:                                               ; preds = %16, %29, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE(%"class.blink::CSSMathVariadic"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10CSSMathSum18GetWrapperTypeInfoEv(%"class.blink::CSSMathSum"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10CSSMathSum18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10CSSMathSum7GetTypeEv(%"class.blink::CSSMathSum"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

declare %"class.blink::CSSValue"* @_ZNK5blink12CSSMathValue10ToCSSValueEv(%"class.blink::CSSMathValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE(%"class.blink::CSSStyleValue"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSStyleValue"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %4 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %4, i64 10
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %5, align 8
  %7 = tail call %"class.blink::CSSValue"* %6(%"class.blink::CSSStyleValue"* %0) #8
  ret %"class.blink::CSSValue"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSNumericValue8toStringEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

declare %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6NegateEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

declare %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6InvertEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12CSSMathValue11IsUnitValueEv(%"class.blink::CSSMathValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE(%"class.blink::CSSMathVariadic"*, %"class.blink::CSSNumericValue"* dereferenceable(88)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::CSSMathVariadic"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %5 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %5, i64 9
  %7 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::CSSStyleValue"* %3) #8
  %9 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %1, i64 0, i32 0
  %10 = bitcast %"class.blink::CSSNumericValue"* %1 to i32 (%"class.blink::CSSStyleValue"*)***
  %11 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %11, i64 9
  %13 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::CSSStyleValue"* %9) #8
  %15 = icmp eq i32 %8, %14
  br i1 %15, label %16, label %52

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %20, i64 %23
  %25 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %1, i64 1
  %26 = bitcast %"class.blink::CSSNumericValue"* %25 to %"class.blink::CSSNumericArray"**
  %27 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %22, %29
  br i1 %30, label %31, label %52

31:                                               ; preds = %16
  %32 = icmp eq i32 %22, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %34, align 8
  br label %36

36:                                               ; preds = %33, %48
  %37 = phi %"class.blink::Member.6"* [ %50, %48 ], [ %35, %33 ]
  %38 = phi %"class.blink::Member.6"* [ %49, %48 ], [ %20, %33 ]
  %39 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %37, i64 0, i32 0, i32 0
  %42 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %41, align 8
  %43 = bitcast %"class.blink::CSSNumericValue"* %40 to i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)***
  %44 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)**, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %44, i64 17
  %46 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::CSSNumericValue"* %40, %"class.blink::CSSNumericValue"* dereferenceable(88) %42) #8
  br i1 %47, label %48, label %52

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %38, i64 1
  %50 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %37, i64 1
  %51 = icmp eq %"class.blink::Member.6"* %49, %24
  br i1 %51, label %52, label %36

52:                                               ; preds = %48, %36, %31, %16, %2
  %53 = phi i1 [ false, %2 ], [ false, %16 ], [ true, %31 ], [ false, %36 ], [ true, %48 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink10CSSMathSum11getOperatorEv(%"class.blink::CSSMathSum"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3) #8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"*, i32*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %107

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv, i64 0, i64 0)) #8
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = and i64 %27, 4294967292
  %32 = add nsw i64 %31, -4
  %33 = lshr exact i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp ult i64 %32, 28
  br i1 %36, label %84, label %37

37:                                               ; preds = %26
  %38 = sub nsw i64 %34, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %81, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %82, %39 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %40
  %43 = bitcast %"struct.WTF::KeyValuePair"* %42 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %43, align 4
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 2
  %45 = bitcast %"struct.WTF::KeyValuePair"* %44 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %45, align 4
  %46 = or i64 %40, 4
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %46
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %48, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 2
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %50, align 4
  %51 = or i64 %40, 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %51
  %53 = bitcast %"struct.WTF::KeyValuePair"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %55, align 4
  %56 = or i64 %40, 12
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %60, align 4
  %61 = or i64 %40, 16
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %65, align 4
  %66 = or i64 %40, 20
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %70, align 4
  %71 = or i64 %40, 24
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %75, align 4
  %76 = or i64 %40, 28
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %80, align 4
  %81 = add i64 %40, 32
  %82 = add i64 %41, -8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %39, !llvm.loop !5

84:                                               ; preds = %39, %26
  %85 = phi i64 [ 0, %26 ], [ %81, %39 ]
  %86 = icmp eq i64 %35, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %84, %87
  %88 = phi i64 [ %94, %87 ], [ %85, %84 ]
  %89 = phi i64 [ %95, %87 ], [ %35, %84 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %88
  %91 = bitcast %"struct.WTF::KeyValuePair"* %90 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %91, align 4
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 2
  %93 = bitcast %"struct.WTF::KeyValuePair"* %92 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %93, align 4
  %94 = add i64 %88, 4
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %87, !llvm.loop !7

97:                                               ; preds = %87, %84
  %98 = icmp eq i64 %31, %27
  br i1 %98, label %105, label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %103, %99 ], [ %31, %97 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %100
  %102 = bitcast %"struct.WTF::KeyValuePair"* %101 to i64*
  store i64 4294967168, i64* %102, align 4
  %103 = add nuw nsw i64 %100, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %99, !llvm.loop !9

105:                                              ; preds = %99, %97
  %106 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #8
  br label %107

107:                                              ; preds = %105, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = or i32 %40, 1
  %42 = icmp eq i32 %41, -127
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -128
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -127
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -128
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %109 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"struct.WTF::KeyValuePair"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -128
  br i1 %35, label %70, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %97, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -127
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -128
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %10, %68
  %71 = phi %"struct.WTF::KeyValuePair"* [ %64, %68 ], [ %32, %10 ]
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 4294967168, i64* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %71, %70 ], [ %59, %73 ]
  %84 = bitcast %"struct.WTF::KeyValuePair"* %2 to i64*
  %85 = load i64, i64* %84, align 4
  store i64 %85, i64* %82, align 4
  %86 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 1
  %93 = load i32, i32* %12, align 8
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %81
  %96 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %97

97:                                               ; preds = %50, %81, %95
  %98 = phi i8 [ 1, %81 ], [ 1, %95 ], [ 0, %50 ]
  %99 = phi %"struct.WTF::KeyValuePair"* [ %83, %81 ], [ %96, %95 ], [ %52, %50 ]
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %99, 0
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, i8 %98, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair"* %82 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair"* %84 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair"* %87 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !11

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair"* %100 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair"* %102 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !12

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair"* %113 to i64*
  store i64 4294967168, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !13

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %118
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122NumericTypeFromUnitMapERKN3WTF7HashMapINS_17CSSPrimitiveValue8UnitTypeEiNS1_7IntHashIS4_EENS1_10HashTraitsIS4_EENS7_IiEENS1_18PartitionAllocatorEEE(%"class.blink::CSSNumericValueType"* noalias sret, %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::CSSNumericValueType", align 8
  %5 = alloca %"class.blink::CSSNumericValueType", align 8
  %6 = alloca %"class.blink::CSSNumericValueType", align 8
  %7 = bitcast %"class.blink::CSSNumericValueType"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 64, i1 false)
  tail call void @_ZN5blink19CSSNumericValueTypeC1ENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValueType"* %0, i32 1) #8
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  br i1 %10, label %61, label %17

17:                                               ; preds = %2
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %17, %25
  %20 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %12, %17 ]
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %22, 1
  %24 = icmp eq i32 %23, -127
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %16
  br i1 %27, label %61, label %19

28:                                               ; preds = %19, %17
  %29 = phi %"struct.WTF::KeyValuePair"* [ %12, %17 ], [ %20, %19 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %16
  br i1 %30, label %61, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::CSSNumericValueType"* %4 to i8*
  %33 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %35 = bitcast %"class.blink::CSSNumericValueType"* %5 to i8**
  %36 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CSSNumericValueType"* %5 to i64*
  %38 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 1
  %43 = bitcast i32* %41 to i8*
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast %"class.blink::CSSNumericValueType"* %0 to %"class.WTF::VectorBuffer"*
  %46 = bitcast %"class.blink::CSSNumericValueType"* %4 to %"class.WTF::VectorBuffer"*
  %47 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 1
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %56 = bitcast i8* %55 to i32*
  %57 = bitcast %"class.blink::CSSNumericValueType"* %6 to %"class.WTF::VectorBuffer"*
  %58 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast i8* %34 to i32*
  %60 = bitcast %"class.blink::CSSNumericValueType"* %5 to %"class.WTF::VectorBuffer"*
  br label %62

61:                                               ; preds = %25, %112, %124, %121, %2, %28
  ret void

62:                                               ; preds = %31, %124
  %63 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %116, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 0, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #8
  %64 = load i32, i32* %33, align 8
  store i8* %34, i8** %35, align 8
  store i32 7, i32* %36, align 8
  %65 = icmp ugt i32 %64, 7
  br i1 %65, label %66, label %73

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %67) #8
  %69 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %70 = ptrtoint i8* %69 to i64
  store atomic i64 %70, i64* %37 monotonic, align 8
  %71 = lshr i64 %68, 2
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %36, align 8
  br label %73

73:                                               ; preds = %66, %62
  %74 = phi i8* [ %34, %62 ], [ %69, %66 ]
  %75 = load i32, i32* %38, align 4
  store i32 %75, i32* %39, align 4
  %76 = load i32*, i32** %40, align 8
  %77 = icmp ne i8* %74, null
  %78 = icmp ne i32* %76, null
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %84, !prof !3

80:                                               ; preds = %73
  %81 = zext i32 %75 to i64
  %82 = bitcast i32* %76 to i8*
  %83 = shl nuw nsw i64 %81, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* nonnull align 4 %82, i64 %83, i1 false) #8
  br label %84

84:                                               ; preds = %73, %80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false) #8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  call void @_ZN5blink19CSSNumericValueTypeC1EiNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValueType"* nonnull %6, i32 %86, i32 %88) #8
  call void @_ZN5blink19CSSNumericValueType8MultiplyES0_S0_Rb(%"class.blink::CSSNumericValueType"* nonnull sret %4, %"class.blink::CSSNumericValueType"* nonnull %5, %"class.blink::CSSNumericValueType"* nonnull %6, i8* nonnull dereferenceable(1) %3) #8
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %45, %"class.WTF::VectorBuffer"* nonnull dereferenceable(48) %46, i64 0, i64 0) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %48, i64 12, i1 false) #8
  %89 = load i32, i32* %49, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !4

91:                                               ; preds = %84
  store i32 0, i32* %49, align 4
  br label %92

92:                                               ; preds = %91, %84
  %93 = load i32*, i32** %50, align 8
  %94 = icmp eq i32* %93, %52
  br i1 %94, label %96, label %95, !prof !3

95:                                               ; preds = %92
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %46, i32* %93) #8
  br label %96

96:                                               ; preds = %92, %95
  store i32* null, i32** %50, align 8
  %97 = load i32, i32* %53, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !4

99:                                               ; preds = %96
  store i32 0, i32* %53, align 4
  br label %100

100:                                              ; preds = %99, %96
  %101 = load i32*, i32** %54, align 8
  %102 = icmp eq i32* %101, %56
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %100
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %57, i32* %101) #8
  br label %104

104:                                              ; preds = %100, %103
  store i32* null, i32** %54, align 8
  %105 = load i32, i32* %39, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107, !prof !4

107:                                              ; preds = %104
  store i32 0, i32* %39, align 4
  br label %108

108:                                              ; preds = %107, %104
  %109 = load i32*, i32** %58, align 8
  %110 = icmp eq i32* %109, %59
  br i1 %110, label %112, label %111, !prof !3

111:                                              ; preds = %108
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %60, i32* %109) #8
  br label %112

112:                                              ; preds = %108, %111
  store i32* null, i32** %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %16
  br i1 %114, label %61, label %115

115:                                              ; preds = %112, %121
  %116 = phi %"struct.WTF::KeyValuePair"* [ %122, %121 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = or i32 %118, 1
  %120 = icmp eq i32 %119, -127
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 1
  %123 = icmp eq %"struct.WTF::KeyValuePair"* %122, %16
  br i1 %123, label %61, label %115

124:                                              ; preds = %115
  %125 = icmp eq %"struct.WTF::KeyValuePair"* %116, %16
  br i1 %125, label %61, label %62
}

declare void @_ZN5blink19CSSNumericValueTypeC1ENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValueType"*, i32) unnamed_addr #1

declare void @_ZN5blink19CSSNumericValueType8MultiplyES0_S0_Rb(%"class.blink::CSSNumericValueType"* sret, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZN5blink19CSSNumericValueTypeC1EiNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSNumericValueType"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(48), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 7
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 7
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !14, !noalias !17
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !14, !noalias !17
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !17
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !17
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !14, !noalias !17
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !14, !noalias !17
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !17
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !17
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !14, !noalias !17
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !14, !noalias !17
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !17
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !17
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !14, !noalias !17
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !14, !noalias !17
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !17
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !17
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !19

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !14, !noalias !17
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !14, !noalias !17
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !17
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !17
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !14, !noalias !17
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !14, !noalias !17
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !17
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !17
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !20

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !3

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #8
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !3

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #8
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 7
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZNK3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %24, i64 %25
  ret %"struct.blink::CSSNumericSumValue::Term"* %26
}

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE(%"class.blink::CSSNumericArray"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.6"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.6"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 %25
  ret %"class.blink::Member.6"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSNumericArray"* @_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_(%"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #8
  %3 = bitcast i8* %2 to %"class.blink::CSSNumericArray"*
  %4 = bitcast %"class.blink::HeapVector"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  store atomic i64 0, i64* %4 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = inttoptr i64 %5 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #8
  br label %15

15:                                               ; preds = %12, %1
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %22

22:                                               ; preds = %15, %18
  %23 = bitcast i8* %2 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %2, i64 8
  %25 = bitcast i8* %24 to i64**
  store i64* null, i64** %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15CSSNumericArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds i8, i8* %2, i64 16
  %27 = getelementptr inbounds i8, i8* %2, i64 24
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds i8, i8* %2, i64 28
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast i8* %26 to i64*
  store atomic i64 %5, i64* %31 monotonic, align 8
  store i32 %7, i32* %28, align 4
  store i32 %9, i32* %30, align 4
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %22
  %35 = inttoptr i64 %5 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #8
  br label %37

37:                                               ; preds = %34, %22
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #8
  br label %42

42:                                               ; preds = %37, %40
  %43 = getelementptr inbounds i8, i8* %2, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  ret %"class.blink::CSSNumericArray"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericArrayD0Ev(%"class.blink::CSSNumericArray"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv(%"class.blink::CSSNumericArray"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15CSSNumericArray18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTFeqIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEEEbRKNS_7HashMapIT_T0_T1_T2_T3_T4_EESJ_(%"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %117

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %19
  %21 = icmp eq i32 %4, 0
  br i1 %21, label %117, label %22

22:                                               ; preds = %8
  %23 = icmp eq i32 %12, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %22, %30
  %25 = phi %"struct.WTF::KeyValuePair"* [ %31, %30 ], [ %10, %22 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = or i32 %27, 1
  %29 = icmp eq i32 %28, -127
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 1
  %32 = icmp eq %"struct.WTF::KeyValuePair"* %31, %14
  br i1 %32, label %117, label %24

33:                                               ; preds = %24, %22
  %34 = phi %"struct.WTF::KeyValuePair"* [ %10, %22 ], [ %25, %24 ]
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %14
  br i1 %35, label %117, label %36

36:                                               ; preds = %33
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %16, null
  %38 = add i32 %18, -1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %36, %115
  %41 = phi %"struct.WTF::KeyValuePair"* [ %34, %36 ], [ %107, %115 ]
  br i1 %37, label %117, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = shl i32 %44, 15
  %46 = xor i32 %45, -1
  %47 = add i32 %44, %46
  %48 = lshr i32 %47, 10
  %49 = xor i32 %48, %47
  %50 = mul i32 %49, 9
  %51 = lshr i32 %50, 6
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 11
  %54 = xor i32 %53, -1
  %55 = add i32 %52, %54
  %56 = lshr i32 %55, 16
  %57 = xor i32 %56, %55
  %58 = and i32 %57, %38
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %44
  br i1 %63, label %92, label %64

64:                                               ; preds = %42
  %65 = xor i32 %57, -1
  %66 = lshr i32 %55, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %83, %64
  %79 = phi i32 [ %62, %64 ], [ %90, %83 ]
  %80 = phi i64 [ %59, %64 ], [ %87, %83 ]
  %81 = phi i64 [ 0, %64 ], [ %85, %83 ]
  %82 = icmp eq i32 %79, -128
  br i1 %82, label %117, label %83

83:                                               ; preds = %78
  %84 = icmp eq i64 %81, 0
  %85 = select i1 %84, i64 %77, i64 %81
  %86 = add i64 %85, %80
  %87 = and i64 %86, %39
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %87
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %44
  br i1 %91, label %92, label %78

92:                                               ; preds = %83, %42
  %93 = phi %"struct.WTF::KeyValuePair"* [ %60, %42 ], [ %88, %83 ]
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %93, null
  %95 = icmp eq %"struct.WTF::KeyValuePair"* %93, %20
  %96 = or i1 %94, %95
  br i1 %96, label %117, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %99, %101
  br i1 %102, label %103, label %117

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 1
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, %14
  br i1 %105, label %117, label %106

106:                                              ; preds = %103, %112
  %107 = phi %"struct.WTF::KeyValuePair"* [ %113, %112 ], [ %104, %103 ]
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = or i32 %109, 1
  %111 = icmp eq i32 %110, -127
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %14
  br i1 %114, label %117, label %106

115:                                              ; preds = %106
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %107, %14
  br i1 %116, label %117, label %40

117:                                              ; preds = %30, %103, %97, %92, %40, %115, %78, %112, %8, %33, %2
  %118 = phi i1 [ false, %2 ], [ true, %33 ], [ true, %8 ], [ true, %112 ], [ false, %78 ], [ true, %103 ], [ false, %97 ], [ false, %92 ], [ false, %40 ], [ true, %115 ], [ true, %30 ]
  ret i1 %118
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.21"*, %"struct.blink::CSSNumericSumValue::Term"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  %8 = icmp ugt %"struct.blink::CSSNumericSumValue::Term"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::CSSNumericSumValue::Term"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* %0, i32 %22) #8
  %36 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %1 to i64
  %39 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* %0, i32 %50) #8
  %64 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72
  %74 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72, i32 1
  %78 = bitcast %"class.WTF::HashMap"* %77 to i8*
  %79 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %77, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 20, i1 false) #8
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %123, label %83

83:                                               ; preds = %68
  tail call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %79, i32 %81) #8
  %84 = load i32, i32* %80, align 4
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 0
  %87 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %90
  br i1 %85, label %123, label %92

92:                                               ; preds = %83
  %93 = icmp eq i32 %89, 0
  br i1 %93, label %103, label %94

94:                                               ; preds = %92, %100
  %95 = phi %"struct.WTF::KeyValuePair"* [ %101, %100 ], [ %87, %92 ]
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 1
  %99 = icmp eq i32 %98, -127
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 1
  %102 = icmp eq %"struct.WTF::KeyValuePair"* %101, %91
  br i1 %102, label %123, label %94

103:                                              ; preds = %94, %92
  %104 = phi %"struct.WTF::KeyValuePair"* [ %87, %92 ], [ %95, %94 ]
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, %91
  br i1 %105, label %123, label %106

106:                                              ; preds = %103, %121
  %107 = phi %"struct.WTF::KeyValuePair"* [ %113, %121 ], [ %104, %103 ]
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 0
  %109 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %79, i32* dereferenceable(4) %108, %"struct.WTF::KeyValuePair"* dereferenceable(8) %107) #8
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 1
  %111 = icmp eq %"struct.WTF::KeyValuePair"* %110, %91
  br i1 %111, label %123, label %112

112:                                              ; preds = %106, %118
  %113 = phi %"struct.WTF::KeyValuePair"* [ %119, %118 ], [ %110, %106 ]
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = or i32 %115, 1
  %117 = icmp eq i32 %116, -127
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair"* %119, %91
  br i1 %120, label %123, label %112

121:                                              ; preds = %112
  %122 = icmp eq %"struct.WTF::KeyValuePair"* %113, %91
  br i1 %122, label %123, label %106

123:                                              ; preds = %100, %106, %121, %118, %68, %83, %103
  %124 = load i32, i32* %3, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %56

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %4, %50
  %15 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %52, %50 ], [ %6, %4 ]
  %16 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %51, %50 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1
  %21 = bitcast %"class.WTF::HashMap"* %20 to i8*
  %22 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 2
  %25 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 3
  %26 = bitcast %"class.WTF::HashMap"* %22 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #8
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::HashMap"* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 2
  %33 = load i32, i32* %24, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %24, align 4
  store i32 %33, i32* %32, align 4
  %35 = load i32, i32* %25, align 8
  %36 = and i32 %35, 2147483647
  %37 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2147483647
  %40 = and i32 %35, -2147483648
  %41 = or i32 %39, %40
  store i32 %41, i32* %25, align 8
  %42 = load i32, i32* %37, align 8
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %36
  store i32 %44, i32* %37, align 8
  %45 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 0
  %46 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %45, align 8
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, null
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %14
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %45, align 8
  br label %50

50:                                               ; preds = %48, %14
  %51 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 1
  %52 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 1
  %53 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %52, %10
  br i1 %53, label %54, label %14

54:                                               ; preds = %50, %4
  %55 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #8
  br label %121

56:                                               ; preds = %2
  %57 = zext i32 %1 to i64
  %58 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %57) #8
  %59 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %60 = lshr i64 %58, 5
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %56
  %70 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %63 to i8*
  br label %116

71:                                               ; preds = %56
  %72 = bitcast i8* %59 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %73

73:                                               ; preds = %71, %109
  %74 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %111, %109 ], [ %63, %71 ]
  %75 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %110, %109 ], [ %72, %71 ]
  %76 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %75 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1
  %80 = bitcast %"class.WTF::HashMap"* %79 to i8*
  %81 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 3
  %85 = bitcast %"class.WTF::HashMap"* %81 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 20, i1 false) #8
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.WTF::HashMap"* %79 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 1
  %89 = load i32, i32* %82, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %82, align 4
  store i32 %89, i32* %88, align 4
  %91 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 2
  %92 = load i32, i32* %83, align 4
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %83, align 4
  store i32 %92, i32* %91, align 4
  %94 = load i32, i32* %84, align 8
  %95 = and i32 %94, 2147483647
  %96 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 2147483647
  %99 = and i32 %94, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %84, align 8
  %101 = load i32, i32* %96, align 8
  %102 = and i32 %101, -2147483648
  %103 = or i32 %102, %95
  store i32 %103, i32* %96, align 8
  %104 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 0
  %105 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %104, align 8
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %105, null
  br i1 %106, label %109, label %107, !prof !3

107:                                              ; preds = %73
  %108 = bitcast %"struct.WTF::KeyValuePair"* %105 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %104, align 8
  br label %109

109:                                              ; preds = %107, %73
  %110 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 1
  %111 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 1
  %112 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %111, %67
  br i1 %112, label %113, label %73

113:                                              ; preds = %109
  %114 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %69, %113
  %117 = phi i8* [ %115, %113 ], [ %70, %69 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #8
  %118 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %61, i64* %118 monotonic, align 8
  %119 = trunc i64 %60 to i32
  %120 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %119, i32* %120, align 8
  br label %121

121:                                              ; preds = %116, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::CSSNumericSumValue::Term"* @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %24, i64 %25
  ret %"struct.blink::CSSNumericSumValue::Term"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10, !6}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10, !6}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !6}
!20 = distinct !{!20, !6}
