; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkPictureImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkPictureImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.2", [7 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkRect = type { float, float, float, float }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.7*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.7 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.1*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.7*, i8*, i64, i8*)*, i8* }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.(anonymous namespace)::SkPictureImageFilter" = type { %class.SkImageFilter_Base.base, %class.sk_sp.1, %struct.SkRect }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.20 = type { %class.SkPicture* }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.21 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.22, [384 x i64], %class.sk_sp.23, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.24", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.30" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.22 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.23 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp.39, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.36 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.39 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [21 x i8] c"SkPictureImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"SkPictureImageFilterImpl\00", align 1
@_ZTVN12_GLOBAL__N_120SkPictureImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SkPictureImageFilter"*)* @_ZN12_GLOBAL__N_120SkPictureImageFilterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkPictureImageFilter"*)* @_ZN12_GLOBAL__N_120SkPictureImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkPictureImageFilter"*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkPictureImageFilter"*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkPictureImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkPictureImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkPictureImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkPictureImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters7PictureE5sk_spI9SkPictureERK6SkRect(%class.sk_sp* noalias nocapture sret, %class.sk_sp.1* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #10
  %5 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.1* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkPicture* null, %class.SkPicture** %5, align 8
  %8 = bitcast i8* %4 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %8, %class.sk_sp* null, i32 0, %struct.SkRect* null) #11
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkPictureImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 88
  %13 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 16, i1 false) #11
  %14 = bitcast %class.sk_sp* %0 to i8**
  store i8* %4, i8** %14, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z39SkRegisterPictureImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_120SkPictureImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_120SkPictureImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120SkPictureImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = alloca %class.sk_sp.1, align 8
  %5 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -1, i64 16, i1 false)
  %7 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #11
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.1* nonnull sret %4, %class.SkReadBuffer* dereferenceable(136) %1) #11
  %10 = bitcast %class.sk_sp.1* %4 to i64*
  %11 = load i64, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ 0, %2 ]
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %3) #11
  %14 = call i8* @_Znwm(i64 104) #10, !noalias !2
  %15 = bitcast i8* %14 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %15, %class.sk_sp* null, i32 0, %struct.SkRect* null) #11, !noalias !2
  %16 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkPictureImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %14, i64 80
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %14, i64 88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 4 %5, i64 16, i1 false) #11, !noalias !2
  %20 = ptrtoint i8* %14 to i64
  %21 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %20, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120SkPictureImageFilterD2Ev(%"class.(anonymous namespace)::SkPictureImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkPictureImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkPicture*, %class.SkPicture** %3, align 8
  %5 = icmp eq %class.SkPicture* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPicture* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPicture* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkPictureImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_120SkPictureImageFilterD0Ev(%"class.(anonymous namespace)::SkPictureImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_120SkPictureImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkPicture*, %class.SkPicture** %3, align 8
  %5 = icmp eq %class.SkPicture* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPicture* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPicture* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkPictureImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  %18 = bitcast %"class.(anonymous namespace)::SkPictureImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_120SkPictureImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkPictureImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_120SkPictureImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_120SkPictureImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkPictureImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_120SkPictureImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkPictureImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.20, align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 1, i32 0
  %5 = load %class.SkPicture*, %class.SkPicture** %4, align 8
  %6 = icmp ne %class.SkPicture* %5, null
  %7 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %8 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %8, i64 4
  %10 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %9, align 8
  tail call void %10(%class.SkWriteBuffer* %1, i1 zeroext %6) #11
  br i1 %6, label %11, label %31

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %3, i64 0, i32 0
  %13 = load %class.SkPicture*, %class.SkPicture** %4, align 8
  %14 = icmp eq %class.SkPicture* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %11, %15
  store %class.SkPicture* %13, %class.SkPicture** %12, align 8
  call void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.20* nonnull %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %19 = load %class.SkPicture*, %class.SkPicture** %12, align 8
  %20 = icmp eq %class.SkPicture* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkPicture* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkPicture* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  call void %30(%class.SkRefCntBase* nonnull %26) #11
  br label %31

31:                                               ; preds = %25, %21, %18, %2
  %32 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 2
  %33 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %34 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %34, i64 22
  %36 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %35, align 8
  call void %36(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %32) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_120SkPictureImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkPictureImageFilter"* nocapture readonly, %struct.SkRect* nocapture readnone dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 2
  %4 = bitcast %struct.SkRect* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 2, i32 2
  %7 = bitcast float* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 8
  %9 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %5, 0
  %10 = insertvalue { <2 x float>, <2 x float> } %9, <2 x float> %8, 1
  ret { <2 x float>, <2 x float> } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_120SkPictureImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkPictureImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %class.SkSurfaceProps, align 4
  %10 = alloca %class.sk_sp.21, align 8
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.SkISize*
  %13 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %1, i64 0, i32 1, i32 0
  %14 = load %class.SkPicture*, %class.SkPicture** %13, align 8
  %15 = icmp eq %class.SkPicture* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %17, align 8
  br label %140

18:                                               ; preds = %4
  %19 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %24 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %1, i64 0, i32 2
  %26 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -1, i64 16, i1 false)
  %27 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %24, %struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %25, i32 1) #11
  %28 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = bitcast { i64, i64 }* %7 to i32*
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %32 = load float, float* %20, align 4
  %33 = call float @llvm.floor.f32(float %32) #11
  %34 = fcmp olt float %33, 0x41DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0x41DFFFFFE0000000
  %36 = fcmp ogt float %35, 0xC1DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0xC1DFFFFFE0000000
  %38 = fptosi float %37 to i32
  %39 = load float, float* %21, align 4
  %40 = call float @llvm.floor.f32(float %39) #11
  %41 = fcmp olt float %40, 0x41DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0x41DFFFFFE0000000
  %43 = fcmp ogt float %42, 0xC1DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0xC1DFFFFFE0000000
  %45 = fptosi float %44 to i32
  %46 = load float, float* %22, align 4
  %47 = call float @llvm.ceil.f32(float %46) #11
  %48 = fcmp olt float %47, 0x41DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0x41DFFFFFE0000000
  %50 = fcmp ogt float %49, 0xC1DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0xC1DFFFFFE0000000
  %52 = fptosi float %51 to i32
  %53 = load float, float* %23, align 4
  %54 = call float @llvm.ceil.f32(float %53) #11
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = zext i32 %45 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %38 to i64
  %63 = or i64 %61, %62
  %64 = zext i32 %59 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %52 to i64
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %63, i64* %68, align 8
  store i64 %67, i64* %31, align 8
  %69 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %70 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* dereferenceable(16) %69) #11
  br i1 %70, label %73, label %71

71:                                               ; preds = %18
  %72 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %72, align 8
  br label %139

73:                                               ; preds = %18
  %74 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %75 = bitcast i64* %31 to i32*
  %76 = bitcast %class.SkSurfaceProps* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %9, i64 0, i32 0
  store i32 -1431655766, i32* %77, align 4
  %78 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %9, i64 0, i32 1
  store i32 -1431655766, i32* %78, align 4
  %79 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %80 = load %class.SkSpecialImage*, %class.SkSpecialImage** %79, align 8
  %81 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %80, i64 0, i32 1, i32 0
  %82 = load i32, i32* %81, align 4, !noalias !5
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %9, i32 %82, i32 0) #11
  %83 = bitcast %class.sk_sp.21* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %10, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %84, align 8
  %85 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #11
  %86 = load i32, i32* %75, align 8
  %87 = load i32, i32* %29, align 8
  %88 = sub i32 %86, %87
  %89 = load i32, i32* %74, align 4
  %90 = load i32, i32* %30, align 4
  %91 = sub i32 %89, %90
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %88 to i64
  %95 = or i64 %93, %94
  store i64 %95, i64* %11, align 8
  %96 = load %class.SkSpecialImage*, %class.SkSpecialImage** %79, align 8, !noalias !8
  %97 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %98 = load i32, i32* %97, align 8, !noalias !8
  %99 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %100 = load %class.SkColorSpace*, %class.SkColorSpace** %99, align 8, !noalias !8
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.21* nonnull sret %10, %class.SkSpecialImage* %96, i32 %98, %class.SkColorSpace* %100, %struct.SkISize* nonnull dereferenceable(8) %12, i32 2, %class.SkSurfaceProps* nonnull dereferenceable(8) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #11
  %101 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %84, align 8
  %102 = icmp eq %class.SkSpecialSurface* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %73
  %104 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %104, align 8
  br label %138

105:                                              ; preds = %73
  %106 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %101) #11
  %107 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %108 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #11
  %109 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #11
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %111 = extractvalue { <2 x float>, <2 x float> } %109, 0
  store <2 x float> %111, <2 x float>* %110, align 8
  %112 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %113 = extractvalue { <2 x float>, <2 x float> } %109, 1
  store <2 x float> %113, <2 x float>* %112, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %106, %struct.SkRGBA4f* nonnull dereferenceable(16) %107, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #11
  %114 = load i32, i32* %29, align 8
  %115 = sitofp i32 %114 to float
  %116 = fsub float -0.000000e+00, %115
  %117 = load i32, i32* %30, align 4
  %118 = sitofp i32 %117 to float
  %119 = fsub float -0.000000e+00, %118
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %106, float %116, float %119) #11
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %106, %class.SkMatrix* dereferenceable(40) %24) #11
  %120 = load %class.SkPicture*, %class.SkPicture** %13, align 8
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %106, %class.SkPicture* %120, %class.SkMatrix* null, %class.SkPaint* null) #11
  %121 = load i32, i32* %29, align 8
  %122 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %121, i32* %122, align 4
  %123 = load i32, i32* %30, align 4
  %124 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %123, i32* %124, align 4
  %125 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %84, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %125) #11
  %126 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %84, align 8
  %127 = icmp eq %class.SkSpecialSurface* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %105
  %129 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %126, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkSpecialSurface* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkSpecialSurface* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8
  call void %137(%class.SkRefCntBase* nonnull %133) #11
  br label %138

138:                                              ; preds = %103, %105, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %139

139:                                              ; preds = %138, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  br label %140

140:                                              ; preds = %139, %16
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_120SkPictureImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkPictureImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkRect, align 4
  %7 = icmp eq i32 %3, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = bitcast %"class.(anonymous namespace)::SkPictureImageFilter"* %0 to %class.SkImageFilter_Base*
  %10 = tail call { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* %9, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #11
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %58

13:                                               ; preds = %5
  %14 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %19 = getelementptr inbounds %"class.(anonymous namespace)::SkPictureImageFilter", %"class.(anonymous namespace)::SkPictureImageFilter"* %0, i64 0, i32 2
  %20 = bitcast %struct.SkRect* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 8 %20, i64 16, i1 false)
  %21 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %6, i32 1) #11
  %22 = load float, float* %15, align 4
  %23 = call float @llvm.floor.f32(float %22) #11
  %24 = fcmp olt float %23, 0x41DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0x41DFFFFFE0000000
  %26 = fcmp ogt float %25, 0xC1DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0xC1DFFFFFE0000000
  %28 = fptosi float %27 to i32
  %29 = load float, float* %16, align 4
  %30 = call float @llvm.floor.f32(float %29) #11
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = load float, float* %17, align 4
  %37 = call float @llvm.ceil.f32(float %36) #11
  %38 = fcmp olt float %37, 0x41DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0x41DFFFFFE0000000
  %40 = fcmp ogt float %39, 0xC1DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0xC1DFFFFFE0000000
  %42 = fptosi float %41 to i32
  %43 = load float, float* %18, align 4
  %44 = call float @llvm.ceil.f32(float %43) #11
  %45 = fcmp olt float %44, 0x41DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0x41DFFFFFE0000000
  %47 = fcmp ogt float %46, 0xC1DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0xC1DFFFFFE0000000
  %49 = fptosi float %48 to i32
  %50 = zext i32 %35 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %28 to i64
  %53 = or i64 %51, %52
  %54 = zext i32 %49 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %42 to i64
  %57 = or i64 %55, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %58

58:                                               ; preds = %13, %8
  %59 = phi i64 [ %11, %8 ], [ %53, %13 ]
  %60 = phi i64 [ %12, %8 ], [ %57, %13 ]
  %61 = insertvalue { i64, i64 } undef, i64 %59, 0
  %62 = insertvalue { i64, i64 } %61, i64 %60, 1
  ret { i64, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN13SkPicturePriv7FlattenE5sk_spIK9SkPictureER13SkWriteBuffer(%class.sk_sp.20*, %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.21* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN13SkPicturePriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.1* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN14SkImageFilters7PictureE5sk_spI9SkPictureERK6SkRect: argument 0"}
!4 = distinct !{!4, !"_ZN14SkImageFilters7PictureE5sk_spI9SkPictureERK6SkRect"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK14SkSurfaceProps22cloneWithPixelGeometryE15SkPixelGeometry: argument 0"}
!7 = distinct !{!7, !"_ZNK14SkSurfaceProps22cloneWithPixelGeometryE15SkPixelGeometry"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!10 = distinct !{!10, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
