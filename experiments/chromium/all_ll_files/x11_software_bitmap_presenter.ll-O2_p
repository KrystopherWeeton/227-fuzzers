; ModuleID = '../../ui/base/x/x11_software_bitmap_presenter.cc'
source_filename = "../../ui/base/x/x11_software_bitmap_presenter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.337 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.338 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.ui::X11SoftwareBitmapPresenter" = type { i32, %"class.x11::Connection"*, i32, i32, i32, i8, i8, %"class.std::__1::unique_ptr.352", i8, %class.sk_sp.376, %"class.gfx::Size" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.ui::XShmImagePool"* }
%"class.ui::XShmImagePool" = type { %"class.x11::EventObserver", %"class.x11::Connection"*, %"struct.x11::Drawable", i32, i32, i8, i8, %"class.gfx::Size", i64, %"class.std::__1::vector.355", i64, %"class.std::__1::list" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"struct.x11::Drawable" = type { i32 }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"*, %"class.std::__1::__compressed_pair.363" }
%"struct.ui::XShmImagePool::FrameState" = type { i32, i32, i8*, i8, %class.SkBitmap, %"class.std::__1::unique_ptr.357" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.336 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.330, i32, i32 }
%class.sk_sp.330 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.331" }
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__atomic_base.333" }
%"struct.std::__1::__atomic_base.333" = type { %"struct.std::__1::__cxx_atomic_impl.334" }
%"struct.std::__1::__cxx_atomic_impl.334" = type { %"struct.std::__1::__cxx_atomic_base_impl.335" }
%"struct.std::__1::__cxx_atomic_base_impl.335" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.336 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.337, [384 x i64], %class.sk_sp.338, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.339", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.345" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.ui::XShmImagePool::FrameState"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.368" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { i64 }
%class.sk_sp.376 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.gfx::Size" = type { i32, i32 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.x11::ClearAreaRequest" = type { i8, i32, i16, i16, i16, i16 }
%"class.x11::Future.263" = type { %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::GetImageRequest" = type { i32, %"struct.x11::Drawable", i16, i16, i16, i16, i32 }
%"struct.x11::CreatePixmapRequest" = type { i8, i32, %"struct.x11::Drawable", i16, i16 }
%"class.ui::(anonymous namespace)::ScopedPixmap" = type <{ %"class.x11::Connection"*, i32, [4 x i8] }>
%"struct.x11::ChangeGCRequest" = type { i32, %"class.absl::optional.270", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.275", %"class.absl::optional.280", %"class.absl::optional.285", %"class.absl::optional.290", %"class.absl::optional.295", %"class.absl::optional.300", %"class.absl::optional.300", %"class.absl::optional.305", %"class.absl::optional.305", %"class.absl::optional.310", %"class.absl::optional.315", %"class.absl::optional.320", %"class.absl::optional.305", %"class.absl::optional.305", %"class.absl::optional.300", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.325" }
%"class.absl::optional.270" = type { %"class.absl::optional_internal::optional_data.271" }
%"class.absl::optional_internal::optional_data.271" = type { %"class.absl::optional_internal::optional_data_base.272" }
%"class.absl::optional_internal::optional_data_base.272" = type { %"class.absl::optional_internal::optional_data_dtor_base.273" }
%"class.absl::optional_internal::optional_data_dtor_base.273" = type { i8, %union.anon.274 }
%union.anon.274 = type { i32 }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, %union.anon.279 }
%union.anon.279 = type { i32 }
%"class.absl::optional.280" = type { %"class.absl::optional_internal::optional_data.281" }
%"class.absl::optional_internal::optional_data.281" = type { %"class.absl::optional_internal::optional_data_base.282" }
%"class.absl::optional_internal::optional_data_base.282" = type { %"class.absl::optional_internal::optional_data_dtor_base.283" }
%"class.absl::optional_internal::optional_data_dtor_base.283" = type { i8, %union.anon.284 }
%union.anon.284 = type { i32 }
%"class.absl::optional.285" = type { %"class.absl::optional_internal::optional_data.286" }
%"class.absl::optional_internal::optional_data.286" = type { %"class.absl::optional_internal::optional_data_base.287" }
%"class.absl::optional_internal::optional_data_base.287" = type { %"class.absl::optional_internal::optional_data_dtor_base.288" }
%"class.absl::optional_internal::optional_data_dtor_base.288" = type { i8, %union.anon.289 }
%union.anon.289 = type { i32 }
%"class.absl::optional.290" = type { %"class.absl::optional_internal::optional_data.291" }
%"class.absl::optional_internal::optional_data.291" = type { %"class.absl::optional_internal::optional_data_base.292" }
%"class.absl::optional_internal::optional_data_base.292" = type { %"class.absl::optional_internal::optional_data_dtor_base.293" }
%"class.absl::optional_internal::optional_data_dtor_base.293" = type { i8, %union.anon.294 }
%union.anon.294 = type { i32 }
%"class.absl::optional.295" = type { %"class.absl::optional_internal::optional_data.296" }
%"class.absl::optional_internal::optional_data.296" = type { %"class.absl::optional_internal::optional_data_base.297" }
%"class.absl::optional_internal::optional_data_base.297" = type { %"class.absl::optional_internal::optional_data_dtor_base.298" }
%"class.absl::optional_internal::optional_data_dtor_base.298" = type { i8, %union.anon.299 }
%union.anon.299 = type { i32 }
%"class.absl::optional.310" = type { %"class.absl::optional_internal::optional_data.311" }
%"class.absl::optional_internal::optional_data.311" = type { %"class.absl::optional_internal::optional_data_base.312" }
%"class.absl::optional_internal::optional_data_base.312" = type { %"class.absl::optional_internal::optional_data_dtor_base.313" }
%"class.absl::optional_internal::optional_data_dtor_base.313" = type { i8, %union.anon.314 }
%union.anon.314 = type { i32 }
%"class.absl::optional.315" = type { %"class.absl::optional_internal::optional_data.316" }
%"class.absl::optional_internal::optional_data.316" = type { %"class.absl::optional_internal::optional_data_base.317" }
%"class.absl::optional_internal::optional_data_base.317" = type { %"class.absl::optional_internal::optional_data_dtor_base.318" }
%"class.absl::optional_internal::optional_data_dtor_base.318" = type { i8, %union.anon.319 }
%union.anon.319 = type { i32 }
%"class.absl::optional.320" = type { %"class.absl::optional_internal::optional_data.321" }
%"class.absl::optional_internal::optional_data.321" = type { %"class.absl::optional_internal::optional_data_base.322" }
%"class.absl::optional_internal::optional_data_base.322" = type { %"class.absl::optional_internal::optional_data_dtor_base.323" }
%"class.absl::optional_internal::optional_data_dtor_base.323" = type { i8, %union.anon.324 }
%union.anon.324 = type { i32 }
%"class.absl::optional.305" = type { %"class.absl::optional_internal::optional_data.306" }
%"class.absl::optional_internal::optional_data.306" = type { %"class.absl::optional_internal::optional_data_base.307" }
%"class.absl::optional_internal::optional_data_base.307" = type { %"class.absl::optional_internal::optional_data_dtor_base.308" }
%"class.absl::optional_internal::optional_data_dtor_base.308" = type { i8, %union.anon.309 }
%union.anon.309 = type { i32 }
%"class.absl::optional.300" = type { %"class.absl::optional_internal::optional_data.301" }
%"class.absl::optional_internal::optional_data.301" = type { %"class.absl::optional_internal::optional_data_base.302" }
%"class.absl::optional_internal::optional_data_base.302" = type { %"class.absl::optional_internal::optional_data_dtor_base.303" }
%"class.absl::optional_internal::optional_data_dtor_base.303" = type { i8, %union.anon.304 }
%union.anon.304 = type { i32 }
%"class.absl::optional.325" = type { %"class.absl::optional_internal::optional_data.326" }
%"class.absl::optional_internal::optional_data.326" = type { %"class.absl::optional_internal::optional_data_base.327" }
%"class.absl::optional_internal::optional_data_base.327" = type { %"class.absl::optional_internal::optional_data_dtor_base.328" }
%"class.absl::optional_internal::optional_data_dtor_base.328" = type { i8, %union.anon.329 }
%union.anon.329 = type { i32 }
%"struct.x11::CopyAreaRequest" = type { %"struct.x11::Drawable", %"struct.x11::Drawable", i32, i16, i16, i16, i16, i16, i16 }
%class.sk_sp.351 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"struct.x11::PutImageRequest" = type { i32, %"struct.x11::Drawable", i32, i16, i16, i16, i16, i8, i8, %class.scoped_refptr.247 }
%"struct.x11::GetImageReply" = type { i8, i16, i32, %class.scoped_refptr.247 }
%class.SkPaint = type <{ %class.sk_sp.386, %class.sk_sp.387, %class.sk_sp.388, %class.sk_sp.389, %class.sk_sp.390, %struct.SkRGBA4f, float, float, %union.anon.391, [4 x i8] }>
%class.sk_sp.386 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.387 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.388 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.389 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.390 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.391 = type { %struct.anon.392 }
%struct.anon.392 = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { i8*, i8*, %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { i8* }
%"struct.x11::CreateGCRequest" = type { i32, %"struct.x11::Drawable", %"class.absl::optional.270", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.275", %"class.absl::optional.280", %"class.absl::optional.285", %"class.absl::optional.290", %"class.absl::optional.295", %"class.absl::optional.300", %"class.absl::optional.300", %"class.absl::optional.305", %"class.absl::optional.305", %"class.absl::optional.310", %"class.absl::optional.315", %"class.absl::optional.320", %"class.absl::optional.305", %"class.absl::optional.305", %"class.absl::optional.300", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.325" }
%"class.x11::Future.384" = type { %"class.std::__1::unique_ptr.257" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.x11::GetWindowAttributesReply" = type { i32, i16, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, i32, i32, i32, i32 }
%"struct.x11::Connection::VisualInfo" = type { %"struct.x11::Format"*, %"struct.x11::VisualType"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"struct.x11::Shm::PutImageRequest" = type { %"struct.x11::Drawable", i32, i16, i16, i16, i16, i16, i16, i16, i16, i8, i32, i8, i32, i32 }
%"class.base::OnceCallback.385" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.x11::Future.407" = type { %"class.std::__1::unique_ptr.257" }
%"struct.x11::GetPropertyRequest" = type { i8, i32, i32, i32, i32, i32 }
%"struct.x11::GetPropertyReply" = type { i8, i16, i32, i32, i32, %class.scoped_refptr.247 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3x116FutureINS_13GetImageReplyEE4SyncEv = comdat any

$_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3x1116GetArrayPropertyIhEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE = comdat any

$_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@__const._ZN2ui26X11SoftwareBitmapPresenter15CompositeBitmapEPN3x1110ConnectionENS1_8DrawableEiiiiiNS1_15GraphicsContextEPKv.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.337, [384 x i64], %class.sk_sp.338, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.339", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.345" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.337 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.338 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.339" { %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.345" { %"class.std::__1::__compressed_pair.346" { %"struct.std::__1::__compressed_pair_elem.347" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@.str = private unnamed_addr constant [49 x i8] c"../../ui/base/x/x11_software_bitmap_presenter.cc\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"XGetWindowAttributes failed for window \00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"CHROMIUM_COMPOSITE_WINDOW\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2ui26X11SoftwareBitmapPresenterC1EPN3x1110ConnectionEjb = hidden unnamed_addr alias void (%"class.ui::X11SoftwareBitmapPresenter"*, %"class.x11::Connection"*, i32, i1), void (%"class.ui::X11SoftwareBitmapPresenter"*, %"class.x11::Connection"*, i32, i1)* @_ZN2ui26X11SoftwareBitmapPresenterC2EPN3x1110ConnectionEjb
@_ZN2ui26X11SoftwareBitmapPresenterD1Ev = hidden unnamed_addr alias void (%"class.ui::X11SoftwareBitmapPresenter"*), void (%"class.ui::X11SoftwareBitmapPresenter"*)* @_ZN2ui26X11SoftwareBitmapPresenterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui26X11SoftwareBitmapPresenter15CompositeBitmapEPN3x1110ConnectionENS1_8DrawableEiiiiiNS1_15GraphicsContextEPKv(%"class.x11::Connection"*, i32, i32, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = alloca %"struct.x11::ClearAreaRequest", align 4
  %12 = alloca %"class.x11::Future.263", align 8
  %13 = alloca %"struct.x11::GetImageRequest", align 4
  %14 = alloca %"struct.x11::CreatePixmapRequest", align 4
  %15 = alloca %"class.ui::(anonymous namespace)::ScopedPixmap", align 8
  %16 = alloca %"struct.x11::ChangeGCRequest", align 4
  %17 = alloca %"struct.x11::CopyAreaRequest", align 4
  %18 = alloca %"struct.x11::ChangeGCRequest", align 4
  %19 = alloca %"class.x11::Future.263", align 8
  %20 = alloca %"struct.x11::GetImageRequest", align 4
  %21 = alloca %class.SkBitmap, align 8
  %22 = alloca %struct.SkImageInfo, align 16
  %23 = alloca %class.SkCanvas, align 8
  %24 = alloca %class.SkBitmap, align 8
  %25 = alloca %class.sk_sp.351, align 8
  %26 = alloca %"struct.x11::PutImageRequest", align 8
  %27 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 1
  store i32 %1, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 2
  %31 = trunc i32 %2 to i16
  store i16 %31, i16* %30, align 4
  %32 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 3
  %33 = trunc i32 %3 to i16
  store i16 %33, i16* %32, align 2
  %34 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 4
  %35 = trunc i32 %4 to i16
  store i16 %35, i16* %34, align 4
  %36 = getelementptr inbounds %"struct.x11::ClearAreaRequest", %"struct.x11::ClearAreaRequest"* %11, i64 0, i32 5
  %37 = trunc i32 %5 to i16
  store i16 %37, i16* %36, align 2
  %38 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9ClearAreaERKNS_16ClearAreaRequestE(%"class.x11::XProto"* %27, %"struct.x11::ClearAreaRequest"* nonnull dereferenceable(16) %11) #8
  %39 = icmp eq %"class.x11::Connection::FutureImpl"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %9
  %41 = bitcast %"class.x11::Connection::FutureImpl"* %38 to i8*
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %9, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  %43 = bitcast %"class.x11::Future.263"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.x11::Future.263", %"class.x11::Future.263"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* inttoptr (i64 -6148914691236517206 to %"class.x11::Connection::FutureImpl"*), %"class.x11::Connection::FutureImpl"** %44, align 8
  %45 = bitcast %"struct.x11::GetImageRequest"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 0
  store i32 2, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 1, i32 0
  store i32 %1, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 2
  store i16 %31, i16* %48, align 4
  %49 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 3
  store i16 %33, i16* %49, align 2
  %50 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 4
  store i16 %35, i16* %50, align 4
  %51 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 5
  store i16 %37, i16* %51, align 2
  %52 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %13, i64 0, i32 6
  store i32 -1, i32* %52, align 4
  %53 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8GetImageERKNS_15GetImageRequestE(%"class.x11::XProto"* %27, %"struct.x11::GetImageRequest"* nonnull dereferenceable(20) %13) #8
  store %"class.x11::Connection::FutureImpl"* %53, %"class.x11::Connection::FutureImpl"** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %45) #8
  %54 = call { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_13GetImageReplyEE4SyncEv(%"class.x11::Future.263"* nonnull %12)
  %55 = extractvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %54, 0
  %56 = extractvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %54, 1
  %57 = icmp eq %"struct.x11::GetImageReply"* %55, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %55, i64 0, i32 3, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = icmp eq %"class.base::RefCountedMemory"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  br label %65

65:                                               ; preds = %62, %58
  %66 = ptrtoint %"class.base::RefCountedMemory"* %60 to i64
  br label %230

67:                                               ; preds = %42
  %68 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %0) #8
  %69 = getelementptr inbounds %"struct.x11::CreatePixmapRequest", %"struct.x11::CreatePixmapRequest"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8
  %70 = trunc i32 %6 to i8
  store i8 %70, i8* %69, align 4
  %71 = getelementptr inbounds %"struct.x11::CreatePixmapRequest", %"struct.x11::CreatePixmapRequest"* %14, i64 0, i32 1
  store i32 %68, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.x11::CreatePixmapRequest", %"struct.x11::CreatePixmapRequest"* %14, i64 0, i32 2, i32 0
  store i32 %1, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.x11::CreatePixmapRequest", %"struct.x11::CreatePixmapRequest"* %14, i64 0, i32 3
  store i16 %35, i16* %73, align 4
  %74 = getelementptr inbounds %"struct.x11::CreatePixmapRequest", %"struct.x11::CreatePixmapRequest"* %14, i64 0, i32 4
  store i16 %37, i16* %74, align 2
  %75 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreatePixmapERKNS_19CreatePixmapRequestE(%"class.x11::XProto"* %27, %"struct.x11::CreatePixmapRequest"* nonnull dereferenceable(16) %14) #8
  %76 = icmp eq %"class.x11::Connection::FutureImpl"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.x11::Connection::FutureImpl"* %75 to i8*
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %67, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8
  %80 = bitcast %"class.ui::(anonymous namespace)::ScopedPixmap"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #8
  %81 = getelementptr inbounds %"class.ui::(anonymous namespace)::ScopedPixmap", %"class.ui::(anonymous namespace)::ScopedPixmap"* %15, i64 0, i32 0
  %82 = getelementptr inbounds %"class.ui::(anonymous namespace)::ScopedPixmap", %"class.ui::(anonymous namespace)::ScopedPixmap"* %15, i64 0, i32 1
  %83 = bitcast %"class.ui::(anonymous namespace)::ScopedPixmap"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false)
  store %"class.x11::Connection"* %0, %"class.x11::Connection"** %81, align 8
  store i32 %68, i32* %82, align 8
  %84 = bitcast %"struct.x11::ChangeGCRequest"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 188, i8* nonnull %84) #8
  %85 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 0
  store i32 %7, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %86, align 4
  %87 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %87, align 4
  %88 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 4
  %98 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 4
  %101 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %101, align 4
  %102 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 1, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 4
  %104 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %104, align 4
  %105 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 4
  %106 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %107, align 4
  %108 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %108, align 4
  %109 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %16, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %109, align 4
  %110 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8ChangeGCERKNS_15ChangeGCRequestE(%"class.x11::XProto"* %27, %"struct.x11::ChangeGCRequest"* nonnull dereferenceable(188) %16) #8
  %111 = icmp eq %"class.x11::Connection::FutureImpl"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %79
  %113 = bitcast %"class.x11::Connection::FutureImpl"* %110 to i8*
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %79, %112
  call void @llvm.lifetime.end.p0i8(i64 188, i8* nonnull %84) #8
  %115 = bitcast %"struct.x11::CopyAreaRequest"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #8
  %116 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 0, i32 0
  store i32 %1, i32* %116, align 4
  %117 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 1, i32 0
  store i32 %68, i32* %117, align 4
  %118 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 2
  store i32 %7, i32* %118, align 4
  %119 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 3
  store i16 %31, i16* %119, align 4
  %120 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 4
  store i16 %33, i16* %120, align 2
  %121 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 5
  store i16 0, i16* %121, align 4
  %122 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 6
  store i16 0, i16* %122, align 2
  %123 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 7
  store i16 %35, i16* %123, align 4
  %124 = getelementptr inbounds %"struct.x11::CopyAreaRequest", %"struct.x11::CopyAreaRequest"* %17, i64 0, i32 8
  store i16 %37, i16* %124, align 2
  %125 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CopyAreaERKNS_15CopyAreaRequestE(%"class.x11::XProto"* %27, %"struct.x11::CopyAreaRequest"* nonnull dereferenceable(24) %17) #8
  %126 = icmp eq %"class.x11::Connection::FutureImpl"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %114
  %128 = bitcast %"class.x11::Connection::FutureImpl"* %125 to i8*
  call void @_ZdlPv(i8* %128) #9
  br label %129

129:                                              ; preds = %114, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #8
  %130 = bitcast %"struct.x11::ChangeGCRequest"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 188, i8* nonnull %130) #8
  %131 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 0
  store i32 %7, i32* %131, align 4
  %132 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %132, align 4
  %133 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %133, align 4
  %134 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %134, align 4
  %135 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %135, align 4
  %136 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %136, align 4
  %137 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %137, align 4
  %138 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %138, align 4
  %139 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %140, align 4
  %141 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %141, align 4
  %142 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %143, align 4
  %144 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %144, align 4
  %145 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %145, align 4
  %146 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %146, align 4
  %147 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %147, align 4
  %148 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %149, align 4
  %150 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %150, align 4
  %151 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %151, align 4
  %152 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %152, align 4
  %153 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %153, align 4
  %154 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %154, align 4
  %155 = getelementptr inbounds %"struct.x11::ChangeGCRequest", %"struct.x11::ChangeGCRequest"* %18, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %155, align 4
  %156 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8ChangeGCERKNS_15ChangeGCRequestE(%"class.x11::XProto"* %27, %"struct.x11::ChangeGCRequest"* nonnull dereferenceable(188) %18) #8
  %157 = icmp eq %"class.x11::Connection::FutureImpl"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %129
  %159 = bitcast %"class.x11::Connection::FutureImpl"* %156 to i8*
  call void @_ZdlPv(i8* %159) #9
  br label %160

160:                                              ; preds = %129, %158
  call void @llvm.lifetime.end.p0i8(i64 188, i8* nonnull %130) #8
  %161 = bitcast %"class.x11::Future.263"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #8
  %162 = getelementptr inbounds %"class.x11::Future.263", %"class.x11::Future.263"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* inttoptr (i64 -6148914691236517206 to %"class.x11::Connection::FutureImpl"*), %"class.x11::Connection::FutureImpl"** %162, align 8
  %163 = bitcast %"struct.x11::GetImageRequest"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %163) #8
  %164 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 0
  store i32 2, i32* %164, align 4
  %165 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 1, i32 0
  store i32 %68, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 2
  store i16 0, i16* %166, align 4
  %167 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 3
  store i16 0, i16* %167, align 2
  %168 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 4
  store i16 %35, i16* %168, align 4
  %169 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 5
  store i16 %37, i16* %169, align 2
  %170 = getelementptr inbounds %"struct.x11::GetImageRequest", %"struct.x11::GetImageRequest"* %20, i64 0, i32 6
  store i32 -1, i32* %170, align 4
  %171 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8GetImageERKNS_15GetImageRequestE(%"class.x11::XProto"* %27, %"struct.x11::GetImageRequest"* nonnull dereferenceable(20) %20) #8
  store %"class.x11::Connection::FutureImpl"* %171, %"class.x11::Connection::FutureImpl"** %162, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %163) #8
  %172 = call { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_13GetImageReplyEE4SyncEv(%"class.x11::Future.263"* nonnull %19)
  %173 = extractvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %172, 0
  %174 = extractvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %172, 1
  %175 = icmp eq %"struct.x11::GetImageReply"* %173, null
  br i1 %175, label %185, label %176

176:                                              ; preds = %160
  %177 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %173, i64 0, i32 3, i32 0
  %178 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %177, align 8
  %179 = icmp eq %"class.base::RefCountedMemory"* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %178, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 1 monotonic
  br label %183

183:                                              ; preds = %180, %176
  %184 = ptrtoint %"class.base::RefCountedMemory"* %178 to i64
  br label %185

185:                                              ; preds = %160, %183
  %186 = phi i64 [ %184, %183 ], [ 0, %160 ]
  %187 = phi i32 [ 0, %183 ], [ 1, %160 ]
  %188 = icmp eq %"class.x11::Error"* %174, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = bitcast %"class.x11::Error"* %174 to void (%"class.x11::Error"*)***
  %191 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %191, i64 1
  %193 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %192, align 8
  call void %193(%"class.x11::Error"* nonnull %174) #8
  br label %194

194:                                              ; preds = %189, %185
  br i1 %175, label %213, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %173, i64 0, i32 3, i32 0
  %197 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %196, align 8
  %198 = icmp eq %"class.base::RefCountedMemory"* %197, null
  br i1 %198, label %211, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %197, i64 0, i32 1
  %201 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw sub i32* %201, i32 1 acq_rel
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %211

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %200, i64 -2
  %206 = bitcast %"class.base::RefCountedThreadSafe.248"* %205 to %"class.base::RefCountedMemory"*
  %207 = bitcast %"class.base::RefCountedThreadSafe.248"* %205 to void (%"class.base::RefCountedMemory"*)***
  %208 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %208, i64 3
  %210 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %209, align 8
  call void %210(%"class.base::RefCountedMemory"* nonnull %206) #8
  br label %211

211:                                              ; preds = %204, %199, %195
  %212 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %173, i64 0, i32 0
  call void @_ZdlPv(i8* %212) #9
  br label %213

213:                                              ; preds = %194, %211
  %214 = icmp eq i32 %187, 0
  %215 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %162, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %162, align 8
  %216 = icmp eq %"class.x11::Connection::FutureImpl"* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.x11::Connection::FutureImpl"* %215 to i8*
  call void @_ZdlPv(i8* %218) #9
  br label %219

219:                                              ; preds = %213, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #8
  %220 = load i32, i32* %82, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %219
  %223 = bitcast %"class.ui::(anonymous namespace)::ScopedPixmap"* %15 to %"class.x11::XProto"**
  %224 = load %"class.x11::XProto"*, %"class.x11::XProto"** %223, align 8
  %225 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto10FreePixmapERKNS_6PixmapE(%"class.x11::XProto"* %224, i32* dereferenceable(4) %82) #8
  %226 = icmp eq %"class.x11::Connection::FutureImpl"* %225, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = bitcast %"class.x11::Connection::FutureImpl"* %225 to i8*
  call void @_ZdlPv(i8* %228) #9
  br label %229

229:                                              ; preds = %219, %222, %227
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #8
  br i1 %214, label %230, label %232

230:                                              ; preds = %229, %65
  %231 = phi i64 [ %66, %65 ], [ %186, %229 ]
  br label %232

232:                                              ; preds = %229, %230
  %233 = phi i64 [ %231, %230 ], [ %186, %229 ]
  %234 = phi i32 [ 0, %230 ], [ 1, %229 ]
  %235 = icmp eq %"class.x11::Error"* %56, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = bitcast %"class.x11::Error"* %56 to void (%"class.x11::Error"*)***
  %238 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %238, i64 1
  %240 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %239, align 8
  call void %240(%"class.x11::Error"* nonnull %56) #8
  br label %241

241:                                              ; preds = %236, %232
  br i1 %57, label %260, label %242

242:                                              ; preds = %241
  %243 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %55, i64 0, i32 3, i32 0
  %244 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %243, align 8
  %245 = icmp eq %"class.base::RefCountedMemory"* %244, null
  br i1 %245, label %258, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %244, i64 0, i32 1
  %248 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = atomicrmw sub i32* %248, i32 1 acq_rel
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %258

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %247, i64 -2
  %253 = bitcast %"class.base::RefCountedThreadSafe.248"* %252 to %"class.base::RefCountedMemory"*
  %254 = bitcast %"class.base::RefCountedThreadSafe.248"* %252 to void (%"class.base::RefCountedMemory"*)***
  %255 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %255, i64 3
  %257 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %256, align 8
  call void %257(%"class.base::RefCountedMemory"* nonnull %253) #8
  br label %258

258:                                              ; preds = %251, %246, %242
  %259 = getelementptr inbounds %"struct.x11::GetImageReply", %"struct.x11::GetImageReply"* %55, i64 0, i32 0
  call void @_ZdlPv(i8* %259) #9
  br label %260

260:                                              ; preds = %241, %258
  %261 = icmp eq i32 %234, 0
  br i1 %261, label %262, label %372

262:                                              ; preds = %260
  %263 = bitcast %class.SkBitmap* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %263) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %21) #8
  %264 = bitcast %struct.SkImageInfo* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #8
  %265 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0, i32 0, i32 0
  %266 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0, i32 1
  %267 = zext i32 %5 to i64
  %268 = shl nuw i64 %267, 32
  %269 = zext i32 %4 to i64
  %270 = or i64 %268, %269
  %271 = bitcast i32* %266 to i64*
  %272 = bitcast %struct.SkImageInfo* %22 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %272, align 16, !alias.scope !2
  %273 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 1
  %274 = bitcast %struct.SkISize* %273 to i64*
  store i64 %270, i64* %274, align 16, !alias.scope !2
  %275 = inttoptr i64 %233 to %"class.base::RefCountedMemory"*
  %276 = inttoptr i64 %233 to i8* (%"class.base::RefCountedMemory"*)***
  %277 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %276, align 8
  %278 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %277, align 8
  %279 = call i8* %278(%"class.base::RefCountedMemory"* %275) #8
  %280 = sext i32 %4 to i64
  %281 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0
  %282 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %281) #8
  %283 = sext i32 %282 to i64
  %284 = mul nsw i64 %283, %280
  %285 = icmp ult i64 %284, 2147483648
  %286 = select i1 %285, i64 %284, i64 0
  %287 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %21, %struct.SkImageInfo* nonnull dereferenceable(24) %22, i8* %279, i64 %286, void (i8*, i8*)* null, i8* null) #8
  br i1 %287, label %288, label %361

288:                                              ; preds = %262
  %289 = bitcast %struct.SkImageInfo* %22 to i64*
  %290 = bitcast %class.SkCanvas* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %290) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %290, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.337, [384 x i64], %class.sk_sp.338, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.339", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.345" }* @__const._ZN2ui26X11SoftwareBitmapPresenter15CompositeBitmapEPN3x1110ConnectionENS1_8DrawableEiiiiiNS1_15GraphicsContextEPKv.canvas to i8*), i64 3232, i1 false)
  call void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas* nonnull %23, %class.SkBitmap* nonnull dereferenceable(56) %21) #8
  %291 = bitcast %class.SkBitmap* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %291) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %24) #8
  %292 = load %class.SkColorSpace*, %class.SkColorSpace** %265, align 16
  store i64 0, i64* %289, align 16
  %293 = icmp eq %class.SkColorSpace* %292, null
  br i1 %293, label %300, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = atomicrmw add i32* %295, i32 -1 acq_rel
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %298, label %300

298:                                              ; preds = %294
  %299 = bitcast %class.SkColorSpace* %292 to i8*
  call void @_ZdlPv(i8* %299) #9
  br label %300

300:                                              ; preds = %288, %294, %298
  store i64 8589934598, i64* %271, align 8
  store i64 %270, i64* %274, align 16
  %301 = shl nsw i32 %4, 2
  %302 = sext i32 %301 to i64
  %303 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %24, %struct.SkImageInfo* nonnull dereferenceable(24) %22, i8* %8, i64 %302, void (i8*, i8*)* null, i8* null) #8
  br i1 %303, label %304, label %359

304:                                              ; preds = %300
  %305 = bitcast %class.sk_sp.351* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #8
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.351* nonnull sret %25, %class.SkBitmap* nonnull %24) #8
  %306 = getelementptr inbounds %class.sk_sp.351, %class.sk_sp.351* %25, i64 0, i32 0
  %307 = load %class.SkImage*, %class.SkImage** %306, align 8
  %308 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %308) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %308, i8 0, i64 20, i1 false) #8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %23, %class.SkImage* %307, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, %class.SkPaint* null) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %308) #8
  %309 = load %class.SkImage*, %class.SkImage** %306, align 8
  %310 = icmp eq %class.SkImage* %309, null
  br i1 %310, label %321, label %311

311:                                              ; preds = %304
  %312 = getelementptr inbounds %class.SkImage, %class.SkImage* %309, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = atomicrmw add i32* %312, i32 -1 acq_rel
  %314 = icmp eq i32 %313, 1
  br i1 %314, label %315, label %321

315:                                              ; preds = %311
  %316 = bitcast %class.SkImage* %309 to %class.SkRefCntBase*
  %317 = bitcast %class.SkImage* %309 to void (%class.SkRefCntBase*)***
  %318 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %317, align 8
  %319 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %318, i64 2
  %320 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %319, align 8
  call void %320(%class.SkRefCntBase* nonnull %316) #8
  br label %321

321:                                              ; preds = %304, %311, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #8
  call void @_ZN8SkCanvas5flushEv(%class.SkCanvas* nonnull %23) #8
  %322 = bitcast %"struct.x11::PutImageRequest"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %322) #8
  %323 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 0
  store i32 2, i32* %323, align 8
  %324 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 1, i32 0
  store i32 %1, i32* %324, align 4
  %325 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 2
  store i32 %7, i32* %325, align 8
  %326 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 3
  store i16 %35, i16* %326, align 4
  %327 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 4
  store i16 %37, i16* %327, align 2
  %328 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 5
  store i16 %31, i16* %328, align 8
  %329 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 6
  store i16 %33, i16* %329, align 2
  %330 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 7
  store i8 0, i8* %330, align 4
  %331 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 8
  %332 = trunc i32 %6 to i8
  store i8 %332, i8* %331, align 1
  %333 = getelementptr inbounds %"struct.x11::PutImageRequest", %"struct.x11::PutImageRequest"* %26, i64 0, i32 9, i32 0
  store %"class.base::RefCountedMemory"* %275, %"class.base::RefCountedMemory"** %333, align 8
  %334 = icmp eq i64 %233, 0
  br i1 %334, label %338, label %335

335:                                              ; preds = %321
  %336 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %275, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw add i32* %336, i32 1 monotonic
  br label %338

338:                                              ; preds = %321, %335
  %339 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8PutImageERKNS_15PutImageRequestE(%"class.x11::XProto"* %27, %"struct.x11::PutImageRequest"* nonnull dereferenceable(32) %26) #8
  %340 = icmp eq %"class.x11::Connection::FutureImpl"* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = bitcast %"class.x11::Connection::FutureImpl"* %339 to i8*
  call void @_ZdlPv(i8* %342) #9
  br label %343

343:                                              ; preds = %338, %341
  %344 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %333, align 8
  %345 = icmp eq %"class.base::RefCountedMemory"* %344, null
  br i1 %345, label %358, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %344, i64 0, i32 1
  %348 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %347, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = atomicrmw sub i32* %348, i32 1 acq_rel
  %350 = icmp eq i32 %349, 1
  br i1 %350, label %351, label %358

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %347, i64 -2
  %353 = bitcast %"class.base::RefCountedThreadSafe.248"* %352 to %"class.base::RefCountedMemory"*
  %354 = bitcast %"class.base::RefCountedThreadSafe.248"* %352 to void (%"class.base::RefCountedMemory"*)***
  %355 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %354, align 8
  %356 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %355, i64 3
  %357 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %356, align 8
  call void %357(%"class.base::RefCountedMemory"* nonnull %353) #8
  br label %358

358:                                              ; preds = %343, %346, %351
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %322) #8
  br label %359

359:                                              ; preds = %300, %358
  %360 = phi i1 [ true, %358 ], [ false, %300 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %291) #8
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %290) #8
  br label %361

361:                                              ; preds = %262, %359
  %362 = phi i1 [ %360, %359 ], [ false, %262 ]
  %363 = load %class.SkColorSpace*, %class.SkColorSpace** %265, align 16
  %364 = icmp eq %class.SkColorSpace* %363, null
  br i1 %364, label %371, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %363, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = atomicrmw add i32* %366, i32 -1 acq_rel
  %368 = icmp eq i32 %367, 1
  br i1 %368, label %369, label %371

369:                                              ; preds = %365
  %370 = bitcast %class.SkColorSpace* %363 to i8*
  call void @_ZdlPv(i8* %370) #9
  br label %371

371:                                              ; preds = %361, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %263) #8
  br label %372

372:                                              ; preds = %260, %371
  %373 = phi i1 [ %362, %371 ], [ false, %260 ]
  %374 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %44, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %44, align 8
  %375 = icmp eq %"class.x11::Connection::FutureImpl"* %374, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %372
  %377 = bitcast %"class.x11::Connection::FutureImpl"* %374 to i8*
  call void @_ZdlPv(i8* %377) #9
  br label %378

378:                                              ; preds = %372, %376
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %379 = icmp eq i64 %233, 0
  br i1 %379, label %393, label %380

380:                                              ; preds = %378
  %381 = inttoptr i64 %233 to %"class.base::RefCountedMemory"*
  %382 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %381, i64 0, i32 1
  %383 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %382, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = atomicrmw sub i32* %383, i32 1 acq_rel
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %393

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %382, i64 -2
  %388 = bitcast %"class.base::RefCountedThreadSafe.248"* %387 to %"class.base::RefCountedMemory"*
  %389 = bitcast %"class.base::RefCountedThreadSafe.248"* %387 to void (%"class.base::RefCountedMemory"*)***
  %390 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %390, i64 3
  %392 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %391, align 8
  call void %392(%"class.base::RefCountedMemory"* nonnull %388) #8
  br label %393

393:                                              ; preds = %378, %380, %386
  ret i1 %373
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9ClearAreaERKNS_16ClearAreaRequestE(%"class.x11::XProto"*, %"struct.x11::ClearAreaRequest"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8GetImageERKNS_15GetImageRequestE(%"class.x11::XProto"*, %"struct.x11::GetImageRequest"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_13GetImageReplyEE4SyncEv(%"class.x11::Future.263"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.263", %"class.x11::Future.263"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #8
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #8
  %23 = call %"struct.x11::GetImageReply"* @_ZN3x116detail9ReadReplyINS_13GetImageReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #8
  %24 = ptrtoint %"struct.x11::GetImageReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #8
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetImageReply"*
  %47 = insertvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetImageReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetImageReply"*, %"class.x11::Error"* } %48
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreatePixmapERKNS_19CreatePixmapRequestE(%"class.x11::XProto"*, %"struct.x11::CreatePixmapRequest"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8ChangeGCERKNS_15ChangeGCRequestE(%"class.x11::XProto"*, %"struct.x11::ChangeGCRequest"* dereferenceable(188)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CopyAreaERKNS_15CopyAreaRequestE(%"class.x11::XProto"*, %"struct.x11::CopyAreaRequest"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.351* sret, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkCanvas5flushEv(%class.SkCanvas*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8PutImageERKNS_15PutImageRequestE(%"class.x11::XProto"*, %"struct.x11::PutImageRequest"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11SoftwareBitmapPresenterC2EPN3x1110ConnectionEjb(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.x11::Connection"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.393", align 8
  %6 = alloca %"struct.x11::CreateGCRequest", align 4
  %7 = alloca %"class.x11::Future.384", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = zext i1 %3 to i8
  %11 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 0
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 1
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %12, align 8
  %13 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 5
  store i8 %10, i8* %16, align 4
  %17 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 6
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7
  %19 = bitcast %"class.std::__1::unique_ptr.352"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 8
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9, i32 0
  %22 = bitcast %class.SkSurface** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = tail call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %1) #8
  store i32 %23, i32* %13, align 8
  %24 = bitcast %"class.x11::Connection"** %12 to %"class.x11::XProto"**
  %25 = load %"class.x11::XProto"*, %"class.x11::XProto"** %24, align 8
  %26 = bitcast %"struct.x11::CreateGCRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 0
  store i32 %23, i32* %27, align 4
  %28 = load i32, i32* %11, align 8
  %29 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 1, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %47, align 4
  %48 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %52, align 4
  %53 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CreateGCERKNS_15CreateGCRequestE(%"class.x11::XProto"* %25, %"struct.x11::CreateGCRequest"* nonnull dereferenceable(192) %6) #8
  %54 = icmp eq %"class.x11::Connection::FutureImpl"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %4
  %56 = bitcast %"class.x11::Connection::FutureImpl"* %53 to i8*
  call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %4, %55
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %26) #8
  %58 = bitcast %"class.x11::Future.384"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  %59 = load %"class.x11::XProto"*, %"class.x11::XProto"** %24, align 8
  %60 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto19GetWindowAttributesERKNS_6WindowE(%"class.x11::XProto"* %59, i32* dereferenceable(4) %11) #8
  %61 = getelementptr inbounds %"class.x11::Future.384", %"class.x11::Future.384"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %60, %"class.x11::Connection::FutureImpl"** %61, align 8
  %62 = call { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv(%"class.x11::Future.384"* nonnull %7)
  %63 = extractvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %62, 0
  %64 = extractvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %62, 1
  %65 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %61, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %61, align 8
  %66 = icmp eq %"class.x11::Connection::FutureImpl"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %57
  %68 = bitcast %"class.x11::Connection::FutureImpl"* %65 to i8*
  call void @_ZdlPv(i8* %68) #9
  br label %69

69:                                               ; preds = %57, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  %70 = icmp eq %"struct.x11::GetWindowAttributesReply"* %63, null
  br i1 %70, label %142, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.x11::GetWindowAttributesReply", %"struct.x11::GetWindowAttributesReply"* %63, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %14, align 4
  %74 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %75 = call %"struct.x11::Connection::VisualInfo"* @_ZNK3x1110Connection19GetVisualInfoFromIdENS_8VisualIdE(%"class.x11::Connection"* %74, i32 %73) #8
  %76 = getelementptr inbounds %"struct.x11::Connection::VisualInfo", %"struct.x11::Connection::VisualInfo"* %75, i64 0, i32 0
  %77 = load %"struct.x11::Format"*, %"struct.x11::Format"** %76, align 8
  %78 = getelementptr inbounds %"struct.x11::Format", %"struct.x11::Format"* %77, i64 0, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  store i32 %80, i32* %15, align 8
  %81 = icmp eq %"class.x11::Error"* %64, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = bitcast %"class.x11::Error"* %64 to void (%"class.x11::Error"*)***
  %84 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %84, i64 1
  %86 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %85, align 8
  call void %86(%"class.x11::Error"* nonnull %64) #8
  br label %87

87:                                               ; preds = %82, %71
  %88 = bitcast %"struct.x11::GetWindowAttributesReply"* %63 to i8*
  call void @_ZdlPv(i8* %88) #9
  %89 = load i8, i8* %16, align 4, !range !5
  %90 = icmp eq i8 %89, 0
  %91 = call i8* @_Znwm(i64 104) #9
  %92 = bitcast i8* %91 to %"class.ui::XShmImagePool"*
  %93 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %94 = load i32, i32* %11, align 4
  %95 = load i32, i32* %14, align 4
  %96 = load i32, i32* %15, align 4
  %97 = select i1 %90, i64 1, i64 2
  %98 = icmp ne i8 %89, 0
  call void @_ZN2ui13XShmImagePoolC1EPN3x1110ConnectionENS1_8DrawableENS1_8VisualIdEimb(%"class.ui::XShmImagePool"* nonnull %92, %"class.x11::Connection"* %93, i32 %94, i32 %95, i32 %96, i64 %97, i1 zeroext %98) #8
  %99 = ptrtoint i8* %91 to i64
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.352"* %18, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %100, align 8
  store i64 %99, i64* %19, align 8
  %102 = icmp eq %"class.ui::XShmImagePool"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %87
  %104 = bitcast %"class.ui::XShmImagePool"* %101 to void (%"class.ui::XShmImagePool"*)***
  %105 = load void (%"class.ui::XShmImagePool"*)**, void (%"class.ui::XShmImagePool"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.ui::XShmImagePool"*)*, void (%"class.ui::XShmImagePool"*)** %105, i64 2
  %107 = load void (%"class.ui::XShmImagePool"*)*, void (%"class.ui::XShmImagePool"*)** %106, align 8
  call void %107(%"class.ui::XShmImagePool"* nonnull %101) #8
  br label %108

108:                                              ; preds = %103, %87
  %109 = load i32, i32* %11, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #8
  %111 = call i8* @_Znwm(i64 32) #9
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %111, i8** %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %114, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %111, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25, i1 false) #8
  %115 = getelementptr inbounds i8, i8* %111, i64 25
  store i8 0, i8* %115, align 1
  %116 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #8
  %117 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #8
  %118 = bitcast %"class.std::__1::vector.393"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #8
  %119 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %5, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #8
  %121 = call zeroext i1 @_ZN3x1116GetArrayPropertyIhEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32 %109, i32 %116, %"class.std::__1::vector.393"* nonnull %5, i32* null, i64 1, %"class.x11::Connection"* %117) #8
  %122 = load i8*, i8** %119, align 8
  %123 = xor i1 %121, true
  %124 = load i8*, i8** %120, align 8
  %125 = icmp eq i8* %122, %124
  %126 = or i1 %125, %123
  br i1 %126, label %129, label %127

127:                                              ; preds = %108
  %128 = load i8, i8* %122, align 1
  store i8 %128, i8* %17, align 1
  br label %129

129:                                              ; preds = %127, %108
  %130 = icmp eq i8* %122, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %129
  %132 = ptrtoint i8* %122 to i64
  %133 = bitcast i8** %120 to i64*
  store i64 %132, i64* %133, align 8
  call void @_ZdlPv(i8* nonnull %122) #9
  br label %134

134:                                              ; preds = %129, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #8
  %135 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %134, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #8
  br label %158

142:                                              ; preds = %69
  %143 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %143, label %144, label %151

144:                                              ; preds = %142
  %145 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %145) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 134, i32 2) #8
  %146 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %147 = bitcast %"class.std::__1::basic_ostringstream"* %146 to %"class.std::__1::basic_ostream"*
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %147, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39) #8
  %149 = load i32, i32* %11, align 8
  %150 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %148, i32 %149) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %145) #8
  br label %151

151:                                              ; preds = %142, %144
  %152 = icmp eq %"class.x11::Error"* %64, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %151
  %154 = bitcast %"class.x11::Error"* %64 to void (%"class.x11::Error"*)***
  %155 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %155, i64 1
  %157 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %156, align 8
  call void %157(%"class.x11::Error"* nonnull %64) #8
  br label %158

158:                                              ; preds = %153, %151, %141
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CreateGCERKNS_15CreateGCRequestE(%"class.x11::XProto"*, %"struct.x11::CreateGCRequest"* dereferenceable(192)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto19GetWindowAttributesERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv(%"class.x11::Future.384"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.384", %"class.x11::Future.384"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #8
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #8
  %23 = call %"struct.x11::GetWindowAttributesReply"* @_ZN3x116detail9ReadReplyINS_24GetWindowAttributesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #8
  %24 = ptrtoint %"struct.x11::GetWindowAttributesReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #8
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetWindowAttributesReply"*
  %47 = insertvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetWindowAttributesReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::Connection::VisualInfo"* @_ZNK3x1110Connection19GetVisualInfoFromIdENS_8VisualIdE(%"class.x11::Connection"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui26X11SoftwareBitmapPresenter16MaxFramesPendingEv(%"class.ui::X11SoftwareBitmapPresenter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4, !range !5
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i32 1, i32 2
  ret i32 %5
}

declare i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11SoftwareBitmapPresenterD2Ev(%"class.ui::X11SoftwareBitmapPresenter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 1
  %7 = bitcast %"class.x11::Connection"** %6 to %"class.x11::XProto"**
  %8 = load %"class.x11::XProto"*, %"class.x11::XProto"** %7, align 8
  %9 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"* %8, i32* dereferenceable(4) %2) #8
  %10 = icmp eq %"class.x11::Connection::FutureImpl"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.x11::Connection::FutureImpl"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %11, %5, %1
  %14 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9, i32 0
  %15 = load %class.SkSurface*, %class.SkSurface** %14, align 8
  %16 = icmp eq %class.SkSurface* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkSurface* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkSurface* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #8
  br label %27

27:                                               ; preds = %13, %17, %21
  %28 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %28, align 8
  store %"class.ui::XShmImagePool"* null, %"class.ui::XShmImagePool"** %28, align 8
  %30 = icmp eq %"class.ui::XShmImagePool"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.ui::XShmImagePool"* %29 to void (%"class.ui::XShmImagePool"*)***
  %33 = load void (%"class.ui::XShmImagePool"*)**, void (%"class.ui::XShmImagePool"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.ui::XShmImagePool"*)*, void (%"class.ui::XShmImagePool"*)** %33, i64 2
  %35 = load void (%"class.ui::XShmImagePool"*)*, void (%"class.ui::XShmImagePool"*)** %34, align 8
  tail call void %35(%"class.ui::XShmImagePool"* nonnull %29) #8
  br label %36

36:                                               ; preds = %27, %31
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26X11SoftwareBitmapPresenter12ShmPoolReadyEv(%"class.ui::X11SoftwareBitmapPresenter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %2, align 8
  %4 = icmp eq %"class.ui::XShmImagePool"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11SoftwareBitmapPresenter6ResizeERKN3gfx4SizeE(%"class.ui::X11SoftwareBitmapPresenter"* nocapture, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %class.SkSurfaceProps, align 4
  %5 = alloca %class.sk_sp.376, align 8
  %6 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 10
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 10, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %113, label %18

18:                                               ; preds = %2, %12
  %19 = bitcast %"class.gfx::Size"* %1 to i64*
  %20 = bitcast %"class.gfx::Size"* %6 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %27 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %26, align 8
  %28 = icmp eq %"class.ui::XShmImagePool"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = tail call zeroext i1 @_ZN2ui13XShmImagePool6ResizeERKN3gfx4SizeE(%"class.ui::XShmImagePool"* nonnull %27, %"class.gfx::Size"* dereferenceable(8) %1) #8
  br i1 %30, label %31, label %46

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 8
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9, i32 0
  %34 = load %class.SkSurface*, %class.SkSurface** %33, align 8
  store %class.SkSurface* null, %class.SkSurface** %33, align 8
  %35 = icmp eq %class.SkSurface* %34, null
  br i1 %35, label %113, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %113

40:                                               ; preds = %36
  %41 = bitcast %class.SkSurface* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkSurface* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  tail call void %45(%class.SkRefCntBase* nonnull %41) #8
  br label %113

46:                                               ; preds = %25, %18, %29
  %47 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @_ZN2ui18ColorTypeForVisualEN3x118VisualIdE(i32 %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %113, label %51

51:                                               ; preds = %46
  %52 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %55 = load i32, i32* %9, align 4
  %56 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 10, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %49 to i64
  %59 = or i64 %58, 4294967296
  %60 = zext i32 %57 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %55 to i64
  %63 = or i64 %61, %62
  %64 = bitcast %struct.SkImageInfo* %3 to i64*
  store i64 0, i64* %64, align 8, !alias.scope !6
  %65 = bitcast i32* %54 to i64*
  store i64 %59, i64* %65, align 8, !alias.scope !6
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %67 = bitcast %struct.SkISize* %66 to i64*
  store i64 %63, i64* %67, align 8, !alias.scope !6
  %68 = bitcast %class.SkSurfaceProps* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %4, i64 0, i32 0
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %4, i64 0, i32 1
  store i32 -1431655766, i32* %70, align 4
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %4) #8
  %71 = bitcast %class.sk_sp.376* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.376* nonnull sret %5, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i64 0, %class.SkSurfaceProps* nonnull %4) #8
  %72 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9
  %73 = getelementptr inbounds %class.sk_sp.376, %class.sk_sp.376* %5, i64 0, i32 0
  %74 = bitcast %class.sk_sp.376* %5 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.SkSurface* null, %class.SkSurface** %73, align 8
  %76 = getelementptr inbounds %class.sk_sp.376, %class.sk_sp.376* %72, i64 0, i32 0
  %77 = load %class.SkSurface*, %class.SkSurface** %76, align 8
  %78 = bitcast %class.sk_sp.376* %72 to i64*
  store i64 %75, i64* %78, align 8
  %79 = icmp eq %class.SkSurface* %77, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %51
  %81 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkSurface* %77 to %class.SkRefCntBase*
  %86 = bitcast %class.SkSurface* %77 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #8
  br label %90

90:                                               ; preds = %51, %80, %84
  %91 = load %class.SkSurface*, %class.SkSurface** %73, align 8
  %92 = icmp eq %class.SkSurface* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkSurface* %91 to %class.SkRefCntBase*
  %99 = bitcast %class.SkSurface* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #8
  br label %103

103:                                              ; preds = %90, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorSpace* %104 to i8*
  call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %103, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8
  br label %113

113:                                              ; preds = %40, %36, %31, %46, %12, %112
  ret void
}

declare zeroext i1 @_ZN2ui13XShmImagePool6ResizeERKN3gfx4SizeE(%"class.ui::XShmImagePool"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN2ui18ColorTypeForVisualEN3x118VisualIdE(i32) local_unnamed_addr #1

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN2ui26X11SoftwareBitmapPresenter11GetSkCanvasEv(%"class.ui::X11SoftwareBitmapPresenter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %2, align 8
  %4 = icmp eq %"class.ui::XShmImagePool"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"* nonnull %3) #8
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %2, align 8
  %9 = tail call %class.SkCanvas* @_ZN2ui13XShmImagePool13CurrentCanvasEv(%"class.ui::XShmImagePool"* %8) #8
  br label %16

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9, i32 0
  %12 = load %class.SkSurface*, %class.SkSurface** %11, align 8
  %13 = icmp eq %class.SkSurface* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %12) #8
  br label %16

16:                                               ; preds = %10, %14, %7
  %17 = phi %class.SkCanvas* [ %9, %7 ], [ %15, %14 ], [ null, %10 ]
  ret %class.SkCanvas* %17
}

declare %class.SkCanvas* @_ZN2ui13XShmImagePool13CurrentCanvasEv(%"class.ui::XShmImagePool"*) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11SoftwareBitmapPresenter8EndPaintERKN3gfx4RectE(%"class.ui::X11SoftwareBitmapPresenter"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %class.SkPixmap, align 8
  %6 = alloca %"struct.x11::Shm::PutImageRequest", align 4
  %7 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %12 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %12, i64 16, i1 false)
  %13 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %18 = bitcast %"class.gfx::Size"* %14 to i64*
  %19 = bitcast %"class.gfx::Size"* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  %21 = load i32, i32* %10, align 4
  %22 = icmp eq i32 %21, 0
  %23 = load i32, i32* %11, align 4
  %24 = icmp eq i32 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %147, label %26

26:                                               ; preds = %2
  %27 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 40, i1 false) #8
  %28 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %28, align 8
  %30 = icmp eq %"class.ui::XShmImagePool"* %29, null
  br i1 %30, label %92, label %31

31:                                               ; preds = %26
  %32 = call zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"* nonnull %29) #8
  br i1 %32, label %33, label %92

33:                                               ; preds = %31
  %34 = bitcast %"struct.x11::Shm::PutImageRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %34) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 44, i1 false)
  %35 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 1
  %39 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 2
  %42 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %28, align 8
  %43 = call dereferenceable(56) %class.SkBitmap* @_ZN2ui13XShmImagePool13CurrentBitmapEv(%"class.ui::XShmImagePool"* %42) #8
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %43, i64 0, i32 1, i32 2, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = trunc i32 %45 to i16
  store i16 %46, i16* %41, align 4
  %47 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 3
  %48 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %28, align 8
  %49 = call dereferenceable(56) %class.SkBitmap* @_ZN2ui13XShmImagePool13CurrentBitmapEv(%"class.ui::XShmImagePool"* %48) #8
  %50 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %49, i64 0, i32 1, i32 2, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %47, align 2
  %53 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 4
  %54 = load i32, i32* %8, align 4
  %55 = trunc i32 %54 to i16
  store i16 %55, i16* %53, align 4
  %56 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 5
  %57 = load i32, i32* %9, align 4
  %58 = trunc i32 %57 to i16
  store i16 %58, i16* %56, align 2
  %59 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 6
  %60 = load i32, i32* %10, align 4
  %61 = trunc i32 %60 to i16
  store i16 %61, i16* %59, align 4
  %62 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 7
  %63 = load i32, i32* %11, align 4
  %64 = trunc i32 %63 to i16
  store i16 %64, i16* %62, align 2
  %65 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 8
  store i16 %55, i16* %65, align 4
  %66 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 9
  store i16 %58, i16* %66, align 2
  %67 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 10
  %68 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %67, align 4
  %71 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 11
  store i32 2, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 12
  %73 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 5
  %74 = load i8, i8* %73, align 4, !range !5
  store i8 %74, i8* %72, align 4
  %75 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 13
  %76 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %28, align 8
  %77 = call i32 @_ZN2ui13XShmImagePool14CurrentSegmentEv(%"class.ui::XShmImagePool"* %76) #8
  store i32 %77, i32* %75, align 4
  %78 = getelementptr inbounds %"struct.x11::Shm::PutImageRequest", %"struct.x11::Shm::PutImageRequest"* %6, i64 0, i32 14
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 1
  %80 = bitcast %"class.x11::Connection"** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 128
  %83 = bitcast i8* %82 to %"class.x11::Shm"**
  %84 = load %"class.x11::Shm"*, %"class.x11::Shm"** %83, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm8PutImageERKNS0_15PutImageRequestE(%"class.x11::Shm"* %84, %"struct.x11::Shm::PutImageRequest"* nonnull dereferenceable(44) %6) #8
  %86 = icmp eq %"class.x11::Connection::FutureImpl"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %33
  %88 = bitcast %"class.x11::Connection::FutureImpl"* %85 to i8*
  call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %33, %87
  %90 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 8
  store i8 1, i8* %90, align 8
  %91 = load %"class.x11::Connection"*, %"class.x11::Connection"** %79, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %91) #8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %34) #8
  br label %136

92:                                               ; preds = %26, %31
  %93 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 9, i32 0
  %94 = load %class.SkSurface*, %class.SkSurface** %93, align 8
  %95 = icmp eq %class.SkSurface* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = call zeroext i1 @_ZN9SkSurface10peekPixelsEP8SkPixmap(%class.SkSurface* nonnull %94, %class.SkPixmap* nonnull %5) #8
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %136, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 6
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 1
  %108 = load %"class.x11::Connection"*, %"class.x11::Connection"** %107, align 8
  %109 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = load i32, i32* %8, align 4
  %112 = load i32, i32* %9, align 4
  %113 = load i32, i32* %10, align 4
  %114 = load i32, i32* %11, align 4
  %115 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 4
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = call zeroext i1 @_ZN2ui26X11SoftwareBitmapPresenter15CompositeBitmapEPN3x1110ConnectionENS1_8DrawableEiiiiiNS1_15GraphicsContextEPKv(%"class.x11::Connection"* %108, i32 %110, i32 %111, i32 %112, i32 %113, i32 %114, i32 %116, i32 %118, i8* nonnull %100)
  br i1 %119, label %120, label %122

120:                                              ; preds = %106
  %121 = load %"class.x11::Connection"*, %"class.x11::Connection"** %107, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %121) #8
  br label %136

122:                                              ; preds = %102, %106
  %123 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #8
  %124 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = load i32, i32* %8, align 4
  %131 = load i32, i32* %9, align 4
  %132 = load i32, i32* %10, align 4
  %133 = load i32, i32* %11, align 4
  call void @_ZN2ui10DrawPixmapEPN3x1110ConnectionENS0_8VisualIdENS0_8DrawableENS0_15GraphicsContextERK8SkPixmapiiiiii(%"class.x11::Connection"* %123, i32 %125, i32 %127, i32 %129, %class.SkPixmap* nonnull dereferenceable(40) %5, i32 %130, i32 %131, i32 %130, i32 %131, i32 %132, i32 %133) #8
  %134 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 1
  %135 = load %"class.x11::Connection"*, %"class.x11::Connection"** %134, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %135) #8
  br label %136

136:                                              ; preds = %98, %122, %120, %89
  %137 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %138 = load %class.SkColorSpace*, %class.SkColorSpace** %137, align 8
  %139 = icmp eq %class.SkColorSpace* %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = bitcast %class.SkColorSpace* %138 to i8*
  call void @_ZdlPv(i8* %145) #9
  br label %146

146:                                              ; preds = %136, %140, %144
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #8
  br label %147

147:                                              ; preds = %2, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN2ui13XShmImagePool13CurrentBitmapEv(%"class.ui::XShmImagePool"*) local_unnamed_addr #1

declare i32 @_ZN2ui13XShmImagePool14CurrentSegmentEv(%"class.ui::XShmImagePool"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm8PutImageERKNS0_15PutImageRequestE(%"class.x11::Shm"*, %"struct.x11::Shm::PutImageRequest"* dereferenceable(44)) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare zeroext i1 @_ZN9SkSurface10peekPixelsEP8SkPixmap(%class.SkSurface*, %class.SkPixmap*) local_unnamed_addr #1

declare void @_ZN2ui10DrawPixmapEPN3x1110ConnectionENS0_8VisualIdENS0_8DrawableENS0_15GraphicsContextERK8SkPixmapiiiiii(%"class.x11::Connection"*, i32, i32, i32, %class.SkPixmap* dereferenceable(40), i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11SoftwareBitmapPresenter13OnSwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::X11SoftwareBitmapPresenter"*, %"class.base::OnceCallback.385"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.385", align 8
  %4 = alloca %"class.base::OnceCallback.385", align 8
  %5 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 4, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %9, align 8
  %11 = icmp eq %"class.ui::XShmImagePool"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"* nonnull %10) #8
  br i1 %13, label %14, label %25

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 8
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = load %"class.ui::XShmImagePool"*, %"class.ui::XShmImagePool"** %9, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback.385", %"class.base::OnceCallback.385"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.385"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback.385"* %4 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  call void @_ZN2ui13XShmImagePool11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::XShmImagePool"* %19, %"class.base::OnceCallback.385"* nonnull %4) #8
  %24 = getelementptr inbounds %"class.base::OnceCallback.385", %"class.base::OnceCallback.385"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #8
  br label %37

25:                                               ; preds = %8, %14, %2, %12
  %26 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 10
  %27 = bitcast %"class.base::OnceCallback.385"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.base::OnceCallback.385", %"class.base::OnceCallback.385"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback.385"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback.385"* %3 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback.385", %"class.base::OnceCallback.385"* %3, i64 0, i32 0
  %33 = inttoptr i64 %30 to %"class.base::internal::BindStateBase"*
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)** %35, align 8
  tail call void %36(%"class.base::internal::BindStateBase"* %33, %"class.gfx::Size"* dereferenceable(8) %26) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %37

37:                                               ; preds = %25, %18
  %38 = getelementptr inbounds %"class.ui::X11SoftwareBitmapPresenter", %"class.ui::X11SoftwareBitmapPresenter"* %0, i64 0, i32 8
  store i8 0, i8* %38, align 8
  ret void
}

declare void @_ZN2ui13XShmImagePool11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::XShmImagePool"*, %"class.base::OnceCallback.385"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto10FreePixmapERKNS_6PixmapE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.376* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.247*, %"class.std::__1::unique_ptr.249"*) local_unnamed_addr #1

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::GetImageReply"* @_ZN3x116detail9ReadReplyINS_13GetImageReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #3

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare %"struct.x11::GetWindowAttributesReply"* @_ZN3x116detail9ReadReplyINS_24GetWindowAttributesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

declare void @_ZN2ui13XShmImagePoolC1EPN3x1110ConnectionENS1_8DrawableENS1_8VisualIdEimb(%"class.ui::XShmImagePool"*, %"class.x11::Connection"*, i32, i32, i32, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3x1116GetArrayPropertyIhEEbNS_6WindowENS_4AtomEPNSt3__16vectorIT_NS3_9allocatorIS5_EEEEPS2_mPNS_10ConnectionE(i32, i32, %"class.std::__1::vector.393"*, i32*, i64, %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.x11::Future.407", align 8
  %8 = alloca %"struct.x11::GetPropertyRequest", align 4
  %9 = bitcast %"class.x11::Future.407"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 1
  store i32 %0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 3
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.x11::GetPropertyRequest", %"struct.x11::GetPropertyRequest"* %8, i64 0, i32 5
  %17 = icmp eq i64 %4, 0
  %18 = add i64 %4, 3
  %19 = lshr i64 %18, 2
  %20 = select i1 %17, i64 4294967295, i64 %19
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %16, align 4
  %22 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"* %10, %"struct.x11::GetPropertyRequest"* nonnull dereferenceable(24) %8) #8
  %23 = getelementptr inbounds %"class.x11::Future.407", %"class.x11::Future.407"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %22, %"class.x11::Connection::FutureImpl"** %23, align 8
  %24 = call { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.407"* nonnull %7)
  %25 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %24, 0
  %26 = extractvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %24, 1
  %27 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %23, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %23, align 8
  %28 = icmp eq %"class.x11::Connection::FutureImpl"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  %30 = bitcast %"class.x11::Connection::FutureImpl"* %27 to i8*
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %6, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %32 = icmp eq %"struct.x11::GetPropertyReply"* %25, null
  br i1 %32, label %75, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %75

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %2, i64 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.393"* %2 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp ult i64 %46, %40
  %48 = inttoptr i64 %45 to i8*
  br i1 %47, label %49, label %53

49:                                               ; preds = %37
  %50 = sub i64 %40, %46
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.393"* %2, i64 %50) #8
  %51 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %2, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  br label %57

53:                                               ; preds = %37
  %54 = icmp ugt i64 %46, %40
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds i8, i8* %48, i64 %40
  store i8* %56, i8** %41, align 8
  br label %57

57:                                               ; preds = %49, %53, %55
  %58 = phi i8* [ %52, %49 ], [ %48, %53 ], [ %48, %55 ]
  %59 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 5, i32 0
  %60 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %61 = bitcast %"class.base::RefCountedMemory"* %60 to i8* (%"class.base::RefCountedMemory"*)***
  %62 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %61, align 8
  %63 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %62, align 8
  %64 = call i8* %63(%"class.base::RefCountedMemory"* %60) #8
  %65 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %59, align 8
  %66 = bitcast %"class.base::RefCountedMemory"* %65 to i64 (%"class.base::RefCountedMemory"*)***
  %67 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %67, i64 1
  %69 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %68, align 8
  %70 = call i64 %69(%"class.base::RefCountedMemory"* %65) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %64, i64 %70, i1 false)
  %71 = icmp eq i32* %3, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %3, align 4
  br label %75

75:                                               ; preds = %31, %72, %57, %33
  %76 = phi i1 [ false, %33 ], [ false, %31 ], [ true, %57 ], [ true, %72 ]
  %77 = icmp eq %"class.x11::Error"* %26, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.x11::Error"* %26 to void (%"class.x11::Error"*)***
  %80 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %80, i64 1
  %82 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %81, align 8
  call void %82(%"class.x11::Error"* nonnull %26) #8
  br label %83

83:                                               ; preds = %78, %75
  br i1 %32, label %102, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 5, i32 0
  %86 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %85, align 8
  %87 = icmp eq %"class.base::RefCountedMemory"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.248"* %94 to %"class.base::RefCountedMemory"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.248"* %94 to void (%"class.base::RefCountedMemory"*)***
  %97 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %97, i64 3
  %99 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %98, align 8
  call void %99(%"class.base::RefCountedMemory"* nonnull %95) #8
  br label %100

100:                                              ; preds = %93, %88, %84
  %101 = getelementptr inbounds %"struct.x11::GetPropertyReply", %"struct.x11::GetPropertyReply"* %25, i64 0, i32 0
  call void @_ZdlPv(i8* %101) #9
  br label %102

102:                                              ; preds = %83, %100
  ret i1 %76
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto11GetPropertyERKNS_18GetPropertyRequestE(%"class.x11::XProto"*, %"struct.x11::GetPropertyRequest"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_16GetPropertyReplyEE4SyncEv(%"class.x11::Future.407"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.407", %"class.x11::Future.407"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #8
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #8
  %23 = call %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #8
  %24 = ptrtoint %"struct.x11::GetPropertyReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #8
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetPropertyReply"*
  %47 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetPropertyReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetPropertyReply"*, %"class.x11::Error"* } %48
}

declare %"struct.x11::GetPropertyReply"* @_ZN3x116detail9ReadReplyINS_16GetPropertyReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.393"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #8
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.393"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.393"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #9
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #8
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #8
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #9
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!8 = distinct !{!8, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
