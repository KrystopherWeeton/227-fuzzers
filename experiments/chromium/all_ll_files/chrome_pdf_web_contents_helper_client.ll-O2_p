; ModuleID = '../../chrome/browser/ui/pdf/chrome_pdf_web_contents_helper_client.cc'
source_filename = "../../chrome/browser/ui/pdf/chrome_pdf_web_contents_helper_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ChromePDFWebContentsHelperClient = type { %"class.pdf::PDFWebContentsHelperClient" }
%"class.pdf::PDFWebContentsHelperClient" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.guest_view::GuestViewBase" = type { %"class.content::BrowserPluginGuestDelegate", %"class.content::WebContentsDelegate", %"class.content::WebContentsObserver", %"class.zoom::ZoomObserver", %"class.content::WebContents"*, %"class.std::__1::basic_string", %"class.content::BrowserContext"*, i32, i32, i32, i8, i8, i8, %"class.base::circular_deque", %"class.base::WeakPtr", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.gfx::Size", %"class.content::GuestHost"*, i8, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i8, %"class.base::WeakPtrFactory.74" }
%"class.content::BrowserPluginGuestDelegate" = type { i32 (...)** }
%"class.content::WebContentsDelegate" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.zoom::ZoomObserver" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.27"*, i64 }
%"class.std::__1::unique_ptr.27" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"union.absl::variant_internal::DestructibleUnionImpl.33" }
%"union.absl::variant_internal::DestructibleUnionImpl.33" = type { %"union.absl::variant_internal::DestructibleUnionImpl.34" }
%"union.absl::variant_internal::DestructibleUnionImpl.34" = type { %"union.absl::variant_internal::DestructibleUnionImpl.35" }
%"union.absl::variant_internal::DestructibleUnionImpl.35" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.guest_view::GuestViewBase::OwnerContentsObserver"* }
%"class.guest_view::GuestViewBase::OwnerContentsObserver" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.guest_view::GuestViewBase::OpenerLifetimeObserver"* }
%"class.guest_view::GuestViewBase::OpenerLifetimeObserver" = type opaque
%"class.content::GuestHost" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtrFactory.74" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%class.CoreTabHelper = type { %"class.content::WebContentsObserver", %"class.content::WebContentsUserData", %"class.base::TimeTicks", i32, %"class.base::WeakPtrFactory" }
%"class.content::WebContentsUserData" = type { %"class.base::SupportsUserData::Data" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.extensions::MimeHandlerViewGuest" = type { %"class.guest_view::GuestView", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"struct.content::GlobalFrameRoutingId", i32, i8, i8, i8, %class.GURL, %"class.std::__1::basic_string", i8, %"class.mojo::PendingRemote.304", %"class.base::WeakPtrFactory.305" }
%"class.guest_view::GuestView" = type { %"class.guest_view::GuestViewBase" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.extensions::MimeHandlerViewGuestDelegate"* }
%"class.extensions::MimeHandlerViewGuestDelegate" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.extensions::StreamContainer"* }
%"class.extensions::StreamContainer" = type { i8, i32, %class.GURL, %"class.std::__1::basic_string", %"class.mojo::StructPtr", %"class.std::__1::basic_string", %class.GURL, %class.GURL, %class.scoped_refptr.99, %"class.base::WeakPtrFactory.300" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::mojom::TransferrableURLLoader"* }
%"class.blink::mojom::TransferrableURLLoader" = type { %class.GURL, %"class.mojo::PendingRemote", %"class.mojo::PendingReceiver", %"class.mojo::StructPtr.94" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.306", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.309, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.311", [4 x i8] }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.308", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.309 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.310" }>
%"class.base::RefCountedThreadSafe.310" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i32 }
%"class.mojo::StructPtr.94" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.99, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.108", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.122", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional", %"class.std::__1::vector.131", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.166", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.176", %"class.absl::optional.278", %"class.absl::optional.289", %"class.std::__1::vector.131", %class.GURL, i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.98" }
%"class.base::time_internal::TimeBase.98" = type { i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.108" = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.112", %"class.std::__1::vector.112", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.114" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.mojo::InlinedStructPtr"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.128 }
%union.anon.128 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.129, %class.scoped_refptr.129, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.149", %"class.std::__1::basic_string", %"class.std::__1::vector.157", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.129 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.130", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.142" }
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.131", %"class.std::__1::vector.131", %"class.std::__1::vector.131", %"class.std::__1::vector.131" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::unique_ptr.138"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.152" }
%"class.net::HashValue" = type { i32, %union.anon.151 }
%union.anon.151 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.161" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.159, i32, [4 x i8] }>
%class.scoped_refptr.159 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.160", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.160" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.166" = type { %"class.absl::optional_internal::optional_data.167" }
%"class.absl::optional_internal::optional_data.167" = type { %"class.absl::optional_internal::optional_data_base.168" }
%"class.absl::optional_internal::optional_data_base.168" = type { %"class.absl::optional_internal::optional_data_dtor_base.169" }
%"class.absl::optional_internal::optional_data_dtor_base.169" = type { i8, %union.anon.170 }
%union.anon.170 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.171" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, %union.anon.175 }
%union.anon.175 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::StructPtr.176" = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.180", %"class.mojo::StructPtr.230", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.242", %"class.base::TimeDelta", %"class.absl::optional.242", i32, [4 x i8], %"class.std::__1::vector.254", %"class.mojo::StructPtr.268", i8, [7 x i8] }>
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.mojo::StructPtr.182"*, %"class.mojo::StructPtr.182"*, %"class.std::__1::__compressed_pair.225" }
%"class.mojo::StructPtr.182" = type { %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.186", %"class.base::flat_map.193", %"class.base::flat_map.203", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.213", i8, %"class.std::__1::vector.131", i32, %"class.mojo::StructPtr.215", %"class.std::__1::vector.131" }
%"class.mojo::StructPtr.186" = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.193" = type { %"class.base::internal::flat_tree.194" }
%"class.base::internal::flat_tree.194" = type { %"class.std::__1::vector.195" }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::pair.197" = type opaque
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::pair.197"* }
%"class.base::flat_map.203" = type { %"class.base::internal::flat_tree.204" }
%"class.base::internal::flat_tree.204" = type { %"class.std::__1::vector.205" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.std::__1::pair.207"*, %"struct.std::__1::pair.207"*, %"class.std::__1::__compressed_pair.208" }
%"struct.std::__1::pair.207" = type opaque
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::pair.207"* }
%"class.mojo::InlinedStructPtr.213" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.215" = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.131", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.mojo::StructPtr.182"* }
%"class.mojo::StructPtr.230" = type { %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.237", i32, %"class.absl::optional.237" }
%"class.absl::optional.237" = type { %"class.absl::optional_internal::optional_data.238" }
%"class.absl::optional_internal::optional_data.238" = type { %"class.absl::optional_internal::optional_data_base.239" }
%"class.absl::optional_internal::optional_data_base.239" = type { %"class.absl::optional_internal::optional_data_dtor_base.240" }
%"class.absl::optional_internal::optional_data_dtor_base.240" = type { i8, %union.anon.241 }
%union.anon.241 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.237", i32, %"class.absl::optional.237" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.242" = type { %"class.absl::optional_internal::optional_data.243" }
%"class.absl::optional_internal::optional_data.243" = type { %"class.absl::optional_internal::optional_data_base.244" }
%"class.absl::optional_internal::optional_data_base.244" = type { %"class.absl::optional_internal::optional_data_dtor_base.245" }
%"class.absl::optional_internal::optional_data_dtor_base.245" = type { i8, %union.anon.246 }
%union.anon.246 = type { %"class.std::__1::vector.247" }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { i32*, i32*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { i32* }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.mojo::StructPtr.256"*, %"class.mojo::StructPtr.256"*, %"class.std::__1::__compressed_pair.263" }
%"class.mojo::StructPtr.256" = type { %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.237" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.mojo::StructPtr.256"* }
%"class.mojo::StructPtr.268" = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.131"* }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.283" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.131", %"class.absl::optional.237", %"class.std::__1::vector.131", %"class.std::__1::vector.131" }
%"class.absl::optional.289" = type { %"class.absl::optional_internal::optional_data.290" }
%"class.absl::optional_internal::optional_data.290" = type { %"class.absl::optional_internal::optional_data_base.291" }
%"class.absl::optional_internal::optional_data_base.291" = type { %"class.absl::optional_internal::optional_data_dtor_base.292" }
%"class.absl::optional_internal::optional_data_dtor_base.292" = type { i8, %union.anon.293 }
%union.anon.293 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::basic_string"* }
%class.scoped_refptr.99 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.100", %"class.std::__1::vector.101", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.100" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.103" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.base::WeakPtrFactory.300" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.84" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.mojo::PendingRemote.304" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::WeakPtrFactory.305" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZTV32ChromePDFWebContentsHelperClient = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*)* @_ZN32ChromePDFWebContentsHelperClientD2Ev to i8*), i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*)* @_ZN32ChromePDFWebContentsHelperClientD0Ev to i8*), i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*, %"class.content::WebContents"*, i32)* @_ZN32ChromePDFWebContentsHelperClient25UpdateContentRestrictionsEPN7content11WebContentsEi to i8*), i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*, %"class.content::WebContents"*)* @_ZN32ChromePDFWebContentsHelperClient26OnPDFHasUnsupportedFeatureEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*, %"class.content::WebContents"*)* @_ZN32ChromePDFWebContentsHelperClient9OnSaveURLEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ChromePDFWebContentsHelperClient*, %"class.content::WebContents"*, i1)* @_ZN32ChromePDFWebContentsHelperClient16SetPluginCanSaveEPN7content11WebContentsEb to i8*)] }, align 8
@_ZN10guest_view15kInstanceIDNoneE = external local_unnamed_addr constant i32, align 4
@_ZN10extensions20MimeHandlerViewGuest4TypeE = external constant [0 x i8], align 1
@_ZN13CoreTabHelper12kUserDataKeyE = external constant i32, align 4

@_ZN32ChromePDFWebContentsHelperClientC1Ev = hidden unnamed_addr alias void (%class.ChromePDFWebContentsHelperClient*), void (%class.ChromePDFWebContentsHelperClient*)* @_ZN32ChromePDFWebContentsHelperClientC2Ev
@_ZN32ChromePDFWebContentsHelperClientD1Ev = hidden unnamed_addr alias void (%class.ChromePDFWebContentsHelperClient*), void (%class.ChromePDFWebContentsHelperClient*)* @_ZN32ChromePDFWebContentsHelperClientD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN32ChromePDFWebContentsHelperClientC2Ev(%class.ChromePDFWebContentsHelperClient* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ChromePDFWebContentsHelperClient, %class.ChromePDFWebContentsHelperClient* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV32ChromePDFWebContentsHelperClient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClientD2Ev(%class.ChromePDFWebContentsHelperClient* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClientD0Ev(%class.ChromePDFWebContentsHelperClient*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.ChromePDFWebContentsHelperClient* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClient25UpdateContentRestrictionsEPN7content11WebContentsEi(%class.ChromePDFWebContentsHelperClient* nocapture readnone, %"class.content::WebContents"*, i32) unnamed_addr #2 align 2 {
  %4 = tail call %"class.guest_view::GuestViewBase"* @_ZN10guest_view13GuestViewBase15FromWebContentsEPKN7content11WebContentsE(%"class.content::WebContents"* %1) #7
  %5 = icmp eq %"class.guest_view::GuestViewBase"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.guest_view::GuestViewBase"* %4 to i8* (%"class.guest_view::GuestViewBase"*)***
  %8 = load i8* (%"class.guest_view::GuestViewBase"*)**, i8* (%"class.guest_view::GuestViewBase"*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.guest_view::GuestViewBase"*)*, i8* (%"class.guest_view::GuestViewBase"*)** %8, i64 5
  %10 = load i8* (%"class.guest_view::GuestViewBase"*)*, i8* (%"class.guest_view::GuestViewBase"*)** %9, align 8
  %11 = tail call i8* %10(%"class.guest_view::GuestViewBase"* nonnull %4) #7
  %12 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions20MimeHandlerViewGuest4TypeE, i64 0, i64 0)) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.guest_view::GuestViewBase", %"class.guest_view::GuestViewBase"* %4, i64 0, i32 9
  %16 = load i32, i32* %15, align 8
  %17 = load i32, i32* @_ZN10guest_view15kInstanceIDNoneE, align 4
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %43, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.guest_view::GuestViewBase", %"class.guest_view::GuestViewBase"* %4, i64 0, i32 10
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.guest_view::GuestViewBase", %"class.guest_view::GuestViewBase"* %4, i64 0, i32 12
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.guest_view::GuestViewBase", %"class.guest_view::GuestViewBase"* %4, i64 0, i32 4
  %29 = load %"class.content::WebContents"*, %"class.content::WebContents"** %28, align 8
  br label %30

30:                                               ; preds = %3, %6, %27
  %31 = phi %"class.content::WebContents"* [ %29, %27 ], [ %1, %3 ], [ %1, %6 ]
  %32 = icmp eq %"class.content::WebContents"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.content::WebContents", %"class.content::WebContents"* %31, i64 0, i32 1
  %35 = bitcast %"class.base::SupportsUserData.base"* %34 to %"class.base::SupportsUserData"*
  %36 = tail call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* %35, i8* bitcast (i32* @_ZN13CoreTabHelper12kUserDataKeyE to i8*)) #7
  %37 = icmp eq %"class.base::SupportsUserData::Data"* %36, null
  %38 = getelementptr inbounds %"class.base::SupportsUserData::Data", %"class.base::SupportsUserData::Data"* %36, i64 -2
  %39 = icmp eq %"class.base::SupportsUserData::Data"* %38, null
  %40 = or i1 %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.base::SupportsUserData::Data"* %38 to %class.CoreTabHelper*
  tail call void @_ZN13CoreTabHelper25UpdateContentRestrictionsEi(%class.CoreTabHelper* nonnull %42, i32 %2) #7
  br label %43

43:                                               ; preds = %14, %19, %23, %41, %33, %30
  ret void
}

declare void @_ZN13CoreTabHelper25UpdateContentRestrictionsEi(%class.CoreTabHelper*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClient26OnPDFHasUnsupportedFeatureEPN7content11WebContentsE(%class.ChromePDFWebContentsHelperClient* nocapture, %"class.content::WebContents"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClient9OnSaveURLEPN7content11WebContentsE(%class.ChromePDFWebContentsHelperClient* nocapture readnone, %"class.content::WebContents"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @_Z20RecordDownloadSource20ChromeDownloadSource(i32 5) #7
  ret void
}

declare void @_Z20RecordDownloadSource20ChromeDownloadSource(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32ChromePDFWebContentsHelperClient16SetPluginCanSaveEPN7content11WebContentsEb(%class.ChromePDFWebContentsHelperClient* nocapture readnone, %"class.content::WebContents"*, i1 zeroext) unnamed_addr #2 align 2 {
  %4 = tail call %"class.guest_view::GuestViewBase"* @_ZN10guest_view13GuestViewBase15FromWebContentsEPKN7content11WebContentsE(%"class.content::WebContents"* %1) #7
  %5 = icmp eq %"class.guest_view::GuestViewBase"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.guest_view::GuestViewBase"* %4 to i8* (%"class.guest_view::GuestViewBase"*)***
  %8 = load i8* (%"class.guest_view::GuestViewBase"*)**, i8* (%"class.guest_view::GuestViewBase"*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.guest_view::GuestViewBase"*)*, i8* (%"class.guest_view::GuestViewBase"*)** %8, i64 5
  %10 = load i8* (%"class.guest_view::GuestViewBase"*)*, i8* (%"class.guest_view::GuestViewBase"*)** %9, align 8
  %11 = tail call i8* %10(%"class.guest_view::GuestViewBase"* nonnull %4) #7
  %12 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions20MimeHandlerViewGuest4TypeE, i64 0, i64 0)) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = bitcast %"class.guest_view::GuestViewBase"* %4 to %"class.extensions::MimeHandlerViewGuest"*
  %16 = zext i1 %2 to i8
  %17 = getelementptr inbounds %"class.extensions::MimeHandlerViewGuest", %"class.extensions::MimeHandlerViewGuest"* %15, i64 0, i32 7
  store i8 %16, i8* %17, align 2
  br label %18

18:                                               ; preds = %6, %3, %14
  ret void
}

declare %"class.guest_view::GuestViewBase"* @_ZN10guest_view13GuestViewBase15FromWebContentsEPKN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"*, i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
