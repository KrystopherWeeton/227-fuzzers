; ModuleID = '../../gpu/command_buffer/client/cmd_buffer_helper.cc'
source_filename = "../../gpu/command_buffer/client/cmd_buffer_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"struct.gpu::CommandBuffer::State" = type { i32, i32, i64, i32, i32, i32, i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.13", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.24" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::map.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.27 }
%union.anon.27 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.28" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr.45", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN3gpu19CommandBufferHelperE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::CommandBufferHelper"*)* @_ZN3gpu19CommandBufferHelperD2Ev to i8*), i8* bitcast (void (%"class.gpu::CommandBufferHelper"*)* @_ZN3gpu19CommandBufferHelperD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [53 x i8] c"../../gpu/command_buffer/client/cmd_buffer_helper.cc\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"ContextResult::kFatalFailure: \00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"CommandBufferHelper::AllocateRingBuffer() failed\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [27 x i8] c"CommandBufferHelper::Flush\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CommandBufferHelper::Finish\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"CommandBufferHelper::InsertToken(wrapped)\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"CommandBufferHelper::WaitForAvailableEntries\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"CommandBufferHelper::WaitForAvailableEntries1\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"gpu/command_buffer_memory/buffer_%d\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"free_size\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu19CommandBufferHelperC1EPNS_13CommandBufferE = hidden unnamed_addr alias void (%"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBuffer"*), void (%"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBuffer"*)* @_ZN3gpu19CommandBufferHelperC2EPNS_13CommandBufferE
@_ZN3gpu19CommandBufferHelperD1Ev = hidden unnamed_addr alias void (%"class.gpu::CommandBufferHelper"*), void (%"class.gpu::CommandBufferHelper"*)* @_ZN3gpu19CommandBufferHelperD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu19CommandBufferHelperC2EPNS_13CommandBufferE(%"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBuffer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gpu19CommandBufferHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  store %"class.gpu::CommandBuffer"* %1, %"class.gpu::CommandBuffer"** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 15
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 16
  %9 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 49, i1 false)
  store i8 1, i8* %8, align 4
  %10 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  store i8 1, i8* %11, align 2
  %12 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper19SetAutomaticFlushesEb(%"class.gpu::CommandBufferHelper"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  store i8 %3, i8* %4, align 2
  %5 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %6 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %5, align 8
  %7 = icmp eq %"class.gpu::Buffer"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %9, align 4
  br label %53

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = xor i32 %14, -1
  %18 = add i32 %12, %17
  br label %27

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = sub i32 0, %14
  %23 = icmp eq i32 %12, 0
  %24 = zext i1 %23 to i32
  %25 = sub i32 %22, %24
  %26 = add i32 %25, %21
  br label %27

27:                                               ; preds = %19, %16
  %28 = phi i32 [ %26, %19 ], [ %18, %16 ]
  %29 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %28, i32* %29, align 4
  br i1 %1, label %30, label %53

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %12, %34
  %36 = select i1 %35, i32 16, i32 2
  %37 = sdiv i32 %32, %36
  %38 = add nsw i32 %32, %14
  %39 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 %38, %40
  %42 = srem i32 %41, %32
  %43 = icmp slt i32 %42, 1
  %44 = icmp sgt i32 %37, %42
  %45 = or i1 %43, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %30
  store i32 0, i32* %29, align 4
  br label %53

47:                                               ; preds = %30
  %48 = sub nsw i32 %37, %42
  %49 = icmp sgt i32 %48, 0
  %50 = select i1 %49, i32 %48, i32 0
  %51 = icmp sgt i32 %28, %50
  %52 = select i1 %51, i32 %50, i32 %28
  store i32 %52, i32* %29, align 4
  br label %53

53:                                               ; preds = %27, %8, %46, %47
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper20CalcImmediateEntriesEi(%"class.gpu::CommandBufferHelper"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %3, align 8
  %5 = icmp eq %"class.gpu::Buffer"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %7, align 4
  br label %54

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = xor i32 %12, -1
  %16 = add i32 %10, %15
  br label %25

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = sub i32 0, %12
  %21 = icmp eq i32 %10, 0
  %22 = zext i1 %21 to i32
  %23 = sub i32 %20, %22
  %24 = add i32 %23, %19
  br label %25

25:                                               ; preds = %17, %14
  %26 = phi i32 [ %24, %17 ], [ %16, %14 ]
  %27 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %29 = load i8, i8* %28, align 2, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %10, %35
  %37 = select i1 %36, i32 16, i32 2
  %38 = sdiv i32 %33, %37
  %39 = add nsw i32 %33, %12
  %40 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %39, %41
  %43 = srem i32 %42, %33
  %44 = icmp slt i32 %43, 1
  %45 = icmp sgt i32 %38, %43
  %46 = or i1 %44, %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %31
  store i32 0, i32* %27, align 4
  br label %54

48:                                               ; preds = %31
  %49 = sub nsw i32 %38, %43
  %50 = icmp slt i32 %49, %1
  %51 = select i1 %50, i32 %1, i32 %49
  %52 = icmp sgt i32 %26, %51
  %53 = select i1 %52, i32 %51, i32 %26
  store i32 %53, i32* %27, align 4
  br label %54

54:                                               ; preds = %25, %48, %47, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper13IsContextLostEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = bitcast %"struct.gpu::CommandBuffer::State"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %9 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %8, align 8
  %10 = bitcast %"class.gpu::CommandBuffer"* %9 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)***
  %11 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %11, i64 2
  %13 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %12, align 8
  call void %13(%"struct.gpu::CommandBuffer::State"* nonnull sret %2, %"class.gpu::CommandBuffer"* %9) #9
  %14 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %16 [
    i32 7, label %17
    i32 0, label %17
    i32 8, label %17
  ]

16:                                               ; preds = %6
  br label %17

17:                                               ; preds = %6, %6, %6, %16
  %18 = phi i8 [ 0, %6 ], [ 1, %16 ], [ 0, %6 ], [ 0, %6 ]
  store i8 %18, i8* %3, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi i8 [ 1, %1 ], [ %18, %17 ]
  %21 = icmp ne i8 %20, 0
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper18AllocateRingBufferEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 16
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %86, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %7, align 8
  %9 = icmp eq %"class.gpu::Buffer"* %8, null
  br i1 %9, label %10, label %86

10:                                               ; preds = %6
  %11 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 -1, i32* %2, align 4
  %12 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %13 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %12, align 8
  %14 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.gpu::CommandBuffer"* %13 to %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)***
  %17 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*** %16, align 8
  %18 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %17, i64 8
  %19 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %18, align 8
  %20 = call %"class.gpu::Buffer"* %19(%"class.gpu::CommandBuffer"* %13, i32 %15, i32* nonnull %2, i8 signext 0) #9
  %21 = load i32, i32* %2, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %75

23:                                               ; preds = %10
  store i8 0, i8* %3, align 4
  %24 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 1, i8* %24, align 1
  %25 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %7, align 8
  %26 = icmp eq %"class.gpu::Buffer"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %28, align 4
  br label %76

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = xor i32 %33, -1
  %37 = add i32 %31, %36
  br label %46

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = sub i32 0, %33
  %42 = icmp eq i32 %31, 0
  %43 = zext i1 %42 to i32
  %44 = sub i32 %41, %43
  %45 = add i32 %44, %40
  br label %46

46:                                               ; preds = %38, %35
  %47 = phi i32 [ %45, %38 ], [ %37, %35 ]
  %48 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %50 = load i8, i8* %49, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %31, %56
  %58 = select i1 %57, i32 16, i32 2
  %59 = sdiv i32 %54, %58
  %60 = add nsw i32 %54, %33
  %61 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %60, %62
  %64 = srem i32 %63, %54
  %65 = icmp slt i32 %64, 1
  %66 = icmp sgt i32 %59, %64
  %67 = or i1 %65, %66
  br i1 %67, label %69, label %68

68:                                               ; preds = %52
  store i32 0, i32* %48, align 4
  br label %76

69:                                               ; preds = %52
  %70 = sub nsw i32 %59, %64
  %71 = icmp sgt i32 %70, 0
  %72 = select i1 %71, i32 %70, i32 0
  %73 = icmp sgt i32 %47, %72
  %74 = select i1 %73, i32 %72, i32 %47
  store i32 %74, i32* %48, align 4
  br label %76

75:                                               ; preds = %10
  call void @_ZN3gpu19CommandBufferHelper12SetGetBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::CommandBufferHelper"* %0, i32 %21, %"class.gpu::Buffer"* %20)
  br label %84

76:                                               ; preds = %69, %68, %46, %27
  %77 = icmp eq %"class.gpu::Buffer"* %20, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %20) #9
  %83 = bitcast %"class.gpu::Buffer"* %20 to i8*
  call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %75, %76, %78, %82
  %85 = phi i1 [ true, %75 ], [ false, %76 ], [ false, %78 ], [ false, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  br label %86

86:                                               ; preds = %6, %1, %84
  %87 = phi i1 [ %85, %84 ], [ false, %1 ], [ true, %6 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper12SetGetBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::CommandBufferHelper"*, i32, %"class.gpu::Buffer"*) local_unnamed_addr #2 align 2 {
  %4 = ptrtoint %"class.gpu::Buffer"* %2 to i64
  %5 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %6 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %5, align 8
  %7 = bitcast %"class.gpu::CommandBuffer"* %6 to void (%"class.gpu::CommandBuffer"*, i32)***
  %8 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %8, i64 7
  %10 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %9, align 8
  tail call void %10(%"class.gpu::CommandBuffer"* %6, i32 %1) #9
  %11 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4
  %12 = bitcast %class.scoped_refptr* %11 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %14 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %13, align 8
  store i64 %4, i64* %12, align 8
  %15 = icmp eq %"class.gpu::Buffer"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %14) #9
  %21 = bitcast %"class.gpu::Buffer"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %20, %16
  %23 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %13, align 8
  br label %24

24:                                               ; preds = %22, %3
  %25 = phi %"class.gpu::Buffer"* [ %23, %22 ], [ %2, %3 ]
  %26 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 2
  store i32 %1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = icmp eq %"class.gpu::Buffer"* %25, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 5
  store %"union.gpu::CommandBufferEntry"* null, %"union.gpu::CommandBufferEntry"** %32, align 8
  br label %42

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %25, i64 0, i32 3
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 5
  %38 = bitcast %"union.gpu::CommandBufferEntry"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %40, 2
  br label %42

42:                                               ; preds = %31, %33
  %43 = phi i32 [ %41, %33 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  store i8 1, i8* %49, align 4
  %50 = icmp eq %"class.gpu::Buffer"* %25, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %52, align 4
  br label %63

53:                                               ; preds = %42
  %54 = add nsw i32 %43, -1
  %55 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %53
  %60 = lshr i32 %43, 4
  %61 = icmp sgt i32 %54, %60
  %62 = select i1 %61, i32 %60, i32 %54
  store i32 %62, i32* %55, align 4
  br label %63

63:                                               ; preds = %59, %53, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper14FreeRingBufferEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %2, align 8
  %4 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  tail call void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* %0)
  %6 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %7 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = bitcast %"class.gpu::CommandBuffer"* %7 to void (%"class.gpu::CommandBuffer"*, i32)***
  %11 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %11, i64 9
  %13 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %12, align 8
  tail call void %13(%"class.gpu::CommandBuffer"* %7, i32 %9) #9
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0)
  tail call void @_ZN3gpu19CommandBufferHelper12SetGetBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::CommandBufferHelper"* %0, i32 -1, %"class.gpu::Buffer"* null)
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = phi i32 [ 0, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %11 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %10, align 8
  %12 = icmp eq %"class.gpu::Buffer"* %11, null
  br i1 %12, label %70, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  store i32 %9, i32* %14, align 4
  %15 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %16 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %15, align 8
  %17 = bitcast %"class.gpu::CommandBuffer"* %16 to void (%"class.gpu::CommandBuffer"*, i32)***
  %18 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %18, i64 4
  %20 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %19, align 8
  tail call void %20(%"class.gpu::CommandBuffer"* %16, i32 %9) #9
  %21 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 23
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 8
  %24 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %10, align 8
  %25 = icmp eq %"class.gpu::Buffer"* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %27, align 4
  br label %70

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %2, align 4
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = xor i32 %31, -1
  %35 = add i32 %30, %34
  br label %43

36:                                               ; preds = %28
  %37 = load i32, i32* %4, align 8
  %38 = sub i32 0, %31
  %39 = icmp eq i32 %30, 0
  %40 = zext i1 %39 to i32
  %41 = sub i32 %38, %40
  %42 = add i32 %41, %37
  br label %43

43:                                               ; preds = %36, %33
  %44 = phi i32 [ %42, %36 ], [ %35, %33 ]
  %45 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %47 = load i8, i8* %46, align 2, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %70, label %49

49:                                               ; preds = %43
  %50 = load i32, i32* %4, align 8
  %51 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %30, %52
  %54 = select i1 %53, i32 16, i32 2
  %55 = sdiv i32 %50, %54
  %56 = add nsw i32 %50, %31
  %57 = load i32, i32* %14, align 4
  %58 = sub i32 %56, %57
  %59 = srem i32 %58, %50
  %60 = icmp slt i32 %59, 1
  %61 = icmp sgt i32 %55, %59
  %62 = or i1 %60, %61
  br i1 %62, label %64, label %63

63:                                               ; preds = %49
  store i32 0, i32* %45, align 4
  br label %70

64:                                               ; preds = %49
  %65 = sub nsw i32 %55, %59
  %66 = icmp sgt i32 %65, 0
  %67 = select i1 %66, i32 %65, i32 0
  %68 = icmp sgt i32 %44, %67
  %69 = select i1 %68, i32 %67, i32 %44
  store i32 %69, i32* %45, align 4
  br label %70

70:                                               ; preds = %8, %64, %63, %43, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %12
  store i32 0, i32* %16, align 4
  br label %22

22:                                               ; preds = %21, %12
  %23 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %24 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %23, align 8
  %25 = icmp eq %"class.gpu::Buffer"* %24, null
  br i1 %25, label %86, label %26

26:                                               ; preds = %22
  %27 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 22, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = load i32, i32* %16, align 4
  %30 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %33 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %32, align 8
  %34 = bitcast %"class.gpu::CommandBuffer"* %33 to void (%"class.gpu::CommandBuffer"*, i32)***
  %35 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %35, i64 3
  %37 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %36, align 8
  call void %37(%"class.gpu::CommandBuffer"* %33, i32 %29) #9
  %38 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 23
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  %41 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %23, align 8
  %42 = icmp eq %"class.gpu::Buffer"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %26
  %44 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %44, align 4
  br label %86

45:                                               ; preds = %26
  %46 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %16, align 4
  %49 = icmp sgt i32 %47, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = xor i32 %48, -1
  %52 = add i32 %47, %51
  br label %60

53:                                               ; preds = %45
  %54 = load i32, i32* %18, align 8
  %55 = sub i32 0, %48
  %56 = icmp eq i32 %47, 0
  %57 = zext i1 %56 to i32
  %58 = sub i32 %55, %57
  %59 = add i32 %58, %54
  br label %60

60:                                               ; preds = %53, %50
  %61 = phi i32 [ %59, %53 ], [ %52, %50 ]
  %62 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %86, label %66

66:                                               ; preds = %60
  %67 = load i32, i32* %18, align 8
  %68 = load i32, i32* %30, align 8
  %69 = icmp eq i32 %47, %68
  %70 = select i1 %69, i32 16, i32 2
  %71 = sdiv i32 %67, %70
  %72 = add nsw i32 %67, %48
  %73 = load i32, i32* %31, align 4
  %74 = sub i32 %72, %73
  %75 = srem i32 %74, %67
  %76 = icmp slt i32 %75, 1
  %77 = icmp sgt i32 %71, %75
  %78 = or i1 %76, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %66
  store i32 0, i32* %62, align 4
  br label %86

80:                                               ; preds = %66
  %81 = sub nsw i32 %71, %75
  %82 = icmp sgt i32 %81, 0
  %83 = select i1 %82, i32 %81, i32 0
  %84 = icmp sgt i32 %61, %83
  %85 = select i1 %84, i32 %83, i32 %61
  store i32 %85, i32* %62, align 4
  br label %86

86:                                               ; preds = %22, %80, %79, %60, %43
  %87 = icmp eq i8* %15, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = load i8, i8* %15, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #9
  br label %92

92:                                               ; preds = %86, %88, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu19CommandBufferHelper10InitializeEj(%"class.gpu::CommandBufferHelper"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 3
  store i32 %1, i32* %4, align 4
  %5 = tail call zeroext i1 @_ZN3gpu19CommandBufferHelper18AllocateRingBufferEv(%"class.gpu::CommandBufferHelper"* %0)
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %7, label %8, label %14

8:                                                ; preds = %6
  %9 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %9) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 141, i32 2) #9
  %10 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 30) #9
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i64 48) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %9) #9
  br label %14

14:                                               ; preds = %8, %6, %2
  %15 = phi i32 [ 0, %2 ], [ 2, %6 ], [ 2, %8 ]
  ret i32 %15
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelperD2Ev(%"class.gpu::CommandBufferHelper"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gpu19CommandBufferHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %3, align 8
  %5 = icmp eq %"class.gpu::Buffer"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  tail call void @_ZN3gpu19CommandBufferHelper15OrderingBarrierEv(%"class.gpu::CommandBufferHelper"* %0) #9
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %8 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.gpu::CommandBuffer"* %8 to void (%"class.gpu::CommandBuffer"*, i32)***
  %12 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %12, i64 9
  %14 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %13, align 8
  tail call void %14(%"class.gpu::CommandBuffer"* %8, i32 %10) #9
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  tail call void @_ZN3gpu19CommandBufferHelper12SetGetBufferEi13scoped_refptrINS_6BufferEE(%"class.gpu::CommandBufferHelper"* %0, i32 -1, %"class.gpu::Buffer"* null) #9
  %15 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %3, align 8
  %16 = bitcast %"class.gpu::Buffer"* %15 to i8*
  %17 = icmp eq %"class.gpu::Buffer"* %15, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %15) #9
  tail call void @_ZdlPv(i8* %16) #10
  br label %23

23:                                               ; preds = %1, %6, %18, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelperD0Ev(%"class.gpu::CommandBufferHelper"*) unnamed_addr #2 align 2 {
  tail call void @_ZN3gpu19CommandBufferHelperD2Ev(%"class.gpu::CommandBufferHelper"* %0) #9
  %2 = bitcast %"class.gpu::CommandBufferHelper"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper17UpdateCachedStateERKNS_13CommandBuffer5StateE(%"class.gpu::CommandBufferHelper"* nocapture, %"struct.gpu::CommandBuffer::State"* nocapture readonly dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %1, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %4, %6
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 4
  %10 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = select i1 %7, i32 0, i32 %11
  %13 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %19 [
    i32 7, label %20
    i32 0, label %20
    i32 8, label %20
  ]

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %2, %2, %2, %19
  %21 = phi i8 [ 0, %2 ], [ 1, %19 ], [ 0, %2 ], [ 0, %2 ]
  %22 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %21, i8* %22, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper23WaitForGetOffsetInRangeEii(%"class.gpu::CommandBufferHelper"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %5 = bitcast %"struct.gpu::CommandBuffer::State"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 6
  %10 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %11 = bitcast %"struct.gpu::CommandBuffer::State"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %10, align 8
  %13 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %"class.gpu::CommandBuffer"* %12 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)***
  %16 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %16, i64 6
  %18 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %17, align 8
  call void %18(%"struct.gpu::CommandBuffer::State"* nonnull sret %4, %"class.gpu::CommandBuffer"* %12, i32 %14, i32 %1, i32 %2) #9
  %19 = load i32, i32* %9, align 4
  %20 = load i32, i32* %13, align 8
  %21 = icmp ne i32 %19, %20
  %22 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 4
  %24 = load i32, i32* %6, align 8
  %25 = select i1 %21, i32 0, i32 %24
  %26 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %25, i32* %26, align 4
  %27 = load i32, i32* %7, align 4
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %27, i32* %28, align 8
  %29 = load i32, i32* %8, align 8
  switch i32 %29, label %30 [
    i32 7, label %31
    i32 0, label %31
    i32 8, label %31
  ]

30:                                               ; preds = %3
  br label %31

31:                                               ; preds = %3, %3, %3, %30
  %32 = phi i8 [ 0, %3 ], [ 1, %30 ], [ 0, %3 ], [ 0, %3 ]
  %33 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i8 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret i1 %34
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper9FlushLazyEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %3, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %7, %1
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0)
  br label %12

12:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper18PeriodicFlushCheckEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 22, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = sub nsw i64 %2, %4
  %6 = icmp sgt i64 %5, 500
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0)
  br label %8

8:                                                ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper6FinishEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !3

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br label %115

30:                                               ; preds = %22, %13
  %31 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %18, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %18, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %34, %30
  call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  %39 = load i32, i32* %17, align 4
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i32 [ %18, %34 ], [ %39, %38 ]
  %42 = bitcast %"struct.gpu::CommandBuffer::State"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 6
  %47 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false) #9
  %48 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %47, align 8
  %49 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %50 = load i32, i32* %49, align 8
  %51 = bitcast %"class.gpu::CommandBuffer"* %48 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)***
  %52 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %52, i64 6
  %54 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %53, align 8
  call void %54(%"struct.gpu::CommandBuffer::State"* nonnull sret %2, %"class.gpu::CommandBuffer"* %48, i32 %50, i32 %41, i32 %41) #9
  %55 = load i32, i32* %46, align 4
  %56 = load i32, i32* %49, align 8
  %57 = icmp ne i32 %55, %56
  %58 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %59 = zext i1 %57 to i8
  store i8 %59, i8* %58, align 4
  %60 = load i32, i32* %43, align 8
  %61 = select i1 %57, i32 0, i32 %60
  store i32 %61, i32* %19, align 4
  %62 = load i32, i32* %44, align 4
  %63 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %62, i32* %63, align 8
  %64 = load i32, i32* %45, align 8
  switch i32 %64, label %65 [
    i32 7, label %67
    i32 0, label %67
    i32 8, label %67
  ]

65:                                               ; preds = %40
  %66 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 1, i8* %66, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  br label %115

67:                                               ; preds = %40, %40, %40
  %68 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 0, i8* %68, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #9
  %69 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %70 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %69, align 8
  %71 = icmp eq %"class.gpu::Buffer"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %73, align 4
  br label %115

74:                                               ; preds = %67
  %75 = load i32, i32* %17, align 4
  %76 = icmp sgt i32 %61, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = xor i32 %75, -1
  %79 = add i32 %61, %78
  br label %87

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %61, 0
  %84 = sext i1 %83 to i32
  %85 = sub i32 %84, %75
  %86 = add i32 %85, %82
  br label %87

87:                                               ; preds = %80, %77
  %88 = phi i32 [ %86, %80 ], [ %79, %77 ]
  %89 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %88, i32* %89, align 4
  %90 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %91 = load i8, i8* %90, align 2, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %95 = load i32, i32* %94, align 8
  %96 = load i32, i32* %31, align 8
  %97 = icmp eq i32 %61, %96
  %98 = select i1 %97, i32 16, i32 2
  %99 = sdiv i32 %95, %98
  %100 = add nsw i32 %95, %75
  %101 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %102 = load i32, i32* %101, align 4
  %103 = sub i32 %100, %102
  %104 = srem i32 %103, %95
  %105 = icmp slt i32 %104, 1
  %106 = icmp sgt i32 %99, %104
  %107 = or i1 %105, %106
  br i1 %107, label %109, label %108

108:                                              ; preds = %93
  store i32 0, i32* %89, align 4
  br label %115

109:                                              ; preds = %93
  %110 = sub nsw i32 %99, %104
  %111 = icmp sgt i32 %110, 0
  %112 = select i1 %111, i32 %110, i32 0
  %113 = icmp sgt i32 %88, %112
  %114 = select i1 %113, i32 %112, i32 %88
  store i32 %114, i32* %89, align 4
  br label %115

115:                                              ; preds = %109, %108, %87, %72, %65, %26
  %116 = phi i1 [ %29, %26 ], [ false, %65 ], [ true, %72 ], [ true, %87 ], [ true, %108 ], [ true, %109 ]
  %117 = icmp eq i8* %16, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %115
  %119 = load i8, i8* %16, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #9
  br label %122

122:                                              ; preds = %115, %118, %121
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu19CommandBufferHelper11InsertTokenEv(%"class.gpu::CommandBufferHelper"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = srem i32 %5, 100
  %10 = icmp eq i32 %9, 0
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %1
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %14 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 22, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %13, %15
  %17 = icmp sgt i64 %16, 500
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  br label %19

19:                                               ; preds = %18, %12, %1
  %20 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  tail call void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"* %0, i32 2) #9
  %24 = load i32, i32* %20, align 4
  %25 = icmp slt i32 %24, 2
  br i1 %25, label %63, label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %24, %23 ], [ %21, %19 ]
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 5
  %29 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %28, align 8
  %30 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %29, i64 %32
  %34 = add nsw i32 %31, 2
  store i32 %34, i32* %30, align 4
  %35 = add nsw i32 %27, -2
  store i32 %35, i32* %20, align 4
  %36 = icmp eq %"union.gpu::CommandBufferEntry"* %33, null
  br i1 %36, label %63, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  %41 = and i32 %40, 2147483647
  store i32 %41, i32* %38, align 8
  %42 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %33, i64 0, i32 0, i32 0
  store i32 2097154, i32* %42, align 4
  %43 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %33, i64 1
  %44 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %43, i64 0, i32 0, i32 0
  store i32 %41, i32* %44, align 4
  %45 = load i32, i32* %38, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %37
  %48 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %49 = and i8 %48, 25
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %47
  %52 = tail call zeroext i1 @_ZN3gpu19CommandBufferHelper6FinishEv(%"class.gpu::CommandBufferHelper"* %0)
  br label %63

53:                                               ; preds = %47
  %54 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %55 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  %56 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %57 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %57, i64* %56, align 8
  %58 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %54, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  %59 = call zeroext i1 @_ZN3gpu19CommandBufferHelper6FinishEv(%"class.gpu::CommandBufferHelper"* %0)
  %60 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %53
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i64 %58) #9
  br label %63

63:                                               ; preds = %23, %62, %53, %51, %26, %37
  %64 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 8
  %65 = load i32, i32* %64, align 8
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper14HasTokenPassedEi(%"class.gpu::CommandBufferHelper"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, %1
  br i1 %6, label %39, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %11, label %39

11:                                               ; preds = %7
  %12 = bitcast %"struct.gpu::CommandBuffer::State"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 6
  %17 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #9
  %18 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %17, align 8
  %19 = bitcast %"class.gpu::CommandBuffer"* %18 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)***
  %20 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %20, i64 2
  %22 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %21, align 8
  call void %22(%"struct.gpu::CommandBuffer::State"* nonnull sret %3, %"class.gpu::CommandBuffer"* %18) #9
  %23 = load i32, i32* %16, align 4
  %24 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %23, %25
  %27 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %28 = zext i1 %26 to i8
  store i8 %28, i8* %27, align 4
  %29 = load i32, i32* %13, align 8
  %30 = select i1 %26, i32 0, i32 %29
  %31 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %30, i32* %31, align 4
  %32 = load i32, i32* %14, align 4
  store i32 %32, i32* %8, align 8
  %33 = load i32, i32* %15, align 8
  switch i32 %33, label %34 [
    i32 7, label %35
    i32 0, label %35
    i32 8, label %35
  ]

34:                                               ; preds = %11
  br label %35

35:                                               ; preds = %11, %11, %11, %34
  %36 = phi i8 [ 0, %11 ], [ 1, %34 ], [ 0, %11 ], [ 0, %11 ]
  %37 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %36, i8* %37, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  %38 = icmp sge i32 %32, %1
  br label %39

39:                                               ; preds = %7, %2, %35
  %40 = phi i1 [ %38, %35 ], [ true, %2 ], [ true, %7 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper18RefreshCachedTokenEv(%"class.gpu::CommandBufferHelper"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %3 = bitcast %"struct.gpu::CommandBuffer::State"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %2, i64 0, i32 6
  %8 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %9 = bitcast %"struct.gpu::CommandBuffer::State"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %8, align 8
  %11 = bitcast %"class.gpu::CommandBuffer"* %10 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)***
  %12 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %12, i64 2
  %14 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %13, align 8
  call void %14(%"struct.gpu::CommandBuffer::State"* nonnull sret %2, %"class.gpu::CommandBuffer"* %10) #9
  %15 = load i32, i32* %7, align 4
  %16 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %15, %17
  %19 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %20 = zext i1 %18 to i8
  store i8 %20, i8* %19, align 4
  %21 = load i32, i32* %4, align 8
  %22 = select i1 %18, i32 0, i32 %21
  %23 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %22, i32* %23, align 4
  %24 = load i32, i32* %5, align 4
  %25 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %24, i32* %25, align 8
  %26 = load i32, i32* %6, align 8
  switch i32 %26, label %27 [
    i32 7, label %28
    i32 0, label %28
    i32 8, label %28
  ]

27:                                               ; preds = %1
  br label %28

28:                                               ; preds = %1, %1, %1, %27
  %29 = phi i8 [ 0, %1 ], [ 1, %27 ], [ 0, %1 ], [ 0, %1 ]
  %30 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %29, i8* %30, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper20HasCachedTokenPassedEi(%"class.gpu::CommandBufferHelper"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = icmp sge i32 %8, %1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ %9, %6 ], [ true, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper12WaitForTokenEi(%"class.gpu::CommandBufferHelper"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %4 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %75

12:                                               ; preds = %8
  %13 = bitcast %"struct.gpu::CommandBuffer::State"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %3, i64 0, i32 6
  %18 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #9
  %19 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %18, align 8
  %20 = bitcast %"class.gpu::CommandBuffer"* %19 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)***
  %21 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %21, i64 2
  %23 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %22, align 8
  call void %23(%"struct.gpu::CommandBuffer::State"* nonnull sret %3, %"class.gpu::CommandBuffer"* %19) #9
  %24 = load i32, i32* %17, align 4
  %25 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %24, %26
  %28 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 4
  %30 = load i32, i32* %14, align 8
  %31 = select i1 %27, i32 0, i32 %30
  %32 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %31, i32* %32, align 4
  %33 = load i32, i32* %15, align 4
  store i32 %33, i32* %9, align 8
  %34 = load i32, i32* %16, align 8
  switch i32 %34, label %35 [
    i32 7, label %36
    i32 0, label %36
    i32 8, label %36
  ]

35:                                               ; preds = %12
  br label %36

36:                                               ; preds = %12, %12, %12, %35
  %37 = phi i8 [ 0, %12 ], [ 1, %35 ], [ 0, %12 ], [ 0, %12 ]
  %38 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %37, i8* %38, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  %39 = icmp slt i32 %33, %1
  br i1 %39, label %40, label %75

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %42, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %46, %40
  call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  br label %51

51:                                               ; preds = %46, %50
  %52 = bitcast %"struct.gpu::CommandBuffer::State"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #9
  %53 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 0
  %54 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 3
  %56 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 6
  %57 = bitcast %"struct.gpu::CommandBuffer::State"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false)
  %58 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %18, align 8
  %59 = load i32, i32* %5, align 8
  %60 = bitcast %"class.gpu::CommandBuffer"* %58 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)***
  %61 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)** %61, i64 5
  %63 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32)** %62, align 8
  call void %63(%"struct.gpu::CommandBuffer::State"* nonnull sret %4, %"class.gpu::CommandBuffer"* %58, i32 %1, i32 %59) #9
  %64 = load i32, i32* %56, align 4
  %65 = load i32, i32* %25, align 8
  %66 = icmp ne i32 %64, %65
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %28, align 4
  %68 = load i32, i32* %53, align 8
  %69 = select i1 %66, i32 0, i32 %68
  store i32 %69, i32* %32, align 4
  %70 = load i32, i32* %54, align 4
  store i32 %70, i32* %9, align 8
  %71 = load i32, i32* %55, align 8
  switch i32 %71, label %72 [
    i32 7, label %73
    i32 0, label %73
    i32 8, label %73
  ]

72:                                               ; preds = %51
  br label %73

73:                                               ; preds = %51, %51, %51, %72
  %74 = phi i8 [ 0, %51 ], [ 1, %72 ], [ 0, %51 ], [ 0, %51 ]
  store i8 %74, i8* %38, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #9
  br label %75

75:                                               ; preds = %36, %8, %2, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19CommandBufferHelper23WaitForAvailableEntriesEi(%"class.gpu::CommandBufferHelper"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %5 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"struct.gpu::CommandBuffer::State", align 8
  %8 = tail call zeroext i1 @_ZN3gpu19CommandBufferHelper18AllocateRingBufferEv(%"class.gpu::CommandBufferHelper"* %0)
  br i1 %8, label %9, label %387

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, %1
  %13 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %16, label %107

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %11
  %20 = icmp eq i32 %18, 0
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %86

22:                                               ; preds = %16
  %23 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %24 = and i8 %23, 25
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26, !prof !3

26:                                               ; preds = %22
  %27 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %28 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %30 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %32 = load i32, i32* %10, align 4
  br label %33

33:                                               ; preds = %22, %26
  %34 = phi i32 [ %11, %22 ], [ %32, %26 ]
  %35 = phi i64 [ -6148914691236517206, %22 ], [ %31, %26 ]
  %36 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %22 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0), %26 ]
  %37 = phi i8* [ null, %22 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %26 ]
  %38 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %34, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %34, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %41, %33
  call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  %46 = load i32, i32* %10, align 4
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi i32 [ %34, %41 ], [ %46, %45 ]
  %49 = bitcast %"struct.gpu::CommandBuffer::State"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %5, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %5, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %5, i64 0, i32 3
  %53 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %5, i64 0, i32 6
  %54 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #9
  %55 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %54, align 8
  %56 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"class.gpu::CommandBuffer"* %55 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)***
  %59 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %59, i64 6
  %61 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %60, align 8
  call void %61(%"struct.gpu::CommandBuffer::State"* nonnull sret %5, %"class.gpu::CommandBuffer"* %55, i32 %57, i32 1, i32 %48) #9
  %62 = load i32, i32* %53, align 4
  %63 = load i32, i32* %56, align 8
  %64 = icmp ne i32 %62, %63
  %65 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %66 = zext i1 %64 to i8
  store i8 %66, i8* %65, align 4
  %67 = load i32, i32* %50, align 8
  %68 = select i1 %64, i32 0, i32 %67
  store i32 %68, i32* %17, align 4
  %69 = load i32, i32* %51, align 4
  %70 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %69, i32* %70, align 8
  %71 = load i32, i32* %52, align 8
  switch i32 %71, label %72 [
    i32 7, label %73
    i32 0, label %73
    i32 8, label %73
  ]

72:                                               ; preds = %47
  br label %73

73:                                               ; preds = %47, %47, %47, %72
  %74 = phi i8 [ 0, %47 ], [ 1, %72 ], [ 0, %47 ], [ 0, %47 ]
  %75 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %74, i8* %75, align 1
  %76 = icmp eq i8 %74, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #9
  %77 = icmp eq i8* %37, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = load i8, i8* %37, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %37, i8* %36, i64 %35) #9
  br label %82

82:                                               ; preds = %73, %78, %81
  br i1 %76, label %83, label %387

83:                                               ; preds = %82
  %84 = load i32, i32* %13, align 8
  %85 = load i32, i32* %10, align 4
  br label %86

86:                                               ; preds = %83, %16
  %87 = phi i32 [ %85, %83 ], [ %11, %16 ]
  %88 = phi i32 [ %84, %83 ], [ %14, %16 ]
  %89 = sub nsw i32 %88, %87
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %106

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 5
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi i32 [ %87, %91 ], [ %103, %93 ]
  %95 = phi i32 [ %89, %91 ], [ %104, %93 ]
  %96 = icmp slt i32 %95, 2097151
  %97 = select i1 %96, i32 %95, i32 2097151
  %98 = load %"union.gpu::CommandBufferEntry"*, %"union.gpu::CommandBufferEntry"** %92, align 8
  %99 = sext i32 %94 to i64
  %100 = getelementptr inbounds %"union.gpu::CommandBufferEntry", %"union.gpu::CommandBufferEntry"* %98, i64 %99, i32 0, i32 0
  %101 = and i32 %97, 2097151
  store i32 %101, i32* %100, align 4
  %102 = load i32, i32* %10, align 4
  %103 = add nsw i32 %102, %97
  store i32 %103, i32* %10, align 4
  %104 = sub nsw i32 %95, %97
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %93, label %106

106:                                              ; preds = %93, %86
  store i32 0, i32* %10, align 4
  br label %107

107:                                              ; preds = %106, %9
  %108 = phi i32 [ 0, %106 ], [ %11, %9 ]
  %109 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %110 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %109, align 8
  %111 = icmp eq %"class.gpu::Buffer"* %110, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 0, i32* %113, align 4
  br label %156

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, %108
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  %119 = xor i32 %108, -1
  %120 = add i32 %116, %119
  br label %128

121:                                              ; preds = %114
  %122 = load i32, i32* %13, align 8
  %123 = sub i32 0, %108
  %124 = icmp eq i32 %116, 0
  %125 = zext i1 %124 to i32
  %126 = sub i32 %123, %125
  %127 = add i32 %126, %122
  br label %128

128:                                              ; preds = %121, %118
  %129 = phi i32 [ %127, %121 ], [ %120, %118 ]
  %130 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %132 = load i8, i8* %131, align 2, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %156, label %134

134:                                              ; preds = %128
  %135 = load i32, i32* %13, align 8
  %136 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %116, %137
  %139 = select i1 %138, i32 16, i32 2
  %140 = sdiv i32 %135, %139
  %141 = add nsw i32 %135, %108
  %142 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 %141, %143
  %145 = srem i32 %144, %135
  %146 = icmp slt i32 %145, 1
  %147 = icmp sgt i32 %140, %145
  %148 = or i1 %146, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %134
  store i32 0, i32* %130, align 4
  br label %156

150:                                              ; preds = %134
  %151 = sub nsw i32 %140, %145
  %152 = icmp slt i32 %151, %1
  %153 = select i1 %152, i32 %1, i32 %151
  %154 = icmp sgt i32 %129, %153
  %155 = select i1 %154, i32 %153, i32 %129
  store i32 %155, i32* %130, align 4
  br label %156

156:                                              ; preds = %112, %128, %149, %150
  %157 = phi i32 [ 0, %112 ], [ %129, %128 ], [ 0, %149 ], [ %155, %150 ]
  %158 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 7
  %159 = icmp slt i32 %157, %1
  br i1 %159, label %160, label %230

160:                                              ; preds = %156
  %161 = bitcast %"struct.gpu::CommandBuffer::State"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #9
  %162 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  %163 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %162, align 8
  %164 = bitcast %"class.gpu::CommandBuffer"* %163 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)***
  %165 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %165, i64 2
  %167 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*)** %166, align 8
  call void %167(%"struct.gpu::CommandBuffer::State"* nonnull sret %7, %"class.gpu::CommandBuffer"* %163) #9
  %168 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %7, i64 0, i32 6
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %171 = load i32, i32* %170, align 8
  %172 = icmp ne i32 %169, %171
  %173 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %174 = zext i1 %172 to i8
  store i8 %174, i8* %173, align 4
  %175 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %7, i64 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = select i1 %172, i32 0, i32 %176
  %178 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %177, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %7, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %180, i32* %181, align 8
  %182 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %7, i64 0, i32 3
  %183 = load i32, i32* %182, align 8
  switch i32 %183, label %184 [
    i32 7, label %185
    i32 0, label %185
    i32 8, label %185
  ]

184:                                              ; preds = %160
  br label %185

185:                                              ; preds = %160, %160, %160, %184
  %186 = phi i8 [ 0, %160 ], [ 1, %184 ], [ 0, %160 ], [ 0, %160 ]
  %187 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 %186, i8* %187, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #9
  %188 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %109, align 8
  %189 = icmp eq %"class.gpu::Buffer"* %188, null
  br i1 %189, label %190, label %191

190:                                              ; preds = %185
  store i32 0, i32* %158, align 4
  br label %230

191:                                              ; preds = %185
  %192 = load i32, i32* %10, align 4
  %193 = icmp sgt i32 %177, %192
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  %195 = xor i32 %192, -1
  %196 = add i32 %177, %195
  br label %203

197:                                              ; preds = %191
  %198 = load i32, i32* %13, align 8
  %199 = icmp eq i32 %177, 0
  %200 = sext i1 %199 to i32
  %201 = sub i32 %200, %192
  %202 = add i32 %201, %198
  br label %203

203:                                              ; preds = %197, %194
  %204 = phi i32 [ %202, %197 ], [ %196, %194 ]
  store i32 %204, i32* %158, align 4
  %205 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %206 = load i8, i8* %205, align 2, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %230, label %208

208:                                              ; preds = %203
  %209 = load i32, i32* %13, align 8
  %210 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %177, %211
  %213 = select i1 %212, i32 16, i32 2
  %214 = sdiv i32 %209, %213
  %215 = add nsw i32 %209, %192
  %216 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %217 = load i32, i32* %216, align 4
  %218 = sub i32 %215, %217
  %219 = srem i32 %218, %209
  %220 = icmp slt i32 %219, 1
  %221 = icmp sgt i32 %214, %219
  %222 = or i1 %220, %221
  br i1 %222, label %224, label %223

223:                                              ; preds = %208
  store i32 0, i32* %158, align 4
  br label %230

224:                                              ; preds = %208
  %225 = sub nsw i32 %214, %219
  %226 = icmp slt i32 %225, %1
  %227 = select i1 %226, i32 %1, i32 %225
  %228 = icmp sgt i32 %204, %227
  %229 = select i1 %228, i32 %227, i32 %204
  store i32 %229, i32* %158, align 4
  br label %230

230:                                              ; preds = %224, %223, %203, %190, %156
  %231 = phi %"class.gpu::Buffer"* [ %188, %224 ], [ %188, %223 ], [ %188, %203 ], [ null, %190 ], [ %110, %156 ]
  %232 = phi i32 [ %229, %224 ], [ 0, %223 ], [ %204, %203 ], [ 0, %190 ], [ %157, %156 ]
  %233 = icmp slt i32 %232, %1
  br i1 %233, label %234, label %387

234:                                              ; preds = %230
  %235 = load i32, i32* %10, align 4
  %236 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 20
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %239, label %243

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %245, label %243

243:                                              ; preds = %239, %234
  call void @_ZN3gpu19CommandBufferHelper5FlushEv(%"class.gpu::CommandBufferHelper"* %0) #9
  %244 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %109, align 8
  br label %245

245:                                              ; preds = %239, %243
  %246 = phi %"class.gpu::Buffer"* [ %231, %239 ], [ %244, %243 ]
  %247 = icmp eq %"class.gpu::Buffer"* %246, null
  br i1 %247, label %288, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %250 = load i32, i32* %249, align 4
  %251 = load i32, i32* %10, align 4
  %252 = icmp sgt i32 %250, %251
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = xor i32 %251, -1
  %255 = add i32 %250, %254
  br label %263

256:                                              ; preds = %248
  %257 = load i32, i32* %13, align 8
  %258 = sub i32 0, %251
  %259 = icmp eq i32 %250, 0
  %260 = zext i1 %259 to i32
  %261 = sub i32 %258, %260
  %262 = add i32 %261, %257
  br label %263

263:                                              ; preds = %256, %253
  %264 = phi i32 [ %262, %256 ], [ %255, %253 ]
  store i32 %264, i32* %158, align 4
  %265 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %266 = load i8, i8* %265, align 2, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %290, label %268

268:                                              ; preds = %263
  %269 = load i32, i32* %13, align 8
  %270 = load i32, i32* %236, align 8
  %271 = icmp eq i32 %250, %270
  %272 = select i1 %271, i32 16, i32 2
  %273 = sdiv i32 %269, %272
  %274 = add nsw i32 %269, %251
  %275 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %276 = load i32, i32* %275, align 4
  %277 = sub i32 %274, %276
  %278 = srem i32 %277, %269
  %279 = icmp slt i32 %278, 1
  %280 = icmp sgt i32 %273, %278
  %281 = or i1 %279, %280
  br i1 %281, label %282, label %288

282:                                              ; preds = %268
  %283 = sub nsw i32 %273, %278
  %284 = icmp slt i32 %283, %1
  %285 = select i1 %284, i32 %1, i32 %283
  %286 = icmp sgt i32 %264, %285
  %287 = select i1 %286, i32 %285, i32 %264
  br label %288

288:                                              ; preds = %268, %245, %282
  %289 = phi i32 [ %287, %282 ], [ 0, %245 ], [ 0, %268 ]
  store i32 %289, i32* %158, align 4
  br label %290

290:                                              ; preds = %288, %263
  %291 = phi i32 [ %264, %263 ], [ %289, %288 ]
  %292 = icmp slt i32 %291, %1
  br i1 %292, label %293, label %387

293:                                              ; preds = %290
  %294 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %295 = and i8 %294, 25
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %303, label %297, !prof !3

297:                                              ; preds = %293
  %298 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %299 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #9
  %300 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %301 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %301, i64* %300, align 8
  %302 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %298, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #9
  br label %303

303:                                              ; preds = %293, %297
  %304 = phi i64 [ -6148914691236517206, %293 ], [ %302, %297 ]
  %305 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %293 ], [ getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), %297 ]
  %306 = phi i8* [ null, %293 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %297 ]
  %307 = load i32, i32* %10, align 4
  %308 = add i32 %1, 1
  %309 = add i32 %308, %307
  %310 = load i32, i32* %13, align 8
  %311 = srem i32 %309, %310
  %312 = bitcast %"struct.gpu::CommandBuffer::State"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %312) #9
  %313 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 0
  %314 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 1
  %315 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 3
  %316 = getelementptr inbounds %"struct.gpu::CommandBuffer::State", %"struct.gpu::CommandBuffer::State"* %4, i64 0, i32 6
  %317 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 32, i1 false) #9
  %318 = load %"class.gpu::CommandBuffer"*, %"class.gpu::CommandBuffer"** %317, align 8
  %319 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 12
  %320 = load i32, i32* %319, align 8
  %321 = bitcast %"class.gpu::CommandBuffer"* %318 to void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)***
  %322 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)**, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*** %321, align 8
  %323 = getelementptr inbounds void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %322, i64 6
  %324 = load void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)*, void (%"struct.gpu::CommandBuffer::State"*, %"class.gpu::CommandBuffer"*, i32, i32, i32)** %323, align 8
  call void %324(%"struct.gpu::CommandBuffer::State"* nonnull sret %4, %"class.gpu::CommandBuffer"* %318, i32 %320, i32 %311, i32 %307) #9
  %325 = load i32, i32* %316, align 4
  %326 = load i32, i32* %319, align 8
  %327 = icmp ne i32 %325, %326
  %328 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 13
  %329 = zext i1 %327 to i8
  store i8 %329, i8* %328, align 4
  %330 = load i32, i32* %313, align 8
  %331 = select i1 %327, i32 0, i32 %330
  %332 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  store i32 %331, i32* %332, align 4
  %333 = load i32, i32* %314, align 4
  %334 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 10
  store i32 %333, i32* %334, align 8
  %335 = load i32, i32* %315, align 8
  switch i32 %335, label %336 [
    i32 7, label %338
    i32 0, label %338
    i32 8, label %338
  ]

336:                                              ; preds = %303
  %337 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 1, i8* %337, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %312) #9
  br label %381

338:                                              ; preds = %303, %303, %303
  %339 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 17
  store i8 0, i8* %339, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %312) #9
  %340 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %109, align 8
  %341 = icmp eq %"class.gpu::Buffer"* %340, null
  br i1 %341, label %342, label %343

342:                                              ; preds = %338
  store i32 0, i32* %158, align 4
  br label %381

343:                                              ; preds = %338
  %344 = load i32, i32* %10, align 4
  %345 = icmp sgt i32 %331, %344
  br i1 %345, label %346, label %349

346:                                              ; preds = %343
  %347 = xor i32 %344, -1
  %348 = add i32 %331, %347
  br label %355

349:                                              ; preds = %343
  %350 = load i32, i32* %13, align 8
  %351 = icmp eq i32 %331, 0
  %352 = sext i1 %351 to i32
  %353 = sub i32 %352, %344
  %354 = add i32 %353, %350
  br label %355

355:                                              ; preds = %349, %346
  %356 = phi i32 [ %354, %349 ], [ %348, %346 ]
  store i32 %356, i32* %158, align 4
  %357 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 18
  %358 = load i8, i8* %357, align 2, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %381, label %360

360:                                              ; preds = %355
  %361 = load i32, i32* %13, align 8
  %362 = load i32, i32* %236, align 8
  %363 = icmp eq i32 %331, %362
  %364 = select i1 %363, i32 16, i32 2
  %365 = sdiv i32 %361, %364
  %366 = add nsw i32 %361, %344
  %367 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 21
  %368 = load i32, i32* %367, align 4
  %369 = sub i32 %366, %368
  %370 = srem i32 %369, %361
  %371 = icmp slt i32 %370, 1
  %372 = icmp sgt i32 %365, %370
  %373 = or i1 %371, %372
  br i1 %373, label %375, label %374

374:                                              ; preds = %360
  store i32 0, i32* %158, align 4
  br label %381

375:                                              ; preds = %360
  %376 = sub nsw i32 %365, %370
  %377 = icmp slt i32 %376, %1
  %378 = select i1 %377, i32 %1, i32 %376
  %379 = icmp sgt i32 %356, %378
  %380 = select i1 %379, i32 %378, i32 %356
  store i32 %380, i32* %158, align 4
  br label %381

381:                                              ; preds = %375, %374, %355, %342, %336
  %382 = icmp eq i8* %306, null
  br i1 %382, label %387, label %383

383:                                              ; preds = %381
  %384 = load i8, i8* %306, align 1
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %387, label %386

386:                                              ; preds = %383
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %306, i8* %305, i64 %304) #9
  br label %387

387:                                              ; preds = %82, %230, %2, %290, %381, %383, %386
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu19CommandBufferHelper28GetTotalFreeEntriesNoWaitingEv(%"class.gpu::CommandBufferHelper"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = xor i32 %5, -1
  %9 = add i32 %3, %8
  br label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %3, 0
  %14 = sub i32 %3, %5
  %15 = zext i1 %13 to i32
  %16 = sub i32 %14, %15
  %17 = add i32 %16, %12
  br label %18

18:                                               ; preds = %10, %7
  %19 = phi i32 [ %9, %7 ], [ %17, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu19CommandBufferHelper12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.gpu::CommandBufferHelper"* nocapture readonly, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readonly dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::UnguessableToken", align 8
  %6 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %7 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %7, align 8
  %9 = icmp eq %"class.gpu::Buffer"* %8, null
  br i1 %9, label %79, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #9
  %12 = getelementptr inbounds %"class.base::trace_event::MemoryDumpManager", %"class.base::trace_event::MemoryDumpManager"* %11, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i32 %16) #9
  %17 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %10, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  %26 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %17, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %28) #9
  %29 = getelementptr inbounds %"struct.base::trace_event::MemoryDumpArgs", %"struct.base::trace_event::MemoryDumpArgs"* %1, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 11
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 9
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = xor i32 %36, -1
  %40 = add i32 %34, %39
  br label %49

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.gpu::CommandBufferHelper", %"class.gpu::CommandBufferHelper"* %0, i64 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %34, 0
  %45 = sub i32 %34, %36
  %46 = zext i1 %44 to i32
  %47 = sub i32 %45, %46
  %48 = add i32 %47, %43
  br label %49

49:                                               ; preds = %38, %41
  %50 = phi i32 [ %40, %38 ], [ %48, %41 ]
  %51 = sext i32 %50 to i64
  %52 = shl nsw i64 %51, 2
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %52) #9
  %53 = bitcast %"class.base::UnguessableToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9
  %54 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %5, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.base::UnguessableToken"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  %57 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %7, align 8
  %58 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %57, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %"class.gpu::BufferBacking"*, %"class.gpu::BufferBacking"** %58, align 8
  %60 = bitcast %"class.gpu::BufferBacking"* %59 to { i64, i64 } (%"class.gpu::BufferBacking"*)***
  %61 = load { i64, i64 } (%"class.gpu::BufferBacking"*)**, { i64, i64 } (%"class.gpu::BufferBacking"*)*** %60, align 8
  %62 = getelementptr inbounds { i64, i64 } (%"class.gpu::BufferBacking"*)*, { i64, i64 } (%"class.gpu::BufferBacking"*)** %61, i64 3
  %63 = load { i64, i64 } (%"class.gpu::BufferBacking"*)*, { i64, i64 } (%"class.gpu::BufferBacking"*)** %62, align 8
  %64 = call { i64, i64 } %63(%"class.gpu::BufferBacking"* %59) #9
  %65 = extractvalue { i64, i64 } %64, 0
  store i64 %65, i64* %54, align 8
  %66 = extractvalue { i64, i64 } %64, 1
  store i64 %66, i64* %55, align 8
  %67 = or i64 %65, %66
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %49
  %70 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %17, i64 0, i32 1
  call void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %70, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %5, i32 2) #9
  br label %78

71:                                               ; preds = %49
  %72 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDumpGuid", %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6, i64 0, i32 0
  %74 = load i32, i32* %15, align 8
  %75 = call i64 @_ZN3gpu23GetBufferGUIDForTracingEmi(i64 %13, i32 %74) #9
  store i64 %75, i64* %73, align 8
  %76 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6) #9
  %77 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %17, i64 0, i32 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %77, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %78

78:                                               ; preds = %71, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9
  br label %79

79:                                               ; preds = %3, %78, %25
  ret i1 true
}

declare %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() local_unnamed_addr #4

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #4

declare i64 @_ZN3gpu23GetBufferGUIDForTracingEmi(i64, i32) local_unnamed_addr #4

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i32) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
