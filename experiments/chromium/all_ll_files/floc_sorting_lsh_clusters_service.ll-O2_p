; ModuleID = '../../components/federated_learning/floc_sorting_lsh_clusters_service.cc'
source_filename = "../../components/federated_learning/floc_sorting_lsh_clusters_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.federated_learning::FlocSortingLshClustersService" = type { i32 (...)**, %class.scoped_refptr, %"class.base::ObserverList", i8, %"class.base::FilePath", %"class.base::Version", %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Version" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.15", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.federated_learning::FlocSortingLshClustersService::Observer" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.58" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.23" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.24" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream" = type { %"class.google::protobuf::io::CopyingInputStream", %"class.base::File" }
%"class.google::protobuf::io::CopyingInputStream" = type { i32 (...)** }
%"class.google::protobuf::io::CopyingInputStreamAdaptor" = type <{ %"class.google::protobuf::io::ZeroCopyInputStream", %"class.google::protobuf::io::CopyingInputStream"*, i8, i8, [6 x i8], i64, %"class.std::__1::unique_ptr", i32, i32, i32, [4 x i8] }>
%"class.google::protobuf::io::ZeroCopyInputStream" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8* }
%"class.google::protobuf::io::CodedInputStream" = type { i8*, i8*, %"class.google::protobuf::io::ZeroCopyInputStream"*, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, %"class.google::protobuf::DescriptorPool"*, %"class.google::protobuf::MessageFactory"* }
%"class.google::protobuf::DescriptorPool" = type opaque
%"class.google::protobuf::MessageFactory" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.absl::optional"* }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS6_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEFvS8_EE7RunOnceEPNS0_13BindStateBaseEOS8_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EvE6InvokeISC_NS_7WeakPtrIS3_EEJSA_S8_S7_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EJNS_7WeakPtrIS3_EESA_S8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIN4absl8optionalImEEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIN4absl8optionalImEES4_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN18federated_learning29FlocSortingLshClustersServiceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.federated_learning::FlocSortingLshClustersService"*)* @_ZN18federated_learning29FlocSortingLshClustersServiceD2Ev to i8*), i8* bitcast (void (%"class.federated_learning::FlocSortingLshClustersService"*)* @_ZN18federated_learning29FlocSortingLshClustersServiceD0Ev to i8*), i8* bitcast (void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)* @_ZN18federated_learning29FlocSortingLshClustersService29OnSortingLshClustersFileReadyERKN4base8FilePathERKNS1_7VersionE to i8*), i8* bitcast (void (%"class.federated_learning::FlocSortingLshClustersService"*, i64, %"class.base::OnceCallback"*)* @_ZN18federated_learning29FlocSortingLshClustersService15ApplySortingLshEmN4base12OnceCallbackIFvN4absl8optionalImEENS1_7VersionEEEE to i8*)] }, align 8
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 -127, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [16 x i8] c"ApplySortingLsh\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"../../components/federated_learning/floc_sorting_lsh_clusters_service.cc\00", align 1
@_ZN18federated_learning22kMaxNumberOfBitsInFlocE = external local_unnamed_addr constant i8, align 1
@_ZN18federated_learning18kSortingLshMaxBitsE = external local_unnamed_addr constant i8, align 1
@_ZN18federated_learning22kSortingLshBlockedMaskE = external local_unnamed_addr constant i32, align 4
@_ZN18federated_learning19kSortingLshSizeMaskE = external local_unnamed_addr constant i32, align 4
@_ZTVN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*)* @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamD2Ev to i8*), i8* bitcast (void (%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*)* @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamD0Ev to i8*), i8* bitcast (i32 (%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*, i8*, i32)* @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStream4ReadEPvi to i8*), i8* bitcast (i32 (%"class.google::protobuf::io::CopyingInputStream"*, i32)* @_ZN6google8protobuf2io18CopyingInputStream4SkipEi to i8*)] }, align 8
@_ZN6google8protobuf2io16CodedInputStream24default_recursion_limit_E = external local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN18federated_learning29FlocSortingLshClustersServiceC1Ev = hidden unnamed_addr alias void (%"class.federated_learning::FlocSortingLshClustersService"*), void (%"class.federated_learning::FlocSortingLshClustersService"*)* @_ZN18federated_learning29FlocSortingLshClustersServiceC2Ev
@_ZN18federated_learning29FlocSortingLshClustersServiceD1Ev = hidden unnamed_addr alias void (%"class.federated_learning::FlocSortingLshClustersService"*), void (%"class.federated_learning::FlocSortingLshClustersService"*)* @_ZN18federated_learning29FlocSortingLshClustersServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersServiceC2Ev(%"class.federated_learning::FlocSortingLshClustersService"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning29FlocSortingLshClustersServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #9
  %4 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* %3, %"class.base::SequencedTaskRunner"** %4, align 8
  %5 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::ObserverList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #9
  %7 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7) #9
  %8 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 3
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 4
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %11) #9
  %12 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 5
  tail call void @_ZN4base7VersionC1Ev(%"class.base::Version"* %12) #9
  %13 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 6, i32 0
  %14 = ptrtoint %"class.federated_learning::FlocSortingLshClustersService"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %13, i64 %14) #9
  ret void
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare void @_ZN4base7VersionC1Ev(%"class.base::Version"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersServiceD2Ev(%"class.federated_learning::FlocSortingLshClustersService"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning29FlocSortingLshClustersServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 5
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %4) #9
  %5 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 4
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #9
  %6 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::LinkNodeBase"** %6 to %"class.base::LinkNode"**
  %8 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0
  %9 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %7, align 8
  %10 = icmp eq %"class.base::LinkNode"* %9, %8
  br i1 %10, label %23, label %11

11:                                               ; preds = %1, %20
  %12 = phi %"class.base::LinkNode"* [ %21, %20 ], [ %9, %1 ]
  %13 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %12, i64 1
  %14 = bitcast %"class.base::LinkNode"* %13 to %"class.base::ObserverList"**
  %15 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  %16 = icmp eq %"class.base::ObserverList"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %14, align 8
  %18 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %12, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %18) #9
  %19 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %7, align 8
  br label %20

20:                                               ; preds = %17, %11
  %21 = phi %"class.base::LinkNode"* [ %12, %11 ], [ %19, %17 ]
  %22 = icmp eq %"class.base::LinkNode"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %20, %1
  %24 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %24, align 8
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %25 to i64
  %29 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 1, i32 0
  %34 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %33, align 8
  %35 = icmp eq %"class.base::SequencedTaskRunner"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %34, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %42 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %43) #9
  br label %44

44:                                               ; preds = %32, %36, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersServiceD0Ev(%"class.federated_learning::FlocSortingLshClustersService"*) unnamed_addr #0 align 2 {
  tail call void @_ZN18federated_learning29FlocSortingLshClustersServiceD2Ev(%"class.federated_learning::FlocSortingLshClustersService"* %0) #9
  %2 = bitcast %"class.federated_learning::FlocSortingLshClustersService"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService11AddObserverEPNS0_8ObserverE(%"class.federated_learning::FlocSortingLshClustersService"*, %"class.federated_learning::FlocSortingLshClustersService::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2
  %4 = icmp eq %"class.federated_learning::FlocSortingLshClustersService::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.federated_learning::FlocSortingLshClustersService::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.federated_learning::FlocSortingLshClustersService::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService14RemoveObserverEPNS0_8ObserverE(%"class.federated_learning::FlocSortingLshClustersService"*, %"class.federated_learning::FlocSortingLshClustersService::Observer"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.federated_learning::FlocSortingLshClustersService::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18federated_learning29FlocSortingLshClustersService29IsSortingLshClustersFileReadyEv(%"class.federated_learning::FlocSortingLshClustersService"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService29OnSortingLshClustersFileReadyERKN4base8FilePathERKNS1_7VersionE(%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"* dereferenceable(24), %"class.base::Version"* readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 4
  %7 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %6, %"class.base::FilePath"* dereferenceable(24) %1) #9
  %8 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 5
  %9 = icmp eq %"class.base::Version"* %8, %2
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %8, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %2, i64 0, i32 0, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.7"* %11, i32* %13, i32* %15) #9
  br label %16

16:                                               ; preds = %3, %10
  %17 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 3
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2
  %19 = bitcast %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %18, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false)
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8, !noalias !3
  %26 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %26, align 8, !noalias !3
  %28 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %27
  %29 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %29) #9
  br i1 %28, label %30, label %32

30:                                               ; preds = %16
  %31 = bitcast %"class.base::ObserverList"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #9, !alias.scope !3
  br label %72

32:                                               ; preds = %16
  store %"class.base::ObserverList"* %18, %"class.base::ObserverList"** %20, align 8
  %33 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %29, %"class.base::internal::LinkNodeBase"* %33) #9
  store i64 0, i64* %21, align 8
  %34 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 2, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::ObserverList"* %18 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  br label %44

44:                                               ; preds = %37, %32
  %45 = phi i64 [ %43, %37 ], [ -1, %32 ]
  store i64 %45, i64* %22, align 8
  %46 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %47 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %46, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::ObserverList"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %53, %45
  %55 = select i1 %54, i64 %53, i64 %45
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %44
  %58 = inttoptr i64 %51 to %"class.base::internal::UncheckedObserverAdapter"*
  %59 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %46, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %72

63:                                               ; preds = %57, %67
  %64 = phi i64 [ %65, %67 ], [ 0, %57 ]
  %65 = add nuw i64 %64, 1
  store i64 %65, i64* %21, align 8
  %66 = icmp ult i64 %65, %55
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %59, align 8
  %69 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %68, i64 %65, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %63, label %72

72:                                               ; preds = %67, %63, %57, %44, %30
  %73 = bitcast %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #9
  %74 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %76 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %77 = getelementptr inbounds %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.base::ObserverList<federated_learning::FlocSortingLshClustersService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %77) #9
  %79 = bitcast %"class.base::ObserverList"** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #9, !alias.scope !6
  %80 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  br label %81

81:                                               ; preds = %320, %72
  %82 = phi %"class.base::ObserverList"* [ %80, %72 ], [ %318, %320 ]
  %83 = icmp eq %"class.base::ObserverList"* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %81
  %85 = load i64, i64* %21, align 8
  %86 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %82, i64 0, i32 0, i32 0, i32 1
  %87 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.base::ObserverList"* %82 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = load i64, i64* %22, align 8
  %94 = icmp ult i64 %92, %93
  %95 = select i1 %94, i64 %92, i64 %93
  %96 = icmp eq i64 %85, %95
  br i1 %96, label %99, label %97

97:                                               ; preds = %84
  %98 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  br label %115

99:                                               ; preds = %84, %81
  %100 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  %101 = icmp eq %"class.base::ObserverList"* %100, null
  br i1 %101, label %215, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %75, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %76, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %124, label %115

115:                                              ; preds = %102, %97
  %116 = phi %"class.base::ObserverList"* [ %98, %97 ], [ %100, %102 ]
  %117 = icmp eq %"class.base::ObserverList"* %82, %116
  %118 = load i64, i64* %21, align 8
  %119 = load i64, i64* %75, align 8
  %120 = icmp eq i64 %118, %119
  %121 = and i1 %117, %120
  br i1 %121, label %122, label %309

122:                                              ; preds = %115
  %123 = icmp eq %"class.base::ObserverList"* %82, null
  br i1 %123, label %215, label %124

124:                                              ; preds = %102, %122
  %125 = phi %"class.base::ObserverList"* [ %82, %122 ], [ %100, %102 ]
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 1
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 1, i32 0, i32 0, i32 1
  %128 = bitcast %"class.base::internal::LinkNodeBase"** %127 to %"class.base::LinkNode"**
  %129 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %128, align 8
  %130 = bitcast %"class.base::LinkedList"* %126 to %"class.base::LinkNode"**
  %131 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %130, align 8
  %132 = icmp eq %"class.base::LinkNode"* %129, %131
  br i1 %132, label %133, label %211

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %134, align 8
  %136 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 1
  %137 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %137
  br i1 %138, label %147, label %139

139:                                              ; preds = %133, %144
  %140 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %144 ], [ %135, %133 ]
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 1
  %146 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %137
  br i1 %146, label %211, label %139

147:                                              ; preds = %139, %133
  %148 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %133 ], [ %140, %139 ]
  %149 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %148 to i64
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %148, %137
  br i1 %150, label %211, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %148, i64 1
  %153 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %152, %137
  br i1 %153, label %206, label %154

154:                                              ; preds = %151
  %155 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 -2, i32 0
  %156 = ptrtoint i8** %155 to i64
  %157 = sub i64 %156, %149
  %158 = lshr i64 %157, 3
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %154, %175
  %163 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %177, %175 ], [ %152, %154 ]
  %164 = phi i64 [ %176, %175 ], [ %149, %154 ]
  %165 = phi i64 [ %178, %175 ], [ %160, %154 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %163, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %162
  %170 = ptrtoint i8* %167 to i64
  %171 = inttoptr i64 %164 to %"class.base::internal::UncheckedObserverAdapter"*
  %172 = inttoptr i64 %164 to i64*
  store i64 %170, i64* %172, align 8
  %173 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %171, i64 1
  %174 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %173 to i64
  br label %175

175:                                              ; preds = %169, %162
  %176 = phi i64 [ %164, %162 ], [ %174, %169 ]
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %163, i64 1
  %178 = add i64 %165, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %162, !llvm.loop !9

180:                                              ; preds = %175, %154
  %181 = phi i64 [ undef, %154 ], [ %176, %175 ]
  %182 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %152, %154 ], [ %177, %175 ]
  %183 = phi i64 [ %149, %154 ], [ %176, %175 ]
  %184 = icmp ult i64 %157, 24
  br i1 %184, label %202, label %185

185:                                              ; preds = %180, %410
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %412, %410 ], [ %182, %180 ]
  %187 = phi i64 [ %411, %410 ], [ %183, %180 ]
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %185
  %192 = ptrtoint i8* %189 to i64
  %193 = inttoptr i64 %187 to %"class.base::internal::UncheckedObserverAdapter"*
  %194 = inttoptr i64 %187 to i64*
  store i64 %192, i64* %194, align 8
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %193, i64 1
  %196 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %195 to i64
  br label %197

197:                                              ; preds = %191, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %191 ]
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 1, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %388, label %382

202:                                              ; preds = %410, %180
  %203 = phi i64 [ %181, %180 ], [ %411, %410 ]
  %204 = inttoptr i64 %203 to %"class.base::internal::UncheckedObserverAdapter"*
  %205 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  br label %206

206:                                              ; preds = %202, %151
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %151 ], [ %205, %202 ]
  %208 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %148, %151 ], [ %204, %202 ]
  %209 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %208, %207
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  store %"class.base::internal::UncheckedObserverAdapter"* %208, %"class.base::internal::UncheckedObserverAdapter"** %136, align 8
  br label %211

211:                                              ; preds = %144, %210, %206, %147, %124
  %212 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %74, align 8
  %213 = icmp eq %"class.base::ObserverList"* %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %211
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %74, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %77) #9
  br label %215

215:                                              ; preds = %99, %122, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #9
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %217 = icmp eq %"class.base::ObserverList"* %216, null
  br i1 %217, label %308, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 1
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 1, i32 0, i32 0, i32 1
  %221 = bitcast %"class.base::internal::LinkNodeBase"** %220 to %"class.base::LinkNode"**
  %222 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %221, align 8
  %223 = bitcast %"class.base::LinkedList"* %219 to %"class.base::LinkNode"**
  %224 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %223, align 8
  %225 = icmp eq %"class.base::LinkNode"* %222, %224
  br i1 %225, label %226, label %304

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %227, align 8
  %229 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %216, i64 0, i32 0, i32 0, i32 1
  %230 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %230
  br i1 %231, label %240, label %232

232:                                              ; preds = %226, %237
  %233 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %237 ], [ %228, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 1
  %239 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %230
  br i1 %239, label %304, label %232

240:                                              ; preds = %232, %226
  %241 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %226 ], [ %233, %232 ]
  %242 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %241 to i64
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %241, %230
  br i1 %243, label %304, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 1
  %246 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %230
  br i1 %246, label %299, label %247

247:                                              ; preds = %244
  %248 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 -2, i32 0
  %249 = ptrtoint i8** %248 to i64
  %250 = sub i64 %249, %242
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %273, label %255

255:                                              ; preds = %247, %268
  %256 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %270, %268 ], [ %245, %247 ]
  %257 = phi i64 [ %269, %268 ], [ %242, %247 ]
  %258 = phi i64 [ %271, %268 ], [ %253, %247 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %255
  %263 = ptrtoint i8* %260 to i64
  %264 = inttoptr i64 %257 to %"class.base::internal::UncheckedObserverAdapter"*
  %265 = inttoptr i64 %257 to i64*
  store i64 %263, i64* %265, align 8
  %266 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %264, i64 1
  %267 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %266 to i64
  br label %268

268:                                              ; preds = %262, %255
  %269 = phi i64 [ %257, %255 ], [ %267, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 1
  %271 = add i64 %258, -1
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %255, !llvm.loop !11

273:                                              ; preds = %268, %247
  %274 = phi i64 [ undef, %247 ], [ %269, %268 ]
  %275 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %247 ], [ %270, %268 ]
  %276 = phi i64 [ %242, %247 ], [ %269, %268 ]
  %277 = icmp ult i64 %250, 24
  br i1 %277, label %295, label %278

278:                                              ; preds = %273, %378
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %380, %378 ], [ %275, %273 ]
  %280 = phi i64 [ %379, %378 ], [ %276, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %290, label %284

284:                                              ; preds = %278
  %285 = ptrtoint i8* %282 to i64
  %286 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = inttoptr i64 %280 to i64*
  store i64 %285, i64* %287, align 8
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 1
  %289 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %288 to i64
  br label %290

290:                                              ; preds = %284, %278
  %291 = phi i64 [ %280, %278 ], [ %289, %284 ]
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 1, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %356, label %350

295:                                              ; preds = %378, %273
  %296 = phi i64 [ %274, %273 ], [ %379, %378 ]
  %297 = inttoptr i64 %296 to %"class.base::internal::UncheckedObserverAdapter"*
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  br label %299

299:                                              ; preds = %295, %244
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %244 ], [ %298, %295 ]
  %301 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %241, %244 ], [ %297, %295 ]
  %302 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %301, %300
  br i1 %302, label %304, label %303

303:                                              ; preds = %299
  store %"class.base::internal::UncheckedObserverAdapter"* %301, %"class.base::internal::UncheckedObserverAdapter"** %229, align 8
  br label %304

304:                                              ; preds = %237, %303, %299, %240, %218
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %304
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %20, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %29) #9
  br label %308

308:                                              ; preds = %215, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #9
  ret void

309:                                              ; preds = %115
  %310 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %82, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %310, align 8
  %312 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %311, i64 %118
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %312 to %"class.federated_learning::FlocSortingLshClustersService::Observer"**
  %314 = load %"class.federated_learning::FlocSortingLshClustersService::Observer"*, %"class.federated_learning::FlocSortingLshClustersService::Observer"** %313, align 8
  %315 = bitcast %"class.federated_learning::FlocSortingLshClustersService::Observer"* %314 to void (%"class.federated_learning::FlocSortingLshClustersService::Observer"*)***
  %316 = load void (%"class.federated_learning::FlocSortingLshClustersService::Observer"*)**, void (%"class.federated_learning::FlocSortingLshClustersService::Observer"*)*** %315, align 8
  %317 = load void (%"class.federated_learning::FlocSortingLshClustersService::Observer"*)*, void (%"class.federated_learning::FlocSortingLshClustersService::Observer"*)** %316, align 8
  call void %317(%"class.federated_learning::FlocSortingLshClustersService::Observer"* %314) #9
  %318 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %20, align 8
  %319 = icmp eq %"class.base::ObserverList"* %318, null
  br i1 %319, label %320, label %321

320:                                              ; preds = %345, %341, %309, %321, %335
  br label %81

321:                                              ; preds = %309
  %322 = load i64, i64* %21, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %21, align 8
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %318, i64 0, i32 0, i32 0, i32 1
  %325 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = bitcast %"class.base::ObserverList"* %318 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %326, %328
  %330 = ashr exact i64 %329, 3
  %331 = load i64, i64* %22, align 8
  %332 = icmp ult i64 %330, %331
  %333 = select i1 %332, i64 %330, i64 %331
  %334 = icmp ult i64 %323, %333
  br i1 %334, label %335, label %320

335:                                              ; preds = %321
  %336 = inttoptr i64 %328 to %"class.base::internal::UncheckedObserverAdapter"*
  %337 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %318, i64 0, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %323, i32 0
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %320

341:                                              ; preds = %335, %345
  %342 = phi i64 [ %343, %345 ], [ %323, %335 ]
  %343 = add nuw i64 %342, 1
  store i64 %343, i64* %21, align 8
  %344 = icmp ult i64 %343, %333
  br i1 %344, label %345, label %320

345:                                              ; preds = %341
  %346 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 %343, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %341, label %320

350:                                              ; preds = %290
  %351 = ptrtoint i8* %293 to i64
  %352 = inttoptr i64 %291 to %"class.base::internal::UncheckedObserverAdapter"*
  %353 = inttoptr i64 %291 to i64*
  store i64 %351, i64* %353, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 1
  %355 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %354 to i64
  br label %356

356:                                              ; preds = %350, %290
  %357 = phi i64 [ %291, %290 ], [ %355, %350 ]
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 2, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %356
  %362 = ptrtoint i8* %359 to i64
  %363 = inttoptr i64 %357 to %"class.base::internal::UncheckedObserverAdapter"*
  %364 = inttoptr i64 %357 to i64*
  store i64 %362, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %363, i64 1
  %366 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %365 to i64
  br label %367

367:                                              ; preds = %361, %356
  %368 = phi i64 [ %357, %356 ], [ %366, %361 ]
  %369 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 3, i32 0
  %370 = load i8*, i8** %369, align 8
  %371 = icmp eq i8* %370, null
  br i1 %371, label %378, label %372

372:                                              ; preds = %367
  %373 = ptrtoint i8* %370 to i64
  %374 = inttoptr i64 %368 to %"class.base::internal::UncheckedObserverAdapter"*
  %375 = inttoptr i64 %368 to i64*
  store i64 %373, i64* %375, align 8
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %374, i64 1
  %377 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %376 to i64
  br label %378

378:                                              ; preds = %372, %367
  %379 = phi i64 [ %368, %367 ], [ %377, %372 ]
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %279, i64 4
  %381 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %380, %230
  br i1 %381, label %295, label %278

382:                                              ; preds = %197
  %383 = ptrtoint i8* %200 to i64
  %384 = inttoptr i64 %198 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %198 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %197
  %389 = phi i64 [ %198, %197 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 2, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %399, label %393

393:                                              ; preds = %388
  %394 = ptrtoint i8* %391 to i64
  %395 = inttoptr i64 %389 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %389 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %388
  %400 = phi i64 [ %389, %388 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 3, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %410, label %404

404:                                              ; preds = %399
  %405 = ptrtoint i8* %402 to i64
  %406 = inttoptr i64 %400 to %"class.base::internal::UncheckedObserverAdapter"*
  %407 = inttoptr i64 %400 to i64*
  store i64 %405, i64* %407, align 8
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %406, i64 1
  %409 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %408 to i64
  br label %410

410:                                              ; preds = %404, %399
  %411 = phi i64 [ %400, %399 ], [ %409, %404 ]
  %412 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 4
  %413 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %412, %137
  br i1 %413, label %202, label %185
}

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService15ApplySortingLshEmN4base12OnceCallbackIFvN4absl8optionalImEENS1_7VersionEEEE(%"class.federated_learning::FlocSortingLshClustersService"*, i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback.58", align 8
  %6 = alloca %"class.base::OnceCallback.58", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.23", align 8
  %9 = alloca %"class.base::OnceCallback.24", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 1, i32 0
  %12 = bitcast %"class.base::SequencedTaskRunner"** %11 to %"class.base::TaskRunner"**
  %13 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %12, align 8
  %14 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 160) #9
  %15 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 4
  %16 = call i8* @_Znwm(i64 72) #10, !noalias !12
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast ({ i8, i64 } (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS6_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS5_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !12
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i64*
  store i64 ptrtoint ({ i8, i64 } (i64, %"class.base::FilePath"*)* @_ZN18federated_learning12_GLOBAL__N_133ApplySortingLshOnBackgroundThreadEmRKN4base8FilePathE to i64), i64* %19, align 8, !noalias !12
  %20 = getelementptr inbounds i8, i8* %16, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %1, i64* %21, align 8, !noalias !12
  %22 = getelementptr inbounds i8, i8* %16, i64 48
  %23 = bitcast i8* %22 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %23, %"class.base::FilePath"* dereferenceable(24) %15) #9, !noalias !12
  %24 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9, !noalias !17
  %26 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %26) #9, !noalias !17
  %27 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 6, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !17
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %28) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9, !noalias !17
  %30 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 5
  %31 = call i8* @_Znwm(i64 96) #10, !noalias !20
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEFvS8_EE7RunOnceEPNS0_13BindStateBaseEOS8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EJNS_7WeakPtrIS3_EESA_S8_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #9, !noalias !20
  %33 = getelementptr inbounds i8, i8* %31, i64 32
  %34 = bitcast i8* %33 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)* @_ZN18federated_learning29FlocSortingLshClustersService18DidApplySortingLshEN4base12OnceCallbackIFvN4absl8optionalImEENS1_7VersionEEEES6_S5_ to i64), i64 0>, <2 x i64>* %34, align 8, !noalias !20
  %35 = getelementptr inbounds i8, i8* %31, i64 48
  %36 = bitcast i8* %35 to %"class.base::internal::WeakReference"*
  %37 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %36, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %37) #9, !noalias !20
  %38 = getelementptr inbounds i8, i8* %31, i64 56
  %39 = bitcast i8* %38 to i64*
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8, !noalias !20
  store i64 %41, i64* %39, align 8, !noalias !20
  %42 = getelementptr inbounds i8, i8* %31, i64 64
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !20
  %46 = bitcast i8* %42 to i64*
  store i64 %45, i64* %46, align 8, !noalias !20
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !20
  %47 = getelementptr inbounds i8, i8* %31, i64 72
  %48 = bitcast i8* %47 to %"class.base::Version"*
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %48, %"class.base::Version"* dereferenceable(24) %30) #9, !noalias !20
  %49 = bitcast %"class.base::OnceCallback.58"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = bitcast %"class.base::OnceCallback.58"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = call i8* @_Znwm(i64 8) #10
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = ptrtoint i8* %51 to i64
  %54 = call i8* @_Znwm(i64 56) #10, !noalias !25
  %55 = bitcast i8* %54 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %55, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !25
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = bitcast i8* %56 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.23"*, %"class.std::__1::unique_ptr.52"*)* @_ZN4base8internal20ReturnAsParamAdapterIN4absl8optionalImEEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEE to i64), i64* %57, align 8, !noalias !25
  %58 = getelementptr inbounds i8, i8* %54, i64 40
  %59 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %8, i64 0, i32 0, i32 0, i32 0
  %60 = ptrtoint i8* %16 to i64
  %61 = bitcast i8* %58 to i64*
  store i64 %60, i64* %61, align 8, !noalias !25
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8, !noalias !25
  %62 = getelementptr inbounds i8, i8* %54, i64 48
  %63 = bitcast i8* %62 to i64*
  store i64 %53, i64* %63, align 8, !noalias !25
  %64 = bitcast %"class.base::OnceCallback.58"* %5 to i8**
  store i8* %54, i8** %64, align 8, !alias.scope !25
  %65 = call i8* @_Znwm(i64 56) #10, !noalias !30
  %66 = bitcast i8* %65 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %66, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !30
  %67 = getelementptr inbounds i8, i8* %65, i64 32
  %68 = bitcast i8* %67 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.24"*, %"class.std::__1::unique_ptr.52"*)* @_ZN4base8internal12ReplyAdapterIN4absl8optionalImEES4_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEE to i64), i64* %68, align 8, !noalias !30
  %69 = getelementptr inbounds i8, i8* %65, i64 40
  %70 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0, i32 0, i32 0
  %71 = ptrtoint i8* %31 to i64
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8, !noalias !30
  %73 = getelementptr inbounds i8, i8* %65, i64 48
  %74 = bitcast i8* %73 to i64*
  store i64 %53, i64* %74, align 8, !noalias !30
  %75 = bitcast %"class.base::OnceCallback.58"* %6 to i8**
  store i8* %65, i8** %75, align 8, !alias.scope !30
  %76 = call zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.58"* nonnull %5, %"class.base::OnceCallback.58"* nonnull %6) #9
  %77 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #9
  %78 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %79 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  %80 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal { i8, i64 } @_ZN18federated_learning12_GLOBAL__N_133ApplySortingLshOnBackgroundThreadEmRKN4base8FilePathE(i64, %"class.base::FilePath"* dereferenceable(24)) #0 {
  %3 = alloca %"class.base::File", align 8
  %4 = alloca %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", align 8
  %5 = alloca %"class.base::File", align 8
  %6 = alloca %"class.google::protobuf::io::CopyingInputStreamAdaptor", align 8
  %7 = alloca %"class.google::protobuf::io::CodedInputStream", align 8
  %8 = bitcast %"class.base::File"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %3, %"class.base::FilePath"* dereferenceable(24) %1, i32 33) #9
  %9 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* nonnull %3) #9
  br i1 %9, label %10, label %81

10:                                               ; preds = %2
  %11 = bitcast %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %4, i64 0, i32 1
  %13 = bitcast %"class.base::File"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %5, %"class.base::File"* nonnull dereferenceable(56) %3) #9
  %14 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %4, i64 0, i32 1
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* %15, %"class.base::File"* nonnull dereferenceable(56) %5) #9
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #9
  %16 = bitcast %"class.google::protobuf::io::CopyingInputStreamAdaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %4, i64 0, i32 0
  call void @_ZN6google8protobuf2io25CopyingInputStreamAdaptorC1EPNS1_18CopyingInputStreamEi(%"class.google::protobuf::io::CopyingInputStreamAdaptor"* nonnull %6, %"class.google::protobuf::io::CopyingInputStream"* nonnull %17, i32 -1) #9
  %18 = bitcast %"class.google::protobuf::io::CodedInputStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  %19 = getelementptr inbounds %"class.google::protobuf::io::CopyingInputStreamAdaptor", %"class.google::protobuf::io::CopyingInputStreamAdaptor"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #9
  store %"class.google::protobuf::io::ZeroCopyInputStream"* %19, %"class.google::protobuf::io::ZeroCopyInputStream"** %20, align 8
  %21 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 3
  %22 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 8
  %23 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 14, i1 false) #9
  store i32 2147483647, i32* %22, align 8
  %24 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 9
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 10
  store i32 2147483647, i32* %25, align 8
  %26 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 11
  %27 = load i32, i32* @_ZN6google8protobuf2io16CodedInputStream24default_recursion_limit_E, align 4
  store i32 %27, i32* %26, align 4
  %28 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 12
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 13
  %30 = bitcast %"class.google::protobuf::DescriptorPool"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = call zeroext i1 @_ZN6google8protobuf2io16CodedInputStream7RefreshEv(%"class.google::protobuf::io::CodedInputStream"* nonnull %7) #9
  %32 = load i8, i8* @_ZN18federated_learning22kMaxNumberOfBitsInFlocE, align 1
  %33 = zext i8 %32 to i64
  %34 = shl i64 1, %33
  %35 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 0
  %36 = getelementptr inbounds %"class.google::protobuf::io::CodedInputStream", %"class.google::protobuf::io::CodedInputStream"* %7, i64 0, i32 1
  %37 = load i8, i8* @_ZN18federated_learning18kSortingLshMaxBitsE, align 1
  %38 = zext i8 %37 to i32
  %39 = load i32, i32* @_ZN18federated_learning19kSortingLshSizeMaskE, align 4
  %40 = zext i8 %32 to i32
  br label %41

41:                                               ; preds = %77, %10
  %42 = phi i64 [ 0, %10 ], [ %78, %77 ]
  %43 = phi i64 [ 0, %10 ], [ %68, %77 ]
  %44 = load i8*, i8** %35, align 8
  %45 = load i8*, i8** %36, align 8
  %46 = icmp ult i8* %44, %45
  br i1 %46, label %47, label %53, !prof !35

47:                                               ; preds = %41
  %48 = load i8, i8* %44, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i8 %48, -1
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %44, i64 1
  store i8* %52, i8** %35, align 8
  br label %58

53:                                               ; preds = %41, %47
  %54 = phi i32 [ %49, %47 ], [ 0, %41 ]
  %55 = call i64 @_ZN6google8protobuf2io16CodedInputStream20ReadVarint32FallbackEj(%"class.google::protobuf::io::CodedInputStream"* nonnull %7, i32 %54) #9
  %56 = trunc i64 %55 to i32
  %57 = icmp sgt i64 %55, -1
  br i1 %57, label %58, label %79

58:                                               ; preds = %51, %53
  %59 = phi i32 [ %49, %51 ], [ %56, %53 ]
  %60 = lshr i32 %59, %38
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %58
  %63 = and i32 %39, %59
  %64 = icmp ugt i32 %63, %40
  br i1 %64, label %79, label %65

65:                                               ; preds = %62
  %66 = zext i32 %63 to i64
  %67 = shl i64 1, %66
  %68 = add i64 %67, %43
  %69 = icmp ugt i64 %68, %34
  br i1 %69, label %79, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, %0
  br i1 %71, label %72, label %77

72:                                               ; preds = %70
  %73 = load i32, i32* @_ZN18federated_learning22kSortingLshBlockedMaskE, align 4
  %74 = and i32 %73, %59
  %75 = icmp eq i32 %74, 0
  %76 = zext i1 %75 to i8
  br label %79

77:                                               ; preds = %70
  %78 = add i64 %42, 1
  br label %41

79:                                               ; preds = %65, %62, %58, %53, %72
  %80 = phi i8 [ %76, %72 ], [ 0, %53 ], [ 0, %58 ], [ 0, %62 ], [ 0, %65 ]
  call void @_ZN6google8protobuf2io16CodedInputStreamD1Ev(%"class.google::protobuf::io::CodedInputStream"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %18) #9
  call void @_ZN6google8protobuf2io25CopyingInputStreamAdaptorD1Ev(%"class.google::protobuf::io::CopyingInputStreamAdaptor"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* %15) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #9
  br label %81

81:                                               ; preds = %2, %79
  %82 = phi i8 [ %80, %79 ], [ 0, %2 ]
  %83 = phi i64 [ %42, %79 ], [ undef, %2 ]
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #9
  %84 = insertvalue { i8, i64 } undef, i8 %82, 0
  %85 = insertvalue { i8, i64 } %84, i64 %83, 1
  ret { i8, i64 } %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService18DidApplySortingLshEN4base12OnceCallbackIFvN4absl8optionalImEENS1_7VersionEEEES6_S5_(%"class.federated_learning::FlocSortingLshClustersService"* nocapture readnone, %"class.base::OnceCallback"* nocapture, %"class.base::Version"*, i8, i64) #0 align 2 {
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Version", align 8
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %8, %"class.base::Version"* dereferenceable(24) %2) #9
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  store i8 %3, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %4, i64* %10, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %17 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, %"class.base::Version"*)**
  %20 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, %"class.base::Version"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, %"class.base::Version"*)** %19, align 8
  call void %20(%"class.base::internal::BindStateBase"* %17, %"class.absl::optional"* nonnull dereferenceable(16) %6, %"class.base::Version"* nonnull dereferenceable(24) %8) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18federated_learning29FlocSortingLshClustersService33SetBackgroundTaskRunnerForTestingE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.federated_learning::FlocSortingLshClustersService"* nocapture, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %"class.federated_learning::FlocSortingLshClustersService", %"class.federated_learning::FlocSortingLshClustersService"* %0, i64 0, i32 1
  %9 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %10 = bitcast %class.scoped_refptr* %8 to i64*
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %12 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.base::SequencedTaskRunner"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %12, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe"* %20 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %21) #9
  br label %22

22:                                               ; preds = %7, %14, %19
  br i1 %3, label %31, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #9
  br label %31

31:                                               ; preds = %22, %23, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"*, %"class.base::Version"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.7"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.7"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #1

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

declare void @_ZN6google8protobuf2io25CopyingInputStreamAdaptorC1EPNS1_18CopyingInputStreamEi(%"class.google::protobuf::io::CopyingInputStreamAdaptor"*, %"class.google::protobuf::io::CopyingInputStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6google8protobuf2io16CodedInputStreamD1Ev(%"class.google::protobuf::io::CodedInputStream"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6google8protobuf2io25CopyingInputStreamAdaptorD1Ev(%"class.google::protobuf::io::CopyingInputStreamAdaptor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamD2Ev(%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamD0Ev(%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18federated_learning12_GLOBAL__N_122CopyingFileInputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %3) #9
  %4 = bitcast %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN18federated_learning12_GLOBAL__N_122CopyingFileInputStream4ReadEPvi(%"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream", %"class.federated_learning::(anonymous namespace)::CopyingFileInputStream"* %0, i64 0, i32 1
  %5 = tail call i32 @_ZN4base4File28ReadAtCurrentPosNoBestEffortEPci(%"class.base::File"* %4, i8* %1, i32 %2) #9
  ret i32 %5
}

declare i32 @_ZN6google8protobuf2io18CopyingInputStream4SkipEi(%"class.google::protobuf::io::CopyingInputStream"*, i32) unnamed_addr #1

declare i32 @_ZN4base4File28ReadAtCurrentPosNoBestEffortEPci(%"class.base::File"*, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6google8protobuf2io16CodedInputStream7RefreshEv(%"class.google::protobuf::io::CodedInputStream"*) local_unnamed_addr #1

declare i64 @_ZN6google8protobuf2io16CodedInputStream20ReadVarint32FallbackEj(%"class.google::protobuf::io::CodedInputStream"*, i32) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, i64 } @_ZN4base8internal7InvokerINS0_9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS6_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to { i8, i64 } (i64, %"class.base::FilePath"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i64*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.base::FilePath"*
  %8 = load { i8, i64 } (i64, %"class.base::FilePath"*)*, { i8, i64 } (i64, %"class.base::FilePath"*)** %3, align 8
  %9 = load i64, i64* %5, align 8
  %10 = tail call { i8, i64 } %8(i64 %9, %"class.base::FilePath"* dereferenceable(24) %7) #9
  ret { i8, i64 } %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFN4absl8optionalImEEmRKNS_8FilePathEEJmS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEFvS8_EE7RunOnceEPNS0_13BindStateBaseEOS8_(%"class.base::internal::BindStateBase"*, %"class.absl::optional"* dereferenceable(16)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::OnceCallback"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::Version"*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.federated_learning::FlocSortingLshClustersService"**
  %15 = load %"class.federated_learning::FlocSortingLshClustersService"*, %"class.federated_learning::FlocSortingLshClustersService"** %14, align 8
  %16 = icmp eq %"class.federated_learning::FlocSortingLshClustersService"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EvE6InvokeISC_NS_7WeakPtrIS3_EEJSA_S8_S7_EEEvT_OT0_DpOT1_(i64 %19, i64 %22, %"class.base::WeakPtr"* dereferenceable(16) %5, %"class.base::OnceCallback"* dereferenceable(8) %7, %"class.base::Version"* dereferenceable(24) %9, %"class.absl::optional"* dereferenceable(16) %1) #9
  br label %23

23:                                               ; preds = %2, %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EvE6InvokeISC_NS_7WeakPtrIS3_EEJSA_S8_S7_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.base::OnceCallback"* dereferenceable(8), %"class.base::Version"* dereferenceable(24), %"class.absl::optional"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Version", align 8
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #9
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %15

15:                                               ; preds = %12, %6
  %16 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %18 = bitcast i64* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = select i1 %16, i8* %19, i8* null
  %21 = getelementptr inbounds i8, i8* %20, i64 %1
  %22 = bitcast i8* %21 to %"class.federated_learning::FlocSortingLshClustersService"*
  %23 = and i64 %0, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %15
  %26 = bitcast i8* %21 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %0, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)**
  %31 = load void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)*, void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)** %30, align 8
  br label %34

32:                                               ; preds = %15
  %33 = inttoptr i64 %0 to void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)*
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::OnceCallback"*, %"class.base::Version"*, i8, i64)* [ %31, %25 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* nonnull %9, %"class.base::Version"* dereferenceable(24) %4) #9
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 8
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  call void %35(%"class.federated_learning::FlocSortingLshClustersService"* %22, %"class.base::OnceCallback"* nonnull %8, %"class.base::Version"* nonnull %9, i8 %41, i64 %43) #9
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %9) #9
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #9
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES8_S7_EJNS_7WeakPtrIS3_EESA_S8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::Version"*
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %5) #9
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #9
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %9) #9
  %10 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES9_S8_EJNS_7WeakPtrIS4_EESB_S9_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.federated_learning::FlocSortingLshClustersService"**
  %9 = load %"class.federated_learning::FlocSortingLshClustersService"*, %"class.federated_learning::FlocSortingLshClustersService"** %8, align 8
  %10 = icmp ne %"class.federated_learning::FlocSortingLshClustersService"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.58"*, %"class.base::OnceCallback.58"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIN4absl8optionalImEEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEE(%"class.base::OnceCallback.23"*, %"class.std::__1::unique_ptr.52"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.23", align 8
  %4 = tail call i8* @_Znwm(i64 16) #10
  %5 = bitcast %"class.base::OnceCallback.23"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.23"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.23"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to { i8, i64 } (%"class.base::internal::BindStateBase"*)**
  %14 = load { i8, i64 } (%"class.base::internal::BindStateBase"*)*, { i8, i64 } (%"class.base::internal::BindStateBase"*)** %13, align 8
  %15 = tail call { i8, i64 } %14(%"class.base::internal::BindStateBase"* %11) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %16 = extractvalue { i8, i64 } %15, 0
  store i8 %16, i8* %4, align 16
  %17 = getelementptr inbounds i8, i8* %4, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = extractvalue { i8, i64 } %15, 1
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.52"* %1 to i8**
  store i8* %4, i8** %22, align 8
  %23 = icmp eq %"class.absl::optional"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIN4absl8optionalImEES4_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEE(%"class.base::OnceCallback.24"*, %"class.std::__1::unique_ptr.52"*) #0 comdat {
  %3 = alloca %"class.absl::optional", align 8
  %4 = alloca %"class.base::OnceCallback.24", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.absl::optional"*, %"class.absl::optional"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  store i8 %8, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %10, i64* %12, align 8
  %13 = bitcast %"class.base::OnceCallback.24"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback.24"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.24"* %4 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %4, i64 0, i32 0
  %19 = inttoptr i64 %16 to %"class.base::internal::BindStateBase"*
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %22 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %21, align 8
  call void %22(%"class.base::internal::BindStateBase"* %19, %"class.absl::optional"* nonnull dereferenceable(16) %3) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.23", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.23"*, %"class.std::__1::unique_ptr.52"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.52"**
  %8 = bitcast %"class.base::OnceCallback.23"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = load void (%"class.base::OnceCallback.23"*, %"class.std::__1::unique_ptr.52"*)*, void (%"class.base::OnceCallback.23"*, %"class.std::__1::unique_ptr.52"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.23"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %7, align 8
  call void %9(%"class.base::OnceCallback.23"* nonnull %2, %"class.std::__1::unique_ptr.52"* %14) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS6_NS9_14default_deleteIS6_EEEEEJS8_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.24", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.24"*, %"class.std::__1::unique_ptr.52"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.52"**
  %8 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.24"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = load void (%"class.base::OnceCallback.24"*, %"class.std::__1::unique_ptr.52"*)*, void (%"class.base::OnceCallback.24"*, %"class.std::__1::unique_ptr.52"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.24"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.24"* nonnull %2, %"class.std::__1::unique_ptr.52"* %8) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.52"**
  %6 = load %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"** %5, align 8
  store %"class.std::__1::unique_ptr.52"* null, %"class.std::__1::unique_ptr.52"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.52"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.absl::optional"*, %"class.absl::optional"** %9, align 8
  store %"class.absl::optional"* null, %"class.absl::optional"** %9, align 8
  %11 = icmp eq %"class.absl::optional"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %12, %8
  %15 = bitcast %"class.std::__1::unique_ptr.52"* %6 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #9
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %16, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12ObserverListIN18federated_learning29FlocSortingLshClustersService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12ObserverListIN18federated_learning29FlocSortingLshClustersService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN18federated_learning29FlocSortingLshClustersService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN18federated_learning29FlocSortingLshClustersService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFN4absl8optionalImEEmRKNS_8FilePathEEJRmRS6_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFN4absl8optionalImEEmRKNS_8FilePathEEJRmRS6_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFN4absl8optionalImEEmRKNS_8FilePathEEJRmRS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFN4absl8optionalImEEmRKNS_8FilePathEEJRmRS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base14WeakPtrFactoryIN18federated_learning29FlocSortingLshClustersServiceEE10GetWeakPtrEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base14WeakPtrFactoryIN18federated_learning29FlocSortingLshClustersServiceEE10GetWeakPtrEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN18federated_learning29FlocSortingLshClustersServiceEFvNS2_IFvN4absl8optionalImEENS_7VersionEEEES8_S7_EJNS_7WeakPtrIS4_EESA_RS8_EEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN18federated_learning29FlocSortingLshClustersServiceEFvNS2_IFvN4absl8optionalImEENS_7VersionEEEES8_S7_EJNS_7WeakPtrIS4_EESA_RS8_EEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base8BindOnceIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES7_S6_EJNS_7WeakPtrIS2_EES9_RS7_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8BindOnceIMN18federated_learning29FlocSortingLshClustersServiceEFvNS_12OnceCallbackIFvN4absl8optionalImEENS_7VersionEEEES7_S6_EJNS_7WeakPtrIS2_EES9_RS7_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_RSD_EEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_RSD_EEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN4absl8optionalImEEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS_8internal12OwnedWrapperISB_NS9_ISB_EEEEEEENS1_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN4absl8optionalImEEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS_8internal12OwnedWrapperISB_NS9_ISB_EEEEEEENS1_INSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!35 = !{!"branch_weights", i32 2000, i32 1}
