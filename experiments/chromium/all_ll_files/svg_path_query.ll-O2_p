; ModuleID = '../../third_party/blink/renderer/core/svg/svg_path_query.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_path_query.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGPathConsumer" = type { i32 (...)** }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::SVGPathQuery" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.blink::SVGPathByteStreamSource" = type { i8*, i8* }
%"class.blink::SVGPathNormalizer" = type <{ %"class.blink::SVGPathConsumer"*, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i32, [4 x i8] }>
%"struct.blink::PathSegmentData" = type <{ i32, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, i8, [2 x i8] }>
%"class.blink::(anonymous namespace)::SVGPathTraversalState" = type <{ %"class.blink::SVGPathConsumer", %"class.blink::PathTraversalState", [4 x i8] }>
%"class.blink::PathTraversalState" = type { i32, i8, %"class.blink::FloatPoint", %"class.blink::FloatPoint", float, float, %"class.blink::FloatPoint", float }

$_ZN5blink15SVGPathConsumerD2Ev = comdat any

@__const._ZNK5blink12SVGPathQuery16GetPointAtLengthEf.traversal_state = private unnamed_addr constant <{ %"class.blink::SVGPathConsumer", { i32, i8, [3 x i8], %"class.blink::FloatPoint", %"class.blink::FloatPoint", float, float, %"class.blink::FloatPoint", float }, [4 x i8] }> <{ %"class.blink::SVGPathConsumer" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, { i32, i8, [3 x i8], %"class.blink::FloatPoint", %"class.blink::FloatPoint", float, float, %"class.blink::FloatPoint", float } { i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink12_GLOBAL__N_121SVGPathTraversalStateE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPathConsumer"*)* @_ZN5blink15SVGPathConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SVGPathTraversalState"*)* @_ZN5blink12_GLOBAL__N_121SVGPathTraversalStateD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SVGPathTraversalState"*, %"struct.blink::PathSegmentData"*)* @_ZN5blink12_GLOBAL__N_121SVGPathTraversalState11EmitSegmentERKNS_15PathSegmentDataE to i8*)] }, align 8

@_ZN5blink12SVGPathQueryC1ERKNS_17SVGPathByteStreamE = hidden unnamed_addr alias void (%"class.blink::SVGPathQuery"*, %"class.blink::SVGPathByteStream"*), void (%"class.blink::SVGPathQuery"*, %"class.blink::SVGPathByteStream"*)* @_ZN5blink12SVGPathQueryC2ERKNS_17SVGPathByteStreamE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12SVGPathQueryC2ERKNS_17SVGPathByteStreamE(%"class.blink::SVGPathQuery"* nocapture, %"class.blink::SVGPathByteStream"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGPathQuery", %"class.blink::SVGPathQuery"* %0, i64 0, i32 0
  store %"class.blink::SVGPathByteStream"* %1, %"class.blink::SVGPathByteStream"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12SVGPathQuery14GetTotalLengthEv(%"class.blink::SVGPathQuery"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %3 = alloca %"class.blink::SVGPathNormalizer", align 8
  %4 = alloca %"struct.blink::PathSegmentData", align 4
  %5 = alloca %"class.blink::(anonymous namespace)::SVGPathTraversalState", align 8
  %6 = bitcast %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (<{ %"class.blink::SVGPathConsumer", { i32, i8, [3 x i8], %"class.blink::FloatPoint", %"class.blink::FloatPoint", float, float, %"class.blink::FloatPoint", float }, [4 x i8] }>* @__const._ZNK5blink12SVGPathQuery16GetPointAtLengthEf.traversal_state to i8*), i64 56, i1 false)
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SVGPathTraversalStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 1
  call void @_ZN5blink18PathTraversalStateC1ENS0_19PathTraversalActionE(%"class.blink::PathTraversalState"* %8, i32 0) #7
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 1, i32 5
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SVGPathQuery", %"class.blink::SVGPathQuery"* %0, i64 0, i32 0
  %11 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %10, align 8
  %12 = bitcast %"class.blink::SVGPathByteStreamSource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %2, i64 0, i32 1
  %15 = bitcast %"class.blink::SVGPathByteStream"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::SVGPathByteStreamSource"* %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = inttoptr i64 %16 to i8*
  %19 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  store i8* %22, i8** %14, align 8
  %23 = bitcast %"class.blink::SVGPathNormalizer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %3, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %3, i64 0, i32 4
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 0
  %28 = bitcast i32* %26 to i64*
  store i64 -6148914691236517206, i64* %28, align 8
  store %"class.blink::SVGPathConsumer"* %27, %"class.blink::SVGPathConsumer"** %24, align 8
  %29 = bitcast float* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 28, i1 false) #7
  %30 = icmp ne i32 %20, 0
  %31 = bitcast %"struct.blink::PathSegmentData"* %4 to i8*
  %32 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 4
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 1, i32 1
  %36 = bitcast float* %33 to i8*
  %37 = bitcast i8* %34 to i32*
  br label %38

38:                                               ; preds = %40, %1
  %39 = phi i1 [ %30, %1 ], [ %43, %40 ]
  br i1 %39, label %40, label %46

40:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #7
  store i32 -1431655766, i32* %32, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 -1, i64 24, i1 false) #7
  store i32 -1431655766, i32* %37, align 4
  call void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* nonnull sret %4, %"class.blink::SVGPathByteStreamSource"* nonnull %2) #7
  call void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* nonnull %3, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %4) #7
  %41 = load i8*, i8** %13, align 8
  %42 = load i8*, i8** %14, align 8
  %43 = icmp ult i8* %41, %42
  %44 = load i8, i8* %35, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #7
  br i1 %45, label %38, label %46

46:                                               ; preds = %38, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %5, i64 0, i32 1, i32 4
  %48 = load float, float* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #7
  ret float %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink12SVGPathQuery16GetPointAtLengthEf(%"class.blink::SVGPathQuery"* nocapture readonly, float) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %4 = alloca %"class.blink::SVGPathNormalizer", align 8
  %5 = alloca %"struct.blink::PathSegmentData", align 4
  %6 = alloca %"class.blink::(anonymous namespace)::SVGPathTraversalState", align 8
  %7 = bitcast %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ %"class.blink::SVGPathConsumer", { i32, i8, [3 x i8], %"class.blink::FloatPoint", %"class.blink::FloatPoint", float, float, %"class.blink::FloatPoint", float }, [4 x i8] }>* @__const._ZNK5blink12SVGPathQuery16GetPointAtLengthEf.traversal_state to i8*), i64 56, i1 false)
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SVGPathTraversalStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 1
  call void @_ZN5blink18PathTraversalStateC1ENS0_19PathTraversalActionE(%"class.blink::PathTraversalState"* %9, i32 1) #7
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 1, i32 5
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::SVGPathQuery", %"class.blink::SVGPathQuery"* %0, i64 0, i32 0
  %12 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %11, align 8
  %13 = bitcast %"class.blink::SVGPathByteStreamSource"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %3, i64 0, i32 1
  %16 = bitcast %"class.blink::SVGPathByteStream"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::SVGPathByteStreamSource"* %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = inttoptr i64 %17 to i8*
  %20 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  store i8* %23, i8** %15, align 8
  %24 = bitcast %"class.blink::SVGPathNormalizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %4, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %4, i64 0, i32 4
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 0
  %29 = bitcast i32* %27 to i64*
  store i64 -6148914691236517206, i64* %29, align 8
  store %"class.blink::SVGPathConsumer"* %28, %"class.blink::SVGPathConsumer"** %25, align 8
  %30 = bitcast float* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 28, i1 false) #7
  %31 = icmp ne i32 %21, 0
  %32 = bitcast %"struct.blink::PathSegmentData"* %5 to i8*
  %33 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %5, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %5, i64 0, i32 4
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 1, i32 1
  %37 = bitcast float* %34 to i8*
  %38 = bitcast i8* %35 to i32*
  br label %39

39:                                               ; preds = %41, %2
  %40 = phi i1 [ %31, %2 ], [ %44, %41 ]
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #7
  store i32 -1431655766, i32* %33, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 -1, i64 24, i1 false) #7
  store i32 -1431655766, i32* %38, align 4
  call void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* nonnull sret %5, %"class.blink::SVGPathByteStreamSource"* nonnull %3) #7
  call void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* nonnull %4, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %5) #7
  %42 = load i8*, i8** %14, align 8
  %43 = load i8*, i8** %15, align 8
  %44 = icmp ult i8* %42, %43
  %45 = load i8, i8* %36, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #7
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  %48 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %6, i64 0, i32 1, i32 2
  %49 = bitcast %"class.blink::FloatPoint"* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #7
  ret <2 x float> %50
}

declare void @_ZN5blink18PathTraversalStateC1ENS0_19PathTraversalActionE(%"class.blink::PathTraversalState"*, i32) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121SVGPathTraversalStateD0Ev(%"class.blink::(anonymous namespace)::SVGPathTraversalState"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121SVGPathTraversalState11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::(anonymous namespace)::SVGPathTraversalState"*, %"struct.blink::PathSegmentData"* dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %0, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %28 [
    i32 2, label %10
    i32 4, label %13
    i32 1, label %16
    i32 6, label %18
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %12 = tail call float @_ZN5blink18PathTraversalState6MoveToERKNS_10FloatPointE(%"class.blink::PathTraversalState"* %3, %"class.blink::FloatPoint"* dereferenceable(8) %11) #7
  br label %23

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %15 = tail call float @_ZN5blink18PathTraversalState6LineToERKNS_10FloatPointE(%"class.blink::PathTraversalState"* %3, %"class.blink::FloatPoint"* dereferenceable(8) %14) #7
  br label %23

16:                                               ; preds = %7
  %17 = tail call float @_ZN5blink18PathTraversalState12CloseSubpathEv(%"class.blink::PathTraversalState"* %3) #7
  br label %23

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 2
  %20 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %22 = tail call float @_ZN5blink18PathTraversalState13CubicBezierToERKNS_10FloatPointES3_S3_(%"class.blink::PathTraversalState"* %3, %"class.blink::FloatPoint"* dereferenceable(8) %19, %"class.blink::FloatPoint"* dereferenceable(8) %20, %"class.blink::FloatPoint"* dereferenceable(8) %21) #7
  br label %23

23:                                               ; preds = %10, %13, %16, %18
  %24 = phi float [ %22, %18 ], [ %17, %16 ], [ %15, %13 ], [ %12, %10 ]
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::SVGPathTraversalState", %"class.blink::(anonymous namespace)::SVGPathTraversalState"* %0, i64 0, i32 1, i32 4
  %26 = load float, float* %25, align 8
  %27 = fadd float %24, %26
  store float %27, float* %25, align 8
  br label %28

28:                                               ; preds = %23, %7
  tail call void @_ZN5blink18PathTraversalState14ProcessSegmentEv(%"class.blink::PathTraversalState"* %3) #7
  br label %29

29:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15SVGPathConsumerD2Ev(%"class.blink::SVGPathConsumer"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare float @_ZN5blink18PathTraversalState6MoveToERKNS_10FloatPointE(%"class.blink::PathTraversalState"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #4

declare float @_ZN5blink18PathTraversalState6LineToERKNS_10FloatPointE(%"class.blink::PathTraversalState"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #4

declare float @_ZN5blink18PathTraversalState12CloseSubpathEv(%"class.blink::PathTraversalState"*) local_unnamed_addr #4

declare float @_ZN5blink18PathTraversalState13CubicBezierToERKNS_10FloatPointES3_S3_(%"class.blink::PathTraversalState"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink18PathTraversalState14ProcessSegmentEv(%"class.blink::PathTraversalState"*) local_unnamed_addr #4

declare void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* sret, %"class.blink::SVGPathByteStreamSource"*) local_unnamed_addr #4

declare void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"*, %"struct.blink::PathSegmentData"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
