; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGMerge.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGMerge.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::Merge" = type { %"class.sksg::GeometryNode.base", %"class.std::__1::vector.1", %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"*, %"class.std::__1::__compressed_pair" }
%"struct.sksg::Merge::Rec" = type <{ %class.sk_sp, i32, [4 x i8] }>
%class.sk_sp = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sksg::Merge::Rec"* }
%class.SkPath = type <{ %class.sk_sp.3, i32, %"struct.std::__1::atomic.6", %"struct.std::__1::atomic.6", i8, i8 }>
%class.sk_sp.3 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.4, %class.SkTDArray.5, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.4 = type { i8*, i32, i32 }
%class.SkTDArray.5 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.11 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.11 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.12", [3 x i8] }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%class.sk_sp.16 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.17, [384 x i64], %class.sk_sp.18, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.22" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.17 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.18 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkPaint = type <{ %class.sk_sp.28, %class.sk_sp.29, %class.sk_sp.30, %class.sk_sp.31, %class.sk_sp.32, %struct.SkRGBA4f, float, float, %union.anon.33, [4 x i8] }>
%class.sk_sp.28 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.29 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.30 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.31 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.32 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.33 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%class.SkOpBuilder = type { %class.SkTArray, %class.SkTDArray.34 }
%class.SkTArray = type { %class.SkPath*, i64 }
%class.SkTDArray.34 = type { i32*, i32, i32 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg5MergeE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Merge"*)* @_ZN4sksg5MergeD2Ev to i8*), i8* bitcast (void (%"class.sksg::Merge"*)* @_ZN4sksg5MergeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Merge"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg5Merge12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::Merge"*, %class.SkCanvas*, i1)* @_ZNK4sksg5Merge6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::Merge"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg5Merge6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::Merge"*, %struct.SkPoint*)* @_ZNK4sksg5Merge10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::Merge"*)* @_ZNK4sksg5Merge8onAsPathEv to i8*)] }, align 8
@switch.table._ZN4sksg5Merge12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 4, i32 3], align 4

@_ZN4sksg5MergeC1EONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"class.sksg::Merge"*, %"class.std::__1::vector.1"*), void (%"class.sksg::Merge"*, %"class.std::__1::vector.1"*)* @_ZN4sksg5MergeC2EONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE
@_ZN4sksg5MergeD1Ev = hidden unnamed_addr alias void (%"class.sksg::Merge"*), void (%"class.sksg::Merge"*)* @_ZN4sksg5MergeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5MergeC2EONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE(%"class.sksg::Merge"*, %"class.std::__1::vector.1"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.16, align 8
  %4 = bitcast %"class.sksg::Merge"* %0 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* %4) #5
  %5 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg5MergeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.sksg::Merge::Rec"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.sksg::Merge::Rec"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.sksg::Merge::Rec"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.sksg::Merge::Rec"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.1"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #5
  %22 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %22) #5
  %23 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0, i32 0
  %24 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %23, align 8
  %25 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %14, align 8
  %26 = icmp eq %"struct.sksg::Merge::Rec"* %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.sksg::Merge"* %0 to %"class.sksg::Node"*
  %29 = bitcast %class.sk_sp.16* %3 to i8*
  %30 = bitcast %class.sk_sp.16* %3 to %"class.sksg::GeometryNode"**
  %31 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %3, i64 0, i32 0
  br label %33

32:                                               ; preds = %54, %2
  ret void

33:                                               ; preds = %27, %54
  %34 = phi %"struct.sksg::Merge::Rec"* [ %24, %27 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  %35 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %35, align 8
  %37 = icmp eq %"class.sksg::GeometryNode"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %33, %38
  store %"class.sksg::GeometryNode"* %36, %"class.sksg::GeometryNode"** %30, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %28, %class.sk_sp.16* nonnull dereferenceable(8) %3) #5
  %42 = load %"class.sksg::Node"*, %"class.sksg::Node"** %31, align 8
  %43 = icmp eq %"class.sksg::Node"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %"class.sksg::Node"* %42 to %class.SkRefCntBase*
  %50 = bitcast %"class.sksg::Node"* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #5
  br label %54

54:                                               ; preds = %41, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  %55 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %34, i64 1
  %56 = icmp eq %"struct.sksg::Merge::Rec"* %55, %25
  br i1 %56, label %32, label %33
}

declare void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"*) unnamed_addr #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.16* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5MergeD2Ev(%"class.sksg::Merge"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.16, align 8
  %3 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg5MergeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %7, align 8
  %9 = icmp eq %"struct.sksg::Merge::Rec"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.sksg::Merge"* %0 to %"class.sksg::Node"*
  %12 = bitcast %class.sk_sp.16* %2 to i8*
  %13 = bitcast %class.sk_sp.16* %2 to %"class.sksg::GeometryNode"**
  %14 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %2, i64 0, i32 0
  br label %48

15:                                               ; preds = %69, %1
  %16 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %16) #5
  %17 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %5, align 8
  %18 = icmp eq %"struct.sksg::Merge::Rec"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = bitcast %"struct.sksg::Merge::Rec"* %17 to i8*
  %21 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %7, align 8
  %22 = icmp eq %"struct.sksg::Merge::Rec"* %21, %17
  br i1 %22, label %44, label %23

23:                                               ; preds = %19, %39
  %24 = phi %"struct.sksg::Merge::Rec"* [ %25, %39 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %24, i64 -1
  %26 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %26, align 8
  %28 = icmp eq %"class.sksg::GeometryNode"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %"class.sksg::GeometryNode"* %27 to %class.SkRefCntBase*
  %35 = bitcast %"class.sksg::GeometryNode"* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #5
  br label %39

39:                                               ; preds = %33, %29, %23
  %40 = icmp eq %"struct.sksg::Merge::Rec"* %25, %17
  br i1 %40, label %41, label %23

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %19
  %45 = phi i8* [ %43, %41 ], [ %20, %19 ]
  store %"struct.sksg::Merge::Rec"* %17, %"struct.sksg::Merge::Rec"** %7, align 8
  call void @_ZdlPv(i8* %45) #6
  br label %46

46:                                               ; preds = %15, %44
  %47 = bitcast %"class.sksg::Merge"* %0 to %"class.sksg::Node"*
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %47) #5
  ret void

48:                                               ; preds = %10, %69
  %49 = phi %"struct.sksg::Merge::Rec"* [ %6, %10 ], [ %70, %69 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %50 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %50, align 8
  %52 = icmp eq %"class.sksg::GeometryNode"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  br label %56

56:                                               ; preds = %48, %53
  store %"class.sksg::GeometryNode"* %51, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %11, %class.sk_sp.16* nonnull dereferenceable(8) %2) #5
  %57 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %58 = icmp eq %"class.sksg::Node"* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %"class.sksg::Node"* %57 to %class.SkRefCntBase*
  %65 = bitcast %"class.sksg::Node"* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #5
  br label %69

69:                                               ; preds = %56, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  %70 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %49, i64 1
  %71 = icmp eq %"struct.sksg::Merge::Rec"* %70, %8
  br i1 %71, label %15, label %48
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.16* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5MergeD0Ev(%"class.sksg::Merge"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4sksg5MergeD2Ev(%"class.sksg::Merge"* %0) #5
  %2 = bitcast %"class.sksg::Merge"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg5Merge6onClipEP8SkCanvasb(%"class.sksg::Merge"*, %class.SkCanvas*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  tail call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %1, %class.SkPath* dereferenceable(16) %4, i32 1, i1 zeroext %2) #5
  ret void
}

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg5Merge6onDrawEP8SkCanvasRK7SkPaint(%"class.sksg::Merge"*, %class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  tail call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* %1, %class.SkPath* dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2) #5
  ret void
}

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4sksg5Merge10onContainsERK7SkPoint(%"class.sksg::Merge"*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = tail call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* %3, float %5, float %7) #5
  ret i1 %8
}

declare zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg5Merge8onAsPathEv(%class.SkPath* noalias sret, %"class.sksg::Merge"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %1, i64 0, i32 2
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %0, %class.SkPath* dereferenceable(16) %3) #5
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg5Merge12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Merge"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.SkOpBuilder, align 8
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = bitcast %class.SkOpBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #5
  %9 = getelementptr inbounds %class.SkOpBuilder, %class.SkOpBuilder* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.SkOpBuilder, %class.SkOpBuilder* %5, i64 0, i32 0, i32 1
  store %class.SkPath* null, %class.SkPath** %9, align 8
  store i64 1, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkOpBuilder, %class.SkOpBuilder* %5, i64 0, i32 1
  %12 = bitcast %class.SkTDArray.34* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #5
  %13 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 2
  %14 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %13) #5
  %15 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %15, align 8
  %17 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %17, align 8
  %19 = icmp eq %"struct.sksg::Merge::Rec"* %16, %18
  br i1 %19, label %80, label %20

20:                                               ; preds = %3
  %21 = bitcast %class.SkPath* %7 to i8*
  %22 = bitcast %class.SkPath* %6 to i8*
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 0, i32 0
  %24 = bitcast %class.SkMatrix* %4 to i8*
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  %28 = bitcast %class.SkMatrix* %4 to <4 x float>*
  %29 = bitcast float* %26 to <4 x float>*
  br label %32

30:                                               ; preds = %72
  %31 = icmp eq i8 %75, 0
  br i1 %31, label %80, label %78

32:                                               ; preds = %20, %72
  %33 = phi %"struct.sksg::Merge::Rec"* [ %16, %20 ], [ %76, %72 ]
  %34 = phi i8 [ 0, %20 ], [ %75, %72 ]
  %35 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %33, i64 0, i32 0, i32 0
  %36 = bitcast %"struct.sksg::Merge::Rec"* %33 to %"class.sksg::Node"**
  %37 = load %"class.sksg::Node"*, %"class.sksg::Node"** %36, align 8
  %38 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %37, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %39 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %33, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %57

42:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #5
  %43 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %35, align 8
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %6, %"class.sksg::GeometryNode"* %43) #5
  %44 = icmp eq i8 %34, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = call zeroext i1 @_ZN11SkOpBuilder7resolveEP6SkPath(%class.SkOpBuilder* nonnull %5, %class.SkPath* %13) #5
  br label %47

47:                                               ; preds = %45, %42
  %48 = load %class.SkPathRef*, %class.SkPathRef** %23, align 8
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %48, i64 0, i32 4, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %13, %class.SkPath* nonnull dereferenceable(16) %6) #5
  br label %72

54:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #5
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 16
  store float 1.000000e+00, float* %27, align 16
  store i32 16, i32* %25, align 4
  %55 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #5
  %56 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %13, %class.SkPath* nonnull dereferenceable(16) %6, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #5
  br label %72

57:                                               ; preds = %32
  %58 = icmp eq i8 %34, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  call void @_ZN11SkOpBuilder3addERK6SkPath8SkPathOp(%class.SkOpBuilder* nonnull %5, %class.SkPath* dereferenceable(16) %13, i32 2) #5
  br label %60

60:                                               ; preds = %57, %59
  %61 = phi i8 [ 1, %59 ], [ %34, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #5
  %62 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %35, align 8
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %7, %"class.sksg::GeometryNode"* %62) #5
  %63 = load i32, i32* %39, align 8
  %64 = add i32 %63, -2
  %65 = icmp ult i32 %64, 4
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = sext i32 %64 to i64
  %68 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN4sksg5Merge12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix, i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %66, %60
  %71 = phi i32 [ 2, %60 ], [ %69, %66 ]
  call void @_ZN11SkOpBuilder3addERK6SkPath8SkPathOp(%class.SkOpBuilder* nonnull %5, %class.SkPath* nonnull dereferenceable(16) %7, i32 %71) #5
  br label %72

72:                                               ; preds = %54, %52, %70
  %73 = phi %class.SkPath* [ %7, %70 ], [ %6, %52 ], [ %6, %54 ]
  %74 = phi i8* [ %21, %70 ], [ %22, %52 ], [ %22, %54 ]
  %75 = phi i8 [ %61, %70 ], [ 0, %52 ], [ 0, %54 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %73) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #5
  %76 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %33, i64 1
  %77 = icmp eq %"struct.sksg::Merge::Rec"* %76, %18
  br i1 %77, label %30, label %32

78:                                               ; preds = %30
  %79 = call zeroext i1 @_ZN11SkOpBuilder7resolveEP6SkPath(%class.SkOpBuilder* nonnull %5, %class.SkPath* %13) #5
  br label %80

80:                                               ; preds = %3, %30, %78
  call void @_ZN6SkPath11shrinkToFitEv(%class.SkPath* %13) #5
  %81 = call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* %13) #5
  %82 = bitcast %class.SkTDArray.34* %11 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_Z7sk_freePv(i8* %83) #5
  %84 = load i64, i64* %10, align 8
  %85 = and i64 %84, 4294967294
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %91, %80
  %88 = phi i64 [ %84, %80 ], [ %96, %91 ]
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %103, label %100

91:                                               ; preds = %80, %91
  %92 = phi i64 [ %95, %91 ], [ 0, %80 ]
  %93 = load %class.SkPath*, %class.SkPath** %9, align 8
  %94 = getelementptr inbounds %class.SkPath, %class.SkPath* %93, i64 %92
  call void @_ZN6SkPathD1Ev(%class.SkPath* %94) #5
  %95 = add nuw nsw i64 %92, 1
  %96 = load i64, i64* %10, align 8
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = icmp ult i64 %95, %98
  br i1 %99, label %91, label %87

100:                                              ; preds = %87
  %101 = bitcast %class.SkOpBuilder* %5 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_Z7sk_freePv(i8* %102) #5
  br label %103

103:                                              ; preds = %87, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #5
  ret { <2 x float>, <2 x float> } %81
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #1

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret, %"class.sksg::GeometryNode"*) local_unnamed_addr #1

declare void @_ZN11SkOpBuilder3addERK6SkPath8SkPathOp(%class.SkOpBuilder*, %class.SkPath* dereferenceable(16), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN11SkOpBuilder7resolveEP6SkPath(%class.SkOpBuilder*, %class.SkPath*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #5
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #1

declare void @_ZN6SkPath11shrinkToFitEv(%class.SkPath*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
