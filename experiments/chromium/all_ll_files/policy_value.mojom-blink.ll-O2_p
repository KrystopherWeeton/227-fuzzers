; ModuleID = 'gen/third_party/blink/public/mojom/permissions_policy/policy_value.mojom-blink.cc'
source_filename = "gen/third_party/blink/public/mojom/permissions_policy/policy_value.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"union.blink::mojom::blink::PolicyValue::Union_" = type { double }
%"class.blink::mojom::blink::PolicyValue" = type { i32, %"union.blink::mojom::blink::PolicyValue::Union_" }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.blink::mojom::internal::PolicyValue_Data" = type { i32, i32, %"union.blink::mojom::internal::PolicyValue_Data::Union_" }
%"union.blink::mojom::internal::PolicyValue_Data::Union_" = type { double }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::PolicyValue", i32, [4 x i8] }>

@__const._ZN5blink5mojom5blink11PolicyValue12NewBoolValueEb.result = private unnamed_addr constant <{ { i32, [4 x i8], %"union.blink::mojom::blink::PolicyValue::Union_" }, i32, [4 x i8] }> <{ { i32, [4 x i8], %"union.blink::mojom::blink::PolicyValue::Union_" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"union.blink::mojom::blink::PolicyValue::Union_" { double 0xFFFFFFFFFFFFFFFF } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN5blink5mojom5blink11PolicyValueC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PolicyValue"*), void (%"class.blink::mojom::blink::PolicyValue"*)* @_ZN5blink5mojom5blink11PolicyValueC2Ev
@_ZN5blink5mojom5blink11PolicyValueD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PolicyValue"*), void (%"class.blink::mojom::blink::PolicyValue"*)* @_ZN5blink5mojom5blink11PolicyValueD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink11PolicyValueC2Ev(%"class.blink::mojom::blink::PolicyValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %4 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %3 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValueD2Ev(%"class.blink::mojom::blink::PolicyValue"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValue13DestroyActiveEv(%"class.blink::mojom::blink::PolicyValue"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValue14set_null_valueEb(%"class.blink::mojom::blink::PolicyValue"* nocapture, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i32 0, i32* %4, align 8
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %10 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %9 to i8*
  store i8 %3, i8* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValue14set_bool_valueEb(%"class.blink::mojom::blink::PolicyValue"* nocapture, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i32 1, i32* %4, align 8
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %10 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %9 to i8*
  store i8 %3, i8* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValue20set_dec_double_valueEd(%"class.blink::mojom::blink::PolicyValue"* nocapture, double) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 2, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1, i32 0
  store double %1, double* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink11PolicyValue14set_enum_valueEi(%"class.blink::mojom::blink::PolicyValue"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 3, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %9 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %8 to i32*
  store i32 %1, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink5mojom5blink11PolicyValue4HashEm(%"class.blink::mojom::blink::PolicyValue"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = shl i64 %1, 6
  %7 = lshr i64 %1, 2
  %8 = add i64 %7, %6
  %9 = add i64 %8, %5
  %10 = xor i64 %9, %1
  switch i32 %4, label %52 [
    i32 0, label %11
    i32 1, label %21
    i32 2, label %31
    i32 3, label %42
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %13 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %12 to i8*
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = zext i8 %14 to i64
  %16 = shl i64 %10, 6
  %17 = or i64 %16, %15
  %18 = lshr i64 %10, 2
  %19 = add i64 %17, %18
  %20 = xor i64 %19, %10
  br label %52

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %23 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %22 to i8*
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = zext i8 %24 to i64
  %26 = shl i64 %10, 6
  %27 = or i64 %26, %25
  %28 = lshr i64 %10, 2
  %29 = add i64 %27, %28
  %30 = xor i64 %29, %10
  br label %52

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1, i32 0
  %33 = load double, double* %32, align 8
  %34 = fcmp oeq double %33, 0.000000e+00
  %35 = bitcast double %33 to i64
  %36 = select i1 %34, i64 0, i64 %35
  %37 = shl i64 %10, 6
  %38 = lshr i64 %10, 2
  %39 = add i64 %38, %37
  %40 = add i64 %39, %36
  %41 = xor i64 %40, %10
  br label %52

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.blink::mojom::blink::PolicyValue", %"class.blink::mojom::blink::PolicyValue"* %0, i64 0, i32 1
  %44 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = shl i64 %10, 6
  %48 = lshr i64 %10, 2
  %49 = add i64 %48, %47
  %50 = add i64 %49, %46
  %51 = xor i64 %50, %10
  br label %52

52:                                               ; preds = %2, %42, %31, %21, %11
  %53 = phi i64 [ %51, %42 ], [ %41, %31 ], [ %30, %21 ], [ %20, %11 ], [ %10, %2 ]
  ret i64 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom5blink11PolicyValue8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal16PolicyValue_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8* %0, %"class.mojo::internal::ValidationContext"* %1, i1 zeroext false) #7
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal16PolicyValue_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8*, %"class.mojo::internal::ValidationContext"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo11UnionTraitsIN5blink5mojom19PolicyValueDataViewENS_16InlinedStructPtrINS2_5blink11PolicyValueEEEE4ReadES3_PS7_(%"class.blink::mojom::internal::PolicyValue_Data"*, %"class.mojo::InlinedStructPtr"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 1
  switch i32 %4, label %53 [
    i32 0, label %5
    i32 1, label %17
    i32 2, label %29
    i32 3, label %39
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %0, i64 0, i32 2
  %7 = bitcast %"union.blink::mojom::internal::PolicyValue_Data::Union_"* %6 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 1
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %11 to i8*
  %13 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %13, i64 9
  store i32 0, i32* %10, align 8
  store i32 -1431655766, i32* %15, align 4
  store i8 %9, i8* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* nonnull align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (<{ { i32, [4 x i8], %"union.blink::mojom::blink::PolicyValue::Union_" }, i32, [4 x i8] }>* @__const._ZN5blink5mojom5blink11PolicyValue12NewBoolValueEb.result to i8*), i64 9) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false)
  br label %51

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %0, i64 0, i32 2
  %19 = bitcast %"union.blink::mojom::internal::PolicyValue_Data::Union_"* %18 to i8*
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1
  %24 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %23 to i8*
  %25 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %25, i64 9
  store i32 1, i32* %22, align 8
  store i32 -1431655766, i32* %27, align 4
  store i8 %21, i8* %24, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* nonnull align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (<{ { i32, [4 x i8], %"union.blink::mojom::blink::PolicyValue::Union_" }, i32, [4 x i8] }>* @__const._ZN5blink5mojom5blink11PolicyValue12NewBoolValueEb.result to i8*), i64 9) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false)
  br label %51

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %0, i64 0, i32 2, i32 0
  %31 = bitcast double* %30 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1, i32 0
  store i32 2, i32* %33, align 8
  store i32 -1431655766, i32* %36, align 4
  %38 = bitcast double* %37 to i64*
  store i64 %32, i64* %38, align 8
  br label %51

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %0, i64 0, i32 2
  %41 = bitcast %"union.blink::mojom::internal::PolicyValue_Data::Union_"* %40 to i32*
  %42 = load i32, i32* %41, align 1
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0, i32 1
  %45 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  %47 = bitcast i8* %46 to i32*
  %48 = bitcast %"union.blink::mojom::blink::PolicyValue::Union_"* %44 to i32*
  %49 = getelementptr inbounds i8, i8* %45, i64 12
  %50 = bitcast i8* %49 to i32*
  store i32 3, i32* %43, align 8
  store i32 -1431655766, i32* %47, align 4
  store i32 %42, i32* %48, align 8
  store i32 -1, i32* %50, align 4
  br label %51

51:                                               ; preds = %39, %29, %17, %5
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  store i32 1, i32* %52, align 4
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi i1 [ false, %2 ], [ true, %51 ]
  ret i1 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
