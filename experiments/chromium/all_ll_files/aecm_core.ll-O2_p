; ModuleID = '../../third_party/webrtc/modules/audio_processing/aecm/aecm_core.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aecm/aecm_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::AecmCore" = type { i32, i32, i32, i32, i32, %struct.RingBuffer*, %struct.RingBuffer*, %struct.RingBuffer*, %struct.RingBuffer*, [256 x i16], i16, i32, i8*, i8*, i16, [6500 x i16], i32, [100 x i32], i16, i16, i32, i16, i16, i16, i16, [64 x i16], i16, [64 x i16], [64 x i16], [73 x i16], [73 x i16], [73 x i32], [144 x i16], [144 x i16], [144 x i16], [72 x i16], i16*, i16*, i32*, i16*, i16*, i16*, i16*, [65 x i32], [65 x i16], [65 x i32], [65 x i32], [65 x i32], i16, i16, i32, i32, i32, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.RealFFT* }
%struct.RingBuffer = type { i64, i64, i64, i64, i32, i8* }
%struct.RealFFT = type opaque

@_ZN6webrtc20WebRtcAecm_kCosTableE = hidden local_unnamed_addr constant [360 x i16] [i16 8192, i16 8190, i16 8187, i16 8180, i16 8172, i16 8160, i16 8147, i16 8130, i16 8112, i16 8091, i16 8067, i16 8041, i16 8012, i16 7982, i16 7948, i16 7912, i16 7874, i16 7834, i16 7791, i16 7745, i16 7697, i16 7647, i16 7595, i16 7540, i16 7483, i16 7424, i16 7362, i16 7299, i16 7233, i16 7164, i16 7094, i16 7021, i16 6947, i16 6870, i16 6791, i16 6710, i16 6627, i16 6542, i16 6455, i16 6366, i16 6275, i16 6182, i16 6087, i16 5991, i16 5892, i16 5792, i16 5690, i16 5586, i16 5481, i16 5374, i16 5265, i16 5155, i16 5043, i16 4930, i16 4815, i16 4698, i16 4580, i16 4461, i16 4341, i16 4219, i16 4096, i16 3971, i16 3845, i16 3719, i16 3591, i16 3462, i16 3331, i16 3200, i16 3068, i16 2935, i16 2801, i16 2667, i16 2531, i16 2395, i16 2258, i16 2120, i16 1981, i16 1842, i16 1703, i16 1563, i16 1422, i16 1281, i16 1140, i16 998, i16 856, i16 713, i16 571, i16 428, i16 285, i16 142, i16 0, i16 -142, i16 -285, i16 -428, i16 -571, i16 -713, i16 -856, i16 -998, i16 -1140, i16 -1281, i16 -1422, i16 -1563, i16 -1703, i16 -1842, i16 -1981, i16 -2120, i16 -2258, i16 -2395, i16 -2531, i16 -2667, i16 -2801, i16 -2935, i16 -3068, i16 -3200, i16 -3331, i16 -3462, i16 -3591, i16 -3719, i16 -3845, i16 -3971, i16 -4095, i16 -4219, i16 -4341, i16 -4461, i16 -4580, i16 -4698, i16 -4815, i16 -4930, i16 -5043, i16 -5155, i16 -5265, i16 -5374, i16 -5481, i16 -5586, i16 -5690, i16 -5792, i16 -5892, i16 -5991, i16 -6087, i16 -6182, i16 -6275, i16 -6366, i16 -6455, i16 -6542, i16 -6627, i16 -6710, i16 -6791, i16 -6870, i16 -6947, i16 -7021, i16 -7094, i16 -7164, i16 -7233, i16 -7299, i16 -7362, i16 -7424, i16 -7483, i16 -7540, i16 -7595, i16 -7647, i16 -7697, i16 -7745, i16 -7791, i16 -7834, i16 -7874, i16 -7912, i16 -7948, i16 -7982, i16 -8012, i16 -8041, i16 -8067, i16 -8091, i16 -8112, i16 -8130, i16 -8147, i16 -8160, i16 -8172, i16 -8180, i16 -8187, i16 -8190, i16 -8191, i16 -8190, i16 -8187, i16 -8180, i16 -8172, i16 -8160, i16 -8147, i16 -8130, i16 -8112, i16 -8091, i16 -8067, i16 -8041, i16 -8012, i16 -7982, i16 -7948, i16 -7912, i16 -7874, i16 -7834, i16 -7791, i16 -7745, i16 -7697, i16 -7647, i16 -7595, i16 -7540, i16 -7483, i16 -7424, i16 -7362, i16 -7299, i16 -7233, i16 -7164, i16 -7094, i16 -7021, i16 -6947, i16 -6870, i16 -6791, i16 -6710, i16 -6627, i16 -6542, i16 -6455, i16 -6366, i16 -6275, i16 -6182, i16 -6087, i16 -5991, i16 -5892, i16 -5792, i16 -5690, i16 -5586, i16 -5481, i16 -5374, i16 -5265, i16 -5155, i16 -5043, i16 -4930, i16 -4815, i16 -4698, i16 -4580, i16 -4461, i16 -4341, i16 -4219, i16 -4096, i16 -3971, i16 -3845, i16 -3719, i16 -3591, i16 -3462, i16 -3331, i16 -3200, i16 -3068, i16 -2935, i16 -2801, i16 -2667, i16 -2531, i16 -2395, i16 -2258, i16 -2120, i16 -1981, i16 -1842, i16 -1703, i16 -1563, i16 -1422, i16 -1281, i16 -1140, i16 -998, i16 -856, i16 -713, i16 -571, i16 -428, i16 -285, i16 -142, i16 0, i16 142, i16 285, i16 428, i16 571, i16 713, i16 856, i16 998, i16 1140, i16 1281, i16 1422, i16 1563, i16 1703, i16 1842, i16 1981, i16 2120, i16 2258, i16 2395, i16 2531, i16 2667, i16 2801, i16 2935, i16 3068, i16 3200, i16 3331, i16 3462, i16 3591, i16 3719, i16 3845, i16 3971, i16 4095, i16 4219, i16 4341, i16 4461, i16 4580, i16 4698, i16 4815, i16 4930, i16 5043, i16 5155, i16 5265, i16 5374, i16 5481, i16 5586, i16 5690, i16 5792, i16 5892, i16 5991, i16 6087, i16 6182, i16 6275, i16 6366, i16 6455, i16 6542, i16 6627, i16 6710, i16 6791, i16 6870, i16 6947, i16 7021, i16 7094, i16 7164, i16 7233, i16 7299, i16 7362, i16 7424, i16 7483, i16 7540, i16 7595, i16 7647, i16 7697, i16 7745, i16 7791, i16 7834, i16 7874, i16 7912, i16 7948, i16 7982, i16 8012, i16 8041, i16 8067, i16 8091, i16 8112, i16 8130, i16 8147, i16 8160, i16 8172, i16 8180, i16 8187, i16 8190], align 16
@_ZN6webrtc20WebRtcAecm_kSinTableE = hidden local_unnamed_addr constant [360 x i16] [i16 0, i16 142, i16 285, i16 428, i16 571, i16 713, i16 856, i16 998, i16 1140, i16 1281, i16 1422, i16 1563, i16 1703, i16 1842, i16 1981, i16 2120, i16 2258, i16 2395, i16 2531, i16 2667, i16 2801, i16 2935, i16 3068, i16 3200, i16 3331, i16 3462, i16 3591, i16 3719, i16 3845, i16 3971, i16 4095, i16 4219, i16 4341, i16 4461, i16 4580, i16 4698, i16 4815, i16 4930, i16 5043, i16 5155, i16 5265, i16 5374, i16 5481, i16 5586, i16 5690, i16 5792, i16 5892, i16 5991, i16 6087, i16 6182, i16 6275, i16 6366, i16 6455, i16 6542, i16 6627, i16 6710, i16 6791, i16 6870, i16 6947, i16 7021, i16 7094, i16 7164, i16 7233, i16 7299, i16 7362, i16 7424, i16 7483, i16 7540, i16 7595, i16 7647, i16 7697, i16 7745, i16 7791, i16 7834, i16 7874, i16 7912, i16 7948, i16 7982, i16 8012, i16 8041, i16 8067, i16 8091, i16 8112, i16 8130, i16 8147, i16 8160, i16 8172, i16 8180, i16 8187, i16 8190, i16 8191, i16 8190, i16 8187, i16 8180, i16 8172, i16 8160, i16 8147, i16 8130, i16 8112, i16 8091, i16 8067, i16 8041, i16 8012, i16 7982, i16 7948, i16 7912, i16 7874, i16 7834, i16 7791, i16 7745, i16 7697, i16 7647, i16 7595, i16 7540, i16 7483, i16 7424, i16 7362, i16 7299, i16 7233, i16 7164, i16 7094, i16 7021, i16 6947, i16 6870, i16 6791, i16 6710, i16 6627, i16 6542, i16 6455, i16 6366, i16 6275, i16 6182, i16 6087, i16 5991, i16 5892, i16 5792, i16 5690, i16 5586, i16 5481, i16 5374, i16 5265, i16 5155, i16 5043, i16 4930, i16 4815, i16 4698, i16 4580, i16 4461, i16 4341, i16 4219, i16 4096, i16 3971, i16 3845, i16 3719, i16 3591, i16 3462, i16 3331, i16 3200, i16 3068, i16 2935, i16 2801, i16 2667, i16 2531, i16 2395, i16 2258, i16 2120, i16 1981, i16 1842, i16 1703, i16 1563, i16 1422, i16 1281, i16 1140, i16 998, i16 856, i16 713, i16 571, i16 428, i16 285, i16 142, i16 0, i16 -142, i16 -285, i16 -428, i16 -571, i16 -713, i16 -856, i16 -998, i16 -1140, i16 -1281, i16 -1422, i16 -1563, i16 -1703, i16 -1842, i16 -1981, i16 -2120, i16 -2258, i16 -2395, i16 -2531, i16 -2667, i16 -2801, i16 -2935, i16 -3068, i16 -3200, i16 -3331, i16 -3462, i16 -3591, i16 -3719, i16 -3845, i16 -3971, i16 -4095, i16 -4219, i16 -4341, i16 -4461, i16 -4580, i16 -4698, i16 -4815, i16 -4930, i16 -5043, i16 -5155, i16 -5265, i16 -5374, i16 -5481, i16 -5586, i16 -5690, i16 -5792, i16 -5892, i16 -5991, i16 -6087, i16 -6182, i16 -6275, i16 -6366, i16 -6455, i16 -6542, i16 -6627, i16 -6710, i16 -6791, i16 -6870, i16 -6947, i16 -7021, i16 -7094, i16 -7164, i16 -7233, i16 -7299, i16 -7362, i16 -7424, i16 -7483, i16 -7540, i16 -7595, i16 -7647, i16 -7697, i16 -7745, i16 -7791, i16 -7834, i16 -7874, i16 -7912, i16 -7948, i16 -7982, i16 -8012, i16 -8041, i16 -8067, i16 -8091, i16 -8112, i16 -8130, i16 -8147, i16 -8160, i16 -8172, i16 -8180, i16 -8187, i16 -8190, i16 -8191, i16 -8190, i16 -8187, i16 -8180, i16 -8172, i16 -8160, i16 -8147, i16 -8130, i16 -8112, i16 -8091, i16 -8067, i16 -8041, i16 -8012, i16 -7982, i16 -7948, i16 -7912, i16 -7874, i16 -7834, i16 -7791, i16 -7745, i16 -7697, i16 -7647, i16 -7595, i16 -7540, i16 -7483, i16 -7424, i16 -7362, i16 -7299, i16 -7233, i16 -7164, i16 -7094, i16 -7021, i16 -6947, i16 -6870, i16 -6791, i16 -6710, i16 -6627, i16 -6542, i16 -6455, i16 -6366, i16 -6275, i16 -6182, i16 -6087, i16 -5991, i16 -5892, i16 -5792, i16 -5690, i16 -5586, i16 -5481, i16 -5374, i16 -5265, i16 -5155, i16 -5043, i16 -4930, i16 -4815, i16 -4698, i16 -4580, i16 -4461, i16 -4341, i16 -4219, i16 -4096, i16 -3971, i16 -3845, i16 -3719, i16 -3591, i16 -3462, i16 -3331, i16 -3200, i16 -3068, i16 -2935, i16 -2801, i16 -2667, i16 -2531, i16 -2395, i16 -2258, i16 -2120, i16 -1981, i16 -1842, i16 -1703, i16 -1563, i16 -1422, i16 -1281, i16 -1140, i16 -998, i16 -856, i16 -713, i16 -571, i16 -428, i16 -285, i16 -142], align 16
@_ZN6webrtc29WebRtcAecm_CalcLinearEnergiesE = hidden local_unnamed_addr global void (%"struct.webrtc::AecmCore"*, i16*, i32*, i32*, i32*, i32*)* null, align 8
@_ZN6webrtc31WebRtcAecm_StoreAdaptiveChannelE = hidden local_unnamed_addr global void (%"struct.webrtc::AecmCore"*, i16*, i32*)* null, align 8
@_ZN6webrtc31WebRtcAecm_ResetAdaptiveChannelE = hidden local_unnamed_addr global void (%"struct.webrtc::AecmCore"*)* null, align 8
@_ZN6webrtc12_GLOBAL__N_118kChannelStored8kHzE = internal unnamed_addr constant [65 x i16] [i16 2040, i16 1815, i16 1590, i16 1498, i16 1405, i16 1395, i16 1385, i16 1418, i16 1451, i16 1506, i16 1562, i16 1644, i16 1726, i16 1804, i16 1882, i16 1918, i16 1953, i16 1982, i16 2010, i16 2025, i16 2040, i16 2034, i16 2027, i16 2021, i16 2014, i16 1997, i16 1980, i16 1925, i16 1869, i16 1800, i16 1732, i16 1683, i16 1635, i16 1604, i16 1572, i16 1545, i16 1517, i16 1481, i16 1444, i16 1405, i16 1367, i16 1331, i16 1294, i16 1270, i16 1245, i16 1239, i16 1233, i16 1247, i16 1260, i16 1282, i16 1303, i16 1338, i16 1373, i16 1407, i16 1441, i16 1470, i16 1499, i16 1524, i16 1549, i16 1565, i16 1582, i16 1601, i16 1621, i16 1649, i16 1676], align 16
@_ZN6webrtc12_GLOBAL__N_119kChannelStored16kHzE = internal unnamed_addr constant [65 x i16] [i16 2040, i16 1590, i16 1405, i16 1385, i16 1451, i16 1562, i16 1726, i16 1882, i16 1953, i16 2010, i16 2040, i16 2027, i16 2014, i16 1980, i16 1869, i16 1732, i16 1635, i16 1572, i16 1517, i16 1444, i16 1367, i16 1294, i16 1245, i16 1233, i16 1260, i16 1303, i16 1373, i16 1441, i16 1499, i16 1549, i16 1582, i16 1621, i16 1676, i16 1741, i16 1802, i16 1861, i16 1921, i16 1983, i16 2040, i16 2102, i16 2170, i16 2265, i16 2375, i16 2515, i16 2651, i16 2781, i16 2922, i16 3075, i16 3253, i16 3471, i16 3738, i16 3976, i16 4151, i16 4258, i16 4308, i16 4288, i16 4270, i16 4253, i16 4237, i16 4179, i16 4086, i16 3947, i16 3757, i16 3484, i16 3153], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc27WebRtcAecm_UpdateFarHistoryEPNS_8AecmCoreEPti(%"struct.webrtc::AecmCore"* nocapture, i16* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  %7 = icmp sgt i32 %5, 98
  %8 = select i1 %7, i32 0, i32 %6
  store i32 %8, i32* %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 17, i64 %9
  store i32 %2, i32* %10, align 4
  %11 = load i32, i32* %4, align 4
  %12 = mul nsw i32 %11, 65
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 15, i64 %13
  %15 = bitcast i16* %14 to i8*
  %16 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %15, i8* align 2 %16, i64 130, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i16* @_ZN6webrtc24WebRtcAecm_AlignedFarendEPNS_8AecmCoreEPii(%"struct.webrtc::AecmCore"* readonly, i32* nocapture, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %5, %2
  %7 = icmp slt i32 %6, 0
  %8 = add nsw i32 %6, 100
  %9 = select i1 %7, i32 %8, i32 %6
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 17, i64 %10
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  %13 = mul nsw i32 %9, 65
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 15, i64 %14
  ret i16* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.webrtc::AecmCore"* @_ZN6webrtc21WebRtcAecm_CreateCoreEv() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 17288) #9
  %2 = bitcast i8* %1 to %"struct.webrtc::AecmCore"*
  %3 = tail call %struct.RingBuffer* @WebRtc_CreateBuffer(i64 144, i64 2) #9
  %4 = getelementptr inbounds i8, i8* %1, i64 24
  %5 = bitcast i8* %4 to %struct.RingBuffer**
  store %struct.RingBuffer* %3, %struct.RingBuffer** %5, align 8
  %6 = icmp eq %struct.RingBuffer* %3, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

8:                                                ; preds = %0
  %9 = tail call %struct.RingBuffer* @WebRtc_CreateBuffer(i64 144, i64 2) #9
  %10 = getelementptr inbounds i8, i8* %1, i64 32
  %11 = bitcast i8* %10 to %struct.RingBuffer**
  store %struct.RingBuffer* %9, %struct.RingBuffer** %11, align 8
  %12 = icmp eq %struct.RingBuffer* %9, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

14:                                               ; preds = %8
  %15 = tail call %struct.RingBuffer* @WebRtc_CreateBuffer(i64 144, i64 2) #9
  %16 = getelementptr inbounds i8, i8* %1, i64 40
  %17 = bitcast i8* %16 to %struct.RingBuffer**
  store %struct.RingBuffer* %15, %struct.RingBuffer** %17, align 8
  %18 = icmp eq %struct.RingBuffer* %15, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

20:                                               ; preds = %14
  %21 = tail call %struct.RingBuffer* @WebRtc_CreateBuffer(i64 144, i64 2) #9
  %22 = getelementptr inbounds i8, i8* %1, i64 48
  %23 = bitcast i8* %22 to %struct.RingBuffer**
  store %struct.RingBuffer* %21, %struct.RingBuffer** %23, align 8
  %24 = icmp eq %struct.RingBuffer* %21, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

26:                                               ; preds = %20
  %27 = tail call i8* @_ZN6webrtc33WebRtc_CreateDelayEstimatorFarendEii(i32 65, i32 100) #9
  %28 = getelementptr inbounds i8, i8* %1, i64 576
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = icmp eq i8* %27, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

32:                                               ; preds = %26
  %33 = tail call i8* @_ZN6webrtc27WebRtc_CreateDelayEstimatorEPvi(i8* nonnull %27, i32 0) #9
  %34 = getelementptr inbounds i8, i8* %1, i64 584
  %35 = bitcast i8* %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = icmp eq i8* %33, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

38:                                               ; preds = %32
  %39 = tail call i32 @_ZN6webrtc31WebRtc_enable_robust_validationEPvi(i8* nonnull %33, i32 0) #9
  %40 = tail call %struct.RealFFT* @WebRtcSpl_CreateRealFFT(i32 7) #9
  %41 = getelementptr inbounds i8, i8* %1, i64 17280
  %42 = bitcast i8* %41 to %struct.RealFFT**
  store %struct.RealFFT* %40, %struct.RealFFT** %42, align 8
  %43 = icmp eq %struct.RealFFT* %40, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  tail call void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* %2)
  br label %76

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, i8* %1, i64 16024
  %47 = insertelement <2 x i8*> undef, i8* %1, i32 0
  %48 = shufflevector <2 x i8*> %47, <2 x i8*> undef, <2 x i32> zeroinitializer
  %49 = getelementptr i8, <2 x i8*> %48, <2 x i64> <i64 14988, i64 15276>
  %50 = ptrtoint <2 x i8*> %49 to <2 x i64>
  %51 = add <2 x i64> %50, <i64 31, i64 31>
  %52 = and <2 x i64> %51, <i64 -32, i64 -32>
  %53 = inttoptr <2 x i64> %52 to <2 x i16*>
  %54 = bitcast i8* %46 to <2 x i16*>*
  store <2 x i16*> %53, <2 x i16*>* %54, align 8
  %55 = getelementptr inbounds i8, i8* %1, i64 16040
  %56 = getelementptr i8, <2 x i8*> %48, <2 x i64> <i64 15564, i64 15852>
  %57 = ptrtoint <2 x i8*> %56 to <2 x i64>
  %58 = add <2 x i64> %57, <i64 31, i64 15>
  %59 = and <2 x i64> %58, <i64 -32, i64 -16>
  %60 = inttoptr <2 x i64> %59 to <2 x i16*>
  %61 = bitcast i8* %55 to <2 x i16*>*
  store <2 x i16*> %60, <2 x i16*>* %61, align 8
  %62 = getelementptr inbounds i8, i8* %1, i64 16000
  %63 = getelementptr i8, <2 x i8*> %48, <2 x i64> <i64 14402, i64 14548>
  %64 = ptrtoint <2 x i8*> %63 to <2 x i64>
  %65 = add <2 x i64> %64, <i64 15, i64 15>
  %66 = and <2 x i64> %65, <i64 -16, i64 -16>
  %67 = inttoptr <2 x i64> %66 to <2 x i16*>
  %68 = bitcast i8* %62 to <2 x i16*>*
  store <2 x i16*> %67, <2 x i16*>* %68, align 8
  %69 = getelementptr inbounds i8, i8* %1, i64 14696
  %70 = ptrtoint i8* %69 to i64
  %71 = add i64 %70, 31
  %72 = and i64 %71, -32
  %73 = inttoptr i64 %72 to i32*
  %74 = getelementptr inbounds i8, i8* %1, i64 16016
  %75 = bitcast i8* %74 to i32**
  store i32* %73, i32** %75, align 8
  br label %76

76:                                               ; preds = %45, %44, %37, %31, %25, %19, %13, %7
  %77 = phi %"struct.webrtc::AecmCore"* [ null, %31 ], [ null, %37 ], [ null, %44 ], [ %2, %45 ], [ null, %25 ], [ null, %19 ], [ null, %13 ], [ null, %7 ]
  ret %"struct.webrtc::AecmCore"* %77
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

declare %struct.RingBuffer* @WebRtc_CreateBuffer(i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19WebRtcAecm_FreeCoreEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"*) local_unnamed_addr #0 {
  %2 = icmp eq %"struct.webrtc::AecmCore"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 5
  %5 = bitcast %struct.RingBuffer** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @WebRtc_FreeBuffer(i8* %6) #9
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 6
  %8 = bitcast %struct.RingBuffer** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @WebRtc_FreeBuffer(i8* %9) #9
  %10 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 7
  %11 = bitcast %struct.RingBuffer** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @WebRtc_FreeBuffer(i8* %12) #9
  %13 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 8
  %14 = bitcast %struct.RingBuffer** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @WebRtc_FreeBuffer(i8* %15) #9
  %16 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 13
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZN6webrtc25WebRtc_FreeDelayEstimatorEPv(i8* %17) #9
  %18 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 12
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZN6webrtc31WebRtc_FreeDelayEstimatorFarendEPv(i8* %19) #9
  %20 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 68
  %21 = load %struct.RealFFT*, %struct.RealFFT** %20, align 8
  tail call void @WebRtcSpl_FreeRealFFT(%struct.RealFFT* %21) #9
  %22 = bitcast %"struct.webrtc::AecmCore"* %0 to i8*
  tail call void @free(i8* %22) #9
  br label %23

23:                                               ; preds = %1, %3
  ret void
}

declare i8* @_ZN6webrtc33WebRtc_CreateDelayEstimatorFarendEii(i32, i32) local_unnamed_addr #4

declare i8* @_ZN6webrtc27WebRtc_CreateDelayEstimatorEPvi(i8*, i32) local_unnamed_addr #4

declare i32 @_ZN6webrtc31WebRtc_enable_robust_validationEPvi(i8*, i32) local_unnamed_addr #4

declare %struct.RealFFT* @WebRtcSpl_CreateRealFFT(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc27WebRtcAecm_InitEchoPathCoreEPNS_8AecmCoreEPKs(%"struct.webrtc::AecmCore"* nocapture, i16* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 36
  %4 = bitcast i16** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 2 %6, i64 130, i1 false)
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  %8 = bitcast i16** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %9, i8* align 2 %6, i64 130, i1 false)
  %10 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 38
  br label %11

11:                                               ; preds = %27, %2
  %12 = phi i64 [ 0, %2 ], [ %35, %27 ]
  %13 = load i16*, i16** %7, align 8
  %14 = getelementptr inbounds i16, i16* %13, i64 %12
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = shl nuw i32 %16, 16
  %18 = load i32*, i32** %10, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %12
  store i32 %17, i32* %19, align 4
  %20 = or i64 %12, 1
  %21 = icmp eq i64 %20, 65
  br i1 %21, label %22, label %27

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 50
  store i32 1000, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 51
  store i32 1000, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 52
  store i32 2147483647, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 61
  store i16 0, i16* %26, align 8
  ret void

27:                                               ; preds = %11
  %28 = load i16*, i16** %7, align 8
  %29 = getelementptr inbounds i16, i16* %28, i64 %20
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = shl nuw i32 %31, 16
  %33 = load i32*, i32** %10, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %20
  store i32 %32, i32* %34, align 4
  %35 = add nuw nsw i64 %12, 2
  br label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc19WebRtcAecm_InitCoreEPNS_8AecmCoreEi(%"struct.webrtc::AecmCore"*, i32) local_unnamed_addr #0 {
  switch i32 %1, label %134 [
    i32 16000, label %3
    i32 8000, label %3
  ]

3:                                                ; preds = %2, %2
  %4 = shl i32 %1, 16
  %5 = ashr exact i32 %4, 16
  %6 = sdiv i32 %5, 8000
  %7 = trunc i32 %6 to i16
  %8 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 10
  store i16 %7, i16* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 5
  %10 = bitcast %"struct.webrtc::AecmCore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %11 = load %struct.RingBuffer*, %struct.RingBuffer** %9, align 8
  tail call void @WebRtc_InitBuffer(%struct.RingBuffer* %11) #9
  %12 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 6
  %13 = load %struct.RingBuffer*, %struct.RingBuffer** %12, align 8
  tail call void @WebRtc_InitBuffer(%struct.RingBuffer* %13) #9
  %14 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 7
  %15 = load %struct.RingBuffer*, %struct.RingBuffer** %14, align 8
  tail call void @WebRtc_InitBuffer(%struct.RingBuffer* %15) #9
  %16 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 8
  %17 = load %struct.RingBuffer*, %struct.RingBuffer** %16, align 8
  tail call void @WebRtc_InitBuffer(%struct.RingBuffer* %17) #9
  %18 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 32, i64 0
  %19 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 11
  %20 = bitcast i16* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 1008, i1 false)
  store i32 666, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 20
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 12
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i32 @_ZN6webrtc31WebRtc_InitDelayEstimatorFarendEPv(i8* %23) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %134

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 13
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @_ZN6webrtc25WebRtc_InitDelayEstimatorEPv(i8* %28) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %134

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 15, i64 0
  %33 = bitcast i16* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %33, i8 0, i64 13000, i1 false)
  %34 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 17, i64 0
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 400, i1 false)
  %36 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 16
  store i32 100, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 18
  store i16 1, i16* %37, align 8
  %38 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 19
  store i16 -1, i16* %38, align 2
  %39 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 21
  %40 = icmp eq i32 %1, 8000
  %41 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 36
  %42 = bitcast i16** %41 to i8**
  %43 = bitcast i16* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 394, i1 false)
  %44 = load i8*, i8** %42, align 8
  br i1 %40, label %45, label %61

45:                                               ; preds = %31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %44, i8* align 16 bitcast ([65 x i16]* @_ZN6webrtc12_GLOBAL__N_118kChannelStored8kHzE to i8*), i64 130, i1 false) #9
  %46 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  %47 = bitcast i16** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %48, i8* align 16 bitcast ([65 x i16]* @_ZN6webrtc12_GLOBAL__N_118kChannelStored8kHzE to i8*), i64 130, i1 false) #9
  %49 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 38
  br label %50

50:                                               ; preds = %144, %45
  %51 = phi i64 [ 0, %45 ], [ %152, %144 ]
  %52 = load i16*, i16** %46, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 %51
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = shl nuw i32 %55, 16
  %57 = load i32*, i32** %49, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %51
  store i32 %56, i32* %58, align 4
  %59 = or i64 %51, 1
  %60 = icmp eq i64 %59, 65
  br i1 %60, label %77, label %144

61:                                               ; preds = %31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %44, i8* align 16 bitcast ([65 x i16]* @_ZN6webrtc12_GLOBAL__N_119kChannelStored16kHzE to i8*), i64 130, i1 false) #9
  %62 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  %63 = bitcast i16** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %64, i8* align 16 bitcast ([65 x i16]* @_ZN6webrtc12_GLOBAL__N_119kChannelStored16kHzE to i8*), i64 130, i1 false) #9
  %65 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 38
  br label %66

66:                                               ; preds = %153, %61
  %67 = phi i64 [ 0, %61 ], [ %161, %153 ]
  %68 = load i16*, i16** %62, align 8
  %69 = getelementptr inbounds i16, i16* %68, i64 %67
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = shl nuw i32 %71, 16
  %73 = load i32*, i32** %65, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %67
  store i32 %72, i32* %74, align 4
  %75 = or i64 %67, 1
  %76 = icmp eq i64 %75, 65
  br i1 %76, label %77, label %153

77:                                               ; preds = %66, %50
  %78 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 50
  store i32 1000, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 51
  store i32 1000, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 52
  store i32 2147483647, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 61
  store i16 0, i16* %81, align 8
  %82 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 43, i64 0
  %83 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 48
  store i16 0, i16* %83, align 4
  %84 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 49
  %85 = bitcast i32* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 390, i1 false)
  store i16 1, i16* %84, align 2
  %86 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 46, i64 0
  %87 = bitcast i32* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %87, i8 0, i64 520, i1 false)
  br label %88

88:                                               ; preds = %136, %77
  %89 = phi i64 [ 0, %77 ], [ %143, %136 ]
  %90 = phi i32 [ 65, %77 ], [ %139, %136 ]
  %91 = phi i32 [ 4225, %77 ], [ %142, %136 ]
  %92 = shl i32 %91, 8
  %93 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 %89
  store i32 %92, i32* %93, align 4
  %94 = shl i32 %90, 1
  %95 = add i32 %94, -2
  %96 = or i32 %95, 1
  %97 = sub nsw i32 %91, %96
  %98 = or i64 %89, 1
  %99 = icmp eq i64 %98, 31
  br i1 %99, label %100, label %136

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 31
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %102, align 4
  %103 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 35
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %104, align 4
  %105 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 39
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 43
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 47
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 51
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 55
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 59
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> <i32 295936, i32 295936, i32 295936, i32 295936>, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 63
  store i32 295936, i32* %117, align 4
  %118 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 64
  store i32 295936, i32* %118, align 4
  %119 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 53
  store i16 32767, i16* %119, align 4
  %120 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 54
  store i16 -32768, i16* %120, align 2
  %121 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 55
  store i16 0, i16* %121, align 8
  %122 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 56
  store i16 1025, i16* %122, align 2
  %123 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 57
  store i16 0, i16* %123, align 4
  %124 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  store i32 0, i32* %124, align 8
  %125 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 59
  store i16 0, i16* %125, align 4
  %126 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 4
  store i32 1, i32* %126, align 8
  %127 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 60
  store i16 0, i16* %127, align 2
  %128 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 62
  store i16 256, i16* %128, align 2
  %129 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 63
  store i16 256, i16* %129, align 4
  %130 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 64
  store i16 3072, i16* %130, align 2
  %131 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 65
  store i16 256, i16* %131, align 8
  %132 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 66
  store i16 1536, i16* %132, align 2
  %133 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 67
  store i16 1280, i16* %133, align 4
  store void (%"struct.webrtc::AecmCore"*, i16*, i32*, i32*, i32*, i32*)* @_ZN6webrtcL19CalcLinearEnergiesCEPNS_8AecmCoreEPKtPiPjS5_S5_, void (%"struct.webrtc::AecmCore"*, i16*, i32*, i32*, i32*, i32*)** @_ZN6webrtc29WebRtcAecm_CalcLinearEnergiesE, align 8
  store void (%"struct.webrtc::AecmCore"*, i16*, i32*)* @_ZN6webrtcL21StoreAdaptiveChannelCEPNS_8AecmCoreEPKtPi, void (%"struct.webrtc::AecmCore"*, i16*, i32*)** @_ZN6webrtc31WebRtcAecm_StoreAdaptiveChannelE, align 8
  store void (%"struct.webrtc::AecmCore"*)* @_ZN6webrtcL21ResetAdaptiveChannelCEPNS_8AecmCoreE, void (%"struct.webrtc::AecmCore"*)** @_ZN6webrtc31WebRtcAecm_ResetAdaptiveChannelE, align 8
  br label %134

134:                                              ; preds = %26, %3, %2, %100
  %135 = phi i32 [ 0, %100 ], [ -1, %2 ], [ -1, %3 ], [ -1, %26 ]
  ret i32 %135

136:                                              ; preds = %88
  %137 = shl i32 %97, 8
  %138 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 45, i64 %98
  store i32 %137, i32* %138, align 4
  %139 = add nsw i32 %90, -2
  %140 = shl nsw i32 %139, 1
  %141 = or i32 %140, 1
  %142 = sub nsw i32 %97, %141
  %143 = add nuw nsw i64 %89, 2
  br label %88

144:                                              ; preds = %50
  %145 = load i16*, i16** %46, align 8
  %146 = getelementptr inbounds i16, i16* %145, i64 %59
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = shl nuw i32 %148, 16
  %150 = load i32*, i32** %49, align 8
  %151 = getelementptr inbounds i32, i32* %150, i64 %59
  store i32 %149, i32* %151, align 4
  %152 = add nuw nsw i64 %51, 2
  br label %50

153:                                              ; preds = %66
  %154 = load i16*, i16** %62, align 8
  %155 = getelementptr inbounds i16, i16* %154, i64 %75
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i32
  %158 = shl nuw i32 %157, 16
  %159 = load i32*, i32** %65, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 %75
  store i32 %158, i32* %160, align 4
  %161 = add nuw nsw i64 %67, 2
  br label %66
}

declare void @WebRtc_InitBuffer(%struct.RingBuffer*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN6webrtc31WebRtc_InitDelayEstimatorFarendEPv(i8*) local_unnamed_addr #4

declare i32 @_ZN6webrtc25WebRtc_InitDelayEstimatorEPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN6webrtcL19CalcLinearEnergiesCEPNS_8AecmCoreEPKtPiPjS5_S5_(%"struct.webrtc::AecmCore"* nocapture readonly, i16* nocapture readonly, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) #2 {
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 36
  %8 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %36, %9 ]
  %11 = load i16*, i16** %7, align 8
  %12 = getelementptr inbounds i16, i16* %11, i64 %10
  %13 = load i16, i16* %12, align 2
  %14 = sext i16 %13 to i32
  %15 = getelementptr inbounds i16, i16* %1, i64 %10
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = mul nsw i32 %17, %14
  %19 = getelementptr inbounds i32, i32* %2, i64 %10
  store i32 %18, i32* %19, align 4
  %20 = load i16, i16* %15, align 2
  %21 = zext i16 %20 to i32
  %22 = load i32, i32* %3, align 4
  %23 = add i32 %22, %21
  store i32 %23, i32* %3, align 4
  %24 = load i16*, i16** %8, align 8
  %25 = getelementptr inbounds i16, i16* %24, i64 %10
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = load i16, i16* %15, align 2
  %29 = zext i16 %28 to i32
  %30 = mul nsw i32 %29, %27
  %31 = load i32, i32* %4, align 4
  %32 = add i32 %30, %31
  store i32 %32, i32* %4, align 4
  %33 = load i32, i32* %19, align 4
  %34 = load i32, i32* %5, align 4
  %35 = add i32 %34, %33
  store i32 %35, i32* %5, align 4
  %36 = add nuw nsw i64 %10, 1
  %37 = icmp eq i64 %36, 65
  br i1 %37, label %38, label %9

38:                                               ; preds = %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtcL21StoreAdaptiveChannelCEPNS_8AecmCoreEPKtPi(%"struct.webrtc::AecmCore"* nocapture readonly, i16* nocapture readonly, i32* nocapture) #0 {
  %4 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 36
  %5 = bitcast i16** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  %8 = bitcast i16** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %9, i64 130, i1 false)
  %10 = load i16*, i16** %4, align 8
  %11 = load i16, i16* %10, align 2
  %12 = sext i16 %11 to i32
  %13 = load i16, i16* %1, align 2
  %14 = zext i16 %13 to i32
  %15 = mul nsw i32 %14, %12
  store i32 %15, i32* %2, align 4
  br label %16

16:                                               ; preds = %3, %16
  %17 = phi i64 [ 0, %3 ], [ %48, %16 ]
  %18 = load i16*, i16** %4, align 8
  %19 = or i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i32
  %23 = getelementptr inbounds i16, i16* %1, i64 %19
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = mul nsw i32 %25, %22
  %27 = getelementptr inbounds i32, i32* %2, i64 %19
  store i32 %26, i32* %27, align 4
  %28 = load i16*, i16** %4, align 8
  %29 = or i64 %17, 2
  %30 = getelementptr inbounds i16, i16* %28, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = sext i16 %31 to i32
  %33 = getelementptr inbounds i16, i16* %1, i64 %29
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = mul nsw i32 %35, %32
  %37 = getelementptr inbounds i32, i32* %2, i64 %29
  store i32 %36, i32* %37, align 4
  %38 = load i16*, i16** %4, align 8
  %39 = or i64 %17, 3
  %40 = getelementptr inbounds i16, i16* %38, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = getelementptr inbounds i16, i16* %1, i64 %39
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = mul nsw i32 %45, %42
  %47 = getelementptr inbounds i32, i32* %2, i64 %39
  store i32 %46, i32* %47, align 4
  %48 = add nuw nsw i64 %17, 4
  %49 = icmp ult i64 %48, 64
  %50 = load i16*, i16** %4, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = getelementptr inbounds i16, i16* %1, i64 %48
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = mul nsw i32 %56, %53
  %58 = getelementptr inbounds i32, i32* %2, i64 %48
  store i32 %57, i32* %58, align 4
  br i1 %49, label %16, label %59

59:                                               ; preds = %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtcL21ResetAdaptiveChannelCEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* nocapture readonly) #0 {
  %2 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  %3 = bitcast i16** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 36
  %6 = bitcast i16** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 2 %7, i64 130, i1 false)
  %8 = load i16*, i16** %5, align 8
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = shl nuw i32 %10, 16
  %12 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 38
  %13 = load i32*, i32** %12, align 8
  store i32 %11, i32* %13, align 4
  br label %14

14:                                               ; preds = %1, %14
  %15 = phi i64 [ 0, %1 ], [ %40, %14 ]
  %16 = load i16*, i16** %5, align 8
  %17 = or i64 %15, 1
  %18 = getelementptr inbounds i16, i16* %16, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = shl nuw i32 %20, 16
  %22 = load i32*, i32** %12, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %17
  store i32 %21, i32* %23, align 4
  %24 = load i16*, i16** %5, align 8
  %25 = or i64 %15, 2
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = shl nuw i32 %28, 16
  %30 = load i32*, i32** %12, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %25
  store i32 %29, i32* %31, align 4
  %32 = load i16*, i16** %5, align 8
  %33 = or i64 %15, 3
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = shl nuw i32 %36, 16
  %38 = load i32*, i32** %12, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %33
  store i32 %37, i32* %39, align 4
  %40 = add nuw nsw i64 %15, 4
  %41 = icmp ult i64 %40, 64
  %42 = load i16*, i16** %5, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %40
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = shl nuw i32 %45, 16
  %47 = load i32*, i32** %12, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 %40
  store i32 %46, i32* %48, align 4
  br i1 %41, label %14, label %49

49:                                               ; preds = %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc18WebRtcAecm_ControlEPNS_8AecmCoreEii(%"struct.webrtc::AecmCore"* nocapture, i32, i32) local_unnamed_addr #5 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 18
  store i16 %4, i16* %5, align 8
  %6 = trunc i32 %1 to i16
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 19
  store i16 %6, i16* %7, align 2
  ret i32 0
}

declare void @WebRtc_FreeBuffer(i8*) local_unnamed_addr #4

declare void @_ZN6webrtc25WebRtc_FreeDelayEstimatorEPv(i8*) local_unnamed_addr #4

declare void @_ZN6webrtc31WebRtc_FreeDelayEstimatorFarendEPv(i8*) local_unnamed_addr #4

declare void @WebRtcSpl_FreeRealFFT(%struct.RealFFT*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc23WebRtcAecm_ProcessFrameEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"*, i16* nocapture readonly, i16*, i16*, i16*) local_unnamed_addr #0 {
  %6 = alloca [72 x i16], align 16
  %7 = alloca [80 x i16], align 16
  %8 = alloca i16*, align 8
  %9 = alloca [64 x i16], align 16
  %10 = alloca i16*, align 8
  %11 = alloca [64 x i16], align 16
  %12 = alloca i16*, align 8
  %13 = alloca [64 x i16], align 16
  %14 = alloca i16*, align 8
  %15 = bitcast [72 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 144, i1 false)
  %16 = getelementptr inbounds [72 x i16], [72 x i16]* %6, i64 0, i64 0
  %17 = bitcast [80 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 160, i1 false)
  %18 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  store i16* null, i16** %8, align 8
  %19 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, 176
  br i1 %21, label %22, label %37

22:                                               ; preds = %5
  %23 = sub nsw i32 256, %20
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %24
  %26 = bitcast i16* %25 to i8*
  %27 = bitcast i16* %1 to i8*
  %28 = sext i32 %23 to i64
  %29 = shl nsw i64 %28, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %26, i8* align 2 %27, i64 %29, i1 false) #9
  store i32 0, i32* %19, align 8
  %30 = add nsw i32 %20, -176
  %31 = icmp sgt i32 %30, 256
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 0
  %34 = bitcast i16* %33 to i8*
  %35 = getelementptr inbounds i16, i16* %1, i64 %28
  %36 = bitcast i16* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %34, i8* align 2 %36, i64 512, i1 false) #9
  store i32 0, i32* %19, align 8
  br label %37

37:                                               ; preds = %22, %32, %5
  %38 = phi i32 [ 80, %5 ], [ %30, %22 ], [ -176, %32 ]
  %39 = phi i64 [ 0, %5 ], [ %28, %22 ], [ 256, %32 ]
  %40 = phi i32 [ %20, %5 ], [ 0, %32 ], [ 0, %22 ]
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %41
  %43 = bitcast i16* %42 to i8*
  %44 = getelementptr inbounds i16, i16* %1, i64 %39
  %45 = bitcast i16* %44 to i8*
  %46 = sext i32 %38 to i64
  %47 = shl nsw i64 %46, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %43, i8* align 2 %45, i64 %47, i1 false) #9
  %48 = load i32, i32* %19, align 8
  %49 = add nsw i32 %48, %38
  store i32 %49, i32* %19, align 8
  %50 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 %53, %51
  %57 = add i32 %56, %55
  %58 = icmp sgt i32 %57, 0
  %59 = select i1 %58, i32 %57, i32 0
  %60 = add i32 %51, 255
  %61 = sub i32 %60, %53
  %62 = sub i32 %61, %55
  %63 = add i32 %62, %59
  %64 = and i32 %63, -256
  %65 = add i32 %57, %64
  %66 = icmp sgt i32 %65, 255
  %67 = and i32 %65, 255
  %68 = select i1 %66, i32 %67, i32 %65
  store i32 %68, i32* %54, align 4
  store i32 %51, i32* %52, align 4
  %69 = icmp sgt i32 %68, 176
  br i1 %69, label %70, label %85

70:                                               ; preds = %37
  %71 = sub nuw nsw i32 256, %68
  %72 = bitcast [80 x i16]* %7 to i8*
  %73 = sext i32 %68 to i64
  %74 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %73
  %75 = bitcast i16* %74 to i8*
  %76 = sext i32 %71 to i64
  %77 = shl nsw i64 %76, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %72, i8* align 2 %75, i64 %77, i1 false) #9
  store i32 0, i32* %54, align 4
  %78 = add nsw i32 %68, -176
  %79 = icmp sgt i32 %78, 256
  br i1 %79, label %80, label %85

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 0
  %82 = bitcast i16* %81 to i8*
  %83 = getelementptr inbounds [80 x i16], [80 x i16]* %7, i64 0, i64 %76
  %84 = bitcast i16* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %84, i8* align 2 %82, i64 512, i1 false) #9
  store i32 0, i32* %54, align 4
  br label %85

85:                                               ; preds = %70, %80, %37
  %86 = phi i64 [ 0, %37 ], [ %76, %70 ], [ 256, %80 ]
  %87 = phi i32 [ 80, %37 ], [ %78, %70 ], [ -176, %80 ]
  %88 = phi i32 [ %68, %37 ], [ 0, %80 ], [ 0, %70 ]
  %89 = getelementptr inbounds [80 x i16], [80 x i16]* %7, i64 0, i64 %86
  %90 = bitcast i16* %89 to i8*
  %91 = sext i32 %88 to i64
  %92 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %91
  %93 = bitcast i16* %92 to i8*
  %94 = sext i32 %87 to i64
  %95 = shl nsw i64 %94, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %90, i8* align 2 %93, i64 %95, i1 false) #9
  %96 = add nsw i32 %88, %87
  store i32 %96, i32* %54, align 4
  %97 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 5
  %98 = load %struct.RingBuffer*, %struct.RingBuffer** %97, align 8
  %99 = call i64 @WebRtc_WriteBuffer(%struct.RingBuffer* %98, i8* nonnull %17, i64 80) #9
  %100 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 6
  %101 = load %struct.RingBuffer*, %struct.RingBuffer** %100, align 8
  %102 = bitcast i16* %2 to i8*
  %103 = call i64 @WebRtc_WriteBuffer(%struct.RingBuffer* %101, i8* %102, i64 80) #9
  %104 = icmp ne i16* %3, null
  br i1 %104, label %105, label %110

105:                                              ; preds = %85
  %106 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 7
  %107 = load %struct.RingBuffer*, %struct.RingBuffer** %106, align 8
  %108 = bitcast i16* %3 to i8*
  %109 = call i64 @WebRtc_WriteBuffer(%struct.RingBuffer* %107, i8* nonnull %108, i64 80) #9
  br label %110

110:                                              ; preds = %105, %85
  %111 = load %struct.RingBuffer*, %struct.RingBuffer** %97, align 8
  %112 = call i64 @WebRtc_available_read(%struct.RingBuffer* %111) #9
  %113 = icmp ugt i64 %112, 63
  br i1 %113, label %114, label %151

114:                                              ; preds = %110
  %115 = bitcast [64 x i16]* %9 to i8*
  %116 = bitcast i16** %10 to i8*
  %117 = bitcast [64 x i16]* %11 to i8*
  %118 = bitcast i16** %12 to i8*
  %119 = bitcast i16** %10 to i8**
  %120 = bitcast i16** %12 to i8**
  %121 = bitcast [64 x i16]* %13 to i8*
  %122 = bitcast i16** %14 to i8*
  %123 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 7
  %124 = bitcast i16** %14 to i8**
  %125 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 8
  br label %126

126:                                              ; preds = %114, %144
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %115) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 -86, i64 128, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #9
  store i16* null, i16** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %117) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %117, i8 -86, i64 128, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #9
  store i16* null, i16** %12, align 8
  %127 = load %struct.RingBuffer*, %struct.RingBuffer** %97, align 8
  %128 = call i64 @WebRtc_ReadBuffer(%struct.RingBuffer* %127, i8** nonnull %119, i8* nonnull %115, i64 64) #9
  %129 = load %struct.RingBuffer*, %struct.RingBuffer** %100, align 8
  %130 = call i64 @WebRtc_ReadBuffer(%struct.RingBuffer* %129, i8** nonnull %120, i8* nonnull %117, i64 64) #9
  br i1 %104, label %131, label %139

131:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %121) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %121, i8 -86, i64 128, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  store i16* null, i16** %14, align 8
  %132 = load %struct.RingBuffer*, %struct.RingBuffer** %123, align 8
  %133 = call i64 @WebRtc_ReadBuffer(%struct.RingBuffer* %132, i8** nonnull %124, i8* nonnull %121, i64 64) #9
  %134 = load i16*, i16** %10, align 8
  %135 = load i16*, i16** %12, align 8
  %136 = load i16*, i16** %14, align 8
  %137 = call i32 @_ZN6webrtc23WebRtcAecm_ProcessBlockEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"* %0, i16* %134, i16* %135, i16* %136, i16* nonnull %16) #9
  %138 = icmp eq i32 %137, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %121) #9
  br i1 %138, label %150, label %144

139:                                              ; preds = %126
  %140 = load i16*, i16** %10, align 8
  %141 = load i16*, i16** %12, align 8
  %142 = call i32 @_ZN6webrtc23WebRtcAecm_ProcessBlockEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"* %0, i16* %140, i16* %141, i16* null, i16* nonnull %16) #9
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %150, label %144

144:                                              ; preds = %131, %139
  %145 = load %struct.RingBuffer*, %struct.RingBuffer** %125, align 8
  %146 = call i64 @WebRtc_WriteBuffer(%struct.RingBuffer* %145, i8* nonnull %15, i64 64) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %117) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %115) #9
  %147 = load %struct.RingBuffer*, %struct.RingBuffer** %97, align 8
  %148 = call i64 @WebRtc_available_read(%struct.RingBuffer* %147) #9
  %149 = icmp ugt i64 %148, 63
  br i1 %149, label %126, label %151

150:                                              ; preds = %131, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %117) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %115) #9
  br label %170

151:                                              ; preds = %144, %110
  %152 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 8
  %153 = load %struct.RingBuffer*, %struct.RingBuffer** %152, align 8
  %154 = call i64 @WebRtc_available_read(%struct.RingBuffer* %153) #9
  %155 = trunc i64 %154 to i32
  %156 = icmp slt i32 %155, 80
  br i1 %156, label %157, label %161

157:                                              ; preds = %151
  %158 = load %struct.RingBuffer*, %struct.RingBuffer** %152, align 8
  %159 = add nsw i32 %155, -80
  %160 = call i32 @WebRtc_MoveReadPtr(%struct.RingBuffer* %158, i32 %159) #9
  br label %161

161:                                              ; preds = %157, %151
  %162 = load %struct.RingBuffer*, %struct.RingBuffer** %152, align 8
  %163 = bitcast i16** %8 to i8**
  %164 = bitcast i16* %4 to i8*
  %165 = call i64 @WebRtc_ReadBuffer(%struct.RingBuffer* %162, i8** nonnull %163, i8* %164, i64 80) #9
  %166 = load i16*, i16** %8, align 8
  %167 = icmp eq i16* %166, %4
  br i1 %167, label %170, label %168

168:                                              ; preds = %161
  %169 = bitcast i16* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %164, i8* align 2 %169, i64 160, i1 false)
  br label %170

170:                                              ; preds = %150, %168, %161
  %171 = phi i32 [ -1, %150 ], [ 0, %161 ], [ 0, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %15) #9
  ret i32 %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25WebRtcAecm_BufferFarFrameEPNS_8AecmCoreEPKsi(%"struct.webrtc::AecmCore"* nocapture, i16* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, %2
  %7 = icmp sgt i32 %6, 256
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = sub nsw i32 256, %5
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %10
  %12 = bitcast i16* %11 to i8*
  %13 = bitcast i16* %1 to i8*
  %14 = sext i32 %9 to i64
  %15 = shl nsw i64 %14, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %12, i8* align 2 %13, i64 %15, i1 false)
  store i32 0, i32* %4, align 8
  %16 = sub nsw i32 %2, %9
  %17 = icmp sgt i32 %16, 256
  br i1 %17, label %18, label %27

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 0
  %20 = bitcast i16* %19 to i8*
  %21 = add nsw i32 %2, -256
  %22 = icmp sgt i32 %21, 256
  br label %23

23:                                               ; preds = %23, %18
  %24 = phi i64 [ 256, %23 ], [ %14, %18 ]
  %25 = getelementptr inbounds i16, i16* %1, i64 %24
  %26 = bitcast i16* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %20, i8* align 2 %26, i64 512, i1 false)
  store i32 0, i32* %4, align 8
  br i1 %22, label %23, label %27, !llvm.loop !2

27:                                               ; preds = %8, %23, %3
  %28 = phi i32 [ %2, %3 ], [ %16, %8 ], [ %21, %23 ]
  %29 = phi i64 [ 0, %3 ], [ %14, %8 ], [ 256, %23 ]
  %30 = phi i32 [ %5, %3 ], [ 0, %23 ], [ 0, %8 ]
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %31
  %33 = bitcast i16* %32 to i8*
  %34 = getelementptr inbounds i16, i16* %1, i64 %29
  %35 = bitcast i16* %34 to i8*
  %36 = sext i32 %28 to i64
  %37 = shl nsw i64 %36, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %33, i8* align 2 %35, i64 %37, i1 false)
  %38 = load i32, i32* %4, align 8
  %39 = add nsw i32 %38, %28
  store i32 %39, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc24WebRtcAecm_FetchFarFrameEPNS_8AecmCoreEPsii(%"struct.webrtc::AecmCore"* nocapture, i16* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %6, %3
  %10 = add i32 %9, %8
  %11 = add i32 %6, %8
  %12 = icmp sgt i32 %10, 0
  %13 = select i1 %12, i32 %10, i32 0
  %14 = add i32 %13, %3
  %15 = add i32 %14, 255
  %16 = sub i32 %15, %6
  %17 = sub i32 %16, %8
  %18 = and i32 %17, -256
  %19 = add i32 %11, %18
  %20 = sub i32 %19, %3
  %21 = icmp sgt i32 %20, 255
  %22 = and i32 %20, 255
  %23 = select i1 %21, i32 %22, i32 %20
  %24 = select i1 %21, i32 %22, i32 %20
  store i32 %23, i32* %7, align 4
  store i32 %3, i32* %5, align 4
  %25 = add nsw i32 %24, %2
  %26 = icmp sgt i32 %25, 256
  br i1 %26, label %27, label %46

27:                                               ; preds = %4
  %28 = sub nsw i32 256, %24
  %29 = bitcast i16* %1 to i8*
  %30 = sext i32 %24 to i64
  %31 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %30
  %32 = bitcast i16* %31 to i8*
  %33 = sext i32 %28 to i64
  %34 = shl nsw i64 %33, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %29, i8* align 2 %32, i64 %34, i1 false)
  store i32 0, i32* %7, align 4
  %35 = sub nsw i32 %2, %28
  %36 = icmp sgt i32 %35, 256
  br i1 %36, label %37, label %46

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 0
  %39 = bitcast i16* %38 to i8*
  %40 = add nsw i32 %2, -256
  %41 = icmp sgt i32 %40, 256
  br label %42

42:                                               ; preds = %42, %37
  %43 = phi i64 [ 256, %42 ], [ %33, %37 ]
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = bitcast i16* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %45, i8* align 2 %39, i64 512, i1 false)
  store i32 0, i32* %7, align 4
  br i1 %41, label %42, label %46, !llvm.loop !4

46:                                               ; preds = %27, %42, %4
  %47 = phi i64 [ 0, %4 ], [ %33, %27 ], [ 256, %42 ]
  %48 = phi i32 [ %2, %4 ], [ %35, %27 ], [ %40, %42 ]
  %49 = phi i32 [ %24, %4 ], [ 0, %42 ], [ 0, %27 ]
  %50 = getelementptr inbounds i16, i16* %1, i64 %47
  %51 = bitcast i16* %50 to i8*
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 9, i64 %52
  %54 = bitcast i16* %53 to i8*
  %55 = sext i32 %48 to i64
  %56 = shl nsw i64 %55, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %51, i8* align 2 %54, i64 %56, i1 false)
  %57 = load i32, i32* %7, align 4
  %58 = add nsw i32 %57, %48
  store i32 %58, i32* %7, align 4
  ret void
}

declare i64 @WebRtc_WriteBuffer(%struct.RingBuffer*, i8*, i64) local_unnamed_addr #4

declare i64 @WebRtc_available_read(%struct.RingBuffer*) local_unnamed_addr #4

declare i64 @WebRtc_ReadBuffer(%struct.RingBuffer*, i8**, i8*, i64) local_unnamed_addr #4

declare i32 @_ZN6webrtc23WebRtcAecm_ProcessBlockEPNS_8AecmCoreEPKsS3_S3_Ps(%"struct.webrtc::AecmCore"*, i16*, i16*, i16*, i16*) local_unnamed_addr #4

declare i32 @WebRtc_MoveReadPtr(%struct.RingBuffer*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i16 @_ZN6webrtc19WebRtcAecm_AsymFiltEssss(i16 signext, i16 signext, i16 signext, i16 signext) local_unnamed_addr #7 {
  %5 = sext i16 %0 to i32
  %6 = add i16 %0, -32767
  %7 = icmp ult i16 %6, 2
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = sext i16 %1 to i32
  %10 = icmp sgt i16 %0, %1
  br i1 %10, label %11, label %17

11:                                               ; preds = %8
  %12 = sub nsw i32 %5, %9
  %13 = sext i16 %3 to i32
  %14 = ashr i32 %12, %13
  %15 = trunc i32 %14 to i16
  %16 = sub i16 %0, %15
  br label %23

17:                                               ; preds = %8
  %18 = sub nsw i32 %9, %5
  %19 = sext i16 %2 to i32
  %20 = ashr i32 %18, %19
  %21 = trunc i32 %20 to i16
  %22 = add i16 %21, %0
  br label %23

23:                                               ; preds = %11, %17, %4
  %24 = phi i16 [ %1, %4 ], [ %16, %11 ], [ %22, %17 ]
  ret i16 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23WebRtcAecm_CalcEnergiesEPNS_8AecmCoreEPKtsjPi(%"struct.webrtc::AecmCore"*, i16*, i16 signext, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 0, i32* %6, align 4
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9
  store i32 0, i32* %7, align 4
  %11 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 0, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 0
  %13 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 1
  %14 = bitcast i16* %13 to i8*
  %15 = bitcast i16* %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %14, i8* align 8 %15, i64 126, i1 false)
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 23
  %19 = load i16, i16* %18, align 4
  %20 = sext i16 %19 to i32
  %21 = tail call i32 @llvm.ctlz.i32(i32 %3, i1 false) #9, !range !5
  %22 = shl i32 %3, %21
  %23 = lshr i32 %22, 23
  %24 = and i32 %23, 255
  %25 = shl nuw nsw i32 %21, 8
  %26 = sub nsw i32 7936, %25
  %27 = or i32 %24, %26
  %28 = shl nsw i32 %20, 8
  %29 = sub nsw i32 %27, %28
  %30 = trunc i32 %29 to i16
  %31 = add i16 %30, 896
  br label %32

32:                                               ; preds = %5, %17
  %33 = phi i16 [ %31, %17 ], [ 896, %5 ]
  store i16 %33, i16* %12, align 8
  %34 = load void (%"struct.webrtc::AecmCore"*, i16*, i32*, i32*, i32*, i32*)*, void (%"struct.webrtc::AecmCore"*, i16*, i32*, i32*, i32*, i32*)** @_ZN6webrtc29WebRtcAecm_CalcLinearEnergiesE, align 8
  call void %34(%"struct.webrtc::AecmCore"* %0, i16* %1, i32* %4, i32* nonnull %8, i32* nonnull %6, i32* nonnull %7) #9
  %35 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 0
  %36 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 1
  %37 = bitcast i16* %36 to i8*
  %38 = bitcast i16* %35 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %37, i8* align 2 %38, i64 126, i1 false)
  %39 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 0
  %40 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 1
  %41 = bitcast i16* %40 to i8*
  %42 = bitcast i16* %39 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %41, i8* align 2 %42, i64 126, i1 false)
  %43 = load i32, i32* %8, align 4
  %44 = sext i16 %2 to i32
  %45 = icmp eq i32 %43, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %32
  %47 = call i32 @llvm.ctlz.i32(i32 %43, i1 false) #9, !range !5
  %48 = shl i32 %43, %47
  %49 = lshr i32 %48, 23
  %50 = and i32 %49, 255
  %51 = shl nuw nsw i32 %47, 8
  %52 = sub nsw i32 7936, %51
  %53 = or i32 %50, %52
  %54 = shl nsw i32 %44, 8
  %55 = sub nsw i32 %53, %54
  %56 = trunc i32 %55 to i16
  %57 = add i16 %56, 896
  br label %58

58:                                               ; preds = %32, %46
  %59 = phi i16 [ %57, %46 ], [ 896, %32 ]
  %60 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 26
  store i16 %59, i16* %60, align 8
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %44, 12
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %58
  %65 = call i32 @llvm.ctlz.i32(i32 %61, i1 false) #9, !range !5
  %66 = shl i32 %61, %65
  %67 = lshr i32 %66, 23
  %68 = and i32 %67, 255
  %69 = shl nuw nsw i32 %65, 8
  %70 = sub nsw i32 7936, %69
  %71 = or i32 %68, %70
  %72 = shl nsw i32 %62, 8
  %73 = sub nsw i32 %71, %72
  %74 = trunc i32 %73 to i16
  %75 = add i16 %74, 896
  br label %76

76:                                               ; preds = %58, %64
  %77 = phi i16 [ %75, %64 ], [ 896, %58 ]
  store i16 %77, i16* %35, align 2
  %78 = load i32, i32* %7, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %76
  %81 = call i32 @llvm.ctlz.i32(i32 %78, i1 false) #9, !range !5
  %82 = shl i32 %78, %81
  %83 = lshr i32 %82, 23
  %84 = and i32 %83, 255
  %85 = shl nuw nsw i32 %81, 8
  %86 = sub nsw i32 7936, %85
  %87 = or i32 %84, %86
  %88 = shl nsw i32 %62, 8
  %89 = sub nsw i32 %87, %88
  %90 = trunc i32 %89 to i16
  %91 = add i16 %90, 896
  br label %92

92:                                               ; preds = %76, %80
  %93 = phi i16 [ %91, %80 ], [ 896, %76 ]
  store i16 %93, i16* %39, align 2
  %94 = icmp sgt i16 %59, 1025
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 56
  %97 = load i16, i16* %96, align 2
  br label %184

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 60
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  %102 = select i1 %101, i32 2, i32 4
  %103 = select i1 %101, i32 8, i32 11
  %104 = select i1 %101, i32 2, i32 3
  %105 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 53
  %106 = load i16, i16* %105, align 4
  %107 = sext i16 %106 to i32
  %108 = add i16 %106, -32767
  %109 = icmp ult i16 %108, 2
  br i1 %109, label %123, label %110

110:                                              ; preds = %98
  %111 = sext i16 %59 to i32
  %112 = icmp sgt i16 %106, %59
  br i1 %112, label %113, label %118

113:                                              ; preds = %110
  %114 = sub nsw i32 %107, %111
  %115 = ashr i32 %114, %104
  %116 = trunc i32 %115 to i16
  %117 = sub i16 %106, %116
  br label %123

118:                                              ; preds = %110
  %119 = sub nsw i32 %111, %107
  %120 = ashr i32 %119, %103
  %121 = trunc i32 %120 to i16
  %122 = add i16 %106, %121
  br label %123

123:                                              ; preds = %98, %113, %118
  %124 = phi i16 [ %59, %98 ], [ %117, %113 ], [ %122, %118 ]
  store i16 %124, i16* %105, align 4
  %125 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 54
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i32
  %128 = add i16 %126, -32767
  %129 = icmp ult i16 %128, 2
  br i1 %129, label %143, label %130

130:                                              ; preds = %123
  %131 = sext i16 %59 to i32
  %132 = icmp sgt i16 %126, %59
  br i1 %132, label %133, label %138

133:                                              ; preds = %130
  %134 = sub nsw i32 %127, %131
  %135 = ashr i32 %134, 11
  %136 = trunc i32 %135 to i16
  %137 = sub i16 %126, %136
  br label %143

138:                                              ; preds = %130
  %139 = sub nsw i32 %131, %127
  %140 = ashr i32 %139, %102
  %141 = trunc i32 %140 to i16
  %142 = add i16 %126, %141
  br label %143

143:                                              ; preds = %123, %133, %138
  %144 = phi i16 [ %59, %123 ], [ %137, %133 ], [ %142, %138 ]
  store i16 %144, i16* %125, align 2
  %145 = sub i16 %144, %124
  %146 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 55
  store i16 %145, i16* %146, align 8
  %147 = sub i16 2560, %124
  %148 = icmp sgt i16 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %143
  %150 = sext i16 %147 to i32
  %151 = mul nsw i32 %150, 230
  %152 = lshr i32 %151, 9
  %153 = shl i32 %152, 16
  %154 = add nuw nsw i32 %153, 15073280
  %155 = ashr exact i32 %154, 16
  br label %156

156:                                              ; preds = %143, %149
  %157 = phi i32 [ %155, %149 ], [ 230, %143 ]
  %158 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 59
  %159 = load i16, i16* %158, align 4
  %160 = icmp sgt i16 %159, 1024
  %161 = or i1 %101, %160
  br i1 %161, label %162, label %166

162:                                              ; preds = %156
  %163 = trunc i32 %157 to i16
  %164 = add i16 %124, %163
  %165 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 56
  store i16 %164, i16* %165, align 2
  br label %180

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 56
  %168 = load i16, i16* %167, align 2
  %169 = icmp sgt i16 %168, %59
  br i1 %169, label %170, label %178

170:                                              ; preds = %166
  %171 = sext i16 %168 to i32
  %172 = sext i16 %59 to i32
  %173 = add nuw nsw i32 %157, %172
  %174 = sub nsw i32 %173, %171
  %175 = lshr i32 %174, 6
  %176 = trunc i32 %175 to i16
  %177 = add i16 %168, %176
  store i16 %177, i16* %167, align 2
  store i16 0, i16* %158, align 4
  br label %180

178:                                              ; preds = %166
  %179 = add nsw i16 %159, 1
  store i16 %179, i16* %158, align 4
  br label %180

180:                                              ; preds = %170, %178, %162
  %181 = phi i16 [ %177, %170 ], [ %168, %178 ], [ %164, %162 ]
  %182 = add i16 %181, 256
  %183 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 57
  store i16 %182, i16* %183, align 4
  br label %184

184:                                              ; preds = %95, %180
  %185 = phi i16 [ %97, %95 ], [ %181, %180 ]
  %186 = icmp sgt i16 %59, %185
  br i1 %186, label %187, label %197

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 60
  %189 = load i16, i16* %188, align 2
  %190 = icmp eq i16 %189, 0
  %191 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 55
  %192 = load i16, i16* %191, align 8
  %193 = icmp sgt i16 %192, 929
  %194 = or i1 %190, %193
  %195 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  br i1 %194, label %196, label %199

196:                                              ; preds = %187
  store i32 1, i32* %195, align 8
  br label %202

197:                                              ; preds = %184
  %198 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  store i32 0, i32* %198, align 8
  br label %222

199:                                              ; preds = %187
  %200 = load i32, i32* %195, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %222, label %202

202:                                              ; preds = %196, %199
  %203 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 4
  %204 = load i32, i32* %203, align 8
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %222, label %206

206:                                              ; preds = %202
  store i32 0, i32* %203, align 8
  %207 = load i16, i16* %12, align 8
  %208 = icmp sgt i16 %77, %207
  br i1 %208, label %209, label %222

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  br label %211

211:                                              ; preds = %223, %209
  %212 = phi i64 [ 0, %209 ], [ %238, %223 ]
  %213 = load i16*, i16** %210, align 8
  %214 = getelementptr inbounds i16, i16* %213, i64 %212
  %215 = load i16, i16* %214, align 2
  %216 = ashr i16 %215, 3
  store i16 %216, i16* %214, align 2
  %217 = or i64 %212, 1
  %218 = icmp eq i64 %217, 65
  br i1 %218, label %219, label %223

219:                                              ; preds = %211
  %220 = load i16, i16* %35, align 2
  %221 = add i16 %220, -768
  store i16 %221, i16* %35, align 2
  store i32 1, i32* %203, align 8
  br label %222

222:                                              ; preds = %197, %202, %199, %206, %219
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  ret void

223:                                              ; preds = %211
  %224 = load i16*, i16** %210, align 8
  %225 = getelementptr inbounds i16, i16* %224, i64 %217
  %226 = load i16, i16* %225, align 2
  %227 = ashr i16 %226, 3
  store i16 %227, i16* %225, align 2
  %228 = or i64 %212, 2
  %229 = load i16*, i16** %210, align 8
  %230 = getelementptr inbounds i16, i16* %229, i64 %228
  %231 = load i16, i16* %230, align 2
  %232 = ashr i16 %231, 3
  store i16 %232, i16* %230, align 2
  %233 = or i64 %212, 3
  %234 = load i16*, i16** %210, align 8
  %235 = getelementptr inbounds i16, i16* %234, i64 %233
  %236 = load i16, i16* %235, align 2
  %237 = ashr i16 %236, 3
  store i16 %237, i16* %235, align 2
  %238 = add nuw nsw i64 %212, 4
  br label %211
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN6webrtc23WebRtcAecm_CalcStepSizeEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 60
  %7 = load i16, i16* %6, align 2
  %8 = icmp sgt i16 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 53
  %11 = load i16, i16* %10, align 4
  %12 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 54
  %13 = load i16, i16* %12, align 2
  %14 = icmp slt i16 %11, %13
  br i1 %14, label %15, label %28

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 26
  %17 = load i16, i16* %16, align 8
  %18 = sub i16 %17, %11
  %19 = sext i16 %18 to i32
  %20 = mul nsw i32 %19, 9
  %21 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 55
  %22 = load i16, i16* %21, align 8
  %23 = tail call i32 @WebRtcSpl_DivW32W16(i32 %20, i16 signext %22) #9
  %24 = trunc i32 %23 to i16
  %25 = sub i16 9, %24
  %26 = icmp sgt i16 %25, 1
  %27 = select i1 %26, i16 %25, i16 1
  ret i16 %27

28:                                               ; preds = %5, %1, %9
  %29 = phi i16 [ 10, %9 ], [ 1, %5 ], [ 0, %1 ]
  ret i16 %29
}

declare i32 @WebRtcSpl_DivW32W16(i32, i16 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc24WebRtcAecm_UpdateChannelEPNS_8AecmCoreEPKtsS3_sPi(%"struct.webrtc::AecmCore"*, i16*, i16 signext, i16* nocapture readonly, i16 signext, i32*) local_unnamed_addr #0 {
  %7 = icmp eq i16 %4, 0
  br i1 %7, label %183, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 38
  %10 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 23
  %11 = sext i16 %2 to i32
  %12 = sub i16 -28, %2
  %13 = add i16 %2, 28
  %14 = shl i32 16, %11
  %15 = sub i16 -60, %4
  %16 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 37
  br label %17

17:                                               ; preds = %179, %8
  %18 = phi i64 [ 0, %8 ], [ %180, %179 ]
  %19 = phi i32 [ 0, %8 ], [ %181, %179 ]
  %20 = load i32*, i32** %9, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %18
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = tail call i32 @llvm.ctlz.i32(i32 %22, i1 false) #9, !range !5
  %26 = trunc i32 %25 to i16
  br label %27

27:                                               ; preds = %17, %24
  %28 = phi i16 [ %26, %24 ], [ 0, %17 ]
  %29 = getelementptr inbounds i16, i16* %1, i64 %18
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp eq i16 %30, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = tail call i32 @llvm.ctlz.i32(i32 %31, i1 false) #9, !range !5
  %35 = trunc i32 %34 to i16
  br label %36

36:                                               ; preds = %27, %33
  %37 = phi i16 [ %35, %33 ], [ 0, %27 ]
  %38 = add nsw i16 %37, %28
  %39 = icmp sgt i16 %38, 31
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = sub nsw i16 32, %28
  %42 = sub nsw i16 %41, %37
  %43 = icmp sgt i16 %42, 31
  %44 = sext i16 %42 to i32
  %45 = ashr i32 %22, %44
  %46 = select i1 %43, i32 0, i32 %45
  br label %47

47:                                               ; preds = %36, %40
  %48 = phi i16 [ %42, %40 ], [ 0, %36 ]
  %49 = phi i32 [ %46, %40 ], [ %22, %36 ]
  %50 = mul i32 %49, %31
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = tail call i32 @llvm.ctlz.i32(i32 %50, i1 false) #9, !range !5
  %54 = trunc i32 %53 to i16
  br label %55

55:                                               ; preds = %47, %52
  %56 = phi i16 [ %54, %52 ], [ 0, %47 ]
  %57 = getelementptr inbounds i16, i16* %3, i64 %18
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 0
  %60 = zext i16 %58 to i32
  %61 = tail call i32 @llvm.ctlz.i32(i32 %60, i1 false) #9, !range !6
  %62 = load i16, i16* %10, align 4
  %63 = trunc i32 %61 to i16
  %64 = add nsw i16 %63, -2
  %65 = select i1 %59, i16 30, i16 %64
  %66 = add i16 %12, %48
  %67 = add i16 %66, %62
  %68 = add i16 %67, %65
  %69 = sext i16 %56 to i32
  %70 = sext i16 %68 to i32
  %71 = add nsw i32 %70, 1
  %72 = icmp slt i32 %71, %69
  br i1 %72, label %79, label %73

73:                                               ; preds = %55
  %74 = add nsw i16 %56, -2
  %75 = sub i16 %13, %48
  %76 = add i16 %75, %74
  %77 = sub i16 %76, %62
  %78 = sext i16 %74 to i32
  br label %79

79:                                               ; preds = %55, %73
  %80 = phi i32 [ %70, %55 ], [ %78, %73 ]
  %81 = phi i16 [ %68, %55 ], [ %74, %73 ]
  %82 = phi i16 [ %65, %55 ], [ %77, %73 ]
  %83 = icmp sgt i16 %81, -1
  %84 = shl i32 %50, %80
  %85 = sub nsw i32 0, %80
  %86 = lshr i32 %50, %85
  %87 = select i1 %83, i32 %84, i32 %86
  %88 = sext i16 %82 to i32
  %89 = icmp sgt i16 %82, -1
  %90 = shl i32 %60, %88
  %91 = sub nsw i32 0, %88
  %92 = lshr i32 %60, %91
  %93 = select i1 %89, i32 %90, i32 %92
  %94 = sub nsw i32 %93, %87
  %95 = icmp ne i32 %94, 0
  %96 = icmp slt i32 %14, %31
  %97 = and i1 %96, %95
  br i1 %97, label %98, label %179

98:                                               ; preds = %79
  %99 = ashr i32 %94, 31
  %100 = xor i32 %99, %94
  %101 = tail call i32 @llvm.ctlz.i32(i32 %100, i1 false) #9, !range !5
  %102 = add nsw i16 %37, -1
  %103 = sext i16 %102 to i32
  %104 = add nsw i32 %101, %103
  %105 = icmp sgt i32 %104, 31
  br i1 %105, label %106, label %108

106:                                              ; preds = %98
  %107 = mul i32 %94, %31
  br label %122

108:                                              ; preds = %98
  %109 = trunc i32 %104 to i16
  %110 = sub i16 32, %109
  %111 = icmp sgt i32 %94, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = sext i16 %110 to i32
  %114 = lshr i32 %94, %113
  %115 = mul nsw i32 %114, %31
  br label %122

116:                                              ; preds = %108
  %117 = sub nsw i32 0, %94
  %118 = sext i16 %110 to i32
  %119 = ashr i32 %117, %118
  %120 = mul i32 %119, %31
  %121 = sub i32 0, %120
  br label %122

122:                                              ; preds = %112, %116, %106
  %123 = phi i32 [ %107, %106 ], [ %115, %112 ], [ %121, %116 ]
  %124 = phi i16 [ 0, %106 ], [ %110, %112 ], [ %110, %116 ]
  %125 = trunc i32 %19 to i16
  %126 = add nuw nsw i16 %125, 1
  %127 = tail call i32 @WebRtcSpl_DivW32W16(i32 %123, i16 signext %126) #9
  %128 = shl nsw i16 %37, 1
  %129 = add i16 %15, %128
  %130 = add i16 %129, %48
  %131 = sub i16 %130, %81
  %132 = add i16 %131, %124
  %133 = icmp eq i32 %127, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %122
  %135 = ashr i32 %127, 31
  %136 = xor i32 %135, %127
  %137 = tail call i32 @llvm.ctlz.i32(i32 %136, i1 false) #9, !range !5
  %138 = trunc i32 %137 to i16
  %139 = add nsw i16 %138, -1
  br label %140

140:                                              ; preds = %122, %134
  %141 = phi i16 [ %139, %134 ], [ 0, %122 ]
  %142 = sext i16 %132 to i32
  %143 = icmp slt i16 %141, %132
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = icmp sgt i16 %132, -1
  %146 = shl i32 %127, %142
  %147 = sub nsw i32 0, %142
  %148 = ashr i32 %127, %147
  %149 = select i1 %145, i32 %146, i32 %148
  br label %150

150:                                              ; preds = %140, %144
  %151 = phi i32 [ %149, %144 ], [ 2147483647, %140 ]
  %152 = load i32*, i32** %9, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 %18
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %154, %151
  %156 = lshr i32 %154, 31
  %157 = lshr i32 %151, 31
  %158 = icmp ne i32 %156, %157
  %159 = lshr i32 %155, 31
  %160 = icmp eq i32 %156, %159
  %161 = or i1 %158, %160
  %162 = icmp slt i32 %155, 0
  %163 = select i1 %162, i32 2147483647, i32 -2147483648
  %164 = select i1 %161, i32 %155, i32 %163
  store i32 %164, i32* %153, align 4
  %165 = load i32*, i32** %9, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %18
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %150
  store i32 0, i32* %166, align 4
  %170 = load i32*, i32** %9, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 %18
  %172 = load i32, i32* %171, align 4
  br label %173

173:                                              ; preds = %169, %150
  %174 = phi i32 [ %172, %169 ], [ %167, %150 ]
  %175 = lshr i32 %174, 16
  %176 = trunc i32 %175 to i16
  %177 = load i16*, i16** %16, align 8
  %178 = getelementptr inbounds i16, i16* %177, i64 %18
  store i16 %176, i16* %178, align 2
  br label %179

179:                                              ; preds = %79, %173
  %180 = add nuw nsw i64 %18, 1
  %181 = add nuw nsw i32 %19, 1
  %182 = icmp eq i64 %180, 65
  br i1 %182, label %183, label %17

183:                                              ; preds = %179, %6
  %184 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 60
  %185 = load i16, i16* %184, align 2
  %186 = icmp eq i16 %185, 0
  %187 = zext i1 %186 to i32
  %188 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  %189 = load i32, i32* %188, align 8
  %190 = and i32 %189, %187
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %183
  %193 = load void (%"struct.webrtc::AecmCore"*, i16*, i32*)*, void (%"struct.webrtc::AecmCore"*, i16*, i32*)** @_ZN6webrtc31WebRtcAecm_StoreAdaptiveChannelE, align 8
  tail call void %193(%"struct.webrtc::AecmCore"* %0, i16* %1, i32* %5) #9
  br label %363

194:                                              ; preds = %183
  %195 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 26
  %196 = load i16, i16* %195, align 8
  %197 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 57
  %198 = load i16, i16* %197, align 4
  %199 = icmp slt i16 %196, %198
  %200 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 61
  br i1 %199, label %201, label %202

201:                                              ; preds = %194
  store i16 0, i16* %200, align 8
  br label %363

202:                                              ; preds = %194
  %203 = load i16, i16* %200, align 8
  %204 = add i16 %203, 1
  store i16 %204, i16* %200, align 8
  %205 = icmp sgt i16 %204, 29
  br i1 %205, label %206, label %363

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 0
  %208 = bitcast i16* %207 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2
  %210 = sext <4 x i16> %209 to <4 x i32>
  %211 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 0
  %212 = bitcast i16* %211 to <4 x i16>*
  %213 = load <4 x i16>, <4 x i16>* %212, align 2
  %214 = sext <4 x i16> %213 to <4 x i32>
  %215 = sub nsw <4 x i32> %210, %214
  %216 = icmp slt <4 x i32> %215, zeroinitializer
  %217 = sub nsw <4 x i32> zeroinitializer, %215
  %218 = select <4 x i1> %216, <4 x i32> %217, <4 x i32> %215
  %219 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 0
  %220 = bitcast i16* %219 to <4 x i16>*
  %221 = load <4 x i16>, <4 x i16>* %220, align 2
  %222 = sext <4 x i16> %221 to <4 x i32>
  %223 = sub nsw <4 x i32> %222, %214
  %224 = icmp slt <4 x i32> %223, zeroinitializer
  %225 = sub nsw <4 x i32> zeroinitializer, %223
  %226 = select <4 x i1> %224, <4 x i32> %225, <4 x i32> %223
  %227 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 4
  %228 = bitcast i16* %227 to <4 x i16>*
  %229 = load <4 x i16>, <4 x i16>* %228, align 2
  %230 = sext <4 x i16> %229 to <4 x i32>
  %231 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 4
  %232 = bitcast i16* %231 to <4 x i16>*
  %233 = load <4 x i16>, <4 x i16>* %232, align 2
  %234 = sext <4 x i16> %233 to <4 x i32>
  %235 = sub nsw <4 x i32> %230, %234
  %236 = icmp slt <4 x i32> %235, zeroinitializer
  %237 = sub nsw <4 x i32> zeroinitializer, %235
  %238 = select <4 x i1> %236, <4 x i32> %237, <4 x i32> %235
  %239 = add nuw nsw <4 x i32> %238, %218
  %240 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 4
  %241 = bitcast i16* %240 to <4 x i16>*
  %242 = load <4 x i16>, <4 x i16>* %241, align 2
  %243 = sext <4 x i16> %242 to <4 x i32>
  %244 = sub nsw <4 x i32> %243, %234
  %245 = icmp slt <4 x i32> %244, zeroinitializer
  %246 = sub nsw <4 x i32> zeroinitializer, %244
  %247 = select <4 x i1> %245, <4 x i32> %246, <4 x i32> %244
  %248 = add nuw nsw <4 x i32> %247, %226
  %249 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 8
  %250 = bitcast i16* %249 to <4 x i16>*
  %251 = load <4 x i16>, <4 x i16>* %250, align 2
  %252 = sext <4 x i16> %251 to <4 x i32>
  %253 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 8
  %254 = bitcast i16* %253 to <4 x i16>*
  %255 = load <4 x i16>, <4 x i16>* %254, align 2
  %256 = sext <4 x i16> %255 to <4 x i32>
  %257 = sub nsw <4 x i32> %252, %256
  %258 = icmp slt <4 x i32> %257, zeroinitializer
  %259 = sub nsw <4 x i32> zeroinitializer, %257
  %260 = select <4 x i1> %258, <4 x i32> %259, <4 x i32> %257
  %261 = add nuw nsw <4 x i32> %260, %239
  %262 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 8
  %263 = bitcast i16* %262 to <4 x i16>*
  %264 = load <4 x i16>, <4 x i16>* %263, align 2
  %265 = sext <4 x i16> %264 to <4 x i32>
  %266 = sub nsw <4 x i32> %265, %256
  %267 = icmp slt <4 x i32> %266, zeroinitializer
  %268 = sub nsw <4 x i32> zeroinitializer, %266
  %269 = select <4 x i1> %267, <4 x i32> %268, <4 x i32> %266
  %270 = add nuw nsw <4 x i32> %269, %248
  %271 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 12
  %272 = bitcast i16* %271 to <4 x i16>*
  %273 = load <4 x i16>, <4 x i16>* %272, align 2
  %274 = sext <4 x i16> %273 to <4 x i32>
  %275 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 12
  %276 = bitcast i16* %275 to <4 x i16>*
  %277 = load <4 x i16>, <4 x i16>* %276, align 2
  %278 = sext <4 x i16> %277 to <4 x i32>
  %279 = sub nsw <4 x i32> %274, %278
  %280 = icmp slt <4 x i32> %279, zeroinitializer
  %281 = sub nsw <4 x i32> zeroinitializer, %279
  %282 = select <4 x i1> %280, <4 x i32> %281, <4 x i32> %279
  %283 = add nuw nsw <4 x i32> %282, %261
  %284 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 12
  %285 = bitcast i16* %284 to <4 x i16>*
  %286 = load <4 x i16>, <4 x i16>* %285, align 2
  %287 = sext <4 x i16> %286 to <4 x i32>
  %288 = sub nsw <4 x i32> %287, %278
  %289 = icmp slt <4 x i32> %288, zeroinitializer
  %290 = sub nsw <4 x i32> zeroinitializer, %288
  %291 = select <4 x i1> %289, <4 x i32> %290, <4 x i32> %288
  %292 = add nuw nsw <4 x i32> %291, %270
  %293 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 16
  %294 = bitcast i16* %293 to <4 x i16>*
  %295 = load <4 x i16>, <4 x i16>* %294, align 2
  %296 = sext <4 x i16> %295 to <4 x i32>
  %297 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 16
  %298 = bitcast i16* %297 to <4 x i16>*
  %299 = load <4 x i16>, <4 x i16>* %298, align 2
  %300 = sext <4 x i16> %299 to <4 x i32>
  %301 = sub nsw <4 x i32> %296, %300
  %302 = icmp slt <4 x i32> %301, zeroinitializer
  %303 = sub nsw <4 x i32> zeroinitializer, %301
  %304 = select <4 x i1> %302, <4 x i32> %303, <4 x i32> %301
  %305 = add nuw nsw <4 x i32> %304, %283
  %306 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 27, i64 16
  %307 = bitcast i16* %306 to <4 x i16>*
  %308 = load <4 x i16>, <4 x i16>* %307, align 2
  %309 = sext <4 x i16> %308 to <4 x i32>
  %310 = sub nsw <4 x i32> %309, %300
  %311 = icmp slt <4 x i32> %310, zeroinitializer
  %312 = sub nsw <4 x i32> zeroinitializer, %310
  %313 = select <4 x i1> %311, <4 x i32> %312, <4 x i32> %310
  %314 = add nuw nsw <4 x i32> %313, %292
  %315 = shufflevector <4 x i32> %305, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %316 = add <4 x i32> %305, %315
  %317 = shufflevector <4 x i32> %316, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %318 = add <4 x i32> %316, %317
  %319 = extractelement <4 x i32> %318, i32 0
  %320 = shufflevector <4 x i32> %314, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %321 = add <4 x i32> %314, %320
  %322 = shufflevector <4 x i32> %321, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %323 = add <4 x i32> %321, %322
  %324 = extractelement <4 x i32> %323, i32 0
  %325 = shl i32 %319, 5
  %326 = mul nsw i32 %324, 29
  %327 = icmp slt i32 %325, %326
  %328 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 51
  %329 = load i32, i32* %328, align 4
  %330 = shl i32 %329, 5
  %331 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 50
  %332 = load i32, i32* %331, align 8
  %333 = mul nsw i32 %332, 29
  %334 = icmp slt i32 %330, %333
  %335 = and i1 %327, %334
  br i1 %335, label %336, label %338

336:                                              ; preds = %206
  %337 = load void (%"struct.webrtc::AecmCore"*)*, void (%"struct.webrtc::AecmCore"*)** @_ZN6webrtc31WebRtcAecm_ResetAdaptiveChannelE, align 8
  tail call void %337(%"struct.webrtc::AecmCore"* %0) #9
  br label %362

338:                                              ; preds = %206
  %339 = mul nsw i32 %319, 29
  %340 = shl i32 %324, 5
  %341 = icmp sgt i32 %339, %340
  %342 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 52
  %343 = load i32, i32* %342, align 8
  %344 = icmp slt i32 %324, %343
  %345 = and i1 %341, %344
  %346 = icmp slt i32 %332, %343
  %347 = and i1 %346, %345
  br i1 %347, label %348, label %362

348:                                              ; preds = %338
  %349 = load void (%"struct.webrtc::AecmCore"*, i16*, i32*)*, void (%"struct.webrtc::AecmCore"*, i16*, i32*)** @_ZN6webrtc31WebRtcAecm_StoreAdaptiveChannelE, align 8
  tail call void %349(%"struct.webrtc::AecmCore"* %0, i16* %1, i32* %5) #9
  %350 = load i32, i32* %342, align 8
  %351 = icmp eq i32 %350, 2147483647
  br i1 %351, label %352, label %355

352:                                              ; preds = %348
  %353 = load i32, i32* %331, align 8
  %354 = add nsw i32 %353, %324
  store i32 %354, i32* %342, align 8
  br label %362

355:                                              ; preds = %348
  %356 = mul nsw i32 %350, 5
  %357 = sdiv i32 %356, 8
  %358 = sub nsw i32 %324, %357
  %359 = mul nsw i32 %358, 205
  %360 = ashr i32 %359, 8
  %361 = add nsw i32 %360, %350
  store i32 %361, i32* %342, align 8
  br label %362

362:                                              ; preds = %338, %355, %352, %336
  store i16 0, i16* %200, align 8
  store i32 %319, i32* %328, align 4
  store i32 %324, i32* %331, align 8
  br label %363

363:                                              ; preds = %201, %202, %362, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN6webrtc30WebRtcAecm_CalcSuppressionGainEPNS_8AecmCoreE(%"struct.webrtc::AecmCore"* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 58
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 25, i64 0
  %7 = load i16, i16* %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 28, i64 0
  %9 = load i16, i16* %8, align 2
  %10 = sub i16 %7, %9
  %11 = icmp slt i16 %10, 0
  %12 = sub i16 0, %10
  %13 = select i1 %11, i16 %12, i16 %10
  %14 = sext i16 %13 to i32
  %15 = icmp slt i16 %13, 400
  br i1 %15, label %16, label %41

16:                                               ; preds = %5
  %17 = icmp slt i16 %13, 200
  br i1 %17, label %18, label %29

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 66
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = mul nsw i32 %21, %14
  %23 = add nsw i32 %22, 100
  %24 = tail call i32 @WebRtcSpl_DivW32W16(i32 %23, i16 signext 200) #9
  %25 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 64
  %26 = load i16, i16* %25, align 2
  %27 = trunc i32 %24 to i16
  %28 = sub i16 %26, %27
  br label %44

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 67
  %31 = load i16, i16* %30, align 4
  %32 = sext i16 %31 to i32
  %33 = sub nsw i32 400, %14
  %34 = mul nsw i32 %33, %32
  %35 = add nsw i32 %34, 100
  %36 = tail call i32 @WebRtcSpl_DivW32W16(i32 %35, i16 signext 200) #9
  %37 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 65
  %38 = load i16, i16* %37, align 8
  %39 = trunc i32 %36 to i16
  %40 = add i16 %38, %39
  br label %44

41:                                               ; preds = %5
  %42 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 65
  %43 = load i16, i16* %42, align 8
  br label %44

44:                                               ; preds = %1, %41, %29, %18
  %45 = phi i16 [ %28, %18 ], [ %40, %29 ], [ %43, %41 ], [ 0, %1 ]
  %46 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 63
  %47 = load i16, i16* %46, align 4
  %48 = icmp sgt i16 %45, %47
  %49 = select i1 %48, i16 %45, i16 %47
  store i16 %45, i16* %46, align 4
  %50 = sext i16 %49 to i32
  %51 = getelementptr inbounds %"struct.webrtc::AecmCore", %"struct.webrtc::AecmCore"* %0, i64 0, i32 62
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = sub nsw i32 %50, %53
  %55 = ashr i32 %54, 4
  %56 = trunc i32 %55 to i16
  %57 = add i16 %52, %56
  store i16 %57, i16* %51, align 2
  ret i16 %57
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i32 0, i32 33}
!6 = !{i32 16, i32 33}
