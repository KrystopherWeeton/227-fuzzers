; ModuleID = '../../v8/src/regexp/regexp-bytecode-peephole.cc'
source_filename = "../../v8/src/regexp/regexp-bytecode-peephole.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.976", i32, i8, i8, i32, i32, %"class.std::__1::vector.982", %"class.std::__1::vector.982", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.989", i64, %"class.std::__1::unordered_map.990", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1046", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1084", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1118", %"class.std::__1::vector.1122", %"class.std::__1::vector.1122", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1051", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1067", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1051" = type { %"struct.std::__1::__atomic_base.1052" }
%"struct.std::__1::__atomic_base.1052" = type { %"struct.std::__1::__cxx_atomic_impl.1053" }
%"struct.std::__1::__cxx_atomic_impl.1053" = type { %"struct.std::__1::__cxx_atomic_base_impl.1054" }
%"struct.std::__1::__cxx_atomic_base_impl.1054" = type { i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1067" = type { %"class.std::__1::__vector_base.1068" }
%"class.std::__1::__vector_base.1068" = type { %"struct.std::__1::pair.1069"*, %"struct.std::__1::pair.1069"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1069" = type opaque
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1069"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.989" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.990" = type { %"class.std::__1::__hash_table.991" }
%"class.std::__1::__hash_table.991" = type <{ %"class.std::__1::unique_ptr.992", %"class.std::__1::__compressed_pair.1002", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1010", [4 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994", %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.std::__1::__hash_node_base.995"** }
%"struct.std::__1::__hash_node_base.995" = type { %"struct.std::__1::__hash_node_base.995"* }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.std::__1::__bucket_list_deallocator.997" }
%"class.std::__1::__bucket_list_deallocator.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.995" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1014", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1043", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1044", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1014" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1039, %union.anon.1041, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1039 = type { i64 }
%union.anon.1041 = type { i64 }
%"class.std::__1::weak_ptr.1043" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1044" = type { %"class.v8::PersistentBase.1045" }
%"class.v8::PersistentBase.1045" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1015", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1015" = type { %"class.std::__1::__hash_table.1016" }
%"class.std::__1::__hash_table.1016" = type <{ %"class.std::__1::unique_ptr.1017", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1035", [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019", %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1020"** }
%"struct.std::__1::__hash_node_base.1020" = type { %"struct.std::__1::__hash_node_base.1020"* }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__bucket_list_deallocator.1022" }
%"class.std::__1::__bucket_list_deallocator.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1020" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1075", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1092" }
%"class.std::__1::unordered_map.1092" = type { %"class.std::__1::__hash_table.1093" }
%"class.std::__1::__hash_table.1093" = type <{ %"class.std::__1::unique_ptr.1094", %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1112", [4 x i8] }>
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096", %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::__hash_node_base.1097"** }
%"struct.std::__1::__hash_node_base.1097" = type { %"struct.std::__1::__hash_node_base.1097"* }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.std::__1::__bucket_list_deallocator.1099" }
%"class.std::__1::__bucket_list_deallocator.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::__hash_node_base.1097" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1118" = type { %"struct.std::__1::__atomic_base.1119" }
%"struct.std::__1::__atomic_base.1119" = type { %"struct.std::__1::__cxx_atomic_impl.1120" }
%"struct.std::__1::__cxx_atomic_impl.1120" = type { %"struct.std::__1::__cxx_atomic_base_impl.1121" }
%"struct.std::__1::__cxx_atomic_base_impl.1121" = type { %"class.std::__1::vector.1122"* }
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1124" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1130" }
%"class.std::__1::unordered_map.1130" = type { %"class.std::__1::__hash_table.1131" }
%"class.std::__1::__hash_table.1131" = type <{ %"class.std::__1::unique_ptr.1132", %"class.std::__1::__compressed_pair.1140", %"class.std::__1::__compressed_pair.1144", %"class.std::__1::__compressed_pair.1147", [4 x i8] }>
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134", %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"struct.std::__1::__hash_node_base.1135"** }
%"struct.std::__1::__hash_node_base.1135" = type { %"struct.std::__1::__hash_node_base.1135"* }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.std::__1::__bucket_list_deallocator.1137" }
%"class.std::__1::__bucket_list_deallocator.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141", %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"struct.std::__1::__hash_node_base.1135" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.v8::internal::ZoneAllocator.1143" }
%"class.v8::internal::ZoneAllocator.1143" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::ZoneLinkedList.1261" = type { %"class.std::__1::list.1262" }
%"class.std::__1::list.1262" = type { %"class.std::__1::__list_imp.1263" }
%"class.std::__1::__list_imp.1263" = type { %"struct.std::__1::__list_node_base.1264", %"class.std::__1::__compressed_pair.1265" }
%"struct.std::__1::__list_node_base.1264" = type { %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"* }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.v8::internal::ZoneAllocator.1267" }
%"class.v8::internal::ZoneAllocator.1267" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole" = type { %"class.v8::internal::ZoneVector", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap", %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1151" }
%"class.std::__1::vector.1151" = type { %"class.std::__1::__vector_base.1152" }
%"class.std::__1::__vector_base.1152" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154", %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::ZoneAllocator.1156" }
%"class.v8::internal::ZoneAllocator.1156" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode" = type { i32, i32, i32, i32, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::ZoneUnorderedMap.1157", %"class.v8::internal::ZoneVector.1180"*, %"class.v8::internal::ZoneLinkedList"*, %"class.v8::internal::ZoneLinkedList.1193"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneUnorderedMap.1157" = type { %"class.std::__1::unordered_map.1158" }
%"class.std::__1::unordered_map.1158" = type { %"class.std::__1::__hash_table.1159" }
%"class.std::__1::__hash_table.1159" = type <{ %"class.std::__1::unique_ptr.1160", %"class.std::__1::__compressed_pair.1169", %"class.std::__1::__compressed_pair.1173", %"class.std::__1::__compressed_pair.1176", [4 x i8] }>
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.std::__1::__hash_node_base.1163"** }
%"struct.std::__1::__hash_node_base.1163" = type { %"struct.std::__1::__hash_node_base.1163"* }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.std::__1::__bucket_list_deallocator.1165" }
%"class.std::__1::__bucket_list_deallocator.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::ZoneAllocator.1168" }
%"class.v8::internal::ZoneAllocator.1168" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170", %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.std::__1::__hash_node_base.1163" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::internal::ZoneAllocator.1172" }
%"class.v8::internal::ZoneAllocator.1172" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::ZoneVector.1180" = type { %"class.std::__1::vector.1181" }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"class.std::__1::__compressed_pair.1183" }
%"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping" = type { %"struct.v8::internal::(anonymous namespace)::BytecodeArgument", i32 }
%"struct.v8::internal::(anonymous namespace)::BytecodeArgument" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184", %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::internal::ZoneAllocator.1186" }
%"class.v8::internal::ZoneAllocator.1186" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list.1187" }
%"class.std::__1::list.1187" = type { %"class.std::__1::__list_imp.1188" }
%"class.std::__1::__list_imp.1188" = type { %"struct.std::__1::__list_node_base.1189", %"class.std::__1::__compressed_pair.1190" }
%"struct.std::__1::__list_node_base.1189" = type { %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"* }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.v8::internal::ZoneAllocator.1192" }
%"class.v8::internal::ZoneAllocator.1192" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneLinkedList.1193" = type { %"class.std::__1::list.1194" }
%"class.std::__1::list.1194" = type { %"class.std::__1::__list_imp.1195" }
%"class.std::__1::__list_imp.1195" = type { %"struct.std::__1::__list_node_base.1196", %"class.std::__1::__compressed_pair.1197" }
%"struct.std::__1::__list_node_base.1196" = type { %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"* }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::ZoneAllocator.1199" }
%"class.v8::internal::ZoneAllocator.1199" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1200" }
%"class.std::__1::__tree.1200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1201", %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.81", %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::internal::ZoneAllocator.1203" }
%"class.v8::internal::ZoneAllocator.1203" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1227" }
%"struct.std::__1::pair.1227" = type { i32, i32 }
%"struct.std::__1::__hash_node.1230" = type { %"struct.std::__1::__hash_node_base.1135", i64, %"struct.std::__1::__hash_value_type.1229" }
%"struct.std::__1::__hash_value_type.1229" = type { %"struct.std::__1::pair.1227" }
%"struct.std::__1::__list_node" = type <{ %"struct.std::__1::__list_node_base.1189", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck", [4 x i8] }>
%"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck" = type { %"struct.v8::internal::(anonymous namespace)::BytecodeArgument", i32, i32, i32 }
%"struct.std::__1::__list_node.1256" = type { %"struct.std::__1::__list_node_base.1196", %"struct.v8::internal::(anonymous namespace)::BytecodeArgument" }
%"struct.std::__1::__list_node.1275" = type <{ %"struct.std::__1::__list_node_base.1264", i32, [4 x i8] }>
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1163", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1219" }
%"struct.std::__1::pair.1219" = type { i32, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_ = comdat any

$_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS7_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IS8_EESA_SA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

@_ZN2v88internal39FLAG_trace_regexp_peephole_optimizationE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [20 x i8] c"Original Bytecode:\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Optimized Bytecode:\0A\00", align 1
@_ZN2v88internalL22kRegExpBytecodeLengthsE = internal unnamed_addr constant [59 x i32] [i32 4, i32 4, i32 8, i32 4, i32 8, i32 4, i32 4, i32 4, i32 8, i32 8, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 8, i32 8, i32 4, i32 8, i32 4, i32 8, i32 4, i32 12, i32 8, i32 12, i32 8, i32 16, i32 12, i32 16, i32 12, i32 12, i32 12, i32 12, i32 24, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 12, i32 12, i32 12, i32 8, i32 8, i32 8, i32 8, i32 8, i32 4, i32 8, i32 32, i32 24, i32 16, i32 20, i32 20, i32 32], align 16
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal34RegExpBytecodePeepholeOptimization16OptimizeBytecodeEPNS0_7IsolateEPNS0_4ZoneENS0_6HandleINS0_6StringEEEPKhiRKNS0_16ZoneUnorderedMapIiiNS_4base4hashIiEENSt3__18equal_toIiEEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i64*, i8*, i32, %"class.v8::internal::ZoneUnorderedMap"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  %10 = alloca i64, align 8
  %11 = alloca i16, align 2
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca %"class.v8::internal::ZoneLinkedList.1261", align 8
  %16 = alloca %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", align 8
  %17 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %18 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %19 = bitcast %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %19) #6
  %20 = sext i32 %4 to i64
  %21 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %22 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.1155"* %22 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #6
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ult i64 %29, 112
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %6
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 112) #6
  br label %35

33:                                               ; preds = %6
  %34 = add i64 %26, 112
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeC2EiPNS0_4ZoneE(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %37, i32 -1, %"class.v8::internal::Zone"* %1) #6
  store %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %37, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %38 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %40 = bitcast %"struct.std::__1::__compressed_pair_elem.1202"* %39 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.1201"* %41 to i64*
  store i64 0, i64* %42, align 8
  store i64 %21, i64* %40, align 8
  %43 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %38, align 8
  %45 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 1, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.1202"* %46 to i64*
  %48 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__compressed_pair.1201"* %48 to i64*
  store i64 0, i64* %49, align 8
  store i64 %21, i64* %47, align 8
  %50 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %45, align 8
  %52 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 1, i32 1
  %54 = bitcast %"struct.std::__1::__compressed_pair_elem.1202"* %53 to i64*
  %55 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__compressed_pair.1201"* %55 to i64*
  store i64 0, i64* %56, align 8
  store i64 %21, i64* %54, align 8
  %57 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %52, align 8
  %59 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1
  %61 = bitcast %"struct.std::__1::__compressed_pair_elem.1202"* %60 to i64*
  %62 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::__compressed_pair.1201"* %62 to i64*
  store i64 0, i64* %63, align 8
  store i64 %21, i64* %61, align 8
  %64 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"** %59, align 8
  %66 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1
  %68 = bitcast %"struct.std::__1::__compressed_pair_elem.1202"* %67 to i64*
  %69 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::__compressed_pair.1201"* %69 to i64*
  store i64 0, i64* %70, align 8
  store i64 %21, i64* %68, align 8
  %71 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %66, align 8
  %73 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 7
  %74 = bitcast %"class.v8::internal::Zone"** %73 to i64*
  store i64 %21, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast i8** %75 to i64*
  %77 = bitcast %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16 to i64*
  %78 = icmp eq i32 %4, 0
  br i1 %78, label %208, label %79

79:                                               ; preds = %35
  %80 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast i8** %80 to i64*
  %82 = add nsw i64 %20, 7
  %83 = and i64 %82, -8
  %84 = load i64, i64* %25, align 8
  %85 = load i64, i64* %27, align 8
  %86 = sub i64 %85, %84
  %87 = icmp ugt i64 %83, %86
  br i1 %87, label %93, label %88, !prof !2

88:                                               ; preds = %79
  %89 = add i64 %84, %83
  store i64 %89, i64* %25, align 8
  %90 = inttoptr i64 %84 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 %20
  %92 = ptrtoint i8* %91 to i64
  br label %204

93:                                               ; preds = %79
  %94 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %83) #6
  %95 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = load i8*, i8** %80, align 8
  %98 = ptrtoint i8* %97 to i64
  %99 = inttoptr i64 %94 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 %20
  %101 = ptrtoint i8* %100 to i64
  %102 = icmp eq i8* %97, %96
  br i1 %102, label %204, label %103

103:                                              ; preds = %93
  %104 = ptrtoint i8* %96 to i64
  %105 = ptrtoint i8* %97 to i64
  %106 = sub i64 %105, %104
  %107 = icmp ult i64 %106, 16
  br i1 %107, label %191, label %108

108:                                              ; preds = %103
  %109 = ptrtoint i8* %96 to i64
  %110 = sub i64 %109, %98
  %111 = getelementptr i8, i8* %99, i64 %110
  %112 = icmp ult i8* %111, %97
  %113 = icmp ult i8* %96, %99
  %114 = and i1 %112, %113
  br i1 %114, label %191, label %115

115:                                              ; preds = %108
  %116 = and i64 %106, -16
  %117 = sub i64 0, %116
  %118 = getelementptr i8, i8* %99, i64 %117
  %119 = sub i64 0, %116
  %120 = getelementptr i8, i8* %97, i64 %119
  %121 = add i64 %116, -16
  %122 = lshr exact i64 %121, 4
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 3
  %125 = icmp ult i64 %121, 48
  br i1 %125, label %170, label %126

126:                                              ; preds = %115
  %127 = sub nsw i64 %123, %124
  %128 = getelementptr inbounds i8, i8* %97, i64 -16
  %129 = getelementptr inbounds i8, i8* %99, i64 -16
  %130 = getelementptr inbounds i8, i8* %97, i64 -16
  %131 = getelementptr inbounds i8, i8* %99, i64 -16
  %132 = getelementptr inbounds i8, i8* %97, i64 -16
  %133 = getelementptr inbounds i8, i8* %99, i64 -16
  %134 = getelementptr inbounds i8, i8* %97, i64 -16
  %135 = getelementptr inbounds i8, i8* %99, i64 -16
  br label %136

136:                                              ; preds = %136, %126
  %137 = phi i64 [ 0, %126 ], [ %167, %136 ]
  %138 = phi i64 [ %127, %126 ], [ %168, %136 ]
  %139 = sub i64 0, %137
  %140 = sub i64 0, %137
  %141 = getelementptr inbounds i8, i8* %128, i64 %140
  %142 = bitcast i8* %141 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 1, !alias.scope !3
  %144 = getelementptr inbounds i8, i8* %129, i64 %139
  %145 = bitcast i8* %144 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %145, align 1, !alias.scope !6, !noalias !3
  %146 = sub nuw nsw i64 -16, %137
  %147 = sub nuw nsw i64 -16, %137
  %148 = getelementptr inbounds i8, i8* %130, i64 %147
  %149 = bitcast i8* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 1, !alias.scope !3
  %151 = getelementptr inbounds i8, i8* %131, i64 %146
  %152 = bitcast i8* %151 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %152, align 1, !alias.scope !6, !noalias !3
  %153 = sub nuw nsw i64 -32, %137
  %154 = sub nuw nsw i64 -32, %137
  %155 = getelementptr inbounds i8, i8* %132, i64 %154
  %156 = bitcast i8* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 1, !alias.scope !3
  %158 = getelementptr inbounds i8, i8* %133, i64 %153
  %159 = bitcast i8* %158 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %159, align 1, !alias.scope !6, !noalias !3
  %160 = sub nuw nsw i64 -48, %137
  %161 = sub nuw nsw i64 -48, %137
  %162 = getelementptr inbounds i8, i8* %134, i64 %161
  %163 = bitcast i8* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 1, !alias.scope !3
  %165 = getelementptr inbounds i8, i8* %135, i64 %160
  %166 = bitcast i8* %165 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %166, align 1, !alias.scope !6, !noalias !3
  %167 = add i64 %137, 64
  %168 = add i64 %138, -4
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %136, !llvm.loop !8

170:                                              ; preds = %136, %115
  %171 = phi i64 [ 0, %115 ], [ %167, %136 ]
  %172 = icmp eq i64 %124, 0
  br i1 %172, label %189, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds i8, i8* %97, i64 -16
  %175 = getelementptr inbounds i8, i8* %99, i64 -16
  br label %176

176:                                              ; preds = %176, %173
  %177 = phi i64 [ %171, %173 ], [ %186, %176 ]
  %178 = phi i64 [ %124, %173 ], [ %187, %176 ]
  %179 = sub i64 0, %177
  %180 = sub i64 0, %177
  %181 = getelementptr inbounds i8, i8* %174, i64 %180
  %182 = bitcast i8* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 1, !alias.scope !3
  %184 = getelementptr inbounds i8, i8* %175, i64 %179
  %185 = bitcast i8* %184 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %185, align 1, !alias.scope !6, !noalias !3
  %186 = add i64 %177, 16
  %187 = add i64 %178, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %176, !llvm.loop !10

189:                                              ; preds = %176, %170
  %190 = icmp eq i64 %106, %116
  br i1 %190, label %201, label %191

191:                                              ; preds = %189, %108, %103
  %192 = phi i8* [ %99, %108 ], [ %99, %103 ], [ %118, %189 ]
  %193 = phi i8* [ %97, %108 ], [ %97, %103 ], [ %120, %189 ]
  br label %194

194:                                              ; preds = %191, %194
  %195 = phi i8* [ %197, %194 ], [ %192, %191 ]
  %196 = phi i8* [ %198, %194 ], [ %193, %191 ]
  %197 = getelementptr inbounds i8, i8* %195, i64 -1
  %198 = getelementptr inbounds i8, i8* %196, i64 -1
  %199 = load i8, i8* %198, align 1
  store i8 %199, i8* %197, align 1
  %200 = icmp eq i8* %198, %96
  br i1 %200, label %201, label %194, !llvm.loop !12

201:                                              ; preds = %194, %189
  %202 = phi i8* [ %118, %189 ], [ %197, %194 ]
  %203 = ptrtoint i8* %202 to i64
  br label %204

204:                                              ; preds = %88, %201, %93
  %205 = phi i64 [ %101, %93 ], [ %101, %201 ], [ %92, %88 ]
  %206 = phi i64 [ %94, %93 ], [ %94, %201 ], [ %84, %88 ]
  %207 = phi i64 [ %94, %93 ], [ %203, %201 ], [ %84, %88 ]
  store i64 %207, i64* %77, align 8
  store i64 %206, i64* %81, align 8
  store i64 %205, i64* %76, align 8
  br label %208

208:                                              ; preds = %35, %204
  %209 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %210 = bitcast %"struct.std::__1::__hash_node_base.1135"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %376, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0
  %215 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node"**
  %216 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %218 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %219 = getelementptr inbounds %"class.std::__1::__tree.1200", %"class.std::__1::__tree.1200"* %214, i64 0, i32 0
  %220 = bitcast %"class.std::__1::__tree.1200"* %214 to i64*
  %221 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0
  %222 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %223 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %225 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %226 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %221, i64 0, i32 0, i32 0
  %227 = bitcast %"class.std::__1::map"* %221 to i64*
  br label %228

228:                                              ; preds = %368, %213
  %229 = phi i64 [ %211, %213 ], [ %374, %368 ]
  %230 = inttoptr i64 %229 to %"struct.std::__1::__hash_node.1230"*
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node.1230", %"struct.std::__1::__hash_node.1230"* %230, i64 0, i32 2, i32 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node.1230", %"struct.std::__1::__hash_node.1230"* %230, i64 0, i32 2, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %215, align 8
  %236 = icmp eq %"class.std::__1::__tree_node"* %235, null
  br i1 %236, label %263, label %237

237:                                              ; preds = %228, %259
  %238 = phi %"class.std::__1::__tree_node"* [ %262, %259 ], [ %235, %228 ]
  %239 = phi %"class.std::__1::__tree_node_base"** [ %261, %259 ], [ %216, %228 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 1, i32 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %232, %241
  br i1 %242, label %243, label %249

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 0, i32 0, i32 0
  %245 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %246 = icmp eq %"class.std::__1::__tree_node_base"* %245, null
  br i1 %246, label %247, label %259

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 0, i32 0
  br label %263

249:                                              ; preds = %237
  %250 = icmp slt i32 %241, %232
  br i1 %250, label %251, label %257

251:                                              ; preds = %249
  %252 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 0, i32 1
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, null
  br i1 %254, label %255, label %259

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 0, i32 0
  br label %263

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %238, i64 0, i32 0, i32 0
  br label %263

259:                                              ; preds = %251, %243
  %260 = phi %"class.std::__1::__tree_node_base"* [ %245, %243 ], [ %253, %251 ]
  %261 = phi %"class.std::__1::__tree_node_base"** [ %244, %243 ], [ %252, %251 ]
  %262 = bitcast %"class.std::__1::__tree_node_base"* %260 to %"class.std::__1::__tree_node"*
  br label %237

263:                                              ; preds = %257, %255, %247, %228
  %264 = phi %"class.std::__1::__tree_end_node"* [ %248, %247 ], [ %256, %255 ], [ %258, %257 ], [ %44, %228 ]
  %265 = phi %"class.std::__1::__tree_node_base"** [ %244, %247 ], [ %252, %255 ], [ %239, %257 ], [ %217, %228 ]
  %266 = bitcast %"class.std::__1::__tree_node_base"** %265 to %"class.std::__1::__tree_node"**
  %267 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node"* %267, null
  br i1 %268, label %269, label %301

269:                                              ; preds = %263
  %270 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %218, align 8, !noalias !13
  %271 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %270, i64 0, i32 2
  %272 = load i64, i64* %271, align 8, !noalias !13
  %273 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %270, i64 0, i32 3
  %274 = load i64, i64* %273, align 8, !noalias !13
  %275 = sub i64 %274, %272
  %276 = icmp ult i64 %275, 40
  br i1 %276, label %277, label %279, !prof !2

277:                                              ; preds = %269
  %278 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %270, i64 40) #6, !noalias !13
  br label %281

279:                                              ; preds = %269
  %280 = add i64 %272, 40
  store i64 %280, i64* %271, align 8, !noalias !13
  br label %281

281:                                              ; preds = %279, %277
  %282 = phi i64 [ %278, %277 ], [ %272, %279 ]
  %283 = inttoptr i64 %282 to %"class.std::__1::__tree_node"*
  %284 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %283, i64 0, i32 1, i32 0, i32 0
  store i32 %232, i32* %284, align 4, !noalias !13
  %285 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %283, i64 0, i32 1, i32 0, i32 1
  store i32 %234, i32* %285, align 4, !noalias !13
  %286 = inttoptr i64 %282 to %"class.std::__1::__tree_node_base"*
  %287 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %286, i64 0, i32 2
  %288 = inttoptr i64 %282 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %264, %"class.std::__1::__tree_end_node"** %287, align 8
  store %"class.std::__1::__tree_node_base"* %286, %"class.std::__1::__tree_node_base"** %265, align 8
  %289 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %219, align 8
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %289, i64 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %296, label %293

293:                                              ; preds = %281
  %294 = ptrtoint %"class.std::__1::__tree_node_base"* %291 to i64
  store i64 %294, i64* %220, align 8
  %295 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  br label %296

296:                                              ; preds = %293, %281
  %297 = phi %"class.std::__1::__tree_node_base"* [ %286, %281 ], [ %295, %293 ]
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %298, %"class.std::__1::__tree_node_base"* %297) #6
  %299 = load i64, i64* %43, align 8
  %300 = add i64 %299, 1
  store i64 %300, i64* %43, align 8
  br label %301

301:                                              ; preds = %296, %263
  %302 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %222, align 8
  %303 = icmp eq %"class.std::__1::__tree_node"* %302, null
  br i1 %303, label %330, label %304

304:                                              ; preds = %301, %326
  %305 = phi %"class.std::__1::__tree_node"* [ %329, %326 ], [ %302, %301 ]
  %306 = phi %"class.std::__1::__tree_node_base"** [ %328, %326 ], [ %223, %301 ]
  %307 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 1, i32 0, i32 0
  %308 = load i32, i32* %307, align 4
  %309 = icmp slt i32 %234, %308
  br i1 %309, label %310, label %316

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, null
  br i1 %313, label %314, label %326

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 0
  br label %330

316:                                              ; preds = %304
  %317 = icmp slt i32 %308, %234
  br i1 %317, label %318, label %324

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 1
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %322, label %326

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 0
  br label %330

324:                                              ; preds = %316
  %325 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 0
  br label %330

326:                                              ; preds = %318, %310
  %327 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %320, %318 ]
  %328 = phi %"class.std::__1::__tree_node_base"** [ %311, %310 ], [ %319, %318 ]
  %329 = bitcast %"class.std::__1::__tree_node_base"* %327 to %"class.std::__1::__tree_node"*
  br label %304

330:                                              ; preds = %324, %322, %314, %301
  %331 = phi %"class.std::__1::__tree_end_node"* [ %315, %314 ], [ %323, %322 ], [ %325, %324 ], [ %58, %301 ]
  %332 = phi %"class.std::__1::__tree_node_base"** [ %311, %314 ], [ %319, %322 ], [ %306, %324 ], [ %224, %301 ]
  %333 = bitcast %"class.std::__1::__tree_node_base"** %332 to %"class.std::__1::__tree_node"**
  %334 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %333, align 8
  %335 = icmp eq %"class.std::__1::__tree_node"* %334, null
  br i1 %335, label %336, label %368

336:                                              ; preds = %330
  %337 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %225, align 8, !noalias !16
  %338 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %337, i64 0, i32 2
  %339 = load i64, i64* %338, align 8, !noalias !16
  %340 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %337, i64 0, i32 3
  %341 = load i64, i64* %340, align 8, !noalias !16
  %342 = sub i64 %341, %339
  %343 = icmp ult i64 %342, 40
  br i1 %343, label %344, label %346, !prof !2

344:                                              ; preds = %336
  %345 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %337, i64 40) #6, !noalias !16
  br label %348

346:                                              ; preds = %336
  %347 = add i64 %339, 40
  store i64 %347, i64* %338, align 8, !noalias !16
  br label %348

348:                                              ; preds = %346, %344
  %349 = phi i64 [ %345, %344 ], [ %339, %346 ]
  %350 = inttoptr i64 %349 to %"class.std::__1::__tree_node"*
  %351 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %350, i64 0, i32 1, i32 0, i32 0
  store i32 %234, i32* %351, align 4, !noalias !16
  %352 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %350, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %352, align 4, !noalias !16
  %353 = inttoptr i64 %349 to %"class.std::__1::__tree_node_base"*
  %354 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  %355 = inttoptr i64 %349 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %331, %"class.std::__1::__tree_end_node"** %354, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %332, align 8
  %356 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %226, align 8
  %357 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %356, i64 0, i32 0
  %358 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %357, align 8
  %359 = icmp eq %"class.std::__1::__tree_node_base"* %358, null
  br i1 %359, label %363, label %360

360:                                              ; preds = %348
  %361 = ptrtoint %"class.std::__1::__tree_node_base"* %358 to i64
  store i64 %361, i64* %227, align 8
  %362 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  br label %363

363:                                              ; preds = %360, %348
  %364 = phi %"class.std::__1::__tree_node_base"* [ %353, %348 ], [ %362, %360 ]
  %365 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %365, %"class.std::__1::__tree_node_base"* %364) #6
  %366 = load i64, i64* %57, align 8
  %367 = add i64 %366, 1
  store i64 %367, i64* %57, align 8
  br label %368

368:                                              ; preds = %363, %330
  %369 = phi %"class.std::__1::__tree_node"* [ %350, %363 ], [ %334, %330 ]
  %370 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %369, i64 0, i32 1, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %370, align 4
  %373 = inttoptr i64 %229 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %376, label %228

376:                                              ; preds = %368, %208
  %377 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %378 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %377, i32 17) #6
  %379 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %378, i32 34) #6
  %380 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %379, i32 50) #6
  %381 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %380, i64 0, i32 3
  %382 = load i32, i32* %381, align 4
  %383 = add nsw i32 %382, 4
  %384 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %380, i64 0, i32 7
  %385 = bitcast %"class.v8::internal::ZoneLinkedList"** %384 to %"class.std::__1::list.1187"**
  %386 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %385, align 8
  %387 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %386, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %388 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %387, align 8, !noalias !19
  %389 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %388, i64 0, i32 2
  %390 = load i64, i64* %389, align 8, !noalias !19
  %391 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %388, i64 0, i32 3
  %392 = load i64, i64* %391, align 8, !noalias !19
  %393 = sub i64 %392, %390
  %394 = icmp ult i64 %393, 40
  br i1 %394, label %395, label %397, !prof !2

395:                                              ; preds = %376
  %396 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %388, i64 40) #6, !noalias !19
  br label %399

397:                                              ; preds = %376
  %398 = add i64 %390, 40
  store i64 %398, i64* %389, align 8, !noalias !19
  br label %399

399:                                              ; preds = %397, %395
  %400 = phi i64 [ %396, %395 ], [ %390, %397 ]
  %401 = inttoptr i64 %400 to %"struct.std::__1::__list_node"*
  %402 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %402, align 8, !noalias !19
  %403 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 1, i32 0, i32 0
  store i32 %383, i32* %403, align 4
  %404 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %404, align 4
  %405 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 1, i32 1
  store i32 0, i32* %405, align 4
  %406 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 1, i32 2
  store i32 0, i32* %406, align 4
  %407 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 0
  %408 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %386, i64 0, i32 0, i32 0
  %409 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %401, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %408, %"struct.std::__1::__list_node_base.1189"** %409, align 8
  %410 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %386, i64 0, i32 0, i32 0, i32 0
  %411 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %410, align 8
  store %"struct.std::__1::__list_node_base.1189"* %411, %"struct.std::__1::__list_node_base.1189"** %402, align 8
  %412 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %411, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %407, %"struct.std::__1::__list_node_base.1189"** %412, align 8
  store %"struct.std::__1::__list_node_base.1189"* %407, %"struct.std::__1::__list_node_base.1189"** %410, align 8
  %413 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %386, i64 0, i32 0, i32 1, i32 0, i32 0
  %414 = load i64, i64* %413, align 8
  %415 = add i64 %414, 1
  store i64 %415, i64* %413, align 8
  %416 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %380, i64 0, i32 1
  store i32 53, i32* %416, align 4
  %417 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %380, i32 0, i32 1, i32 3, i32 0) #6
  %418 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %417, i32 2, i32 1, i32 3, i32 4) #6
  %419 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %418, i32 1, i32 8, i32 16, i32 0) #6
  %420 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %419, i32 1, i32 4, i32 4, i32 0) #6
  %421 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %420, i32 0, i32 4, i32 4, i32 0) #6
  %422 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %421, i64 0, i32 2
  %423 = load i32, i32* %422, align 8
  %424 = icmp sgt i32 %423, 2
  br i1 %424, label %425, label %432

425:                                              ; preds = %399, %425
  %426 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %428, %425 ], [ %421, %399 ]
  %427 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %426, i64 0, i32 4
  %428 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %427, align 8
  %429 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %428, i64 0, i32 2
  %430 = load i32, i32* %429, align 8
  %431 = icmp sgt i32 %430, 2
  br i1 %431, label %425, label %432

432:                                              ; preds = %425, %399
  %433 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %421, %399 ], [ %428, %425 ]
  %434 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %433, i64 0, i32 3
  %435 = load i32, i32* %434, align 4
  %436 = add nsw i32 %435, 4
  %437 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %421, i64 0, i32 8
  %438 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %437 to %"class.std::__1::list.1194"**
  %439 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %438, align 8
  %440 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %439, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %441 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %440, align 8, !noalias !22
  %442 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %441, i64 0, i32 2
  %443 = load i64, i64* %442, align 8, !noalias !22
  %444 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %441, i64 0, i32 3
  %445 = load i64, i64* %444, align 8, !noalias !22
  %446 = sub i64 %445, %443
  %447 = icmp ult i64 %446, 24
  br i1 %447, label %448, label %450, !prof !2

448:                                              ; preds = %432
  %449 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %441, i64 24) #6, !noalias !22
  br label %452

450:                                              ; preds = %432
  %451 = add i64 %443, 24
  store i64 %451, i64* %442, align 8, !noalias !22
  br label %452

452:                                              ; preds = %450, %448
  %453 = phi i64 [ %449, %448 ], [ %443, %450 ]
  %454 = inttoptr i64 %453 to %"struct.std::__1::__list_node.1256"*
  %455 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %454, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %455, align 8, !noalias !22
  %456 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %454, i64 0, i32 1
  %457 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %456 to i64*
  %458 = zext i32 %436 to i64
  %459 = or i64 %458, 17179869184
  store i64 %459, i64* %457, align 4
  %460 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %454, i64 0, i32 0
  %461 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %439, i64 0, i32 0, i32 0
  %462 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %454, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %461, %"struct.std::__1::__list_node_base.1196"** %462, align 8
  %463 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %439, i64 0, i32 0, i32 0, i32 0
  %464 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %463, align 8
  store %"struct.std::__1::__list_node_base.1196"* %464, %"struct.std::__1::__list_node_base.1196"** %455, align 8
  %465 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %464, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %460, %"struct.std::__1::__list_node_base.1196"** %465, align 8
  store %"struct.std::__1::__list_node_base.1196"* %460, %"struct.std::__1::__list_node_base.1196"** %463, align 8
  %466 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %439, i64 0, i32 0, i32 1, i32 0, i32 0
  %467 = load i64, i64* %466, align 8
  %468 = add i64 %467, 1
  store i64 %468, i64* %466, align 8
  %469 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %470 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %469, i32 52) #6
  %471 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %470, i32 18) #6
  %472 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %471, i32 24) #6
  %473 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %472, i32 50) #6
  %474 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %473, i64 0, i32 3
  %475 = load i32, i32* %474, align 4
  %476 = add nsw i32 %475, 4
  %477 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %473, i64 0, i32 7
  %478 = bitcast %"class.v8::internal::ZoneLinkedList"** %477 to %"class.std::__1::list.1187"**
  %479 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %478, align 8
  %480 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %479, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %481 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %480, align 8, !noalias !25
  %482 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %481, i64 0, i32 2
  %483 = load i64, i64* %482, align 8, !noalias !25
  %484 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %481, i64 0, i32 3
  %485 = load i64, i64* %484, align 8, !noalias !25
  %486 = sub i64 %485, %483
  %487 = icmp ult i64 %486, 40
  br i1 %487, label %488, label %490, !prof !2

488:                                              ; preds = %452
  %489 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %481, i64 40) #6, !noalias !25
  br label %492

490:                                              ; preds = %452
  %491 = add i64 %483, 40
  store i64 %491, i64* %482, align 8, !noalias !25
  br label %492

492:                                              ; preds = %490, %488
  %493 = phi i64 [ %489, %488 ], [ %483, %490 ]
  %494 = inttoptr i64 %493 to %"struct.std::__1::__list_node"*
  %495 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %495, align 8, !noalias !25
  %496 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 1, i32 0, i32 0
  store i32 %476, i32* %496, align 4
  %497 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %497, align 4
  %498 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 1, i32 1
  store i32 0, i32* %498, align 4
  %499 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 1, i32 2
  store i32 0, i32* %499, align 4
  %500 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 0
  %501 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %479, i64 0, i32 0, i32 0
  %502 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %494, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %501, %"struct.std::__1::__list_node_base.1189"** %502, align 8
  %503 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %479, i64 0, i32 0, i32 0, i32 0
  %504 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %503, align 8
  store %"struct.std::__1::__list_node_base.1189"* %504, %"struct.std::__1::__list_node_base.1189"** %495, align 8
  %505 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %504, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %500, %"struct.std::__1::__list_node_base.1189"** %505, align 8
  store %"struct.std::__1::__list_node_base.1189"* %500, %"struct.std::__1::__list_node_base.1189"** %503, align 8
  %506 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %479, i64 0, i32 0, i32 1, i32 0, i32 0
  %507 = load i64, i64* %506, align 8
  %508 = add i64 %507, 1
  store i64 %508, i64* %506, align 8
  %509 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %473, i64 0, i32 1
  store i32 56, i32* %509, align 4
  %510 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %473, i32 1, i32 1, i32 3, i32 0) #6
  %511 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %510, i32 3, i32 1, i32 3, i32 2) #6
  %512 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %511, i32 2, i32 1, i32 3, i32 2) #6
  %513 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %512, i32 0, i32 1, i32 3, i32 4) #6
  %514 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %513, i32 2, i32 4, i32 4, i32 0) #6
  %515 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %514, i32 0, i32 4, i32 4, i32 0) #6
  %516 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %515, i64 0, i32 2
  %517 = load i32, i32* %516, align 8
  %518 = icmp sgt i32 %517, 3
  br i1 %518, label %519, label %526

519:                                              ; preds = %492, %519
  %520 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %522, %519 ], [ %515, %492 ]
  %521 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %520, i64 0, i32 4
  %522 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %521, align 8
  %523 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %522, i64 0, i32 2
  %524 = load i32, i32* %523, align 8
  %525 = icmp sgt i32 %524, 3
  br i1 %525, label %519, label %526

526:                                              ; preds = %519, %492
  %527 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %515, %492 ], [ %522, %519 ]
  %528 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %527, i64 0, i32 3
  %529 = load i32, i32* %528, align 4
  %530 = add nsw i32 %529, 4
  %531 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %515, i64 0, i32 8
  %532 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %531 to %"class.std::__1::list.1194"**
  %533 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %532, align 8
  %534 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %533, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %535 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %534, align 8, !noalias !28
  %536 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %535, i64 0, i32 2
  %537 = load i64, i64* %536, align 8, !noalias !28
  %538 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %535, i64 0, i32 3
  %539 = load i64, i64* %538, align 8, !noalias !28
  %540 = sub i64 %539, %537
  %541 = icmp ult i64 %540, 24
  br i1 %541, label %542, label %544, !prof !2

542:                                              ; preds = %526
  %543 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %535, i64 24) #6, !noalias !28
  br label %546

544:                                              ; preds = %526
  %545 = add i64 %537, 24
  store i64 %545, i64* %536, align 8, !noalias !28
  br label %546

546:                                              ; preds = %544, %542
  %547 = phi i64 [ %543, %542 ], [ %537, %544 ]
  %548 = inttoptr i64 %547 to %"struct.std::__1::__list_node.1256"*
  %549 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %548, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %549, align 8, !noalias !28
  %550 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %548, i64 0, i32 1
  %551 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %550 to i64*
  %552 = zext i32 %530 to i64
  %553 = or i64 %552, 17179869184
  store i64 %553, i64* %551, align 4
  %554 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %548, i64 0, i32 0
  %555 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %533, i64 0, i32 0, i32 0
  %556 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %548, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %555, %"struct.std::__1::__list_node_base.1196"** %556, align 8
  %557 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %533, i64 0, i32 0, i32 0, i32 0
  %558 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %557, align 8
  store %"struct.std::__1::__list_node_base.1196"* %558, %"struct.std::__1::__list_node_base.1196"** %549, align 8
  %559 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %558, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %554, %"struct.std::__1::__list_node_base.1196"** %559, align 8
  store %"struct.std::__1::__list_node_base.1196"* %554, %"struct.std::__1::__list_node_base.1196"** %557, align 8
  %560 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %533, i64 0, i32 0, i32 1, i32 0, i32 0
  %561 = load i64, i64* %560, align 8
  %562 = add i64 %561, 1
  store i64 %562, i64* %560, align 8
  %563 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %564 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %563, i32 52) #6
  %565 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %564, i32 18) #6
  %566 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %565, i32 28) #6
  %567 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %566, i32 50) #6
  %568 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %567, i64 0, i32 3
  %569 = load i32, i32* %568, align 4
  %570 = add nsw i32 %569, 4
  %571 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %567, i64 0, i32 7
  %572 = bitcast %"class.v8::internal::ZoneLinkedList"** %571 to %"class.std::__1::list.1187"**
  %573 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %572, align 8
  %574 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %573, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %575 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %574, align 8, !noalias !31
  %576 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %575, i64 0, i32 2
  %577 = load i64, i64* %576, align 8, !noalias !31
  %578 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %575, i64 0, i32 3
  %579 = load i64, i64* %578, align 8, !noalias !31
  %580 = sub i64 %579, %577
  %581 = icmp ult i64 %580, 40
  br i1 %581, label %582, label %584, !prof !2

582:                                              ; preds = %546
  %583 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %575, i64 40) #6, !noalias !31
  br label %586

584:                                              ; preds = %546
  %585 = add i64 %577, 40
  store i64 %585, i64* %576, align 8, !noalias !31
  br label %586

586:                                              ; preds = %584, %582
  %587 = phi i64 [ %583, %582 ], [ %577, %584 ]
  %588 = inttoptr i64 %587 to %"struct.std::__1::__list_node"*
  %589 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %589, align 8, !noalias !31
  %590 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 1, i32 0, i32 0
  store i32 %570, i32* %590, align 4
  %591 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %591, align 4
  %592 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 1, i32 1
  store i32 0, i32* %592, align 4
  %593 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 1, i32 2
  store i32 0, i32* %593, align 4
  %594 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 0
  %595 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %573, i64 0, i32 0, i32 0
  %596 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %588, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %595, %"struct.std::__1::__list_node_base.1189"** %596, align 8
  %597 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %573, i64 0, i32 0, i32 0, i32 0
  %598 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %597, align 8
  store %"struct.std::__1::__list_node_base.1189"* %598, %"struct.std::__1::__list_node_base.1189"** %589, align 8
  %599 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %598, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %594, %"struct.std::__1::__list_node_base.1189"** %599, align 8
  store %"struct.std::__1::__list_node_base.1189"* %594, %"struct.std::__1::__list_node_base.1189"** %597, align 8
  %600 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %573, i64 0, i32 0, i32 1, i32 0, i32 0
  %601 = load i64, i64* %600, align 8
  %602 = add i64 %601, 1
  store i64 %602, i64* %600, align 8
  %603 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %567, i64 0, i32 1
  store i32 54, i32* %603, align 4
  %604 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %567, i32 1, i32 1, i32 3, i32 0) #6
  %605 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %604, i32 3, i32 1, i32 3, i32 2) #6
  %606 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %605, i32 2, i32 1, i32 3, i32 2) #6
  %607 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %606, i32 2, i32 4, i32 4, i32 0) #6
  %608 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %607, i32 0, i32 1, i32 3, i32 4) #6
  %609 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %608, i32 2, i32 8, i32 4, i32 0) #6
  %610 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %609, i32 0, i32 4, i32 4, i32 0) #6
  %611 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %610, i64 0, i32 2
  %612 = load i32, i32* %611, align 8
  %613 = icmp sgt i32 %612, 3
  br i1 %613, label %614, label %621

614:                                              ; preds = %586, %614
  %615 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %617, %614 ], [ %610, %586 ]
  %616 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %615, i64 0, i32 4
  %617 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %616, align 8
  %618 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %617, i64 0, i32 2
  %619 = load i32, i32* %618, align 8
  %620 = icmp sgt i32 %619, 3
  br i1 %620, label %614, label %621

621:                                              ; preds = %614, %586
  %622 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %610, %586 ], [ %617, %614 ]
  %623 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %622, i64 0, i32 3
  %624 = load i32, i32* %623, align 4
  %625 = add nsw i32 %624, 4
  %626 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %610, i64 0, i32 8
  %627 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %626 to %"class.std::__1::list.1194"**
  %628 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %627, align 8
  %629 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %628, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %630 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %629, align 8, !noalias !34
  %631 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %630, i64 0, i32 2
  %632 = load i64, i64* %631, align 8, !noalias !34
  %633 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %630, i64 0, i32 3
  %634 = load i64, i64* %633, align 8, !noalias !34
  %635 = sub i64 %634, %632
  %636 = icmp ult i64 %635, 24
  br i1 %636, label %637, label %639, !prof !2

637:                                              ; preds = %621
  %638 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %630, i64 24) #6, !noalias !34
  br label %641

639:                                              ; preds = %621
  %640 = add i64 %632, 24
  store i64 %640, i64* %631, align 8, !noalias !34
  br label %641

641:                                              ; preds = %639, %637
  %642 = phi i64 [ %638, %637 ], [ %632, %639 ]
  %643 = inttoptr i64 %642 to %"struct.std::__1::__list_node.1256"*
  %644 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %643, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %644, align 8, !noalias !34
  %645 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %643, i64 0, i32 1
  %646 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %645 to i64*
  %647 = zext i32 %625 to i64
  %648 = or i64 %647, 17179869184
  store i64 %648, i64* %646, align 4
  %649 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %643, i64 0, i32 0
  %650 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %628, i64 0, i32 0, i32 0
  %651 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %643, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %650, %"struct.std::__1::__list_node_base.1196"** %651, align 8
  %652 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %628, i64 0, i32 0, i32 0, i32 0
  %653 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %652, align 8
  store %"struct.std::__1::__list_node_base.1196"* %653, %"struct.std::__1::__list_node_base.1196"** %644, align 8
  %654 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %653, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %649, %"struct.std::__1::__list_node_base.1196"** %654, align 8
  store %"struct.std::__1::__list_node_base.1196"* %649, %"struct.std::__1::__list_node_base.1196"** %652, align 8
  %655 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %628, i64 0, i32 0, i32 1, i32 0, i32 0
  %656 = load i64, i64* %655, align 8
  %657 = add i64 %656, 1
  store i64 %657, i64* %655, align 8
  %658 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %659 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %658, i32 17) #6
  %660 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %659, i32 24) #6
  %661 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %660, i32 50) #6
  %662 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %661, i64 0, i32 3
  %663 = load i32, i32* %662, align 4
  %664 = add nsw i32 %663, 4
  %665 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %661, i64 0, i32 7
  %666 = bitcast %"class.v8::internal::ZoneLinkedList"** %665 to %"class.std::__1::list.1187"**
  %667 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %666, align 8
  %668 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %667, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %669 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %668, align 8, !noalias !37
  %670 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %669, i64 0, i32 2
  %671 = load i64, i64* %670, align 8, !noalias !37
  %672 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %669, i64 0, i32 3
  %673 = load i64, i64* %672, align 8, !noalias !37
  %674 = sub i64 %673, %671
  %675 = icmp ult i64 %674, 40
  br i1 %675, label %676, label %678, !prof !2

676:                                              ; preds = %641
  %677 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %669, i64 40) #6, !noalias !37
  br label %680

678:                                              ; preds = %641
  %679 = add i64 %671, 40
  store i64 %679, i64* %670, align 8, !noalias !37
  br label %680

680:                                              ; preds = %678, %676
  %681 = phi i64 [ %677, %676 ], [ %671, %678 ]
  %682 = inttoptr i64 %681 to %"struct.std::__1::__list_node"*
  %683 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %683, align 8, !noalias !37
  %684 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 1, i32 0, i32 0
  store i32 %664, i32* %684, align 4
  %685 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %685, align 4
  %686 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 1, i32 1
  store i32 0, i32* %686, align 4
  %687 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 1, i32 2
  store i32 0, i32* %687, align 4
  %688 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 0
  %689 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %667, i64 0, i32 0, i32 0
  %690 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %682, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %689, %"struct.std::__1::__list_node_base.1189"** %690, align 8
  %691 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %667, i64 0, i32 0, i32 0, i32 0
  %692 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %691, align 8
  store %"struct.std::__1::__list_node_base.1189"* %692, %"struct.std::__1::__list_node_base.1189"** %683, align 8
  %693 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %692, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %688, %"struct.std::__1::__list_node_base.1189"** %693, align 8
  store %"struct.std::__1::__list_node_base.1189"* %688, %"struct.std::__1::__list_node_base.1189"** %691, align 8
  %694 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %667, i64 0, i32 0, i32 1, i32 0, i32 0
  %695 = load i64, i64* %694, align 8
  %696 = add i64 %695, 1
  store i64 %696, i64* %694, align 8
  %697 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %661, i64 0, i32 1
  store i32 55, i32* %697, align 4
  %698 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %661, i32 0, i32 1, i32 3, i32 0) #6
  %699 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %698, i32 2, i32 1, i32 3, i32 2) #6
  %700 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %699, i32 1, i32 1, i32 3, i32 2) #6
  %701 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %700, i32 1, i32 4, i32 4, i32 0) #6
  %702 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %701, i32 0, i32 4, i32 4, i32 0) #6
  %703 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %702, i64 0, i32 2
  %704 = load i32, i32* %703, align 8
  %705 = icmp sgt i32 %704, 2
  br i1 %705, label %706, label %713

706:                                              ; preds = %680, %706
  %707 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %709, %706 ], [ %702, %680 ]
  %708 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %707, i64 0, i32 4
  %709 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %708, align 8
  %710 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %709, i64 0, i32 2
  %711 = load i32, i32* %710, align 8
  %712 = icmp sgt i32 %711, 2
  br i1 %712, label %706, label %713

713:                                              ; preds = %706, %680
  %714 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %702, %680 ], [ %709, %706 ]
  %715 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %714, i64 0, i32 3
  %716 = load i32, i32* %715, align 4
  %717 = add nsw i32 %716, 4
  %718 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %702, i64 0, i32 8
  %719 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %718 to %"class.std::__1::list.1194"**
  %720 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %719, align 8
  %721 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %720, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %722 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %721, align 8, !noalias !40
  %723 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %722, i64 0, i32 2
  %724 = load i64, i64* %723, align 8, !noalias !40
  %725 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %722, i64 0, i32 3
  %726 = load i64, i64* %725, align 8, !noalias !40
  %727 = sub i64 %726, %724
  %728 = icmp ult i64 %727, 24
  br i1 %728, label %729, label %731, !prof !2

729:                                              ; preds = %713
  %730 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %722, i64 24) #6, !noalias !40
  br label %733

731:                                              ; preds = %713
  %732 = add i64 %724, 24
  store i64 %732, i64* %723, align 8, !noalias !40
  br label %733

733:                                              ; preds = %731, %729
  %734 = phi i64 [ %730, %729 ], [ %724, %731 ]
  %735 = inttoptr i64 %734 to %"struct.std::__1::__list_node.1256"*
  %736 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %735, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %736, align 8, !noalias !40
  %737 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %735, i64 0, i32 1
  %738 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %737 to i64*
  %739 = zext i32 %717 to i64
  %740 = or i64 %739, 17179869184
  store i64 %740, i64* %738, align 4
  %741 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %735, i64 0, i32 0
  %742 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %720, i64 0, i32 0, i32 0
  %743 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %735, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %742, %"struct.std::__1::__list_node_base.1196"** %743, align 8
  %744 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %720, i64 0, i32 0, i32 0, i32 0
  %745 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %744, align 8
  store %"struct.std::__1::__list_node_base.1196"* %745, %"struct.std::__1::__list_node_base.1196"** %736, align 8
  %746 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %745, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %741, %"struct.std::__1::__list_node_base.1196"** %746, align 8
  store %"struct.std::__1::__list_node_base.1196"* %741, %"struct.std::__1::__list_node_base.1196"** %744, align 8
  %747 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %720, i64 0, i32 0, i32 1, i32 0, i32 0
  %748 = load i64, i64* %747, align 8
  %749 = add i64 %748, 1
  store i64 %749, i64* %747, align 8
  %750 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %751 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %750, i32 17) #6
  %752 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %751, i32 24) #6
  %753 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %752, i32 24) #6
  %754 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %753, i64 0, i32 2
  %755 = load i32, i32* %754, align 8
  %756 = icmp sgt i32 %755, 1
  br i1 %756, label %757, label %764

757:                                              ; preds = %733, %757
  %758 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %760, %757 ], [ %753, %733 ]
  %759 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %758, i64 0, i32 4
  %760 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %759, align 8
  %761 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %760, i64 0, i32 2
  %762 = load i32, i32* %761, align 8
  %763 = icmp sgt i32 %762, 1
  br i1 %763, label %757, label %764

764:                                              ; preds = %757, %733
  %765 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %753, %733 ], [ %760, %757 ]
  %766 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %753, i64 0, i32 3
  %767 = load i32, i32* %766, align 4
  %768 = add nsw i32 %767, 4
  %769 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %765, i64 0, i32 3
  %770 = load i32, i32* %769, align 4
  %771 = add nsw i32 %770, 4
  %772 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %753, i64 0, i32 7
  %773 = bitcast %"class.v8::internal::ZoneLinkedList"** %772 to %"class.std::__1::list.1187"**
  %774 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %773, align 8
  %775 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %774, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %776 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %775, align 8, !noalias !43
  %777 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %776, i64 0, i32 2
  %778 = load i64, i64* %777, align 8, !noalias !43
  %779 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %776, i64 0, i32 3
  %780 = load i64, i64* %779, align 8, !noalias !43
  %781 = sub i64 %780, %778
  %782 = icmp ult i64 %781, 40
  br i1 %782, label %783, label %785, !prof !2

783:                                              ; preds = %764
  %784 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %776, i64 40) #6, !noalias !43
  br label %787

785:                                              ; preds = %764
  %786 = add i64 %778, 40
  store i64 %786, i64* %777, align 8, !noalias !43
  br label %787

787:                                              ; preds = %785, %783
  %788 = phi i64 [ %784, %783 ], [ %778, %785 ]
  %789 = inttoptr i64 %788 to %"struct.std::__1::__list_node"*
  %790 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %790, align 8, !noalias !43
  %791 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 1, i32 0, i32 0
  store i32 %768, i32* %791, align 4
  %792 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %792, align 4
  %793 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 1, i32 1
  store i32 1, i32* %793, align 4
  %794 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 1, i32 2
  store i32 %771, i32* %794, align 4
  %795 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 1, i32 3
  store i32 4, i32* %795, align 4
  %796 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 0
  %797 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %774, i64 0, i32 0, i32 0
  %798 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %789, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %797, %"struct.std::__1::__list_node_base.1189"** %798, align 8
  %799 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %774, i64 0, i32 0, i32 0, i32 0
  %800 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %799, align 8
  store %"struct.std::__1::__list_node_base.1189"* %800, %"struct.std::__1::__list_node_base.1189"** %790, align 8
  %801 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %800, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %796, %"struct.std::__1::__list_node_base.1189"** %801, align 8
  store %"struct.std::__1::__list_node_base.1189"* %796, %"struct.std::__1::__list_node_base.1189"** %799, align 8
  %802 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %774, i64 0, i32 0, i32 1, i32 0, i32 0
  %803 = load i64, i64* %802, align 8
  %804 = add i64 %803, 1
  store i64 %804, i64* %802, align 8
  %805 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %753, i32 50) #6
  %806 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %805, i64 0, i32 3
  %807 = load i32, i32* %806, align 4
  %808 = add nsw i32 %807, 4
  %809 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %805, i64 0, i32 7
  %810 = bitcast %"class.v8::internal::ZoneLinkedList"** %809 to %"class.std::__1::list.1187"**
  %811 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %810, align 8
  %812 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %811, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %813 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %812, align 8, !noalias !46
  %814 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %813, i64 0, i32 2
  %815 = load i64, i64* %814, align 8, !noalias !46
  %816 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %813, i64 0, i32 3
  %817 = load i64, i64* %816, align 8, !noalias !46
  %818 = sub i64 %817, %815
  %819 = icmp ult i64 %818, 40
  br i1 %819, label %820, label %822, !prof !2

820:                                              ; preds = %787
  %821 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %813, i64 40) #6, !noalias !46
  br label %824

822:                                              ; preds = %787
  %823 = add i64 %815, 40
  store i64 %823, i64* %814, align 8, !noalias !46
  br label %824

824:                                              ; preds = %822, %820
  %825 = phi i64 [ %821, %820 ], [ %815, %822 ]
  %826 = inttoptr i64 %825 to %"struct.std::__1::__list_node"*
  %827 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %827, align 8, !noalias !46
  %828 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 1, i32 0, i32 0
  store i32 %808, i32* %828, align 4
  %829 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %829, align 4
  %830 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 1, i32 1
  store i32 0, i32* %830, align 4
  %831 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 1, i32 2
  store i32 0, i32* %831, align 4
  %832 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 0
  %833 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %811, i64 0, i32 0, i32 0
  %834 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %826, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %833, %"struct.std::__1::__list_node_base.1189"** %834, align 8
  %835 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %811, i64 0, i32 0, i32 0, i32 0
  %836 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %835, align 8
  store %"struct.std::__1::__list_node_base.1189"* %836, %"struct.std::__1::__list_node_base.1189"** %827, align 8
  %837 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %836, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %832, %"struct.std::__1::__list_node_base.1189"** %837, align 8
  store %"struct.std::__1::__list_node_base.1189"* %832, %"struct.std::__1::__list_node_base.1189"** %835, align 8
  %838 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %811, i64 0, i32 0, i32 1, i32 0, i32 0
  %839 = load i64, i64* %838, align 8
  %840 = add i64 %839, 1
  store i64 %840, i64* %838, align 8
  %841 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %805, i64 0, i32 1
  store i32 57, i32* %841, align 4
  %842 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %805, i32 0, i32 1, i32 3, i32 0) #6
  %843 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %842, i32 3, i32 1, i32 3, i32 4) #6
  %844 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %843, i32 1, i32 1, i32 3, i32 2) #6
  %845 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %844, i32 2, i32 1, i32 3, i32 2) #6
  %846 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %845, i32 1, i32 4, i32 4, i32 0) #6
  %847 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %846, i32 0, i32 4, i32 4, i32 0) #6
  %848 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %847, i64 0, i32 2
  %849 = load i32, i32* %848, align 8
  %850 = icmp sgt i32 %849, 2
  br i1 %850, label %851, label %858

851:                                              ; preds = %824, %851
  %852 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %854, %851 ], [ %847, %824 ]
  %853 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %852, i64 0, i32 4
  %854 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %853, align 8
  %855 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %854, i64 0, i32 2
  %856 = load i32, i32* %855, align 8
  %857 = icmp sgt i32 %856, 2
  br i1 %857, label %851, label %858

858:                                              ; preds = %851, %824
  %859 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %847, %824 ], [ %854, %851 ]
  %860 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %859, i64 0, i32 3
  %861 = load i32, i32* %860, align 4
  %862 = add nsw i32 %861, 4
  %863 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %847, i64 0, i32 8
  %864 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %863 to %"class.std::__1::list.1194"**
  %865 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %864, align 8
  %866 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %865, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %867 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %866, align 8, !noalias !49
  %868 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %867, i64 0, i32 2
  %869 = load i64, i64* %868, align 8, !noalias !49
  %870 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %867, i64 0, i32 3
  %871 = load i64, i64* %870, align 8, !noalias !49
  %872 = sub i64 %871, %869
  %873 = icmp ult i64 %872, 24
  br i1 %873, label %874, label %876, !prof !2

874:                                              ; preds = %858
  %875 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %867, i64 24) #6, !noalias !49
  br label %878

876:                                              ; preds = %858
  %877 = add i64 %869, 24
  store i64 %877, i64* %868, align 8, !noalias !49
  br label %878

878:                                              ; preds = %876, %874
  %879 = phi i64 [ %875, %874 ], [ %869, %876 ]
  %880 = inttoptr i64 %879 to %"struct.std::__1::__list_node.1256"*
  %881 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %880, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %881, align 8, !noalias !49
  %882 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %880, i64 0, i32 1
  %883 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %882 to i64*
  %884 = zext i32 %862 to i64
  %885 = or i64 %884, 17179869184
  store i64 %885, i64* %883, align 4
  %886 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %880, i64 0, i32 0
  %887 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %865, i64 0, i32 0, i32 0
  %888 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %880, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %887, %"struct.std::__1::__list_node_base.1196"** %888, align 8
  %889 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %865, i64 0, i32 0, i32 0, i32 0
  %890 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %889, align 8
  store %"struct.std::__1::__list_node_base.1196"* %890, %"struct.std::__1::__list_node_base.1196"** %881, align 8
  %891 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %890, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %886, %"struct.std::__1::__list_node_base.1196"** %891, align 8
  store %"struct.std::__1::__list_node_base.1196"* %886, %"struct.std::__1::__list_node_base.1196"** %889, align 8
  %892 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %865, i64 0, i32 0, i32 1, i32 0, i32 0
  %893 = load i64, i64* %892, align 8
  %894 = add i64 %893, 1
  store i64 %894, i64* %892, align 8
  %895 = load i32, i32* %848, align 8
  %896 = icmp sgt i32 %895, 3
  br i1 %896, label %897, label %904

897:                                              ; preds = %878, %897
  %898 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %900, %897 ], [ %847, %878 ]
  %899 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %898, i64 0, i32 4
  %900 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %899, align 8
  %901 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %900, i64 0, i32 2
  %902 = load i32, i32* %901, align 8
  %903 = icmp sgt i32 %902, 3
  br i1 %903, label %897, label %904

904:                                              ; preds = %897, %878
  %905 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %847, %878 ], [ %900, %897 ]
  %906 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %905, i64 0, i32 3
  %907 = load i32, i32* %906, align 4
  %908 = add nsw i32 %907, 4
  %909 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %864, align 8
  %910 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %909, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %911 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %910, align 8, !noalias !52
  %912 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %911, i64 0, i32 2
  %913 = load i64, i64* %912, align 8, !noalias !52
  %914 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %911, i64 0, i32 3
  %915 = load i64, i64* %914, align 8, !noalias !52
  %916 = sub i64 %915, %913
  %917 = icmp ult i64 %916, 24
  br i1 %917, label %918, label %920, !prof !2

918:                                              ; preds = %904
  %919 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %911, i64 24) #6, !noalias !52
  br label %922

920:                                              ; preds = %904
  %921 = add i64 %913, 24
  store i64 %921, i64* %912, align 8, !noalias !52
  br label %922

922:                                              ; preds = %920, %918
  %923 = phi i64 [ %919, %918 ], [ %913, %920 ]
  %924 = inttoptr i64 %923 to %"struct.std::__1::__list_node.1256"*
  %925 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %924, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %925, align 8, !noalias !52
  %926 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %924, i64 0, i32 1
  %927 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %926 to i64*
  %928 = zext i32 %908 to i64
  %929 = or i64 %928, 17179869184
  store i64 %929, i64* %927, align 4
  %930 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %924, i64 0, i32 0
  %931 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %909, i64 0, i32 0, i32 0
  %932 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %924, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %931, %"struct.std::__1::__list_node_base.1196"** %932, align 8
  %933 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %909, i64 0, i32 0, i32 0, i32 0
  %934 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %933, align 8
  store %"struct.std::__1::__list_node_base.1196"* %934, %"struct.std::__1::__list_node_base.1196"** %925, align 8
  %935 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %934, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %930, %"struct.std::__1::__list_node_base.1196"** %935, align 8
  store %"struct.std::__1::__list_node_base.1196"* %930, %"struct.std::__1::__list_node_base.1196"** %933, align 8
  %936 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %909, i64 0, i32 0, i32 1, i32 0, i32 0
  %937 = load i64, i64* %936, align 8
  %938 = add i64 %937, 1
  store i64 %938, i64* %936, align 8
  %939 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  %940 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %939, i32 17) #6
  %941 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %940, i32 36) #6
  %942 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %941, i64 0, i32 3
  %943 = load i32, i32* %942, align 4
  %944 = add nsw i32 %943, 4
  %945 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %941, i64 0, i32 7
  %946 = bitcast %"class.v8::internal::ZoneLinkedList"** %945 to %"class.std::__1::list.1187"**
  %947 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %946, align 8
  %948 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %947, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %949 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %948, align 8, !noalias !55
  %950 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %949, i64 0, i32 2
  %951 = load i64, i64* %950, align 8, !noalias !55
  %952 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %949, i64 0, i32 3
  %953 = load i64, i64* %952, align 8, !noalias !55
  %954 = sub i64 %953, %951
  %955 = icmp ult i64 %954, 40
  br i1 %955, label %956, label %958, !prof !2

956:                                              ; preds = %922
  %957 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %949, i64 40) #6, !noalias !55
  br label %960

958:                                              ; preds = %922
  %959 = add i64 %951, 40
  store i64 %959, i64* %950, align 8, !noalias !55
  br label %960

960:                                              ; preds = %958, %956
  %961 = phi i64 [ %957, %956 ], [ %951, %958 ]
  %962 = inttoptr i64 %961 to %"struct.std::__1::__list_node"*
  %963 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %963, align 8, !noalias !55
  %964 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 1, i32 0, i32 0
  store i32 %944, i32* %964, align 4
  %965 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %965, align 4
  %966 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 1, i32 1
  store i32 0, i32* %966, align 4
  %967 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 1, i32 2
  store i32 56, i32* %967, align 4
  %968 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 0
  %969 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %947, i64 0, i32 0, i32 0
  %970 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %962, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %969, %"struct.std::__1::__list_node_base.1189"** %970, align 8
  %971 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %947, i64 0, i32 0, i32 0, i32 0
  %972 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %971, align 8
  store %"struct.std::__1::__list_node_base.1189"* %972, %"struct.std::__1::__list_node_base.1189"** %963, align 8
  %973 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %972, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %968, %"struct.std::__1::__list_node_base.1189"** %973, align 8
  store %"struct.std::__1::__list_node_base.1189"* %968, %"struct.std::__1::__list_node_base.1189"** %971, align 8
  %974 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %947, i64 0, i32 0, i32 1, i32 0, i32 0
  %975 = load i64, i64* %974, align 8
  %976 = add i64 %975, 1
  store i64 %976, i64* %974, align 8
  %977 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %941, i32 34) #6
  %978 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %977, i64 0, i32 3
  %979 = load i32, i32* %978, align 4
  %980 = add nsw i32 %979, 4
  %981 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %977, i64 0, i32 7
  %982 = bitcast %"class.v8::internal::ZoneLinkedList"** %981 to %"class.std::__1::list.1187"**
  %983 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %982, align 8
  %984 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %983, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %985 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %984, align 8, !noalias !58
  %986 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %985, i64 0, i32 2
  %987 = load i64, i64* %986, align 8, !noalias !58
  %988 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %985, i64 0, i32 3
  %989 = load i64, i64* %988, align 8, !noalias !58
  %990 = sub i64 %989, %987
  %991 = icmp ult i64 %990, 40
  br i1 %991, label %992, label %994, !prof !2

992:                                              ; preds = %960
  %993 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %985, i64 40) #6, !noalias !58
  br label %996

994:                                              ; preds = %960
  %995 = add i64 %987, 40
  store i64 %995, i64* %986, align 8, !noalias !58
  br label %996

996:                                              ; preds = %994, %992
  %997 = phi i64 [ %993, %992 ], [ %987, %994 ]
  %998 = inttoptr i64 %997 to %"struct.std::__1::__list_node"*
  %999 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %999, align 8, !noalias !58
  %1000 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 1, i32 0, i32 0
  store i32 %980, i32* %1000, align 4
  %1001 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %1001, align 4
  %1002 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 1, i32 1
  store i32 0, i32* %1002, align 4
  %1003 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 1, i32 2
  store i32 48, i32* %1003, align 4
  %1004 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 0
  %1005 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %983, i64 0, i32 0, i32 0
  %1006 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %998, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1005, %"struct.std::__1::__list_node_base.1189"** %1006, align 8
  %1007 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %983, i64 0, i32 0, i32 0, i32 0
  %1008 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %1007, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1008, %"struct.std::__1::__list_node_base.1189"** %999, align 8
  %1009 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1008, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1004, %"struct.std::__1::__list_node_base.1189"** %1009, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1004, %"struct.std::__1::__list_node_base.1189"** %1007, align 8
  %1010 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %983, i64 0, i32 0, i32 1, i32 0, i32 0
  %1011 = load i64, i64* %1010, align 8
  %1012 = add i64 %1011, 1
  store i64 %1012, i64* %1010, align 8
  %1013 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %977, i32 16) #6
  %1014 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1013, i64 0, i32 2
  %1015 = load i32, i32* %1014, align 8
  %1016 = icmp sgt i32 %1015, 1
  br i1 %1016, label %1017, label %1024

1017:                                             ; preds = %996, %1017
  %1018 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1020, %1017 ], [ %1013, %996 ]
  %1019 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1018, i64 0, i32 4
  %1020 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %1019, align 8
  %1021 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1020, i64 0, i32 2
  %1022 = load i32, i32* %1021, align 8
  %1023 = icmp sgt i32 %1022, 1
  br i1 %1023, label %1017, label %1024

1024:                                             ; preds = %1017, %996
  %1025 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1013, %996 ], [ %1020, %1017 ]
  %1026 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1013, i64 0, i32 3
  %1027 = load i32, i32* %1026, align 4
  %1028 = add nsw i32 %1027, 4
  %1029 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1025, i64 0, i32 3
  %1030 = load i32, i32* %1029, align 4
  %1031 = add nsw i32 %1030, 4
  %1032 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1013, i64 0, i32 7
  %1033 = bitcast %"class.v8::internal::ZoneLinkedList"** %1032 to %"class.std::__1::list.1187"**
  %1034 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %1033, align 8
  %1035 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1034, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1036 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1035, align 8, !noalias !61
  %1037 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1036, i64 0, i32 2
  %1038 = load i64, i64* %1037, align 8, !noalias !61
  %1039 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1036, i64 0, i32 3
  %1040 = load i64, i64* %1039, align 8, !noalias !61
  %1041 = sub i64 %1040, %1038
  %1042 = icmp ult i64 %1041, 40
  br i1 %1042, label %1043, label %1045, !prof !2

1043:                                             ; preds = %1024
  %1044 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1036, i64 40) #6, !noalias !61
  br label %1047

1045:                                             ; preds = %1024
  %1046 = add i64 %1038, 40
  store i64 %1046, i64* %1037, align 8, !noalias !61
  br label %1047

1047:                                             ; preds = %1045, %1043
  %1048 = phi i64 [ %1044, %1043 ], [ %1038, %1045 ]
  %1049 = inttoptr i64 %1048 to %"struct.std::__1::__list_node"*
  %1050 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %1050, align 8, !noalias !61
  %1051 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 1, i32 0, i32 0
  store i32 %1028, i32* %1051, align 4
  %1052 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %1052, align 4
  %1053 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 1, i32 1
  store i32 1, i32* %1053, align 4
  %1054 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 1, i32 2
  store i32 %1031, i32* %1054, align 4
  %1055 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 1, i32 3
  store i32 4, i32* %1055, align 4
  %1056 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 0
  %1057 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1034, i64 0, i32 0, i32 0
  %1058 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1049, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1057, %"struct.std::__1::__list_node_base.1189"** %1058, align 8
  %1059 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1034, i64 0, i32 0, i32 0, i32 0
  %1060 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %1059, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1060, %"struct.std::__1::__list_node_base.1189"** %1050, align 8
  %1061 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1060, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1056, %"struct.std::__1::__list_node_base.1189"** %1061, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1056, %"struct.std::__1::__list_node_base.1189"** %1059, align 8
  %1062 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1034, i64 0, i32 0, i32 1, i32 0, i32 0
  %1063 = load i64, i64* %1062, align 8
  %1064 = add i64 %1063, 1
  store i64 %1064, i64* %1062, align 8
  %1065 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1013, i32 50) #6
  %1066 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1065, i64 0, i32 3
  %1067 = load i32, i32* %1066, align 4
  %1068 = add nsw i32 %1067, 4
  %1069 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1065, i64 0, i32 7
  %1070 = bitcast %"class.v8::internal::ZoneLinkedList"** %1069 to %"class.std::__1::list.1187"**
  %1071 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %1070, align 8
  %1072 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1071, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1073 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1072, align 8, !noalias !64
  %1074 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1073, i64 0, i32 2
  %1075 = load i64, i64* %1074, align 8, !noalias !64
  %1076 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1073, i64 0, i32 3
  %1077 = load i64, i64* %1076, align 8, !noalias !64
  %1078 = sub i64 %1077, %1075
  %1079 = icmp ult i64 %1078, 40
  br i1 %1079, label %1080, label %1082, !prof !2

1080:                                             ; preds = %1047
  %1081 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1073, i64 40) #6, !noalias !64
  br label %1084

1082:                                             ; preds = %1047
  %1083 = add i64 %1075, 40
  store i64 %1083, i64* %1074, align 8, !noalias !64
  br label %1084

1084:                                             ; preds = %1082, %1080
  %1085 = phi i64 [ %1081, %1080 ], [ %1075, %1082 ]
  %1086 = inttoptr i64 %1085 to %"struct.std::__1::__list_node"*
  %1087 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* null, %"struct.std::__1::__list_node_base.1189"** %1087, align 8, !noalias !64
  %1088 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 1, i32 0, i32 0
  store i32 %1068, i32* %1088, align 4
  %1089 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 1, i32 0, i32 1
  store i32 4, i32* %1089, align 4
  %1090 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 1, i32 1
  store i32 0, i32* %1090, align 4
  %1091 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 1, i32 2
  store i32 0, i32* %1091, align 4
  %1092 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 0
  %1093 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1071, i64 0, i32 0, i32 0
  %1094 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %1086, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1093, %"struct.std::__1::__list_node_base.1189"** %1094, align 8
  %1095 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1071, i64 0, i32 0, i32 0, i32 0
  %1096 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %1095, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1096, %"struct.std::__1::__list_node_base.1189"** %1087, align 8
  %1097 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1096, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %1092, %"struct.std::__1::__list_node_base.1189"** %1097, align 8
  store %"struct.std::__1::__list_node_base.1189"* %1092, %"struct.std::__1::__list_node_base.1189"** %1095, align 8
  %1098 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1071, i64 0, i32 0, i32 1, i32 0, i32 0
  %1099 = load i64, i64* %1098, align 8
  %1100 = add i64 %1099, 1
  store i64 %1100, i64* %1098, align 8
  %1101 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1065, i64 0, i32 1
  store i32 58, i32* %1101, align 4
  %1102 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1065, i32 0, i32 1, i32 3, i32 0) #6
  %1103 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1102, i32 4, i32 1, i32 3, i32 2) #6
  %1104 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1103, i32 1, i32 1, i32 3, i32 2) #6
  %1105 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1104, i32 2, i32 8, i32 16, i32 0) #6
  %1106 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1105, i32 1, i32 4, i32 4, i32 0) #6
  %1107 = call fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1106, i32 0, i32 4, i32 4, i32 0) #6
  %1108 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1107, i64 0, i32 2
  %1109 = load i32, i32* %1108, align 8
  %1110 = icmp sgt i32 %1109, 2
  br i1 %1110, label %1111, label %1118

1111:                                             ; preds = %1084, %1111
  %1112 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1114, %1111 ], [ %1107, %1084 ]
  %1113 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1112, i64 0, i32 4
  %1114 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %1113, align 8
  %1115 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1114, i64 0, i32 2
  %1116 = load i32, i32* %1115, align 8
  %1117 = icmp sgt i32 %1116, 2
  br i1 %1117, label %1111, label %1118

1118:                                             ; preds = %1111, %1084
  %1119 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1107, %1084 ], [ %1114, %1111 ]
  %1120 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1119, i64 0, i32 3
  %1121 = load i32, i32* %1120, align 4
  %1122 = add nsw i32 %1121, 4
  %1123 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1107, i64 0, i32 8
  %1124 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %1123 to %"class.std::__1::list.1194"**
  %1125 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %1124, align 8
  %1126 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1125, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1127 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1126, align 8, !noalias !67
  %1128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1127, i64 0, i32 2
  %1129 = load i64, i64* %1128, align 8, !noalias !67
  %1130 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1127, i64 0, i32 3
  %1131 = load i64, i64* %1130, align 8, !noalias !67
  %1132 = sub i64 %1131, %1129
  %1133 = icmp ult i64 %1132, 24
  br i1 %1133, label %1134, label %1136, !prof !2

1134:                                             ; preds = %1118
  %1135 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1127, i64 24) #6, !noalias !67
  br label %1138

1136:                                             ; preds = %1118
  %1137 = add i64 %1129, 24
  store i64 %1137, i64* %1128, align 8, !noalias !67
  br label %1138

1138:                                             ; preds = %1136, %1134
  %1139 = phi i64 [ %1135, %1134 ], [ %1129, %1136 ]
  %1140 = inttoptr i64 %1139 to %"struct.std::__1::__list_node.1256"*
  %1141 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1140, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %1141, align 8, !noalias !67
  %1142 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1140, i64 0, i32 1
  %1143 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %1142 to i64*
  %1144 = zext i32 %1122 to i64
  %1145 = or i64 %1144, 17179869184
  store i64 %1145, i64* %1143, align 4
  %1146 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1140, i64 0, i32 0
  %1147 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1125, i64 0, i32 0, i32 0
  %1148 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1140, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1147, %"struct.std::__1::__list_node_base.1196"** %1148, align 8
  %1149 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1125, i64 0, i32 0, i32 0, i32 0
  %1150 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %1149, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1150, %"struct.std::__1::__list_node_base.1196"** %1141, align 8
  %1151 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %1150, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1146, %"struct.std::__1::__list_node_base.1196"** %1151, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1146, %"struct.std::__1::__list_node_base.1196"** %1149, align 8
  %1152 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1125, i64 0, i32 0, i32 1, i32 0, i32 0
  %1153 = load i64, i64* %1152, align 8
  %1154 = add i64 %1153, 1
  store i64 %1154, i64* %1152, align 8
  %1155 = load i32, i32* %1108, align 8
  %1156 = icmp sgt i32 %1155, 3
  br i1 %1156, label %1157, label %1164

1157:                                             ; preds = %1138, %1157
  %1158 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1160, %1157 ], [ %1107, %1138 ]
  %1159 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1158, i64 0, i32 4
  %1160 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %1159, align 8
  %1161 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1160, i64 0, i32 2
  %1162 = load i32, i32* %1161, align 8
  %1163 = icmp sgt i32 %1162, 3
  br i1 %1163, label %1157, label %1164

1164:                                             ; preds = %1157, %1138
  %1165 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1107, %1138 ], [ %1160, %1157 ]
  %1166 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1165, i64 0, i32 3
  %1167 = load i32, i32* %1166, align 4
  %1168 = add nsw i32 %1167, 4
  %1169 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %1124, align 8
  %1170 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1169, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1171 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1170, align 8, !noalias !70
  %1172 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1171, i64 0, i32 2
  %1173 = load i64, i64* %1172, align 8, !noalias !70
  %1174 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1171, i64 0, i32 3
  %1175 = load i64, i64* %1174, align 8, !noalias !70
  %1176 = sub i64 %1175, %1173
  %1177 = icmp ult i64 %1176, 24
  br i1 %1177, label %1178, label %1180, !prof !2

1178:                                             ; preds = %1164
  %1179 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1171, i64 24) #6, !noalias !70
  br label %1182

1180:                                             ; preds = %1164
  %1181 = add i64 %1173, 24
  store i64 %1181, i64* %1172, align 8, !noalias !70
  br label %1182

1182:                                             ; preds = %1180, %1178
  %1183 = phi i64 [ %1179, %1178 ], [ %1173, %1180 ]
  %1184 = inttoptr i64 %1183 to %"struct.std::__1::__list_node.1256"*
  %1185 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1184, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %1185, align 8, !noalias !70
  %1186 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1184, i64 0, i32 1
  %1187 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %1186 to i64*
  %1188 = zext i32 %1168 to i64
  %1189 = or i64 %1188, 17179869184
  store i64 %1189, i64* %1187, align 4
  %1190 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1184, i64 0, i32 0
  %1191 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1169, i64 0, i32 0, i32 0
  %1192 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1184, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1191, %"struct.std::__1::__list_node_base.1196"** %1192, align 8
  %1193 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1169, i64 0, i32 0, i32 0, i32 0
  %1194 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %1193, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1194, %"struct.std::__1::__list_node_base.1196"** %1185, align 8
  %1195 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %1194, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1190, %"struct.std::__1::__list_node_base.1196"** %1195, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1190, %"struct.std::__1::__list_node_base.1196"** %1193, align 8
  %1196 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1169, i64 0, i32 0, i32 1, i32 0, i32 0
  %1197 = load i64, i64* %1196, align 8
  %1198 = add i64 %1197, 1
  store i64 %1198, i64* %1196, align 8
  %1199 = load i32, i32* %1108, align 8
  %1200 = icmp sgt i32 %1199, 4
  br i1 %1200, label %1201, label %1208

1201:                                             ; preds = %1182, %1201
  %1202 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1204, %1201 ], [ %1107, %1182 ]
  %1203 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1202, i64 0, i32 4
  %1204 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %1203, align 8
  %1205 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1204, i64 0, i32 2
  %1206 = load i32, i32* %1205, align 8
  %1207 = icmp sgt i32 %1206, 4
  br i1 %1207, label %1201, label %1208

1208:                                             ; preds = %1201, %1182
  %1209 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1107, %1182 ], [ %1204, %1201 ]
  %1210 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1209, i64 0, i32 3
  %1211 = load i32, i32* %1210, align 4
  %1212 = add nsw i32 %1211, 4
  %1213 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %1124, align 8
  %1214 = getelementptr %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1213, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1215 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1214, align 8, !noalias !73
  %1216 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1215, i64 0, i32 2
  %1217 = load i64, i64* %1216, align 8, !noalias !73
  %1218 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1215, i64 0, i32 3
  %1219 = load i64, i64* %1218, align 8, !noalias !73
  %1220 = sub i64 %1219, %1217
  %1221 = icmp ult i64 %1220, 24
  br i1 %1221, label %1222, label %1224, !prof !2

1222:                                             ; preds = %1208
  %1223 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1215, i64 24) #6, !noalias !73
  br label %1226

1224:                                             ; preds = %1208
  %1225 = add i64 %1217, 24
  store i64 %1225, i64* %1216, align 8, !noalias !73
  br label %1226

1226:                                             ; preds = %1222, %1224
  %1227 = phi i64 [ %1223, %1222 ], [ %1217, %1224 ]
  %1228 = inttoptr i64 %1227 to %"struct.std::__1::__list_node.1256"*
  %1229 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1228, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* null, %"struct.std::__1::__list_node_base.1196"** %1229, align 8, !noalias !73
  %1230 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1228, i64 0, i32 1
  %1231 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgument"* %1230 to i64*
  %1232 = zext i32 %1212 to i64
  %1233 = or i64 %1232, 17179869184
  store i64 %1233, i64* %1231, align 4
  %1234 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1228, i64 0, i32 0
  %1235 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1213, i64 0, i32 0, i32 0
  %1236 = getelementptr inbounds %"struct.std::__1::__list_node.1256", %"struct.std::__1::__list_node.1256"* %1228, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1235, %"struct.std::__1::__list_node_base.1196"** %1236, align 8
  %1237 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1213, i64 0, i32 0, i32 0, i32 0
  %1238 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %1237, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1238, %"struct.std::__1::__list_node_base.1196"** %1229, align 8
  %1239 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %1238, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %1234, %"struct.std::__1::__list_node_base.1196"** %1239, align 8
  store %"struct.std::__1::__list_node_base.1196"* %1234, %"struct.std::__1::__list_node_base.1196"** %1237, align 8
  %1240 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1213, i64 0, i32 0, i32 1, i32 0, i32 0
  %1241 = load i64, i64* %1240, align 8
  %1242 = add i64 %1241, 1
  store i64 %1242, i64* %1240, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_122RegExpBytecodePeephole17AddSentinelFixupsEi(%"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* nonnull %16, i32 -1) #6
  call fastcc void @_ZN2v88internal12_GLOBAL__N_122RegExpBytecodePeephole17AddSentinelFixupsEi(%"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* nonnull %16, i32 %4) #6
  %1243 = icmp sgt i32 %4, 0
  br i1 %1243, label %1244, label %3088

1244:                                             ; preds = %1226
  %1245 = bitcast %"class.v8::internal::ZoneLinkedList.1261"* %15 to i8*
  %1246 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 0
  %1247 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %1248 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %1249 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1250 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 1, i32 1
  %1251 = bitcast %"struct.std::__1::__compressed_pair_elem.1266"* %1250 to i64*
  %1252 = bitcast i32* %14 to i8*
  %1253 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0
  %1254 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %1255 = getelementptr inbounds i32, i32* %14, i64 1
  %1256 = bitcast i32* %1255 to i8*
  %1257 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node"**
  %1258 = bitcast i8** %1254 to i64*
  %1259 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0
  %1260 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %1261 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1262 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %1263 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1264 = getelementptr inbounds %"class.std::__1::__tree.1200", %"class.std::__1::__tree.1200"* %1259, i64 0, i32 0
  %1265 = bitcast %"class.std::__1::__tree.1200"* %1259 to i64*
  %1266 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1261", %"class.v8::internal::ZoneLinkedList.1261"* %15, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1267 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %1268 = bitcast i64* %10 to i8*
  %1269 = getelementptr inbounds i64, i64* %10, i64 1
  %1270 = bitcast i64* %1269 to i8*
  %1271 = bitcast i32* %8 to i8*
  %1272 = getelementptr inbounds i32, i32* %8, i64 1
  %1273 = bitcast i32* %1272 to i8*
  %1274 = bitcast i32* %7 to i8*
  %1275 = getelementptr inbounds i32, i32* %7, i64 1
  %1276 = bitcast i32* %1275 to i8*
  %1277 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %1278 = bitcast i16* %9 to i8*
  %1279 = getelementptr inbounds i16, i16* %9, i64 1
  %1280 = bitcast i16* %1279 to i8*
  %1281 = bitcast i16* %11 to i8*
  %1282 = getelementptr inbounds i16, i16* %11, i64 1
  %1283 = bitcast i16* %1282 to i8*
  %1284 = getelementptr inbounds i8, i8* %12, i64 1
  %1285 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0
  %1286 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node"**
  %1287 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1288 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %1289 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1290 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1285, i64 0, i32 0, i32 0
  %1291 = bitcast %"class.std::__1::map"* %1285 to i64*
  %1292 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0
  %1293 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"**
  %1294 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %1296 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %1297 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1292, i64 0, i32 0, i32 0
  %1298 = bitcast %"class.std::__1::map"* %1292 to i64*
  %1299 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0
  %1300 = getelementptr inbounds %"class.std::__1::__tree.1200", %"class.std::__1::__tree.1200"* %1299, i64 0, i32 0
  %1301 = bitcast %"class.std::__1::__tree.1200"* %1299 to i64*
  %1302 = bitcast %"struct.std::__1::__list_node_base.1264"** %1248 to i64*
  %1303 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0
  %1304 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1303, i64 0, i32 0, i32 0
  %1305 = bitcast %"class.std::__1::map"* %1303 to i64*
  br label %1306

1306:                                             ; preds = %2787, %1244
  %1307 = phi i32 [ 0, %1244 ], [ %2790, %2787 ]
  %1308 = phi i8 [ 0, %1244 ], [ %2788, %2787 ]
  %1309 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %24, align 8
  br label %1310

1310:                                             ; preds = %1467, %1306
  %1311 = phi i32 [ %1476, %1467 ], [ %1307, %1306 ]
  %1312 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1471, %1467 ], [ null, %1306 ]
  %1313 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1389, %1467 ], [ %1309, %1306 ]
  %1314 = sext i32 %1311 to i64
  %1315 = getelementptr inbounds i8, i8* %3, i64 %1314
  %1316 = load i8, i8* %1315, align 1
  %1317 = zext i8 %1316 to i32
  %1318 = call i64 @_ZN2v84base10hash_valueEj(i32 %1317) #6
  %1319 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1313, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1320 = load i64, i64* %1319, align 8
  %1321 = icmp eq i64 %1320, 0
  br i1 %1321, label %1478, label %1322

1322:                                             ; preds = %1310
  %1323 = call i64 @llvm.ctpop.i64(i64 %1320) #6, !range !76
  %1324 = icmp ugt i64 %1323, 1
  br i1 %1324, label %1328, label %1325

1325:                                             ; preds = %1322
  %1326 = add i64 %1320, -1
  %1327 = and i64 %1326, %1318
  br label %1332

1328:                                             ; preds = %1322
  %1329 = icmp ult i64 %1318, %1320
  br i1 %1329, label %1332, label %1330

1330:                                             ; preds = %1328
  %1331 = urem i64 %1318, %1320
  br label %1332

1332:                                             ; preds = %1330, %1328, %1325
  %1333 = phi i64 [ %1327, %1325 ], [ %1331, %1330 ], [ %1318, %1328 ]
  %1334 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1313, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1335 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %1334, align 8
  %1336 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %1335, i64 %1333
  %1337 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %1336, align 8
  %1338 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %1337, null
  br i1 %1338, label %1478, label %1339

1339:                                             ; preds = %1332
  %1340 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1337, i64 0, i32 0
  %1341 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %1340, align 8
  %1342 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %1341, null
  br i1 %1342, label %1478, label %1343

1343:                                             ; preds = %1339
  %1344 = add i64 %1320, -1
  br i1 %1324, label %1345, label %1367

1345:                                             ; preds = %1343, %1363
  %1346 = phi %"struct.std::__1::__hash_node_base.1163"* [ %1365, %1363 ], [ %1341, %1343 ]
  %1347 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1346, i64 1
  %1348 = bitcast %"struct.std::__1::__hash_node_base.1163"* %1347 to i64*
  %1349 = load i64, i64* %1348, align 8
  %1350 = icmp eq i64 %1318, %1349
  br i1 %1350, label %1358, label %1351

1351:                                             ; preds = %1345
  %1352 = icmp ult i64 %1349, %1320
  br i1 %1352, label %1355, label %1353

1353:                                             ; preds = %1351
  %1354 = urem i64 %1349, %1320
  br label %1355

1355:                                             ; preds = %1353, %1351
  %1356 = phi i64 [ %1354, %1353 ], [ %1349, %1351 ]
  %1357 = icmp eq i64 %1356, %1333
  br i1 %1357, label %1363, label %1478

1358:                                             ; preds = %1345
  %1359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1346, i64 2
  %1360 = bitcast %"struct.std::__1::__hash_node_base.1163"* %1359 to i32*
  %1361 = load i32, i32* %1360, align 4
  %1362 = icmp eq i32 %1361, %1317
  br i1 %1362, label %1385, label %1363

1363:                                             ; preds = %1358, %1355
  %1364 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1346, i64 0, i32 0
  %1365 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %1364, align 8
  %1366 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %1365, null
  br i1 %1366, label %1478, label %1345

1367:                                             ; preds = %1343, %1381
  %1368 = phi %"struct.std::__1::__hash_node_base.1163"* [ %1383, %1381 ], [ %1341, %1343 ]
  %1369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1368, i64 1
  %1370 = bitcast %"struct.std::__1::__hash_node_base.1163"* %1369 to i64*
  %1371 = load i64, i64* %1370, align 8
  %1372 = icmp eq i64 %1318, %1371
  br i1 %1372, label %1376, label %1373

1373:                                             ; preds = %1367
  %1374 = and i64 %1371, %1344
  %1375 = icmp eq i64 %1374, %1333
  br i1 %1375, label %1381, label %1478

1376:                                             ; preds = %1367
  %1377 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1368, i64 2
  %1378 = bitcast %"struct.std::__1::__hash_node_base.1163"* %1377 to i32*
  %1379 = load i32, i32* %1378, align 4
  %1380 = icmp eq i32 %1379, %1317
  br i1 %1380, label %1385, label %1381

1381:                                             ; preds = %1376, %1373
  %1382 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1368, i64 0, i32 0
  %1383 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %1382, align 8
  %1384 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %1383, null
  br i1 %1384, label %1478, label %1367

1385:                                             ; preds = %1376, %1358
  %1386 = phi %"struct.std::__1::__hash_node_base.1163"* [ %1346, %1358 ], [ %1368, %1376 ]
  %1387 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %1386, i64 3
  %1388 = bitcast %"struct.std::__1::__hash_node_base.1163"* %1387 to %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"**
  %1389 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %1388, align 8
  %1390 = icmp eq %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1389, null
  br i1 %1390, label %1478, label %1391

1391:                                             ; preds = %1385
  %1392 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1389, i64 0, i32 7
  %1393 = bitcast %"class.v8::internal::ZoneLinkedList"** %1392 to %"class.std::__1::list.1187"**
  %1394 = load %"class.std::__1::list.1187"*, %"class.std::__1::list.1187"** %1393, align 8
  %1395 = getelementptr %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1394, i64 0, i32 0, i32 0, i32 1
  %1396 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %1395, align 8
  %1397 = getelementptr inbounds %"class.std::__1::list.1187", %"class.std::__1::list.1187"* %1394, i64 0, i32 0, i32 0
  %1398 = icmp eq %"struct.std::__1::__list_node_base.1189"* %1396, %1397
  br i1 %1398, label %1467, label %1399

1399:                                             ; preds = %1391, %1459
  %1400 = phi %"struct.std::__1::__list_node_base.1189"* [ %1463, %1459 ], [ %1396, %1391 ]
  %1401 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1400, i64 1
  %1402 = bitcast %"struct.std::__1::__list_node_base.1189"* %1401 to %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck"*
  %1403 = bitcast %"struct.std::__1::__list_node_base.1189"* %1401 to i32*
  %1404 = load i32, i32* %1403, align 4
  %1405 = add nsw i32 %1404, %1307
  %1406 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck"* %1402, i64 0, i32 0, i32 1
  %1407 = load i32, i32* %1406, align 4
  switch i32 %1407, label %1424 [
    i32 1, label %1408
    i32 2, label %1413
    i32 4, label %1419
  ]

1408:                                             ; preds = %1399
  %1409 = sext i32 %1405 to i64
  %1410 = getelementptr inbounds i8, i8* %3, i64 %1409
  %1411 = load i8, i8* %1410, align 1
  %1412 = zext i8 %1411 to i32
  br label %1425

1413:                                             ; preds = %1399
  %1414 = sext i32 %1405 to i64
  %1415 = getelementptr inbounds i8, i8* %3, i64 %1414
  %1416 = bitcast i8* %1415 to i16*
  %1417 = load i16, i16* %1416, align 2
  %1418 = sext i16 %1417 to i32
  br label %1425

1419:                                             ; preds = %1399
  %1420 = sext i32 %1405 to i64
  %1421 = getelementptr inbounds i8, i8* %3, i64 %1420
  %1422 = bitcast i8* %1421 to i32*
  %1423 = load i32, i32* %1422, align 4
  br label %1425

1424:                                             ; preds = %1399
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

1425:                                             ; preds = %1419, %1413, %1408
  %1426 = phi i32 [ %1423, %1419 ], [ %1418, %1413 ], [ %1412, %1408 ]
  %1427 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1400, i64 1, i32 1
  %1428 = bitcast %"struct.std::__1::__list_node_base.1189"** %1427 to i32*
  %1429 = load i32, i32* %1428, align 4
  switch i32 %1429, label %1458 [
    i32 0, label %1430
    i32 1, label %1434
  ]

1430:                                             ; preds = %1425
  %1431 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck"* %1402, i64 0, i32 2
  %1432 = load i32, i32* %1431, align 4
  %1433 = add nsw i32 %1432, %1307
  br label %1459

1434:                                             ; preds = %1425
  %1435 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentCheck"* %1402, i64 0, i32 2
  %1436 = load i32, i32* %1435, align 4
  %1437 = add nsw i32 %1436, %1307
  %1438 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1400, i64 2
  %1439 = bitcast %"struct.std::__1::__list_node_base.1189"* %1438 to i32*
  %1440 = load i32, i32* %1439, align 4
  switch i32 %1440, label %1457 [
    i32 1, label %1441
    i32 2, label %1446
    i32 4, label %1452
  ]

1441:                                             ; preds = %1434
  %1442 = sext i32 %1437 to i64
  %1443 = getelementptr inbounds i8, i8* %3, i64 %1442
  %1444 = load i8, i8* %1443, align 1
  %1445 = zext i8 %1444 to i32
  br label %1459

1446:                                             ; preds = %1434
  %1447 = sext i32 %1437 to i64
  %1448 = getelementptr inbounds i8, i8* %3, i64 %1447
  %1449 = bitcast i8* %1448 to i16*
  %1450 = load i16, i16* %1449, align 2
  %1451 = sext i16 %1450 to i32
  br label %1459

1452:                                             ; preds = %1434
  %1453 = sext i32 %1437 to i64
  %1454 = getelementptr inbounds i8, i8* %3, i64 %1453
  %1455 = bitcast i8* %1454 to i32*
  %1456 = load i32, i32* %1455, align 4
  br label %1459

1457:                                             ; preds = %1434
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

1458:                                             ; preds = %1425
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

1459:                                             ; preds = %1452, %1446, %1441, %1430
  %1460 = phi i32 [ %1433, %1430 ], [ %1456, %1452 ], [ %1451, %1446 ], [ %1445, %1441 ]
  %1461 = icmp eq i32 %1426, %1460
  %1462 = getelementptr inbounds %"struct.std::__1::__list_node_base.1189", %"struct.std::__1::__list_node_base.1189"* %1400, i64 0, i32 1
  %1463 = load %"struct.std::__1::__list_node_base.1189"*, %"struct.std::__1::__list_node_base.1189"** %1462, align 8
  %1464 = icmp ne %"struct.std::__1::__list_node_base.1189"* %1463, %1397
  %1465 = and i1 %1461, %1464
  br i1 %1465, label %1399, label %1466

1466:                                             ; preds = %1459
  br i1 %1461, label %1467, label %1478

1467:                                             ; preds = %1466, %1391
  %1468 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1389, i64 0, i32 1
  %1469 = load i32, i32* %1468, align 4
  %1470 = icmp eq i32 %1469, -1
  %1471 = select i1 %1470, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1312, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1389
  %1472 = load i8, i8* %1315, align 1
  %1473 = zext i8 %1472 to i64
  %1474 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %1473
  %1475 = load i32, i32* %1474, align 4
  %1476 = add nsw i32 %1475, %1311
  %1477 = icmp slt i32 %1476, %4
  br i1 %1477, label %1310, label %1478

1478:                                             ; preds = %1467, %1466, %1385, %1339, %1332, %1310, %1381, %1373, %1363, %1355
  %1479 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %1312, %1355 ], [ %1312, %1363 ], [ %1312, %1373 ], [ %1312, %1381 ], [ %1471, %1467 ], [ %1312, %1385 ], [ %1312, %1466 ], [ %1312, %1332 ], [ %1312, %1310 ], [ %1312, %1339 ]
  %1480 = icmp eq %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, null
  br i1 %1480, label %2776, label %1481

1481:                                             ; preds = %1478
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1245) #6
  %1482 = load i64, i64* %74, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1246, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1246, %"struct.std::__1::__list_node_base.1264"** %1248, align 8
  store i64 0, i64* %1249, align 8
  store i64 %1482, i64* %1251, align 8
  %1483 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, i64 0, i32 1
  %1484 = load i32, i32* %1483, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1252) #6
  store i32 %1484, i32* %14, align 4
  %1485 = load i8*, i8** %1254, align 8
  %1486 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1485, i8* nonnull %1252, i8* %1256) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1252) #6
  %1487 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, i64 0, i32 6
  %1488 = bitcast %"class.v8::internal::ZoneVector.1180"** %1487 to %"class.std::__1::vector.1181"**
  %1489 = load %"class.std::__1::vector.1181"*, %"class.std::__1::vector.1181"** %1488, align 8
  %1490 = getelementptr inbounds %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %1489, i64 0, i32 0, i32 1
  %1491 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %1490 to i64*
  %1492 = load i64, i64* %1491, align 8
  %1493 = bitcast %"class.std::__1::vector.1181"* %1489 to i64*
  %1494 = load i64, i64* %1493, align 8
  %1495 = icmp eq i64 %1492, %1494
  br i1 %1495, label %1496, label %1500

1496:                                             ; preds = %1747, %1481
  %1497 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, i64 0, i32 8
  %1498 = load %"class.v8::internal::ZoneLinkedList.1193"*, %"class.v8::internal::ZoneLinkedList.1193"** %1497, align 8
  %1499 = icmp eq %"class.v8::internal::ZoneLinkedList.1193"* %1498, null
  br i1 %1499, label %1859, label %1758

1500:                                             ; preds = %1481, %1747
  %1501 = phi i64 [ %1754, %1747 ], [ %1494, %1481 ]
  %1502 = phi i64 [ %1748, %1747 ], [ 0, %1481 ]
  %1503 = inttoptr i64 %1501 to %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*
  %1504 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %1503, i64 %1502
  %1505 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %1504 to i64*
  %1506 = load i64, i64* %1505, align 4
  %1507 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %1503, i64 %1502, i32 1
  %1508 = load i32, i32* %1507, align 4
  %1509 = trunc i64 %1506 to i32
  %1510 = add nsw i32 %1307, %1509
  %1511 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1257, align 8
  %1512 = icmp eq %"class.std::__1::__tree_node"* %1511, null
  br i1 %1512, label %1661, label %1513

1513:                                             ; preds = %1500, %1513
  %1514 = phi %"class.std::__1::__tree_end_node"* [ %1524, %1513 ], [ %44, %1500 ]
  %1515 = phi %"class.std::__1::__tree_node"* [ %1525, %1513 ], [ %1511, %1500 ]
  %1516 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1515, i64 0, i32 1, i32 0, i32 0
  %1517 = load i32, i32* %1516, align 4
  %1518 = icmp slt i32 %1517, %1510
  %1519 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1515, i64 0, i32 0, i32 1
  %1520 = bitcast %"class.std::__1::__tree_node_base"** %1519 to %"class.std::__1::__tree_node"**
  %1521 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1515, i64 0, i32 0, i32 0
  %1522 = bitcast %"class.std::__1::__tree_node"* %1515 to %"class.std::__1::__tree_node"**
  %1523 = select i1 %1518, %"class.std::__1::__tree_node"** %1520, %"class.std::__1::__tree_node"** %1522
  %1524 = select i1 %1518, %"class.std::__1::__tree_end_node"* %1514, %"class.std::__1::__tree_end_node"* %1521
  %1525 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1523, align 8
  %1526 = icmp eq %"class.std::__1::__tree_node"* %1525, null
  br i1 %1526, label %1527, label %1513

1527:                                             ; preds = %1513
  %1528 = icmp eq %"class.std::__1::__tree_end_node"* %1524, %44
  br i1 %1528, label %1661, label %1529

1529:                                             ; preds = %1527
  %1530 = bitcast %"class.std::__1::__tree_end_node"* %1524 to %"class.std::__1::__tree_node"*
  %1531 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1530, i64 0, i32 1, i32 0, i32 0
  %1532 = load i32, i32* %1531, align 4
  %1533 = icmp slt i32 %1510, %1532
  br i1 %1533, label %1661, label %1534

1534:                                             ; preds = %1529
  %1535 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1524, i64 4
  %1536 = bitcast %"class.std::__1::__tree_end_node"* %1535 to i32*
  %1537 = load i32, i32* %1536, align 4
  %1538 = load i64, i64* %1258, align 8
  %1539 = load i64, i64* %77, align 8
  %1540 = sub i64 %1538, %1539
  %1541 = trunc i64 %1540 to i32
  %1542 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1260, align 8
  %1543 = icmp eq %"class.std::__1::__tree_node"* %1542, null
  br i1 %1543, label %1570, label %1544

1544:                                             ; preds = %1534, %1566
  %1545 = phi %"class.std::__1::__tree_node"* [ %1569, %1566 ], [ %1542, %1534 ]
  %1546 = phi %"class.std::__1::__tree_node_base"** [ %1568, %1566 ], [ %1261, %1534 ]
  %1547 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 1, i32 0, i32 0
  %1548 = load i32, i32* %1547, align 4
  %1549 = icmp sgt i32 %1548, %1541
  br i1 %1549, label %1550, label %1556

1550:                                             ; preds = %1544
  %1551 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 0, i32 0
  %1552 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1551, align 8
  %1553 = icmp eq %"class.std::__1::__tree_node_base"* %1552, null
  br i1 %1553, label %1554, label %1566

1554:                                             ; preds = %1550
  %1555 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 0
  br label %1570

1556:                                             ; preds = %1544
  %1557 = icmp slt i32 %1548, %1541
  br i1 %1557, label %1558, label %1564

1558:                                             ; preds = %1556
  %1559 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 1
  %1560 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1559, align 8
  %1561 = icmp eq %"class.std::__1::__tree_node_base"* %1560, null
  br i1 %1561, label %1562, label %1566

1562:                                             ; preds = %1558
  %1563 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 0
  br label %1570

1564:                                             ; preds = %1556
  %1565 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 0
  br label %1570

1566:                                             ; preds = %1558, %1550
  %1567 = phi %"class.std::__1::__tree_node_base"* [ %1552, %1550 ], [ %1560, %1558 ]
  %1568 = phi %"class.std::__1::__tree_node_base"** [ %1551, %1550 ], [ %1559, %1558 ]
  %1569 = bitcast %"class.std::__1::__tree_node_base"* %1567 to %"class.std::__1::__tree_node"*
  br label %1544

1570:                                             ; preds = %1564, %1562, %1554, %1534
  %1571 = phi %"class.std::__1::__tree_end_node"* [ %1555, %1554 ], [ %1563, %1562 ], [ %1565, %1564 ], [ %51, %1534 ]
  %1572 = phi %"class.std::__1::__tree_node_base"** [ %1551, %1554 ], [ %1559, %1562 ], [ %1546, %1564 ], [ %1262, %1534 ]
  %1573 = bitcast %"class.std::__1::__tree_node_base"** %1572 to %"class.std::__1::__tree_node"**
  %1574 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1573, align 8
  %1575 = icmp eq %"class.std::__1::__tree_node"* %1574, null
  br i1 %1575, label %1576, label %1608

1576:                                             ; preds = %1570
  %1577 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1263, align 8, !noalias !77
  %1578 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1577, i64 0, i32 2
  %1579 = load i64, i64* %1578, align 8, !noalias !77
  %1580 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1577, i64 0, i32 3
  %1581 = load i64, i64* %1580, align 8, !noalias !77
  %1582 = sub i64 %1581, %1579
  %1583 = icmp ult i64 %1582, 40
  br i1 %1583, label %1584, label %1586, !prof !2

1584:                                             ; preds = %1576
  %1585 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1577, i64 40) #6, !noalias !77
  br label %1588

1586:                                             ; preds = %1576
  %1587 = add i64 %1579, 40
  store i64 %1587, i64* %1578, align 8, !noalias !77
  br label %1588

1588:                                             ; preds = %1586, %1584
  %1589 = phi i64 [ %1585, %1584 ], [ %1579, %1586 ]
  %1590 = inttoptr i64 %1589 to %"class.std::__1::__tree_node"*
  %1591 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1590, i64 0, i32 1, i32 0, i32 0
  store i32 %1541, i32* %1591, align 4, !noalias !77
  %1592 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1590, i64 0, i32 1, i32 0, i32 1
  store i32 %1537, i32* %1592, align 4, !noalias !77
  %1593 = inttoptr i64 %1589 to %"class.std::__1::__tree_node_base"*
  %1594 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1593, i64 0, i32 2
  %1595 = inttoptr i64 %1589 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1595, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %1571, %"class.std::__1::__tree_end_node"** %1594, align 8
  store %"class.std::__1::__tree_node_base"* %1593, %"class.std::__1::__tree_node_base"** %1572, align 8
  %1596 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1264, align 8
  %1597 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1596, i64 0, i32 0
  %1598 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1597, align 8
  %1599 = icmp eq %"class.std::__1::__tree_node_base"* %1598, null
  br i1 %1599, label %1603, label %1600

1600:                                             ; preds = %1588
  %1601 = ptrtoint %"class.std::__1::__tree_node_base"* %1598 to i64
  store i64 %1601, i64* %1265, align 8
  %1602 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1572, align 8
  br label %1603

1603:                                             ; preds = %1600, %1588
  %1604 = phi %"class.std::__1::__tree_node_base"* [ %1593, %1588 ], [ %1602, %1600 ]
  %1605 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1261, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1605, %"class.std::__1::__tree_node_base"* %1604) #6
  %1606 = load i64, i64* %50, align 8
  %1607 = add i64 %1606, 1
  store i64 %1607, i64* %50, align 8
  br label %1608

1608:                                             ; preds = %1603, %1570
  %1609 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1266, align 8, !noalias !80
  %1610 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1609, i64 0, i32 2
  %1611 = load i64, i64* %1610, align 8, !noalias !80
  %1612 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1609, i64 0, i32 3
  %1613 = load i64, i64* %1612, align 8, !noalias !80
  %1614 = sub i64 %1613, %1611
  %1615 = icmp ult i64 %1614, 24
  br i1 %1615, label %1616, label %1618, !prof !2

1616:                                             ; preds = %1608
  %1617 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1609, i64 24) #6, !noalias !80
  br label %1620

1618:                                             ; preds = %1608
  %1619 = add i64 %1611, 24
  store i64 %1619, i64* %1610, align 8, !noalias !80
  br label %1620

1620:                                             ; preds = %1618, %1616
  %1621 = phi i64 [ %1617, %1616 ], [ %1611, %1618 ]
  %1622 = inttoptr i64 %1621 to %"struct.std::__1::__list_node.1275"*
  %1623 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1622, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1264"* null, %"struct.std::__1::__list_node_base.1264"** %1623, align 8, !noalias !80
  %1624 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1622, i64 0, i32 1
  store i32 %1532, i32* %1624, align 4
  %1625 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1622, i64 0, i32 0
  %1626 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1622, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1264"* %1246, %"struct.std::__1::__list_node_base.1264"** %1626, align 8
  %1627 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1627, %"struct.std::__1::__list_node_base.1264"** %1623, align 8
  %1628 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %1627, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1264"* %1625, %"struct.std::__1::__list_node_base.1264"** %1628, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1625, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  %1629 = load i64, i64* %1249, align 8
  %1630 = add i64 %1629, 1
  store i64 %1630, i64* %1249, align 8
  %1631 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1267, align 8
  %1632 = icmp eq %"class.std::__1::__tree_node"* %1631, null
  br i1 %1632, label %1654, label %1633

1633:                                             ; preds = %1620, %1633
  %1634 = phi %"class.std::__1::__tree_end_node"* [ %1644, %1633 ], [ %58, %1620 ]
  %1635 = phi %"class.std::__1::__tree_node"* [ %1645, %1633 ], [ %1631, %1620 ]
  %1636 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1635, i64 0, i32 1, i32 0, i32 0
  %1637 = load i32, i32* %1636, align 4
  %1638 = icmp slt i32 %1637, %1537
  %1639 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1635, i64 0, i32 0, i32 1
  %1640 = bitcast %"class.std::__1::__tree_node_base"** %1639 to %"class.std::__1::__tree_node"**
  %1641 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1635, i64 0, i32 0, i32 0
  %1642 = bitcast %"class.std::__1::__tree_node"* %1635 to %"class.std::__1::__tree_node"**
  %1643 = select i1 %1638, %"class.std::__1::__tree_node"** %1640, %"class.std::__1::__tree_node"** %1642
  %1644 = select i1 %1638, %"class.std::__1::__tree_end_node"* %1634, %"class.std::__1::__tree_end_node"* %1641
  %1645 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1643, align 8
  %1646 = icmp eq %"class.std::__1::__tree_node"* %1645, null
  br i1 %1646, label %1647, label %1633

1647:                                             ; preds = %1633
  %1648 = icmp eq %"class.std::__1::__tree_end_node"* %1644, %58
  br i1 %1648, label %1654, label %1649

1649:                                             ; preds = %1647
  %1650 = bitcast %"class.std::__1::__tree_end_node"* %1644 to %"class.std::__1::__tree_node"*
  %1651 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1650, i64 0, i32 1, i32 0, i32 0
  %1652 = load i32, i32* %1651, align 4
  %1653 = icmp slt i32 %1537, %1652
  br i1 %1653, label %1654, label %1655

1654:                                             ; preds = %1649, %1647, %1620
  br label %1655

1655:                                             ; preds = %1654, %1649
  %1656 = phi %"class.std::__1::__tree_end_node"* [ %58, %1654 ], [ %1644, %1649 ]
  %1657 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1656, i64 4
  %1658 = bitcast %"class.std::__1::__tree_end_node"* %1657 to i32*
  %1659 = load i32, i32* %1658, align 4
  %1660 = add nsw i32 %1659, -1
  store i32 %1660, i32* %1658, align 4
  br label %1661

1661:                                             ; preds = %1655, %1529, %1527, %1500
  %1662 = lshr i64 %1506, 32
  %1663 = trunc i64 %1662 to i32
  switch i32 %1663, label %1732 [
    i32 1, label %1664
    i32 2, label %1670
    i32 3, label %1677
    i32 4, label %1718
    i32 8, label %1725
  ]

1664:                                             ; preds = %1661
  %1665 = sext i32 %1510 to i64
  %1666 = getelementptr inbounds i8, i8* %3, i64 %1665
  %1667 = load i8, i8* %1666, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #6
  store i8 %1667, i8* %12, align 1
  %1668 = load i8*, i8** %1254, align 8
  %1669 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1668, i8* nonnull %12, i8* %1284) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #6
  br label %1747

1670:                                             ; preds = %1661
  %1671 = sext i32 %1510 to i64
  %1672 = getelementptr inbounds i8, i8* %3, i64 %1671
  %1673 = bitcast i8* %1672 to i16*
  %1674 = load i16, i16* %1673, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1281) #6
  store i16 %1674, i16* %11, align 2
  %1675 = load i8*, i8** %1254, align 8
  %1676 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1675, i8* nonnull %1281, i8* %1283) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1281) #6
  br label %1747

1677:                                             ; preds = %1661
  %1678 = add nsw i32 %1510, -1
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds i8, i8* %3, i64 %1679
  %1681 = bitcast i8* %1680 to i32*
  %1682 = load i32, i32* %1681, align 4
  %1683 = ashr i32 %1682, 8
  switch i32 %1508, label %1747 [
    i32 2, label %1684
    i32 3, label %1688
    i32 4, label %1715
  ]

1684:                                             ; preds = %1677
  %1685 = trunc i32 %1683 to i16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1278) #6
  store i16 %1685, i16* %9, align 2
  %1686 = load i8*, i8** %1254, align 8
  %1687 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1686, i8* nonnull %1278, i8* %1280) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1278) #6
  br label %1747

1688:                                             ; preds = %1677
  %1689 = load i8*, i8** %1277, align 8
  %1690 = load i64, i64* %1258, align 8
  %1691 = ptrtoint i8* %1689 to i64
  %1692 = sub i64 %1690, %1691
  %1693 = shl i64 %1692, 32
  %1694 = add i64 %1693, -17179869184
  %1695 = ashr exact i64 %1694, 32
  %1696 = getelementptr inbounds i8, i8* %1689, i64 %1695
  %1697 = bitcast i8* %1696 to i32*
  %1698 = load i32, i32* %1697, align 4
  %1699 = trunc i32 %1698 to i8
  store i8 %1699, i8* %1696, align 1
  %1700 = add nsw i64 %1695, 1
  %1701 = lshr i32 %1682, 24
  %1702 = trunc i32 %1701 to i8
  %1703 = lshr i32 %1682, 16
  %1704 = trunc i32 %1703 to i8
  %1705 = lshr i32 %1682, 8
  %1706 = trunc i32 %1705 to i8
  %1707 = add nsw i64 %1695, 2
  %1708 = load i8*, i8** %1277, align 8
  %1709 = getelementptr inbounds i8, i8* %1708, i64 %1700
  store i8 %1706, i8* %1709, align 1
  %1710 = add nsw i64 %1695, 3
  %1711 = load i8*, i8** %1277, align 8
  %1712 = getelementptr inbounds i8, i8* %1711, i64 %1707
  store i8 %1704, i8* %1712, align 1
  %1713 = load i8*, i8** %1277, align 8
  %1714 = getelementptr inbounds i8, i8* %1713, i64 %1710
  store i8 %1702, i8* %1714, align 1
  br label %1747

1715:                                             ; preds = %1677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1274) #6
  store i32 %1683, i32* %7, align 4
  %1716 = load i8*, i8** %1254, align 8
  %1717 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1716, i8* nonnull %1274, i8* %1276) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1274) #6
  br label %1747

1718:                                             ; preds = %1661
  %1719 = sext i32 %1510 to i64
  %1720 = getelementptr inbounds i8, i8* %3, i64 %1719
  %1721 = bitcast i8* %1720 to i32*
  %1722 = load i32, i32* %1721, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1271) #6
  store i32 %1722, i32* %8, align 4
  %1723 = load i8*, i8** %1254, align 8
  %1724 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1723, i8* nonnull %1271, i8* %1273) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1271) #6
  br label %1747

1725:                                             ; preds = %1661
  %1726 = sext i32 %1510 to i64
  %1727 = getelementptr inbounds i8, i8* %3, i64 %1726
  %1728 = bitcast i8* %1727 to i64*
  %1729 = load i64, i64* %1728, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1268) #6
  store i64 %1729, i64* %10, align 8
  %1730 = load i8*, i8** %1254, align 8
  %1731 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1730, i8* nonnull %1268, i8* %1270) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1268) #6
  br label %1747

1732:                                             ; preds = %1661
  %1733 = icmp slt i32 %1508, %1663
  %1734 = select i1 %1733, i32 %1508, i32 %1663
  %1735 = load i8*, i8** %1254, align 8
  %1736 = sext i32 %1510 to i64
  %1737 = getelementptr inbounds i8, i8* %3, i64 %1736
  %1738 = sext i32 %1734 to i64
  %1739 = getelementptr inbounds i8, i8* %1737, i64 %1738
  %1740 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1735, i8* %1737, i8* %1739) #6
  %1741 = icmp sgt i32 %1508, %1663
  br i1 %1741, label %1742, label %1747

1742:                                             ; preds = %1732
  %1743 = sub nsw i32 %1508, %1663
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #6
  store i8 0, i8* %13, align 1
  %1744 = load i8*, i8** %1254, align 8
  %1745 = sext i32 %1743 to i64
  %1746 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS7_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %1744, i64 %1745, i8* nonnull dereferenceable(1) %13) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #6
  br label %1747

1747:                                             ; preds = %1742, %1732, %1725, %1718, %1715, %1688, %1684, %1677, %1670, %1664
  %1748 = add nuw i64 %1502, 1
  %1749 = load %"class.std::__1::vector.1181"*, %"class.std::__1::vector.1181"** %1488, align 8
  %1750 = getelementptr inbounds %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %1749, i64 0, i32 0, i32 1
  %1751 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %1750 to i64*
  %1752 = load i64, i64* %1751, align 8
  %1753 = bitcast %"class.std::__1::vector.1181"* %1749 to i64*
  %1754 = load i64, i64* %1753, align 8
  %1755 = sub i64 %1752, %1754
  %1756 = sdiv exact i64 %1755, 12
  %1757 = icmp ult i64 %1748, %1756
  br i1 %1757, label %1500, label %1496

1758:                                             ; preds = %1496
  %1759 = bitcast %"class.v8::internal::ZoneLinkedList.1193"** %1497 to %"class.std::__1::list.1194"**
  %1760 = getelementptr %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %1498, i64 0, i32 0, i32 0, i32 0, i32 1
  %1761 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %1760, align 8
  %1762 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %1498, i64 0, i32 0, i32 0, i32 0
  %1763 = icmp eq %"struct.std::__1::__list_node_base.1196"* %1761, %1762
  br i1 %1763, label %1859, label %1764

1764:                                             ; preds = %1758
  %1765 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %1498, i64 0, i32 0
  br label %1766

1766:                                             ; preds = %1853, %1764
  %1767 = phi %"class.std::__1::list.1194"* [ %1854, %1853 ], [ %1765, %1764 ]
  %1768 = phi %"struct.std::__1::__list_node_base.1196"* [ %1856, %1853 ], [ %1761, %1764 ]
  %1769 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %1768, i64 1
  %1770 = bitcast %"struct.std::__1::__list_node_base.1196"* %1769 to i32*
  %1771 = load i32, i32* %1770, align 4
  %1772 = add nsw i32 %1771, %1307
  %1773 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1257, align 8
  %1774 = icmp eq %"class.std::__1::__tree_node"* %1773, null
  br i1 %1774, label %1853, label %1775

1775:                                             ; preds = %1766, %1775
  %1776 = phi %"class.std::__1::__tree_end_node"* [ %1786, %1775 ], [ %44, %1766 ]
  %1777 = phi %"class.std::__1::__tree_node"* [ %1787, %1775 ], [ %1773, %1766 ]
  %1778 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1777, i64 0, i32 1, i32 0, i32 0
  %1779 = load i32, i32* %1778, align 4
  %1780 = icmp slt i32 %1779, %1772
  %1781 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1777, i64 0, i32 0, i32 1
  %1782 = bitcast %"class.std::__1::__tree_node_base"** %1781 to %"class.std::__1::__tree_node"**
  %1783 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1777, i64 0, i32 0, i32 0
  %1784 = bitcast %"class.std::__1::__tree_node"* %1777 to %"class.std::__1::__tree_node"**
  %1785 = select i1 %1780, %"class.std::__1::__tree_node"** %1782, %"class.std::__1::__tree_node"** %1784
  %1786 = select i1 %1780, %"class.std::__1::__tree_end_node"* %1776, %"class.std::__1::__tree_end_node"* %1783
  %1787 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1785, align 8
  %1788 = icmp eq %"class.std::__1::__tree_node"* %1787, null
  br i1 %1788, label %1789, label %1775

1789:                                             ; preds = %1775
  %1790 = icmp eq %"class.std::__1::__tree_end_node"* %1786, %44
  br i1 %1790, label %1853, label %1791

1791:                                             ; preds = %1789
  %1792 = bitcast %"class.std::__1::__tree_end_node"* %1786 to %"class.std::__1::__tree_node"*
  %1793 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1792, i64 0, i32 1, i32 0, i32 0
  %1794 = load i32, i32* %1793, align 4
  %1795 = icmp slt i32 %1772, %1794
  br i1 %1795, label %1853, label %1796

1796:                                             ; preds = %1791
  %1797 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1786, i64 4
  %1798 = bitcast %"class.std::__1::__tree_end_node"* %1797 to i32*
  %1799 = load i32, i32* %1798, align 4
  %1800 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1266, align 8, !noalias !83
  %1801 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1800, i64 0, i32 2
  %1802 = load i64, i64* %1801, align 8, !noalias !83
  %1803 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1800, i64 0, i32 3
  %1804 = load i64, i64* %1803, align 8, !noalias !83
  %1805 = sub i64 %1804, %1802
  %1806 = icmp ult i64 %1805, 24
  br i1 %1806, label %1807, label %1809, !prof !2

1807:                                             ; preds = %1796
  %1808 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1800, i64 24) #6, !noalias !83
  br label %1811

1809:                                             ; preds = %1796
  %1810 = add i64 %1802, 24
  store i64 %1810, i64* %1801, align 8, !noalias !83
  br label %1811

1811:                                             ; preds = %1809, %1807
  %1812 = phi i64 [ %1808, %1807 ], [ %1802, %1809 ]
  %1813 = inttoptr i64 %1812 to %"struct.std::__1::__list_node.1275"*
  %1814 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1813, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1264"* null, %"struct.std::__1::__list_node_base.1264"** %1814, align 8, !noalias !83
  %1815 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1813, i64 0, i32 1
  store i32 %1794, i32* %1815, align 4
  %1816 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1813, i64 0, i32 0
  %1817 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %1813, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1264"* %1246, %"struct.std::__1::__list_node_base.1264"** %1817, align 8
  %1818 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1818, %"struct.std::__1::__list_node_base.1264"** %1814, align 8
  %1819 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %1818, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.1264"* %1816, %"struct.std::__1::__list_node_base.1264"** %1819, align 8
  store %"struct.std::__1::__list_node_base.1264"* %1816, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  %1820 = load i64, i64* %1249, align 8
  %1821 = add i64 %1820, 1
  store i64 %1821, i64* %1249, align 8
  %1822 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1267, align 8
  %1823 = icmp eq %"class.std::__1::__tree_node"* %1822, null
  br i1 %1823, label %1845, label %1824

1824:                                             ; preds = %1811, %1824
  %1825 = phi %"class.std::__1::__tree_end_node"* [ %1835, %1824 ], [ %58, %1811 ]
  %1826 = phi %"class.std::__1::__tree_node"* [ %1836, %1824 ], [ %1822, %1811 ]
  %1827 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1826, i64 0, i32 1, i32 0, i32 0
  %1828 = load i32, i32* %1827, align 4
  %1829 = icmp slt i32 %1828, %1799
  %1830 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1826, i64 0, i32 0, i32 1
  %1831 = bitcast %"class.std::__1::__tree_node_base"** %1830 to %"class.std::__1::__tree_node"**
  %1832 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1826, i64 0, i32 0, i32 0
  %1833 = bitcast %"class.std::__1::__tree_node"* %1826 to %"class.std::__1::__tree_node"**
  %1834 = select i1 %1829, %"class.std::__1::__tree_node"** %1831, %"class.std::__1::__tree_node"** %1833
  %1835 = select i1 %1829, %"class.std::__1::__tree_end_node"* %1825, %"class.std::__1::__tree_end_node"* %1832
  %1836 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1834, align 8
  %1837 = icmp eq %"class.std::__1::__tree_node"* %1836, null
  br i1 %1837, label %1838, label %1824

1838:                                             ; preds = %1824
  %1839 = icmp eq %"class.std::__1::__tree_end_node"* %1835, %58
  br i1 %1839, label %1845, label %1840

1840:                                             ; preds = %1838
  %1841 = bitcast %"class.std::__1::__tree_end_node"* %1835 to %"class.std::__1::__tree_node"*
  %1842 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1841, i64 0, i32 1, i32 0, i32 0
  %1843 = load i32, i32* %1842, align 4
  %1844 = icmp slt i32 %1799, %1843
  br i1 %1844, label %1845, label %1846

1845:                                             ; preds = %1840, %1838, %1811
  br label %1846

1846:                                             ; preds = %1845, %1840
  %1847 = phi %"class.std::__1::__tree_end_node"* [ %58, %1845 ], [ %1835, %1840 ]
  %1848 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1847, i64 4
  %1849 = bitcast %"class.std::__1::__tree_end_node"* %1848 to i32*
  %1850 = load i32, i32* %1849, align 4
  %1851 = add nsw i32 %1850, -1
  store i32 %1851, i32* %1849, align 4
  %1852 = load %"class.std::__1::list.1194"*, %"class.std::__1::list.1194"** %1759, align 8
  br label %1853

1853:                                             ; preds = %1846, %1791, %1789, %1766
  %1854 = phi %"class.std::__1::list.1194"* [ %1767, %1791 ], [ %1767, %1789 ], [ %1767, %1766 ], [ %1852, %1846 ]
  %1855 = getelementptr inbounds %"struct.std::__1::__list_node_base.1196", %"struct.std::__1::__list_node_base.1196"* %1768, i64 0, i32 1
  %1856 = load %"struct.std::__1::__list_node_base.1196"*, %"struct.std::__1::__list_node_base.1196"** %1855, align 8
  %1857 = getelementptr inbounds %"class.std::__1::list.1194", %"class.std::__1::list.1194"* %1854, i64 0, i32 0, i32 0
  %1858 = icmp eq %"struct.std::__1::__list_node_base.1196"* %1856, %1857
  br i1 %1858, label %1859, label %1766

1859:                                             ; preds = %1853, %1758, %1496
  %1860 = sext i32 %1484 to i64
  %1861 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %1860
  %1862 = load i32, i32* %1861, align 4
  %1863 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, i64 0, i32 0
  %1864 = load i32, i32* %1863, align 8
  %1865 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %1479, i64 0, i32 3
  %1866 = load i32, i32* %1865, align 4
  %1867 = sext i32 %1864 to i64
  %1868 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %1867
  %1869 = load i32, i32* %1868, align 4
  %1870 = add nsw i32 %1869, %1866
  %1871 = sub nsw i32 %1862, %1870
  %1872 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1267, align 8
  %1873 = icmp eq %"class.std::__1::__tree_node"* %1872, null
  br i1 %1873, label %1874, label %1876

1874:                                             ; preds = %1859
  %1875 = add nsw i32 %1870, %1307
  br label %2428

1876:                                             ; preds = %1859, %1876
  %1877 = phi %"class.std::__1::__tree_end_node"* [ %1887, %1876 ], [ %58, %1859 ]
  %1878 = phi %"class.std::__1::__tree_node"* [ %1888, %1876 ], [ %1872, %1859 ]
  %1879 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1878, i64 0, i32 1, i32 0, i32 0
  %1880 = load i32, i32* %1879, align 4
  %1881 = icmp sgt i32 %1880, %1307
  %1882 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1878, i64 0, i32 0, i32 0
  %1883 = bitcast %"class.std::__1::__tree_node"* %1878 to %"class.std::__1::__tree_node"**
  %1884 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1878, i64 0, i32 0, i32 1
  %1885 = bitcast %"class.std::__1::__tree_node_base"** %1884 to %"class.std::__1::__tree_node"**
  %1886 = select i1 %1881, %"class.std::__1::__tree_node"** %1883, %"class.std::__1::__tree_node"** %1885
  %1887 = select i1 %1881, %"class.std::__1::__tree_end_node"* %1882, %"class.std::__1::__tree_end_node"* %1877
  %1888 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1886, align 8
  %1889 = icmp eq %"class.std::__1::__tree_node"* %1888, null
  br i1 %1889, label %1890, label %1876

1890:                                             ; preds = %1876
  %1891 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1887, i64 4
  %1892 = bitcast %"class.std::__1::__tree_end_node"* %1891 to i32*
  %1893 = load i32, i32* %1892, align 4
  %1894 = icmp ne %"class.std::__1::__tree_end_node"* %1887, %58
  %1895 = icmp eq i32 %1893, 0
  %1896 = and i1 %1894, %1895
  br i1 %1896, label %1897, label %1934

1897:                                             ; preds = %1890, %1926
  %1898 = phi %"class.std::__1::__tree_end_node"* [ %1927, %1926 ], [ %1887, %1890 ]
  %1899 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1898, i64 1, i32 0
  %1900 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1899, align 8
  %1901 = icmp eq %"class.std::__1::__tree_node_base"* %1900, null
  br i1 %1901, label %1902, label %1910

1902:                                             ; preds = %1897
  %1903 = bitcast %"class.std::__1::__tree_end_node"* %1898 to %"class.std::__1::__tree_node_base"*
  %1904 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1898, i64 2
  %1905 = bitcast %"class.std::__1::__tree_end_node"* %1904 to %"class.std::__1::__tree_end_node"**
  %1906 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1905, align 8
  %1907 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1906, i64 0, i32 0
  %1908 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1907, align 8
  %1909 = icmp eq %"class.std::__1::__tree_node_base"* %1908, %1903
  br i1 %1909, label %1926, label %1917

1910:                                             ; preds = %1897, %1910
  %1911 = phi %"class.std::__1::__tree_node_base"* [ %1913, %1910 ], [ %1900, %1897 ]
  %1912 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1911, i64 0, i32 0, i32 0
  %1913 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1912, align 8
  %1914 = icmp eq %"class.std::__1::__tree_node_base"* %1913, null
  br i1 %1914, label %1915, label %1910

1915:                                             ; preds = %1910
  %1916 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1911, i64 0, i32 0
  br label %1926

1917:                                             ; preds = %1902, %1917
  %1918 = phi %"class.std::__1::__tree_end_node"** [ %1921, %1917 ], [ %1905, %1902 ]
  %1919 = bitcast %"class.std::__1::__tree_end_node"** %1918 to %"class.std::__1::__tree_node_base"**
  %1920 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1919, align 8
  %1921 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1920, i64 0, i32 2
  %1922 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1921, align 8
  %1923 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1922, i64 0, i32 0
  %1924 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1923, align 8
  %1925 = icmp eq %"class.std::__1::__tree_node_base"* %1924, %1920
  br i1 %1925, label %1926, label %1917

1926:                                             ; preds = %1917, %1915, %1902
  %1927 = phi %"class.std::__1::__tree_end_node"* [ %1916, %1915 ], [ %1906, %1902 ], [ %1922, %1917 ]
  %1928 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1927, i64 4
  %1929 = bitcast %"class.std::__1::__tree_end_node"* %1928 to i32*
  %1930 = load i32, i32* %1929, align 4
  %1931 = icmp ne %"class.std::__1::__tree_end_node"* %1927, %58
  %1932 = icmp eq i32 %1930, 0
  %1933 = and i1 %1931, %1932
  br i1 %1933, label %1897, label %1934

1934:                                             ; preds = %1926, %1890
  %1935 = phi %"class.std::__1::__tree_end_node"* [ %1887, %1890 ], [ %1927, %1926 ]
  %1936 = phi i1 [ %1894, %1890 ], [ %1931, %1926 ]
  %1937 = bitcast %"class.std::__1::__tree_end_node"* %1935 to %"class.std::__1::__tree_node"*
  %1938 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1937, i64 0, i32 1, i32 0, i32 0
  %1939 = load i32, i32* %1938, align 4
  %1940 = add nsw i32 %1870, %1307
  %1941 = icmp slt i32 %1939, %1940
  %1942 = and i1 %1936, %1941
  br i1 %1942, label %1943, label %2428

1943:                                             ; preds = %1934
  %1944 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1257, align 8
  %1945 = icmp eq %"class.std::__1::__tree_node"* %1944, null
  br i1 %1945, label %1969, label %1946

1946:                                             ; preds = %1943, %1946
  %1947 = phi %"class.std::__1::__tree_end_node"* [ %1957, %1946 ], [ %44, %1943 ]
  %1948 = phi %"class.std::__1::__tree_node"* [ %1958, %1946 ], [ %1944, %1943 ]
  %1949 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1948, i64 0, i32 1, i32 0, i32 0
  %1950 = load i32, i32* %1949, align 4
  %1951 = icmp slt i32 %1950, %1939
  %1952 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1948, i64 0, i32 0, i32 1
  %1953 = bitcast %"class.std::__1::__tree_node_base"** %1952 to %"class.std::__1::__tree_node"**
  %1954 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1948, i64 0, i32 0, i32 0
  %1955 = bitcast %"class.std::__1::__tree_node"* %1948 to %"class.std::__1::__tree_node"**
  %1956 = select i1 %1951, %"class.std::__1::__tree_node"** %1953, %"class.std::__1::__tree_node"** %1955
  %1957 = select i1 %1951, %"class.std::__1::__tree_end_node"* %1947, %"class.std::__1::__tree_end_node"* %1954
  %1958 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1956, align 8
  %1959 = icmp eq %"class.std::__1::__tree_node"* %1958, null
  br i1 %1959, label %1960, label %1946

1960:                                             ; preds = %1946
  %1961 = icmp eq %"class.std::__1::__tree_end_node"* %1957, %44
  br i1 %1961, label %1969, label %1962

1962:                                             ; preds = %1960, %2425
  %1963 = phi i32 [ %2397, %2425 ], [ %1939, %1960 ]
  %1964 = phi %"class.std::__1::__tree_end_node"* [ %2426, %2425 ], [ %1957, %1960 ]
  %1965 = bitcast %"class.std::__1::__tree_end_node"* %1964 to %"class.std::__1::__tree_node"*
  %1966 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1965, i64 0, i32 1, i32 0, i32 0
  %1967 = load i32, i32* %1966, align 4
  %1968 = icmp slt i32 %1967, %1940
  br i1 %1968, label %2390, label %1969

1969:                                             ; preds = %2425, %1962, %1960, %1943
  %1970 = phi i32 [ %1939, %1960 ], [ %1939, %1943 ], [ %1963, %1962 ], [ %2397, %2425 ]
  %1971 = sub nsw i32 %1940, %1970
  %1972 = add nsw i32 %1971, %1871
  %1973 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1286, align 8
  %1974 = icmp eq %"class.std::__1::__tree_node"* %1973, null
  %1975 = bitcast %"class.std::__1::__tree_node"* %1973 to %"class.std::__1::__tree_node_base"*
  br i1 %1974, label %1993, label %1976

1976:                                             ; preds = %1969, %1976
  %1977 = phi %"class.std::__1::__tree_end_node"* [ %1987, %1976 ], [ %65, %1969 ]
  %1978 = phi %"class.std::__1::__tree_node"* [ %1988, %1976 ], [ %1973, %1969 ]
  %1979 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1978, i64 0, i32 1, i32 0, i32 0
  %1980 = load i32, i32* %1979, align 4
  %1981 = icmp slt i32 %1980, %1970
  %1982 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1978, i64 0, i32 0, i32 1
  %1983 = bitcast %"class.std::__1::__tree_node_base"** %1982 to %"class.std::__1::__tree_node"**
  %1984 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1978, i64 0, i32 0, i32 0
  %1985 = bitcast %"class.std::__1::__tree_node"* %1978 to %"class.std::__1::__tree_node"**
  %1986 = select i1 %1981, %"class.std::__1::__tree_node"** %1983, %"class.std::__1::__tree_node"** %1985
  %1987 = select i1 %1981, %"class.std::__1::__tree_end_node"* %1977, %"class.std::__1::__tree_end_node"* %1984
  %1988 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1986, align 8
  %1989 = icmp eq %"class.std::__1::__tree_node"* %1988, null
  br i1 %1989, label %1990, label %1976

1990:                                             ; preds = %1976
  %1991 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1987, i64 0, i32 0
  %1992 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1991, align 8
  br label %1993

1993:                                             ; preds = %1990, %1969
  %1994 = phi %"class.std::__1::__tree_node_base"* [ %1975, %1969 ], [ %1992, %1990 ]
  %1995 = phi %"class.std::__1::__tree_end_node"* [ %65, %1969 ], [ %1987, %1990 ]
  %1996 = icmp eq %"class.std::__1::__tree_node_base"* %1994, null
  br i1 %1996, label %2002, label %1997

1997:                                             ; preds = %1993, %1997
  %1998 = phi %"class.std::__1::__tree_node_base"* [ %2000, %1997 ], [ %1994, %1993 ]
  %1999 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1998, i64 0, i32 1
  %2000 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1999, align 8
  %2001 = icmp eq %"class.std::__1::__tree_node_base"* %2000, null
  br i1 %2001, label %2013, label %1997

2002:                                             ; preds = %1993, %2002
  %2003 = phi %"class.std::__1::__tree_end_node"* [ %2007, %2002 ], [ %1995, %1993 ]
  %2004 = bitcast %"class.std::__1::__tree_end_node"* %2003 to %"class.std::__1::__tree_node_base"*
  %2005 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2003, i64 2
  %2006 = bitcast %"class.std::__1::__tree_end_node"* %2005 to %"class.std::__1::__tree_end_node"**
  %2007 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2006, align 8
  %2008 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2007, i64 0, i32 0
  %2009 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2008, align 8
  %2010 = icmp eq %"class.std::__1::__tree_node_base"* %2009, %2004
  br i1 %2010, label %2002, label %2011

2011:                                             ; preds = %2002
  %2012 = bitcast %"class.std::__1::__tree_end_node"* %2007 to %"class.std::__1::__tree_node_base"*
  br label %2013

2013:                                             ; preds = %1997, %2011
  %2014 = phi %"class.std::__1::__tree_node_base"* [ %2012, %2011 ], [ %1998, %1997 ]
  %2015 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2014, i64 0, i32 4, i64 7
  %2016 = bitcast i8* %2015 to i32*
  %2017 = load i32, i32* %2016, align 4
  %2018 = add nsw i32 %2017, %1972
  br i1 %1974, label %2045, label %2019

2019:                                             ; preds = %2013, %2041
  %2020 = phi %"class.std::__1::__tree_node"* [ %2044, %2041 ], [ %1973, %2013 ]
  %2021 = phi %"class.std::__1::__tree_node_base"** [ %2043, %2041 ], [ %1287, %2013 ]
  %2022 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 1, i32 0, i32 0
  %2023 = load i32, i32* %2022, align 4
  %2024 = icmp slt i32 %1970, %2023
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2019
  %2026 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 0, i32 0, i32 0
  %2027 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2026, align 8
  %2028 = icmp eq %"class.std::__1::__tree_node_base"* %2027, null
  br i1 %2028, label %2029, label %2041

2029:                                             ; preds = %2025
  %2030 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 0, i32 0
  br label %2045

2031:                                             ; preds = %2019
  %2032 = icmp slt i32 %2023, %1970
  br i1 %2032, label %2033, label %2039

2033:                                             ; preds = %2031
  %2034 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 0, i32 1
  %2035 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2034, align 8
  %2036 = icmp eq %"class.std::__1::__tree_node_base"* %2035, null
  br i1 %2036, label %2037, label %2041

2037:                                             ; preds = %2033
  %2038 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 0, i32 0
  br label %2045

2039:                                             ; preds = %2031
  %2040 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2020, i64 0, i32 0, i32 0
  br label %2045

2041:                                             ; preds = %2033, %2025
  %2042 = phi %"class.std::__1::__tree_node_base"* [ %2027, %2025 ], [ %2035, %2033 ]
  %2043 = phi %"class.std::__1::__tree_node_base"** [ %2026, %2025 ], [ %2034, %2033 ]
  %2044 = bitcast %"class.std::__1::__tree_node_base"* %2042 to %"class.std::__1::__tree_node"*
  br label %2019

2045:                                             ; preds = %2039, %2037, %2029, %2013
  %2046 = phi %"class.std::__1::__tree_end_node"* [ %2030, %2029 ], [ %2038, %2037 ], [ %2040, %2039 ], [ %65, %2013 ]
  %2047 = phi %"class.std::__1::__tree_node_base"** [ %2026, %2029 ], [ %2034, %2037 ], [ %2021, %2039 ], [ %1288, %2013 ]
  %2048 = bitcast %"class.std::__1::__tree_node_base"** %2047 to %"class.std::__1::__tree_node"**
  %2049 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2048, align 8
  %2050 = icmp eq %"class.std::__1::__tree_node"* %2049, null
  br i1 %2050, label %2051, label %2083

2051:                                             ; preds = %2045
  %2052 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1289, align 8, !noalias !86
  %2053 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2052, i64 0, i32 2
  %2054 = load i64, i64* %2053, align 8, !noalias !86
  %2055 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2052, i64 0, i32 3
  %2056 = load i64, i64* %2055, align 8, !noalias !86
  %2057 = sub i64 %2056, %2054
  %2058 = icmp ult i64 %2057, 40
  br i1 %2058, label %2059, label %2061, !prof !2

2059:                                             ; preds = %2051
  %2060 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2052, i64 40) #6, !noalias !86
  br label %2063

2061:                                             ; preds = %2051
  %2062 = add i64 %2054, 40
  store i64 %2062, i64* %2053, align 8, !noalias !86
  br label %2063

2063:                                             ; preds = %2061, %2059
  %2064 = phi i64 [ %2060, %2059 ], [ %2054, %2061 ]
  %2065 = inttoptr i64 %2064 to %"class.std::__1::__tree_node"*
  %2066 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2065, i64 0, i32 1, i32 0, i32 0
  store i32 %1970, i32* %2066, align 4, !noalias !86
  %2067 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2065, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %2067, align 4, !noalias !86
  %2068 = inttoptr i64 %2064 to %"class.std::__1::__tree_node_base"*
  %2069 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2068, i64 0, i32 2
  %2070 = inttoptr i64 %2064 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2070, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2046, %"class.std::__1::__tree_end_node"** %2069, align 8
  store %"class.std::__1::__tree_node_base"* %2068, %"class.std::__1::__tree_node_base"** %2047, align 8
  %2071 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1290, align 8
  %2072 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2071, i64 0, i32 0
  %2073 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2072, align 8
  %2074 = icmp eq %"class.std::__1::__tree_node_base"* %2073, null
  br i1 %2074, label %2078, label %2075

2075:                                             ; preds = %2063
  %2076 = ptrtoint %"class.std::__1::__tree_node_base"* %2073 to i64
  store i64 %2076, i64* %1291, align 8
  %2077 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2047, align 8
  br label %2078

2078:                                             ; preds = %2075, %2063
  %2079 = phi %"class.std::__1::__tree_node_base"* [ %2068, %2063 ], [ %2077, %2075 ]
  %2080 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1287, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2080, %"class.std::__1::__tree_node_base"* %2079) #6
  %2081 = load i64, i64* %64, align 8
  %2082 = add i64 %2081, 1
  store i64 %2082, i64* %64, align 8
  br label %2083

2083:                                             ; preds = %2078, %2045
  %2084 = phi %"class.std::__1::__tree_node"* [ %2065, %2078 ], [ %2049, %2045 ]
  %2085 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2084, i64 0, i32 1, i32 0, i32 1
  store i32 %2018, i32* %2085, align 4
  %2086 = add nsw i32 %1307, 1
  %2087 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  %2088 = icmp eq %"class.std::__1::__tree_node"* %2087, null
  %2089 = bitcast %"class.std::__1::__tree_node"* %2087 to %"class.std::__1::__tree_node_base"*
  br i1 %2088, label %2107, label %2090

2090:                                             ; preds = %2083, %2090
  %2091 = phi %"class.std::__1::__tree_end_node"* [ %2101, %2090 ], [ %72, %2083 ]
  %2092 = phi %"class.std::__1::__tree_node"* [ %2102, %2090 ], [ %2087, %2083 ]
  %2093 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2092, i64 0, i32 1, i32 0, i32 0
  %2094 = load i32, i32* %2093, align 4
  %2095 = icmp sle i32 %2094, %1307
  %2096 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2092, i64 0, i32 0, i32 1
  %2097 = bitcast %"class.std::__1::__tree_node_base"** %2096 to %"class.std::__1::__tree_node"**
  %2098 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2092, i64 0, i32 0, i32 0
  %2099 = bitcast %"class.std::__1::__tree_node"* %2092 to %"class.std::__1::__tree_node"**
  %2100 = select i1 %2095, %"class.std::__1::__tree_node"** %2097, %"class.std::__1::__tree_node"** %2099
  %2101 = select i1 %2095, %"class.std::__1::__tree_end_node"* %2091, %"class.std::__1::__tree_end_node"* %2098
  %2102 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2100, align 8
  %2103 = icmp eq %"class.std::__1::__tree_node"* %2102, null
  br i1 %2103, label %2104, label %2090

2104:                                             ; preds = %2090
  %2105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2101, i64 0, i32 0
  %2106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2105, align 8
  br label %2107

2107:                                             ; preds = %2104, %2083
  %2108 = phi %"class.std::__1::__tree_node_base"* [ %2089, %2083 ], [ %2106, %2104 ]
  %2109 = phi %"class.std::__1::__tree_end_node"* [ %72, %2083 ], [ %2101, %2104 ]
  %2110 = icmp eq %"class.std::__1::__tree_node_base"* %2108, null
  br i1 %2110, label %2116, label %2111

2111:                                             ; preds = %2107, %2111
  %2112 = phi %"class.std::__1::__tree_node_base"* [ %2114, %2111 ], [ %2108, %2107 ]
  %2113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2112, i64 0, i32 1
  %2114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2113, align 8
  %2115 = icmp eq %"class.std::__1::__tree_node_base"* %2114, null
  br i1 %2115, label %2127, label %2111

2116:                                             ; preds = %2107, %2116
  %2117 = phi %"class.std::__1::__tree_end_node"* [ %2121, %2116 ], [ %2109, %2107 ]
  %2118 = bitcast %"class.std::__1::__tree_end_node"* %2117 to %"class.std::__1::__tree_node_base"*
  %2119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2117, i64 2
  %2120 = bitcast %"class.std::__1::__tree_end_node"* %2119 to %"class.std::__1::__tree_end_node"**
  %2121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2120, align 8
  %2122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2121, i64 0, i32 0
  %2123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2122, align 8
  %2124 = icmp eq %"class.std::__1::__tree_node_base"* %2123, %2118
  br i1 %2124, label %2116, label %2125

2125:                                             ; preds = %2116
  %2126 = bitcast %"class.std::__1::__tree_end_node"* %2121 to %"class.std::__1::__tree_node_base"*
  br label %2127

2127:                                             ; preds = %2111, %2125
  %2128 = phi %"class.std::__1::__tree_node_base"* [ %2126, %2125 ], [ %2112, %2111 ]
  %2129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2128, i64 0, i32 4, i64 7
  %2130 = bitcast i8* %2129 to i32*
  %2131 = load i32, i32* %2130, align 4
  %2132 = add nsw i32 %2131, %1972
  br i1 %2088, label %2159, label %2133

2133:                                             ; preds = %2127, %2155
  %2134 = phi %"class.std::__1::__tree_node"* [ %2158, %2155 ], [ %2087, %2127 ]
  %2135 = phi %"class.std::__1::__tree_node_base"** [ %2157, %2155 ], [ %1294, %2127 ]
  %2136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 1, i32 0, i32 0
  %2137 = load i32, i32* %2136, align 4
  %2138 = icmp slt i32 %2086, %2137
  br i1 %2138, label %2139, label %2145

2139:                                             ; preds = %2133
  %2140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 0, i32 0, i32 0
  %2141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2140, align 8
  %2142 = icmp eq %"class.std::__1::__tree_node_base"* %2141, null
  br i1 %2142, label %2143, label %2155

2143:                                             ; preds = %2139
  %2144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 0, i32 0
  br label %2159

2145:                                             ; preds = %2133
  %2146 = icmp sgt i32 %2137, %1307
  br i1 %2146, label %2153, label %2147

2147:                                             ; preds = %2145
  %2148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 0, i32 1
  %2149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2148, align 8
  %2150 = icmp eq %"class.std::__1::__tree_node_base"* %2149, null
  br i1 %2150, label %2151, label %2155

2151:                                             ; preds = %2147
  %2152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 0, i32 0
  br label %2159

2153:                                             ; preds = %2145
  %2154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2134, i64 0, i32 0, i32 0
  br label %2159

2155:                                             ; preds = %2147, %2139
  %2156 = phi %"class.std::__1::__tree_node_base"* [ %2141, %2139 ], [ %2149, %2147 ]
  %2157 = phi %"class.std::__1::__tree_node_base"** [ %2140, %2139 ], [ %2148, %2147 ]
  %2158 = bitcast %"class.std::__1::__tree_node_base"* %2156 to %"class.std::__1::__tree_node"*
  br label %2133

2159:                                             ; preds = %2153, %2151, %2143, %2127
  %2160 = phi %"class.std::__1::__tree_end_node"* [ %2144, %2143 ], [ %2152, %2151 ], [ %2154, %2153 ], [ %72, %2127 ]
  %2161 = phi %"class.std::__1::__tree_node_base"** [ %2140, %2143 ], [ %2148, %2151 ], [ %2135, %2153 ], [ %1295, %2127 ]
  %2162 = bitcast %"class.std::__1::__tree_node_base"** %2161 to %"class.std::__1::__tree_node"**
  %2163 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2162, align 8
  %2164 = icmp eq %"class.std::__1::__tree_node"* %2163, null
  br i1 %2164, label %2165, label %2197

2165:                                             ; preds = %2159
  %2166 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1296, align 8, !noalias !89
  %2167 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2166, i64 0, i32 2
  %2168 = load i64, i64* %2167, align 8, !noalias !89
  %2169 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2166, i64 0, i32 3
  %2170 = load i64, i64* %2169, align 8, !noalias !89
  %2171 = sub i64 %2170, %2168
  %2172 = icmp ult i64 %2171, 40
  br i1 %2172, label %2173, label %2175, !prof !2

2173:                                             ; preds = %2165
  %2174 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2166, i64 40) #6, !noalias !89
  br label %2177

2175:                                             ; preds = %2165
  %2176 = add i64 %2168, 40
  store i64 %2176, i64* %2167, align 8, !noalias !89
  br label %2177

2177:                                             ; preds = %2175, %2173
  %2178 = phi i64 [ %2174, %2173 ], [ %2168, %2175 ]
  %2179 = inttoptr i64 %2178 to %"class.std::__1::__tree_node"*
  %2180 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2179, i64 0, i32 1, i32 0, i32 0
  store i32 %2086, i32* %2180, align 4, !noalias !89
  %2181 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2179, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %2181, align 4, !noalias !89
  %2182 = inttoptr i64 %2178 to %"class.std::__1::__tree_node_base"*
  %2183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2182, i64 0, i32 2
  %2184 = inttoptr i64 %2178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2184, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2160, %"class.std::__1::__tree_end_node"** %2183, align 8
  store %"class.std::__1::__tree_node_base"* %2182, %"class.std::__1::__tree_node_base"** %2161, align 8
  %2185 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1297, align 8
  %2186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2185, i64 0, i32 0
  %2187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2186, align 8
  %2188 = icmp eq %"class.std::__1::__tree_node_base"* %2187, null
  br i1 %2188, label %2192, label %2189

2189:                                             ; preds = %2177
  %2190 = ptrtoint %"class.std::__1::__tree_node_base"* %2187 to i64
  store i64 %2190, i64* %1298, align 8
  %2191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2161, align 8
  br label %2192

2192:                                             ; preds = %2189, %2177
  %2193 = phi %"class.std::__1::__tree_node_base"* [ %2182, %2177 ], [ %2191, %2189 ]
  %2194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1294, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2194, %"class.std::__1::__tree_node_base"* %2193) #6
  %2195 = load i64, i64* %71, align 8
  %2196 = add i64 %2195, 1
  store i64 %2196, i64* %71, align 8
  br label %2197

2197:                                             ; preds = %2192, %2159
  %2198 = phi %"class.std::__1::__tree_node"* [ %2179, %2192 ], [ %2163, %2159 ]
  %2199 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2198, i64 0, i32 1, i32 0, i32 1
  store i32 %2132, i32* %2199, align 4
  %2200 = load i64, i64* %1258, align 8
  %2201 = load i64, i64* %77, align 8
  %2202 = sub i64 %2200, %2201
  %2203 = trunc i64 %2202 to i32
  %2204 = sub nsw i32 %2203, %1970
  %2205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  %2206 = icmp eq %"class.std::__1::__tree_node"* %2205, null
  %2207 = bitcast %"class.std::__1::__tree_node"* %2205 to %"class.std::__1::__tree_node_base"*
  br i1 %2206, label %2225, label %2208

2208:                                             ; preds = %2197, %2208
  %2209 = phi %"class.std::__1::__tree_end_node"* [ %2219, %2208 ], [ %72, %2197 ]
  %2210 = phi %"class.std::__1::__tree_node"* [ %2220, %2208 ], [ %2205, %2197 ]
  %2211 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2210, i64 0, i32 1, i32 0, i32 0
  %2212 = load i32, i32* %2211, align 4
  %2213 = icmp slt i32 %2212, %1970
  %2214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2210, i64 0, i32 0, i32 1
  %2215 = bitcast %"class.std::__1::__tree_node_base"** %2214 to %"class.std::__1::__tree_node"**
  %2216 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2210, i64 0, i32 0, i32 0
  %2217 = bitcast %"class.std::__1::__tree_node"* %2210 to %"class.std::__1::__tree_node"**
  %2218 = select i1 %2213, %"class.std::__1::__tree_node"** %2215, %"class.std::__1::__tree_node"** %2217
  %2219 = select i1 %2213, %"class.std::__1::__tree_end_node"* %2209, %"class.std::__1::__tree_end_node"* %2216
  %2220 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2218, align 8
  %2221 = icmp eq %"class.std::__1::__tree_node"* %2220, null
  br i1 %2221, label %2222, label %2208

2222:                                             ; preds = %2208
  %2223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2219, i64 0, i32 0
  %2224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2223, align 8
  br label %2225

2225:                                             ; preds = %2222, %2197
  %2226 = phi %"class.std::__1::__tree_node_base"* [ %2207, %2197 ], [ %2224, %2222 ]
  %2227 = phi %"class.std::__1::__tree_end_node"* [ %72, %2197 ], [ %2219, %2222 ]
  %2228 = icmp eq %"class.std::__1::__tree_node_base"* %2226, null
  br i1 %2228, label %2234, label %2229

2229:                                             ; preds = %2225, %2229
  %2230 = phi %"class.std::__1::__tree_node_base"* [ %2232, %2229 ], [ %2226, %2225 ]
  %2231 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2230, i64 0, i32 1
  %2232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2231, align 8
  %2233 = icmp eq %"class.std::__1::__tree_node_base"* %2232, null
  br i1 %2233, label %2245, label %2229

2234:                                             ; preds = %2225, %2234
  %2235 = phi %"class.std::__1::__tree_end_node"* [ %2239, %2234 ], [ %2227, %2225 ]
  %2236 = bitcast %"class.std::__1::__tree_end_node"* %2235 to %"class.std::__1::__tree_node_base"*
  %2237 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2235, i64 2
  %2238 = bitcast %"class.std::__1::__tree_end_node"* %2237 to %"class.std::__1::__tree_end_node"**
  %2239 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2238, align 8
  %2240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2239, i64 0, i32 0
  %2241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2240, align 8
  %2242 = icmp eq %"class.std::__1::__tree_node_base"* %2241, %2236
  br i1 %2242, label %2234, label %2243

2243:                                             ; preds = %2234
  %2244 = bitcast %"class.std::__1::__tree_end_node"* %2239 to %"class.std::__1::__tree_node_base"*
  br label %2245

2245:                                             ; preds = %2229, %2243
  %2246 = phi %"class.std::__1::__tree_node_base"* [ %2244, %2243 ], [ %2230, %2229 ]
  %2247 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2246, i64 0, i32 4, i64 7
  %2248 = bitcast i8* %2247 to i32*
  %2249 = load i32, i32* %2248, align 4
  br i1 %2206, label %2276, label %2250

2250:                                             ; preds = %2245, %2272
  %2251 = phi %"class.std::__1::__tree_node"* [ %2275, %2272 ], [ %2205, %2245 ]
  %2252 = phi %"class.std::__1::__tree_node_base"** [ %2274, %2272 ], [ %1294, %2245 ]
  %2253 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 1, i32 0, i32 0
  %2254 = load i32, i32* %2253, align 4
  %2255 = icmp sgt i32 %2254, %1970
  br i1 %2255, label %2256, label %2262

2256:                                             ; preds = %2250
  %2257 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 0, i32 0, i32 0
  %2258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2257, align 8
  %2259 = icmp eq %"class.std::__1::__tree_node_base"* %2258, null
  br i1 %2259, label %2260, label %2272

2260:                                             ; preds = %2256
  %2261 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 0, i32 0
  br label %2276

2262:                                             ; preds = %2250
  %2263 = icmp slt i32 %2254, %1970
  br i1 %2263, label %2264, label %2270

2264:                                             ; preds = %2262
  %2265 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 0, i32 1
  %2266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2265, align 8
  %2267 = icmp eq %"class.std::__1::__tree_node_base"* %2266, null
  br i1 %2267, label %2268, label %2272

2268:                                             ; preds = %2264
  %2269 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 0, i32 0
  br label %2276

2270:                                             ; preds = %2262
  %2271 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2251, i64 0, i32 0, i32 0
  br label %2276

2272:                                             ; preds = %2264, %2256
  %2273 = phi %"class.std::__1::__tree_node_base"* [ %2258, %2256 ], [ %2266, %2264 ]
  %2274 = phi %"class.std::__1::__tree_node_base"** [ %2257, %2256 ], [ %2265, %2264 ]
  %2275 = bitcast %"class.std::__1::__tree_node_base"* %2273 to %"class.std::__1::__tree_node"*
  br label %2250

2276:                                             ; preds = %2270, %2268, %2260, %2245
  %2277 = phi %"class.std::__1::__tree_end_node"* [ %2261, %2260 ], [ %2269, %2268 ], [ %2271, %2270 ], [ %72, %2245 ]
  %2278 = phi %"class.std::__1::__tree_node_base"** [ %2257, %2260 ], [ %2265, %2268 ], [ %2252, %2270 ], [ %1295, %2245 ]
  %2279 = bitcast %"class.std::__1::__tree_node_base"** %2278 to %"class.std::__1::__tree_node"**
  %2280 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2279, align 8
  %2281 = icmp eq %"class.std::__1::__tree_node"* %2280, null
  br i1 %2281, label %2282, label %2315

2282:                                             ; preds = %2276
  %2283 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1296, align 8, !noalias !92
  %2284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2283, i64 0, i32 2
  %2285 = load i64, i64* %2284, align 8, !noalias !92
  %2286 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2283, i64 0, i32 3
  %2287 = load i64, i64* %2286, align 8, !noalias !92
  %2288 = sub i64 %2287, %2285
  %2289 = icmp ult i64 %2288, 40
  br i1 %2289, label %2290, label %2292, !prof !2

2290:                                             ; preds = %2282
  %2291 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2283, i64 40) #6, !noalias !92
  br label %2294

2292:                                             ; preds = %2282
  %2293 = add i64 %2285, 40
  store i64 %2293, i64* %2284, align 8, !noalias !92
  br label %2294

2294:                                             ; preds = %2292, %2290
  %2295 = phi i64 [ %2291, %2290 ], [ %2285, %2292 ]
  %2296 = inttoptr i64 %2295 to %"class.std::__1::__tree_node"*
  %2297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2296, i64 0, i32 1, i32 0, i32 0
  store i32 %1970, i32* %2297, align 4, !noalias !92
  %2298 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2296, i64 0, i32 1, i32 0, i32 1
  store i32 %2204, i32* %2298, align 4, !noalias !92
  %2299 = inttoptr i64 %2295 to %"class.std::__1::__tree_node_base"*
  %2300 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2299, i64 0, i32 2
  %2301 = inttoptr i64 %2295 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2301, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2277, %"class.std::__1::__tree_end_node"** %2300, align 8
  store %"class.std::__1::__tree_node_base"* %2299, %"class.std::__1::__tree_node_base"** %2278, align 8
  %2302 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1300, align 8
  %2303 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2302, i64 0, i32 0
  %2304 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2303, align 8
  %2305 = icmp eq %"class.std::__1::__tree_node_base"* %2304, null
  br i1 %2305, label %2309, label %2306

2306:                                             ; preds = %2294
  %2307 = ptrtoint %"class.std::__1::__tree_node_base"* %2304 to i64
  store i64 %2307, i64* %1301, align 8
  %2308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2278, align 8
  br label %2309

2309:                                             ; preds = %2306, %2294
  %2310 = phi %"class.std::__1::__tree_node_base"* [ %2299, %2294 ], [ %2308, %2306 ]
  %2311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1294, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2311, %"class.std::__1::__tree_node_base"* %2310) #6
  %2312 = load i64, i64* %71, align 8
  %2313 = add i64 %2312, 1
  store i64 %2313, i64* %71, align 8
  %2314 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  br label %2315

2315:                                             ; preds = %2309, %2276
  %2316 = phi %"class.std::__1::__tree_node"* [ %2205, %2276 ], [ %2314, %2309 ]
  %2317 = add nsw i32 %1970, 1
  %2318 = icmp eq %"class.std::__1::__tree_node"* %2316, null
  br i1 %2318, label %2345, label %2319

2319:                                             ; preds = %2315, %2341
  %2320 = phi %"class.std::__1::__tree_node"* [ %2344, %2341 ], [ %2316, %2315 ]
  %2321 = phi %"class.std::__1::__tree_node_base"** [ %2343, %2341 ], [ %1294, %2315 ]
  %2322 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 1, i32 0, i32 0
  %2323 = load i32, i32* %2322, align 4
  %2324 = icmp slt i32 %2317, %2323
  br i1 %2324, label %2325, label %2331

2325:                                             ; preds = %2319
  %2326 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 0, i32 0, i32 0
  %2327 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2326, align 8
  %2328 = icmp eq %"class.std::__1::__tree_node_base"* %2327, null
  br i1 %2328, label %2329, label %2341

2329:                                             ; preds = %2325
  %2330 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 0, i32 0
  br label %2345

2331:                                             ; preds = %2319
  %2332 = icmp sgt i32 %2323, %1970
  br i1 %2332, label %2339, label %2333

2333:                                             ; preds = %2331
  %2334 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 0, i32 1
  %2335 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2334, align 8
  %2336 = icmp eq %"class.std::__1::__tree_node_base"* %2335, null
  br i1 %2336, label %2337, label %2341

2337:                                             ; preds = %2333
  %2338 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 0, i32 0
  br label %2345

2339:                                             ; preds = %2331
  %2340 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2320, i64 0, i32 0, i32 0
  br label %2345

2341:                                             ; preds = %2333, %2325
  %2342 = phi %"class.std::__1::__tree_node_base"* [ %2327, %2325 ], [ %2335, %2333 ]
  %2343 = phi %"class.std::__1::__tree_node_base"** [ %2326, %2325 ], [ %2334, %2333 ]
  %2344 = bitcast %"class.std::__1::__tree_node_base"* %2342 to %"class.std::__1::__tree_node"*
  br label %2319

2345:                                             ; preds = %2339, %2337, %2329, %2315
  %2346 = phi %"class.std::__1::__tree_end_node"* [ %2330, %2329 ], [ %2338, %2337 ], [ %2340, %2339 ], [ %72, %2315 ]
  %2347 = phi %"class.std::__1::__tree_node_base"** [ %2326, %2329 ], [ %2334, %2337 ], [ %2321, %2339 ], [ %1295, %2315 ]
  %2348 = bitcast %"class.std::__1::__tree_node_base"** %2347 to %"class.std::__1::__tree_node"**
  %2349 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2348, align 8
  %2350 = icmp eq %"class.std::__1::__tree_node"* %2349, null
  br i1 %2350, label %2351, label %2383

2351:                                             ; preds = %2345
  %2352 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1296, align 8, !noalias !95
  %2353 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2352, i64 0, i32 2
  %2354 = load i64, i64* %2353, align 8, !noalias !95
  %2355 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2352, i64 0, i32 3
  %2356 = load i64, i64* %2355, align 8, !noalias !95
  %2357 = sub i64 %2356, %2354
  %2358 = icmp ult i64 %2357, 40
  br i1 %2358, label %2359, label %2361, !prof !2

2359:                                             ; preds = %2351
  %2360 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2352, i64 40) #6, !noalias !95
  br label %2363

2361:                                             ; preds = %2351
  %2362 = add i64 %2354, 40
  store i64 %2362, i64* %2353, align 8, !noalias !95
  br label %2363

2363:                                             ; preds = %2361, %2359
  %2364 = phi i64 [ %2360, %2359 ], [ %2354, %2361 ]
  %2365 = inttoptr i64 %2364 to %"class.std::__1::__tree_node"*
  %2366 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2365, i64 0, i32 1, i32 0, i32 0
  store i32 %2317, i32* %2366, align 4, !noalias !95
  %2367 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2365, i64 0, i32 1, i32 0, i32 1
  store i32 %2249, i32* %2367, align 4, !noalias !95
  %2368 = inttoptr i64 %2364 to %"class.std::__1::__tree_node_base"*
  %2369 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2368, i64 0, i32 2
  %2370 = inttoptr i64 %2364 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2370, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2346, %"class.std::__1::__tree_end_node"** %2369, align 8
  store %"class.std::__1::__tree_node_base"* %2368, %"class.std::__1::__tree_node_base"** %2347, align 8
  %2371 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1300, align 8
  %2372 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2371, i64 0, i32 0
  %2373 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2372, align 8
  %2374 = icmp eq %"class.std::__1::__tree_node_base"* %2373, null
  br i1 %2374, label %2378, label %2375

2375:                                             ; preds = %2363
  %2376 = ptrtoint %"class.std::__1::__tree_node_base"* %2373 to i64
  store i64 %2376, i64* %1301, align 8
  %2377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2347, align 8
  br label %2378

2378:                                             ; preds = %2375, %2363
  %2379 = phi %"class.std::__1::__tree_node_base"* [ %2368, %2363 ], [ %2377, %2375 ]
  %2380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1294, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2380, %"class.std::__1::__tree_node_base"* %2379) #6
  %2381 = load i64, i64* %71, align 8
  %2382 = add i64 %2381, 1
  store i64 %2382, i64* %71, align 8
  br label %2383

2383:                                             ; preds = %2378, %2345
  %2384 = load i8*, i8** %1254, align 8
  %2385 = sext i32 %1970 to i64
  %2386 = getelementptr inbounds i8, i8* %3, i64 %2385
  %2387 = sext i32 %1971 to i64
  %2388 = getelementptr inbounds i8, i8* %2386, i64 %2387
  %2389 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %2384, i8* %2386, i8* %2388) #6
  br label %2664

2390:                                             ; preds = %1962
  %2391 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1964, i64 4
  %2392 = bitcast %"class.std::__1::__tree_end_node"* %2391 to i32*
  %2393 = load i32, i32* %2392, align 4
  %2394 = icmp sgt i32 %2393, %1307
  %2395 = icmp slt i32 %2393, %1963
  %2396 = and i1 %2394, %2395
  %2397 = select i1 %2396, i32 %2393, i32 %1963
  %2398 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1964, i64 1, i32 0
  %2399 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2398, align 8
  %2400 = icmp eq %"class.std::__1::__tree_node_base"* %2399, null
  br i1 %2400, label %2401, label %2409

2401:                                             ; preds = %2390
  %2402 = bitcast %"class.std::__1::__tree_end_node"* %1964 to %"class.std::__1::__tree_node_base"*
  %2403 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1964, i64 2
  %2404 = bitcast %"class.std::__1::__tree_end_node"* %2403 to %"class.std::__1::__tree_end_node"**
  %2405 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2404, align 8
  %2406 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2405, i64 0, i32 0
  %2407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2406, align 8
  %2408 = icmp eq %"class.std::__1::__tree_node_base"* %2407, %2402
  br i1 %2408, label %2425, label %2416

2409:                                             ; preds = %2390, %2409
  %2410 = phi %"class.std::__1::__tree_node_base"* [ %2412, %2409 ], [ %2399, %2390 ]
  %2411 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2410, i64 0, i32 0, i32 0
  %2412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2411, align 8
  %2413 = icmp eq %"class.std::__1::__tree_node_base"* %2412, null
  br i1 %2413, label %2414, label %2409

2414:                                             ; preds = %2409
  %2415 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2410, i64 0, i32 0
  br label %2425

2416:                                             ; preds = %2401, %2416
  %2417 = phi %"class.std::__1::__tree_end_node"** [ %2420, %2416 ], [ %2404, %2401 ]
  %2418 = bitcast %"class.std::__1::__tree_end_node"** %2417 to %"class.std::__1::__tree_node_base"**
  %2419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2418, align 8
  %2420 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2419, i64 0, i32 2
  %2421 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2420, align 8
  %2422 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2421, i64 0, i32 0
  %2423 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2422, align 8
  %2424 = icmp eq %"class.std::__1::__tree_node_base"* %2423, %2419
  br i1 %2424, label %2425, label %2416

2425:                                             ; preds = %2416, %2414, %2401
  %2426 = phi %"class.std::__1::__tree_end_node"* [ %2415, %2414 ], [ %2405, %2401 ], [ %2421, %2416 ]
  %2427 = icmp eq %"class.std::__1::__tree_end_node"* %2426, %44
  br i1 %2427, label %1969, label %1962

2428:                                             ; preds = %1934, %1874
  %2429 = phi i32 [ %1875, %1874 ], [ %1940, %1934 ]
  %2430 = add nsw i32 %1307, 1
  %2431 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  %2432 = icmp eq %"class.std::__1::__tree_node"* %2431, null
  %2433 = bitcast %"class.std::__1::__tree_node"* %2431 to %"class.std::__1::__tree_node_base"*
  br i1 %2432, label %2451, label %2434

2434:                                             ; preds = %2428, %2434
  %2435 = phi %"class.std::__1::__tree_end_node"* [ %2445, %2434 ], [ %72, %2428 ]
  %2436 = phi %"class.std::__1::__tree_node"* [ %2446, %2434 ], [ %2431, %2428 ]
  %2437 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2436, i64 0, i32 1, i32 0, i32 0
  %2438 = load i32, i32* %2437, align 4
  %2439 = icmp sle i32 %2438, %1307
  %2440 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2436, i64 0, i32 0, i32 1
  %2441 = bitcast %"class.std::__1::__tree_node_base"** %2440 to %"class.std::__1::__tree_node"**
  %2442 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2436, i64 0, i32 0, i32 0
  %2443 = bitcast %"class.std::__1::__tree_node"* %2436 to %"class.std::__1::__tree_node"**
  %2444 = select i1 %2439, %"class.std::__1::__tree_node"** %2441, %"class.std::__1::__tree_node"** %2443
  %2445 = select i1 %2439, %"class.std::__1::__tree_end_node"* %2435, %"class.std::__1::__tree_end_node"* %2442
  %2446 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2444, align 8
  %2447 = icmp eq %"class.std::__1::__tree_node"* %2446, null
  br i1 %2447, label %2448, label %2434

2448:                                             ; preds = %2434
  %2449 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2445, i64 0, i32 0
  %2450 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2449, align 8
  br label %2451

2451:                                             ; preds = %2448, %2428
  %2452 = phi %"class.std::__1::__tree_node_base"* [ %2433, %2428 ], [ %2450, %2448 ]
  %2453 = phi %"class.std::__1::__tree_end_node"* [ %72, %2428 ], [ %2445, %2448 ]
  %2454 = icmp eq %"class.std::__1::__tree_node_base"* %2452, null
  br i1 %2454, label %2460, label %2455

2455:                                             ; preds = %2451, %2455
  %2456 = phi %"class.std::__1::__tree_node_base"* [ %2458, %2455 ], [ %2452, %2451 ]
  %2457 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2456, i64 0, i32 1
  %2458 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2457, align 8
  %2459 = icmp eq %"class.std::__1::__tree_node_base"* %2458, null
  br i1 %2459, label %2471, label %2455

2460:                                             ; preds = %2451, %2460
  %2461 = phi %"class.std::__1::__tree_end_node"* [ %2465, %2460 ], [ %2453, %2451 ]
  %2462 = bitcast %"class.std::__1::__tree_end_node"* %2461 to %"class.std::__1::__tree_node_base"*
  %2463 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2461, i64 2
  %2464 = bitcast %"class.std::__1::__tree_end_node"* %2463 to %"class.std::__1::__tree_end_node"**
  %2465 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2464, align 8
  %2466 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2465, i64 0, i32 0
  %2467 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2466, align 8
  %2468 = icmp eq %"class.std::__1::__tree_node_base"* %2467, %2462
  br i1 %2468, label %2460, label %2469

2469:                                             ; preds = %2460
  %2470 = bitcast %"class.std::__1::__tree_end_node"* %2465 to %"class.std::__1::__tree_node_base"*
  br label %2471

2471:                                             ; preds = %2455, %2469
  %2472 = phi %"class.std::__1::__tree_node_base"* [ %2470, %2469 ], [ %2456, %2455 ]
  %2473 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2472, i64 0, i32 4, i64 7
  %2474 = bitcast i8* %2473 to i32*
  %2475 = load i32, i32* %2474, align 4
  %2476 = add nsw i32 %2475, %1871
  br i1 %2432, label %2503, label %2477

2477:                                             ; preds = %2471, %2499
  %2478 = phi %"class.std::__1::__tree_node"* [ %2502, %2499 ], [ %2431, %2471 ]
  %2479 = phi %"class.std::__1::__tree_node_base"** [ %2501, %2499 ], [ %1294, %2471 ]
  %2480 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 1, i32 0, i32 0
  %2481 = load i32, i32* %2480, align 4
  %2482 = icmp slt i32 %2430, %2481
  br i1 %2482, label %2483, label %2489

2483:                                             ; preds = %2477
  %2484 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 0, i32 0, i32 0
  %2485 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2484, align 8
  %2486 = icmp eq %"class.std::__1::__tree_node_base"* %2485, null
  br i1 %2486, label %2487, label %2499

2487:                                             ; preds = %2483
  %2488 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 0, i32 0
  br label %2503

2489:                                             ; preds = %2477
  %2490 = icmp sgt i32 %2481, %1307
  br i1 %2490, label %2497, label %2491

2491:                                             ; preds = %2489
  %2492 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 0, i32 1
  %2493 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2492, align 8
  %2494 = icmp eq %"class.std::__1::__tree_node_base"* %2493, null
  br i1 %2494, label %2495, label %2499

2495:                                             ; preds = %2491
  %2496 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 0, i32 0
  br label %2503

2497:                                             ; preds = %2489
  %2498 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2478, i64 0, i32 0, i32 0
  br label %2503

2499:                                             ; preds = %2491, %2483
  %2500 = phi %"class.std::__1::__tree_node_base"* [ %2485, %2483 ], [ %2493, %2491 ]
  %2501 = phi %"class.std::__1::__tree_node_base"** [ %2484, %2483 ], [ %2492, %2491 ]
  %2502 = bitcast %"class.std::__1::__tree_node_base"* %2500 to %"class.std::__1::__tree_node"*
  br label %2477

2503:                                             ; preds = %2497, %2495, %2487, %2471
  %2504 = phi %"class.std::__1::__tree_end_node"* [ %2488, %2487 ], [ %2496, %2495 ], [ %2498, %2497 ], [ %72, %2471 ]
  %2505 = phi %"class.std::__1::__tree_node_base"** [ %2484, %2487 ], [ %2492, %2495 ], [ %2479, %2497 ], [ %1295, %2471 ]
  %2506 = bitcast %"class.std::__1::__tree_node_base"** %2505 to %"class.std::__1::__tree_node"**
  %2507 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2506, align 8
  %2508 = icmp eq %"class.std::__1::__tree_node"* %2507, null
  br i1 %2508, label %2509, label %2541

2509:                                             ; preds = %2503
  %2510 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1296, align 8, !noalias !98
  %2511 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2510, i64 0, i32 2
  %2512 = load i64, i64* %2511, align 8, !noalias !98
  %2513 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2510, i64 0, i32 3
  %2514 = load i64, i64* %2513, align 8, !noalias !98
  %2515 = sub i64 %2514, %2512
  %2516 = icmp ult i64 %2515, 40
  br i1 %2516, label %2517, label %2519, !prof !2

2517:                                             ; preds = %2509
  %2518 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2510, i64 40) #6, !noalias !98
  br label %2521

2519:                                             ; preds = %2509
  %2520 = add i64 %2512, 40
  store i64 %2520, i64* %2511, align 8, !noalias !98
  br label %2521

2521:                                             ; preds = %2519, %2517
  %2522 = phi i64 [ %2518, %2517 ], [ %2512, %2519 ]
  %2523 = inttoptr i64 %2522 to %"class.std::__1::__tree_node"*
  %2524 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2523, i64 0, i32 1, i32 0, i32 0
  store i32 %2430, i32* %2524, align 4, !noalias !98
  %2525 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2523, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %2525, align 4, !noalias !98
  %2526 = inttoptr i64 %2522 to %"class.std::__1::__tree_node_base"*
  %2527 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2526, i64 0, i32 2
  %2528 = inttoptr i64 %2522 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2528, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2504, %"class.std::__1::__tree_end_node"** %2527, align 8
  store %"class.std::__1::__tree_node_base"* %2526, %"class.std::__1::__tree_node_base"** %2505, align 8
  %2529 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1297, align 8
  %2530 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2529, i64 0, i32 0
  %2531 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2530, align 8
  %2532 = icmp eq %"class.std::__1::__tree_node_base"* %2531, null
  br i1 %2532, label %2536, label %2533

2533:                                             ; preds = %2521
  %2534 = ptrtoint %"class.std::__1::__tree_node_base"* %2531 to i64
  store i64 %2534, i64* %1298, align 8
  %2535 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2505, align 8
  br label %2536

2536:                                             ; preds = %2533, %2521
  %2537 = phi %"class.std::__1::__tree_node_base"* [ %2526, %2521 ], [ %2535, %2533 ]
  %2538 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1294, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2538, %"class.std::__1::__tree_node_base"* %2537) #6
  %2539 = load i64, i64* %71, align 8
  %2540 = add i64 %2539, 1
  store i64 %2540, i64* %71, align 8
  br label %2541

2541:                                             ; preds = %2536, %2503
  %2542 = phi %"class.std::__1::__tree_node"* [ %2523, %2536 ], [ %2507, %2503 ]
  %2543 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2542, i64 0, i32 1, i32 0, i32 1
  store i32 %2476, i32* %2543, align 4
  %2544 = load i32, i32* %1863, align 8
  %2545 = load i32, i32* %1865, align 4
  %2546 = sext i32 %2544 to i64
  %2547 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %2546
  %2548 = load i32, i32* %2547, align 4
  %2549 = add i32 %2545, %1307
  %2550 = add i32 %2549, %2548
  %2551 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1286, align 8
  %2552 = icmp eq %"class.std::__1::__tree_node"* %2551, null
  %2553 = bitcast %"class.std::__1::__tree_node"* %2551 to %"class.std::__1::__tree_node_base"*
  br i1 %2552, label %2571, label %2554

2554:                                             ; preds = %2541, %2554
  %2555 = phi %"class.std::__1::__tree_end_node"* [ %2565, %2554 ], [ %65, %2541 ]
  %2556 = phi %"class.std::__1::__tree_node"* [ %2566, %2554 ], [ %2551, %2541 ]
  %2557 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2556, i64 0, i32 1, i32 0, i32 0
  %2558 = load i32, i32* %2557, align 4
  %2559 = icmp slt i32 %2558, %2550
  %2560 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2556, i64 0, i32 0, i32 1
  %2561 = bitcast %"class.std::__1::__tree_node_base"** %2560 to %"class.std::__1::__tree_node"**
  %2562 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2556, i64 0, i32 0, i32 0
  %2563 = bitcast %"class.std::__1::__tree_node"* %2556 to %"class.std::__1::__tree_node"**
  %2564 = select i1 %2559, %"class.std::__1::__tree_node"** %2561, %"class.std::__1::__tree_node"** %2563
  %2565 = select i1 %2559, %"class.std::__1::__tree_end_node"* %2555, %"class.std::__1::__tree_end_node"* %2562
  %2566 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2564, align 8
  %2567 = icmp eq %"class.std::__1::__tree_node"* %2566, null
  br i1 %2567, label %2568, label %2554

2568:                                             ; preds = %2554
  %2569 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2565, i64 0, i32 0
  %2570 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2569, align 8
  br label %2571

2571:                                             ; preds = %2568, %2541
  %2572 = phi %"class.std::__1::__tree_node_base"* [ %2553, %2541 ], [ %2570, %2568 ]
  %2573 = phi %"class.std::__1::__tree_end_node"* [ %65, %2541 ], [ %2565, %2568 ]
  %2574 = icmp eq %"class.std::__1::__tree_node_base"* %2572, null
  br i1 %2574, label %2580, label %2575

2575:                                             ; preds = %2571, %2575
  %2576 = phi %"class.std::__1::__tree_node_base"* [ %2578, %2575 ], [ %2572, %2571 ]
  %2577 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2576, i64 0, i32 1
  %2578 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2577, align 8
  %2579 = icmp eq %"class.std::__1::__tree_node_base"* %2578, null
  br i1 %2579, label %2591, label %2575

2580:                                             ; preds = %2571, %2580
  %2581 = phi %"class.std::__1::__tree_end_node"* [ %2585, %2580 ], [ %2573, %2571 ]
  %2582 = bitcast %"class.std::__1::__tree_end_node"* %2581 to %"class.std::__1::__tree_node_base"*
  %2583 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2581, i64 2
  %2584 = bitcast %"class.std::__1::__tree_end_node"* %2583 to %"class.std::__1::__tree_end_node"**
  %2585 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2584, align 8
  %2586 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2585, i64 0, i32 0
  %2587 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2586, align 8
  %2588 = icmp eq %"class.std::__1::__tree_node_base"* %2587, %2582
  br i1 %2588, label %2580, label %2589

2589:                                             ; preds = %2580
  %2590 = bitcast %"class.std::__1::__tree_end_node"* %2585 to %"class.std::__1::__tree_node_base"*
  br label %2591

2591:                                             ; preds = %2575, %2589
  %2592 = phi %"class.std::__1::__tree_node_base"* [ %2590, %2589 ], [ %2576, %2575 ]
  %2593 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2592, i64 0, i32 4, i64 7
  %2594 = bitcast i8* %2593 to i32*
  %2595 = load i32, i32* %2594, align 4
  %2596 = add nsw i32 %2595, %1871
  br i1 %2552, label %2623, label %2597

2597:                                             ; preds = %2591, %2619
  %2598 = phi %"class.std::__1::__tree_node"* [ %2622, %2619 ], [ %2551, %2591 ]
  %2599 = phi %"class.std::__1::__tree_node_base"** [ %2621, %2619 ], [ %1287, %2591 ]
  %2600 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 1, i32 0, i32 0
  %2601 = load i32, i32* %2600, align 4
  %2602 = icmp slt i32 %2550, %2601
  br i1 %2602, label %2603, label %2609

2603:                                             ; preds = %2597
  %2604 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 0, i32 0, i32 0
  %2605 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2604, align 8
  %2606 = icmp eq %"class.std::__1::__tree_node_base"* %2605, null
  br i1 %2606, label %2607, label %2619

2607:                                             ; preds = %2603
  %2608 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 0, i32 0
  br label %2623

2609:                                             ; preds = %2597
  %2610 = icmp slt i32 %2601, %2550
  br i1 %2610, label %2611, label %2617

2611:                                             ; preds = %2609
  %2612 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 0, i32 1
  %2613 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2612, align 8
  %2614 = icmp eq %"class.std::__1::__tree_node_base"* %2613, null
  br i1 %2614, label %2615, label %2619

2615:                                             ; preds = %2611
  %2616 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 0, i32 0
  br label %2623

2617:                                             ; preds = %2609
  %2618 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2598, i64 0, i32 0, i32 0
  br label %2623

2619:                                             ; preds = %2611, %2603
  %2620 = phi %"class.std::__1::__tree_node_base"* [ %2605, %2603 ], [ %2613, %2611 ]
  %2621 = phi %"class.std::__1::__tree_node_base"** [ %2604, %2603 ], [ %2612, %2611 ]
  %2622 = bitcast %"class.std::__1::__tree_node_base"* %2620 to %"class.std::__1::__tree_node"*
  br label %2597

2623:                                             ; preds = %2617, %2615, %2607, %2591
  %2624 = phi %"class.std::__1::__tree_end_node"* [ %2608, %2607 ], [ %2616, %2615 ], [ %2618, %2617 ], [ %65, %2591 ]
  %2625 = phi %"class.std::__1::__tree_node_base"** [ %2604, %2607 ], [ %2612, %2615 ], [ %2599, %2617 ], [ %1288, %2591 ]
  %2626 = bitcast %"class.std::__1::__tree_node_base"** %2625 to %"class.std::__1::__tree_node"**
  %2627 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2626, align 8
  %2628 = icmp eq %"class.std::__1::__tree_node"* %2627, null
  br i1 %2628, label %2629, label %2661

2629:                                             ; preds = %2623
  %2630 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1289, align 8, !noalias !101
  %2631 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2630, i64 0, i32 2
  %2632 = load i64, i64* %2631, align 8, !noalias !101
  %2633 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2630, i64 0, i32 3
  %2634 = load i64, i64* %2633, align 8, !noalias !101
  %2635 = sub i64 %2634, %2632
  %2636 = icmp ult i64 %2635, 40
  br i1 %2636, label %2637, label %2639, !prof !2

2637:                                             ; preds = %2629
  %2638 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2630, i64 40) #6, !noalias !101
  br label %2641

2639:                                             ; preds = %2629
  %2640 = add i64 %2632, 40
  store i64 %2640, i64* %2631, align 8, !noalias !101
  br label %2641

2641:                                             ; preds = %2639, %2637
  %2642 = phi i64 [ %2638, %2637 ], [ %2632, %2639 ]
  %2643 = inttoptr i64 %2642 to %"class.std::__1::__tree_node"*
  %2644 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2643, i64 0, i32 1, i32 0, i32 0
  store i32 %2550, i32* %2644, align 4, !noalias !101
  %2645 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2643, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %2645, align 4, !noalias !101
  %2646 = inttoptr i64 %2642 to %"class.std::__1::__tree_node_base"*
  %2647 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2646, i64 0, i32 2
  %2648 = inttoptr i64 %2642 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2648, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %2624, %"class.std::__1::__tree_end_node"** %2647, align 8
  store %"class.std::__1::__tree_node_base"* %2646, %"class.std::__1::__tree_node_base"** %2625, align 8
  %2649 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1290, align 8
  %2650 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2649, i64 0, i32 0
  %2651 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2650, align 8
  %2652 = icmp eq %"class.std::__1::__tree_node_base"* %2651, null
  br i1 %2652, label %2656, label %2653

2653:                                             ; preds = %2641
  %2654 = ptrtoint %"class.std::__1::__tree_node_base"* %2651 to i64
  store i64 %2654, i64* %1291, align 8
  %2655 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2625, align 8
  br label %2656

2656:                                             ; preds = %2653, %2641
  %2657 = phi %"class.std::__1::__tree_node_base"* [ %2646, %2641 ], [ %2655, %2653 ]
  %2658 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1287, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %2658, %"class.std::__1::__tree_node_base"* %2657) #6
  %2659 = load i64, i64* %64, align 8
  %2660 = add i64 %2659, 1
  store i64 %2660, i64* %64, align 8
  br label %2661

2661:                                             ; preds = %2656, %2623
  %2662 = phi %"class.std::__1::__tree_node"* [ %2643, %2656 ], [ %2627, %2623 ]
  %2663 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2662, i64 0, i32 1, i32 0, i32 1
  store i32 %2596, i32* %2663, align 4
  br label %2664

2664:                                             ; preds = %2661, %2383
  %2665 = phi i32 [ %1970, %2383 ], [ %2429, %2661 ]
  %2666 = load i64, i64* %1302, align 8
  %2667 = inttoptr i64 %2666 to %"struct.std::__1::__list_node_base.1264"*
  %2668 = icmp eq %"struct.std::__1::__list_node_base.1264"* %1246, %2667
  br i1 %2668, label %2669, label %2692

2669:                                             ; preds = %2762, %2664
  %2670 = load i64, i64* %1249, align 8
  %2671 = icmp eq i64 %2670, 0
  br i1 %2671, label %2768, label %2672

2672:                                             ; preds = %2669
  %2673 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %1248, align 8
  %2674 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %1247, align 8
  %2675 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %2674, i64 0, i32 1
  %2676 = bitcast %"struct.std::__1::__list_node_base.1264"** %2675 to i64*
  %2677 = load i64, i64* %2676, align 8
  %2678 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %2673, i64 0, i32 0
  %2679 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %2678, align 8
  %2680 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %2679, i64 0, i32 1
  %2681 = bitcast %"struct.std::__1::__list_node_base.1264"** %2680 to i64*
  store i64 %2677, i64* %2681, align 8
  %2682 = bitcast %"struct.std::__1::__list_node_base.1264"* %2673 to i64*
  %2683 = load i64, i64* %2682, align 8
  %2684 = bitcast %"struct.std::__1::__list_node_base.1264"** %2675 to i64**
  %2685 = load i64*, i64** %2684, align 8
  store i64 %2683, i64* %2685, align 8
  store i64 0, i64* %1249, align 8
  %2686 = icmp eq %"struct.std::__1::__list_node_base.1264"* %2673, %1246
  br i1 %2686, label %2768, label %2687

2687:                                             ; preds = %2672, %2687
  %2688 = phi %"struct.std::__1::__list_node_base.1264"* [ %2690, %2687 ], [ %2673, %2672 ]
  %2689 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %2688, i64 0, i32 1
  %2690 = load %"struct.std::__1::__list_node_base.1264"*, %"struct.std::__1::__list_node_base.1264"** %2689, align 8
  %2691 = icmp eq %"struct.std::__1::__list_node_base.1264"* %2690, %1246
  br i1 %2691, label %2768, label %2687

2692:                                             ; preds = %2664, %2762
  %2693 = phi %"struct.std::__1::__list_node_base.1264"* [ %2766, %2762 ], [ %2667, %2664 ]
  %2694 = phi i64 [ %2765, %2762 ], [ %2666, %2664 ]
  %2695 = inttoptr i64 %2694 to %"struct.std::__1::__list_node.1275"*
  %2696 = getelementptr inbounds %"struct.std::__1::__list_node.1275", %"struct.std::__1::__list_node.1275"* %2695, i64 0, i32 1
  %2697 = load i32, i32* %2696, align 4
  %2698 = icmp slt i32 %2697, %2665
  br i1 %2698, label %2699, label %2762

2699:                                             ; preds = %2692
  %2700 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1257, align 8
  %2701 = icmp eq %"class.std::__1::__tree_node"* %2700, null
  %2702 = bitcast %"class.std::__1::__tree_node"* %2700 to %"class.std::__1::__tree_node_base"*
  br i1 %2701, label %2762, label %2703

2703:                                             ; preds = %2699, %2703
  %2704 = phi %"class.std::__1::__tree_end_node"* [ %2714, %2703 ], [ %44, %2699 ]
  %2705 = phi %"class.std::__1::__tree_node"* [ %2715, %2703 ], [ %2700, %2699 ]
  %2706 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2705, i64 0, i32 1, i32 0, i32 0
  %2707 = load i32, i32* %2706, align 4
  %2708 = icmp slt i32 %2707, %2697
  %2709 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2705, i64 0, i32 0, i32 1
  %2710 = bitcast %"class.std::__1::__tree_node_base"** %2709 to %"class.std::__1::__tree_node"**
  %2711 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2705, i64 0, i32 0, i32 0
  %2712 = bitcast %"class.std::__1::__tree_node"* %2705 to %"class.std::__1::__tree_node"**
  %2713 = select i1 %2708, %"class.std::__1::__tree_node"** %2710, %"class.std::__1::__tree_node"** %2712
  %2714 = select i1 %2708, %"class.std::__1::__tree_end_node"* %2704, %"class.std::__1::__tree_end_node"* %2711
  %2715 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2713, align 8
  %2716 = icmp eq %"class.std::__1::__tree_node"* %2715, null
  br i1 %2716, label %2717, label %2703

2717:                                             ; preds = %2703
  %2718 = icmp eq %"class.std::__1::__tree_end_node"* %2714, %44
  br i1 %2718, label %2762, label %2719

2719:                                             ; preds = %2717
  %2720 = bitcast %"class.std::__1::__tree_end_node"* %2714 to %"class.std::__1::__tree_node"*
  %2721 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2720, i64 0, i32 1, i32 0, i32 0
  %2722 = load i32, i32* %2721, align 4
  %2723 = icmp slt i32 %2697, %2722
  br i1 %2723, label %2762, label %2724

2724:                                             ; preds = %2719
  %2725 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2714, i64 1, i32 0
  %2726 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2725, align 8
  %2727 = icmp eq %"class.std::__1::__tree_node_base"* %2726, null
  br i1 %2727, label %2728, label %2736

2728:                                             ; preds = %2724
  %2729 = bitcast %"class.std::__1::__tree_end_node"* %2714 to %"class.std::__1::__tree_node_base"*
  %2730 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2714, i64 2
  %2731 = bitcast %"class.std::__1::__tree_end_node"* %2730 to %"class.std::__1::__tree_end_node"**
  %2732 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2731, align 8
  %2733 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2732, i64 0, i32 0
  %2734 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2733, align 8
  %2735 = icmp eq %"class.std::__1::__tree_node_base"* %2734, %2729
  br i1 %2735, label %2752, label %2743

2736:                                             ; preds = %2724, %2736
  %2737 = phi %"class.std::__1::__tree_node_base"* [ %2739, %2736 ], [ %2726, %2724 ]
  %2738 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2737, i64 0, i32 0, i32 0
  %2739 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2738, align 8
  %2740 = icmp eq %"class.std::__1::__tree_node_base"* %2739, null
  br i1 %2740, label %2741, label %2736

2741:                                             ; preds = %2736
  %2742 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2737, i64 0, i32 0
  br label %2752

2743:                                             ; preds = %2728, %2743
  %2744 = phi %"class.std::__1::__tree_end_node"** [ %2747, %2743 ], [ %2731, %2728 ]
  %2745 = bitcast %"class.std::__1::__tree_end_node"** %2744 to %"class.std::__1::__tree_node_base"**
  %2746 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2745, align 8
  %2747 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2746, i64 0, i32 2
  %2748 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2747, align 8
  %2749 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2748, i64 0, i32 0
  %2750 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2749, align 8
  %2751 = icmp eq %"class.std::__1::__tree_node_base"* %2750, %2746
  br i1 %2751, label %2752, label %2743

2752:                                             ; preds = %2743, %2741, %2728
  %2753 = phi %"class.std::__1::__tree_end_node"* [ %2742, %2741 ], [ %2732, %2728 ], [ %2748, %2743 ]
  %2754 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1304, align 8
  %2755 = icmp eq %"class.std::__1::__tree_end_node"* %2754, %2714
  br i1 %2755, label %2756, label %2758

2756:                                             ; preds = %2752
  %2757 = ptrtoint %"class.std::__1::__tree_end_node"* %2753 to i64
  store i64 %2757, i64* %1305, align 8
  br label %2758

2758:                                             ; preds = %2756, %2752
  %2759 = load i64, i64* %43, align 8
  %2760 = add i64 %2759, -1
  store i64 %2760, i64* %43, align 8
  %2761 = bitcast %"class.std::__1::__tree_end_node"* %2714 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %2702, %"class.std::__1::__tree_node_base"* %2761) #6
  br label %2762

2762:                                             ; preds = %2758, %2719, %2717, %2699, %2692
  %2763 = getelementptr inbounds %"struct.std::__1::__list_node_base.1264", %"struct.std::__1::__list_node_base.1264"* %2693, i64 0, i32 1
  %2764 = bitcast %"struct.std::__1::__list_node_base.1264"** %2763 to i64*
  %2765 = load i64, i64* %2764, align 8
  %2766 = inttoptr i64 %2765 to %"struct.std::__1::__list_node_base.1264"*
  %2767 = icmp eq %"struct.std::__1::__list_node_base.1264"* %1246, %2766
  br i1 %2767, label %2669, label %2692

2768:                                             ; preds = %2687, %2672, %2669
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1245) #6
  %2769 = load i32, i32* %1863, align 8
  %2770 = load i32, i32* %1865, align 4
  %2771 = sext i32 %2769 to i64
  %2772 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %2771
  %2773 = load i32, i32* %2772, align 4
  %2774 = add nsw i32 %2773, %2770
  %2775 = icmp sgt i32 %2774, 0
  br i1 %2775, label %2787, label %2776

2776:                                             ; preds = %2768, %1478
  %2777 = sext i32 %1307 to i64
  %2778 = getelementptr inbounds i8, i8* %3, i64 %2777
  %2779 = load i8, i8* %2778, align 1
  %2780 = zext i8 %2779 to i64
  %2781 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %2780
  %2782 = load i32, i32* %2781, align 4
  %2783 = load i8*, i8** %1254, align 8
  %2784 = sext i32 %2782 to i64
  %2785 = getelementptr inbounds i8, i8* %2778, i64 %2784
  %2786 = call i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector.1151"* nonnull %1253, i8* %2783, i8* %2778, i8* %2785) #6
  br label %2787

2787:                                             ; preds = %2776, %2768
  %2788 = phi i8 [ %1308, %2776 ], [ 1, %2768 ]
  %2789 = phi i32 [ %2782, %2776 ], [ %2774, %2768 ]
  %2790 = add nsw i32 %2789, %1307
  %2791 = icmp slt i32 %2790, %4
  br i1 %2791, label %1306, label %2792

2792:                                             ; preds = %2787
  %2793 = and i8 %2788, 1
  %2794 = icmp eq i8 %2793, 0
  br i1 %2794, label %3088, label %2795

2795:                                             ; preds = %2792
  %2796 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1286, align 8
  %2797 = icmp eq %"class.std::__1::__tree_node"* %2796, null
  br i1 %2797, label %2812, label %2798

2798:                                             ; preds = %2795, %2798
  %2799 = phi %"class.std::__1::__tree_end_node"* [ %2809, %2798 ], [ %65, %2795 ]
  %2800 = phi %"class.std::__1::__tree_node"* [ %2810, %2798 ], [ %2796, %2795 ]
  %2801 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2800, i64 0, i32 1, i32 0, i32 0
  %2802 = load i32, i32* %2801, align 4
  %2803 = icmp slt i32 %2802, 0
  %2804 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2800, i64 0, i32 0, i32 1
  %2805 = bitcast %"class.std::__1::__tree_node_base"** %2804 to %"class.std::__1::__tree_node"**
  %2806 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2800, i64 0, i32 0, i32 0
  %2807 = bitcast %"class.std::__1::__tree_node"* %2800 to %"class.std::__1::__tree_node"**
  %2808 = select i1 %2803, %"class.std::__1::__tree_node"** %2805, %"class.std::__1::__tree_node"** %2807
  %2809 = select i1 %2803, %"class.std::__1::__tree_end_node"* %2799, %"class.std::__1::__tree_end_node"* %2806
  %2810 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2808, align 8
  %2811 = icmp eq %"class.std::__1::__tree_node"* %2810, null
  br i1 %2811, label %2812, label %2798

2812:                                             ; preds = %2798, %2795
  %2813 = phi %"class.std::__1::__tree_end_node"* [ %65, %2795 ], [ %2809, %2798 ]
  %2814 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %2815 = icmp eq %"class.std::__1::__tree_end_node"* %2814, %44
  br i1 %2815, label %2823, label %2816

2816:                                             ; preds = %2812
  %2817 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2813, i64 4
  %2818 = bitcast %"class.std::__1::__tree_end_node"* %2817 to i32*
  %2819 = load i32, i32* %2818, align 4
  %2820 = bitcast %"class.std::__1::__tree_end_node"* %2813 to %"class.std::__1::__tree_node"*
  %2821 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2820, i64 0, i32 1, i32 0, i32 0
  %2822 = load i32, i32* %2821, align 4
  br label %2826

2823:                                             ; preds = %2979, %2812
  %2824 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %2825 = icmp eq %"class.std::__1::__tree_end_node"* %2824, %51
  br i1 %2825, label %3088, label %2982

2826:                                             ; preds = %2979, %2816
  %2827 = phi i32 [ 0, %2816 ], [ %2882, %2979 ]
  %2828 = phi i32 [ %2822, %2816 ], [ %2881, %2979 ]
  %2829 = phi i32 [ %2819, %2816 ], [ %2880, %2979 ]
  %2830 = phi %"class.std::__1::__tree_end_node"* [ %2813, %2816 ], [ %2879, %2979 ]
  %2831 = phi %"class.std::__1::__tree_end_node"* [ %2814, %2816 ], [ %2980, %2979 ]
  %2832 = bitcast %"class.std::__1::__tree_end_node"* %2831 to %"class.std::__1::__tree_node"*
  %2833 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2832, i64 0, i32 1, i32 0, i32 0
  %2834 = load i32, i32* %2833, align 4
  %2835 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2831, i64 4
  %2836 = bitcast %"class.std::__1::__tree_end_node"* %2835 to i32*
  %2837 = load i32, i32* %2836, align 4
  %2838 = icmp slt i32 %2834, %2828
  br i1 %2838, label %2878, label %2839

2839:                                             ; preds = %2826, %2869
  %2840 = phi i32 [ %2876, %2869 ], [ %2829, %2826 ]
  %2841 = phi %"class.std::__1::__tree_end_node"* [ %2870, %2869 ], [ %2830, %2826 ]
  %2842 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2841, i64 1, i32 0
  %2843 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2842, align 8
  %2844 = icmp eq %"class.std::__1::__tree_node_base"* %2843, null
  br i1 %2844, label %2845, label %2853

2845:                                             ; preds = %2839
  %2846 = bitcast %"class.std::__1::__tree_end_node"* %2841 to %"class.std::__1::__tree_node_base"*
  %2847 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2841, i64 2
  %2848 = bitcast %"class.std::__1::__tree_end_node"* %2847 to %"class.std::__1::__tree_end_node"**
  %2849 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2848, align 8
  %2850 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2849, i64 0, i32 0
  %2851 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2850, align 8
  %2852 = icmp eq %"class.std::__1::__tree_node_base"* %2851, %2846
  br i1 %2852, label %2869, label %2860

2853:                                             ; preds = %2839, %2853
  %2854 = phi %"class.std::__1::__tree_node_base"* [ %2856, %2853 ], [ %2843, %2839 ]
  %2855 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2854, i64 0, i32 0, i32 0
  %2856 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2855, align 8
  %2857 = icmp eq %"class.std::__1::__tree_node_base"* %2856, null
  br i1 %2857, label %2858, label %2853

2858:                                             ; preds = %2853
  %2859 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2854, i64 0, i32 0
  br label %2869

2860:                                             ; preds = %2845, %2860
  %2861 = phi %"class.std::__1::__tree_end_node"** [ %2864, %2860 ], [ %2848, %2845 ]
  %2862 = bitcast %"class.std::__1::__tree_end_node"** %2861 to %"class.std::__1::__tree_node_base"**
  %2863 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2862, align 8
  %2864 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2863, i64 0, i32 2
  %2865 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2864, align 8
  %2866 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2865, i64 0, i32 0
  %2867 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2866, align 8
  %2868 = icmp eq %"class.std::__1::__tree_node_base"* %2867, %2863
  br i1 %2868, label %2869, label %2860

2869:                                             ; preds = %2860, %2858, %2845
  %2870 = phi %"class.std::__1::__tree_end_node"* [ %2859, %2858 ], [ %2849, %2845 ], [ %2865, %2860 ]
  %2871 = bitcast %"class.std::__1::__tree_end_node"* %2870 to %"class.std::__1::__tree_node"*
  %2872 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2871, i64 0, i32 1, i32 0, i32 0
  %2873 = load i32, i32* %2872, align 4
  %2874 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2870, i64 4
  %2875 = bitcast %"class.std::__1::__tree_end_node"* %2874 to i32*
  %2876 = load i32, i32* %2875, align 4
  %2877 = icmp slt i32 %2834, %2873
  br i1 %2877, label %2878, label %2839

2878:                                             ; preds = %2869, %2826
  %2879 = phi %"class.std::__1::__tree_end_node"* [ %2830, %2826 ], [ %2870, %2869 ]
  %2880 = phi i32 [ %2829, %2826 ], [ %2876, %2869 ]
  %2881 = phi i32 [ %2828, %2826 ], [ %2873, %2869 ]
  %2882 = phi i32 [ %2827, %2826 ], [ %2840, %2869 ]
  %2883 = add nsw i32 %2882, %2834
  %2884 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  %2885 = icmp eq %"class.std::__1::__tree_node"* %2884, null
  %2886 = bitcast %"class.std::__1::__tree_node"* %2884 to %"class.std::__1::__tree_node_base"*
  br i1 %2885, label %2904, label %2887

2887:                                             ; preds = %2878, %2887
  %2888 = phi %"class.std::__1::__tree_end_node"* [ %2898, %2887 ], [ %72, %2878 ]
  %2889 = phi %"class.std::__1::__tree_node"* [ %2899, %2887 ], [ %2884, %2878 ]
  %2890 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2889, i64 0, i32 1, i32 0, i32 0
  %2891 = load i32, i32* %2890, align 4
  %2892 = icmp sgt i32 %2891, %2837
  %2893 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2889, i64 0, i32 0, i32 0
  %2894 = bitcast %"class.std::__1::__tree_node"* %2889 to %"class.std::__1::__tree_node"**
  %2895 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2889, i64 0, i32 0, i32 1
  %2896 = bitcast %"class.std::__1::__tree_node_base"** %2895 to %"class.std::__1::__tree_node"**
  %2897 = select i1 %2892, %"class.std::__1::__tree_node"** %2894, %"class.std::__1::__tree_node"** %2896
  %2898 = select i1 %2892, %"class.std::__1::__tree_end_node"* %2893, %"class.std::__1::__tree_end_node"* %2888
  %2899 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %2897, align 8
  %2900 = icmp eq %"class.std::__1::__tree_node"* %2899, null
  br i1 %2900, label %2901, label %2887

2901:                                             ; preds = %2887
  %2902 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2898, i64 0, i32 0
  %2903 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2902, align 8
  br label %2904

2904:                                             ; preds = %2901, %2878
  %2905 = phi %"class.std::__1::__tree_node_base"* [ %2886, %2878 ], [ %2903, %2901 ]
  %2906 = phi %"class.std::__1::__tree_end_node"* [ %72, %2878 ], [ %2898, %2901 ]
  %2907 = icmp eq %"class.std::__1::__tree_node_base"* %2905, null
  br i1 %2907, label %2913, label %2908

2908:                                             ; preds = %2904, %2908
  %2909 = phi %"class.std::__1::__tree_node_base"* [ %2911, %2908 ], [ %2905, %2904 ]
  %2910 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2909, i64 0, i32 1
  %2911 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2910, align 8
  %2912 = icmp eq %"class.std::__1::__tree_node_base"* %2911, null
  br i1 %2912, label %2924, label %2908

2913:                                             ; preds = %2904, %2913
  %2914 = phi %"class.std::__1::__tree_end_node"* [ %2918, %2913 ], [ %2906, %2904 ]
  %2915 = bitcast %"class.std::__1::__tree_end_node"* %2914 to %"class.std::__1::__tree_node_base"*
  %2916 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2914, i64 2
  %2917 = bitcast %"class.std::__1::__tree_end_node"* %2916 to %"class.std::__1::__tree_end_node"**
  %2918 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2917, align 8
  %2919 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2918, i64 0, i32 0
  %2920 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2919, align 8
  %2921 = icmp eq %"class.std::__1::__tree_node_base"* %2920, %2915
  br i1 %2921, label %2913, label %2922

2922:                                             ; preds = %2913
  %2923 = bitcast %"class.std::__1::__tree_end_node"* %2918 to %"class.std::__1::__tree_node_base"*
  br label %2924

2924:                                             ; preds = %2908, %2922
  %2925 = phi %"class.std::__1::__tree_node_base"* [ %2923, %2922 ], [ %2909, %2908 ]
  %2926 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2925, i64 0, i32 4, i64 7
  %2927 = bitcast i8* %2926 to i32*
  %2928 = load i32, i32* %2927, align 4
  %2929 = add nsw i32 %2928, %2837
  %2930 = icmp eq i32 %2928, 0
  br i1 %2930, label %2951, label %2931

2931:                                             ; preds = %2924
  %2932 = sext i32 %2883 to i64
  %2933 = trunc i32 %2929 to i8
  %2934 = load i8*, i8** %1277, align 8
  %2935 = getelementptr inbounds i8, i8* %2934, i64 %2932
  store i8 %2933, i8* %2935, align 1
  %2936 = add nsw i64 %2932, 1
  %2937 = lshr i32 %2929, 24
  %2938 = trunc i32 %2937 to i8
  %2939 = lshr i32 %2929, 16
  %2940 = trunc i32 %2939 to i8
  %2941 = lshr i32 %2929, 8
  %2942 = trunc i32 %2941 to i8
  %2943 = add nsw i64 %2932, 2
  %2944 = load i8*, i8** %1277, align 8
  %2945 = getelementptr inbounds i8, i8* %2944, i64 %2936
  store i8 %2942, i8* %2945, align 1
  %2946 = add nsw i64 %2932, 3
  %2947 = load i8*, i8** %1277, align 8
  %2948 = getelementptr inbounds i8, i8* %2947, i64 %2943
  store i8 %2940, i8* %2948, align 1
  %2949 = load i8*, i8** %1277, align 8
  %2950 = getelementptr inbounds i8, i8* %2949, i64 %2946
  store i8 %2938, i8* %2950, align 1
  br label %2951

2951:                                             ; preds = %2931, %2924
  %2952 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2831, i64 1, i32 0
  %2953 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2952, align 8
  %2954 = icmp eq %"class.std::__1::__tree_node_base"* %2953, null
  br i1 %2954, label %2955, label %2963

2955:                                             ; preds = %2951
  %2956 = bitcast %"class.std::__1::__tree_end_node"* %2831 to %"class.std::__1::__tree_node_base"*
  %2957 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2831, i64 2
  %2958 = bitcast %"class.std::__1::__tree_end_node"* %2957 to %"class.std::__1::__tree_end_node"**
  %2959 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2958, align 8
  %2960 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2959, i64 0, i32 0
  %2961 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2960, align 8
  %2962 = icmp eq %"class.std::__1::__tree_node_base"* %2961, %2956
  br i1 %2962, label %2979, label %2970

2963:                                             ; preds = %2951, %2963
  %2964 = phi %"class.std::__1::__tree_node_base"* [ %2966, %2963 ], [ %2953, %2951 ]
  %2965 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2964, i64 0, i32 0, i32 0
  %2966 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2965, align 8
  %2967 = icmp eq %"class.std::__1::__tree_node_base"* %2966, null
  br i1 %2967, label %2968, label %2963

2968:                                             ; preds = %2963
  %2969 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2964, i64 0, i32 0
  br label %2979

2970:                                             ; preds = %2955, %2970
  %2971 = phi %"class.std::__1::__tree_end_node"** [ %2974, %2970 ], [ %2958, %2955 ]
  %2972 = bitcast %"class.std::__1::__tree_end_node"** %2971 to %"class.std::__1::__tree_node_base"**
  %2973 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2972, align 8
  %2974 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %2973, i64 0, i32 2
  %2975 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2974, align 8
  %2976 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2975, i64 0, i32 0
  %2977 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2976, align 8
  %2978 = icmp eq %"class.std::__1::__tree_node_base"* %2977, %2973
  br i1 %2978, label %2979, label %2970

2979:                                             ; preds = %2970, %2968, %2955
  %2980 = phi %"class.std::__1::__tree_end_node"* [ %2969, %2968 ], [ %2959, %2955 ], [ %2975, %2970 ]
  %2981 = icmp eq %"class.std::__1::__tree_end_node"* %2980, %44
  br i1 %2981, label %2823, label %2826

2982:                                             ; preds = %2823, %3085
  %2983 = phi %"class.std::__1::__tree_end_node"* [ %3086, %3085 ], [ %2824, %2823 ]
  %2984 = bitcast %"class.std::__1::__tree_end_node"* %2983 to %"class.std::__1::__tree_node"*
  %2985 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2984, i64 0, i32 1, i32 0, i32 0
  %2986 = load i32, i32* %2985, align 4
  %2987 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2983, i64 4
  %2988 = bitcast %"class.std::__1::__tree_end_node"* %2987 to i32*
  %2989 = load i32, i32* %2988, align 4
  %2990 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1293, align 8
  %2991 = icmp eq %"class.std::__1::__tree_node"* %2990, null
  %2992 = bitcast %"class.std::__1::__tree_node"* %2990 to %"class.std::__1::__tree_node_base"*
  br i1 %2991, label %3010, label %2993

2993:                                             ; preds = %2982, %2993
  %2994 = phi %"class.std::__1::__tree_end_node"* [ %3004, %2993 ], [ %72, %2982 ]
  %2995 = phi %"class.std::__1::__tree_node"* [ %3005, %2993 ], [ %2990, %2982 ]
  %2996 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2995, i64 0, i32 1, i32 0, i32 0
  %2997 = load i32, i32* %2996, align 4
  %2998 = icmp sgt i32 %2997, %2989
  %2999 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2995, i64 0, i32 0, i32 0
  %3000 = bitcast %"class.std::__1::__tree_node"* %2995 to %"class.std::__1::__tree_node"**
  %3001 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2995, i64 0, i32 0, i32 1
  %3002 = bitcast %"class.std::__1::__tree_node_base"** %3001 to %"class.std::__1::__tree_node"**
  %3003 = select i1 %2998, %"class.std::__1::__tree_node"** %3000, %"class.std::__1::__tree_node"** %3002
  %3004 = select i1 %2998, %"class.std::__1::__tree_end_node"* %2999, %"class.std::__1::__tree_end_node"* %2994
  %3005 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3003, align 8
  %3006 = icmp eq %"class.std::__1::__tree_node"* %3005, null
  br i1 %3006, label %3007, label %2993

3007:                                             ; preds = %2993
  %3008 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3004, i64 0, i32 0
  %3009 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3008, align 8
  br label %3010

3010:                                             ; preds = %3007, %2982
  %3011 = phi %"class.std::__1::__tree_node_base"* [ %2992, %2982 ], [ %3009, %3007 ]
  %3012 = phi %"class.std::__1::__tree_end_node"* [ %72, %2982 ], [ %3004, %3007 ]
  %3013 = icmp eq %"class.std::__1::__tree_node_base"* %3011, null
  br i1 %3013, label %3019, label %3014

3014:                                             ; preds = %3010, %3014
  %3015 = phi %"class.std::__1::__tree_node_base"* [ %3017, %3014 ], [ %3011, %3010 ]
  %3016 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3015, i64 0, i32 1
  %3017 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3016, align 8
  %3018 = icmp eq %"class.std::__1::__tree_node_base"* %3017, null
  br i1 %3018, label %3030, label %3014

3019:                                             ; preds = %3010, %3019
  %3020 = phi %"class.std::__1::__tree_end_node"* [ %3024, %3019 ], [ %3012, %3010 ]
  %3021 = bitcast %"class.std::__1::__tree_end_node"* %3020 to %"class.std::__1::__tree_node_base"*
  %3022 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3020, i64 2
  %3023 = bitcast %"class.std::__1::__tree_end_node"* %3022 to %"class.std::__1::__tree_end_node"**
  %3024 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3023, align 8
  %3025 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3024, i64 0, i32 0
  %3026 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3025, align 8
  %3027 = icmp eq %"class.std::__1::__tree_node_base"* %3026, %3021
  br i1 %3027, label %3019, label %3028

3028:                                             ; preds = %3019
  %3029 = bitcast %"class.std::__1::__tree_end_node"* %3024 to %"class.std::__1::__tree_node_base"*
  br label %3030

3030:                                             ; preds = %3014, %3028
  %3031 = phi %"class.std::__1::__tree_node_base"* [ %3029, %3028 ], [ %3015, %3014 ]
  %3032 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3031, i64 0, i32 4, i64 7
  %3033 = bitcast i8* %3032 to i32*
  %3034 = load i32, i32* %3033, align 4
  %3035 = add nsw i32 %3034, %2989
  %3036 = icmp eq i32 %3034, 0
  br i1 %3036, label %3057, label %3037

3037:                                             ; preds = %3030
  %3038 = sext i32 %2986 to i64
  %3039 = trunc i32 %3035 to i8
  %3040 = load i8*, i8** %1277, align 8
  %3041 = getelementptr inbounds i8, i8* %3040, i64 %3038
  store i8 %3039, i8* %3041, align 1
  %3042 = add nsw i64 %3038, 1
  %3043 = lshr i32 %3035, 24
  %3044 = trunc i32 %3043 to i8
  %3045 = lshr i32 %3035, 16
  %3046 = trunc i32 %3045 to i8
  %3047 = lshr i32 %3035, 8
  %3048 = trunc i32 %3047 to i8
  %3049 = add nsw i64 %3038, 2
  %3050 = load i8*, i8** %1277, align 8
  %3051 = getelementptr inbounds i8, i8* %3050, i64 %3042
  store i8 %3048, i8* %3051, align 1
  %3052 = add nsw i64 %3038, 3
  %3053 = load i8*, i8** %1277, align 8
  %3054 = getelementptr inbounds i8, i8* %3053, i64 %3049
  store i8 %3046, i8* %3054, align 1
  %3055 = load i8*, i8** %1277, align 8
  %3056 = getelementptr inbounds i8, i8* %3055, i64 %3052
  store i8 %3044, i8* %3056, align 1
  br label %3057

3057:                                             ; preds = %3037, %3030
  %3058 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2983, i64 1, i32 0
  %3059 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3058, align 8
  %3060 = icmp eq %"class.std::__1::__tree_node_base"* %3059, null
  br i1 %3060, label %3061, label %3069

3061:                                             ; preds = %3057
  %3062 = bitcast %"class.std::__1::__tree_end_node"* %2983 to %"class.std::__1::__tree_node_base"*
  %3063 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2983, i64 2
  %3064 = bitcast %"class.std::__1::__tree_end_node"* %3063 to %"class.std::__1::__tree_end_node"**
  %3065 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3064, align 8
  %3066 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3065, i64 0, i32 0
  %3067 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3066, align 8
  %3068 = icmp eq %"class.std::__1::__tree_node_base"* %3067, %3062
  br i1 %3068, label %3085, label %3076

3069:                                             ; preds = %3057, %3069
  %3070 = phi %"class.std::__1::__tree_node_base"* [ %3072, %3069 ], [ %3059, %3057 ]
  %3071 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3070, i64 0, i32 0, i32 0
  %3072 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3071, align 8
  %3073 = icmp eq %"class.std::__1::__tree_node_base"* %3072, null
  br i1 %3073, label %3074, label %3069

3074:                                             ; preds = %3069
  %3075 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3070, i64 0, i32 0
  br label %3085

3076:                                             ; preds = %3061, %3076
  %3077 = phi %"class.std::__1::__tree_end_node"** [ %3080, %3076 ], [ %3064, %3061 ]
  %3078 = bitcast %"class.std::__1::__tree_end_node"** %3077 to %"class.std::__1::__tree_node_base"**
  %3079 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3078, align 8
  %3080 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3079, i64 0, i32 2
  %3081 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3080, align 8
  %3082 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3081, i64 0, i32 0
  %3083 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3082, align 8
  %3084 = icmp eq %"class.std::__1::__tree_node_base"* %3083, %3079
  br i1 %3084, label %3085, label %3076

3085:                                             ; preds = %3076, %3074, %3061
  %3086 = phi %"class.std::__1::__tree_end_node"* [ %3075, %3074 ], [ %3065, %3061 ], [ %3081, %3076 ]
  %3087 = icmp eq %"class.std::__1::__tree_end_node"* %3086, %51
  br i1 %3087, label %3088, label %2982

3088:                                             ; preds = %3085, %1226, %2792, %2823
  %3089 = phi i1 [ false, %2823 ], [ true, %2792 ], [ true, %1226 ], [ false, %3085 ]
  %3090 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %3091 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %3092 = bitcast i8** %3091 to i64*
  %3093 = load i64, i64* %3092, align 8
  %3094 = load i64, i64* %77, align 8
  %3095 = sub i64 %3093, %3094
  %3096 = trunc i64 %3095 to i32
  %3097 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3090, i32 %3096, i8 zeroext 0) #6
  %3098 = load i64, i64* %3097, align 8
  %3099 = add i64 %3098, 7
  %3100 = inttoptr i64 %3099 to i8*
  %3101 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %3102 = load i8*, i8** %3101, align 8
  %3103 = load i64, i64* %3092, align 8
  %3104 = ptrtoint i8* %3102 to i64
  %3105 = sub i64 %3103, %3104
  %3106 = shl i64 %3105, 32
  %3107 = ashr exact i64 %3106, 32
  switch i64 %3107, label %3134 [
    i64 1, label %3108
    i64 2, label %3110
    i64 3, label %3114
    i64 4, label %3115
    i64 5, label %3119
    i64 6, label %3120
    i64 7, label %3121
    i64 8, label %3122
    i64 9, label %3126
    i64 10, label %3127
    i64 11, label %3128
    i64 12, label %3129
    i64 13, label %3130
    i64 14, label %3131
    i64 15, label %3132
    i64 16, label %3133
  ]

3108:                                             ; preds = %3088
  %3109 = load i8, i8* %3102, align 1
  store i8 %3109, i8* %3100, align 1
  br label %3135

3110:                                             ; preds = %3088
  %3111 = bitcast i8* %3102 to i16*
  %3112 = inttoptr i64 %3099 to i16*
  %3113 = load i16, i16* %3111, align 1
  store i16 %3113, i16* %3112, align 1
  br label %3135

3114:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 3, i1 false) #6
  br label %3135

3115:                                             ; preds = %3088
  %3116 = bitcast i8* %3102 to i32*
  %3117 = inttoptr i64 %3099 to i32*
  %3118 = load i32, i32* %3116, align 1
  store i32 %3118, i32* %3117, align 1
  br label %3135

3119:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 5, i1 false) #6
  br label %3135

3120:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 6, i1 false) #6
  br label %3135

3121:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 7, i1 false) #6
  br label %3135

3122:                                             ; preds = %3088
  %3123 = bitcast i8* %3102 to i64*
  %3124 = inttoptr i64 %3099 to i64*
  %3125 = load i64, i64* %3123, align 1
  store i64 %3125, i64* %3124, align 1
  br label %3135

3126:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 9, i1 false) #6
  br label %3135

3127:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 10, i1 false) #6
  br label %3135

3128:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 11, i1 false) #6
  br label %3135

3129:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 12, i1 false) #6
  br label %3135

3130:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 13, i1 false) #6
  br label %3135

3131:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 14, i1 false) #6
  br label %3135

3132:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 15, i1 false) #6
  br label %3135

3133:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 16, i1 false) #6
  br label %3135

3134:                                             ; preds = %3088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3100, i8* align 1 %3102, i64 %3107, i1 false) #6
  br label %3135

3135:                                             ; preds = %3108, %3110, %3114, %3115, %3119, %3120, %3121, %3122, %3126, %3127, %3128, %3129, %3130, %3131, %3132, %3133, %3134
  %3136 = load i8, i8* @_ZN2v88internal39FLAG_trace_regexp_peephole_optimizationE, align 1
  %3137 = icmp eq i8 %3136, 0
  %3138 = or i1 %3089, %3137
  br i1 %3138, label %3163, label %3139

3139:                                             ; preds = %3135
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)) #6
  %3140 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3140) #6
  %3141 = load i64, i64* %2, align 8
  %3142 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3141, i64* %3142, align 8
  %3143 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %17, i64 0, i32 0
  %3144 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %3143, i32 1, i32 1, i32* null) #6
  call void @_ZN2v88internal25RegExpBytecodeDisassembleEPKhiPKc(i8* %3, i32 %4, i8* %3144) #6
  %3145 = icmp eq i8* %3144, null
  br i1 %3145, label %3147, label %3146

3146:                                             ; preds = %3139
  call void @_ZdaPv(i8* nonnull %3144) #8
  br label %3147

3147:                                             ; preds = %3139, %3146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3140) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #6
  %3148 = load i64, i64* %3097, align 8
  %3149 = add i64 %3148, 7
  %3150 = inttoptr i64 %3149 to i8*
  %3151 = load i64, i64* %3092, align 8
  %3152 = load i64, i64* %77, align 8
  %3153 = sub i64 %3151, %3152
  %3154 = trunc i64 %3153 to i32
  %3155 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3155) #6
  %3156 = load i64, i64* %2, align 8
  %3157 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3156, i64* %3157, align 8
  %3158 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %18, i64 0, i32 0
  %3159 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %3158, i32 1, i32 1, i32* null) #6
  call void @_ZN2v88internal25RegExpBytecodeDisassembleEPKhiPKc(i8* %3150, i32 %3154, i8* %3159) #6
  %3160 = icmp eq i8* %3159, null
  br i1 %3160, label %3162, label %3161

3161:                                             ; preds = %3147
  call void @_ZdaPv(i8* nonnull %3159) #8
  br label %3162

3162:                                             ; preds = %3147, %3161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3155) #6
  br label %3163

3163:                                             ; preds = %3135, %3162
  %3164 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 6, i32 0, i32 0
  %3165 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"**
  %3166 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3165, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %3164, %"class.std::__1::__tree_node"* %3166) #6
  %3167 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 5, i32 0, i32 0
  %3168 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node"**
  %3169 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3168, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %3167, %"class.std::__1::__tree_node"* %3169) #6
  %3170 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 4, i32 0, i32 0
  %3171 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %3172 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3171, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %3170, %"class.std::__1::__tree_node"* %3172) #6
  %3173 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 3, i32 0, i32 0
  %3174 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %3175 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3174, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %3173, %"class.std::__1::__tree_node"* %3175) #6
  %3176 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %16, i64 0, i32 2, i32 0, i32 0
  %3177 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node"**
  %3178 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %3177, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %3176, %"class.std::__1::__tree_node"* %3178) #6
  %3179 = load i8*, i8** %3101, align 8
  %3180 = icmp eq i8* %3179, null
  br i1 %3180, label %3183, label %3181

3181:                                             ; preds = %3163
  %3182 = ptrtoint i8* %3179 to i64
  store i64 %3182, i64* %3092, align 8
  br label %3183

3183:                                             ; preds = %3163, %3181
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %19) #6
  ret i64* %3097
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

declare void @_ZN2v88internal25RegExpBytecodeDisassembleEPKhiPKc(i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_122RegExpBytecodePeephole17AddSentinelFixupsEi(%"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %32, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %35, %32 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %10
  %23 = icmp slt i32 %14, %1
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node"*
  br label %10

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %36, %30, %28, %20
  %39 = phi %"class.std::__1::__tree_end_node"* [ %4, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %12, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %46 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %45, align 8, !noalias !104
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 2
  %48 = load i64, i64* %47, align 8, !noalias !104
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 3
  %50 = load i64, i64* %49, align 8, !noalias !104
  %51 = sub i64 %50, %48
  %52 = icmp ult i64 %51, 40
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %44
  %54 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %46, i64 40) #6, !noalias !104
  br label %57

55:                                               ; preds = %44
  %56 = add i64 %48, 40
  store i64 %56, i64* %47, align 8, !noalias !104
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %54, %53 ], [ %48, %55 ]
  %59 = inttoptr i64 %58 to %"class.std::__1::__tree_node"*
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %59, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %60, align 4, !noalias !104
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %59, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %61, align 4, !noalias !104
  %62 = inttoptr i64 %58 to %"class.std::__1::__tree_node_base"*
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %64 = inttoptr i64 %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %63, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %40, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree.1200", %"class.std::__1::__tree.1200"* %3, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %57
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::__tree.1200"* %3 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %74

74:                                               ; preds = %70, %57
  %75 = phi %"class.std::__1::__tree_node_base"* [ %62, %57 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #6
  %78 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %38, %74
  %82 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node"**
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %111, %87
  %90 = phi %"class.std::__1::__tree_node"* [ %114, %111 ], [ %85, %87 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %113, %111 ], [ %88, %87 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, %1
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %111

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

101:                                              ; preds = %89
  %102 = icmp slt i32 %93, %1
  br i1 %102, label %103, label %109

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

111:                                              ; preds = %103, %95
  %112 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %105, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %96, %95 ], [ %104, %103 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"* %112 to %"class.std::__1::__tree_node"*
  br label %89

115:                                              ; preds = %81
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  br label %117

117:                                              ; preds = %115, %109, %107, %99
  %118 = phi %"class.std::__1::__tree_end_node"* [ %83, %115 ], [ %100, %99 ], [ %108, %107 ], [ %110, %109 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %96, %99 ], [ %104, %107 ], [ %91, %109 ]
  %120 = bitcast %"class.std::__1::__tree_node_base"** %119 to %"class.std::__1::__tree_node"**
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node"* %121, null
  br i1 %122, label %123, label %160

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %125 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %124, align 8, !noalias !107
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %125, i64 0, i32 2
  %127 = load i64, i64* %126, align 8, !noalias !107
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %125, i64 0, i32 3
  %129 = load i64, i64* %128, align 8, !noalias !107
  %130 = sub i64 %129, %127
  %131 = icmp ult i64 %130, 40
  br i1 %131, label %132, label %134, !prof !2

132:                                              ; preds = %123
  %133 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %125, i64 40) #6, !noalias !107
  br label %136

134:                                              ; preds = %123
  %135 = add i64 %127, 40
  store i64 %135, i64* %126, align 8, !noalias !107
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %133, %132 ], [ %127, %134 ]
  %138 = inttoptr i64 %137 to %"class.std::__1::__tree_node"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %139, align 4, !noalias !107
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %140, align 4, !noalias !107
  %141 = inttoptr i64 %137 to %"class.std::__1::__tree_node_base"*
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 2
  %143 = inttoptr i64 %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %118, %"class.std::__1::__tree_end_node"** %142, align 8
  store %"class.std::__1::__tree_node_base"* %141, %"class.std::__1::__tree_node_base"** %119, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree.1200", %"class.std::__1::__tree.1200"* %82, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %136
  %150 = ptrtoint %"class.std::__1::__tree_node_base"* %147 to i64
  %151 = bitcast %"class.std::__1::__tree.1200"* %82 to i64*
  store i64 %150, i64* %151, align 8
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  br label %153

153:                                              ; preds = %149, %136
  %154 = phi %"class.std::__1::__tree_node_base"* [ %141, %136 ], [ %152, %149 ]
  %155 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %156, %"class.std::__1::__tree_node_base"* %154) #6
  %157 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole", %"class.v8::internal::(anonymous namespace)::RegExpBytecodePeephole"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %157, align 8
  br label %160

160:                                              ; preds = %117, %153
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeC2EiPNS0_4ZoneE(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, i32, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 1
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.1167"* %9 to i64*
  %11 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  store i64 %4, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.1171"* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.1176"* %16 to i32*
  store i32 1065353216, i32* %17, align 4
  %18 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #6
  %19 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %18, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %3
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1159"* %8, i64 %18) #6
  br label %52

23:                                               ; preds = %3
  %24 = icmp ult i64 %18, %20
  br i1 %24, label %25, label %52

25:                                               ; preds = %23
  %26 = icmp ugt i64 %20, 2
  %27 = tail call i64 @llvm.ctpop.i64(i64 %20) #6, !range !76
  %28 = icmp ult i64 %27, 2
  %29 = and i1 %26, %28
  %30 = load i64, i64* %15, align 8
  %31 = uitofp i64 %30 to float
  %32 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = fdiv float %31, %33
  %35 = tail call float @llvm.ceil.f32(float %34) #6
  %36 = fptoui float %35 to i64
  br i1 %29, label %37, label %44

37:                                               ; preds = %25
  %38 = icmp ult i64 %36, 2
  br i1 %38, label %46, label %39

39:                                               ; preds = %37
  %40 = add i64 %36, -1
  %41 = tail call i64 @llvm.ctlz.i64(i64 %40, i1 true) #6, !range !76
  %42 = sub nuw nsw i64 64, %41
  %43 = shl i64 1, %42
  br label %46

44:                                               ; preds = %25
  %45 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %36) #6
  br label %46

46:                                               ; preds = %44, %39, %37
  %47 = phi i64 [ %45, %44 ], [ %43, %39 ], [ %36, %37 ]
  %48 = icmp ult i64 %18, %47
  %49 = select i1 %48, i64 %47, i64 %18
  %50 = icmp ult i64 %49, %20
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1159"* %8, i64 %49) #6
  br label %52

52:                                               ; preds = %22, %23, %46, %51
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 6
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %57, %55
  %59 = icmp ult i64 %58, 32
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %52
  %61 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #6
  br label %64

62:                                               ; preds = %52
  %63 = add i64 %55, 32
  store i64 %63, i64* %54, align 8
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi i64 [ %61, %60 ], [ %55, %62 ]
  %66 = inttoptr i64 %65 to i8*
  %67 = inttoptr i64 %65 to %"class.v8::internal::ZoneVector.1180"*
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector.1180", %"class.v8::internal::ZoneVector.1180"* %67, i64 0, i32 0, i32 0, i32 2, i32 1
  %69 = bitcast %"struct.std::__1::__compressed_pair_elem.1185"* %68 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #6
  store i64 %4, i64* %69, align 8
  store %"class.v8::internal::ZoneVector.1180"* %67, %"class.v8::internal::ZoneVector.1180"** %53, align 8
  %70 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 7
  %71 = load i64, i64* %54, align 8
  %72 = load i64, i64* %56, align 8
  %73 = sub i64 %72, %71
  %74 = icmp ult i64 %73, 32
  br i1 %74, label %75, label %77, !prof !2

75:                                               ; preds = %64
  %76 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #6
  br label %79

77:                                               ; preds = %64
  %78 = add i64 %71, 32
  store i64 %78, i64* %54, align 8
  br label %79

79:                                               ; preds = %75, %77
  %80 = phi i64 [ %76, %75 ], [ %71, %77 ]
  %81 = inttoptr i64 %80 to %"class.v8::internal::ZoneLinkedList"*
  %82 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1189"* %82, %"struct.std::__1::__list_node_base.1189"** %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %81, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1189"* %82, %"struct.std::__1::__list_node_base.1189"** %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %81, i64 0, i32 0, i32 0, i32 1, i32 1
  %87 = bitcast %"struct.std::__1::__compressed_pair_elem.1191"* %86 to i64*
  store i64 %4, i64* %87, align 8
  store %"class.v8::internal::ZoneLinkedList"* %81, %"class.v8::internal::ZoneLinkedList"** %70, align 8
  %88 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 8
  %89 = load i64, i64* %54, align 8
  %90 = load i64, i64* %56, align 8
  %91 = sub i64 %90, %89
  %92 = icmp ult i64 %91, 32
  br i1 %92, label %93, label %95, !prof !2

93:                                               ; preds = %79
  %94 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #6
  br label %97

95:                                               ; preds = %79
  %96 = add i64 %89, 32
  store i64 %96, i64* %54, align 8
  br label %97

97:                                               ; preds = %93, %95
  %98 = phi i64 [ %94, %93 ], [ %89, %95 ]
  %99 = inttoptr i64 %98 to %"class.v8::internal::ZoneLinkedList.1193"*
  %100 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.1196"* %100, %"struct.std::__1::__list_node_base.1196"** %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %99, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.1196"* %100, %"struct.std::__1::__list_node_base.1196"** %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %99, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList.1193", %"class.v8::internal::ZoneLinkedList.1193"* %99, i64 0, i32 0, i32 0, i32 1, i32 1
  %105 = bitcast %"struct.std::__1::__compressed_pair_elem.1198"* %104 to i64*
  store i64 %4, i64* %105, align 8
  store %"class.v8::internal::ZoneLinkedList.1193"* %99, %"class.v8::internal::ZoneLinkedList.1193"** %88, align 8
  %106 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 9
  %107 = bitcast %"class.v8::internal::Zone"** %106 to i64*
  store i64 %4, i64* %107, align 8
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1159"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr %"class.std::__1::__hash_table.1159", %"class.std::__1::__hash_table.1159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #6
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1163"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1159", %"class.std::__1::__hash_table.1159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"** %20, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1159", %"class.std::__1::__hash_table.1159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !110

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1159", %"class.std::__1::__hash_table.1159"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1163"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #6, !range !76
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1163"* %43, %"struct.std::__1::__hash_node_base.1163"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.1163"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1163"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1163"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1163"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1163"* %110 to i32*
  %112 = load i32, i32* %137, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1163"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1163"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1163"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.1163"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* %87, %"struct.std::__1::__hash_node_base.1163"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1163"* %89, %"struct.std::__1::__hash_node_base.1163"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base.1163"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.1163"* %136 to i32*
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.1163"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base.1163"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.1163"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.1163"* %153 to i32*
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.1163"* %141, %"struct.std::__1::__hash_node_base.1163"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.1163"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.1163"* %162 to i32*
  %164 = load i32, i32* %154, align 4
  %165 = load i32, i32* %163, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.1163"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.1163"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.1163"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.1163"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* %139, %"struct.std::__1::__hash_node_base.1163"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base.1163"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.1159"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !111
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !111
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !111
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode10FollowedByEi(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0
  %5 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %1) #6
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %72, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #6, !range !76
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %24, null
  br i1 %25, label %72, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %28, null
  br i1 %29, label %72, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br i1 %11, label %32, label %54

32:                                               ; preds = %30, %50
  %33 = phi %"struct.std::__1::__hash_node_base.1163"* [ %52, %50 ], [ %28, %30 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1163"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %50, label %72

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %33, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.1163"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %106, label %50

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %33, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %52, null
  br i1 %53, label %72, label %32

54:                                               ; preds = %30, %68
  %55 = phi %"struct.std::__1::__hash_node_base.1163"* [ %70, %68 ], [ %28, %30 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.1163"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = and i64 %58, %31
  %62 = icmp eq i64 %61, %20
  br i1 %62, label %68, label %72

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %55, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.1163"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %1
  br i1 %67, label %106, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %55, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %70, null
  br i1 %71, label %72, label %54

72:                                               ; preds = %60, %68, %42, %50, %19, %2, %26
  %73 = getelementptr %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 9
  %74 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 3
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %78, %76
  %80 = icmp ult i64 %79, 112
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %72
  %82 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %74, i64 112) #6
  br label %85

83:                                               ; preds = %72
  %84 = add i64 %76, 112
  store i64 %84, i64* %75, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %76, %83 ]
  %87 = inttoptr i64 %86 to %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeC2EiPNS0_4ZoneE(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %87, i32 %1, %"class.v8::internal::Zone"* %74) #6
  %88 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %104, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %89 to i64
  %95 = getelementptr inbounds [59 x i32], [59 x i32]* @_ZN2v88internalL22kRegExpBytecodeLengthsE, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %96, %93
  %98 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %87, i64 0, i32 3
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = add nsw i32 %100, 1
  %102 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %87, i64 0, i32 2
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %87, i64 0, i32 4
  store %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %103, align 8
  br label %104

104:                                              ; preds = %85, %91
  %105 = call fastcc dereferenceable(8) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** @_ZNSt3__113unordered_mapIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeENS1_4base4hashIiEENS_8equal_toIiEENS2_13ZoneAllocatorINS_4pairIKiS5_EEEEEixERSD_(%"class.std::__1::unordered_map.1158"* %4, i32* nonnull dereferenceable(4) %3)
  store %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %87, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %105, align 8
  br label %106

106:                                              ; preds = %63, %45, %104
  %107 = call fastcc dereferenceable(8) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** @_ZNSt3__113unordered_mapIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeENS1_4base4hashIiEENS_8equal_toIiEENS2_13ZoneAllocatorINS_4pairIKiS5_EEEEEixERSD_(%"class.std::__1::unordered_map.1158"* %4, i32* nonnull dereferenceable(4) %3)
  %108 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %107, align 8
  ret %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %108
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(112) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* @_ZN2v88internal12_GLOBAL__N_120BytecodeSequenceNode11MapArgumentEiiii(%"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* readonly returned, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5, %9
  %10 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %12, %9 ], [ %0, %5 ]
  %11 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %10, i64 0, i32 4
  %12 = load %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"*, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %5
  %17 = phi %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* [ %0, %5 ], [ %12, %9 ]
  %18 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %2
  %21 = icmp eq i32 %4, 0
  %22 = select i1 %21, i32 %3, i32 %4
  %23 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode", %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0, i64 0, i32 6
  %24 = bitcast %"class.v8::internal::ZoneVector.1180"** %23 to %"class.std::__1::vector.1181"**
  %25 = load %"class.std::__1::vector.1181"*, %"class.std::__1::vector.1181"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %25, i64 0, i32 0, i32 1
  %27 = load %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = load %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %28, align 8
  %30 = icmp ult %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27, %29
  %31 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %29 to i64
  br i1 %30, label %32, label %39

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27, i64 0, i32 0, i32 0
  store i32 %20, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27, i64 0, i32 0, i32 1
  store i32 %3, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27, i64 0, i32 1
  store i32 %22, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27, i64 1
  %37 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %36 to i64
  %38 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %26 to i64*
  store i64 %37, i64* %38, align 8
  br label %106

39:                                               ; preds = %16
  %40 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %27 to i64
  %41 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %26 to i64*
  %42 = bitcast %"class.std::__1::vector.1181"* %25 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %40, %43
  %45 = sdiv exact i64 %44, 12
  %46 = add nsw i64 %45, 1
  %47 = icmp ugt i64 %46, 178956970
  br i1 %47, label %48, label %50

48:                                               ; preds = %39
  %49 = bitcast %"class.std::__1::vector.1181"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #7
  unreachable

50:                                               ; preds = %39
  %51 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %28 to i64*
  %52 = sub i64 %31, %43
  %53 = sdiv exact i64 %52, 12
  %54 = icmp ult i64 %53, 89478485
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = shl nsw i64 %53, 1
  %57 = icmp ult i64 %56, %46
  %58 = select i1 %57, i64 %46, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %80, label %60

60:                                               ; preds = %55, %50
  %61 = phi i64 [ %58, %55 ], [ 178956970, %50 ]
  %62 = getelementptr %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %25, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %63 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %62, align 8
  %64 = mul i64 %61, 12
  %65 = add nuw nsw i64 %64, 7
  %66 = and i64 %65, -8
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, %68
  %72 = icmp ugt i64 %66, %71
  br i1 %72, label %73, label %75, !prof !2

73:                                               ; preds = %60
  %74 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %63, i64 %66) #6
  br label %77

75:                                               ; preds = %60
  %76 = add i64 %66, %68
  store i64 %76, i64* %67, align 8
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i64 [ %74, %73 ], [ %68, %75 ]
  %79 = inttoptr i64 %78 to %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*
  br label %80

80:                                               ; preds = %77, %55
  %81 = phi i64 [ %61, %77 ], [ 0, %55 ]
  %82 = phi %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* [ %79, %77 ], [ null, %55 ]
  %83 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %82, i64 %45
  %84 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %82, i64 %81
  %85 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %83, i64 0, i32 0, i32 0
  store i32 %20, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %82, i64 %45, i32 0, i32 1
  store i32 %3, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %82, i64 %45, i32 1
  store i32 %22, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %83, i64 1
  %90 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %89 to i64
  %91 = getelementptr %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %25, i64 0, i32 0, i32 0
  %92 = load %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %91, align 8
  %93 = load %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"*, %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"** %26, align 8
  %94 = icmp eq %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %93, %92
  br i1 %94, label %103, label %95

95:                                               ; preds = %80, %95
  %96 = phi %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* [ %98, %95 ], [ %83, %80 ]
  %97 = phi %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* [ %99, %95 ], [ %93, %80 ]
  %98 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %96, i64 -1
  %99 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping", %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %97, i64 -1
  %100 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %98 to i8*
  %101 = bitcast %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 12, i1 false) #6
  %102 = icmp eq %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %99, %92
  br i1 %102, label %103, label %95

103:                                              ; preds = %95, %80
  %104 = phi %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* [ %83, %80 ], [ %98, %95 ]
  %105 = ptrtoint %"struct.v8::internal::(anonymous namespace)::BytecodeArgumentMapping"* %104 to i64
  store i64 %105, i64* %42, align 8
  store i64 %90, i64* %41, align 8
  store i64 %85, i64* %51, align 8
  br label %106

106:                                              ; preds = %32, %103
  ret %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* %0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(8) %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** @_ZNSt3__113unordered_mapIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeENS1_4base4hashIiEENS_8equal_toIiEENS2_13ZoneAllocatorINS_4pairIKiS5_EEEEEixERSD_(%"class.std::__1::unordered_map.1158"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0
  %4 = load i32, i32* %1, align 4
  %5 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %4) #6
  %6 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %69, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #6, !range !76
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %24, null
  br i1 %25, label %69, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  %28 = load i32, i32* %1, align 4
  br i1 %11, label %29, label %51

29:                                               ; preds = %26, %46
  %30 = phi %"struct.std::__1::__hash_node_base.1163"* [ %32, %46 ], [ %24, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.1163"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %7
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %7
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %20
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.1163"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %28
  br i1 %50, label %210, label %29

51:                                               ; preds = %26, %64
  %52 = phi %"struct.std::__1::__hash_node_base.1163"* [ %54, %64 ], [ %24, %26 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1163"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %5
  %61 = and i64 %59, %27
  %62 = icmp eq i64 %61, %20
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1163"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %28
  br i1 %68, label %210, label %51

69:                                               ; preds = %56, %51, %43, %29, %19, %2
  %70 = phi i64 [ %20, %19 ], [ undef, %2 ], [ %20, %29 ], [ %20, %43 ], [ %20, %51 ], [ %20, %56 ]
  %71 = getelementptr %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8, !noalias !112
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 2
  %74 = load i64, i64* %73, align 8, !noalias !112
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 3
  %76 = load i64, i64* %75, align 8, !noalias !112
  %77 = sub i64 %76, %74
  %78 = icmp ult i64 %77, 32
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %69
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %72, i64 32) #6, !noalias !112
  br label %83

81:                                               ; preds = %69
  %82 = add i64 %74, 32
  store i64 %82, i64* %73, align 8, !noalias !112
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::__hash_node"*
  %86 = load i32, i32* %1, align 4, !noalias !112
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 0
  store i32 %86, i32* %87, align 8, !noalias !112
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 2, i32 0, i32 1
  store %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"* null, %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %88, align 8, !noalias !112
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 1
  store i64 %5, i64* %89, align 8, !noalias !112
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* null, %"struct.std::__1::__hash_node_base.1163"** %90, align 8, !noalias !112
  %91 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %7 to float
  %96 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %8, %99
  br i1 %100, label %101, label %164

101:                                              ; preds = %83
  %102 = shl i64 %7, 1
  %103 = icmp ult i64 %7, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %7) #6, !range !76
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #6
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %120, label %115

115:                                              ; preds = %101
  %116 = tail call i64 @llvm.ctpop.i64(i64 %113) #6, !range !76
  %117 = icmp ugt i64 %116, 1
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %113) #6
  br label %120

120:                                              ; preds = %118, %115, %101
  %121 = phi i64 [ %119, %118 ], [ %113, %115 ], [ 2, %101 ]
  %122 = load i64, i64* %6, align 8
  %123 = icmp ugt i64 %121, %122
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1159"* %3, i64 %121) #6
  br label %153

125:                                              ; preds = %120
  %126 = icmp ult i64 %121, %122
  br i1 %126, label %127, label %153

127:                                              ; preds = %125
  %128 = icmp ugt i64 %122, 2
  %129 = tail call i64 @llvm.ctpop.i64(i64 %122) #6, !range !76
  %130 = icmp ult i64 %129, 2
  %131 = and i1 %128, %130
  %132 = load i64, i64* %91, align 8
  %133 = uitofp i64 %132 to float
  %134 = load float, float* %96, align 4
  %135 = fdiv float %133, %134
  %136 = tail call float @llvm.ceil.f32(float %135) #6
  %137 = fptoui float %136 to i64
  br i1 %131, label %138, label %145

138:                                              ; preds = %127
  %139 = icmp ult i64 %137, 2
  br i1 %139, label %147, label %140

140:                                              ; preds = %138
  %141 = add i64 %137, -1
  %142 = tail call i64 @llvm.ctlz.i64(i64 %141, i1 true) #6, !range !76
  %143 = sub nuw nsw i64 64, %142
  %144 = shl i64 1, %143
  br label %147

145:                                              ; preds = %127
  %146 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %137) #6
  br label %147

147:                                              ; preds = %145, %140, %138
  %148 = phi i64 [ %146, %145 ], [ %144, %140 ], [ %137, %138 ]
  %149 = icmp ult i64 %121, %148
  %150 = select i1 %149, i64 %148, i64 %121
  %151 = icmp ult i64 %150, %122
  br i1 %151, label %152, label %153

152:                                              ; preds = %147
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1159"* %3, i64 %150) #6
  br label %153

153:                                              ; preds = %152, %147, %125, %124
  %154 = load i64, i64* %6, align 8
  %155 = tail call i64 @llvm.ctpop.i64(i64 %154) #6, !range !76
  %156 = icmp ugt i64 %155, 1
  br i1 %156, label %160, label %157

157:                                              ; preds = %153
  %158 = add i64 %154, -1
  %159 = and i64 %158, %5
  br label %164

160:                                              ; preds = %153
  %161 = icmp ult i64 %5, %154
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = urem i64 %5, %154
  br label %164

164:                                              ; preds = %162, %160, %157, %83
  %165 = phi i64 [ %7, %83 ], [ %154, %157 ], [ %154, %160 ], [ %154, %162 ]
  %166 = phi i64 [ %70, %83 ], [ %159, %157 ], [ %5, %160 ], [ %163, %162 ]
  %167 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %167, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %168, i64 %166
  %170 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %170, null
  br i1 %171, label %172, label %200

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.std::__1::unordered_map.1158", %"class.std::__1::unordered_map.1158"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %173, i64 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.1163"* %173 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = inttoptr i64 %84 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* %178, %"struct.std::__1::__hash_node_base.1163"** %174, align 8
  %179 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %167, align 8
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %179, i64 %166
  store %"struct.std::__1::__hash_node_base.1163"* %173, %"struct.std::__1::__hash_node_base.1163"** %180, align 8
  %181 = load %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %90, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1163"* %181, null
  br i1 %182, label %206, label %183

183:                                              ; preds = %172
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %181, i64 1
  %185 = bitcast %"struct.std::__1::__hash_node_base.1163"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = tail call i64 @llvm.ctpop.i64(i64 %165) #6, !range !76
  %188 = icmp ugt i64 %187, 1
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = add i64 %165, -1
  %191 = and i64 %186, %190
  br label %196

192:                                              ; preds = %183
  %193 = icmp ult i64 %186, %165
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = urem i64 %186, %165
  br label %196

196:                                              ; preds = %194, %192, %189
  %197 = phi i64 [ %191, %189 ], [ %195, %194 ], [ %186, %192 ]
  %198 = load %"struct.std::__1::__hash_node_base.1163"**, %"struct.std::__1::__hash_node_base.1163"*** %167, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163"*, %"struct.std::__1::__hash_node_base.1163"** %198, i64 %197
  store %"struct.std::__1::__hash_node_base.1163"* %178, %"struct.std::__1::__hash_node_base.1163"** %199, align 8
  br label %206

200:                                              ; preds = %164
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %170, i64 0, i32 0
  %202 = bitcast %"struct.std::__1::__hash_node_base.1163"* %170 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = inttoptr i64 %84 to i64*
  store i64 %203, i64* %204, align 8
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1163"* %205, %"struct.std::__1::__hash_node_base.1163"** %201, align 8
  br label %206

206:                                              ; preds = %200, %196, %172
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %85, i64 0, i32 0
  %208 = load i64, i64* %91, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %91, align 8
  br label %210

210:                                              ; preds = %64, %46, %206
  %211 = phi %"struct.std::__1::__hash_node_base.1163"* [ %207, %206 ], [ %32, %46 ], [ %54, %64 ]
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1163", %"struct.std::__1::__hash_node_base.1163"* %211, i64 3
  %213 = bitcast %"struct.std::__1::__hash_node_base.1163"* %212 to %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"**
  ret %"class.v8::internal::(anonymous namespace)::BytecodeSequenceNode"** %213
}

declare i64 @_ZN2v84base10hash_valueEj(i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIS7_EEE4typeENSD_IPKhEES9_S9_(%"class.std::__1::vector.1151"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %636

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !115
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !115
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !118, !noalias !115
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !118, !noalias !115
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !115
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !115
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !118, !noalias !115
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !118, !noalias !115
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !115
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !115
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !118, !noalias !115
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !118, !noalias !115
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !115
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !115
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !118, !noalias !115
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !118, !noalias !115
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !120

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !115
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !115
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !118, !noalias !115
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !118, !noalias !115
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !121

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !122

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %636

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !123
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !123
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !126, !noalias !123
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !126, !noalias !123
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !123
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !123
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !126, !noalias !123
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !126, !noalias !123
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !123
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !123
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !126, !noalias !123
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !126, !noalias !123
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !123
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !123
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !126, !noalias !123
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !126, !noalias !123
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !128

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !123
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !123
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !126, !noalias !123
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !126, !noalias !123
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !129

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #6
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !130

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %636, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #6
  br label %636

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.1151"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp ugt i64 %272, 2147483647
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.1151"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #7
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 1073741823
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %307, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 2147483647, %279 ], [ %284, %281 ]
  %290 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %291 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %290, align 8
  %292 = add nuw nsw i64 %289, 7
  %293 = and i64 %292, -8
  %294 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %291, i64 0, i32 2
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %291, i64 0, i32 3
  %297 = load i64, i64* %296, align 8
  %298 = sub i64 %297, %295
  %299 = icmp ugt i64 %293, %298
  br i1 %299, label %300, label %302, !prof !2

300:                                              ; preds = %287
  %301 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %291, i64 %293) #6
  br label %304

302:                                              ; preds = %287
  %303 = add i64 %295, %293
  store i64 %303, i64* %294, align 8
  br label %304

304:                                              ; preds = %302, %300
  %305 = phi i64 [ %301, %300 ], [ %295, %302 ]
  %306 = inttoptr i64 %305 to i8*
  br label %307

307:                                              ; preds = %281, %304
  %308 = phi i64 [ %288, %304 ], [ %285, %281 ]
  %309 = phi i64 [ %289, %304 ], [ 0, %281 ]
  %310 = phi i8* [ %306, %304 ], [ null, %281 ]
  %311 = getelementptr inbounds i8, i8* %310, i64 %308
  %312 = getelementptr inbounds i8, i8* %310, i64 %309
  %313 = getelementptr inbounds i8, i8* %311, i64 %9
  %314 = icmp ult i64 %9, 32
  br i1 %314, label %400, label %315

315:                                              ; preds = %307
  %316 = icmp ult i8* %311, %3
  %317 = icmp ugt i8* %313, %2
  %318 = and i1 %316, %317
  br i1 %318, label %400, label %319

319:                                              ; preds = %315
  %320 = and i64 %9, -32
  %321 = getelementptr i8, i8* %311, i64 %320
  %322 = getelementptr i8, i8* %2, i64 %320
  %323 = add i64 %320, -32
  %324 = lshr exact i64 %323, 5
  %325 = add nuw nsw i64 %324, 1
  %326 = and i64 %325, 3
  %327 = icmp ult i64 %323, 96
  br i1 %327, label %379, label %328

328:                                              ; preds = %319
  %329 = sub nsw i64 %325, %326
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ 0, %328 ], [ %376, %330 ]
  %332 = phi i64 [ %329, %328 ], [ %377, %330 ]
  %333 = getelementptr i8, i8* %311, i64 %331
  %334 = getelementptr i8, i8* %2, i64 %331
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1, !alias.scope !131
  %337 = getelementptr i8, i8* %334, i64 16
  %338 = bitcast i8* %337 to <16 x i8>*
  %339 = load <16 x i8>, <16 x i8>* %338, align 1, !alias.scope !131
  %340 = bitcast i8* %333 to <16 x i8>*
  store <16 x i8> %336, <16 x i8>* %340, align 1, !alias.scope !134, !noalias !131
  %341 = getelementptr i8, i8* %333, i64 16
  %342 = bitcast i8* %341 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %342, align 1, !alias.scope !134, !noalias !131
  %343 = or i64 %331, 32
  %344 = getelementptr i8, i8* %311, i64 %343
  %345 = getelementptr i8, i8* %2, i64 %343
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1, !alias.scope !131
  %348 = getelementptr i8, i8* %345, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  %350 = load <16 x i8>, <16 x i8>* %349, align 1, !alias.scope !131
  %351 = bitcast i8* %344 to <16 x i8>*
  store <16 x i8> %347, <16 x i8>* %351, align 1, !alias.scope !134, !noalias !131
  %352 = getelementptr i8, i8* %344, i64 16
  %353 = bitcast i8* %352 to <16 x i8>*
  store <16 x i8> %350, <16 x i8>* %353, align 1, !alias.scope !134, !noalias !131
  %354 = or i64 %331, 64
  %355 = getelementptr i8, i8* %311, i64 %354
  %356 = getelementptr i8, i8* %2, i64 %354
  %357 = bitcast i8* %356 to <16 x i8>*
  %358 = load <16 x i8>, <16 x i8>* %357, align 1, !alias.scope !131
  %359 = getelementptr i8, i8* %356, i64 16
  %360 = bitcast i8* %359 to <16 x i8>*
  %361 = load <16 x i8>, <16 x i8>* %360, align 1, !alias.scope !131
  %362 = bitcast i8* %355 to <16 x i8>*
  store <16 x i8> %358, <16 x i8>* %362, align 1, !alias.scope !134, !noalias !131
  %363 = getelementptr i8, i8* %355, i64 16
  %364 = bitcast i8* %363 to <16 x i8>*
  store <16 x i8> %361, <16 x i8>* %364, align 1, !alias.scope !134, !noalias !131
  %365 = or i64 %331, 96
  %366 = getelementptr i8, i8* %311, i64 %365
  %367 = getelementptr i8, i8* %2, i64 %365
  %368 = bitcast i8* %367 to <16 x i8>*
  %369 = load <16 x i8>, <16 x i8>* %368, align 1, !alias.scope !131
  %370 = getelementptr i8, i8* %367, i64 16
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !131
  %373 = bitcast i8* %366 to <16 x i8>*
  store <16 x i8> %369, <16 x i8>* %373, align 1, !alias.scope !134, !noalias !131
  %374 = getelementptr i8, i8* %366, i64 16
  %375 = bitcast i8* %374 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %375, align 1, !alias.scope !134, !noalias !131
  %376 = add i64 %331, 128
  %377 = add i64 %332, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %330, !llvm.loop !136

379:                                              ; preds = %330, %319
  %380 = phi i64 [ 0, %319 ], [ %376, %330 ]
  %381 = icmp eq i64 %326, 0
  br i1 %381, label %398, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %395, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %396, %382 ], [ %326, %379 ]
  %385 = getelementptr i8, i8* %311, i64 %383
  %386 = getelementptr i8, i8* %2, i64 %383
  %387 = bitcast i8* %386 to <16 x i8>*
  %388 = load <16 x i8>, <16 x i8>* %387, align 1, !alias.scope !131
  %389 = getelementptr i8, i8* %386, i64 16
  %390 = bitcast i8* %389 to <16 x i8>*
  %391 = load <16 x i8>, <16 x i8>* %390, align 1, !alias.scope !131
  %392 = bitcast i8* %385 to <16 x i8>*
  store <16 x i8> %388, <16 x i8>* %392, align 1, !alias.scope !134, !noalias !131
  %393 = getelementptr i8, i8* %385, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %391, <16 x i8>* %394, align 1, !alias.scope !134, !noalias !131
  %395 = add i64 %383, 32
  %396 = add i64 %384, -1
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %382, !llvm.loop !137

398:                                              ; preds = %382, %379
  %399 = icmp eq i64 %9, %320
  br i1 %399, label %410, label %400

400:                                              ; preds = %398, %315, %307
  %401 = phi i8* [ %311, %315 ], [ %311, %307 ], [ %321, %398 ]
  %402 = phi i8* [ %2, %315 ], [ %2, %307 ], [ %322, %398 ]
  br label %403

403:                                              ; preds = %400, %403
  %404 = phi i8* [ %407, %403 ], [ %401, %400 ]
  %405 = phi i8* [ %408, %403 ], [ %402, %400 ]
  %406 = load i8, i8* %405, align 1
  store i8 %406, i8* %404, align 1
  %407 = getelementptr inbounds i8, i8* %404, i64 1
  %408 = getelementptr inbounds i8, i8* %405, i64 1
  %409 = icmp eq i8* %313, %407
  br i1 %409, label %410, label %403, !llvm.loop !138

410:                                              ; preds = %403, %398
  %411 = ptrtoint i8* %312 to i64
  %412 = load i8*, i8** %7, align 8
  %413 = icmp eq i8* %412, %1
  br i1 %413, label %523, label %414

414:                                              ; preds = %410
  %415 = ptrtoint i8* %412 to i64
  %416 = ptrtoint i8* %1 to i64
  %417 = sub i64 %416, %415
  %418 = icmp ult i64 %417, 16
  br i1 %418, label %513, label %419

419:                                              ; preds = %414
  %420 = sub i64 %308, %5
  %421 = getelementptr i8, i8* %412, i64 %420
  %422 = ptrtoint i8* %421 to i64
  %423 = getelementptr i8, i8* %310, i64 %422
  %424 = icmp ult i8* %423, %1
  %425 = icmp ult i8* %412, %311
  %426 = and i1 %424, %425
  br i1 %426, label %513, label %427

427:                                              ; preds = %419
  %428 = and i64 %417, -16
  %429 = sub i64 0, %428
  %430 = getelementptr i8, i8* %311, i64 %429
  %431 = sub i64 0, %428
  %432 = getelementptr i8, i8* %1, i64 %431
  %433 = add i64 %428, -16
  %434 = lshr exact i64 %433, 4
  %435 = add nuw nsw i64 %434, 1
  %436 = and i64 %435, 3
  %437 = icmp ult i64 %433, 48
  br i1 %437, label %490, label %438

438:                                              ; preds = %427
  %439 = sub nsw i64 %435, %436
  %440 = getelementptr i8, i8* %311, i64 -1
  %441 = getelementptr inbounds i8, i8* %440, i64 -8
  %442 = getelementptr inbounds i8, i8* %1, i64 -16
  %443 = getelementptr inbounds i8, i8* %441, i64 -7
  %444 = getelementptr i8, i8* %311, i64 -1
  %445 = getelementptr inbounds i8, i8* %444, i64 -8
  %446 = getelementptr inbounds i8, i8* %1, i64 -16
  %447 = getelementptr inbounds i8, i8* %445, i64 -7
  %448 = getelementptr i8, i8* %311, i64 -1
  %449 = getelementptr inbounds i8, i8* %448, i64 -8
  %450 = getelementptr inbounds i8, i8* %1, i64 -16
  %451 = getelementptr inbounds i8, i8* %449, i64 -7
  %452 = getelementptr i8, i8* %311, i64 -1
  %453 = getelementptr inbounds i8, i8* %452, i64 -8
  %454 = getelementptr inbounds i8, i8* %1, i64 -16
  %455 = getelementptr inbounds i8, i8* %453, i64 -7
  br label %456

456:                                              ; preds = %456, %438
  %457 = phi i64 [ 0, %438 ], [ %487, %456 ]
  %458 = phi i64 [ %439, %438 ], [ %488, %456 ]
  %459 = sub i64 0, %457
  %460 = sub i64 0, %457
  %461 = getelementptr inbounds i8, i8* %442, i64 %460
  %462 = bitcast i8* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 1, !alias.scope !139
  %464 = getelementptr inbounds i8, i8* %443, i64 %459
  %465 = bitcast i8* %464 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %465, align 1, !alias.scope !142, !noalias !139
  %466 = sub nuw nsw i64 -16, %457
  %467 = sub nuw nsw i64 -16, %457
  %468 = getelementptr inbounds i8, i8* %446, i64 %467
  %469 = bitcast i8* %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 1, !alias.scope !139
  %471 = getelementptr inbounds i8, i8* %447, i64 %466
  %472 = bitcast i8* %471 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %472, align 1, !alias.scope !142, !noalias !139
  %473 = sub nuw nsw i64 -32, %457
  %474 = sub nuw nsw i64 -32, %457
  %475 = getelementptr inbounds i8, i8* %450, i64 %474
  %476 = bitcast i8* %475 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 1, !alias.scope !139
  %478 = getelementptr inbounds i8, i8* %451, i64 %473
  %479 = bitcast i8* %478 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %479, align 1, !alias.scope !142, !noalias !139
  %480 = sub nuw nsw i64 -48, %457
  %481 = sub nuw nsw i64 -48, %457
  %482 = getelementptr inbounds i8, i8* %454, i64 %481
  %483 = bitcast i8* %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 1, !alias.scope !139
  %485 = getelementptr inbounds i8, i8* %455, i64 %480
  %486 = bitcast i8* %485 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %486, align 1, !alias.scope !142, !noalias !139
  %487 = add i64 %457, 64
  %488 = add i64 %458, -4
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %490, label %456, !llvm.loop !144

490:                                              ; preds = %456, %427
  %491 = phi i64 [ 0, %427 ], [ %487, %456 ]
  %492 = icmp eq i64 %436, 0
  br i1 %492, label %511, label %493

493:                                              ; preds = %490
  %494 = getelementptr i8, i8* %311, i64 -1
  %495 = getelementptr inbounds i8, i8* %494, i64 -8
  %496 = getelementptr inbounds i8, i8* %1, i64 -16
  %497 = getelementptr inbounds i8, i8* %495, i64 -7
  br label %498

498:                                              ; preds = %498, %493
  %499 = phi i64 [ %491, %493 ], [ %508, %498 ]
  %500 = phi i64 [ %436, %493 ], [ %509, %498 ]
  %501 = sub i64 0, %499
  %502 = sub i64 0, %499
  %503 = getelementptr inbounds i8, i8* %496, i64 %502
  %504 = bitcast i8* %503 to <2 x i64>*
  %505 = load <2 x i64>, <2 x i64>* %504, align 1, !alias.scope !139
  %506 = getelementptr inbounds i8, i8* %497, i64 %501
  %507 = bitcast i8* %506 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %507, align 1, !alias.scope !142, !noalias !139
  %508 = add i64 %499, 16
  %509 = add i64 %500, -1
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %498, !llvm.loop !145

511:                                              ; preds = %498, %490
  %512 = icmp eq i64 %417, %428
  br i1 %512, label %523, label %513

513:                                              ; preds = %511, %419, %414
  %514 = phi i8* [ %311, %419 ], [ %311, %414 ], [ %430, %511 ]
  %515 = phi i8* [ %1, %419 ], [ %1, %414 ], [ %432, %511 ]
  br label %516

516:                                              ; preds = %513, %516
  %517 = phi i8* [ %519, %516 ], [ %514, %513 ]
  %518 = phi i8* [ %520, %516 ], [ %515, %513 ]
  %519 = getelementptr inbounds i8, i8* %517, i64 -1
  %520 = getelementptr inbounds i8, i8* %518, i64 -1
  %521 = load i8, i8* %520, align 1
  store i8 %521, i8* %519, align 1
  %522 = icmp eq i8* %520, %412
  br i1 %522, label %523, label %516, !llvm.loop !146

523:                                              ; preds = %516, %511, %410
  %524 = phi i8* [ %311, %410 ], [ %430, %511 ], [ %519, %516 ]
  %525 = load i8*, i8** %15, align 8
  %526 = icmp eq i8* %525, %1
  br i1 %526, label %632, label %527

527:                                              ; preds = %523
  %528 = ptrtoint i8* %525 to i64
  %529 = sub i64 %528, %5
  %530 = icmp ult i64 %529, 32
  br i1 %530, label %622, label %531

531:                                              ; preds = %527
  %532 = add i64 %308, %8
  %533 = sub i64 %532, %5
  %534 = sub i64 %533, %6
  %535 = getelementptr i8, i8* %525, i64 %534
  %536 = ptrtoint i8* %535 to i64
  %537 = getelementptr i8, i8* %310, i64 %536
  %538 = icmp ult i8* %313, %525
  %539 = icmp ugt i8* %537, %1
  %540 = and i1 %538, %539
  br i1 %540, label %622, label %541

541:                                              ; preds = %531
  %542 = and i64 %529, -32
  %543 = getelementptr i8, i8* %313, i64 %542
  %544 = getelementptr i8, i8* %1, i64 %542
  %545 = add i64 %542, -32
  %546 = lshr exact i64 %545, 5
  %547 = add nuw nsw i64 %546, 1
  %548 = and i64 %547, 3
  %549 = icmp ult i64 %545, 96
  br i1 %549, label %601, label %550

550:                                              ; preds = %541
  %551 = sub nsw i64 %547, %548
  br label %552

552:                                              ; preds = %552, %550
  %553 = phi i64 [ 0, %550 ], [ %598, %552 ]
  %554 = phi i64 [ %551, %550 ], [ %599, %552 ]
  %555 = getelementptr i8, i8* %313, i64 %553
  %556 = getelementptr i8, i8* %1, i64 %553
  %557 = bitcast i8* %556 to <16 x i8>*
  %558 = load <16 x i8>, <16 x i8>* %557, align 1, !alias.scope !147
  %559 = getelementptr i8, i8* %556, i64 16
  %560 = bitcast i8* %559 to <16 x i8>*
  %561 = load <16 x i8>, <16 x i8>* %560, align 1, !alias.scope !147
  %562 = bitcast i8* %555 to <16 x i8>*
  store <16 x i8> %558, <16 x i8>* %562, align 1, !alias.scope !150, !noalias !147
  %563 = getelementptr i8, i8* %555, i64 16
  %564 = bitcast i8* %563 to <16 x i8>*
  store <16 x i8> %561, <16 x i8>* %564, align 1, !alias.scope !150, !noalias !147
  %565 = or i64 %553, 32
  %566 = getelementptr i8, i8* %313, i64 %565
  %567 = getelementptr i8, i8* %1, i64 %565
  %568 = bitcast i8* %567 to <16 x i8>*
  %569 = load <16 x i8>, <16 x i8>* %568, align 1, !alias.scope !147
  %570 = getelementptr i8, i8* %567, i64 16
  %571 = bitcast i8* %570 to <16 x i8>*
  %572 = load <16 x i8>, <16 x i8>* %571, align 1, !alias.scope !147
  %573 = bitcast i8* %566 to <16 x i8>*
  store <16 x i8> %569, <16 x i8>* %573, align 1, !alias.scope !150, !noalias !147
  %574 = getelementptr i8, i8* %566, i64 16
  %575 = bitcast i8* %574 to <16 x i8>*
  store <16 x i8> %572, <16 x i8>* %575, align 1, !alias.scope !150, !noalias !147
  %576 = or i64 %553, 64
  %577 = getelementptr i8, i8* %313, i64 %576
  %578 = getelementptr i8, i8* %1, i64 %576
  %579 = bitcast i8* %578 to <16 x i8>*
  %580 = load <16 x i8>, <16 x i8>* %579, align 1, !alias.scope !147
  %581 = getelementptr i8, i8* %578, i64 16
  %582 = bitcast i8* %581 to <16 x i8>*
  %583 = load <16 x i8>, <16 x i8>* %582, align 1, !alias.scope !147
  %584 = bitcast i8* %577 to <16 x i8>*
  store <16 x i8> %580, <16 x i8>* %584, align 1, !alias.scope !150, !noalias !147
  %585 = getelementptr i8, i8* %577, i64 16
  %586 = bitcast i8* %585 to <16 x i8>*
  store <16 x i8> %583, <16 x i8>* %586, align 1, !alias.scope !150, !noalias !147
  %587 = or i64 %553, 96
  %588 = getelementptr i8, i8* %313, i64 %587
  %589 = getelementptr i8, i8* %1, i64 %587
  %590 = bitcast i8* %589 to <16 x i8>*
  %591 = load <16 x i8>, <16 x i8>* %590, align 1, !alias.scope !147
  %592 = getelementptr i8, i8* %589, i64 16
  %593 = bitcast i8* %592 to <16 x i8>*
  %594 = load <16 x i8>, <16 x i8>* %593, align 1, !alias.scope !147
  %595 = bitcast i8* %588 to <16 x i8>*
  store <16 x i8> %591, <16 x i8>* %595, align 1, !alias.scope !150, !noalias !147
  %596 = getelementptr i8, i8* %588, i64 16
  %597 = bitcast i8* %596 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %597, align 1, !alias.scope !150, !noalias !147
  %598 = add i64 %553, 128
  %599 = add i64 %554, -4
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %601, label %552, !llvm.loop !152

601:                                              ; preds = %552, %541
  %602 = phi i64 [ 0, %541 ], [ %598, %552 ]
  %603 = icmp eq i64 %548, 0
  br i1 %603, label %620, label %604

604:                                              ; preds = %601, %604
  %605 = phi i64 [ %617, %604 ], [ %602, %601 ]
  %606 = phi i64 [ %618, %604 ], [ %548, %601 ]
  %607 = getelementptr i8, i8* %313, i64 %605
  %608 = getelementptr i8, i8* %1, i64 %605
  %609 = bitcast i8* %608 to <16 x i8>*
  %610 = load <16 x i8>, <16 x i8>* %609, align 1, !alias.scope !147
  %611 = getelementptr i8, i8* %608, i64 16
  %612 = bitcast i8* %611 to <16 x i8>*
  %613 = load <16 x i8>, <16 x i8>* %612, align 1, !alias.scope !147
  %614 = bitcast i8* %607 to <16 x i8>*
  store <16 x i8> %610, <16 x i8>* %614, align 1, !alias.scope !150, !noalias !147
  %615 = getelementptr i8, i8* %607, i64 16
  %616 = bitcast i8* %615 to <16 x i8>*
  store <16 x i8> %613, <16 x i8>* %616, align 1, !alias.scope !150, !noalias !147
  %617 = add i64 %605, 32
  %618 = add i64 %606, -1
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %620, label %604, !llvm.loop !153

620:                                              ; preds = %604, %601
  %621 = icmp eq i64 %529, %542
  br i1 %621, label %632, label %622

622:                                              ; preds = %620, %531, %527
  %623 = phi i8* [ %313, %531 ], [ %313, %527 ], [ %543, %620 ]
  %624 = phi i8* [ %1, %531 ], [ %1, %527 ], [ %544, %620 ]
  br label %625

625:                                              ; preds = %622, %625
  %626 = phi i8* [ %630, %625 ], [ %623, %622 ]
  %627 = phi i8* [ %629, %625 ], [ %624, %622 ]
  %628 = load i8, i8* %627, align 1
  store i8 %628, i8* %626, align 1
  %629 = getelementptr inbounds i8, i8* %627, i64 1
  %630 = getelementptr inbounds i8, i8* %626, i64 1
  %631 = icmp eq i8* %629, %525
  br i1 %631, label %632, label %625, !llvm.loop !154

632:                                              ; preds = %625, %620, %523
  %633 = phi i8* [ %313, %523 ], [ %543, %620 ], [ %630, %625 ]
  %634 = ptrtoint i8* %524 to i64
  %635 = ptrtoint i8* %633 to i64
  store i64 %634, i64* %269, align 8
  store i64 %635, i64* %20, align 8
  store i64 %411, i64* %13, align 8
  br label %636

636:                                              ; preds = %632, %136, %263, %267, %4
  %637 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %311, %632 ]
  ret i8* %637
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS7_(%"class.std::__1::vector.1151"*, i8*, i64, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 0
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %661, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = sub i64 %11, %14
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %326, label %17

17:                                               ; preds = %8
  %18 = sub i64 %14, %5
  %19 = icmp ult i64 %18, %2
  br i1 %19, label %20, label %96

20:                                               ; preds = %17
  %21 = sub i64 %2, %18
  %22 = bitcast i8** %12 to i64*
  %23 = getelementptr inbounds i8, i8* %13, i64 %21
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %91, label %25

25:                                               ; preds = %20
  %26 = icmp ult i64 %21, 32
  br i1 %26, label %27, label %29

27:                                               ; preds = %82, %29, %25
  %28 = phi i8* [ %13, %29 ], [ %13, %25 ], [ %36, %82 ]
  br label %86

29:                                               ; preds = %25
  %30 = getelementptr i8, i8* %3, i64 1
  %31 = icmp ult i8* %13, %30
  %32 = icmp ugt i8* %23, %3
  %33 = and i1 %31, %32
  br i1 %33, label %27, label %34

34:                                               ; preds = %29
  %35 = and i64 %21, -32
  %36 = getelementptr i8, i8* %13, i64 %35
  %37 = add i64 %35, -32
  %38 = lshr exact i64 %37, 5
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %37, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %34
  %43 = sub nuw nsw i64 %39, %40
  %44 = load i8, i8* %3, align 1, !alias.scope !155
  %45 = insertelement <16 x i8> undef, i8 %44, i32 0
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <16 x i32> zeroinitializer
  %47 = insertelement <16 x i8> undef, i8 %44, i32 0
  %48 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> zeroinitializer
  %49 = load i8, i8* %3, align 1, !alias.scope !155
  %50 = insertelement <16 x i8> undef, i8 %49, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = insertelement <16 x i8> undef, i8 %49, i32 0
  %53 = shufflevector <16 x i8> %52, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %54

54:                                               ; preds = %54, %42
  %55 = phi i64 [ 0, %42 ], [ %66, %54 ]
  %56 = phi i64 [ %43, %42 ], [ %67, %54 ]
  %57 = getelementptr i8, i8* %13, i64 %55
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %46, <16 x i8>* %58, align 1, !alias.scope !158, !noalias !155
  %59 = getelementptr i8, i8* %57, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %60, align 1, !alias.scope !158, !noalias !155
  %61 = or i64 %55, 32
  %62 = getelementptr i8, i8* %13, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %63, align 1, !alias.scope !158, !noalias !155
  %64 = getelementptr i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %65, align 1, !alias.scope !158, !noalias !155
  %66 = add i64 %55, 64
  %67 = add i64 %56, -2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %54, !llvm.loop !160

69:                                               ; preds = %54, %34
  %70 = phi i64 [ 0, %34 ], [ %66, %54 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr i8, i8* %13, i64 %70
  %74 = load i8, i8* %3, align 1, !alias.scope !155
  %75 = insertelement <16 x i8> undef, i8 %74, i32 0
  %76 = shufflevector <16 x i8> %75, <16 x i8> undef, <16 x i32> zeroinitializer
  %77 = insertelement <16 x i8> undef, i8 %74, i32 0
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> zeroinitializer
  %79 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !158, !noalias !155
  %80 = getelementptr i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !158, !noalias !155
  br label %82

82:                                               ; preds = %69, %72
  %83 = icmp eq i64 %21, %35
  br i1 %83, label %84, label %27

84:                                               ; preds = %86, %82
  %85 = ptrtoint i8* %23 to i64
  br label %91

86:                                               ; preds = %27, %86
  %87 = phi i8* [ %89, %86 ], [ %28, %27 ]
  %88 = load i8, i8* %3, align 1
  store i8 %88, i8* %87, align 1
  %89 = getelementptr inbounds i8, i8* %87, i64 1
  %90 = icmp eq i8* %89, %23
  br i1 %90, label %84, label %86, !llvm.loop !161

91:                                               ; preds = %84, %20
  %92 = phi i64 [ %85, %84 ], [ %14, %20 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %18, 0
  br i1 %93, label %661, label %94

94:                                               ; preds = %91
  %95 = inttoptr i64 %92 to i8*
  br label %96

96:                                               ; preds = %94, %17
  %97 = phi i64 [ %92, %94 ], [ %14, %17 ]
  %98 = phi i8* [ %95, %94 ], [ %13, %17 ]
  %99 = phi i64 [ %18, %94 ], [ %2, %17 ]
  %100 = getelementptr inbounds i8, i8* %1, i64 %2
  %101 = ptrtoint i8* %100 to i64
  %102 = sub i64 %97, %101
  %103 = getelementptr inbounds i8, i8* %1, i64 %102
  %104 = icmp ult i8* %103, %13
  br i1 %104, label %105, label %205

105:                                              ; preds = %96
  %106 = sub i64 %2, %97
  %107 = getelementptr i8, i8* %13, i64 %106
  %108 = ptrtoint i8* %107 to i64
  %109 = icmp ult i8* %107, inttoptr (i64 32 to i8*)
  br i1 %109, label %110, label %113

110:                                              ; preds = %200, %113, %105
  %111 = phi i8* [ %103, %113 ], [ %103, %105 ], [ %123, %200 ]
  %112 = phi i8* [ %98, %113 ], [ %98, %105 ], [ %124, %200 ]
  br label %212

113:                                              ; preds = %105
  %114 = sub i64 %2, %97
  %115 = getelementptr i8, i8* %13, i64 %114
  %116 = ptrtoint i8* %115 to i64
  %117 = getelementptr i8, i8* %98, i64 %116
  %118 = icmp ult i8* %98, %13
  %119 = icmp ult i8* %103, %117
  %120 = and i1 %118, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %113
  %122 = and i64 %108, -32
  %123 = getelementptr i8, i8* %103, i64 %122
  %124 = getelementptr i8, i8* %98, i64 %122
  %125 = add i64 %122, -32
  %126 = lshr exact i64 %125, 5
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp ult i64 %125, 96
  br i1 %129, label %181, label %130

130:                                              ; preds = %121
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %179, %132 ]
  %135 = getelementptr i8, i8* %103, i64 %133
  %136 = getelementptr i8, i8* %98, i64 %133
  %137 = bitcast i8* %135 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !162
  %139 = getelementptr i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !162
  %142 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %142, align 1, !alias.scope !165, !noalias !162
  %143 = getelementptr i8, i8* %136, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %144, align 1, !alias.scope !165, !noalias !162
  %145 = or i64 %133, 32
  %146 = getelementptr i8, i8* %103, i64 %145
  %147 = getelementptr i8, i8* %98, i64 %145
  %148 = bitcast i8* %146 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !162
  %150 = getelementptr i8, i8* %146, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !162
  %153 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !165, !noalias !162
  %154 = getelementptr i8, i8* %147, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !165, !noalias !162
  %156 = or i64 %133, 64
  %157 = getelementptr i8, i8* %103, i64 %156
  %158 = getelementptr i8, i8* %98, i64 %156
  %159 = bitcast i8* %157 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !162
  %161 = getelementptr i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !162
  %164 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %164, align 1, !alias.scope !165, !noalias !162
  %165 = getelementptr i8, i8* %158, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %166, align 1, !alias.scope !165, !noalias !162
  %167 = or i64 %133, 96
  %168 = getelementptr i8, i8* %103, i64 %167
  %169 = getelementptr i8, i8* %98, i64 %167
  %170 = bitcast i8* %168 to <16 x i8>*
  %171 = load <16 x i8>, <16 x i8>* %170, align 1, !alias.scope !162
  %172 = getelementptr i8, i8* %168, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !162
  %175 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %171, <16 x i8>* %175, align 1, !alias.scope !165, !noalias !162
  %176 = getelementptr i8, i8* %169, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %177, align 1, !alias.scope !165, !noalias !162
  %178 = add i64 %133, 128
  %179 = add i64 %134, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %132, !llvm.loop !167

181:                                              ; preds = %132, %121
  %182 = phi i64 [ 0, %121 ], [ %178, %132 ]
  %183 = icmp eq i64 %128, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %197, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %198, %184 ], [ %128, %181 ]
  %187 = getelementptr i8, i8* %103, i64 %185
  %188 = getelementptr i8, i8* %98, i64 %185
  %189 = bitcast i8* %187 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !162
  %191 = getelementptr i8, i8* %187, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !162
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %194, align 1, !alias.scope !165, !noalias !162
  %195 = getelementptr i8, i8* %188, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %196, align 1, !alias.scope !165, !noalias !162
  %197 = add i64 %185, 32
  %198 = add i64 %186, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !168

200:                                              ; preds = %184, %181
  %201 = icmp eq i64 %122, %108
  br i1 %201, label %202, label %110

202:                                              ; preds = %212, %200
  %203 = phi i8* [ %124, %200 ], [ %217, %212 ]
  %204 = ptrtoint i8* %203 to i64
  br label %205

205:                                              ; preds = %202, %96
  %206 = phi i64 [ %204, %202 ], [ %97, %96 ]
  %207 = bitcast i8** %12 to i64*
  store i64 %206, i64* %207, align 8
  %208 = icmp eq i64 %102, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = sub i64 0, %102
  %211 = getelementptr inbounds i8, i8* %98, i64 %210
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %1, i64 %102, i1 false) #6
  br label %219

212:                                              ; preds = %110, %212
  %213 = phi i8* [ %216, %212 ], [ %111, %110 ]
  %214 = phi i8* [ %217, %212 ], [ %112, %110 ]
  %215 = load i8, i8* %213, align 1
  store i8 %215, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %213, i64 1
  %217 = getelementptr inbounds i8, i8* %214, i64 1
  %218 = icmp eq i8* %216, %13
  br i1 %218, label %202, label %212, !llvm.loop !169

219:                                              ; preds = %205, %209
  %220 = icmp ugt i8* %1, %3
  br i1 %220, label %226, label %221

221:                                              ; preds = %219
  %222 = load i8*, i8** %12, align 8
  %223 = icmp ugt i8* %222, %3
  %224 = getelementptr inbounds i8, i8* %3, i64 %2
  %225 = select i1 %223, i8* %224, i8* %3
  br label %226

226:                                              ; preds = %221, %219
  %227 = phi i8* [ %3, %219 ], [ %225, %221 ]
  %228 = icmp ult i64 %99, 32
  br i1 %228, label %286, label %229

229:                                              ; preds = %226
  %230 = getelementptr i8, i8* %1, i64 %99
  %231 = getelementptr i8, i8* %227, i64 1
  %232 = icmp ugt i8* %231, %1
  %233 = icmp ult i8* %227, %230
  %234 = and i1 %232, %233
  br i1 %234, label %286, label %235

235:                                              ; preds = %229
  %236 = and i64 %99, -32
  %237 = getelementptr i8, i8* %1, i64 %236
  %238 = sub i64 %99, %236
  %239 = add i64 %236, -32
  %240 = lshr exact i64 %239, 5
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 1
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %271, label %244

244:                                              ; preds = %235
  %245 = sub nuw nsw i64 %241, %242
  %246 = load i8, i8* %227, align 1, !alias.scope !170
  %247 = insertelement <16 x i8> undef, i8 %246, i32 0
  %248 = shufflevector <16 x i8> %247, <16 x i8> undef, <16 x i32> zeroinitializer
  %249 = insertelement <16 x i8> undef, i8 %246, i32 0
  %250 = shufflevector <16 x i8> %249, <16 x i8> undef, <16 x i32> zeroinitializer
  %251 = load i8, i8* %227, align 1, !alias.scope !170
  %252 = insertelement <16 x i8> undef, i8 %251, i32 0
  %253 = shufflevector <16 x i8> %252, <16 x i8> undef, <16 x i32> zeroinitializer
  %254 = insertelement <16 x i8> undef, i8 %251, i32 0
  %255 = shufflevector <16 x i8> %254, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %256

256:                                              ; preds = %256, %244
  %257 = phi i64 [ 0, %244 ], [ %268, %256 ]
  %258 = phi i64 [ %245, %244 ], [ %269, %256 ]
  %259 = getelementptr i8, i8* %1, i64 %257
  %260 = bitcast i8* %259 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %260, align 1, !alias.scope !173, !noalias !170
  %261 = getelementptr i8, i8* %259, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %262, align 1, !alias.scope !173, !noalias !170
  %263 = or i64 %257, 32
  %264 = getelementptr i8, i8* %1, i64 %263
  %265 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %265, align 1, !alias.scope !173, !noalias !170
  %266 = getelementptr i8, i8* %264, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %267, align 1, !alias.scope !173, !noalias !170
  %268 = add i64 %257, 64
  %269 = add i64 %258, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %256, !llvm.loop !175

271:                                              ; preds = %256, %235
  %272 = phi i64 [ 0, %235 ], [ %268, %256 ]
  %273 = icmp eq i64 %242, 0
  br i1 %273, label %284, label %274

274:                                              ; preds = %271
  %275 = getelementptr i8, i8* %1, i64 %272
  %276 = load i8, i8* %227, align 1, !alias.scope !170
  %277 = insertelement <16 x i8> undef, i8 %276, i32 0
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <16 x i32> zeroinitializer
  %279 = insertelement <16 x i8> undef, i8 %276, i32 0
  %280 = shufflevector <16 x i8> %279, <16 x i8> undef, <16 x i32> zeroinitializer
  %281 = bitcast i8* %275 to <16 x i8>*
  store <16 x i8> %278, <16 x i8>* %281, align 1, !alias.scope !173, !noalias !170
  %282 = getelementptr i8, i8* %275, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1, !alias.scope !173, !noalias !170
  br label %284

284:                                              ; preds = %271, %274
  %285 = icmp eq i64 %99, %236
  br i1 %285, label %661, label %286

286:                                              ; preds = %284, %229, %226
  %287 = phi i8* [ %1, %229 ], [ %1, %226 ], [ %237, %284 ]
  %288 = phi i64 [ %99, %229 ], [ %99, %226 ], [ %238, %284 ]
  %289 = add i64 %288, -1
  %290 = and i64 %288, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %301, label %292

292:                                              ; preds = %286, %292
  %293 = phi i8* [ %297, %292 ], [ %287, %286 ]
  %294 = phi i64 [ %298, %292 ], [ %288, %286 ]
  %295 = phi i64 [ %299, %292 ], [ %290, %286 ]
  %296 = load i8, i8* %227, align 1
  store i8 %296, i8* %293, align 1
  %297 = getelementptr inbounds i8, i8* %293, i64 1
  %298 = add i64 %294, -1
  %299 = add i64 %295, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %292, !llvm.loop !176

301:                                              ; preds = %292, %286
  %302 = phi i8* [ %287, %286 ], [ %297, %292 ]
  %303 = phi i64 [ %288, %286 ], [ %298, %292 ]
  %304 = icmp ult i64 %289, 7
  br i1 %304, label %661, label %305

305:                                              ; preds = %301, %305
  %306 = phi i8* [ %323, %305 ], [ %302, %301 ]
  %307 = phi i64 [ %324, %305 ], [ %303, %301 ]
  %308 = load i8, i8* %227, align 1
  store i8 %308, i8* %306, align 1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = load i8, i8* %227, align 1
  store i8 %310, i8* %309, align 1
  %311 = getelementptr inbounds i8, i8* %306, i64 2
  %312 = load i8, i8* %227, align 1
  store i8 %312, i8* %311, align 1
  %313 = getelementptr inbounds i8, i8* %306, i64 3
  %314 = load i8, i8* %227, align 1
  store i8 %314, i8* %313, align 1
  %315 = getelementptr inbounds i8, i8* %306, i64 4
  %316 = load i8, i8* %227, align 1
  store i8 %316, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %306, i64 5
  %318 = load i8, i8* %227, align 1
  store i8 %318, i8* %317, align 1
  %319 = getelementptr inbounds i8, i8* %306, i64 6
  %320 = load i8, i8* %227, align 1
  store i8 %320, i8* %319, align 1
  %321 = getelementptr inbounds i8, i8* %306, i64 7
  %322 = load i8, i8* %227, align 1
  store i8 %322, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %306, i64 8
  %324 = add i64 %307, -8
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %661, label %305, !llvm.loop !177

326:                                              ; preds = %8
  %327 = bitcast i8** %12 to i64*
  %328 = bitcast %"class.std::__1::vector.1151"* %0 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %14, %329
  %331 = add i64 %330, %2
  %332 = icmp ugt i64 %331, 2147483647
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.std::__1::vector.1151"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #7
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %11, %329
  %337 = icmp ult i64 %336, 1073741823
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = sub i64 %5, %329
  br label %346

340:                                              ; preds = %335
  %341 = shl i64 %336, 1
  %342 = icmp ult i64 %341, %331
  %343 = select i1 %342, i64 %331, i64 %341
  %344 = sub i64 %5, %329
  %345 = icmp eq i64 %343, 0
  br i1 %345, label %366, label %346

346:                                              ; preds = %338, %340
  %347 = phi i64 [ %339, %338 ], [ %344, %340 ]
  %348 = phi i64 [ 2147483647, %338 ], [ %343, %340 ]
  %349 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %350 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %349, align 8
  %351 = add nuw nsw i64 %348, 7
  %352 = and i64 %351, -8
  %353 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %350, i64 0, i32 2
  %354 = load i64, i64* %353, align 8
  %355 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %350, i64 0, i32 3
  %356 = load i64, i64* %355, align 8
  %357 = sub i64 %356, %354
  %358 = icmp ugt i64 %352, %357
  br i1 %358, label %359, label %361, !prof !2

359:                                              ; preds = %346
  %360 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %350, i64 %352) #6
  br label %363

361:                                              ; preds = %346
  %362 = add i64 %354, %352
  store i64 %362, i64* %353, align 8
  br label %363

363:                                              ; preds = %361, %359
  %364 = phi i64 [ %360, %359 ], [ %354, %361 ]
  %365 = inttoptr i64 %364 to i8*
  br label %366

366:                                              ; preds = %340, %363
  %367 = phi i64 [ %347, %363 ], [ %344, %340 ]
  %368 = phi i64 [ %348, %363 ], [ 0, %340 ]
  %369 = phi i8* [ %365, %363 ], [ null, %340 ]
  %370 = getelementptr inbounds i8, i8* %369, i64 %367
  %371 = getelementptr inbounds i8, i8* %369, i64 %368
  %372 = getelementptr inbounds i8, i8* %370, i64 %2
  %373 = icmp ult i64 %2, 32
  br i1 %373, label %429, label %374

374:                                              ; preds = %366
  %375 = getelementptr i8, i8* %3, i64 1
  %376 = icmp ult i8* %370, %375
  %377 = icmp ugt i8* %372, %3
  %378 = and i1 %376, %377
  br i1 %378, label %429, label %379

379:                                              ; preds = %374
  %380 = and i64 %2, -32
  %381 = getelementptr i8, i8* %370, i64 %380
  %382 = add i64 %380, -32
  %383 = lshr exact i64 %382, 5
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 1
  %386 = icmp eq i64 %382, 0
  br i1 %386, label %414, label %387

387:                                              ; preds = %379
  %388 = sub nuw nsw i64 %384, %385
  %389 = load i8, i8* %3, align 1, !alias.scope !178
  %390 = insertelement <16 x i8> undef, i8 %389, i32 0
  %391 = shufflevector <16 x i8> %390, <16 x i8> undef, <16 x i32> zeroinitializer
  %392 = insertelement <16 x i8> undef, i8 %389, i32 0
  %393 = shufflevector <16 x i8> %392, <16 x i8> undef, <16 x i32> zeroinitializer
  %394 = load i8, i8* %3, align 1, !alias.scope !178
  %395 = insertelement <16 x i8> undef, i8 %394, i32 0
  %396 = shufflevector <16 x i8> %395, <16 x i8> undef, <16 x i32> zeroinitializer
  %397 = insertelement <16 x i8> undef, i8 %394, i32 0
  %398 = shufflevector <16 x i8> %397, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %399

399:                                              ; preds = %399, %387
  %400 = phi i64 [ 0, %387 ], [ %411, %399 ]
  %401 = phi i64 [ %388, %387 ], [ %412, %399 ]
  %402 = getelementptr i8, i8* %370, i64 %400
  %403 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %391, <16 x i8>* %403, align 1, !alias.scope !181, !noalias !178
  %404 = getelementptr i8, i8* %402, i64 16
  %405 = bitcast i8* %404 to <16 x i8>*
  store <16 x i8> %393, <16 x i8>* %405, align 1, !alias.scope !181, !noalias !178
  %406 = or i64 %400, 32
  %407 = getelementptr i8, i8* %370, i64 %406
  %408 = bitcast i8* %407 to <16 x i8>*
  store <16 x i8> %396, <16 x i8>* %408, align 1, !alias.scope !181, !noalias !178
  %409 = getelementptr i8, i8* %407, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %398, <16 x i8>* %410, align 1, !alias.scope !181, !noalias !178
  %411 = add i64 %400, 64
  %412 = add i64 %401, -2
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %399, !llvm.loop !183

414:                                              ; preds = %399, %379
  %415 = phi i64 [ 0, %379 ], [ %411, %399 ]
  %416 = icmp eq i64 %385, 0
  br i1 %416, label %427, label %417

417:                                              ; preds = %414
  %418 = getelementptr i8, i8* %370, i64 %415
  %419 = load i8, i8* %3, align 1, !alias.scope !178
  %420 = insertelement <16 x i8> undef, i8 %419, i32 0
  %421 = shufflevector <16 x i8> %420, <16 x i8> undef, <16 x i32> zeroinitializer
  %422 = insertelement <16 x i8> undef, i8 %419, i32 0
  %423 = shufflevector <16 x i8> %422, <16 x i8> undef, <16 x i32> zeroinitializer
  %424 = bitcast i8* %418 to <16 x i8>*
  store <16 x i8> %421, <16 x i8>* %424, align 1, !alias.scope !181, !noalias !178
  %425 = getelementptr i8, i8* %418, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !181, !noalias !178
  br label %427

427:                                              ; preds = %414, %417
  %428 = icmp eq i64 %380, %2
  br i1 %428, label %436, label %429

429:                                              ; preds = %427, %374, %366
  %430 = phi i8* [ %370, %374 ], [ %370, %366 ], [ %381, %427 ]
  br label %431

431:                                              ; preds = %429, %431
  %432 = phi i8* [ %434, %431 ], [ %430, %429 ]
  %433 = load i8, i8* %3, align 1
  store i8 %433, i8* %432, align 1
  %434 = getelementptr inbounds i8, i8* %432, i64 1
  %435 = icmp eq i8* %372, %434
  br i1 %435, label %436, label %431, !llvm.loop !184

436:                                              ; preds = %431, %427
  %437 = ptrtoint i8* %371 to i64
  %438 = load i8*, i8** %6, align 8
  %439 = icmp eq i8* %438, %1
  br i1 %439, label %549, label %440

440:                                              ; preds = %436
  %441 = ptrtoint i8* %438 to i64
  %442 = ptrtoint i8* %1 to i64
  %443 = sub i64 %442, %441
  %444 = icmp ult i64 %443, 16
  br i1 %444, label %539, label %445

445:                                              ; preds = %440
  %446 = sub i64 %367, %5
  %447 = getelementptr i8, i8* %438, i64 %446
  %448 = ptrtoint i8* %447 to i64
  %449 = getelementptr i8, i8* %369, i64 %448
  %450 = icmp ult i8* %449, %1
  %451 = icmp ult i8* %438, %370
  %452 = and i1 %450, %451
  br i1 %452, label %539, label %453

453:                                              ; preds = %445
  %454 = and i64 %443, -16
  %455 = sub i64 0, %454
  %456 = getelementptr i8, i8* %370, i64 %455
  %457 = sub i64 0, %454
  %458 = getelementptr i8, i8* %1, i64 %457
  %459 = add i64 %454, -16
  %460 = lshr exact i64 %459, 4
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 3
  %463 = icmp ult i64 %459, 48
  br i1 %463, label %516, label %464

464:                                              ; preds = %453
  %465 = sub nsw i64 %461, %462
  %466 = getelementptr i8, i8* %370, i64 -1
  %467 = getelementptr inbounds i8, i8* %466, i64 -8
  %468 = getelementptr inbounds i8, i8* %1, i64 -16
  %469 = getelementptr inbounds i8, i8* %467, i64 -7
  %470 = getelementptr i8, i8* %370, i64 -1
  %471 = getelementptr inbounds i8, i8* %470, i64 -8
  %472 = getelementptr inbounds i8, i8* %1, i64 -16
  %473 = getelementptr inbounds i8, i8* %471, i64 -7
  %474 = getelementptr i8, i8* %370, i64 -1
  %475 = getelementptr inbounds i8, i8* %474, i64 -8
  %476 = getelementptr inbounds i8, i8* %1, i64 -16
  %477 = getelementptr inbounds i8, i8* %475, i64 -7
  %478 = getelementptr i8, i8* %370, i64 -1
  %479 = getelementptr inbounds i8, i8* %478, i64 -8
  %480 = getelementptr inbounds i8, i8* %1, i64 -16
  %481 = getelementptr inbounds i8, i8* %479, i64 -7
  br label %482

482:                                              ; preds = %482, %464
  %483 = phi i64 [ 0, %464 ], [ %513, %482 ]
  %484 = phi i64 [ %465, %464 ], [ %514, %482 ]
  %485 = sub i64 0, %483
  %486 = sub i64 0, %483
  %487 = getelementptr inbounds i8, i8* %468, i64 %486
  %488 = bitcast i8* %487 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 1, !alias.scope !185
  %490 = getelementptr inbounds i8, i8* %469, i64 %485
  %491 = bitcast i8* %490 to <2 x i64>*
  store <2 x i64> %489, <2 x i64>* %491, align 1, !alias.scope !188, !noalias !185
  %492 = sub nuw nsw i64 -16, %483
  %493 = sub nuw nsw i64 -16, %483
  %494 = getelementptr inbounds i8, i8* %472, i64 %493
  %495 = bitcast i8* %494 to <2 x i64>*
  %496 = load <2 x i64>, <2 x i64>* %495, align 1, !alias.scope !185
  %497 = getelementptr inbounds i8, i8* %473, i64 %492
  %498 = bitcast i8* %497 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %498, align 1, !alias.scope !188, !noalias !185
  %499 = sub nuw nsw i64 -32, %483
  %500 = sub nuw nsw i64 -32, %483
  %501 = getelementptr inbounds i8, i8* %476, i64 %500
  %502 = bitcast i8* %501 to <2 x i64>*
  %503 = load <2 x i64>, <2 x i64>* %502, align 1, !alias.scope !185
  %504 = getelementptr inbounds i8, i8* %477, i64 %499
  %505 = bitcast i8* %504 to <2 x i64>*
  store <2 x i64> %503, <2 x i64>* %505, align 1, !alias.scope !188, !noalias !185
  %506 = sub nuw nsw i64 -48, %483
  %507 = sub nuw nsw i64 -48, %483
  %508 = getelementptr inbounds i8, i8* %480, i64 %507
  %509 = bitcast i8* %508 to <2 x i64>*
  %510 = load <2 x i64>, <2 x i64>* %509, align 1, !alias.scope !185
  %511 = getelementptr inbounds i8, i8* %481, i64 %506
  %512 = bitcast i8* %511 to <2 x i64>*
  store <2 x i64> %510, <2 x i64>* %512, align 1, !alias.scope !188, !noalias !185
  %513 = add i64 %483, 64
  %514 = add i64 %484, -4
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %516, label %482, !llvm.loop !190

516:                                              ; preds = %482, %453
  %517 = phi i64 [ 0, %453 ], [ %513, %482 ]
  %518 = icmp eq i64 %462, 0
  br i1 %518, label %537, label %519

519:                                              ; preds = %516
  %520 = getelementptr i8, i8* %370, i64 -1
  %521 = getelementptr inbounds i8, i8* %520, i64 -8
  %522 = getelementptr inbounds i8, i8* %1, i64 -16
  %523 = getelementptr inbounds i8, i8* %521, i64 -7
  br label %524

524:                                              ; preds = %524, %519
  %525 = phi i64 [ %517, %519 ], [ %534, %524 ]
  %526 = phi i64 [ %462, %519 ], [ %535, %524 ]
  %527 = sub i64 0, %525
  %528 = sub i64 0, %525
  %529 = getelementptr inbounds i8, i8* %522, i64 %528
  %530 = bitcast i8* %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 1, !alias.scope !185
  %532 = getelementptr inbounds i8, i8* %523, i64 %527
  %533 = bitcast i8* %532 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %533, align 1, !alias.scope !188, !noalias !185
  %534 = add i64 %525, 16
  %535 = add i64 %526, -1
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %537, label %524, !llvm.loop !191

537:                                              ; preds = %524, %516
  %538 = icmp eq i64 %443, %454
  br i1 %538, label %549, label %539

539:                                              ; preds = %537, %445, %440
  %540 = phi i8* [ %370, %445 ], [ %370, %440 ], [ %456, %537 ]
  %541 = phi i8* [ %1, %445 ], [ %1, %440 ], [ %458, %537 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i8* [ %545, %542 ], [ %540, %539 ]
  %544 = phi i8* [ %546, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i8, i8* %543, i64 -1
  %546 = getelementptr inbounds i8, i8* %544, i64 -1
  %547 = load i8, i8* %546, align 1
  store i8 %547, i8* %545, align 1
  %548 = icmp eq i8* %546, %438
  br i1 %548, label %549, label %542, !llvm.loop !192

549:                                              ; preds = %542, %537, %436
  %550 = phi i8* [ %370, %436 ], [ %456, %537 ], [ %545, %542 ]
  %551 = load i8*, i8** %12, align 8
  %552 = icmp eq i8* %551, %1
  br i1 %552, label %657, label %553

553:                                              ; preds = %549
  %554 = ptrtoint i8* %551 to i64
  %555 = sub i64 %554, %5
  %556 = icmp ult i64 %555, 32
  br i1 %556, label %647, label %557

557:                                              ; preds = %553
  %558 = add i64 %367, %2
  %559 = sub i64 %558, %5
  %560 = getelementptr i8, i8* %551, i64 %559
  %561 = ptrtoint i8* %560 to i64
  %562 = getelementptr i8, i8* %369, i64 %561
  %563 = icmp ult i8* %372, %551
  %564 = icmp ugt i8* %562, %1
  %565 = and i1 %563, %564
  br i1 %565, label %647, label %566

566:                                              ; preds = %557
  %567 = and i64 %555, -32
  %568 = getelementptr i8, i8* %372, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = add i64 %567, -32
  %571 = lshr exact i64 %570, 5
  %572 = add nuw nsw i64 %571, 1
  %573 = and i64 %572, 3
  %574 = icmp ult i64 %570, 96
  br i1 %574, label %626, label %575

575:                                              ; preds = %566
  %576 = sub nsw i64 %572, %573
  br label %577

577:                                              ; preds = %577, %575
  %578 = phi i64 [ 0, %575 ], [ %623, %577 ]
  %579 = phi i64 [ %576, %575 ], [ %624, %577 ]
  %580 = getelementptr i8, i8* %372, i64 %578
  %581 = getelementptr i8, i8* %1, i64 %578
  %582 = bitcast i8* %581 to <16 x i8>*
  %583 = load <16 x i8>, <16 x i8>* %582, align 1, !alias.scope !193
  %584 = getelementptr i8, i8* %581, i64 16
  %585 = bitcast i8* %584 to <16 x i8>*
  %586 = load <16 x i8>, <16 x i8>* %585, align 1, !alias.scope !193
  %587 = bitcast i8* %580 to <16 x i8>*
  store <16 x i8> %583, <16 x i8>* %587, align 1, !alias.scope !196, !noalias !193
  %588 = getelementptr i8, i8* %580, i64 16
  %589 = bitcast i8* %588 to <16 x i8>*
  store <16 x i8> %586, <16 x i8>* %589, align 1, !alias.scope !196, !noalias !193
  %590 = or i64 %578, 32
  %591 = getelementptr i8, i8* %372, i64 %590
  %592 = getelementptr i8, i8* %1, i64 %590
  %593 = bitcast i8* %592 to <16 x i8>*
  %594 = load <16 x i8>, <16 x i8>* %593, align 1, !alias.scope !193
  %595 = getelementptr i8, i8* %592, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  %597 = load <16 x i8>, <16 x i8>* %596, align 1, !alias.scope !193
  %598 = bitcast i8* %591 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %598, align 1, !alias.scope !196, !noalias !193
  %599 = getelementptr i8, i8* %591, i64 16
  %600 = bitcast i8* %599 to <16 x i8>*
  store <16 x i8> %597, <16 x i8>* %600, align 1, !alias.scope !196, !noalias !193
  %601 = or i64 %578, 64
  %602 = getelementptr i8, i8* %372, i64 %601
  %603 = getelementptr i8, i8* %1, i64 %601
  %604 = bitcast i8* %603 to <16 x i8>*
  %605 = load <16 x i8>, <16 x i8>* %604, align 1, !alias.scope !193
  %606 = getelementptr i8, i8* %603, i64 16
  %607 = bitcast i8* %606 to <16 x i8>*
  %608 = load <16 x i8>, <16 x i8>* %607, align 1, !alias.scope !193
  %609 = bitcast i8* %602 to <16 x i8>*
  store <16 x i8> %605, <16 x i8>* %609, align 1, !alias.scope !196, !noalias !193
  %610 = getelementptr i8, i8* %602, i64 16
  %611 = bitcast i8* %610 to <16 x i8>*
  store <16 x i8> %608, <16 x i8>* %611, align 1, !alias.scope !196, !noalias !193
  %612 = or i64 %578, 96
  %613 = getelementptr i8, i8* %372, i64 %612
  %614 = getelementptr i8, i8* %1, i64 %612
  %615 = bitcast i8* %614 to <16 x i8>*
  %616 = load <16 x i8>, <16 x i8>* %615, align 1, !alias.scope !193
  %617 = getelementptr i8, i8* %614, i64 16
  %618 = bitcast i8* %617 to <16 x i8>*
  %619 = load <16 x i8>, <16 x i8>* %618, align 1, !alias.scope !193
  %620 = bitcast i8* %613 to <16 x i8>*
  store <16 x i8> %616, <16 x i8>* %620, align 1, !alias.scope !196, !noalias !193
  %621 = getelementptr i8, i8* %613, i64 16
  %622 = bitcast i8* %621 to <16 x i8>*
  store <16 x i8> %619, <16 x i8>* %622, align 1, !alias.scope !196, !noalias !193
  %623 = add i64 %578, 128
  %624 = add i64 %579, -4
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %626, label %577, !llvm.loop !198

626:                                              ; preds = %577, %566
  %627 = phi i64 [ 0, %566 ], [ %623, %577 ]
  %628 = icmp eq i64 %573, 0
  br i1 %628, label %645, label %629

629:                                              ; preds = %626, %629
  %630 = phi i64 [ %642, %629 ], [ %627, %626 ]
  %631 = phi i64 [ %643, %629 ], [ %573, %626 ]
  %632 = getelementptr i8, i8* %372, i64 %630
  %633 = getelementptr i8, i8* %1, i64 %630
  %634 = bitcast i8* %633 to <16 x i8>*
  %635 = load <16 x i8>, <16 x i8>* %634, align 1, !alias.scope !193
  %636 = getelementptr i8, i8* %633, i64 16
  %637 = bitcast i8* %636 to <16 x i8>*
  %638 = load <16 x i8>, <16 x i8>* %637, align 1, !alias.scope !193
  %639 = bitcast i8* %632 to <16 x i8>*
  store <16 x i8> %635, <16 x i8>* %639, align 1, !alias.scope !196, !noalias !193
  %640 = getelementptr i8, i8* %632, i64 16
  %641 = bitcast i8* %640 to <16 x i8>*
  store <16 x i8> %638, <16 x i8>* %641, align 1, !alias.scope !196, !noalias !193
  %642 = add i64 %630, 32
  %643 = add i64 %631, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %629, !llvm.loop !199

645:                                              ; preds = %629, %626
  %646 = icmp eq i64 %555, %567
  br i1 %646, label %657, label %647

647:                                              ; preds = %645, %557, %553
  %648 = phi i8* [ %372, %557 ], [ %372, %553 ], [ %568, %645 ]
  %649 = phi i8* [ %1, %557 ], [ %1, %553 ], [ %569, %645 ]
  br label %650

650:                                              ; preds = %647, %650
  %651 = phi i8* [ %655, %650 ], [ %648, %647 ]
  %652 = phi i8* [ %654, %650 ], [ %649, %647 ]
  %653 = load i8, i8* %652, align 1
  store i8 %653, i8* %651, align 1
  %654 = getelementptr inbounds i8, i8* %652, i64 1
  %655 = getelementptr inbounds i8, i8* %651, i64 1
  %656 = icmp eq i8* %654, %551
  br i1 %656, label %657, label %650, !llvm.loop !200

657:                                              ; preds = %650, %645, %549
  %658 = phi i8* [ %372, %549 ], [ %568, %645 ], [ %655, %650 ]
  %659 = ptrtoint i8* %550 to i64
  %660 = ptrtoint i8* %658 to i64
  store i64 %659, i64* %328, align 8
  store i64 %660, i64* %327, align 8
  store i64 %437, i64* %10, align 8
  br label %661

661:                                              ; preds = %301, %305, %284, %657, %91, %4
  %662 = phi i8* [ %1, %4 ], [ %1, %91 ], [ %370, %657 ], [ %1, %284 ], [ %1, %305 ], [ %1, %301 ]
  ret i8* %662
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !111
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !111
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !111
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !111
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !111
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !111
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !111
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !111
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !111
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !111
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !111
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !111
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !111
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhN2v88internal13ZoneAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IS8_EESA_SA_(%"class.std::__1::vector.1151"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %636

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !201
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !201
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !204, !noalias !201
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !204, !noalias !201
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !201
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !201
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !204, !noalias !201
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !204, !noalias !201
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !201
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !201
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !204, !noalias !201
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !204, !noalias !201
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !201
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !201
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !204, !noalias !201
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !204, !noalias !201
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !206

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !201
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !201
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !204, !noalias !201
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !204, !noalias !201
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !207

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !208

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %636

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !209
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !209
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !212, !noalias !209
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !212, !noalias !209
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !209
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !209
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !212, !noalias !209
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !212, !noalias !209
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !209
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !209
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !212, !noalias !209
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !212, !noalias !209
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !209
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !209
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !212, !noalias !209
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !212, !noalias !209
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !214

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !209
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !209
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !212, !noalias !209
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !212, !noalias !209
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !215

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #6
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !216

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %636, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #6
  br label %636

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.1151"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp ugt i64 %272, 2147483647
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.1151"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #7
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 1073741823
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %307, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 2147483647, %279 ], [ %284, %281 ]
  %290 = getelementptr inbounds %"class.std::__1::vector.1151", %"class.std::__1::vector.1151"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %291 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %290, align 8
  %292 = add nuw nsw i64 %289, 7
  %293 = and i64 %292, -8
  %294 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %291, i64 0, i32 2
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %291, i64 0, i32 3
  %297 = load i64, i64* %296, align 8
  %298 = sub i64 %297, %295
  %299 = icmp ugt i64 %293, %298
  br i1 %299, label %300, label %302, !prof !2

300:                                              ; preds = %287
  %301 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %291, i64 %293) #6
  br label %304

302:                                              ; preds = %287
  %303 = add i64 %295, %293
  store i64 %303, i64* %294, align 8
  br label %304

304:                                              ; preds = %302, %300
  %305 = phi i64 [ %301, %300 ], [ %295, %302 ]
  %306 = inttoptr i64 %305 to i8*
  br label %307

307:                                              ; preds = %281, %304
  %308 = phi i64 [ %288, %304 ], [ %285, %281 ]
  %309 = phi i64 [ %289, %304 ], [ 0, %281 ]
  %310 = phi i8* [ %306, %304 ], [ null, %281 ]
  %311 = getelementptr inbounds i8, i8* %310, i64 %308
  %312 = getelementptr inbounds i8, i8* %310, i64 %309
  %313 = getelementptr inbounds i8, i8* %311, i64 %9
  %314 = icmp ult i64 %9, 32
  br i1 %314, label %400, label %315

315:                                              ; preds = %307
  %316 = icmp ult i8* %311, %3
  %317 = icmp ugt i8* %313, %2
  %318 = and i1 %316, %317
  br i1 %318, label %400, label %319

319:                                              ; preds = %315
  %320 = and i64 %9, -32
  %321 = getelementptr i8, i8* %311, i64 %320
  %322 = getelementptr i8, i8* %2, i64 %320
  %323 = add i64 %320, -32
  %324 = lshr exact i64 %323, 5
  %325 = add nuw nsw i64 %324, 1
  %326 = and i64 %325, 3
  %327 = icmp ult i64 %323, 96
  br i1 %327, label %379, label %328

328:                                              ; preds = %319
  %329 = sub nsw i64 %325, %326
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ 0, %328 ], [ %376, %330 ]
  %332 = phi i64 [ %329, %328 ], [ %377, %330 ]
  %333 = getelementptr i8, i8* %311, i64 %331
  %334 = getelementptr i8, i8* %2, i64 %331
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1, !alias.scope !217
  %337 = getelementptr i8, i8* %334, i64 16
  %338 = bitcast i8* %337 to <16 x i8>*
  %339 = load <16 x i8>, <16 x i8>* %338, align 1, !alias.scope !217
  %340 = bitcast i8* %333 to <16 x i8>*
  store <16 x i8> %336, <16 x i8>* %340, align 1, !alias.scope !220, !noalias !217
  %341 = getelementptr i8, i8* %333, i64 16
  %342 = bitcast i8* %341 to <16 x i8>*
  store <16 x i8> %339, <16 x i8>* %342, align 1, !alias.scope !220, !noalias !217
  %343 = or i64 %331, 32
  %344 = getelementptr i8, i8* %311, i64 %343
  %345 = getelementptr i8, i8* %2, i64 %343
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1, !alias.scope !217
  %348 = getelementptr i8, i8* %345, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  %350 = load <16 x i8>, <16 x i8>* %349, align 1, !alias.scope !217
  %351 = bitcast i8* %344 to <16 x i8>*
  store <16 x i8> %347, <16 x i8>* %351, align 1, !alias.scope !220, !noalias !217
  %352 = getelementptr i8, i8* %344, i64 16
  %353 = bitcast i8* %352 to <16 x i8>*
  store <16 x i8> %350, <16 x i8>* %353, align 1, !alias.scope !220, !noalias !217
  %354 = or i64 %331, 64
  %355 = getelementptr i8, i8* %311, i64 %354
  %356 = getelementptr i8, i8* %2, i64 %354
  %357 = bitcast i8* %356 to <16 x i8>*
  %358 = load <16 x i8>, <16 x i8>* %357, align 1, !alias.scope !217
  %359 = getelementptr i8, i8* %356, i64 16
  %360 = bitcast i8* %359 to <16 x i8>*
  %361 = load <16 x i8>, <16 x i8>* %360, align 1, !alias.scope !217
  %362 = bitcast i8* %355 to <16 x i8>*
  store <16 x i8> %358, <16 x i8>* %362, align 1, !alias.scope !220, !noalias !217
  %363 = getelementptr i8, i8* %355, i64 16
  %364 = bitcast i8* %363 to <16 x i8>*
  store <16 x i8> %361, <16 x i8>* %364, align 1, !alias.scope !220, !noalias !217
  %365 = or i64 %331, 96
  %366 = getelementptr i8, i8* %311, i64 %365
  %367 = getelementptr i8, i8* %2, i64 %365
  %368 = bitcast i8* %367 to <16 x i8>*
  %369 = load <16 x i8>, <16 x i8>* %368, align 1, !alias.scope !217
  %370 = getelementptr i8, i8* %367, i64 16
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !217
  %373 = bitcast i8* %366 to <16 x i8>*
  store <16 x i8> %369, <16 x i8>* %373, align 1, !alias.scope !220, !noalias !217
  %374 = getelementptr i8, i8* %366, i64 16
  %375 = bitcast i8* %374 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %375, align 1, !alias.scope !220, !noalias !217
  %376 = add i64 %331, 128
  %377 = add i64 %332, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %330, !llvm.loop !222

379:                                              ; preds = %330, %319
  %380 = phi i64 [ 0, %319 ], [ %376, %330 ]
  %381 = icmp eq i64 %326, 0
  br i1 %381, label %398, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %395, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %396, %382 ], [ %326, %379 ]
  %385 = getelementptr i8, i8* %311, i64 %383
  %386 = getelementptr i8, i8* %2, i64 %383
  %387 = bitcast i8* %386 to <16 x i8>*
  %388 = load <16 x i8>, <16 x i8>* %387, align 1, !alias.scope !217
  %389 = getelementptr i8, i8* %386, i64 16
  %390 = bitcast i8* %389 to <16 x i8>*
  %391 = load <16 x i8>, <16 x i8>* %390, align 1, !alias.scope !217
  %392 = bitcast i8* %385 to <16 x i8>*
  store <16 x i8> %388, <16 x i8>* %392, align 1, !alias.scope !220, !noalias !217
  %393 = getelementptr i8, i8* %385, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %391, <16 x i8>* %394, align 1, !alias.scope !220, !noalias !217
  %395 = add i64 %383, 32
  %396 = add i64 %384, -1
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %382, !llvm.loop !223

398:                                              ; preds = %382, %379
  %399 = icmp eq i64 %9, %320
  br i1 %399, label %410, label %400

400:                                              ; preds = %398, %315, %307
  %401 = phi i8* [ %311, %315 ], [ %311, %307 ], [ %321, %398 ]
  %402 = phi i8* [ %2, %315 ], [ %2, %307 ], [ %322, %398 ]
  br label %403

403:                                              ; preds = %400, %403
  %404 = phi i8* [ %407, %403 ], [ %401, %400 ]
  %405 = phi i8* [ %408, %403 ], [ %402, %400 ]
  %406 = load i8, i8* %405, align 1
  store i8 %406, i8* %404, align 1
  %407 = getelementptr inbounds i8, i8* %404, i64 1
  %408 = getelementptr inbounds i8, i8* %405, i64 1
  %409 = icmp eq i8* %313, %407
  br i1 %409, label %410, label %403, !llvm.loop !224

410:                                              ; preds = %403, %398
  %411 = ptrtoint i8* %312 to i64
  %412 = load i8*, i8** %7, align 8
  %413 = icmp eq i8* %412, %1
  br i1 %413, label %523, label %414

414:                                              ; preds = %410
  %415 = ptrtoint i8* %412 to i64
  %416 = ptrtoint i8* %1 to i64
  %417 = sub i64 %416, %415
  %418 = icmp ult i64 %417, 16
  br i1 %418, label %513, label %419

419:                                              ; preds = %414
  %420 = sub i64 %308, %5
  %421 = getelementptr i8, i8* %412, i64 %420
  %422 = ptrtoint i8* %421 to i64
  %423 = getelementptr i8, i8* %310, i64 %422
  %424 = icmp ult i8* %423, %1
  %425 = icmp ult i8* %412, %311
  %426 = and i1 %424, %425
  br i1 %426, label %513, label %427

427:                                              ; preds = %419
  %428 = and i64 %417, -16
  %429 = sub i64 0, %428
  %430 = getelementptr i8, i8* %311, i64 %429
  %431 = sub i64 0, %428
  %432 = getelementptr i8, i8* %1, i64 %431
  %433 = add i64 %428, -16
  %434 = lshr exact i64 %433, 4
  %435 = add nuw nsw i64 %434, 1
  %436 = and i64 %435, 3
  %437 = icmp ult i64 %433, 48
  br i1 %437, label %490, label %438

438:                                              ; preds = %427
  %439 = sub nsw i64 %435, %436
  %440 = getelementptr i8, i8* %311, i64 -1
  %441 = getelementptr inbounds i8, i8* %440, i64 -8
  %442 = getelementptr inbounds i8, i8* %1, i64 -16
  %443 = getelementptr inbounds i8, i8* %441, i64 -7
  %444 = getelementptr i8, i8* %311, i64 -1
  %445 = getelementptr inbounds i8, i8* %444, i64 -8
  %446 = getelementptr inbounds i8, i8* %1, i64 -16
  %447 = getelementptr inbounds i8, i8* %445, i64 -7
  %448 = getelementptr i8, i8* %311, i64 -1
  %449 = getelementptr inbounds i8, i8* %448, i64 -8
  %450 = getelementptr inbounds i8, i8* %1, i64 -16
  %451 = getelementptr inbounds i8, i8* %449, i64 -7
  %452 = getelementptr i8, i8* %311, i64 -1
  %453 = getelementptr inbounds i8, i8* %452, i64 -8
  %454 = getelementptr inbounds i8, i8* %1, i64 -16
  %455 = getelementptr inbounds i8, i8* %453, i64 -7
  br label %456

456:                                              ; preds = %456, %438
  %457 = phi i64 [ 0, %438 ], [ %487, %456 ]
  %458 = phi i64 [ %439, %438 ], [ %488, %456 ]
  %459 = sub i64 0, %457
  %460 = sub i64 0, %457
  %461 = getelementptr inbounds i8, i8* %442, i64 %460
  %462 = bitcast i8* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 1, !alias.scope !225
  %464 = getelementptr inbounds i8, i8* %443, i64 %459
  %465 = bitcast i8* %464 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %465, align 1, !alias.scope !228, !noalias !225
  %466 = sub nuw nsw i64 -16, %457
  %467 = sub nuw nsw i64 -16, %457
  %468 = getelementptr inbounds i8, i8* %446, i64 %467
  %469 = bitcast i8* %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 1, !alias.scope !225
  %471 = getelementptr inbounds i8, i8* %447, i64 %466
  %472 = bitcast i8* %471 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %472, align 1, !alias.scope !228, !noalias !225
  %473 = sub nuw nsw i64 -32, %457
  %474 = sub nuw nsw i64 -32, %457
  %475 = getelementptr inbounds i8, i8* %450, i64 %474
  %476 = bitcast i8* %475 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 1, !alias.scope !225
  %478 = getelementptr inbounds i8, i8* %451, i64 %473
  %479 = bitcast i8* %478 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %479, align 1, !alias.scope !228, !noalias !225
  %480 = sub nuw nsw i64 -48, %457
  %481 = sub nuw nsw i64 -48, %457
  %482 = getelementptr inbounds i8, i8* %454, i64 %481
  %483 = bitcast i8* %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 1, !alias.scope !225
  %485 = getelementptr inbounds i8, i8* %455, i64 %480
  %486 = bitcast i8* %485 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %486, align 1, !alias.scope !228, !noalias !225
  %487 = add i64 %457, 64
  %488 = add i64 %458, -4
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %490, label %456, !llvm.loop !230

490:                                              ; preds = %456, %427
  %491 = phi i64 [ 0, %427 ], [ %487, %456 ]
  %492 = icmp eq i64 %436, 0
  br i1 %492, label %511, label %493

493:                                              ; preds = %490
  %494 = getelementptr i8, i8* %311, i64 -1
  %495 = getelementptr inbounds i8, i8* %494, i64 -8
  %496 = getelementptr inbounds i8, i8* %1, i64 -16
  %497 = getelementptr inbounds i8, i8* %495, i64 -7
  br label %498

498:                                              ; preds = %498, %493
  %499 = phi i64 [ %491, %493 ], [ %508, %498 ]
  %500 = phi i64 [ %436, %493 ], [ %509, %498 ]
  %501 = sub i64 0, %499
  %502 = sub i64 0, %499
  %503 = getelementptr inbounds i8, i8* %496, i64 %502
  %504 = bitcast i8* %503 to <2 x i64>*
  %505 = load <2 x i64>, <2 x i64>* %504, align 1, !alias.scope !225
  %506 = getelementptr inbounds i8, i8* %497, i64 %501
  %507 = bitcast i8* %506 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %507, align 1, !alias.scope !228, !noalias !225
  %508 = add i64 %499, 16
  %509 = add i64 %500, -1
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %498, !llvm.loop !231

511:                                              ; preds = %498, %490
  %512 = icmp eq i64 %417, %428
  br i1 %512, label %523, label %513

513:                                              ; preds = %511, %419, %414
  %514 = phi i8* [ %311, %419 ], [ %311, %414 ], [ %430, %511 ]
  %515 = phi i8* [ %1, %419 ], [ %1, %414 ], [ %432, %511 ]
  br label %516

516:                                              ; preds = %513, %516
  %517 = phi i8* [ %519, %516 ], [ %514, %513 ]
  %518 = phi i8* [ %520, %516 ], [ %515, %513 ]
  %519 = getelementptr inbounds i8, i8* %517, i64 -1
  %520 = getelementptr inbounds i8, i8* %518, i64 -1
  %521 = load i8, i8* %520, align 1
  store i8 %521, i8* %519, align 1
  %522 = icmp eq i8* %520, %412
  br i1 %522, label %523, label %516, !llvm.loop !232

523:                                              ; preds = %516, %511, %410
  %524 = phi i8* [ %311, %410 ], [ %430, %511 ], [ %519, %516 ]
  %525 = load i8*, i8** %15, align 8
  %526 = icmp eq i8* %525, %1
  br i1 %526, label %632, label %527

527:                                              ; preds = %523
  %528 = ptrtoint i8* %525 to i64
  %529 = sub i64 %528, %5
  %530 = icmp ult i64 %529, 32
  br i1 %530, label %622, label %531

531:                                              ; preds = %527
  %532 = add i64 %308, %8
  %533 = sub i64 %532, %5
  %534 = sub i64 %533, %6
  %535 = getelementptr i8, i8* %525, i64 %534
  %536 = ptrtoint i8* %535 to i64
  %537 = getelementptr i8, i8* %310, i64 %536
  %538 = icmp ult i8* %313, %525
  %539 = icmp ugt i8* %537, %1
  %540 = and i1 %538, %539
  br i1 %540, label %622, label %541

541:                                              ; preds = %531
  %542 = and i64 %529, -32
  %543 = getelementptr i8, i8* %313, i64 %542
  %544 = getelementptr i8, i8* %1, i64 %542
  %545 = add i64 %542, -32
  %546 = lshr exact i64 %545, 5
  %547 = add nuw nsw i64 %546, 1
  %548 = and i64 %547, 3
  %549 = icmp ult i64 %545, 96
  br i1 %549, label %601, label %550

550:                                              ; preds = %541
  %551 = sub nsw i64 %547, %548
  br label %552

552:                                              ; preds = %552, %550
  %553 = phi i64 [ 0, %550 ], [ %598, %552 ]
  %554 = phi i64 [ %551, %550 ], [ %599, %552 ]
  %555 = getelementptr i8, i8* %313, i64 %553
  %556 = getelementptr i8, i8* %1, i64 %553
  %557 = bitcast i8* %556 to <16 x i8>*
  %558 = load <16 x i8>, <16 x i8>* %557, align 1, !alias.scope !233
  %559 = getelementptr i8, i8* %556, i64 16
  %560 = bitcast i8* %559 to <16 x i8>*
  %561 = load <16 x i8>, <16 x i8>* %560, align 1, !alias.scope !233
  %562 = bitcast i8* %555 to <16 x i8>*
  store <16 x i8> %558, <16 x i8>* %562, align 1, !alias.scope !236, !noalias !233
  %563 = getelementptr i8, i8* %555, i64 16
  %564 = bitcast i8* %563 to <16 x i8>*
  store <16 x i8> %561, <16 x i8>* %564, align 1, !alias.scope !236, !noalias !233
  %565 = or i64 %553, 32
  %566 = getelementptr i8, i8* %313, i64 %565
  %567 = getelementptr i8, i8* %1, i64 %565
  %568 = bitcast i8* %567 to <16 x i8>*
  %569 = load <16 x i8>, <16 x i8>* %568, align 1, !alias.scope !233
  %570 = getelementptr i8, i8* %567, i64 16
  %571 = bitcast i8* %570 to <16 x i8>*
  %572 = load <16 x i8>, <16 x i8>* %571, align 1, !alias.scope !233
  %573 = bitcast i8* %566 to <16 x i8>*
  store <16 x i8> %569, <16 x i8>* %573, align 1, !alias.scope !236, !noalias !233
  %574 = getelementptr i8, i8* %566, i64 16
  %575 = bitcast i8* %574 to <16 x i8>*
  store <16 x i8> %572, <16 x i8>* %575, align 1, !alias.scope !236, !noalias !233
  %576 = or i64 %553, 64
  %577 = getelementptr i8, i8* %313, i64 %576
  %578 = getelementptr i8, i8* %1, i64 %576
  %579 = bitcast i8* %578 to <16 x i8>*
  %580 = load <16 x i8>, <16 x i8>* %579, align 1, !alias.scope !233
  %581 = getelementptr i8, i8* %578, i64 16
  %582 = bitcast i8* %581 to <16 x i8>*
  %583 = load <16 x i8>, <16 x i8>* %582, align 1, !alias.scope !233
  %584 = bitcast i8* %577 to <16 x i8>*
  store <16 x i8> %580, <16 x i8>* %584, align 1, !alias.scope !236, !noalias !233
  %585 = getelementptr i8, i8* %577, i64 16
  %586 = bitcast i8* %585 to <16 x i8>*
  store <16 x i8> %583, <16 x i8>* %586, align 1, !alias.scope !236, !noalias !233
  %587 = or i64 %553, 96
  %588 = getelementptr i8, i8* %313, i64 %587
  %589 = getelementptr i8, i8* %1, i64 %587
  %590 = bitcast i8* %589 to <16 x i8>*
  %591 = load <16 x i8>, <16 x i8>* %590, align 1, !alias.scope !233
  %592 = getelementptr i8, i8* %589, i64 16
  %593 = bitcast i8* %592 to <16 x i8>*
  %594 = load <16 x i8>, <16 x i8>* %593, align 1, !alias.scope !233
  %595 = bitcast i8* %588 to <16 x i8>*
  store <16 x i8> %591, <16 x i8>* %595, align 1, !alias.scope !236, !noalias !233
  %596 = getelementptr i8, i8* %588, i64 16
  %597 = bitcast i8* %596 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %597, align 1, !alias.scope !236, !noalias !233
  %598 = add i64 %553, 128
  %599 = add i64 %554, -4
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %601, label %552, !llvm.loop !238

601:                                              ; preds = %552, %541
  %602 = phi i64 [ 0, %541 ], [ %598, %552 ]
  %603 = icmp eq i64 %548, 0
  br i1 %603, label %620, label %604

604:                                              ; preds = %601, %604
  %605 = phi i64 [ %617, %604 ], [ %602, %601 ]
  %606 = phi i64 [ %618, %604 ], [ %548, %601 ]
  %607 = getelementptr i8, i8* %313, i64 %605
  %608 = getelementptr i8, i8* %1, i64 %605
  %609 = bitcast i8* %608 to <16 x i8>*
  %610 = load <16 x i8>, <16 x i8>* %609, align 1, !alias.scope !233
  %611 = getelementptr i8, i8* %608, i64 16
  %612 = bitcast i8* %611 to <16 x i8>*
  %613 = load <16 x i8>, <16 x i8>* %612, align 1, !alias.scope !233
  %614 = bitcast i8* %607 to <16 x i8>*
  store <16 x i8> %610, <16 x i8>* %614, align 1, !alias.scope !236, !noalias !233
  %615 = getelementptr i8, i8* %607, i64 16
  %616 = bitcast i8* %615 to <16 x i8>*
  store <16 x i8> %613, <16 x i8>* %616, align 1, !alias.scope !236, !noalias !233
  %617 = add i64 %605, 32
  %618 = add i64 %606, -1
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %620, label %604, !llvm.loop !239

620:                                              ; preds = %604, %601
  %621 = icmp eq i64 %529, %542
  br i1 %621, label %632, label %622

622:                                              ; preds = %620, %531, %527
  %623 = phi i8* [ %313, %531 ], [ %313, %527 ], [ %543, %620 ]
  %624 = phi i8* [ %1, %531 ], [ %1, %527 ], [ %544, %620 ]
  br label %625

625:                                              ; preds = %622, %625
  %626 = phi i8* [ %630, %625 ], [ %623, %622 ]
  %627 = phi i8* [ %629, %625 ], [ %624, %622 ]
  %628 = load i8, i8* %627, align 1
  store i8 %628, i8* %626, align 1
  %629 = getelementptr inbounds i8, i8* %627, i64 1
  %630 = getelementptr inbounds i8, i8* %626, i64 1
  %631 = icmp eq i8* %629, %525
  br i1 %631, label %632, label %625, !llvm.loop !240

632:                                              ; preds = %625, %620, %523
  %633 = phi i8* [ %313, %523 ], [ %543, %620 ], [ %630, %625 ]
  %634 = ptrtoint i8* %524 to i64
  %635 = ptrtoint i8* %633 to i64
  store i64 %634, i64* %269, align 8
  store i64 %635, i64* %20, align 8
  store i64 %411, i64* %13, align 8
  br label %636

636:                                              ; preds = %632, %136, %263, %267, %4
  %637 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %311, %632 ]
  ret i8* %637
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1200"* %0, %"class.std::__1::__tree_node"* %7) #6
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiSD_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiSD_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_121BytecodeArgumentCheckENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__14listIN2v88internal12_GLOBAL__N_116BytecodeArgumentENS2_13ZoneAllocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!76 = !{i64 0, i64 65}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJiRiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJiRiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__14listIiN2v88internal13ZoneAllocatorIiEEE15__allocate_nodeERNS3_INS_11__list_nodeIiPvEEEE: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__14listIiN2v88internal13ZoneAllocatorIiEEE15__allocate_nodeERNS3_INS_11__list_nodeIiPvEEEE"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__14listIiN2v88internal13ZoneAllocatorIiEEE15__allocate_nodeERNS3_INS_11__list_nodeIiPvEEEE: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__14listIiN2v88internal13ZoneAllocatorIiEEE15__allocate_nodeERNS3_INS_11__list_nodeIiPvEEEE"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiSD_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiSD_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJiRiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJiRiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!110 = distinct !{!110, !11}
!111 = !{i8 0, i8 2}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!114 = distinct !{!114, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN2v88internal12_GLOBAL__N_120BytecodeSequenceNodeEEENS_22__unordered_map_hasherIiS7_NS2_4base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SD_SB_Lb1EEENS3_13ZoneAllocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !9}
!121 = distinct !{!121, !11}
!122 = distinct !{!122, !9}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !9}
!129 = distinct !{!129, !11}
!130 = distinct !{!130, !9}
!131 = !{!132}
!132 = distinct !{!132, !133}
!133 = distinct !{!133, !"LVerDomain"}
!134 = !{!135}
!135 = distinct !{!135, !133}
!136 = distinct !{!136, !9}
!137 = distinct !{!137, !11}
!138 = distinct !{!138, !9}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !9}
!145 = distinct !{!145, !11}
!146 = distinct !{!146, !9}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !9}
!153 = distinct !{!153, !11}
!154 = distinct !{!154, !9}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !9}
!161 = distinct !{!161, !9}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !9}
!168 = distinct !{!168, !11}
!169 = distinct !{!169, !9}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !9}
!176 = distinct !{!176, !11}
!177 = distinct !{!177, !9}
!178 = !{!179}
!179 = distinct !{!179, !180}
!180 = distinct !{!180, !"LVerDomain"}
!181 = !{!182}
!182 = distinct !{!182, !180}
!183 = distinct !{!183, !9}
!184 = distinct !{!184, !9}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189}
!189 = distinct !{!189, !187}
!190 = distinct !{!190, !9}
!191 = distinct !{!191, !11}
!192 = distinct !{!192, !9}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = distinct !{!198, !9}
!199 = distinct !{!199, !11}
!200 = distinct !{!200, !9}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = distinct !{!206, !9}
!207 = distinct !{!207, !11}
!208 = distinct !{!208, !9}
!209 = !{!210}
!210 = distinct !{!210, !211}
!211 = distinct !{!211, !"LVerDomain"}
!212 = !{!213}
!213 = distinct !{!213, !211}
!214 = distinct !{!214, !9}
!215 = distinct !{!215, !11}
!216 = distinct !{!216, !9}
!217 = !{!218}
!218 = distinct !{!218, !219}
!219 = distinct !{!219, !"LVerDomain"}
!220 = !{!221}
!221 = distinct !{!221, !219}
!222 = distinct !{!222, !9}
!223 = distinct !{!223, !11}
!224 = distinct !{!224, !9}
!225 = !{!226}
!226 = distinct !{!226, !227}
!227 = distinct !{!227, !"LVerDomain"}
!228 = !{!229}
!229 = distinct !{!229, !227}
!230 = distinct !{!230, !9}
!231 = distinct !{!231, !11}
!232 = distinct !{!232, !9}
!233 = !{!234}
!234 = distinct !{!234, !235}
!235 = distinct !{!235, !"LVerDomain"}
!236 = !{!237}
!237 = distinct !{!237, !235}
!238 = distinct !{!238, !9}
!239 = distinct !{!239, !11}
!240 = distinct !{!240, !9}
