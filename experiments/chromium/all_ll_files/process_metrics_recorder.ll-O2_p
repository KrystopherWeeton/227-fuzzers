; ModuleID = '../../chrome/browser/performance_monitor/process_metrics_recorder.cc'
source_filename = "../../chrome/browser/performance_monitor/process_metrics_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.performance_monitor::ProcessMetricsRecorder" = type { %"class.performance_monitor::ProcessMonitor::Observer", %"class.base::ScopedObservation" }
%"class.performance_monitor::ProcessMonitor::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::ScopedObservation" = type { %"class.performance_monitor::ProcessMonitor::Observer"*, %"class.performance_monitor::ProcessMonitor"* }
%"class.performance_monitor::ProcessMonitor" = type { i32 (...)**, %"class.std::__1::map", %"class.base::RepeatingTimer", %"class.base::ObserverList", %"class.base::WeakPtrFactory.21" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.10, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.12" }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.12" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.21" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.performance_monitor::ProcessMetadata" = type { i32, i32, i32 }
%"struct.performance_monitor::ProcessMonitor::Metrics" = type <{ double, i32, [4 x i8] }>

$_ZN4base17ScopedObservationIN19performance_monitor14ProcessMonitorENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN19performance_monitor14ProcessMonitorEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

@_ZTVN19performance_monitor22ProcessMetricsRecorderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.performance_monitor::ProcessMetricsRecorder"*)* @_ZN19performance_monitor22ProcessMetricsRecorderD2Ev to i8*), i8* bitcast (void (%"class.performance_monitor::ProcessMetricsRecorder"*)* @_ZN19performance_monitor22ProcessMetricsRecorderD0Ev to i8*), i8* bitcast (void (%"class.performance_monitor::ProcessMetricsRecorder"*, %"struct.performance_monitor::ProcessMetadata"*, %"struct.performance_monitor::ProcessMonitor::Metrics"*)* @_ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE to i8*), i8* bitcast (void (%"class.performance_monitor::ProcessMetricsRecorder"*, %"struct.performance_monitor::ProcessMonitor::Metrics"*)* @_ZN19performance_monitor22ProcessMetricsRecorder26OnAggregatedMetricsSampledERKNS_14ProcessMonitor7MetricsE to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"BrowserProcess\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"RendererProcess\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"GPUProcess\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"PPAPIProcess\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"UtilityProcess\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"RendererExtensionPersistentProcess\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"RendererExtensionEventProcess\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"NetworkProcess\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Total\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"source_ == nullptr\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"../../base/scoped_observation.h\00", align 1
@switch.table._ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)], align 8
@switch.table._ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE.11 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)], align 8

@_ZN19performance_monitor22ProcessMetricsRecorderC1EPNS_14ProcessMonitorE = hidden unnamed_addr alias void (%"class.performance_monitor::ProcessMetricsRecorder"*, %"class.performance_monitor::ProcessMonitor"*), void (%"class.performance_monitor::ProcessMetricsRecorder"*, %"class.performance_monitor::ProcessMonitor"*)* @_ZN19performance_monitor22ProcessMetricsRecorderC2EPNS_14ProcessMonitorE
@_ZN19performance_monitor22ProcessMetricsRecorderD1Ev = hidden unnamed_addr alias void (%"class.performance_monitor::ProcessMetricsRecorder"*), void (%"class.performance_monitor::ProcessMetricsRecorder"*)* @_ZN19performance_monitor22ProcessMetricsRecorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor22ProcessMetricsRecorderC2EPNS_14ProcessMonitorE(%"class.performance_monitor::ProcessMetricsRecorder"*, %"class.performance_monitor::ProcessMonitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %4) #6
  %5 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19performance_monitor22ProcessMetricsRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %6, i64 0, i32 0
  store %"class.performance_monitor::ProcessMonitor::Observer"* %3, %"class.performance_monitor::ProcessMonitor::Observer"** %7, align 8
  %8 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1, i32 1
  store %"class.performance_monitor::ProcessMonitor"* null, %"class.performance_monitor::ProcessMonitor"** %8, align 8
  tail call void @_ZN4base17ScopedObservationIN19performance_monitor14ProcessMonitorENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_(%"class.base::ScopedObservation"* %6, %"class.performance_monitor::ProcessMonitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base17ScopedObservationIN19performance_monitor14ProcessMonitorENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_(%"class.base::ScopedObservation"*, %"class.performance_monitor::ProcessMonitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %0, i64 0, i32 1
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.performance_monitor::ProcessMonitor"*, %"class.performance_monitor::ProcessMonitor"** %8, align 8
  %11 = icmp eq %"class.performance_monitor::ProcessMonitor"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %7, align 8
  br label %23

13:                                               ; preds = %2
  %14 = bitcast %"class.performance_monitor::ProcessMonitor"** %8 to i8*
  %15 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN19performance_monitor14ProcessMonitorEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #6
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %18, i8** %7, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 61, %"class.logging::CheckOpResult"* nonnull %4) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %12, %13, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  store %"class.performance_monitor::ProcessMonitor"* %1, %"class.performance_monitor::ProcessMonitor"** %8, align 8
  %24 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %0, i64 0, i32 0
  %25 = load %"class.performance_monitor::ProcessMonitor::Observer"*, %"class.performance_monitor::ProcessMonitor::Observer"** %24, align 8
  call void @_ZN19performance_monitor14ProcessMonitor11AddObserverEPNS0_8ObserverE(%"class.performance_monitor::ProcessMonitor"* %1, %"class.performance_monitor::ProcessMonitor::Observer"* %25) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor22ProcessMetricsRecorderD2Ev(%"class.performance_monitor::ProcessMetricsRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19performance_monitor22ProcessMetricsRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.performance_monitor::ProcessMonitor"*, %"class.performance_monitor::ProcessMonitor"** %3, align 8
  %5 = icmp eq %"class.performance_monitor::ProcessMonitor"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.performance_monitor::ProcessMonitor::Observer"*, %"class.performance_monitor::ProcessMonitor::Observer"** %7, align 8
  tail call void @_ZN19performance_monitor14ProcessMonitor14RemoveObserverEPNS0_8ObserverE(%"class.performance_monitor::ProcessMonitor"* nonnull %4, %"class.performance_monitor::ProcessMonitor::Observer"* %8) #6
  store %"class.performance_monitor::ProcessMonitor"* null, %"class.performance_monitor::ProcessMonitor"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor22ProcessMetricsRecorderD0Ev(%"class.performance_monitor::ProcessMetricsRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN19performance_monitor22ProcessMetricsRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.performance_monitor::ProcessMonitor"*, %"class.performance_monitor::ProcessMonitor"** %3, align 8
  %5 = icmp eq %"class.performance_monitor::ProcessMonitor"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.performance_monitor::ProcessMonitor::Observer"*, %"class.performance_monitor::ProcessMonitor::Observer"** %7, align 8
  tail call void @_ZN19performance_monitor14ProcessMonitor14RemoveObserverEPNS0_8ObserverE(%"class.performance_monitor::ProcessMonitor"* nonnull %4, %"class.performance_monitor::ProcessMonitor::Observer"* %8) #6
  store %"class.performance_monitor::ProcessMonitor"* null, %"class.performance_monitor::ProcessMonitor"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.performance_monitor::ProcessMetricsRecorder", %"class.performance_monitor::ProcessMetricsRecorder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %10) #6
  %11 = bitcast %"class.performance_monitor::ProcessMetricsRecorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE(%"class.performance_monitor::ProcessMetricsRecorder"* nocapture readnone, %"struct.performance_monitor::ProcessMetadata"* nocapture readonly dereferenceable(12), %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.performance_monitor::ProcessMetadata", %"struct.performance_monitor::ProcessMetadata"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %6, 9
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = trunc i32 %6 to i16
  %10 = lshr i16 403, %9
  %11 = and i16 %10, 1
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = sext i32 %6 to i64
  %15 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE, i64 0, i64 %14
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZN19performance_monitor23RecordProcessHistogramsEPKcRKNS_14ProcessMonitor7MetricsE(i8* %16, %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16) %2) #6
  br label %17

17:                                               ; preds = %8, %3, %13
  %18 = getelementptr inbounds %"struct.performance_monitor::ProcessMetadata", %"struct.performance_monitor::ProcessMetadata"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = icmp ult i32 %20, 3
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN19performance_monitor22ProcessMetricsRecorder16OnMetricsSampledERKNS_15ProcessMetadataERKNS_14ProcessMonitor7MetricsE.11, i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZN19performance_monitor23RecordProcessHistogramsEPKcRKNS_14ProcessMonitor7MetricsE(i8* %25, %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16) %2) #6
  br label %26

26:                                               ; preds = %17, %22
  ret void
}

declare void @_ZN19performance_monitor23RecordProcessHistogramsEPKcRKNS_14ProcessMonitor7MetricsE(i8*, %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_monitor22ProcessMetricsRecorder26OnAggregatedMetricsSampledERKNS_14ProcessMonitor7MetricsE(%"class.performance_monitor::ProcessMetricsRecorder"* nocapture readnone, %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZN19performance_monitor23RecordProcessHistogramsEPKcRKNS_14ProcessMonitor7MetricsE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), %"struct.performance_monitor::ProcessMonitor::Metrics"* dereferenceable(16) %1) #6
  ret void
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #3

declare void @_ZN19performance_monitor14ProcessMonitor14RemoveObserverEPNS0_8ObserverE(%"class.performance_monitor::ProcessMonitor"*, %"class.performance_monitor::ProcessMonitor::Observer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN19performance_monitor14ProcessMonitor11AddObserverEPNS0_8ObserverE(%"class.performance_monitor::ProcessMonitor"*, %"class.performance_monitor::ProcessMonitor::Observer"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEDn(i8*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN19performance_monitor14ProcessMonitorEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #6
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
