; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.rx::ConversionBuffer" = type { i8, i64, %"class.rx::vk::DynamicBuffer" }
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.644", i32, i32, i64, i64, i32, %"class.std::__1::vector.652", %"class.std::__1::vector.652" }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkBuffer_T* }
%struct.VkBuffer_T = type opaque
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.647" }
%"class.rx::vk::WrappedObject.647" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.648" }
%"class.rx::vk::WrappedObject.648" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"class.std::__1::unique_ptr.644"*, %"class.std::__1::unique_ptr.644"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.644"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.671", %"class.angle::PackedEnumMap.678", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.680", i8, %"class.std::__1::mutex", %"class.std::__1::vector.682", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.698", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.701", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.745", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.949", i32, %"class.std::__1::shared_ptr.951" }
%"class.egl::Display" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.670", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.659" }
%"class.std::__1::map.659" = type { %"class.std::__1::__tree.660" }
%"class.std::__1::__tree.660" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.670" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.671" = type { %"class.std::__1::__vector_base.672" }
%"class.std::__1::__vector_base.672" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.673" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.678" = type { %"struct.std::__1::array.679" }
%"struct.std::__1::array.679" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase.680" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.691" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.684" }
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.686" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.696" }
%"struct.std::__1::array.696" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.697" }
%"class.rx::vk::WrappedObject.697" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.698" = type { %"struct.std::__1::array.699" }
%"struct.std::__1::array.699" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.700" }
%"class.rx::vk::WrappedObject.700" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque.701" = type { %"class.std::__1::__deque_base.702" }
%"class.std::__1::__deque_base.702" = type { %"struct.std::__1::__split_buffer.703", i64, %"class.std::__1::__compressed_pair.710" }
%"struct.std::__1::__split_buffer.703" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.705" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.704" }
%"class.rx::vk::WrappedObject.704" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.714", %"class.std::__1::vector.721", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.680", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.735", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.714" = type { %"class.std::__1::__vector_base.715" }
%"class.std::__1::__vector_base.715" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.716" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.723" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.739" }
%"class.rx::vk::WrappedObject.739" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.728", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.735" = type { %"struct.std::__1::array.736" }
%"struct.std::__1::array.736" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.737" }
%"class.std::__1::vector.737" = type { %"class.std::__1::__vector_base.738" }
%"class.std::__1::__vector_base.738" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.745" = type { %"class.std::__1::__vector_base.746" }
%"class.std::__1::__vector_base.746" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.804" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.754", %"class.angle::BitSetT.763", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.775", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.747", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.747" = type { %"class.std::__1::__vector_base.748" }
%"class.std::__1::__vector_base.748" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.749" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.754" = type { %"struct.std::__1::array.755" }
%"struct.std::__1::array.755" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.756" }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.758" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.763" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.764", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.766" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", %"struct.std::__1::array.771" }
%"class.angle::BitSetT.147" = type { i8 }
%"struct.std::__1::array.771" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.772" }
%"struct.std::__1::array.772" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.773" }
%"class.rx::vk::WrappedObject.773" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.774" }
%"struct.std::__1::array.774" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::array.775" = type { [4 x %struct.VkBuffer_T*] }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.783" }
%"class.std::__1::vector.783" = type { %"class.std::__1::__vector_base.784" }
%"class.std::__1::__vector_base.784" = type { i32*, i32*, %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.776" }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*, %"class.std::__1::__compressed_pair.778" }
%"class.angle::BitSetT.168" = type { i64 }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.angle::BitSetT.168"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.803" }
%"struct.std::__1::array.803" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.791", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.793", %struct.Optional.801, %"struct.std::__1::array.802", %"struct.std::__1::array.802", [4 x i8] }>
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.790" }
%"class.rx::vk::WrappedObject.790" = type { %struct.VkImage_T* }
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.791" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.792"* }
%"class.rx::vk::RefCounted.792" = type opaque
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.std::__1::vector.795"*, %"class.std::__1::vector.795"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::vector.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.std::__1::vector.795"* }
%struct.Optional.801 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.802" = type { [16 x %"class.angle::BitSetT.147"] }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.841", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.854", %"class.std::__1::thread" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque.809" }
%"class.std::__1::deque.809" = type { %"class.std::__1::__deque_base.810" }
%"class.std::__1::__deque_base.810" = type { %"struct.std::__1::__split_buffer.811", i64, %"class.std::__1::__compressed_pair.833" }
%"struct.std::__1::__split_buffer.811" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.828" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.813", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.684", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.821", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.812" }
%"class.rx::vk::WrappedObject.812" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.820" }
%"class.rx::vk::WrappedObject.820" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.821" = type { %"class.std::__1::__vector_base.822" }
%"class.std::__1::__vector_base.822" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.841" = type { %"class.std::__1::deque.842" }
%"class.std::__1::deque.842" = type { %"class.std::__1::__deque_base.843" }
%"class.std::__1::__deque_base.843" = type { %"struct.std::__1::__split_buffer.844", i64, %"class.std::__1::__compressed_pair.850" }
%"struct.std::__1::__split_buffer.844" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.845" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.837, %union.anon.839, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.837 = type { i64 }
%union.anon.839 = type { i64 }
%"class.std::__1::map.854" = type { %"class.std::__1::__tree.855" }
%"class.std::__1::__tree.855" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.856", %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.865" }
%"class.rx::vk::WrappedObject.865" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.866", %"class.std::__1::__compressed_pair.874", %"class.std::__1::__compressed_pair.879", %"class.std::__1::__compressed_pair.881", [4 x i8] }>
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868", %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.886", %"class.std::__1::unordered_map.887" }
%"class.rx::HasCacheStats.886" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.887" = type { %"class.std::__1::__hash_table.888" }
%"class.std::__1::__hash_table.888" = type <{ %"class.std::__1::unique_ptr.889", %"class.std::__1::__compressed_pair.899", %"class.std::__1::__compressed_pair.904", %"class.std::__1::__compressed_pair.908", [4 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891", %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.std::__1::__hash_node_base.892"** }
%"struct.std::__1::__hash_node_base.892" = type { %"struct.std::__1::__hash_node_base.892"* }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::__bucket_list_deallocator.894" }
%"class.std::__1::__bucket_list_deallocator.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"struct.std::__1::__hash_node_base.892" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.914", %"class.angle::PackedEnumMap.914" }
%"class.angle::PackedEnumMap.914" = type { %"struct.std::__1::array.915" }
%"struct.std::__1::array.915" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.916" }
%"struct.std::__1::atomic.916" = type { %"struct.std::__1::__atomic_base.917" }
%"struct.std::__1::__atomic_base.917" = type { %"struct.std::__1::__atomic_base.918" }
%"struct.std::__1::__atomic_base.918" = type { %"struct.std::__1::__cxx_atomic_impl.919" }
%"struct.std::__1::__cxx_atomic_impl.919" = type { %"struct.std::__1::__cxx_atomic_base_impl.920" }
%"struct.std::__1::__cxx_atomic_base_impl.920" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.921", i64, i64, %"class.absl::flat_hash_map.936" }
%"class.absl::flat_hash_map.921" = type { %"class.absl::container_internal::raw_hash_map.922" }
%"class.absl::container_internal::raw_hash_map.922" = type { %"class.absl::container_internal::raw_hash_set.923" }
%"class.absl::container_internal::raw_hash_set.923" = type { i8*, %"union.absl::container_internal::map_slot_type.924"*, i64, i64, %"class.absl::container_internal::CompressedTuple.925" }
%"union.absl::container_internal::map_slot_type.924" = type opaque
%"class.absl::container_internal::CompressedTuple.925" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.926" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.926" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.936" = type { %"class.absl::container_internal::raw_hash_map.937" }
%"class.absl::container_internal::raw_hash_map.937" = type { %"class.absl::container_internal::raw_hash_set.938" }
%"class.absl::container_internal::raw_hash_set.938" = type { i8*, %"union.absl::container_internal::map_slot_type.939"*, i64, i64, %"class.absl::container_internal::CompressedTuple.940" }
%"union.absl::container_internal::map_slot_type.939" = type opaque
%"class.absl::container_internal::CompressedTuple.940" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.941" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.941" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.949" = type { %"struct.std::__1::array.950" }
%"struct.std::__1::array.950" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.951" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.952" }
%"class.std::__1::shared_ptr.952" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.rx::BufferVk::VertexConversionBuffer" = type { %"struct.rx::ConversionBuffer", i32, i32, i64 }
%"class.rx::BufferVk" = type { %"class.rx::BufferImpl", %"class.rx::vk::BufferHelper"*, i64, %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", i64, %"class.rx::vk::DynamicShadowBuffer", %"class.std::__1::vector.953" }
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.rx::vk::DynamicShadowBuffer" = type { i64, i64, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::vector.953" = type { %"class.std::__1::__vector_base.954" }
%"class.std::__1::__vector_base.954" = type { %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.rx::BufferVk::VertexConversionBuffer"* }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1302" }
%"struct.std::__1::pair.1302" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1304" }
%"struct.std::__1::pair.1304" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1306" }
%"struct.std::__1::pair.1306" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1308" }
%"struct.std::__1::pair.1308" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1310" }
%"struct.std::__1::pair.1310" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1312" }
%"struct.std::__1::pair.1312" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1314" }
%"struct.std::__1::pair.1314" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.960", %"struct.std::__1::array.961", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.971"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.972", %"class.angle::BitSetT.964", %"class.angle::PackedEnumMap.978", %"class.angle::PackedEnumMap.995", %"class.angle::PackedEnumMap.1012", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.1023", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.1027", %"struct.std::__1::array.1041", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.1046", %"class.angle::BitSetT.166", %"struct.std::__1::array.1047", %"class.rx::vk::CommandPool", %"class.std::__1::vector.684", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1159", %"class.std::__1::vector.1167", i8, i8, i8, %"class.std::__1::vector.813", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.168", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1182", %"class.std::__1::vector.1189", %"class.std::__1::vector.1196", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.125", %"class.std::__1::vector.125" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.960" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.961" = type { [16 x { i64, i64 }] }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.962", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.965" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.964", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.970" }
%"class.rx::vk::WrappedObject.970" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial.971" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.964" = type { i64 }
%"class.angle::PackedEnumMap.978" = type { %"struct.std::__1::array.979" }
%"struct.std::__1::array.979" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.980", %"class.std::__1::vector.988", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.980" = type { %"class.std::__1::__vector_base.981" }
%"class.std::__1::__vector_base.981" = type { %"class.rx::vk::RefCounted.982"**, %"class.rx::vk::RefCounted.982"**, %"class.std::__1::__compressed_pair.983" }
%"class.rx::vk::RefCounted.982" = type opaque
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.rx::vk::RefCounted.982"** }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.990" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.995" = type { %"struct.std::__1::array.996" }
%"struct.std::__1::array.996" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.1012" = type { %"struct.std::__1::array.1013" }
%"struct.std::__1::array.1013" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared.1014", %"class.std::__1::vector.1016", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared.1014" = type { %"class.rx::vk::RefCounted.1015"* }
%"class.rx::vk::RefCounted.1015" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.1016" = type { %"class.std::__1::__vector_base.1017" }
%"class.std::__1::__vector_base.1017" = type { %"class.rx::vk::Shared.1014"*, %"class.rx::vk::Shared.1014"*, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.rx::vk::Shared.1014"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.1023" = type { %"struct.std::__1::array.1024" }
%"struct.std::__1::array.1024" = type { [3 x i32] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.1025", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.1025" = type { %"struct.std::__1::array.1026" }
%"struct.std::__1::array.1026" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.1027" = type { %"struct.std::__1::array.1028" }
%"struct.std::__1::array.1028" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.1029", %"class.rx::vk::BindingPointer.1031", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer.1029" = type { %"class.rx::vk::RefCounted.1030"* }
%"class.rx::vk::RefCounted.1030" = type opaque
%"class.rx::vk::BindingPointer.1031" = type { %"class.rx::vk::RefCounted.982"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.1032", %"class.angle::FastIntegerMap.1033" }
%"class.rx::HasCacheStats.1032" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap.1033" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.1034" }
%"class.std::__1::vector.1034" = type { %"class.std::__1::__vector_base.1035" }
%"class.std::__1::__vector_base.1035" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.1041" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.1042" }
%"class.rx::vk::WrappedObject.1042" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.1043" }
%"struct.std::__1::array.1043" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.1044" }
%"class.angle::FastVector.1044" = type { %"struct.std::__1::array.1045", i32*, i64, i64 }
%"struct.std::__1::array.1045" = type { [32 x i32] }
%"struct.std::__1::array.1046" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.1047" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.1048", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1048" = type { %"class.absl::container_internal::raw_hash_map.1049" }
%"class.absl::container_internal::raw_hash_map.1049" = type { %"class.absl::container_internal::raw_hash_set.1050" }
%"class.absl::container_internal::raw_hash_set.1050" = type { i8*, %"union.absl::container_internal::map_slot_type.1051"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1052" }
%"union.absl::container_internal::map_slot_type.1051" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1284" }
%"class.absl::flat_hash_map.1284" = type { %"class.absl::container_internal::raw_hash_map.1285" }
%"class.absl::container_internal::raw_hash_map.1285" = type { %"class.absl::container_internal::raw_hash_set.1286" }
%"class.absl::container_internal::raw_hash_set.1286" = type { i8*, %"union.absl::container_internal::map_slot_type.1287"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1288" }
%"union.absl::container_internal::map_slot_type.1287" = type { %"struct.std::__1::pair.1300" }
%"struct.std::__1::pair.1300" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1288" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1289" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1289" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.1052" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1053" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1053" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1063" }
%"class.angle::FastVector.1063" = type { %"struct.std::__1::array.1064", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1064" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.1065"], [4 x %"class.rx::vk::RefCounted.1065"], [4 x %"class.rx::vk::RefCounted.1065"], [3 x %"class.rx::vk::RefCounted.1065"], [1 x %"class.rx::vk::RefCounted.1065"], [8 x %"class.rx::vk::RefCounted.1065"], [1 x %"class.rx::vk::RefCounted.1065"], [10 x %"class.rx::vk::RefCounted.1065"], [48 x %"class.rx::vk::RefCounted.1065"], [43 x %"class.rx::vk::RefCounted.1065"], [6 x %"class.rx::vk::RefCounted.1065"], [2 x %"class.rx::vk::RefCounted.1065"] }
%"class.rx::vk::RefCounted.1065" = type { i32, %"class.rx::vk::ObjectAndSerial.1066" }
%"class.rx::vk::ObjectAndSerial.1066" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.1067" }
%"class.rx::vk::WrappedObject.1067" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1068", %"class.angle::PackedEnumMap.1072", %"class.angle::PackedEnumMap.1076", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1109", %"class.std::__1::unordered_map.1135", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1068" = type { %"struct.std::__1::array.1069" }
%"struct.std::__1::array.1069" = type { [22 x %"class.angle::PackedEnumMap.1070"] }
%"class.angle::PackedEnumMap.1070" = type { %"struct.std::__1::array.1071" }
%"struct.std::__1::array.1071" = type { [4 x %"class.rx::vk::BindingPointer.1029"] }
%"class.angle::PackedEnumMap.1072" = type { %"struct.std::__1::array.1073" }
%"struct.std::__1::array.1073" = type { [22 x %"class.rx::vk::BindingPointer.1074"] }
%"class.rx::vk::BindingPointer.1074" = type { %"class.rx::vk::RefCounted.1075"* }
%"class.rx::vk::RefCounted.1075" = type opaque
%"class.angle::PackedEnumMap.1076" = type { %"struct.std::__1::array.1077" }
%"struct.std::__1::array.1077" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.1078", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.971", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.1078" = type { %"struct.std::__1::array.1079" }
%"struct.std::__1::array.1079" = type { [6 x %"class.rx::vk::BindingPointer.1080"] }
%"class.rx::vk::BindingPointer.1080" = type { %"class.rx::vk::RefCounted.1065"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.1081", %"class.std::__1::unordered_map.1082" }
%"class.rx::HasCacheStats.1081" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1082" = type { %"class.std::__1::__hash_table.1083" }
%"class.std::__1::__hash_table.1083" = type <{ %"class.std::__1::unique_ptr.1084", %"class.std::__1::__compressed_pair.1094", %"class.std::__1::__compressed_pair.1099", %"class.std::__1::__compressed_pair.1103", [4 x i8] }>
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086", %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::__hash_node_base.1087"** }
%"struct.std::__1::__hash_node_base.1087" = type { %"struct.std::__1::__hash_node_base.1087"* }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.std::__1::__bucket_list_deallocator.1089" }
%"class.std::__1::__bucket_list_deallocator.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1087" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.1109" = type { %"class.std::__1::__hash_table.1110" }
%"class.std::__1::__hash_table.1110" = type <{ %"class.std::__1::unique_ptr.1111", %"class.std::__1::__compressed_pair.1121", %"class.std::__1::__compressed_pair.1126", %"class.std::__1::__compressed_pair.1131", [4 x i8] }>
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113", %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.std::__1::__hash_node_base.1114"** }
%"struct.std::__1::__hash_node_base.1114" = type { %"struct.std::__1::__hash_node_base.1114"* }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.std::__1::__bucket_list_deallocator.1116" }
%"class.std::__1::__bucket_list_deallocator.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.std::__1::__hash_node_base.1114" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"class.std::__1::unordered_map.1135" = type { %"class.std::__1::__hash_table.1136" }
%"class.std::__1::__hash_table.1136" = type <{ %"class.std::__1::unique_ptr.1137", %"class.std::__1::__compressed_pair.1147", %"class.std::__1::__compressed_pair.1152", %"class.std::__1::__compressed_pair.1155", [4 x i8] }>
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139", %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"struct.std::__1::__hash_node_base.1140"** }
%"struct.std::__1::__hash_node_base.1140" = type { %"struct.std::__1::__hash_node_base.1140"* }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.std::__1::__bucket_list_deallocator.1142" }
%"class.std::__1::__bucket_list_deallocator.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"struct.std::__1::__hash_node_base.1140" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.997", %"class.std::__1::vector.1005", i64, i32 }>
%"class.std::__1::vector.997" = type { %"class.std::__1::__vector_base.998" }
%"class.std::__1::__vector_base.998" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.1000" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.999" }
%"class.rx::vk::WrappedObject.999" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.1005" = type { %"class.std::__1::__vector_base.1006" }
%"class.std::__1::__vector_base.1006" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.1007" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1159" = type { %"class.std::__1::__vector_base.1160" }
%"class.std::__1::__vector_base.1160" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1162" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1161", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1161" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1167" = type { %"class.std::__1::__vector_base.1168" }
%"class.std::__1::__vector_base.1168" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1169" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1161", i8 }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1174" }
%"class.angle::PackedEnumMap.1174" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1175" }
%"class.std::__1::vector.1175" = type { %"class.std::__1::__vector_base.1176" }
%"class.std::__1::__vector_base.1176" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1182" = type { %"class.std::__1::__vector_base.1183" }
%"class.std::__1::__vector_base.1183" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1184" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1191" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1196" = type { %"class.std::__1::__vector_base.1197" }
%"class.std::__1::__vector_base.1197" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1198" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1258", %"class.std::__1::vector.1268", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1203", %"class.std::__1::unordered_map.1204" }
%"class.rx::HasCacheStats.1203" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1204" = type { %"class.std::__1::__hash_table.1205" }
%"class.std::__1::__hash_table.1205" = type <{ %"class.std::__1::unique_ptr.1206", %"class.std::__1::__compressed_pair.1216", %"class.std::__1::__compressed_pair.1221", %"class.std::__1::__compressed_pair.1225", [4 x i8] }>
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208", %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"struct.std::__1::__hash_node_base.1209"** }
%"struct.std::__1::__hash_node_base.1209" = type { %"struct.std::__1::__hash_node_base.1209"* }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.std::__1::__bucket_list_deallocator.1211" }
%"class.std::__1::__bucket_list_deallocator.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"struct.std::__1::__hash_node_base.1209" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1231", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1231" = type { %"class.std::__1::__hash_table.1232" }
%"class.std::__1::__hash_table.1232" = type <{ %"class.std::__1::unique_ptr.1233", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1252", [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1236"** }
%"struct.std::__1::__hash_node_base.1236" = type { %"struct.std::__1::__hash_node_base.1236"* }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::__bucket_list_deallocator.1238" }
%"class.std::__1::__bucket_list_deallocator.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"struct.std::__1::__hash_node_base.1236" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"class.std::__1::set.1258" = type { %"class.std::__1::__tree.1259" }
%"class.std::__1::__tree.1259" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1260", %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1268" = type { %"class.std::__1::__vector_base.1269" }
%"class.std::__1::__vector_base.1269" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.rx::vk::ResourceUseList"* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.rx::vk::CommandBufferAccess" = type { %"class.angle::FixedVector.1275", %"class.angle::FixedVector.1275", %"class.angle::FixedVector.1277", %"class.angle::FixedVector.1279" }
%"class.angle::FixedVector.1275" = type { %"struct.std::__1::array.1276", i64 }
%"struct.std::__1::array.1276" = type { [2 x %"struct.rx::vk::CommandBufferBufferAccess"] }
%"struct.rx::vk::CommandBufferBufferAccess" = type { %"class.rx::vk::BufferHelper"*, i32, i16 }
%"class.angle::FixedVector.1277" = type { %"struct.std::__1::array.1278", i64 }
%"struct.std::__1::array.1278" = type { [2 x %"struct.rx::vk::CommandBufferImageAccess"] }
%"struct.rx::vk::CommandBufferImageAccess" = type { %"class.rx::vk::ImageHelper"*, i32, i32 }
%"class.angle::FixedVector.1279" = type { %"struct.std::__1::array.1280", i64 }
%"struct.std::__1::array.1280" = type { [1 x %"struct.rx::vk::CommandBufferImageWrite"] }
%"struct.rx::vk::CommandBufferImageWrite" = type { %"struct.rx::vk::CommandBufferImageAccess", %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gl::TraceEvent::TraceEndOnScopeClose" = type { %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" }
%"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" = type { %"struct.angle::PlatformMethods"*, i8*, i8* }
%"struct.angle::PlatformMethods" = type { i8*, double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, {}*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, void (%"struct.angle::PlatformMethods"*, i8*, i8*, i64)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i1)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesD3D"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesVk"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.std::__1::array.1281"*, i64, i8*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesMtl"*)*, void (%"struct.angle::PlatformMethods"*, void (i8*)*, i8*)* }
%"struct.angle::FeaturesD3D" = type opaque
%"struct.std::__1::array.1281" = type { [20 x i8] }
%"struct.angle::FeaturesMtl" = type opaque
%"class.angle::FixedVector.1282" = type { %"struct.std::__1::array.1283", i64 }
%"struct.std::__1::array.1283" = type { [2 x %struct.VkBufferCopy] }

$_ZNK2rx10BufferImpl13getMemorySizeEv = comdat any

$_ZNSt3__16vectorIN2rx8BufferVk22VertexConversionBufferENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPNS1_10RendererVkERN5angle8FormatIDERjRmRbEEEvDpOT_ = comdat any

@_ZTVN2rx8BufferVkE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::BufferVk"*)* @_ZN2rx8BufferVkD2Ev to i8*), i8* bitcast (void (%"class.rx::BufferVk"*)* @_ZN2rx8BufferVkD0Ev to i8*), i8* bitcast (void (%"class.rx::BufferVk"*, %"class.gl::Context"*)* @_ZN2rx8BufferVk7destroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i8, i8*, i8*, i64, i8, i32)* @_ZN2rx8BufferVk21setDataWithUsageFlagsEPKN2gl7ContextENS1_13BufferBindingEPvPKvmNS1_11BufferUsageEj to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i8, i8*, i64, i8)* @_ZN2rx8BufferVk7setDataEPKN2gl7ContextENS1_13BufferBindingEPKvmNS1_11BufferUsageE to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i8, i8*, i64, i64)* @_ZN2rx8BufferVk10setSubDataEPKN2gl7ContextENS1_13BufferBindingEPKvmm to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, %"class.rx::BufferImpl"*, i64, i64, i64)* @_ZN2rx8BufferVk11copySubDataEPKN2gl7ContextEPNS_10BufferImplElll to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i32, i8**)* @_ZN2rx8BufferVk3mapEPKN2gl7ContextEjPPv to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i64, i64, i32, i8**)* @_ZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPv to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i8*)* @_ZN2rx8BufferVk5unmapEPKN2gl7ContextEPh to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i64, i64, i64, i1, %"struct.gl::IndexRange"*)* @_ZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeE to i8*), i8* bitcast (i32 (%"class.rx::BufferVk"*, %"class.gl::Context"*, i64, i64, i8*)* @_ZN2rx8BufferVk10getSubDataEPKN2gl7ContextEllPv to i8*), i8* bitcast (i64 (%"class.rx::BufferImpl"*)* @_ZNK2rx10BufferImpl13getMemorySizeEv to i8*), i8* bitcast (void (%"class.rx::BufferVk"*)* @_ZN2rx8BufferVk13onDataChangedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [66 x i8] c"../../third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.cpp\00", align 1
@__func__._ZN2rx8BufferVk21setDataWithUsageFlagsEPKN2gl7ContextENS1_13BufferBindingEPvPKvmNS1_11BufferUsageEj = private unnamed_addr constant [22 x i8] c"setDataWithUsageFlags\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"GPU stall due to mapping device local buffer\00", align 1
@_ZZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580 = internal unnamed_addr global i8* null, align 8
@_ZGVZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"gpu.angle\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"BufferVk::mapRange\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"GPU stall due to mapping buffer in use by the GPU\00", align 1
@_ZZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734 = internal unnamed_addr global i8* null, align 8
@_ZGVZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734 = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"BufferVk::getIndexRange\00", align 1
@switch.table._ZN2rx8BufferVk7setDataEPKN2gl7ContextENS1_13BufferBindingEPKvmNS1_11BufferUsageE = private unnamed_addr constant [9 x i32] [i32 14, i32 6, i32 14, i32 7, i32 7, i32 7, i32 14, i32 6, i32 14], align 4

@_ZN2rx16ConversionBufferC1EPNS_10RendererVkEjmmb = hidden unnamed_addr alias void (%"struct.rx::ConversionBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i1), void (%"struct.rx::ConversionBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i1)* @_ZN2rx16ConversionBufferC2EPNS_10RendererVkEjmmb
@_ZN2rx16ConversionBufferD1Ev = hidden unnamed_addr alias void (%"struct.rx::ConversionBuffer"*), void (%"struct.rx::ConversionBuffer"*)* @_ZN2rx16ConversionBufferD2Ev
@_ZN2rx16ConversionBufferC1EOS0_ = hidden unnamed_addr alias void (%"struct.rx::ConversionBuffer"*, %"struct.rx::ConversionBuffer"*), void (%"struct.rx::ConversionBuffer"*, %"struct.rx::ConversionBuffer"*)* @_ZN2rx16ConversionBufferC2EOS0_
@_ZN2rx8BufferVk22VertexConversionBufferC1EPNS_10RendererVkEN5angle8FormatIDEjmb = hidden unnamed_addr alias void (%"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.rx::RendererVk"*, i32, i32, i64, i1), void (%"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.rx::RendererVk"*, i32, i32, i64, i1)* @_ZN2rx8BufferVk22VertexConversionBufferC2EPNS_10RendererVkEN5angle8FormatIDEjmb
@_ZN2rx8BufferVk22VertexConversionBufferC1EOS1_ = hidden unnamed_addr alias void (%"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*), void (%"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*)* @_ZN2rx8BufferVk22VertexConversionBufferC2EOS1_
@_ZN2rx8BufferVk22VertexConversionBufferD2Ev = hidden unnamed_addr alias void (%"struct.rx::BufferVk::VertexConversionBuffer"*), bitcast (void (%"struct.rx::ConversionBuffer"*)* @_ZN2rx16ConversionBufferD2Ev to void (%"struct.rx::BufferVk::VertexConversionBuffer"*)*)
@_ZN2rx8BufferVk22VertexConversionBufferD1Ev = hidden unnamed_addr alias void (%"struct.rx::BufferVk::VertexConversionBuffer"*), bitcast (void (%"struct.rx::ConversionBuffer"*)* @_ZN2rx16ConversionBufferD2Ev to void (%"struct.rx::BufferVk::VertexConversionBuffer"*)*)
@_ZN2rx8BufferVkC1ERKN2gl11BufferStateE = hidden unnamed_addr alias void (%"class.rx::BufferVk"*, %"class.gl::BufferState"*), void (%"class.rx::BufferVk"*, %"class.gl::BufferState"*)* @_ZN2rx8BufferVkC2ERKN2gl11BufferStateE
@_ZN2rx8BufferVkD1Ev = hidden unnamed_addr alias void (%"class.rx::BufferVk"*), void (%"class.rx::BufferVk"*)* @_ZN2rx8BufferVkD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16ConversionBufferC2EPNS_10RendererVkEjmmb(%"struct.rx::ConversionBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %9) #11
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %9, %"class.rx::RendererVk"* %1, i32 %2, i64 %4, i64 %3, i1 zeroext %5, i32 0) #11
  ret void
}

declare void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"*) unnamed_addr #1

declare void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16ConversionBufferD2Ev(%"struct.rx::ConversionBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16ConversionBufferC2EOS0_(%"struct.rx::ConversionBuffer"*, %"struct.rx::ConversionBuffer"* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.rx::ConversionBuffer", %"struct.rx::ConversionBuffer"* %1, i64 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1EOS1_(%"class.rx::vk::DynamicBuffer"* %5, %"class.rx::vk::DynamicBuffer"* dereferenceable(112) %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2rx2vk13DynamicBufferC1EOS1_(%"class.rx::vk::DynamicBuffer"*, %"class.rx::vk::DynamicBuffer"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk22VertexConversionBufferC2EPNS_10RendererVkEN5angle8FormatIDEjmb(%"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.rx::RendererVk"*, i32, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %9) #11
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %9, %"class.rx::RendererVk"* %1, i32 160, i64 4, i64 8192, i1 zeroext %5, i32 0) #11
  %10 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 3
  store i64 %4, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk22VertexConversionBufferC2EOS1_(%"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false) #11
  %5 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %1, i64 0, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1EOS1_(%"class.rx::vk::DynamicBuffer"* %5, %"class.rx::vk::DynamicBuffer"* dereferenceable(112) %6) #11
  %7 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %1, i64 0, i32 1
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVkC2ERKN2gl11BufferStateE(%"class.rx::BufferVk"*, %"class.gl::BufferState"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"* %3) #11
  %4 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  store %"class.gl::BufferState"* %1, %"class.gl::BufferState"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2rx8BufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  %8 = bitcast %"class.rx::vk::BufferHelper"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %7) #11
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %9) #11
  %10 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6
  tail call void @_ZN2rx2vk19DynamicShadowBufferC1Ev(%"class.rx::vk::DynamicShadowBuffer"* %10) #11
  %11 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7
  %12 = bitcast %"class.std::__1::vector.953"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  ret void
}

declare void @_ZN2rx2vk19DynamicShadowBufferC1Ev(%"class.rx::vk::DynamicShadowBuffer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVkD2Ev(%"class.rx::BufferVk"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2rx8BufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %3, align 8
  %5 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %7, align 8
  %9 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %8, %4
  br i1 %9, label %17, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %11, i64 -1, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %13) #11
  %14 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %12, %4
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %3, align 8
  br label %17

17:                                               ; preds = %15, %6
  %18 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %16, %15 ], [ %4, %6 ]
  store %"struct.rx::BufferVk::VertexConversionBuffer"* %4, %"struct.rx::BufferVk::VertexConversionBuffer"** %7, align 8
  %19 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %18, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6
  tail call void @_ZN2rx2vk19DynamicShadowBufferD1Ev(%"class.rx::vk::DynamicShadowBuffer"* %21) #11
  %22 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %22) #11
  %23 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %23) #11
  %24 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"* %24) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk19DynamicShadowBufferD1Ev(%"class.rx::vk::DynamicShadowBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVkD0Ev(%"class.rx::BufferVk"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2rx8BufferVkD2Ev(%"class.rx::BufferVk"* %0) #11
  %2 = bitcast %"class.rx::BufferVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk7destroyEPKN2gl7ContextE(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  tail call void @_ZN2rx8BufferVk7releaseEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %5)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk7releaseEPNS_9ContextVkE(%"class.rx::BufferVk"*, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %4 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %6 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %5, align 8
  %7 = icmp eq %"class.rx::vk::BufferHelper"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %6, i64 0, i32 2, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* nonnull %6, %"class.rx::RendererVk"* %4) #11
  br label %13

13:                                               ; preds = %8, %2, %12
  %14 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6
  tail call void @_ZN2rx2vk19DynamicShadowBuffer7releaseEv(%"class.rx::vk::DynamicShadowBuffer"* %14) #11
  %15 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  tail call void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"* %15, %"class.rx::RendererVk"* %4) #11
  %16 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  tail call void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"* %16, %"class.rx::RendererVk"* %4) #11
  %17 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = bitcast %"class.rx::vk::BufferHelper"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  %19 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %17, align 8
  %20 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %21 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %20, align 8
  %22 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %24, %13
  ret void

24:                                               ; preds = %13, %24
  %25 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %27, %24 ], [ %19, %13 ]
  %26 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %25, i64 0, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"* %26, %"class.rx::RendererVk"* %4) #11
  %27 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %25, i64 1
  %28 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %27, %21
  br i1 %28, label %23, label %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2rx2vk12BufferHelper7releaseEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"*, %"class.rx::RendererVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk19DynamicShadowBuffer7releaseEv(%"class.rx::vk::DynamicShadowBuffer"*) local_unnamed_addr #1

declare void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::RendererVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk22initializeShadowBufferEPNS_9ContextVkEN2gl13BufferBindingEm(%"class.rx::BufferVk"*, %"class.rx::ContextVk"* nocapture readonly, i8 zeroext, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %6 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %6, i64 0, i32 7, i32 44, i32 4
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = icmp eq i8 %2, 8
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6
  tail call void @_ZN2rx2vk19DynamicShadowBuffer4initEm(%"class.rx::vk::DynamicShadowBuffer"* %13, i64 %3) #11
  %14 = tail call i32 @_ZN2rx2vk19DynamicShadowBuffer8allocateEm(%"class.rx::vk::DynamicShadowBuffer"* %13, i64 %3) #11
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %12, %10
  br label %17

17:                                               ; preds = %12, %4, %16
  %18 = phi i32 [ 0, %16 ], [ 1, %12 ], [ 0, %4 ]
  ret i32 %18
}

declare void @_ZN2rx2vk19DynamicShadowBuffer4initEm(%"class.rx::vk::DynamicShadowBuffer"*, i64) local_unnamed_addr #1

declare i32 @_ZN2rx2vk19DynamicShadowBuffer8allocateEm(%"class.rx::vk::DynamicShadowBuffer"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk31initializeHostVisibleBufferPoolEPNS_9ContextVkE(%"class.rx::BufferVk"*, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %5 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %4, align 8
  tail call void @_ZN2rx2vk13DynamicBuffer13initWithFlagsEPNS_10RendererVkEjmmjNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %3, %"class.rx::RendererVk"* %5, i32 3, i64 1, i64 0, i32 6, i32 2) #11
  ret void
}

declare void @_ZN2rx2vk13DynamicBuffer13initWithFlagsEPNS_10RendererVkEjmmjNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk18updateShadowBufferEPKhmm(%"class.rx::BufferVk"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %1, i64 %2, i1 false) #11
  br label %12

12:                                               ; preds = %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk21setExternalBufferDataEPKN2gl7ContextENS1_13BufferBindingEPvmj(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.VkBufferCreateInfo, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = bitcast %"class.rx::ContextImpl"** %8 to %"class.rx::ContextVk"**
  %10 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %9, align 8
  tail call void @_ZN2rx8BufferVk7releaseEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %10)
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %10, i64 0, i32 1, i32 1
  %12 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %12, i64 0, i32 7, i32 27, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 503, i32 2551
  %17 = tail call i8* @_Znwm(i64 104) #12
  %18 = bitcast i8* %17 to %"class.rx::vk::BufferHelper"*
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* nonnull %18) #11
  %19 = bitcast %struct.VkBufferCreateInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 48, i1 false)
  %20 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 0
  store i32 12, i32* %20, align 8
  %21 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 3
  store i64 %4, i64* %22, align 8
  %23 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 4
  store i32 %16, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 5
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 6
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %7, i64 0, i32 7
  store i32* null, i32** %26, align 8
  %27 = call i32 @_ZN2rx2vk12BufferHelper12initExternalEPNS_9ContextVkEjRK18VkBufferCreateInfoPv(%"class.rx::vk::BufferHelper"* nonnull %18, %"class.rx::ContextVk"* %10, i32 %5, %struct.VkBufferCreateInfo* nonnull dereferenceable(56) %7, i8* %3) #11
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %31 = bitcast %"class.rx::vk::BufferHelper"** %30 to i8**
  store i8* %17, i8** %31, align 8
  %32 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  store i64 0, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #11
  br label %38

33:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #11
  %34 = bitcast i8* %17 to void (%"class.rx::vk::BufferHelper"*)***
  %35 = load void (%"class.rx::vk::BufferHelper"*)**, void (%"class.rx::vk::BufferHelper"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.rx::vk::BufferHelper"*)*, void (%"class.rx::vk::BufferHelper"*)** %35, i64 1
  %37 = load void (%"class.rx::vk::BufferHelper"*)*, void (%"class.rx::vk::BufferHelper"*)** %36, align 8
  call void %37(%"class.rx::vk::BufferHelper"* nonnull %18) #11
  br label %38

38:                                               ; preds = %29, %33
  %39 = phi i32 [ 0, %29 ], [ 1, %33 ]
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN2rx2vk12BufferHelper12initExternalEPNS_9ContextVkEjRK18VkBufferCreateInfoPv(%"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*, i32, %struct.VkBufferCreateInfo* dereferenceable(56), i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk21setDataWithUsageFlagsEPKN2gl7ContextENS1_13BufferBindingEPvPKvmNS1_11BufferUsageEj(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i8*, i8* readonly, i64, i8 zeroext, i32) unnamed_addr #0 align 2 {
  %9 = alloca %struct.VkBufferCreateInfo, align 8
  %10 = icmp ne i8* %3, null
  %11 = icmp eq i8 %6, 9
  br i1 %11, label %12, label %19

12:                                               ; preds = %8
  %13 = and i32 %7, 192
  %14 = icmp ne i32 %13, 0
  %15 = or i1 %10, %14
  %16 = select i1 %15, i32 7, i32 3
  %17 = and i32 %7, 64
  %18 = icmp ne i32 %17, 0
  br label %25

19:                                               ; preds = %8
  %20 = icmp eq i8 %2, 8
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  switch i8 %6, label %24 [
    i8 3, label %25
    i8 4, label %25
    i8 5, label %25
    i8 1, label %22
    i8 7, label %22
    i8 0, label %23
    i8 2, label %23
    i8 6, label %23
    i8 8, label %23
  ]

22:                                               ; preds = %21, %21
  br label %25

23:                                               ; preds = %21, %21, %21, %21
  br label %25

24:                                               ; preds = %21
  br label %25

25:                                               ; preds = %24, %23, %22, %21, %21, %21, %19, %12
  %26 = phi i32 [ %16, %12 ], [ 14, %24 ], [ 14, %23 ], [ 6, %22 ], [ 14, %19 ], [ 7, %21 ], [ 7, %21 ], [ 7, %21 ]
  %27 = phi i1 [ %18, %12 ], [ false, %24 ], [ false, %23 ], [ false, %22 ], [ false, %19 ], [ false, %21 ], [ false, %21 ], [ false, %21 ]
  br i1 %10, label %28, label %75

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = bitcast %"class.rx::ContextImpl"** %29 to %"class.rx::ContextVk"**
  %31 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %30, align 8
  tail call void @_ZN2rx8BufferVk7releaseEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %31) #11
  %32 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %31, i64 0, i32 1, i32 1
  %33 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %32, align 8
  %34 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %33, i64 0, i32 7, i32 27, i32 4
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i32 503, i32 2551
  %38 = tail call i8* @_Znwm(i64 104) #12
  %39 = bitcast i8* %38 to %"class.rx::vk::BufferHelper"*
  tail call void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"* nonnull %39) #11
  %40 = bitcast %struct.VkBufferCreateInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 48, i1 false) #11
  %41 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 0
  store i32 12, i32* %41, align 8
  %42 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 2
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 3
  store i64 %5, i64* %43, align 8
  %44 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 4
  store i32 %37, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 5
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 6
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %9, i64 0, i32 7
  store i32* null, i32** %47, align 8
  %48 = call i32 @_ZN2rx2vk12BufferHelper12initExternalEPNS_9ContextVkEjRK18VkBufferCreateInfoPv(%"class.rx::vk::BufferHelper"* nonnull %39, %"class.rx::ContextVk"* %31, i32 %26, %struct.VkBufferCreateInfo* nonnull dereferenceable(56) %9, i8* nonnull %3) #11
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %55

50:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #11
  %51 = bitcast i8* %38 to void (%"class.rx::vk::BufferHelper"*)***
  %52 = load void (%"class.rx::vk::BufferHelper"*)**, void (%"class.rx::vk::BufferHelper"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.rx::vk::BufferHelper"*)*, void (%"class.rx::vk::BufferHelper"*)** %52, i64 1
  %54 = load void (%"class.rx::vk::BufferHelper"*)*, void (%"class.rx::vk::BufferHelper"*)** %53, align 8
  call void %54(%"class.rx::vk::BufferHelper"* nonnull %39) #11
  br label %77

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %57 = bitcast %"class.rx::vk::BufferHelper"** %56 to i8**
  store i8* %38, i8** %57, align 8
  %58 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  store i64 0, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #11
  %59 = getelementptr inbounds i8, i8* %38, i64 64
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %55
  %65 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %30, align 8
  br i1 %27, label %66, label %71, !prof !3

66:                                               ; preds = %64
  %67 = bitcast %"class.rx::ContextVk"* %65 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %68 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %68, i64 67
  %70 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %69, align 8
  call void %70(%"class.rx::ContextVk"* %65, i32 -5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__._ZN2rx8BufferVk21setDataWithUsageFlagsEPKN2gl7ContextENS1_13BufferBindingEPvPKvmNS1_11BufferUsageEj, i64 0, i64 0), i32 363) #11
  br label %77

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  %73 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %65, i64 0, i32 1, i32 1
  %74 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %73, align 8
  call void @_ZN2rx2vk13DynamicBuffer13initWithFlagsEPNS_10RendererVkEjmmjNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %72, %"class.rx::RendererVk"* %74, i32 3, i64 1, i64 0, i32 6, i32 2) #11
  br label %77

75:                                               ; preds = %25
  %76 = tail call i32 @_ZN2rx8BufferVk21setDataWithMemoryTypeEPKN2gl7ContextENS1_13BufferBindingEPKvmjbNS1_11BufferUsageE(%"class.rx::BufferVk"* %0, %"class.gl::Context"* %1, i8 zeroext %2, i8* %4, i64 %5, i32 %26, i1 zeroext %27, i8 zeroext %6)
  br label %77

77:                                               ; preds = %55, %66, %50, %71, %75
  %78 = phi i32 [ 1, %66 ], [ 1, %50 ], [ %76, %75 ], [ 0, %71 ], [ 0, %55 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk21setDataWithMemoryTypeEPKN2gl7ContextENS1_13BufferBindingEPKvmjbNS1_11BufferUsageE(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i8* readonly, i64, i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %11 = bitcast %"class.rx::ContextImpl"** %10 to %"class.rx::ContextVk"**
  %12 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %12, i64 0, i32 1, i32 1
  %14 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %13, align 8
  %15 = icmp eq i64 %4, 0
  br i1 %15, label %88, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %18, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %4
  br i1 %21, label %82, label %22

22:                                               ; preds = %16
  tail call void @_ZN2rx8BufferVk7releaseEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %12)
  %23 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %13, align 8
  %24 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %23, i64 0, i32 7, i32 27, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 511, i32 2559
  %28 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 16, i32 7, i32 68
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 16, i32 7, i32 69
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 16, i32 7, i32 67
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 16, i32 7, i32 66
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %29, %31
  %37 = select i1 %36, i64 %31, i64 %29
  %38 = icmp ult i64 %37, %33
  %39 = select i1 %38, i64 %33, i64 %37
  %40 = icmp ult i64 %39, %35
  %41 = select i1 %40, i64 %35, i64 %39
  %42 = icmp ult i8 %7, 3
  %43 = add i64 %4, -1
  %44 = add i64 %43, %41
  br i1 %42, label %45, label %50

45:                                               ; preds = %22
  %46 = urem i64 %44, %41
  %47 = sub i64 %44, %46
  %48 = urem i64 4096, %47
  %49 = sub nuw nsw i64 4096, %48
  br label %50

50:                                               ; preds = %22, %45
  %51 = phi i64 [ %49, %45 ], [ 0, %22 ]
  %52 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  tail call void @_ZN2rx2vk13DynamicBuffer13initWithFlagsEPNS_10RendererVkEjmmjNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %52, %"class.rx::RendererVk"* %14, i32 %27, i64 %41, i64 %51, i32 %5, i32 1) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 0, i8* %9, align 1
  %53 = add i64 %4, 3
  %54 = and i64 %53, -4
  %55 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %56 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 8
  %57 = load i64, i64* %56, align 8
  %58 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %52, %"class.rx::ContextVk"* %12, i64 %54, i64 %57, i8** null, %struct.VkBuffer_T** null, i64* %55, i8* nonnull %9) #11
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %64, label %60

60:                                               ; preds = %50
  %61 = load i8, i8* %9, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %52, %"class.rx::ContextVk"* %12) #11
  br label %65

64:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  br label %88

65:                                               ; preds = %63, %60
  %66 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0
  %67 = bitcast %"class.rx::vk::BufferHelper"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %70 = bitcast %"class.rx::vk::BufferHelper"** %69 to i64*
  store i64 %68, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  br i1 %6, label %82, label %71

71:                                               ; preds = %65
  %72 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %13, align 8
  %73 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %72, i64 0, i32 7, i32 44, i32 4
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp ne i8 %74, 0
  %76 = icmp eq i8 %2, 8
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %82

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6
  call void @_ZN2rx2vk19DynamicShadowBuffer4initEm(%"class.rx::vk::DynamicShadowBuffer"* %79, i64 %4) #11
  %80 = call i32 @_ZN2rx2vk19DynamicShadowBuffer8allocateEm(%"class.rx::vk::DynamicShadowBuffer"* %79, i64 %4) #11
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %88, label %82

82:                                               ; preds = %71, %78, %65, %16
  %83 = icmp eq i8* %3, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %82
  %85 = call i32 @_ZN2rx8BufferVk11setDataImplEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %12, i8* nonnull %3, i64 %4, i64 0)
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %88, label %87

87:                                               ; preds = %84, %82
  br label %88

88:                                               ; preds = %78, %84, %64, %8, %87
  %89 = phi i32 [ 0, %87 ], [ 1, %84 ], [ 0, %8 ], [ 1, %64 ], [ 1, %78 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk7setDataEPKN2gl7ContextENS1_13BufferBindingEPKvmNS1_11BufferUsageE(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i8* readonly, i64, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = icmp ne i8 %2, 8
  %8 = icmp ult i8 %5, 9
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = sext i8 %5 to i64
  %12 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table._ZN2rx8BufferVk7setDataEPKN2gl7ContextENS1_13BufferBindingEPKvmNS1_11BufferUsageE, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %6, %10
  %15 = phi i32 [ 14, %6 ], [ %13, %10 ]
  %16 = tail call i32 @_ZN2rx8BufferVk21setDataWithMemoryTypeEPKN2gl7ContextENS1_13BufferBindingEPKvmjbNS1_11BufferUsageE(%"class.rx::BufferVk"* %0, %"class.gl::Context"* %1, i8 zeroext %2, i8* %3, i64 %4, i32 %15, i1 zeroext false, i8 zeroext %5)
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk19acquireBufferHelperEPNS_9ContextVkEm(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %5 = add i64 %2, 3
  %6 = and i64 %5, -4
  %7 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 8
  %10 = load i64, i64* %9, align 8
  %11 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %7, %"class.rx::ContextVk"* %1, i64 %6, i64 %10, i8** null, %struct.VkBuffer_T** null, i64* %8, i8* nonnull %4) #11
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %23, label %13

13:                                               ; preds = %3
  %14 = load i8, i8* %4, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %7, %"class.rx::ContextVk"* %1) #11
  br label %17

17:                                               ; preds = %13, %16
  %18 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0
  %19 = bitcast %"class.rx::vk::BufferHelper"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %22 = bitcast %"class.rx::vk::BufferHelper"** %21 to i64*
  store i64 %20, i64* %22, align 8
  br label %23

23:                                               ; preds = %3, %17
  %24 = phi i32 [ 0, %17 ], [ 1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk11setDataImplEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.VkBufferCopy, align 8
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %2, i64 %3, i1 false) #11
  br label %16

16:                                               ; preds = %5, %12
  %17 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %18 = bitcast %"class.rx::vk::BufferHelper"** %17 to %"class.rx::vk::Resource"**
  %19 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %18, align 8
  %20 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %21 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %20, align 8
  %22 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 49, i32 4
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 66
  %27 = tail call i64 @_ZNK2rx2vk16CommandProcessor27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandProcessor"* %26) #11
  br label %32

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 62
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %29) #11
  %30 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 63
  %31 = tail call i64 @_ZNK2rx2vk12CommandQueue27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandQueue"* %30) #11
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %29) #11
  br label %32

32:                                               ; preds = %25, %28
  %33 = phi i64 [ %27, %25 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %19, i64 0, i32 1, i32 0
  %35 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %34, align 8
  %36 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %35, i64 0, i32 1, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, %33
  br i1 %42, label %43, label %85

43:                                               ; preds = %32, %39
  %44 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %45 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %44, i64 0, i32 2, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %58

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %50 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %49, align 8
  %51 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %50, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = lshr i64 %52, 1
  %54 = icmp ult i64 %53, %3
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = tail call i32 @_ZN2rx8BufferVk16acquireAndUpdateEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %1, i8* %2, i64 %3, i64 %4)
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %99, label %88

58:                                               ; preds = %43, %48
  %59 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  store i8* null, i8** %6, align 8
  %60 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  store i64 0, i64* %7, align 8
  %61 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82
  %62 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 8
  %63 = load i64, i64* %62, align 8
  %64 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %61, %"class.rx::ContextVk"* %1, i64 %3, i64 %63, i8** nonnull %6, %struct.VkBuffer_T** null, i64* nonnull %7, i8* null) #11
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %70, label %66

66:                                               ; preds = %58
  %67 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %2, i64 %3, i1 false) #11
  %68 = call i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %61, %"class.rx::ContextVk"* %1) #11
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %71

70:                                               ; preds = %66, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br label %99

71:                                               ; preds = %66
  %72 = bitcast %struct.VkBufferCopy* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 0
  %74 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 1
  %75 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 2
  %76 = load i64, i64* %7, align 8
  store i64 %76, i64* %73, align 8
  %77 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, %4
  store i64 %79, i64* %74, align 8
  store i64 %3, i64* %75, align 8
  %80 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %81 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %81, align 8
  %83 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %80, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %82, i32 1, %struct.VkBufferCopy* nonnull %8) #11
  %84 = icmp eq i32 %83, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br i1 %84, label %99, label %88

85:                                               ; preds = %39
  %86 = tail call i32 @_ZN2rx8BufferVk12updateBufferEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %1, i8* %2, i64 %3, i64 %4)
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %99, label %88

88:                                               ; preds = %55, %85, %71
  %89 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %90 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %89, align 8
  %91 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %92 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %91, align 8
  %93 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %90, %92
  br i1 %93, label %99, label %94

94:                                               ; preds = %88, %94
  %95 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %97, %94 ], [ %90, %88 ]
  %96 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %95, i64 0, i32 0, i32 0
  store i8 1, i8* %96, align 8
  %97 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %95, i64 1
  %98 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %97, %92
  br i1 %98, label %99, label %94

99:                                               ; preds = %94, %55, %85, %88, %70, %71
  %100 = phi i32 [ 1, %55 ], [ 1, %85 ], [ 1, %70 ], [ 1, %71 ], [ 0, %88 ], [ 0, %94 ]
  ret i32 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk10setSubDataEPKN2gl7ContextENS1_13BufferBindingEPKvmm(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i8* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = bitcast %"class.rx::ContextImpl"** %7 to %"class.rx::ContextVk"**
  %9 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %8, align 8
  %10 = tail call i32 @_ZN2rx8BufferVk11setDataImplEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %9, i8* %3, i64 %4, i64 %5)
  %11 = icmp eq i32 %10, 1
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk11copySubDataEPKN2gl7ContextEPNS_10BufferImplElll(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, %"class.rx::BufferImpl"*, i64, i64, i64) unnamed_addr #0 align 2 {
  %7 = alloca i8*, align 8
  %8 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = bitcast %"class.rx::ContextImpl"** %9 to %"class.rx::ContextVk"**
  %11 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %10, align 8
  %12 = bitcast %"class.rx::BufferImpl"* %2 to %"class.rx::BufferVk"*
  %13 = getelementptr inbounds %"class.rx::BufferImpl", %"class.rx::BufferImpl"* %2, i64 1, i32 0, i32 1
  %14 = bitcast %"class.angle::FastVector"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.rx::BufferImpl", %"class.rx::BufferImpl"* %2, i64 1
  %17 = bitcast %"class.rx::BufferImpl"* %16 to %"class.rx::vk::BufferHelper"**
  %18 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %19 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 0
  br i1 %21, label %75, label %23

23:                                               ; preds = %6
  %24 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %25 = getelementptr inbounds %"class.rx::BufferImpl", %"class.rx::BufferImpl"* %2, i64 3, i32 0, i32 1, i32 0, i32 0, i64 5
  %26 = bitcast %"class.angle::ObserverBindingBase"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %58

29:                                               ; preds = %23
  %30 = tail call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %22, %"class.rx::ContextVk"* %11, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #11
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %71, label %32

32:                                               ; preds = %29
  %33 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %34 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %32
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, %3
  %41 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %33, i64 0, i32 2, i32 4
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %52

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %33, i64 0, i32 2
  %46 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %33, i64 0, i32 4
  %47 = load i64, i64* %46, align 8
  %48 = tail call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %45, %"class.rx::ContextVk"* %11, i64 %47) #11
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %71, label %50

50:                                               ; preds = %44
  %51 = load i8*, i8** %41, align 8
  br label %52

52:                                               ; preds = %50, %38
  %53 = phi i8* [ %51, %50 ], [ %42, %38 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %40
  store i8* %54, i8** %7, align 8
  br label %63

55:                                               ; preds = %32
  %56 = call i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"* %12, %"class.rx::ContextVk"* %11, i64 %3, i64 %5, i8** nonnull %7) #11
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %71, label %63

58:                                               ; preds = %23
  %59 = getelementptr inbounds %"class.rx::BufferImpl", %"class.rx::BufferImpl"* %2, i64 3, i32 0, i32 1, i32 0, i32 0, i64 7
  %60 = bitcast %"class.angle::ObserverBindingBase"** %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %3
  store i8* %62, i8** %7, align 8
  br label %63

63:                                               ; preds = %52, %55, %58
  %64 = load i64, i64* %19, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %7, align 8
  %68 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %67, i64 %5, i1 false) #11
  br label %72

71:                                               ; preds = %44, %29, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %226

72:                                               ; preds = %66, %63
  %73 = call i32 @_ZN2rx8BufferVk9unmapImplEPNS_9ContextVkE(%"class.rx::BufferVk"* %12, %"class.rx::ContextVk"* %11)
  %74 = icmp eq i32 %73, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br i1 %74, label %226, label %75

75:                                               ; preds = %72, %6
  %76 = bitcast %"class.rx::vk::CommandBufferAccess"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %76) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 160, i1 false)
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %8) #11
  %77 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 10, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %80 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %79, align 8
  %81 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %80, i64 0, i32 10, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %75
  call void @_ZN2rx2vk19CommandBufferAccess13onBufferWriteEjNS0_13PipelineStageEPNS0_12BufferHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %8, i32 6144, i16 zeroext 11, %"class.rx::vk::BufferHelper"* %80) #11
  br label %87

85:                                               ; preds = %75
  call void @_ZN2rx2vk19CommandBufferAccess12onBufferReadEjNS0_13PipelineStageEPNS0_12BufferHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %8, i32 2048, i16 zeroext 11, %"class.rx::vk::BufferHelper"* %18) #11
  %86 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %79, align 8
  call void @_ZN2rx2vk19CommandBufferAccess13onBufferWriteEjNS0_13PipelineStageEPNS0_12BufferHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %8, i32 4096, i16 zeroext 11, %"class.rx::vk::BufferHelper"* %86) #11
  br label %87

87:                                               ; preds = %85, %84
  %88 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %11, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %8) #11
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %224, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %11, i64 0, i32 53
  %92 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %91, align 8
  %93 = add i64 %15, %3
  %94 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, %4
  %97 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 1
  %98 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %79, align 8
  %99 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %98, i64 0, i32 1
  %100 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = icmp ult i64 %101, 56
  br i1 %102, label %103, label %193

103:                                              ; preds = %90
  %104 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 2
  %105 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %104, align 8
  %106 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %105, i64 0, i32 2
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %105, i64 0, i32 4
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %107, %109
  %111 = icmp ult i64 %110, 1364
  br i1 %111, label %118, label %112

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %105, i64 0, i32 6
  %114 = bitcast %"struct.angle::PoolAllocator::Header"** %113 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %109
  %117 = add i64 %109, 1364
  store i64 %117, i64* %108, align 8
  br label %120

118:                                              ; preds = %103
  %119 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %105, i64 1364, i64 1364) #11
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i8* [ %116, %112 ], [ %119, %118 ]
  %122 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 3
  store i8* %121, i8** %122, align 8
  store i64 1364, i64* %100, align 8
  %123 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 1
  %124 = ptrtoint i8* %121 to i64
  %125 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 1, i32 0, i32 1
  %126 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %125, align 8
  %127 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %128 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %127, align 8
  %129 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %126, %128
  %130 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %128 to i64
  br i1 %129, label %131, label %136

131:                                              ; preds = %120
  %132 = bitcast %"struct.rx::vk::priv::CommandHeader"** %126 to i64*
  store i64 %124, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %126, i64 1
  %134 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %133 to i64
  %135 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %125 to i64*
  store i64 %134, i64* %135, align 8
  br label %193

136:                                              ; preds = %120
  %137 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %126 to i64
  %138 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %125 to i64*
  %139 = bitcast %"class.std::__1::vector.764"* %123 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %137, %140
  %142 = ashr exact i64 %141, 3
  %143 = add nsw i64 %142, 1
  %144 = icmp ugt i64 %143, 2305843009213693951
  br i1 %144, label %145, label %147

145:                                              ; preds = %136
  %146 = bitcast %"class.std::__1::vector.764"* %123 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #13
  unreachable

147:                                              ; preds = %136
  %148 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %127 to i64*
  %149 = sub i64 %130, %140
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 1152921504606846975
  br i1 %151, label %152, label %160

152:                                              ; preds = %147
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %143
  %155 = select i1 %154, i64 %143, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 2305843009213693951
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  call void @abort() #13
  unreachable

160:                                              ; preds = %157, %147
  %161 = phi i64 [ %155, %157 ], [ 2305843009213693951, %147 ]
  %162 = shl i64 %161, 3
  %163 = call i8* @_Znwm(i64 %162) #12
  %164 = bitcast i8* %163 to %"struct.rx::vk::priv::CommandHeader"**
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi %"struct.rx::vk::priv::CommandHeader"** [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %167, i64 %142
  %169 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %167, i64 %166
  %170 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %169 to i64
  %171 = bitcast %"struct.rx::vk::priv::CommandHeader"** %168 to i64*
  store i64 %124, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %168, i64 1
  %173 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %172 to i64
  %174 = getelementptr inbounds %"class.std::__1::vector.764", %"class.std::__1::vector.764"* %123, i64 0, i32 0, i32 0
  %175 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %174, align 8
  %176 = load i64, i64* %138, align 8
  %177 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %175 to i64
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = sub nsw i64 0, %179
  %181 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %168, i64 %180
  %182 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %181 to i64
  %183 = icmp sgt i64 %178, 0
  br i1 %183, label %184, label %188

184:                                              ; preds = %165
  %185 = bitcast %"struct.rx::vk::priv::CommandHeader"** %181 to i8*
  %186 = bitcast %"struct.rx::vk::priv::CommandHeader"** %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 %178, i1 false) #11
  %187 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %174, align 8
  br label %188

188:                                              ; preds = %184, %165
  %189 = phi %"struct.rx::vk::priv::CommandHeader"** [ %175, %165 ], [ %187, %184 ]
  store i64 %182, i64* %139, align 8
  store i64 %173, i64* %138, align 8
  store i64 %170, i64* %148, align 8
  %190 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %188
  %192 = bitcast %"struct.rx::vk::priv::CommandHeader"** %189 to i8*
  call void @_ZdlPv(i8* %192) #12
  br label %193

193:                                              ; preds = %90, %131, %188, %191
  %194 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %92, i64 0, i32 4, i32 3
  %195 = load i8*, i8** %194, align 8
  %196 = load i64, i64* %100, align 8
  %197 = add i64 %196, -52
  store i64 %197, i64* %100, align 8
  %198 = bitcast i8* %195 to i16*
  store i16 15, i16* %198, align 2
  %199 = getelementptr inbounds i8, i8* %195, i64 2
  %200 = bitcast i8* %199 to i16*
  store i16 52, i16* %200, align 2
  %201 = load i8*, i8** %194, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 52
  store i8* %202, i8** %194, align 8
  %203 = bitcast i8* %202 to i16*
  store i16 0, i16* %203, align 2
  %204 = getelementptr inbounds i8, i8* %195, i64 4
  %205 = bitcast %"class.rx::vk::Buffer"* %97 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast i8* %204 to i64*
  store i64 %206, i64* %207, align 8
  %208 = bitcast %"class.rx::vk::Buffer"* %99 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = getelementptr inbounds i8, i8* %195, i64 12
  %211 = bitcast i8* %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = getelementptr inbounds i8, i8* %195, i64 20
  %213 = bitcast i8* %212 to i32*
  store i32 1, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %195, i64 28
  %215 = bitcast i8* %214 to i64*
  store i64 %93, i64* %215, align 1
  %216 = getelementptr inbounds i8, i8* %195, i64 36
  %217 = bitcast i8* %216 to i64*
  store i64 %96, i64* %217, align 1
  %218 = getelementptr inbounds i8, i8* %195, i64 44
  %219 = bitcast i8* %218 to i64*
  store i64 %5, i64* %219, align 1
  %220 = bitcast %"class.rx::BufferVk"* %0 to void (%"class.rx::BufferVk"*)***
  %221 = load void (%"class.rx::BufferVk"*)**, void (%"class.rx::BufferVk"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.rx::BufferVk"*)*, void (%"class.rx::BufferVk"*)** %221, i64 13
  %223 = load void (%"class.rx::BufferVk"*)*, void (%"class.rx::BufferVk"*)** %222, align 8
  call void %223(%"class.rx::BufferVk"* %0) #11
  br label %224

224:                                              ; preds = %87, %193
  %225 = phi i32 [ 0, %193 ], [ 1, %87 ]
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %76) #11
  br label %226

226:                                              ; preds = %72, %71, %224
  %227 = phi i32 [ %225, %224 ], [ 1, %72 ], [ 1, %71 ]
  ret i32 %227
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk12mapRangeImplEPNS_9ContextVkEmmjPPv(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i64, i64, i32, i8**) local_unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %106

11:                                               ; preds = %6
  %12 = and i32 %4, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %69, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %16 = bitcast %"class.rx::vk::BufferHelper"** %15 to %"class.rx::vk::Resource"**
  %17 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %19 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %18, align 8
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 7, i32 49, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 66
  %25 = tail call i64 @_ZNK2rx2vk16CommandProcessor27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandProcessor"* %24) #11
  br label %30

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 62
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %27) #11
  %28 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 63
  %29 = tail call i64 @_ZNK2rx2vk12CommandQueue27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandQueue"* %28) #11
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %27) #11
  br label %30

30:                                               ; preds = %23, %26
  %31 = phi i64 [ %25, %23 ], [ %29, %26 ]
  %32 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %17, i64 0, i32 1, i32 0
  %33 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %32, align 8
  %34 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %35, 1
  br i1 %36, label %41, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %33, i64 0, i32 1, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %31
  br i1 %40, label %41, label %69

41:                                               ; preds = %30, %37
  %42 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %15, align 8
  %43 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %42, i64 0, i32 2, i32 3
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %69

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %48 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %47, align 8
  %49 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %48, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %51 = add i64 %50, 3
  %52 = and i64 %51, -4
  %53 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  %54 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %55 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 8
  %56 = load i64, i64* %55, align 8
  %57 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %53, %"class.rx::ContextVk"* %1, i64 %52, i64 %56, i8** null, %struct.VkBuffer_T** null, i64* %54, i8* nonnull %7) #11
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %68, label %59

59:                                               ; preds = %46
  %60 = load i8, i8* %7, align 1, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %53, %"class.rx::ContextVk"* %1) #11
  br label %63

63:                                               ; preds = %62, %59
  %64 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0
  %65 = bitcast %"class.rx::vk::BufferHelper"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.rx::vk::BufferHelper"** %15 to i64*
  store i64 %66, i64* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  br label %78

68:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  br label %113

69:                                               ; preds = %41, %11, %37
  %70 = and i32 %4, 32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %74 = bitcast %"class.rx::vk::BufferHelper"** %73 to %"class.rx::vk::Resource"**
  %75 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %74, align 8
  %76 = tail call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %75, %"class.rx::ContextVk"* %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #11
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %113, label %78

78:                                               ; preds = %72, %63, %69
  %79 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %80 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %79, align 8
  %81 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %80, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, %2
  %89 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %80, i64 0, i32 2, i32 4
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %80, i64 0, i32 2
  %94 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %80, i64 0, i32 4
  %95 = load i64, i64* %94, align 8
  %96 = call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %93, %"class.rx::ContextVk"* %1, i64 %95) #11
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %113, label %98

98:                                               ; preds = %92
  %99 = load i8*, i8** %89, align 8
  br label %100

100:                                              ; preds = %85, %98
  %101 = phi i8* [ %99, %98 ], [ %90, %85 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 %88
  br label %110

103:                                              ; preds = %78
  %104 = call i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %1, i64 %2, i64 %3, i8** %5)
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %113, label %112

106:                                              ; preds = %6
  %107 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %2
  br label %110

110:                                              ; preds = %106, %100
  %111 = phi i8* [ %102, %100 ], [ %109, %106 ]
  store i8* %111, i8** %5, align 8
  br label %112

112:                                              ; preds = %110, %103
  br label %113

113:                                              ; preds = %72, %103, %92, %68, %112
  %114 = phi i32 [ 0, %112 ], [ 1, %103 ], [ 1, %68 ], [ 1, %72 ], [ 1, %92 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk9unmapImplEPNS_9ContextVkE(%"class.rx::BufferVk"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.VkBufferCopy, align 8
  %6 = alloca %struct.VkBufferCopy, align 8
  %7 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2
  %12 = icmp ne i32 %11, 0
  %13 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %18 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %19 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %25 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %24, align 8
  tail call void @_ZN2rx2vk12BufferHelper5unmapEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %18, %"class.rx::RendererVk"* %25) #11
  br i1 %12, label %79, label %90

26:                                               ; preds = %16, %2
  %27 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %8, i64 0, i32 9
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %8, i64 0, i32 10
  %30 = load i64, i64* %29, align 8
  br i1 %12, label %31, label %90

31:                                               ; preds = %26
  br i1 %15, label %32, label %63

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %3, align 8
  %36 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  store i64 0, i64* %4, align 8
  %37 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82
  %38 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 8
  %39 = load i64, i64* %38, align 8
  %40 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %37, %"class.rx::ContextVk"* %1, i64 %30, i64 %39, i8** nonnull %3, %struct.VkBuffer_T** null, i64* nonnull %4, i8* null) #11
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %47, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds i8, i8* %34, i64 %28
  %44 = load i8*, i8** %3, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %43, i64 %30, i1 false) #11
  %45 = call i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %37, %"class.rx::ContextVk"* %1) #11
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %48

47:                                               ; preds = %42, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %90

48:                                               ; preds = %42
  %49 = bitcast %struct.VkBufferCopy* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 0
  %51 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 1
  %52 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 2
  %53 = load i64, i64* %4, align 8
  store i64 %53, i64* %50, align 8
  %54 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, %28
  store i64 %56, i64* %51, align 8
  store i64 %30, i64* %52, align 8
  %57 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %58 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %57, align 8
  %59 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %59, align 8
  %61 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %58, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %60, i32 1, %struct.VkBufferCopy* nonnull %5) #11
  %62 = icmp eq i32 %61, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br i1 %62, label %90, label %79

63:                                               ; preds = %31
  %64 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %64, align 8
  %66 = bitcast %struct.VkBufferCopy* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %6, i64 0, i32 0
  %68 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %6, i64 0, i32 1
  %69 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %6, i64 0, i32 2
  %70 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 5
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %67, align 8
  %72 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %28
  store i64 %74, i64* %68, align 8
  store i64 %30, i64* %69, align 8
  %75 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %76 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %75, align 8
  %77 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %76, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %65, i32 1, %struct.VkBufferCopy* nonnull %6) #11
  %78 = icmp eq i32 %77, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  br i1 %78, label %90, label %79

79:                                               ; preds = %48, %63, %23
  %80 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %81 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %80, align 8
  %82 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %83 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %82, align 8
  %84 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %81, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %79, %85
  %86 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %88, %85 ], [ %81, %79 ]
  %87 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %86, i64 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %86, i64 1
  %89 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %88, %83
  br i1 %89, label %90, label %85

90:                                               ; preds = %85, %48, %63, %47, %26, %79, %23
  %91 = phi i32 [ 0, %23 ], [ 0, %79 ], [ 0, %26 ], [ 1, %63 ], [ 1, %48 ], [ 1, %47 ], [ 0, %85 ]
  ret i32 %91
}

declare void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i64, i64, i8**) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %struct.VkBufferCopy, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %8, %"class.rx::ContextVk"* %1, i64 %3, i64 %11, i8** %4, %struct.VkBuffer_T** null, i64* %9, i8* nonnull %6) #11
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %40, label %14

14:                                               ; preds = %5
  %15 = load i8, i8* %6, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %8, %"class.rx::ContextVk"* %1) #11
  br label %18

18:                                               ; preds = %14, %17
  %19 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %19, align 8
  %21 = bitcast %struct.VkBufferCopy* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 0
  %23 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 1
  %24 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 2
  %25 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %2
  store i64 %27, i64* %22, align 8
  %28 = load i64, i64* %9, align 8
  store i64 %28, i64* %23, align 8
  store i64 %3, i64* %24, align 8
  %29 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %30 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %29, align 8
  %31 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %20, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %30, i32 1, %struct.VkBufferCopy* nonnull %7) #11
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %38, label %33

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %20, i64 0, i32 0
  %35 = call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %34, %"class.rx::ContextVk"* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0)) #11
  %36 = icmp eq i32 %35, 1
  %37 = zext i1 %36 to i32
  br label %38

38:                                               ; preds = %18, %33
  %39 = phi i32 [ 1, %18 ], [ %37, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %40

40:                                               ; preds = %5, %38
  %41 = phi i32 [ %39, %38 ], [ 1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  ret i32 %41
}

declare void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

declare i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*, %"class.rx::vk::BufferHelper"*, i32, %struct.VkBufferCopy*) local_unnamed_addr #1

declare i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"*, %"class.rx::ContextVk"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk28handleDeviceLocalBufferUnmapEPNS_9ContextVkEmm(%"class.rx::BufferVk"* nocapture readonly, %"class.rx::ContextVk"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkBufferCopy, align 8
  %6 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %6, align 8
  %8 = bitcast %struct.VkBufferCopy* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 0
  %10 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %5, i64 0, i32 2
  %12 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %9, align 8
  %14 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %2
  store i64 %16, i64* %10, align 8
  store i64 %3, i64* %11, align 8
  %17 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %18 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %17, align 8
  %19 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %18, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %7, i32 1, %struct.VkBufferCopy* nonnull %5) #11
  %20 = icmp eq i32 %19, 1
  %21 = zext i1 %20 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk3mapEPKN2gl7ContextEjPPv(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i32, i8**) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  %8 = tail call i32 @_ZN2rx8BufferVk7mapImplEPNS_9ContextVkEPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %7, i8** %3)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk7mapImplEPNS_9ContextVkEPPv(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i8**) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %5, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %13 = bitcast %"class.rx::vk::BufferHelper"** %12 to %"class.rx::vk::Resource"**
  %14 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %13, align 8
  %15 = tail call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %14, %"class.rx::ContextVk"* %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #11
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %49, label %17

17:                                               ; preds = %11
  %18 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %12, align 8
  %19 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %40, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 2, i32 4
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 2
  %31 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %18, i64 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = tail call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %30, %"class.rx::ContextVk"* %1, i64 %32) #11
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %49, label %35

35:                                               ; preds = %29
  %36 = load i8*, i8** %26, align 8
  br label %37

37:                                               ; preds = %35, %23
  %38 = phi i8* [ %36, %35 ], [ %27, %23 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %25
  store i8* %39, i8** %2, align 8
  br label %48

40:                                               ; preds = %17
  %41 = tail call i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %1, i64 0, i64 %7, i8** %2) #11
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %49, label %48

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast i8** %2 to i64*
  store i64 %46, i64* %47, align 8
  br label %48

48:                                               ; preds = %43, %40, %37
  br label %49

49:                                               ; preds = %11, %29, %40, %48
  %50 = phi i32 [ 0, %48 ], [ 1, %40 ], [ 1, %11 ], [ 1, %29 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPv(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i64, i64, i32, i8**) unnamed_addr #0 align 2 {
  %7 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580 to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16, !prof !4

10:                                               ; preds = %6
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %15 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #11
  store i8* %15, i8** @_ZZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580) #11
  br label %16

16:                                               ; preds = %10, %13, %6
  %17 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7, i64 0, i32 1
  %20 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %18, align 8
  %21 = load i8*, i8** @_ZZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580, align 8
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7, i64 0, i32 1, i32 1
  %27 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %28 = load i8*, i8** @_ZZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580, align 8
  %29 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %27, i8 signext 66, i8* %28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  %30 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %31 = load i64, i64* bitcast (i8** @_ZZN2rx8BufferVk8mapRangeEPKN2gl7ContextEmmjPPvE31trace_event_unique_catstatic580 to i64*), align 8
  %32 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %32, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %30, %"struct.angle::PlatformMethods"** %33, align 8
  %34 = bitcast i8** %26 to i64*
  store i64 %31, i64* %34, align 8
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8** %25, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %32, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %18, align 8
  br label %35

35:                                               ; preds = %16, %24
  %36 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %37 = bitcast %"class.rx::ContextImpl"** %36 to %"class.rx::ContextVk"**
  %38 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %37, align 8
  %39 = call i32 @_ZN2rx8BufferVk12mapRangeImplEPNS_9ContextVkEmmjPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %38, i64 %2, i64 %3, i32 %4, i8** %5)
  %40 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %18, align 8
  %41 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %40, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %40, i64 0, i32 0
  %49 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %48, align 8
  %50 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %40, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %49, i8 signext 69, i8* %44, i8* %51, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  br label %53

53:                                               ; preds = %35, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #11
  ret i32 %39
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

declare i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"*, i8*) local_unnamed_addr #1

declare %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk5unmapEPKN2gl7ContextEPh(%"class.rx::BufferVk"* nocapture readonly, %"class.gl::Context"* nocapture readonly, i8* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast %"class.rx::ContextImpl"** %4 to %"class.rx::ContextVk"**
  %6 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %5, align 8
  %7 = tail call i32 @_ZN2rx8BufferVk9unmapImplEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %6)
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  store i8 1, i8* %2, align 1
  br label %10

10:                                               ; preds = %3, %9
  %11 = phi i32 [ 0, %9 ], [ 1, %3 ]
  ret i32 %11
}

declare void @_ZN2rx2vk12BufferHelper5unmapEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"*, %"class.rx::RendererVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk12stagedUpdateEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* nocapture readonly, %"class.rx::ContextVk"*, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.VkBufferCopy, align 8
  %9 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i8* null, i8** %6, align 8
  %10 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 0, i64* %7, align 8
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82
  %12 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %11, %"class.rx::ContextVk"* %1, i64 %3, i64 %13, i8** nonnull %6, %struct.VkBuffer_T** null, i64* nonnull %7, i8* null) #11
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %36, label %16

16:                                               ; preds = %5
  %17 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %2, i64 %3, i1 false)
  %18 = call i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %11, %"class.rx::ContextVk"* %1) #11
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.VkBufferCopy* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 0
  %23 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 1
  %24 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 2
  %25 = load i64, i64* %7, align 8
  store i64 %25, i64* %22, align 8
  %26 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %4
  store i64 %28, i64* %23, align 8
  store i64 %3, i64* %24, align 8
  %29 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %30 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %29, align 8
  %31 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %31, align 8
  %33 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %30, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %32, i32 1, %struct.VkBufferCopy* nonnull %8) #11
  %34 = icmp eq i32 %33, 1
  %35 = zext i1 %34 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %36

36:                                               ; preds = %16, %5, %20
  %37 = phi i32 [ %35, %20 ], [ 1, %16 ], [ 1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk26markConversionBuffersDirtyEv(%"class.rx::BufferVk"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %4, align 8
  %6 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %1
  ret void

8:                                                ; preds = %1, %8
  %9 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %11, %8 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %9, i64 0, i32 0, i32 0
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %9, i64 1
  %12 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %11, %5
  br i1 %12, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk10getSubDataEPKN2gl7ContextEllPv(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i64, i64, i8* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %54

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = bitcast %"class.rx::ContextImpl"** %11 to %"class.rx::ContextVk"**
  %13 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %12, align 8
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %15 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %16 = bitcast %"class.rx::vk::BufferHelper"** %15 to %"class.rx::vk::Resource"**
  %17 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %16, align 8
  %18 = tail call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %17, %"class.rx::ContextVk"* %13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #11
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %49, label %20

20:                                               ; preds = %10
  %21 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %15, align 8
  %22 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %2
  %30 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %21, i64 0, i32 2, i32 4
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %21, i64 0, i32 2
  %35 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %21, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = tail call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %34, %"class.rx::ContextVk"* %13, i64 %36) #11
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = load i8*, i8** %30, align 8
  br label %41

41:                                               ; preds = %39, %26
  %42 = phi i8* [ %40, %39 ], [ %31, %26 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %29
  store i8* %43, i8** %6, align 8
  br label %50

44:                                               ; preds = %20
  %45 = call i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %13, i64 %2, i64 %3, i8** nonnull %6) #11
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = load i8*, i8** %6, align 8
  br label %50

49:                                               ; preds = %33, %10, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %59

50:                                               ; preds = %47, %41
  %51 = phi i8* [ %48, %47 ], [ %43, %41 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %51, i64 %3, i1 false)
  %52 = call i32 @_ZN2rx8BufferVk9unmapImplEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %13)
  %53 = icmp eq i32 %52, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br i1 %53, label %59, label %58

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %57, i64 %3, i1 false)
  br label %58

58:                                               ; preds = %50, %54
  br label %59

59:                                               ; preds = %50, %49, %58
  %60 = phi i32 [ 0, %58 ], [ 1, %50 ], [ 1, %49 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeE(%"class.rx::BufferVk"*, %"class.gl::Context"* nocapture readonly, i64, i64, i64, i1 zeroext, %"struct.gl::IndexRange"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"struct.gl::IndexRange", align 8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = bitcast %"class.rx::ContextImpl"** %11 to %"class.rx::ContextVk"**
  %13 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %12, align 8
  %14 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %13, i64 0, i32 1, i32 1
  %15 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %15, i64 0, i32 12
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %7
  %20 = bitcast %"struct.gl::IndexRange"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %120

21:                                               ; preds = %7
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734 to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30, !prof !4

24:                                               ; preds = %21
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %29 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #11
  store i8* %29, i8** @_ZZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734) #11
  br label %30

30:                                               ; preds = %24, %27, %21
  %31 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 0
  %33 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1
  %34 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %32, align 8
  %35 = load i8*, i8** @_ZZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734, align 8
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1, i32 2
  %40 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1, i32 1
  %41 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %42 = load i8*, i8** @_ZZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734, align 8
  %43 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %41, i8 signext 66, i8* %42, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  %44 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #11
  %45 = load i64, i64* bitcast (i8** @_ZZN2rx8BufferVk13getIndexRangeEPKN2gl7ContextENS1_16DrawElementsTypeEmmbPNS1_10IndexRangeEE31trace_event_unique_catstatic734 to i64*), align 8
  %46 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %46, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %44, %"struct.angle::PlatformMethods"** %47, align 8
  %48 = bitcast i8** %40 to i64*
  store i64 %45, i64* %48, align 8
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8** %39, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %46, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %32, align 8
  br label %49

49:                                               ; preds = %30, %38
  %50 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %51 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %52 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %51, align 8
  %53 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %52, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %93

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %60 = bitcast %"class.rx::vk::BufferHelper"** %59 to %"class.rx::vk::Resource"**
  %61 = load %"class.rx::vk::Resource"*, %"class.rx::vk::Resource"** %60, align 8
  %62 = call i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* %61, %"class.rx::ContextVk"* %13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #11
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %104, label %64

64:                                               ; preds = %58
  %65 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %59, align 8
  %66 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %65, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %88, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %3
  %74 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %65, i64 0, i32 2, i32 4
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %65, i64 0, i32 2
  %79 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %65, i64 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %78, %"class.rx::ContextVk"* %13, i64 %80) #11
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %104, label %83

83:                                               ; preds = %77
  %84 = load i8*, i8** %74, align 8
  br label %85

85:                                               ; preds = %83, %70
  %86 = phi i8* [ %84, %83 ], [ %75, %70 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %73
  store i8* %87, i8** %9, align 8
  br label %97

88:                                               ; preds = %64
  %89 = call i32 @_ZN2rx8BufferVk26handleDeviceLocalBufferMapEPNS_9ContextVkEmmPPv(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %13, i64 %3, i64 %54, i8** nonnull %9) #11
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = load i8*, i8** %9, align 8
  br label %97

93:                                               ; preds = %49
  %94 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 6, i32 2, i32 1
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 %3
  store i8* %96, i8** %9, align 8
  br label %97

97:                                               ; preds = %91, %85, %93
  %98 = phi i8* [ %92, %91 ], [ %87, %85 ], [ %96, %93 ]
  %99 = bitcast %"struct.gl::IndexRange"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #11
  call void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* nonnull sret %10, i64 %2, i8* %98, i64 %4, i1 zeroext %5) #11
  %100 = bitcast %"struct.gl::IndexRange"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %99, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #11
  %101 = call i32 @_ZN2rx8BufferVk9unmapImplEPNS_9ContextVkE(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %13)
  %102 = icmp eq i32 %101, 1
  %103 = zext i1 %102 to i32
  br label %104

104:                                              ; preds = %88, %58, %77, %97
  %105 = phi i32 [ %103, %97 ], [ 1, %77 ], [ 1, %58 ], [ 1, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %106 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %32, align 8
  %107 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %106, i64 0, i32 1
  %110 = load i8*, i8** %109, align 8
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %106, i64 0, i32 0
  %115 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %114, align 8
  %116 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %106, i64 0, i32 2
  %117 = load i8*, i8** %116, align 8
  %118 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %115, i8 signext 69, i8* %110, i8* %117, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  br label %119

119:                                              ; preds = %104, %108, %113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  br label %120

120:                                              ; preds = %119, %19
  %121 = phi i32 [ 0, %19 ], [ %105, %119 ]
  ret i32 %121
}

declare void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* sret, i64, i8*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk12updateBufferEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* nocapture readonly, %"class.rx::ContextVk"*, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.VkBufferCopy, align 8
  %9 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %10 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %4
  %19 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %10, i64 0, i32 2, i32 4
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %10, i64 0, i32 2
  %24 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %10, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = tail call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %23, %"class.rx::ContextVk"* %1, i64 %25) #11
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %70, label %28

28:                                               ; preds = %22
  %29 = load i8*, i8** %19, align 8
  br label %30

30:                                               ; preds = %28, %15
  %31 = phi i8* [ %29, %28 ], [ %20, %15 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %2, i64 %3, i1 false) #11
  %33 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %34 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 8
  %37 = icmp ult i8 %36, 3
  br i1 %37, label %70, label %38

38:                                               ; preds = %30
  %39 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %9, align 8
  %40 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %41 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %40, align 8
  tail call void @_ZN2rx2vk12BufferHelper5unmapEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %39, %"class.rx::RendererVk"* %41) #11
  br label %70

42:                                               ; preds = %5
  %43 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store i8* null, i8** %6, align 8
  %44 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store i64 0, i64* %7, align 8
  %45 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82
  %46 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 8
  %47 = load i64, i64* %46, align 8
  %48 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %45, %"class.rx::ContextVk"* %1, i64 %3, i64 %47, i8** nonnull %6, %struct.VkBuffer_T** null, i64* nonnull %7, i8* null) #11
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %54, label %50

50:                                               ; preds = %42
  %51 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %2, i64 %3, i1 false) #11
  %52 = call i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %45, %"class.rx::ContextVk"* %1) #11
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %70

55:                                               ; preds = %50
  %56 = bitcast %struct.VkBufferCopy* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 0
  %58 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 1
  %59 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %8, i64 0, i32 2
  %60 = load i64, i64* %7, align 8
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %4
  store i64 %63, i64* %58, align 8
  store i64 %3, i64* %59, align 8
  %64 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %9, align 8
  %65 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 82, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %65, align 8
  %67 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %64, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %66, i32 1, %struct.VkBufferCopy* nonnull %8) #11
  %68 = icmp eq i32 %67, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %69 = zext i1 %68 to i32
  ret i32 %69

70:                                               ; preds = %38, %30, %54, %22
  %71 = phi i32 [ 1, %22 ], [ 1, %54 ], [ 0, %30 ], [ 0, %38 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk12directUpdateEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* nocapture readonly, %"class.rx::ContextVk"*, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %7 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %4
  %11 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %7, i64 0, i32 2, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %7, i64 0, i32 2
  %16 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %7, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = tail call i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"* %15, %"class.rx::ContextVk"* %1, i64 %17) #11
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %34, label %20

20:                                               ; preds = %14
  %21 = load i8*, i8** %11, align 8
  br label %22

22:                                               ; preds = %20, %5
  %23 = phi i8* [ %21, %20 ], [ %12, %5 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %2, i64 %3, i1 false)
  %25 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %26 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %25, align 8
  %27 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %26, i64 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = icmp ult i8 %28, 3
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %6, align 8
  %32 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %33 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %32, align 8
  tail call void @_ZN2rx2vk12BufferHelper5unmapEPNS_10RendererVkE(%"class.rx::vk::BufferHelper"* %31, %"class.rx::RendererVk"* %33) #11
  br label %34

34:                                               ; preds = %14, %22, %30
  %35 = phi i32 [ 0, %30 ], [ 0, %22 ], [ 1, %14 ]
  ret i32 %35
}

declare i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx8BufferVk16acquireAndUpdateEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"*, %"class.rx::ContextVk"*, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.angle::FixedVector.1282", align 8
  %8 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 1
  %9 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.gl::BufferState"*, %"class.gl::BufferState"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::BufferState", %"class.gl::BufferState"* %11, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %4, %3
  %15 = icmp ne i64 %4, 0
  %16 = icmp ugt i64 %13, %14
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %167

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %9, i64 0, i32 0, i32 1, i32 0
  %20 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %19, align 8
  %21 = ptrtoint %"struct.rx::vk::ResourceUse"* %20 to i64
  %22 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %20, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, 1
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1
  %26 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 1
  %27 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %26, align 8
  %28 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %28, align 8
  %30 = icmp ult %"class.rx::vk::SharedResourceUse"* %27, %29
  %31 = ptrtoint %"class.rx::vk::SharedResourceUse"* %29 to i64
  br i1 %30, label %32, label %37

32:                                               ; preds = %18
  %33 = bitcast %"class.rx::vk::SharedResourceUse"* %27 to i64*
  store i64 %21, i64* %33, align 8
  %34 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %27, i64 1
  %35 = ptrtoint %"class.rx::vk::SharedResourceUse"* %34 to i64
  %36 = bitcast %"class.rx::vk::SharedResourceUse"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %167

37:                                               ; preds = %18
  %38 = ptrtoint %"class.rx::vk::SharedResourceUse"* %27 to i64
  %39 = bitcast %"class.rx::vk::SharedResourceUse"** %26 to i64*
  %40 = bitcast %"class.std::__1::vector.1175"* %25 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 2305843009213693951
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = bitcast %"class.std::__1::vector.1175"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #13
  unreachable

48:                                               ; preds = %37
  %49 = bitcast %"class.rx::vk::SharedResourceUse"** %28 to i64*
  %50 = sub i64 %31, %41
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #13
  unreachable

61:                                               ; preds = %58, %48
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %48 ]
  %63 = shl i64 %62, 3
  %64 = tail call i8* @_Znwm(i64 %63) #12
  %65 = bitcast i8* %64 to %"class.rx::vk::SharedResourceUse"*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi %"class.rx::vk::SharedResourceUse"* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %68, i64 %43
  %70 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %68, i64 %67
  %71 = ptrtoint %"class.rx::vk::SharedResourceUse"* %70 to i64
  %72 = bitcast %"class.rx::vk::SharedResourceUse"* %69 to i64*
  store i64 %21, i64* %72, align 8
  %73 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %69, i64 1
  %74 = ptrtoint %"class.rx::vk::SharedResourceUse"* %73 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.1175", %"class.std::__1::vector.1175"* %25, i64 0, i32 0, i32 0
  %76 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %75, align 8
  %77 = ptrtoint %"class.rx::vk::SharedResourceUse"* %76 to i64
  %78 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %26, align 8
  %79 = icmp eq %"class.rx::vk::SharedResourceUse"* %78, %76
  br i1 %79, label %160, label %80

80:                                               ; preds = %66
  %81 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %78, i64 -1, i32 0
  %82 = ptrtoint %"struct.rx::vk::ResourceUse"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 7
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %80, %88
  %89 = phi %"class.rx::vk::SharedResourceUse"* [ %92, %88 ], [ %69, %80 ]
  %90 = phi %"class.rx::vk::SharedResourceUse"* [ %93, %88 ], [ %78, %80 ]
  %91 = phi i64 [ %98, %88 ], [ %86, %80 ]
  %92 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %89, i64 -1
  %93 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %90, i64 -1
  %94 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %93, i64 0, i32 0
  %95 = bitcast %"class.rx::vk::SharedResourceUse"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.rx::vk::SharedResourceUse"* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %94, align 8
  %98 = add i64 %91, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %88, !llvm.loop !5

100:                                              ; preds = %88, %80
  %101 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %80 ], [ %92, %88 ]
  %102 = phi %"class.rx::vk::SharedResourceUse"* [ %69, %80 ], [ %92, %88 ]
  %103 = phi %"class.rx::vk::SharedResourceUse"* [ %78, %80 ], [ %93, %88 ]
  %104 = icmp ult i64 %83, 56
  br i1 %104, label %157, label %105

105:                                              ; preds = %100, %105
  %106 = phi %"class.rx::vk::SharedResourceUse"* [ %150, %105 ], [ %102, %100 ]
  %107 = phi %"class.rx::vk::SharedResourceUse"* [ %151, %105 ], [ %103, %100 ]
  %108 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -1
  %109 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -1
  %110 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %109, i64 0, i32 0
  %111 = bitcast %"class.rx::vk::SharedResourceUse"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.rx::vk::SharedResourceUse"* %108 to i64*
  store i64 %112, i64* %113, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %110, align 8
  %114 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -2
  %115 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -2
  %116 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %115, i64 0, i32 0
  %117 = bitcast %"class.rx::vk::SharedResourceUse"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.rx::vk::SharedResourceUse"* %114 to i64*
  store i64 %118, i64* %119, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %116, align 8
  %120 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -3
  %121 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -3
  %122 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %121, i64 0, i32 0
  %123 = bitcast %"class.rx::vk::SharedResourceUse"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.rx::vk::SharedResourceUse"* %120 to i64*
  store i64 %124, i64* %125, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %122, align 8
  %126 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -4
  %127 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -4
  %128 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %127, i64 0, i32 0
  %129 = bitcast %"class.rx::vk::SharedResourceUse"* %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.rx::vk::SharedResourceUse"* %126 to i64*
  store i64 %130, i64* %131, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %128, align 8
  %132 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -5
  %133 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -5
  %134 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 0, i32 0
  %135 = bitcast %"class.rx::vk::SharedResourceUse"* %133 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.rx::vk::SharedResourceUse"* %132 to i64*
  store i64 %136, i64* %137, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %134, align 8
  %138 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -6
  %139 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -6
  %140 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %139, i64 0, i32 0
  %141 = bitcast %"class.rx::vk::SharedResourceUse"* %139 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.rx::vk::SharedResourceUse"* %138 to i64*
  store i64 %142, i64* %143, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %140, align 8
  %144 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -7
  %145 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -7
  %146 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %145, i64 0, i32 0
  %147 = bitcast %"class.rx::vk::SharedResourceUse"* %145 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.rx::vk::SharedResourceUse"* %144 to i64*
  store i64 %148, i64* %149, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %146, align 8
  %150 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %106, i64 -8
  %151 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %107, i64 -8
  %152 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %151, i64 0, i32 0
  %153 = bitcast %"class.rx::vk::SharedResourceUse"* %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.rx::vk::SharedResourceUse"* %150 to i64*
  store i64 %154, i64* %155, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %152, align 8
  %156 = icmp eq %"class.rx::vk::SharedResourceUse"* %151, %76
  br i1 %156, label %157, label %105

157:                                              ; preds = %105, %100
  %158 = phi %"class.rx::vk::SharedResourceUse"* [ %101, %100 ], [ %150, %105 ]
  %159 = load i64, i64* %40, align 8
  br label %160

160:                                              ; preds = %66, %157
  %161 = phi %"class.rx::vk::SharedResourceUse"* [ %158, %157 ], [ %69, %66 ]
  %162 = phi i64 [ %159, %157 ], [ %77, %66 ]
  %163 = ptrtoint %"class.rx::vk::SharedResourceUse"* %161 to i64
  store i64 %163, i64* %40, align 8
  store i64 %74, i64* %39, align 8
  store i64 %71, i64* %49, align 8
  %164 = icmp eq i64 %162, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %160
  %166 = inttoptr i64 %162 to i8*
  tail call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %165, %160, %32, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %168 = add i64 %13, 3
  %169 = and i64 %168, -4
  %170 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3
  %171 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 2
  %172 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 8
  %173 = load i64, i64* %172, align 8
  %174 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %170, %"class.rx::ContextVk"* %1, i64 %169, i64 %173, i8** null, %struct.VkBuffer_T** null, i64* %171, i8* nonnull %6) #11
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %180, label %176

176:                                              ; preds = %167
  %177 = load i8, i8* %6, align 1, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %170, %"class.rx::ContextVk"* %1) #11
  br label %181

180:                                              ; preds = %167
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  br label %229

181:                                              ; preds = %179, %176
  %182 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0
  %183 = bitcast %"class.rx::vk::BufferHelper"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"class.rx::vk::BufferHelper"** %8 to i64*
  store i64 %184, i64* %185, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %186 = call i32 @_ZN2rx8BufferVk12updateBufferEPNS_9ContextVkEPKhmm(%"class.rx::BufferVk"* %0, %"class.rx::ContextVk"* %1, i8* %2, i64 %3, i64 %4)
  %187 = icmp eq i32 %186, 1
  br i1 %187, label %229, label %188

188:                                              ; preds = %181
  %189 = bitcast %"class.angle::FixedVector.1282"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %189) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 48, i1 false)
  %190 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 1
  store i64 0, i64* %190, align 8
  br i1 %15, label %191, label %196

191:                                              ; preds = %188
  %192 = load i64, i64* %171, align 8
  %193 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 0, i64* %193, align 8
  %194 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 0, i32 1
  store i64 %192, i64* %194, align 8
  %195 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 0, i32 2
  store i64 %4, i64* %195, align 8
  store i64 1, i64* %190, align 8
  br label %196

196:                                              ; preds = %191, %188
  %197 = phi i64 [ 1, %191 ], [ 0, %188 ]
  br i1 %16, label %198, label %207

198:                                              ; preds = %196
  %199 = load i64, i64* %171, align 8
  %200 = add i64 %199, %14
  %201 = sub i64 %13, %14
  %202 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 %197, i32 0
  store i64 %14, i64* %202, align 8
  %203 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 %197, i32 1
  store i64 %200, i64* %203, align 8
  %204 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 %197, i32 2
  store i64 %201, i64* %204, align 8
  %205 = load i64, i64* %190, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %190, align 8
  br label %207

207:                                              ; preds = %196, %198
  %208 = phi i64 [ %206, %198 ], [ %197, %196 ]
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %8, align 8
  %212 = trunc i64 %208 to i32
  %213 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 0
  %214 = call i32 @_ZN2rx2vk12BufferHelper14copyFromBufferEPNS_9ContextVkEPS1_jPK12VkBufferCopy(%"class.rx::vk::BufferHelper"* %211, %"class.rx::ContextVk"* %1, %"class.rx::vk::BufferHelper"* %9, i32 %212, %struct.VkBufferCopy* nonnull %213) #11
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %217, label %216

216:                                              ; preds = %210, %207
  br label %217

217:                                              ; preds = %210, %216
  %218 = phi i32 [ 0, %216 ], [ 1, %210 ]
  %219 = load i64, i64* %190, align 8
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %217, %221
  %222 = phi i64 [ %226, %221 ], [ %219, %217 ]
  %223 = add i64 %222, -1
  store i64 %223, i64* %190, align 8
  %224 = getelementptr inbounds %"class.angle::FixedVector.1282", %"class.angle::FixedVector.1282"* %7, i64 0, i32 0, i32 0, i64 %223
  %225 = bitcast %struct.VkBufferCopy* %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 24, i1 false) #11
  %226 = load i64, i64* %190, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %221

228:                                              ; preds = %221, %217
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %189) #11
  br label %229

229:                                              ; preds = %181, %180, %228
  %230 = phi i32 [ %218, %228 ], [ 1, %181 ], [ 1, %180 ]
  ret i32 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.rx::ConversionBuffer"* @_ZN2rx8BufferVk25getVertexConversionBufferEPNS_10RendererVkEN5angle8FormatIDEjmb(%"class.rx::BufferVk"*, %"class.rx::RendererVk"*, i32, i32, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.rx::RendererVk"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  store %"class.rx::RendererVk"* %1, %"class.rx::RendererVk"** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i64 %4, i64* %10, align 8
  %12 = zext i1 %5 to i8
  store i8 %12, i8* %11, align 1
  %13 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.std::__1::vector.953", %"class.std::__1::vector.953"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %16, align 8
  %18 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %15, %17
  br i1 %18, label %35, label %19

19:                                               ; preds = %6, %32
  %20 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %33, %32 ], [ %15, %6 ]
  %21 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %2
  br i1 %23, label %24, label %32

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %20, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %3
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %20, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %4
  br i1 %31, label %54, label %32

32:                                               ; preds = %24, %19, %28
  %33 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %20, i64 1
  %34 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %33, %17
  br i1 %34, label %35, label %19

35:                                               ; preds = %32, %6
  %36 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %37 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %36, align 8
  %38 = icmp ult %"struct.rx::BufferVk::VertexConversionBuffer"* %17, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 0, i32 0
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 0, i32 1
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %42) #11
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %42, %"class.rx::RendererVk"* %1, i32 160, i64 4, i64 8192, i1 zeroext %5, i32 0) #11
  %43 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 1
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 2
  store i32 %3, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 0, i32 3
  store i64 %4, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %17, i64 1
  %47 = ptrtoint %"struct.rx::BufferVk::VertexConversionBuffer"* %46 to i64
  %48 = bitcast %"struct.rx::BufferVk::VertexConversionBuffer"** %16 to i64*
  store i64 %47, i64* %48, align 8
  br label %51

49:                                               ; preds = %35
  call void @_ZNSt3__16vectorIN2rx8BufferVk22VertexConversionBufferENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPNS1_10RendererVkERN5angle8FormatIDERjRmRbEEEvDpOT_(%"class.std::__1::vector.953"* %13, %"class.rx::RendererVk"** nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, i64* nonnull dereferenceable(8) %10, i8* nonnull dereferenceable(1) %11) #11
  %50 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %16, align 8
  br label %51

51:                                               ; preds = %39, %49
  %52 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %46, %39 ], [ %50, %49 ]
  %53 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %52, i64 -1, i32 0
  br label %56

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %20, i64 0, i32 0
  br label %56

56:                                               ; preds = %54, %51
  %57 = phi %"struct.rx::ConversionBuffer"* [ %53, %51 ], [ %55, %54 ]
  ret %"struct.rx::ConversionBuffer"* %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx8BufferVk13onDataChangedEv(%"class.rx::BufferVk"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %4, align 8
  %6 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %3, %5
  br i1 %6, label %12, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %10, %7 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %8, i64 0, i32 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %8, i64 1
  %11 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %10, %5
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2rx10BufferImpl13getMemorySizeEv(%"class.rx::BufferImpl"*) unnamed_addr #7 comdat align 2 {
  ret i64 0
}

declare void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"*) unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferAccess13onBufferWriteEjNS0_13PipelineStageEPNS0_12BufferHelperE(%"class.rx::vk::CommandBufferAccess"*, i32, i16 zeroext, %"class.rx::vk::BufferHelper"*) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferAccess12onBufferReadEjNS0_13PipelineStageEPNS0_12BufferHelperE(%"class.rx::vk::CommandBufferAccess"*, i32, i16 zeroext, %"class.rx::vk::BufferHelper"*) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"*, %"class.rx::vk::CommandBufferAccess"* dereferenceable(160)) local_unnamed_addr #1

declare i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"*, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*, i64, i64, i8**, %struct.VkBuffer_T**, i64*, i8*) local_unnamed_addr #1

declare i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #1

declare i64 @_ZNK2rx2vk16CommandProcessor27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandProcessor"*) unnamed_addr #1

declare i64 @_ZNK2rx2vk12CommandQueue27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandQueue"*) unnamed_addr #1

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

declare i32 @_ZN2rx2vk12BufferMemory7mapImplEPNS_9ContextVkEm(%"class.rx::vk::BufferMemory"*, %"class.rx::ContextVk"*, i64) local_unnamed_addr #1

declare void @_ZN2rx2vk12BufferHelperC1Ev(%"class.rx::vk::BufferHelper"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx8BufferVk22VertexConversionBufferENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPNS1_10RendererVkERN5angle8FormatIDERjRmRbEEEvDpOT_(%"class.std::__1::vector.953"*, %"class.rx::RendererVk"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %7 = getelementptr inbounds %"class.std::__1::vector.953", %"class.std::__1::vector.953"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.rx::BufferVk::VertexConversionBuffer"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.953"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 144
  %14 = add nsw i64 %13, 1
  %15 = icmp ugt i64 %14, 128102389400760775
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.std::__1::vector.953"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #13
  unreachable

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.std::__1::vector.953", %"class.std::__1::vector.953"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.rx::BufferVk::VertexConversionBuffer"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %11
  %23 = sdiv exact i64 %22, 144
  %24 = icmp ult i64 %23, 64051194700380387
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = shl nsw i64 %23, 1
  %27 = icmp ult i64 %26, %14
  %28 = select i1 %27, i64 %14, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %18, %25
  %31 = phi i64 [ %28, %25 ], [ 128102389400760775, %18 ]
  %32 = mul i64 %31, 144
  %33 = tail call i8* @_Znwm(i64 %32) #12
  %34 = bitcast i8* %33 to %"struct.rx::BufferVk::VertexConversionBuffer"*
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %25 ]
  %37 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %34, %30 ], [ null, %25 ]
  %38 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13
  %39 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %36
  %40 = ptrtoint %"struct.rx::BufferVk::VertexConversionBuffer"* %39 to i64
  %41 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %1, align 8
  %42 = load i32, i32* %2, align 4
  %43 = load i32, i32* %3, align 4
  %44 = load i64, i64* %4, align 8
  %45 = load i8, i8* %5, align 1, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %38, i64 0, i32 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13, i32 0, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %49) #11
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %49, %"class.rx::RendererVk"* %41, i32 160, i64 4, i64 8192, i1 zeroext %46, i32 0) #11
  %50 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13, i32 1
  store i32 %42, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13, i32 2
  store i32 %43, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %37, i64 %13, i32 3
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %38, i64 1
  %54 = ptrtoint %"struct.rx::BufferVk::VertexConversionBuffer"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.953", %"class.std::__1::vector.953"* %0, i64 0, i32 0, i32 0
  %56 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %55, align 8
  %57 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %7, align 8
  %58 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %57, %56
  br i1 %58, label %59, label %61

59:                                               ; preds = %35
  %60 = ptrtoint %"struct.rx::BufferVk::VertexConversionBuffer"* %38 to i64
  store i64 %60, i64* %10, align 8
  store i64 %54, i64* %8, align 8
  store i64 %40, i64* %20, align 8
  br label %85

61:                                               ; preds = %35, %61
  %62 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %73, %61 ], [ %38, %35 ]
  %63 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %64, %61 ], [ %57, %35 ]
  %64 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %63, i64 -1
  %65 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %62, i64 -1, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %64, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false) #11
  %67 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %62, i64 -1, i32 0, i32 2
  %68 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %63, i64 -1, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferC1EOS1_(%"class.rx::vk::DynamicBuffer"* %67, %"class.rx::vk::DynamicBuffer"* dereferenceable(112) %68) #11
  %69 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %62, i64 -1, i32 1
  %70 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %63, i64 -1, i32 1
  %71 = bitcast i32* %69 to i8*
  %72 = bitcast i32* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false) #11
  %73 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %62, i64 -1
  %74 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %64, %56
  br i1 %74, label %75, label %61

75:                                               ; preds = %61
  %76 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %55, align 8
  %77 = load %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"** %7, align 8
  %78 = ptrtoint %"struct.rx::BufferVk::VertexConversionBuffer"* %73 to i64
  store i64 %78, i64* %10, align 8
  store i64 %54, i64* %8, align 8
  store i64 %40, i64* %20, align 8
  %79 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %77, %76
  br i1 %79, label %85, label %80

80:                                               ; preds = %75, %80
  %81 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %82, %80 ], [ %77, %75 ]
  %82 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %81, i64 -1
  %83 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %81, i64 -1, i32 0, i32 2
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %83) #11
  %84 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %82, %76
  br i1 %84, label %85, label %80

85:                                               ; preds = %80, %59, %75
  %86 = phi %"struct.rx::BufferVk::VertexConversionBuffer"* [ %56, %59 ], [ %76, %75 ], [ %76, %80 ]
  %87 = icmp eq %"struct.rx::BufferVk::VertexConversionBuffer"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.rx::BufferVk::VertexConversionBuffer", %"struct.rx::BufferVk::VertexConversionBuffer"* %86, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %85, %88
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
