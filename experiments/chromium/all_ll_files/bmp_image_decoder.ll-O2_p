; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/bmp/bmp_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/bmp/bmp_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::BMPImageDecoder" = type { %"class.blink::ImageDecoder", i64, %"class.std::__1::unique_ptr.28" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.9", %class.sk_sp.1, i8, %"class.std::__1::unique_ptr.22" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.13" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.12, [8 x i8] }
%struct.anon.12 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::BMPImageReader"* }
%"class.blink::BMPImageReader" = type <{ %"class.blink::ImageDecoder"*, %"class.blink::ImageFrame"*, %class.scoped_refptr, %"class.blink::FastSharedBufferReader", i64, i64, i64, %"struct.blink::BMPImageReader::BitmapInfoHeader", %"class.std::__1::unique_ptr.31", i8, i8, i8, i8, i8, [3 x i8], [4 x i32], [4 x i32], [4 x i8*], %"class.WTF::Vector.37", %"class.blink::IntPoint", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::FastSharedBufferReader" = type { %class.scoped_refptr, i8*, i64, i64 }
%"struct.blink::BMPImageReader::BitmapInfoHeader" = type { i32, i32, i32, i16, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ImageDecoder"* }
%"class.WTF::Vector.37" = type { %"class.WTF::VectorBuffer.38" }
%"class.WTF::VectorBuffer.38" = type { %"class.WTF::VectorBufferBase.39" }
%"class.WTF::VectorBufferBase.39" = type { %"struct.blink::BMPImageReader::RGBTriple"*, i32, i32 }
%"struct.blink::BMPImageReader::RGBTriple" = type { i8, i8, i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.63 }
%union.anon.63 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %struct.SkISize*, i32, i32 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.56", %"class.absl::optional.56", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12ImageDecoderD2Ev = comdat any

$_ZNK5blink15BMPImageDecoder17FilenameExtensionEv = comdat any

$_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder4SizeEv = comdat any

$_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv = comdat any

$_ZNK5blink12ImageDecoder11DecodedSizeEv = comdat any

$_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv = comdat any

$_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv = comdat any

$_ZNK5blink12ImageDecoder14GetYUVBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm = comdat any

$_ZN5blink12ImageDecoder7SetSizeEjj = comdat any

$_ZNK5blink12ImageDecoder15RepetitionCountEv = comdat any

$_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE = comdat any

$_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE = comdat any

$_ZN5blink12ImageDecoder11DecodeToYUVEv = comdat any

$_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv = comdat any

$_ZN5blink15BMPImageDecoder10DecodeSizeEv = comdat any

$_ZN5blink12ImageDecoder16DecodeFrameCountEv = comdat any

$_ZN5blink12ImageDecoder18InitializeNewFrameEm = comdat any

$_ZN5blink15BMPImageDecoder6DecodeEm = comdat any

$_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj = comdat any

$_ZN5blink12ImageDecoder17OnInitFrameBufferEm = comdat any

$_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm = comdat any

$_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink15BMPImageDecoderE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BMPImageDecoder"*)* @_ZN5blink15BMPImageDecoderD2Ev to i8*), i8* bitcast (void (%"class.blink::BMPImageDecoder"*)* @_ZN5blink15BMPImageDecoderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BMPImageDecoder"*)* @_ZNK5blink15BMPImageDecoder17FilenameExtensionEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv to i8*), i8* bitcast (void (%"class.blink::BMPImageDecoder"*, %"class.blink::SegmentReader"*)* @_ZN5blink15BMPImageDecoder9OnSetDataEPNS_13SegmentReaderE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder4SizeEv to i8*), i8* bitcast (void (%"class.WTF::Vector.51"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder11DecodedSizeEv to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv to i8*), i8* bitcast (i8 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv to i8*), i8* bitcast (void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32, i32)* @_ZN5blink12ImageDecoder7SetSizeEjj to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder15RepetitionCountEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::BMPImageDecoder"*)* @_ZN5blink15BMPImageDecoder9SetFailedEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)* @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)* @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder11DecodeToYUVEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder16ClearFrameBufferEm to i8*), i8* bitcast (void (%"class.blink::BMPImageDecoder"*)* @_ZN5blink15BMPImageDecoder10DecodeSizeEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder16DecodeFrameCountEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder18InitializeNewFrameEm to i8*), i8* bitcast (void (%"class.blink::BMPImageDecoder"*, i64)* @_ZN5blink15BMPImageDecoder6DecodeEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32)* @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder17OnInitFrameBufferEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm to i8*)] }, align 8
@_ZTVN5blink12ImageDecoderE = external unnamed_addr constant { [37 x i8*] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"bmp\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink15BMPImageDecoderC1ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm = hidden unnamed_addr alias void (%"class.blink::BMPImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64), void (%"class.blink::BMPImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64)* @_ZN5blink15BMPImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm
@_ZN5blink15BMPImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::BMPImageDecoder"*), void (%"class.blink::BMPImageDecoder"*)* @_ZN5blink15BMPImageDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BMPImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm(%"class.blink::BMPImageDecoder"*, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i64 0
  %9 = bitcast %"class.WTF::Vector"* %7 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 3
  %13 = icmp eq i32 %1, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 6, i32 0
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 8
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 10
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 12, i32 0
  %28 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 16
  %29 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 19
  %30 = bitcast %"class.std::__1::unique_ptr.22"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast i32* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 11, i1 false) #8
  %32 = bitcast %"class.std::__1::unique_ptr.9"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 17, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15BMPImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %33 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 1
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BMPImageDecoderD2Ev(%"class.blink::BMPImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15BMPImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %3, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %3, align 8
  %5 = icmp eq %"class.blink::BMPImageReader"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %4) #8
  %7 = bitcast %"class.blink::BMPImageReader"* %4 to i8*
  tail call void @free(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ColorProfileTransform"*, %"class.blink::ColorProfileTransform"** %3, align 8
  store %"class.blink::ColorProfileTransform"* null, %"class.blink::ColorProfileTransform"** %3, align 8
  %5 = icmp eq %"class.blink::ColorProfileTransform"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ColorProfileTransform"* %4 to i8*
  tail call void @free(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 17, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %19, align 8
  store %"class.blink::ColorProfile"* null, %"class.blink::ColorProfile"** %19, align 8
  %21 = icmp eq %"class.blink::ColorProfile"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* null, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %24) #9
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.blink::ColorProfile"* %20 to i8*
  tail call void @free(i8* %28) #8
  br label %29

29:                                               ; preds = %18, %27
  %30 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %30, align 8
  store %"class.blink::ImagePlanes"* null, %"class.blink::ImagePlanes"** %30, align 8
  %32 = icmp eq %"class.blink::ImagePlanes"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::ImagePlanes"* %31 to i8*
  tail call void @free(i8* %34) #8
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  br i1 %39, label %51, label %41, !prof !2

41:                                               ; preds = %35
  %42 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %41
  %46 = phi %"class.blink::ImageFrame"* [ %48, %45 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %47) #8
  %48 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 1
  %49 = icmp eq %"class.blink::ImageFrame"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"class.blink::ImageFrame"*
  %55 = icmp eq %"class.blink::ImageFrame"* %52, %54
  br i1 %55, label %58, label %56, !prof !3

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %57, %"class.blink::ImageFrame"* %52) #8
  br label %58

58:                                               ; preds = %51, %56
  store %"class.blink::ImageFrame"* null, %"class.blink::ImageFrame"** %40, align 8
  %59 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %59, align 8
  %61 = icmp eq %"class.blink::SegmentReader"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.blink::SegmentReader"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.blink::SegmentReader"*)***
  %71 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %71, i64 1
  %73 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %72, align 8
  tail call void %73(%"class.blink::SegmentReader"* nonnull %69) #8
  br label %74

74:                                               ; preds = %58, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BMPImageDecoderD0Ev(%"class.blink::BMPImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15BMPImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %3, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %3, align 8
  %5 = icmp eq %"class.blink::BMPImageReader"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %4) #8
  %7 = bitcast %"class.blink::BMPImageReader"* %4 to i8*
  tail call void @free(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %9) #8
  %10 = bitcast %"class.blink::BMPImageDecoder"* %0 to i8*
  tail call void @free(i8* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BMPImageDecoder9OnSetDataEPNS_13SegmentReaderE(%"class.blink::BMPImageDecoder"* nocapture readonly, %"class.blink::SegmentReader"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %3, align 8
  %5 = icmp eq %"class.blink::BMPImageReader"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink14BMPImageReader7SetDataEPNS_13SegmentReaderE(%"class.blink::BMPImageReader"* nonnull %4, %"class.blink::SegmentReader"* %1) #8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN5blink14BMPImageReader7SetDataEPNS_13SegmentReaderE(%"class.blink::BMPImageReader"*, %"class.blink::SegmentReader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15BMPImageDecoder9SetFailedEv(%"class.blink::BMPImageDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %2, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %2, align 8
  %4 = icmp eq %"class.blink::BMPImageReader"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %3) #8
  %6 = bitcast %"class.blink::BMPImageReader"* %3 to i8*
  tail call void @free(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %8, align 2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BMPImageDecoder6DecodeEb(%"class.blink::BMPImageDecoder"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 15
  %4 = load i8, i8* %3, align 2, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %35

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink15BMPImageDecoder12DecodeHelperEb(%"class.blink::BMPImageDecoder"* %0, i1 zeroext %1)
  br i1 %7, label %19, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 14
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %13, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %13, align 8
  %15 = icmp eq %"class.blink::BMPImageReader"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %14) #8
  %17 = bitcast %"class.blink::BMPImageReader"* %14 to i8*
  tail call void @free(i8* %17) #8
  br label %18

18:                                               ; preds = %12, %16
  store i8 1, i8* %3, align 2
  br label %35

19:                                               ; preds = %8, %6
  %20 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2
  %25 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %24, i32 0) #8
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %25, i64 0, i32 5
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %30, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %30, align 8
  %32 = icmp eq %"class.blink::BMPImageReader"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %31) #8
  %34 = bitcast %"class.blink::BMPImageReader"* %31 to i8*
  tail call void @free(i8* %34) #8
  br label %35

35:                                               ; preds = %2, %33, %29, %19, %23, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15BMPImageDecoder12DecodeHelperEb(%"class.blink::BMPImageDecoder"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 14
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = call zeroext i1 @_ZN5blink15BMPImageDecoder17ProcessFileHeaderERm(%"class.blink::BMPImageDecoder"* %0, i64* nonnull dereferenceable(8) %3)
  br i1 %9, label %10, label %45

10:                                               ; preds = %8, %2
  %11 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %12, align 8
  %14 = icmp eq %"class.blink::BMPImageReader"* %13, null
  br i1 %14, label %15, label %33

15:                                               ; preds = %10
  %16 = tail call noalias i8* @malloc(i64 224) #8
  %17 = bitcast i8* %16 to %"class.blink::BMPImageReader"*
  %18 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0
  %19 = load i64, i64* %5, align 8
  %20 = load i64, i64* %3, align 8
  tail call void @_ZN5blink14BMPImageReaderC1EPNS_12ImageDecoderEmmb(%"class.blink::BMPImageReader"* %17, %"class.blink::ImageDecoder"* %18, i64 %19, i64 %20, i1 zeroext false) #8
  %21 = ptrtoint i8* %16 to i64
  %22 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %12, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.28"* %11 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"class.blink::BMPImageReader"* %22, null
  %25 = bitcast i8* %16 to %"class.blink::BMPImageReader"*
  br i1 %24, label %29, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %22) #8
  %27 = bitcast %"class.blink::BMPImageReader"* %22 to i8*
  tail call void @free(i8* %27) #8
  %28 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %12, align 8
  br label %29

29:                                               ; preds = %26, %15
  %30 = phi %"class.blink::BMPImageReader"* [ %28, %26 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %31, align 8
  tail call void @_ZN5blink14BMPImageReader7SetDataEPNS_13SegmentReaderE(%"class.blink::BMPImageReader"* %30, %"class.blink::SegmentReader"* %32) #8
  br label %33

33:                                               ; preds = %10, %29
  %34 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 2
  %39 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %12, align 8
  %40 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %38, i32 0) #8
  %41 = getelementptr inbounds %"class.blink::BMPImageReader", %"class.blink::BMPImageReader"* %39, i64 0, i32 1
  store %"class.blink::ImageFrame"* %40, %"class.blink::ImageFrame"** %41, align 8
  br label %42

42:                                               ; preds = %37, %33
  %43 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %12, align 8
  %44 = tail call zeroext i1 @_ZN5blink14BMPImageReader9DecodeBMPEb(%"class.blink::BMPImageReader"* %43, i1 zeroext %1) #8
  br label %45

45:                                               ; preds = %8, %42
  %46 = phi i1 [ %44, %42 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret i1 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15BMPImageDecoder17ProcessFileHeaderERm(%"class.blink::BMPImageDecoder"* nocapture, i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::FastSharedBufferReader", align 8
  %5 = alloca [14 x i8], align 1
  %6 = bitcast %"class.blink::FastSharedBufferReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::FastSharedBufferReader", %"class.blink::FastSharedBufferReader"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = bitcast %"class.blink::FastSharedBufferReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %8, align 8
  %11 = icmp eq %"class.blink::SegmentReader"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %2, %12, %16
  call void @_ZN5blink22FastSharedBufferReaderC1E13scoped_refptrINS_13SegmentReaderEE(%"class.blink::FastSharedBufferReader"* nonnull %4, %"class.blink::SegmentReader"* %10) #8
  %20 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 -86, i64 14, i1 false)
  %21 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %8, align 8
  %22 = bitcast %"class.blink::SegmentReader"* %21 to i64 (%"class.blink::SegmentReader"*)***
  %23 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %23, i64 2
  %25 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %24, align 8
  %26 = call i64 %25(%"class.blink::SegmentReader"* %21) #8
  %27 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = icmp ult i64 %29, 14
  br i1 %30, label %81, label %31

31:                                               ; preds = %19
  %32 = call i8* @_ZNK5blink22FastSharedBufferReader18GetConsecutiveDataEmmPc(%"class.blink::FastSharedBufferReader"* nonnull %4, i64 %28, i64 14, i8* nonnull %20) #8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw i16 %34, 8
  %36 = getelementptr inbounds i8, i8* %32, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = or i16 %35, %38
  %40 = icmp eq i16 %39, 16961
  br i1 %40, label %41, label %62

41:                                               ; preds = %31
  %42 = load i64, i64* %27, align 8
  %43 = add i64 %42, 14
  store i64 %43, i64* %27, align 8
  %44 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %8, align 8
  %45 = bitcast %"class.blink::SegmentReader"* %44 to i64 (%"class.blink::SegmentReader"*)***
  %46 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %46, i64 2
  %48 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %47, align 8
  %49 = call i64 %48(%"class.blink::SegmentReader"* %44) #8
  %50 = load i64, i64* %27, align 8
  %51 = sub i64 %49, %50
  %52 = icmp ult i64 %51, 14
  br i1 %52, label %81, label %53

53:                                               ; preds = %41
  %54 = call i8* @_ZNK5blink22FastSharedBufferReader18GetConsecutiveDataEmmPc(%"class.blink::FastSharedBufferReader"* nonnull %4, i64 %50, i64 14, i8* nonnull %20) #8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = shl nuw i16 %56, 8
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = or i16 %57, %60
  br label %62

62:                                               ; preds = %53, %31
  %63 = phi i8* [ %32, %31 ], [ %54, %53 ]
  %64 = phi i16 [ %39, %31 ], [ %61, %53 ]
  %65 = icmp eq i16 %64, 16973
  br i1 %65, label %74, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.blink::BMPImageReader"*, %"class.blink::BMPImageReader"** %67, align 8
  store %"class.blink::BMPImageReader"* null, %"class.blink::BMPImageReader"** %67, align 8
  %69 = icmp eq %"class.blink::BMPImageReader"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  call void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"* nonnull %68) #8
  %71 = bitcast %"class.blink::BMPImageReader"* %68 to i8*
  call void @free(i8* %71) #8
  br label %72

72:                                               ; preds = %66, %70
  %73 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %73, align 2
  br label %81

74:                                               ; preds = %62
  %75 = getelementptr inbounds i8, i8* %63, i64 10
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  store i64 %78, i64* %1, align 8
  %79 = load i64, i64* %27, align 8
  %80 = add i64 %79, 14
  store i64 %80, i64* %27, align 8
  br label %81

81:                                               ; preds = %41, %19, %74, %72
  %82 = phi i1 [ false, %72 ], [ true, %74 ], [ false, %19 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %20) #8
  %83 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %7, align 8
  %84 = icmp eq %"class.blink::SegmentReader"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %83, i64 0, i32 1, i32 0
  %87 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i32* %87, i32 1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %97

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %86, i64 -2
  %92 = bitcast %"class.base::RefCountedThreadSafe"* %91 to %"class.blink::SegmentReader"*
  %93 = bitcast %"class.base::RefCountedThreadSafe"* %91 to void (%"class.blink::SegmentReader"*)***
  %94 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %94, i64 1
  %96 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %95, align 8
  call void %96(%"class.blink::SegmentReader"* nonnull %92) #8
  br label %97

97:                                               ; preds = %81, %85, %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret i1 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5blink14BMPImageReader9DecodeBMPEb(%"class.blink::BMPImageReader"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink22FastSharedBufferReaderC1E13scoped_refptrINS_13SegmentReaderEE(%"class.blink::FastSharedBufferReader"*, %"class.blink::SegmentReader"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15BMPImageDecoder11GetFileTypeERKNS_22FastSharedBufferReaderEPcRPKcRt(%"class.blink::BMPImageDecoder"* nocapture readonly, %"class.blink::FastSharedBufferReader"* dereferenceable(32), i8*, i8** nocapture dereferenceable(8), i16* nocapture dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %6, align 8
  %8 = bitcast %"class.blink::SegmentReader"* %7 to i64 (%"class.blink::SegmentReader"*)***
  %9 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %9, i64 2
  %11 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::SegmentReader"* %7) #8
  %13 = getelementptr inbounds %"class.blink::BMPImageDecoder", %"class.blink::BMPImageDecoder"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp ult i64 %15, 14
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  %18 = tail call i8* @_ZNK5blink22FastSharedBufferReader18GetConsecutiveDataEmmPc(%"class.blink::FastSharedBufferReader"* %1, i64 %14, i64 14, i8* %2) #8
  store i8* %18, i8** %3, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = shl nuw i16 %20, 8
  %22 = getelementptr inbounds i8, i8* %18, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = or i16 %21, %24
  store i16 %25, i16* %4, align 2
  br label %26

26:                                               ; preds = %5, %17
  %27 = phi i1 [ true, %17 ], [ false, %5 ]
  ret i1 %27
}

declare i8* @_ZNK5blink22FastSharedBufferReader18GetConsecutiveDataEmmPc(%"class.blink::FastSharedBufferReader"*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink15BMPImageDecoder17FilenameExtensionEv(%"class.blink::BMPImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder4SizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv(%"class.WTF::Vector.51"* noalias sret, %"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.51"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder11DecodedSizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %3 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %3, i64 5
  %5 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::ImageDecoder"* %0) #8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i8 8
}

declare void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret, %"class.blink::ImageDecoder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %4 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, i64 5
  %6 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::ImageDecoder"* %0) #8
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder7SetSizeEjj(%"class.blink::ImageDecoder"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::ImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %5 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageDecoder"* %0) #8
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  %13 = select i1 %12, i32 8, i32 4
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i32 [ 4, %3 ], [ %13, %9 ]
  %16 = lshr i32 %1, 31
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = icmp slt i32 %1, 0
  %20 = sub i32 0, %1
  %21 = select i1 %19, i32 %20, i32 %1
  %22 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %21, i32 %2) #8
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = add nuw nsw i32 %16, 2147483647
  %26 = icmp ugt i32 %24, %25
  %27 = or i1 %23, %26
  %28 = sub i32 0, %24
  %29 = select i1 %19, i32 %28, i32 %24
  br i1 %27, label %41, label %30

30:                                               ; preds = %18
  %31 = icmp slt i32 %29, 0
  %32 = sub i32 0, %29
  %33 = select i1 %31, i32 %32, i32 %29
  %34 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %33, i32 %15) #8
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = lshr i32 %29, 31
  %38 = add nuw i32 %37, 2147483647
  %39 = icmp ugt i32 %36, %38
  %40 = or i1 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %14, %18, %30
  %42 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %42, i64 21
  %44 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::ImageDecoder"* %0) #8
  br label %54

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %48 = bitcast %"class.blink::IntSize"* %47 to i64*
  %49 = zext i32 %2 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %1 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %48, align 4
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 13
  store i8 1, i8* %53, align 4
  br label %54

54:                                               ; preds = %46, %41
  %55 = phi i1 [ %45, %41 ], [ true, %46 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder15RepetitionCountEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 -2
}

declare zeroext i1 @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder20FrameDurationAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i64 @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

declare i64 @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE(%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %0) #8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7, %2
  %11 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #8
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %11, i64 0, i32 1
  store %"class.SkBitmap::Allocator"* %1, %"class.SkBitmap::Allocator"** %12, align 8
  br label %13

13:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder11DecodeToYUVEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BMPImageDecoder10DecodeSizeEv(%"class.blink::BMPImageDecoder"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink15BMPImageDecoder6DecodeEb(%"class.blink::BMPImageDecoder"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink12ImageDecoder16DecodeFrameCountEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i64 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18InitializeNewFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BMPImageDecoder6DecodeEm(%"class.blink::BMPImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink15BMPImageDecoder6DecodeEb(%"class.blink::BMPImageDecoder"* %0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #8
  %5 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder17OnInitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder27CanReusePreviousFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ImageFrame"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::ImageFrame"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14BMPImageReaderD1Ev(%"class.blink::BMPImageReader"*) unnamed_addr #3

declare void @_ZN5blink14BMPImageReaderC1EPNS_12ImageDecoderEmmb(%"class.blink::BMPImageReader"*, %"class.blink::ImageDecoder"*, i64, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
