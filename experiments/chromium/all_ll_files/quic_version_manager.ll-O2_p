; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_version_manager.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_version_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicVersionManager" = type { i32 (...)**, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.8" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZTVN4quic18QuicVersionManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicVersionManager"*)* @_ZN4quic18QuicVersionManagerD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicVersionManager"*)* @_ZN4quic18QuicVersionManagerD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicVersionManager"*)* @_ZN4quic18QuicVersionManager25RefilterSupportedVersionsEv to i8*)] }, align 8
@FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_draft_29 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_t051 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q050 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q046 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_disable_version_q043 = external local_unnamed_addr global i8, align 1

@_ZN4quic18QuicVersionManagerC1ENSt3__16vectorINS_17ParsedQuicVersionENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"class.quic::QuicVersionManager"*, %"class.std::__1::vector"*), void (%"class.quic::QuicVersionManager"*, %"class.std::__1::vector"*)* @_ZN4quic18QuicVersionManagerC2ENSt3__16vectorINS_17ParsedQuicVersionENS1_9allocatorIS3_EEEE
@_ZN4quic18QuicVersionManagerD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicVersionManager"*), void (%"class.quic::QuicVersionManager"*)* @_ZN4quic18QuicVersionManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManagerC2ENSt3__16vectorINS_17ParsedQuicVersionENS1_9allocatorIS3_EEEE(%"class.quic::QuicVersionManager"*, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4quic18QuicVersionManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 1
  %5 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !2
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  %7 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  store i8 %7, i8* %6, align 1
  %8 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  %9 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  store i8 %9, i8* %8, align 2
  %10 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  %11 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  store i8 %11, i8* %10, align 1
  %12 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  %13 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  store i8 %13, i8* %12, align 4
  %14 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  %15 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  store i8 %15, i8* %14, align 1
  %16 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7
  %17 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #8
  %18 = bitcast %"class.std::__1::vector"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.quic::ParsedQuicVersion"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7, i32 0, i32 1
  %25 = bitcast %"struct.quic::ParsedQuicVersion"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"struct.quic::ParsedQuicVersion"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.quic::ParsedQuicVersion"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #8
  %32 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8
  %33 = bitcast %"class.quic::QuicVersionManager"* %0 to void (%"class.quic::QuicVersionManager"*)***
  %34 = bitcast %"class.std::__1::vector"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 96, i1 false)
  %35 = load void (%"class.quic::QuicVersionManager"*)**, void (%"class.quic::QuicVersionManager"*)*** %33, align 8
  %36 = getelementptr inbounds void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %35, i64 2
  %37 = load void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %36, align 8
  tail call void %37(%"class.quic::QuicVersionManager"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManagerD2Ev(%"class.quic::QuicVersionManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4quic18QuicVersionManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.8"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 10, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i32* %31 to i64
  %35 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 10, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i32* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9, i32 0, i32 0
  %40 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %39, align 8
  %41 = icmp eq %"struct.quic::ParsedQuicVersion"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.quic::ParsedQuicVersion"* %40 to i64
  %44 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9, i32 0, i32 1
  %45 = bitcast %"struct.quic::ParsedQuicVersion"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"struct.quic::ParsedQuicVersion"* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8, i32 0, i32 0
  %49 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %48, align 8
  %50 = icmp eq %"struct.quic::ParsedQuicVersion"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.quic::ParsedQuicVersion"* %49 to i64
  %53 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8, i32 0, i32 1
  %54 = bitcast %"struct.quic::ParsedQuicVersion"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"struct.quic::ParsedQuicVersion"* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7, i32 0, i32 0
  %58 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %57, align 8
  %59 = icmp eq %"struct.quic::ParsedQuicVersion"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"struct.quic::ParsedQuicVersion"* %58 to i64
  %62 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7, i32 0, i32 1
  %63 = bitcast %"struct.quic::ParsedQuicVersion"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"struct.quic::ParsedQuicVersion"* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #9
  br label %65

65:                                               ; preds = %56, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManagerD0Ev(%"class.quic::QuicVersionManager"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4quic18QuicVersionManagerD2Ev(%"class.quic::QuicVersionManager"* %0) #8
  %2 = bitcast %"class.quic::QuicVersionManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN4quic18QuicVersionManager20GetSupportedVersionsEv(%"class.quic::QuicVersionManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !2
  %5 = icmp eq i8 %3, %4
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  br label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  %12 = icmp eq i8 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %17 = icmp eq i8 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %22 = icmp eq i8 %20, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %27 = icmp eq i8 %25, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %28, %23, %18, %13, %8, %6
  %34 = phi i8 [ %7, %6 ], [ %10, %28 ], [ %10, %23 ], [ %10, %18 ], [ %10, %13 ], [ %11, %8 ]
  store i8 %4, i8* %2, align 8
  %35 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  store i8 %34, i8* %35, align 1
  %36 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %37 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  store i8 %36, i8* %37, align 2
  %38 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %39 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  store i8 %38, i8* %39, align 1
  %40 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %41 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  store i8 %40, i8* %41, align 4
  %42 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %43 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  store i8 %42, i8* %43, align 1
  %44 = bitcast %"class.quic::QuicVersionManager"* %0 to void (%"class.quic::QuicVersionManager"*)***
  %45 = load void (%"class.quic::QuicVersionManager"*)**, void (%"class.quic::QuicVersionManager"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %45, i64 2
  %47 = load void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %46, align 8
  tail call void %47(%"class.quic::QuicVersionManager"* %0) #8
  br label %48

48:                                               ; preds = %28, %33
  %49 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8
  ret %"class.std::__1::vector"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManager30MaybeRefilterSupportedVersionsEv(%"class.quic::QuicVersionManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !2
  %5 = icmp eq i8 %3, %4
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  br label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  %12 = icmp eq i8 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %17 = icmp eq i8 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %22 = icmp eq i8 %20, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %27 = icmp eq i8 %25, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %6, %28, %23, %18, %13, %8
  %34 = phi i8 [ %7, %6 ], [ %10, %28 ], [ %10, %23 ], [ %10, %18 ], [ %10, %13 ], [ %11, %8 ]
  store i8 %4, i8* %2, align 8
  %35 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  store i8 %34, i8* %35, align 1
  %36 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %37 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  store i8 %36, i8* %37, align 2
  %38 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %39 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  store i8 %38, i8* %39, align 1
  %40 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %41 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  store i8 %40, i8* %41, align 4
  %42 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %43 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  store i8 %42, i8* %43, align 1
  %44 = bitcast %"class.quic::QuicVersionManager"* %0 to void (%"class.quic::QuicVersionManager"*)***
  %45 = load void (%"class.quic::QuicVersionManager"*)**, void (%"class.quic::QuicVersionManager"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %45, i64 2
  %47 = load void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %46, align 8
  tail call void %47(%"class.quic::QuicVersionManager"* %0) #8
  br label %48

48:                                               ; preds = %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN4quic18QuicVersionManager34GetSupportedVersionsWithQuicCryptoEv(%"class.quic::QuicVersionManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !2
  %5 = icmp eq i8 %3, %4
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  br label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  %12 = icmp eq i8 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %17 = icmp eq i8 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %22 = icmp eq i8 %20, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %27 = icmp eq i8 %25, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %28, %23, %18, %13, %8, %6
  %34 = phi i8 [ %7, %6 ], [ %10, %28 ], [ %10, %23 ], [ %10, %18 ], [ %10, %13 ], [ %11, %8 ]
  store i8 %4, i8* %2, align 8
  %35 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  store i8 %34, i8* %35, align 1
  %36 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %37 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  store i8 %36, i8* %37, align 2
  %38 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %39 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  store i8 %38, i8* %39, align 1
  %40 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %41 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  store i8 %40, i8* %41, align 4
  %42 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %43 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  store i8 %42, i8* %43, align 1
  %44 = bitcast %"class.quic::QuicVersionManager"* %0 to void (%"class.quic::QuicVersionManager"*)***
  %45 = load void (%"class.quic::QuicVersionManager"*)**, void (%"class.quic::QuicVersionManager"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %45, i64 2
  %47 = load void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %46, align 8
  tail call void %47(%"class.quic::QuicVersionManager"* %0) #8
  br label %48

48:                                               ; preds = %28, %33
  %49 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9
  ret %"class.std::__1::vector"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.8"* @_ZN4quic18QuicVersionManager17GetSupportedAlpnsEv(%"class.quic::QuicVersionManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_enable_version_rfcv1, align 1, !range !2
  %5 = icmp eq i8 %3, %4
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  br label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_draft_29, align 1, !range !2
  %12 = icmp eq i8 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %17 = icmp eq i8 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %22 = icmp eq i8 %20, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %27 = icmp eq i8 %25, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %48, label %33

33:                                               ; preds = %28, %23, %18, %13, %8, %6
  %34 = phi i8 [ %7, %6 ], [ %10, %28 ], [ %10, %23 ], [ %10, %18 ], [ %10, %13 ], [ %11, %8 ]
  store i8 %4, i8* %2, align 8
  %35 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 2
  store i8 %34, i8* %35, align 1
  %36 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_t051, align 1, !range !2
  %37 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 3
  store i8 %36, i8* %37, align 2
  %38 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q050, align 1, !range !2
  %39 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 4
  store i8 %38, i8* %39, align 1
  %40 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q046, align 1, !range !2
  %41 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 5
  store i8 %40, i8* %41, align 4
  %42 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_disable_version_q043, align 1, !range !2
  %43 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 6
  store i8 %42, i8* %43, align 1
  %44 = bitcast %"class.quic::QuicVersionManager"* %0 to void (%"class.quic::QuicVersionManager"*)***
  %45 = load void (%"class.quic::QuicVersionManager"*)**, void (%"class.quic::QuicVersionManager"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %45, i64 2
  %47 = load void (%"class.quic::QuicVersionManager"*)*, void (%"class.quic::QuicVersionManager"*)** %46, align 8
  tail call void %47(%"class.quic::QuicVersionManager"* %0) #8
  br label %48

48:                                               ; preds = %28, %33
  %49 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11
  ret %"class.std::__1::vector.8"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManager25RefilterSupportedVersionsEv(%"class.quic::QuicVersionManager"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 16
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %6 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #8
  %9 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = bitcast %"struct.quic::ParsedQuicVersion"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  %17 = inttoptr i64 %13 to %"struct.quic::ParsedQuicVersion"*
  %18 = inttoptr i64 %11 to %"struct.quic::ParsedQuicVersion"*
  br i1 %16, label %98, label %19

19:                                               ; preds = %1
  %20 = icmp ugt i64 %15, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #10
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %14) #9
  %25 = bitcast i8* %24 to %"struct.quic::ParsedQuicVersion"*
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %27 = bitcast %"struct.quic::ParsedQuicVersion"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %25, i64 %15
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.quic::ParsedQuicVersion"* %29, %"struct.quic::ParsedQuicVersion"** %30, align 8
  %31 = bitcast %"struct.quic::ParsedQuicVersion"** %26 to i64*
  %32 = ptrtoint i8* %24 to i64
  %33 = icmp eq %"struct.quic::ParsedQuicVersion"* %17, %18
  br i1 %33, label %96, label %34

34:                                               ; preds = %23
  %35 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %18, i64 -1, i32 0
  %36 = bitcast i32* %35 to i8*
  %37 = sub i64 0, %13
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = ptrtoint i8* %38 to i64
  %40 = lshr i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 3
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %34, %44
  %45 = phi %"struct.quic::ParsedQuicVersion"* [ %55, %44 ], [ %25, %34 ]
  %46 = phi %"struct.quic::ParsedQuicVersion"* [ %54, %44 ], [ %17, %34 ]
  %47 = phi i64 [ %56, %44 ], [ %42, %34 ]
  %48 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %46, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %46, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 0, i32 0
  store i32 %49, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 0, i32 1
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %46, i64 1
  %55 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %45, i64 1
  %56 = add i64 %47, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %44, !llvm.loop !3

58:                                               ; preds = %44, %34
  %59 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %34 ], [ %55, %44 ]
  %60 = phi %"struct.quic::ParsedQuicVersion"* [ %25, %34 ], [ %55, %44 ]
  %61 = phi %"struct.quic::ParsedQuicVersion"* [ %17, %34 ], [ %54, %44 ]
  %62 = icmp ult i8* %38, inttoptr (i64 24 to i8*)
  br i1 %62, label %93, label %63

63:                                               ; preds = %58, %63
  %64 = phi %"struct.quic::ParsedQuicVersion"* [ %91, %63 ], [ %60, %58 ]
  %65 = phi %"struct.quic::ParsedQuicVersion"* [ %90, %63 ], [ %61, %58 ]
  %66 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 0, i32 0
  store i32 %67, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 0, i32 1
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 1, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 1, i32 0
  store i32 %73, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 1, i32 1
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 2, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 2, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 2, i32 0
  store i32 %79, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 2, i32 1
  store i32 %81, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 3, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 3, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 3, i32 0
  store i32 %85, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 3, i32 1
  store i32 %87, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %65, i64 4
  %91 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %64, i64 4
  %92 = icmp eq %"struct.quic::ParsedQuicVersion"* %90, %18
  br i1 %92, label %93, label %63

93:                                               ; preds = %63, %58
  %94 = phi %"struct.quic::ParsedQuicVersion"* [ %59, %58 ], [ %91, %63 ]
  %95 = ptrtoint %"struct.quic::ParsedQuicVersion"* %94 to i64
  br label %96

96:                                               ; preds = %93, %23
  %97 = phi i64 [ %32, %23 ], [ %95, %93 ]
  store i64 %97, i64* %31, align 8
  br label %98

98:                                               ; preds = %1, %96
  call void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull sret %2, %"class.std::__1::vector"* nonnull %3) #8
  %99 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %99, i64 0, i32 0, i32 0
  %101 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %100, align 8
  %102 = icmp eq %"struct.quic::ParsedQuicVersion"* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %98
  %104 = ptrtoint %"struct.quic::ParsedQuicVersion"* %101 to i64
  %105 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8, i32 0, i32 1
  %106 = bitcast %"struct.quic::ParsedQuicVersion"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"struct.quic::ParsedQuicVersion"* %101 to i8*
  call void @_ZdlPv(i8* %107) #9
  %108 = bitcast %"class.std::__1::vector"* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #8
  br label %109

109:                                              ; preds = %98, %103
  %110 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 16
  %112 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector"* %99 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"struct.quic::ParsedQuicVersion"** %114 to i64*
  %116 = load i64, i64* %115, align 16
  %117 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %118 = bitcast %"struct.quic::ParsedQuicVersion"** %117 to i64*
  store i64 %116, i64* %118, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #8
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %120 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %119, align 8
  %121 = icmp eq %"struct.quic::ParsedQuicVersion"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %109
  %123 = bitcast %"struct.quic::ParsedQuicVersion"* %120 to i8*
  %124 = ptrtoint %"struct.quic::ParsedQuicVersion"* %120 to i64
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %126 = bitcast %"struct.quic::ParsedQuicVersion"** %125 to i64*
  store i64 %124, i64* %126, align 8
  call void @_ZdlPv(i8* %123) #9
  br label %127

127:                                              ; preds = %109, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %128 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9
  %129 = bitcast %"class.std::__1::vector"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9, i32 0, i32 1
  %132 = bitcast %"struct.quic::ParsedQuicVersion"** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 10
  %134 = bitcast %"class.std::__1::vector.1"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 10, i32 0, i32 1
  %137 = bitcast i32** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11
  %139 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %141 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11, i32 0, i32 1
  %142 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %141, align 8
  %143 = icmp eq %"class.std::__1::basic_string"* %142, %140
  br i1 %143, label %156, label %144

144:                                              ; preds = %127, %154
  %145 = phi %"class.std::__1::basic_string"* [ %146, %154 ], [ %142, %127 ]
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 -1
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #9
  br label %154

154:                                              ; preds = %151, %144
  %155 = icmp eq %"class.std::__1::basic_string"* %146, %140
  br i1 %155, label %156, label %144

156:                                              ; preds = %154, %127
  store %"class.std::__1::basic_string"* %140, %"class.std::__1::basic_string"** %141, align 8
  %157 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %100, align 8
  %158 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %112, align 8
  %159 = icmp eq %"struct.quic::ParsedQuicVersion"* %157, %158
  br i1 %159, label %175, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %133, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %163 = bitcast i32** %162 to i64*
  %164 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"struct.quic::ParsedQuicVersion"** %164 to i64*
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %128, i64 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %168 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %5, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %5, i64 0, i32 1
  %170 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %171 = bitcast %"class.std::__1::basic_string"** %141 to i64*
  %172 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %176

175:                                              ; preds = %392, %156
  ret void

176:                                              ; preds = %160, %392
  %177 = phi %"struct.quic::ParsedQuicVersion"* [ %157, %160 ], [ %393, %392 ]
  %178 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %177, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = load i32*, i32** %161, align 8
  %181 = load i32*, i32** %136, align 8
  %182 = icmp eq i32* %180, %181
  %183 = ptrtoint i32* %180 to i64
  br i1 %182, label %191, label %184

184:                                              ; preds = %176, %188
  %185 = phi i32* [ %189, %188 ], [ %180, %176 ]
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, %179
  br i1 %187, label %191, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds i32, i32* %185, i64 1
  %190 = icmp eq i32* %189, %181
  br i1 %190, label %194, label %184

191:                                              ; preds = %184, %176
  %192 = phi i32* [ %180, %176 ], [ %185, %184 ]
  %193 = icmp eq i32* %192, %181
  br i1 %193, label %194, label %252

194:                                              ; preds = %188, %191
  %195 = load i32*, i32** %162, align 8
  %196 = icmp eq i32* %181, %195
  %197 = ptrtoint i32* %195 to i64
  br i1 %196, label %201, label %198

198:                                              ; preds = %194
  store i32 %179, i32* %181, align 4
  %199 = getelementptr inbounds i32, i32* %181, i64 1
  %200 = ptrtoint i32* %199 to i64
  store i64 %200, i64* %137, align 8
  br label %252

201:                                              ; preds = %194
  %202 = ptrtoint i32* %181 to i64
  %203 = sub i64 %202, %183
  %204 = ashr exact i64 %203, 2
  %205 = add nsw i64 %204, 1
  %206 = icmp ugt i64 %205, 4611686018427387903
  br i1 %206, label %207, label %209

207:                                              ; preds = %201
  %208 = bitcast %"class.std::__1::vector.1"* %133 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %208) #10
  unreachable

209:                                              ; preds = %201
  %210 = sub i64 %197, %183
  %211 = ashr exact i64 %210, 2
  %212 = icmp ult i64 %211, 2305843009213693951
  br i1 %212, label %213, label %221

213:                                              ; preds = %209
  %214 = ashr exact i64 %210, 1
  %215 = icmp ult i64 %214, %205
  %216 = select i1 %215, i64 %205, i64 %214
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %213
  %219 = icmp ugt i64 %216, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %218
  call void @abort() #10
  unreachable

221:                                              ; preds = %218, %209
  %222 = phi i64 [ %216, %218 ], [ 4611686018427387903, %209 ]
  %223 = shl i64 %222, 2
  %224 = call i8* @_Znwm(i64 %223) #9
  %225 = bitcast i8* %224 to i32*
  br label %226

226:                                              ; preds = %221, %213
  %227 = phi i64 [ %222, %221 ], [ 0, %213 ]
  %228 = phi i32* [ %225, %221 ], [ null, %213 ]
  %229 = getelementptr inbounds i32, i32* %228, i64 %204
  %230 = getelementptr inbounds i32, i32* %228, i64 %227
  %231 = ptrtoint i32* %230 to i64
  store i32 %179, i32* %229, align 4
  %232 = getelementptr inbounds i32, i32* %229, i64 1
  %233 = ptrtoint i32* %232 to i64
  %234 = load i32*, i32** %161, align 8
  %235 = load i64, i64* %137, align 8
  %236 = ptrtoint i32* %234 to i64
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 2
  %239 = sub nsw i64 0, %238
  %240 = getelementptr inbounds i32, i32* %229, i64 %239
  %241 = ptrtoint i32* %240 to i64
  %242 = icmp sgt i64 %237, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %226
  %244 = bitcast i32* %240 to i8*
  %245 = bitcast i32* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 %237, i1 false) #8
  %246 = load i32*, i32** %161, align 8
  br label %247

247:                                              ; preds = %243, %226
  %248 = phi i32* [ %234, %226 ], [ %246, %243 ]
  store i64 %241, i64* %134, align 8
  store i64 %233, i64* %137, align 8
  store i64 %231, i64* %163, align 8
  %249 = icmp eq i32* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast i32* %248 to i8*
  call void @_ZdlPv(i8* %251) #9
  br label %252

252:                                              ; preds = %250, %247, %198, %191
  %253 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %177, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %377

256:                                              ; preds = %252
  %257 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %131, align 8
  %258 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %164, align 8
  %259 = icmp eq %"struct.quic::ParsedQuicVersion"* %257, %258
  %260 = ptrtoint %"struct.quic::ParsedQuicVersion"* %258 to i64
  br i1 %259, label %267, label %261

261:                                              ; preds = %256
  %262 = load i32, i32* %178, align 4
  %263 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %257, i64 0, i32 0
  store i32 1, i32* %263, align 4
  %264 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %257, i64 0, i32 1
  store i32 %262, i32* %264, align 4
  %265 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %257, i64 1
  %266 = ptrtoint %"struct.quic::ParsedQuicVersion"* %265 to i64
  store i64 %266, i64* %132, align 8
  br label %377

267:                                              ; preds = %256
  %268 = ptrtoint %"struct.quic::ParsedQuicVersion"* %257 to i64
  %269 = load i64, i64* %129, align 8
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 3
  %272 = add nsw i64 %271, 1
  %273 = icmp ugt i64 %272, 2305843009213693951
  br i1 %273, label %274, label %276

274:                                              ; preds = %267
  %275 = bitcast %"class.std::__1::vector"* %128 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #10
  unreachable

276:                                              ; preds = %267
  %277 = sub i64 %260, %269
  %278 = ashr exact i64 %277, 3
  %279 = icmp ult i64 %278, 1152921504606846975
  br i1 %279, label %280, label %288

280:                                              ; preds = %276
  %281 = ashr exact i64 %277, 2
  %282 = icmp ult i64 %281, %272
  %283 = select i1 %282, i64 %272, i64 %281
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %294, label %285

285:                                              ; preds = %280
  %286 = icmp ugt i64 %283, 2305843009213693951
  br i1 %286, label %287, label %288

287:                                              ; preds = %285
  call void @abort() #10
  unreachable

288:                                              ; preds = %285, %276
  %289 = phi i64 [ %283, %285 ], [ 2305843009213693951, %276 ]
  %290 = shl i64 %289, 3
  %291 = call i8* @_Znwm(i64 %290) #9
  %292 = bitcast i8* %291 to %"struct.quic::ParsedQuicVersion"*
  %293 = load i32, i32* %253, align 4
  br label %294

294:                                              ; preds = %288, %280
  %295 = phi i32 [ %293, %288 ], [ 1, %280 ]
  %296 = phi i64 [ %289, %288 ], [ 0, %280 ]
  %297 = phi %"struct.quic::ParsedQuicVersion"* [ %292, %288 ], [ null, %280 ]
  %298 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %297, i64 %271
  %299 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %297, i64 %296
  %300 = ptrtoint %"struct.quic::ParsedQuicVersion"* %299 to i64
  %301 = load i32, i32* %178, align 4
  %302 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %298, i64 0, i32 0
  store i32 %295, i32* %302, align 4
  %303 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %297, i64 %271, i32 1
  store i32 %301, i32* %303, align 4
  %304 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %298, i64 1
  %305 = ptrtoint %"struct.quic::ParsedQuicVersion"* %304 to i64
  %306 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %166, align 8
  %307 = ptrtoint %"struct.quic::ParsedQuicVersion"* %306 to i64
  %308 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %131, align 8
  %309 = icmp eq %"struct.quic::ParsedQuicVersion"* %308, %306
  br i1 %309, label %370, label %310

310:                                              ; preds = %294
  %311 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %308, i64 -1
  %312 = ptrtoint %"struct.quic::ParsedQuicVersion"* %311 to i64
  %313 = sub i64 %312, %307
  %314 = lshr i64 %313, 3
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %332, label %318

318:                                              ; preds = %310, %318
  %319 = phi %"struct.quic::ParsedQuicVersion"* [ %329, %318 ], [ %298, %310 ]
  %320 = phi %"struct.quic::ParsedQuicVersion"* [ %322, %318 ], [ %308, %310 ]
  %321 = phi i64 [ %330, %318 ], [ %316, %310 ]
  %322 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %320, i64 -1
  %323 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %322, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %320, i64 -1, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %319, i64 -1, i32 0
  store i32 %324, i32* %327, align 4
  %328 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %319, i64 -1, i32 1
  store i32 %326, i32* %328, align 4
  %329 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %319, i64 -1
  %330 = add i64 %321, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %318, !llvm.loop !5

332:                                              ; preds = %318, %310
  %333 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %310 ], [ %329, %318 ]
  %334 = phi %"struct.quic::ParsedQuicVersion"* [ %298, %310 ], [ %329, %318 ]
  %335 = phi %"struct.quic::ParsedQuicVersion"* [ %308, %310 ], [ %322, %318 ]
  %336 = icmp ult i64 %313, 24
  br i1 %336, label %367, label %337

337:                                              ; preds = %332, %337
  %338 = phi %"struct.quic::ParsedQuicVersion"* [ %365, %337 ], [ %334, %332 ]
  %339 = phi %"struct.quic::ParsedQuicVersion"* [ %358, %337 ], [ %335, %332 ]
  %340 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -1, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -1, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -1, i32 0
  store i32 %341, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -1, i32 1
  store i32 %343, i32* %345, align 4
  %346 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -2, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -2, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -2, i32 0
  store i32 %347, i32* %350, align 4
  %351 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -2, i32 1
  store i32 %349, i32* %351, align 4
  %352 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -3, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -3, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -3, i32 0
  store i32 %353, i32* %356, align 4
  %357 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -3, i32 1
  store i32 %355, i32* %357, align 4
  %358 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -4
  %359 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %358, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %339, i64 -4, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -4, i32 0
  store i32 %360, i32* %363, align 4
  %364 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -4, i32 1
  store i32 %362, i32* %364, align 4
  %365 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %338, i64 -4
  %366 = icmp eq %"struct.quic::ParsedQuicVersion"* %358, %306
  br i1 %366, label %367, label %337

367:                                              ; preds = %337, %332
  %368 = phi %"struct.quic::ParsedQuicVersion"* [ %333, %332 ], [ %365, %337 ]
  %369 = load i64, i64* %129, align 8
  br label %370

370:                                              ; preds = %294, %367
  %371 = phi %"struct.quic::ParsedQuicVersion"* [ %368, %367 ], [ %298, %294 ]
  %372 = phi i64 [ %369, %367 ], [ %307, %294 ]
  %373 = ptrtoint %"struct.quic::ParsedQuicVersion"* %371 to i64
  store i64 %373, i64* %129, align 8
  store i64 %305, i64* %132, align 8
  store i64 %300, i64* %165, align 8
  %374 = icmp eq i64 %372, 0
  br i1 %374, label %377, label %375

375:                                              ; preds = %370
  %376 = inttoptr i64 %372 to i8*
  call void @_ZdlPv(i8* %376) #9
  br label %377

377:                                              ; preds = %261, %370, %375, %252
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #8
  %378 = load i32, i32* %253, align 4
  %379 = load i32, i32* %178, align 4
  store i32 %378, i32* %168, align 4
  store i32 %379, i32* %169, align 4
  call void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.quic::ParsedQuicVersion"* nonnull %5) #8
  %380 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %141, align 8
  %381 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %170, align 8
  %382 = icmp ult %"class.std::__1::basic_string"* %380, %381
  br i1 %382, label %383, label %387

383:                                              ; preds = %377
  %384 = bitcast %"class.std::__1::basic_string"* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %384, i8* nonnull align 8 %167, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 0, i64 24, i1 false) #8
  %385 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %380, i64 1
  %386 = ptrtoint %"class.std::__1::basic_string"* %385 to i64
  store i64 %386, i64* %171, align 8
  br label %392

387:                                              ; preds = %377
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.8"* %138, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %388 = load i8, i8* %173, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %389, label %390, label %392

390:                                              ; preds = %387
  %391 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %391) #9
  br label %392

392:                                              ; preds = %383, %387, %390
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #8
  %393 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %177, i64 1
  %394 = icmp eq %"struct.quic::ParsedQuicVersion"* %393, %158
  br i1 %394, label %175, label %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic23FilterSupportedVersionsENSt3__16vectorINS_17ParsedQuicVersionENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* sret, %"class.std::__1::vector"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* sret, %"struct.quic::ParsedQuicVersion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicVersionManager13AddCustomAlpnERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.quic::QuicVersionManager"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11, i32 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %4, %6
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #8
  br label %21

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %18, i64 %20) #8
  br label %21

21:                                               ; preds = %16, %13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %23 = ptrtoint %"class.std::__1::basic_string"* %22 to i64
  %24 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.quic::QuicVersionManager", %"class.quic::QuicVersionManager"* %0, i64 0, i32 11
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.8"* %26, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  br label %27

27:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.8"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #8
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #9
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.8"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #8
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #8
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #8
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
