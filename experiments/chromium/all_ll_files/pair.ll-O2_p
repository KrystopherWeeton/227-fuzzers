; ModuleID = '../../third_party/boringssl/src/crypto/bio/pair.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/pair.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_bio_st = type { %struct.bio_st*, i32, i64, i64, i64, i8*, i64 }

@methods_biop = internal constant %struct.bio_method_st { i32 1043, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 (%struct.bio_st*, i8*, i32)* @bio_write, i32 (%struct.bio_st*, i8*, i32)* @bio_read, i32 (%struct.bio_st*, i8*)* null, i32 (%struct.bio_st*, i8*, i32)* null, i64 (%struct.bio_st*, i32, i64, i8*)* @bio_ctrl, i32 (%struct.bio_st*)* @bio_new, i32 (%struct.bio_st*)* @bio_free, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* null }, align 8
@.str = private unnamed_addr constant [9 x i8] c"BIO pair\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"../../third_party/boringssl/src/crypto/bio/pair.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_new_bio_pair(%struct.bio_st** nocapture, i64, %struct.bio_st** nocapture, i64) local_unnamed_addr #0 {
  %5 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* nonnull @methods_biop) #4
  %6 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* nonnull @methods_biop) #4
  %7 = icmp eq %struct.bio_st* %5, null
  %8 = icmp eq %struct.bio_st* %6, null
  %9 = or i1 %7, %8
  br i1 %9, label %68, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %5, i64 0, i32 7
  %12 = bitcast i8** %11 to %struct.bio_bio_st**
  %13 = load %struct.bio_bio_st*, %struct.bio_bio_st** %12, align 8
  %14 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %6, i64 0, i32 7
  %15 = bitcast i8** %14 to %struct.bio_bio_st**
  %16 = load %struct.bio_bio_st*, %struct.bio_bio_st** %15, align 8
  %17 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 0
  %18 = load %struct.bio_st*, %struct.bio_st** %17, align 8
  %19 = icmp eq %struct.bio_st* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 0
  %22 = load %struct.bio_st*, %struct.bio_st** %21, align 8
  %23 = icmp eq %struct.bio_st* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %10
  tail call void @ERR_put_error(i32 17, i32 0, i32 105, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 315) #4
  br label %68

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 5
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = icmp eq i64 %1, 0
  %31 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 4
  br i1 %30, label %32, label %34

32:                                               ; preds = %29
  %33 = load i64, i64* %31, align 8
  br label %35

34:                                               ; preds = %29
  store i64 %1, i64* %31, align 8
  br label %35

35:                                               ; preds = %34, %32
  %36 = phi i64 [ %33, %32 ], [ %1, %34 ]
  %37 = tail call i8* @OPENSSL_malloc(i64 %36) #4
  store i8* %37, i8** %26, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @ERR_put_error(i32 17, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 325) #4
  br label %68

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 2
  %42 = bitcast i64* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #4
  br label %43

43:                                               ; preds = %40, %25
  %44 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 5
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %61

47:                                               ; preds = %43
  %48 = icmp eq i64 %3, 0
  %49 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 4
  br i1 %48, label %50, label %52

50:                                               ; preds = %47
  %51 = load i64, i64* %49, align 8
  br label %53

52:                                               ; preds = %47
  store i64 %3, i64* %49, align 8
  br label %53

53:                                               ; preds = %52, %50
  %54 = phi i64 [ %51, %50 ], [ %3, %52 ]
  %55 = tail call i8* @OPENSSL_malloc(i64 %54) #4
  store i8* %55, i8** %44, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void @ERR_put_error(i32 17, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 338) #4
  br label %68

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 2
  %60 = bitcast i64* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #4
  br label %61

61:                                               ; preds = %43, %58
  store %struct.bio_st* %6, %struct.bio_st** %17, align 8
  %62 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 1
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %13, i64 0, i32 6
  store i64 0, i64* %63, align 8
  store %struct.bio_st* %5, %struct.bio_st** %21, align 8
  %64 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 1
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 6
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %5, i64 0, i32 1
  store i32 1, i32* %66, align 8
  %67 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %6, i64 0, i32 1
  store i32 1, i32* %67, align 8
  br label %71

68:                                               ; preds = %57, %39, %24, %4
  %69 = tail call i32 @BIO_free(%struct.bio_st* %5) #4
  %70 = tail call i32 @BIO_free(%struct.bio_st* %6) #4
  br label %71

71:                                               ; preds = %61, %68
  %72 = phi %struct.bio_st* [ null, %68 ], [ %5, %61 ]
  %73 = phi %struct.bio_st* [ null, %68 ], [ %6, %61 ]
  %74 = phi i32 [ 0, %68 ], [ 1, %61 ]
  store %struct.bio_st* %72, %struct.bio_st** %0, align 8
  store %struct.bio_st* %73, %struct.bio_st** %2, align 8
  ret i32 %74
}

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #1

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BIO_ctrl_get_read_request(%struct.bio_st*) local_unnamed_addr #0 {
  %2 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 141, i64 0, i8* null) #4
  ret i64 %2
}

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BIO_ctrl_get_write_guarantee(%struct.bio_st*) local_unnamed_addr #0 {
  %2 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 140, i64 0, i8* null) #4
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_shutdown_wr(%struct.bio_st*) local_unnamed_addr #0 {
  %2 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 142, i64 0, i8* null) #4
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bio_write(%struct.bio_st*, i8* readonly, i32) #0 {
  %4 = sext i32 %2 to i64
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #4
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9
  br i1 %11, label %63, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %14 = bitcast i8** %13 to %struct.bio_bio_st**
  %15 = load %struct.bio_bio_st*, %struct.bio_bio_st** %14, align 8
  %16 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 6
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %12
  tail call void @ERR_put_error(i32 17, i32 0, i32 101, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 251) #4
  br label %63

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  tail call void @BIO_set_retry_write(%struct.bio_st* %0) #4
  br label %63

28:                                               ; preds = %21
  %29 = sub i64 %25, %23
  %30 = icmp ult i64 %29, %4
  %31 = select i1 %30, i64 %29, i64 %4
  %32 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 3
  %33 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 5
  br label %34

34:                                               ; preds = %58, %28
  %35 = phi i64 [ %25, %28 ], [ %60, %58 ]
  %36 = phi i64 [ %23, %28 ], [ %55, %58 ]
  %37 = phi i8* [ %1, %28 ], [ %59, %58 ]
  %38 = phi i64 [ %31, %28 ], [ %56, %58 ]
  %39 = load i64, i64* %32, align 8
  %40 = add i64 %36, %39
  %41 = icmp ult i64 %40, %35
  %42 = select i1 %41, i64 0, i64 %35
  %43 = sub i64 %40, %42
  %44 = add i64 %43, %38
  %45 = icmp ugt i64 %44, %35
  %46 = sub i64 %35, %43
  %47 = select i1 %45, i64 %46, i64 %38
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %34
  %50 = load i8*, i8** %33, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %43
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %37, i64 %47, i1 false) #4
  %52 = load i64, i64* %22, align 8
  br label %53

53:                                               ; preds = %34, %49
  %54 = phi i64 [ %36, %34 ], [ %52, %49 ]
  %55 = add i64 %54, %47
  store i64 %55, i64* %22, align 8
  %56 = sub i64 %38, %47
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %37, i64 %47
  %60 = load i64, i64* %24, align 8
  br label %34

61:                                               ; preds = %53
  %62 = trunc i64 %31 to i32
  br label %63

63:                                               ; preds = %3, %61, %27, %20
  %64 = phi i32 [ -1, %20 ], [ -1, %27 ], [ %62, %61 ], [ 0, %3 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bio_read(%struct.bio_st*, i8*, i32) #0 {
  %4 = sext i32 %2 to i64
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #4
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %75, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %10 = bitcast i8** %9 to %struct.bio_bio_st**
  %11 = load %struct.bio_bio_st*, %struct.bio_bio_st** %10, align 8
  %12 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %11, i64 0, i32 0
  %13 = load %struct.bio_st*, %struct.bio_st** %12, align 8
  %14 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %13, i64 0, i32 7
  %15 = bitcast i8** %14 to %struct.bio_bio_st**
  %16 = load %struct.bio_bio_st*, %struct.bio_bio_st** %15, align 8
  %17 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 6
  store i64 0, i64* %17, align 8
  %18 = icmp eq i8* %1, null
  %19 = icmp eq i32 %2, 0
  %20 = or i1 %18, %19
  br i1 %20, label %75, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %75

29:                                               ; preds = %25
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #4
  %30 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, %4
  %33 = select i1 %32, i64 %31, i64 %4
  store i64 %33, i64* %17, align 8
  br label %75

34:                                               ; preds = %21
  %35 = icmp ult i64 %23, %4
  %36 = select i1 %35, i64 %23, i64 %4
  %37 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 3
  %38 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 4
  %39 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %16, i64 0, i32 5
  %40 = load i64, i64* %37, align 8
  br label %41

41:                                               ; preds = %68, %34
  %42 = phi i64 [ %23, %34 ], [ %58, %68 ]
  %43 = phi i64 [ %40, %34 ], [ %69, %68 ]
  %44 = phi i8* [ %1, %34 ], [ %70, %68 ]
  %45 = phi i64 [ %36, %34 ], [ %71, %68 ]
  %46 = add i64 %43, %45
  %47 = load i64, i64* %38, align 8
  %48 = icmp ugt i64 %46, %47
  %49 = sub i64 %47, %43
  %50 = select i1 %48, i64 %49, i64 %45
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %41
  %53 = load i8*, i8** %39, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %43
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %54, i64 %50, i1 false) #4
  %55 = load i64, i64* %22, align 8
  br label %56

56:                                               ; preds = %41, %52
  %57 = phi i64 [ %42, %41 ], [ %55, %52 ]
  %58 = sub i64 %57, %50
  store i64 %58, i64* %22, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = load i64, i64* %37, align 8
  %62 = add i64 %61, %50
  %63 = load i64, i64* %38, align 8
  %64 = icmp eq i64 %62, %63
  %65 = select i1 %64, i64 0, i64 %62
  store i64 %65, i64* %37, align 8
  %66 = getelementptr inbounds i8, i8* %44, i64 %50
  br label %68

67:                                               ; preds = %56
  store i64 0, i64* %37, align 8
  br label %68

68:                                               ; preds = %67, %60
  %69 = phi i64 [ %65, %60 ], [ 0, %67 ]
  %70 = phi i8* [ %66, %60 ], [ %44, %67 ]
  %71 = sub i64 %45, %50
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %41

73:                                               ; preds = %68
  %74 = trunc i64 %36 to i32
  br label %75

75:                                               ; preds = %25, %8, %3, %73, %29
  %76 = phi i32 [ -1, %29 ], [ %74, %73 ], [ 0, %3 ], [ 0, %8 ], [ 0, %25 ]
  ret i32 %76
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @bio_ctrl(%struct.bio_st* nocapture, i32, i64, i8* readonly) #2 {
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %6 = bitcast i8** %5 to %struct.bio_bio_st**
  %7 = load %struct.bio_bio_st*, %struct.bio_bio_st** %6, align 8
  switch i32 %1, label %70 [
    i32 137, label %8
    i32 140, label %11
    i32 141, label %25
    i32 147, label %28
    i32 142, label %30
    i32 8, label %32
    i32 9, label %36
    i32 10, label %39
    i32 13, label %49
    i32 11, label %71
    i32 2, label %56
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  br label %71

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 0
  %13 = load %struct.bio_st*, %struct.bio_st** %12, align 8
  %14 = icmp eq %struct.bio_st* %13, null
  br i1 %14, label %71, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %71

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  br label %71

25:                                               ; preds = %4
  %26 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 6
  %27 = load i64, i64* %26, align 8
  br label %71

28:                                               ; preds = %4
  %29 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 6
  store i64 0, i64* %29, align 8
  br label %71

30:                                               ; preds = %4
  %31 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 1
  store i32 1, i32* %31, align 8
  br label %71

32:                                               ; preds = %4
  %33 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  br label %71

36:                                               ; preds = %4
  %37 = trunc i64 %2 to i32
  %38 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %37, i32* %38, align 4
  br label %71

39:                                               ; preds = %4
  %40 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 0
  %41 = load %struct.bio_st*, %struct.bio_st** %40, align 8
  %42 = icmp eq %struct.bio_st* %41, null
  br i1 %42, label %71, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %41, i64 0, i32 7
  %45 = bitcast i8** %44 to %struct.bio_bio_st**
  %46 = load %struct.bio_bio_st*, %struct.bio_bio_st** %45, align 8
  %47 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %46, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  br label %71

49:                                               ; preds = %4
  %50 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 5
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %71, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %7, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  br label %71

56:                                               ; preds = %4
  %57 = icmp eq i8* %3, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds i8, i8* %3, i64 32
  %60 = bitcast i8* %59 to %struct.bio_bio_st**
  %61 = load %struct.bio_bio_st*, %struct.bio_bio_st** %60, align 8
  %62 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %61, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %61, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp ne i32 %67, 0
  %69 = zext i1 %68 to i64
  br label %71

70:                                               ; preds = %4
  br label %71

71:                                               ; preds = %65, %58, %56, %4, %39, %11, %15, %49, %53, %43, %19, %70, %36, %32, %30, %28, %25, %8
  %72 = phi i64 [ 0, %70 ], [ %55, %53 ], [ 0, %49 ], [ %48, %43 ], [ 1, %36 ], [ %35, %32 ], [ 1, %30 ], [ 1, %28 ], [ %27, %25 ], [ %24, %19 ], [ %10, %8 ], [ 0, %15 ], [ 0, %11 ], [ 0, %39 ], [ 1, %4 ], [ 0, %58 ], [ %69, %65 ], [ 1, %56 ]
  ret i64 %72
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bio_new(%struct.bio_st* nocapture) #0 {
  %2 = tail call i8* @OPENSSL_malloc(i64 56) #4
  %3 = icmp eq i8* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 56, i1 false) #4
  %5 = getelementptr inbounds i8, i8* %2, i64 32
  %6 = bitcast i8* %5 to i64*
  store i64 17408, i64* %6, align 8
  %7 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  store i8* %2, i8** %7, align 8
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 1, %4 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bio_free(%struct.bio_st*) #0 {
  %2 = icmp eq %struct.bio_st* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.bio_st**
  %7 = load %struct.bio_st*, %struct.bio_st** %6, align 8
  %8 = icmp eq %struct.bio_st* %7, null
  %9 = icmp eq i8* %5, null
  %10 = or i1 %8, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = bitcast i8* %5 to %struct.bio_st**
  %13 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %7, i64 0, i32 7
  %14 = bitcast i8** %13 to %struct.bio_bio_st**
  %15 = load %struct.bio_bio_st*, %struct.bio_bio_st** %14, align 8
  %16 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 0
  store %struct.bio_st* null, %struct.bio_st** %16, align 8
  %17 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %7, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.bio_bio_st, %struct.bio_bio_st* %15, i64 0, i32 2
  %19 = bitcast i64* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #4
  store %struct.bio_st* null, %struct.bio_st** %12, align 8
  %20 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #4
  br label %22

22:                                               ; preds = %11, %3
  %23 = getelementptr inbounds i8, i8* %5, i64 40
  %24 = bitcast i8* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @OPENSSL_free(i8* %25) #4
  tail call void @OPENSSL_free(i8* %5) #4
  br label %26

26:                                               ; preds = %1, %22
  %27 = phi i32 [ 1, %22 ], [ 0, %1 ]
  ret i32 %27
}

declare void @BIO_clear_retry_flags(%struct.bio_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @BIO_set_retry_write(%struct.bio_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @BIO_set_retry_read(%struct.bio_st*) local_unnamed_addr #1

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
