; ModuleID = '../../third_party/skia/src/core/SkRegion_path.cpp'
source_filename = "../../third_party/skia/src/core/SkRegion_path.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkRgnBuilder = type { %class.SkBlitter, i32*, %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"*, i32*, i32, i32 }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.SkRgnBuilder::Scanline" = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type { %"struct.std::__1::atomic", i32, i32, i32 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%struct.EdgeLT = type { i8 }
%struct.Edge = type { i32, i32, i32, i8, %struct.Edge* }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.16, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.16 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }

$_ZN12SkRgnBuilder9blitAntiHEiiPKhPKs = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_Z12SkTIntroSortI4Edge6EdgeLTEviPT_iRKT0_ = comdat any

$_Z20SkTHeapSort_SiftDownI4Edge6EdgeLTEvPT_mmRKT0_ = comdat any

$_Z18SkTHeapSort_SiftUpI4Edge6EdgeLTEvPT_mmRKT0_ = comdat any

@_ZTV12SkRgnBuilder = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRgnBuilder*)* @_ZN12SkRgnBuilderD2Ev to i8*), i8* bitcast (void (%class.SkRgnBuilder*)* @_ZN12SkRgnBuilderD0Ev to i8*), i8* bitcast (void (%class.SkRgnBuilder*, i32, i32, i32)* @_ZN12SkRgnBuilder5blitHEiii to i8*), i8* bitcast (void (%class.SkRgnBuilder*, i32, i32, i8*, i16*)* @_ZN12SkRgnBuilder9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZZL26verb_to_initial_last_indexjE27gPathVerbToInitialLastIndex = internal unnamed_addr constant [7 x i8] c"\00\01\02\02\03\00\00", align 1
@.str = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/core/SkRegionPriv.h\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Invalid Size\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

@_ZN12SkRgnBuilderC1Ev = hidden unnamed_addr alias void (%class.SkRgnBuilder*), void (%class.SkRgnBuilder*)* @_ZN12SkRgnBuilderC2Ev
@_ZN12SkRgnBuilderD1Ev = hidden unnamed_addr alias void (%class.SkRgnBuilder*), void (%class.SkRgnBuilder*)* @_ZN12SkRgnBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRgnBuilderC2Ev(%class.SkRgnBuilder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.SkAutoMalloc* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV12SkRgnBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  store i32* null, i32** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRgnBuilderD2Ev(%class.SkRgnBuilder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV12SkRgnBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %4 = bitcast i32** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #9
  %6 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %6) #9
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRgnBuilderD0Ev(%class.SkRgnBuilder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV12SkRgnBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %4 = bitcast i32** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #9
  %6 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %6) #9
  %7 = bitcast %class.SkRgnBuilder* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRgnBuilder4initEiib(%class.SkRgnBuilder* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = or i32 %2, %1
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %88, label %7

7:                                                ; preds = %4
  br i1 %3, label %8, label %14

8:                                                ; preds = %7
  %9 = icmp sgt i32 %2, 2147483645
  %10 = add nsw i32 %2, 2
  %11 = xor i1 %9, true
  %12 = zext i1 %11 to i8
  %13 = select i1 %9, i32 %2, i32 %10
  br label %14

14:                                               ; preds = %8, %7
  %15 = phi i8 [ 1, %7 ], [ %12, %8 ]
  %16 = phi i32 [ %2, %7 ], [ %13, %8 ]
  %17 = icmp eq i32 %1, 2147483647
  %18 = add nsw i32 %1, 1
  %19 = select i1 %17, i8 0, i8 %15
  %20 = select i1 %17, i32 2147483647, i32 %18
  %21 = sext i32 %20 to i64
  %22 = icmp slt i32 %16, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %14
  %24 = sub nsw i32 -2147483648, %16
  %25 = icmp sgt i32 %24, 3
  br i1 %25, label %31, label %28

26:                                               ; preds = %14
  %27 = icmp sgt i32 %16, 2147483644
  br i1 %27, label %31, label %28

28:                                               ; preds = %26, %23
  %29 = add nsw i32 %16, 3
  %30 = sext i32 %29 to i64
  br label %31

31:                                               ; preds = %26, %23, %28
  %32 = phi i8 [ %19, %28 ], [ 0, %23 ], [ 0, %26 ]
  %33 = phi i64 [ %30, %28 ], [ 3, %23 ], [ 3, %26 ]
  %34 = or i64 %33, %21
  %35 = icmp ugt i64 %34, 4294967295
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = mul nsw i64 %33, %21
  br label %62

38:                                               ; preds = %31
  %39 = and i64 %21, 4294967295
  %40 = and i64 %33, 4294967295
  %41 = mul nuw i64 %40, %39
  %42 = lshr i64 %21, 32
  %43 = mul nuw i64 %40, %42
  %44 = lshr i64 %33, 32
  %45 = mul nuw i64 %44, %39
  %46 = mul nuw i64 %44, %42
  %47 = shl i64 %43, 32
  %48 = add i64 %47, %41
  %49 = icmp uge i64 %48, %41
  %50 = shl i64 %45, 32
  %51 = add i64 %48, %50
  %52 = icmp uge i64 %51, %48
  %53 = lshr i64 %43, 32
  %54 = add nuw i64 %53, %46
  %55 = lshr i64 %45, 32
  %56 = sub nsw i64 0, %55
  %57 = icmp eq i64 %54, %56
  %58 = and i1 %57, %49
  %59 = and i1 %58, %52
  %60 = zext i1 %59 to i8
  %61 = and i8 %32, %60
  br label %62

62:                                               ; preds = %36, %38
  %63 = phi i8 [ %61, %38 ], [ %32, %36 ]
  %64 = phi i64 [ %51, %38 ], [ %37, %36 ]
  br i1 %3, label %65, label %70

65:                                               ; preds = %62
  %66 = add i64 %64, 10
  %67 = icmp ult i64 %64, -10
  %68 = zext i1 %67 to i8
  %69 = and i8 %63, %68
  br label %70

70:                                               ; preds = %65, %62
  %71 = phi i8 [ %69, %65 ], [ %63, %62 ]
  %72 = phi i64 [ %66, %65 ], [ %64, %62 ]
  %73 = icmp ne i8 %71, 0
  %74 = icmp ult i64 %72, 2147483648
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %88

76:                                               ; preds = %70
  %77 = trunc i64 %72 to i32
  %78 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 6
  store i32 %77, i32* %78, align 4
  %79 = shl i64 %72, 32
  %80 = ashr exact i64 %79, 32
  %81 = tail call i8* @_Z17sk_malloc_canfailmm(i64 %80, i64 4) #9
  %82 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %83 = bitcast i32** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = icmp eq i8* %81, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 2
  %87 = bitcast %"struct.SkRgnBuilder::Scanline"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false)
  br label %88

88:                                               ; preds = %85, %70, %76, %4
  %89 = phi i1 [ false, %4 ], [ true, %85 ], [ false, %70 ], [ false, %76 ]
  ret i1 %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @_Z17sk_malloc_canfailmm(i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12SkRgnBuilder5blitHEiii(%class.SkRgnBuilder* nocapture, i32, i32, i32) unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 2
  %6 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %7 = icmp eq %"struct.SkRgnBuilder::Scanline"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 5
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %11 = bitcast i32** %10 to %"struct.SkRgnBuilder::Scanline"**
  %12 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %11, align 8
  store %"struct.SkRgnBuilder::Scanline"* %12, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %13 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %12, i64 0, i32 0
  store i32 %2, i32* %13, align 4
  %14 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %15 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %14, i64 1, i32 0
  %16 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 4
  store i32* %15, i32** %16, align 8
  br label %99

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %2
  %21 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 4
  br i1 %20, label %24, label %22

22:                                               ; preds = %17
  %23 = load i32*, i32** %21, align 8
  br label %99

24:                                               ; preds = %17
  %25 = bitcast i32** %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %6, i64 1, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %26, %28
  %30 = lshr exact i64 %29, 2
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %6, i64 0, i32 1
  store i32 %31, i32* %32, align 4
  %33 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %34 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 3
  %37 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %36, align 8
  %38 = icmp eq %"struct.SkRgnBuilder::Scanline"* %37, null
  %39 = ptrtoint %"struct.SkRgnBuilder::Scanline"* %33 to i64
  br i1 %38, label %68, label %40

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %37, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  %44 = icmp eq i32 %43, %35
  br i1 %44, label %45, label %68

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %37, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %33, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %68

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %37, i64 1, i32 0
  %53 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %33, i64 1, i32 0
  %54 = icmp sgt i32 %47, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = zext i32 %47 to i64
  br label %59

57:                                               ; preds = %59
  %58 = icmp eq i64 %66, %56
  br i1 %58, label %67, label %59

59:                                               ; preds = %57, %55
  %60 = phi i64 [ 0, %55 ], [ %66, %57 ]
  %61 = getelementptr inbounds i32, i32* %52, i64 %60
  %62 = load i32, i32* %61, align 4, !alias.scope !2, !noalias !5
  %63 = getelementptr inbounds i32, i32* %53, i64 %60
  %64 = load i32, i32* %63, align 4, !alias.scope !5, !noalias !2
  %65 = icmp eq i32 %62, %64
  %66 = add nuw nsw i64 %60, 1
  br i1 %65, label %57, label %68

67:                                               ; preds = %57, %51
  store i32 %35, i32* %41, align 4
  br label %77

68:                                               ; preds = %59, %24, %45, %40
  %69 = bitcast %"struct.SkRgnBuilder::Scanline"** %36 to i64*
  store i64 %39, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %33, i64 1, i32 0
  %71 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %33, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %70, i64 %73
  %75 = getelementptr inbounds i32, i32* %74, i64 1
  %76 = bitcast %"struct.SkRgnBuilder::Scanline"** %5 to i32**
  store i32* %75, i32** %76, align 8
  br label %77

77:                                               ; preds = %67, %68
  %78 = add nsw i32 %2, -1
  %79 = icmp sgt i32 %78, %35
  %80 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  br i1 %79, label %81, label %94

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %80, i64 0, i32 0
  store i32 %78, i32* %82, align 4
  %83 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %84 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %83, i64 0, i32 1
  store i32 0, i32* %84, align 4
  %85 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %86 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %85, i64 1, i32 0
  %87 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %85, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %86, i64 %89
  %91 = getelementptr inbounds i32, i32* %90, i64 1
  %92 = bitcast %"struct.SkRgnBuilder::Scanline"** %5 to i32**
  store i32* %91, i32** %92, align 8
  %93 = bitcast i32* %91 to %"struct.SkRgnBuilder::Scanline"*
  br label %94

94:                                               ; preds = %77, %81
  %95 = phi %"struct.SkRgnBuilder::Scanline"* [ %93, %81 ], [ %80, %77 ]
  %96 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %95, i64 0, i32 0
  store i32 %2, i32* %96, align 4
  %97 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %5, align 8
  %98 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %97, i64 1, i32 0
  store i32* %98, i32** %21, align 8
  br label %99

99:                                               ; preds = %22, %94, %8
  %100 = phi %"struct.SkRgnBuilder::Scanline"* [ %6, %22 ], [ %97, %94 ], [ %14, %8 ]
  %101 = phi i32* [ %23, %22 ], [ %98, %94 ], [ %15, %8 ]
  %102 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 4
  %103 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %100, i64 1, i32 0
  %104 = icmp ugt i32* %101, %103
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = getelementptr inbounds i32, i32* %101, i64 -1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %1
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = add nsw i32 %3, %1
  store i32 %110, i32* %106, align 4
  br label %117

111:                                              ; preds = %105, %99
  store i32 %1, i32* %101, align 4
  %112 = add nsw i32 %3, %1
  %113 = load i32*, i32** %102, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  store i32 %112, i32* %114, align 4
  %115 = load i32*, i32** %102, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 2
  store i32* %116, i32** %102, align 8
  br label %117

117:                                              ; preds = %111, %109
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12SkRgnBuilder15computeRunCountEv(%class.SkRgnBuilder* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 2
  %3 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %2, align 8
  %4 = icmp eq %"struct.SkRgnBuilder::Scanline"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.SkRgnBuilder::Scanline"* %3 to i64
  %10 = sub i64 %9, %8
  %11 = lshr exact i64 %10, 2
  %12 = trunc i64 %11 to i32
  %13 = add nsw i32 %12, 2
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i32 [ %13, %5 ], [ 0, %1 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK12SkRgnBuilder10copyToRectEP7SkIRect(%class.SkRgnBuilder* nocapture readonly, %struct.SkIRect* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %4 = bitcast i32** %3 to %"struct.SkRgnBuilder::Scanline"**
  %5 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %5, i64 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds i32, i32* %6, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 1
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  store i32 %7, i32* %15, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  store i32 %9, i32* %16, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  store i32 %11, i32* %17, align 4
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  store i32 %14, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkRgnBuilder9copyToRgnEPi(%class.SkRgnBuilder* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 1
  %4 = bitcast i32** %3 to %"struct.SkRgnBuilder::Scanline"**
  %5 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %4, align 8
  %6 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 2
  %7 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %6, align 8
  %8 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %9, i32* %1, align 4
  br label %11

11:                                               ; preds = %30, %2
  %12 = phi i32* [ %10, %2 ], [ %32, %30 ]
  %13 = phi %"struct.SkRgnBuilder::Scanline"* [ %5, %2 ], [ %38, %30 ]
  %14 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  %17 = getelementptr inbounds i32, i32* %12, i64 1
  store i32 %16, i32* %12, align 4
  %18 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %13, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = ashr i32 %19, 1
  %21 = getelementptr inbounds i32, i32* %12, i64 2
  store i32 %20, i32* %17, align 4
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %11
  %24 = bitcast i32* %21 to i8*
  %25 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %13, i64 1, i32 0
  %26 = bitcast i32* %25 to i8*
  %27 = sext i32 %19 to i64
  %28 = shl nsw i64 %27, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %26, i64 %28, i1 false)
  %29 = getelementptr inbounds i32, i32* %21, i64 %27
  br label %30

30:                                               ; preds = %11, %23
  %31 = phi i32* [ %29, %23 ], [ %21, %11 ]
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 2147483647, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %13, i64 1, i32 0
  %34 = load i32, i32* %18, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %33, i64 1
  %37 = getelementptr inbounds i32, i32* %36, i64 %35
  %38 = bitcast i32* %37 to %"struct.SkRgnBuilder::Scanline"*
  %39 = icmp ugt %"struct.SkRgnBuilder::Scanline"* %7, %38
  br i1 %39, label %11, label %40

40:                                               ; preds = %30
  store i32 2147483647, i32* %32, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion*, %class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPath::Iter", align 8
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca %class.SkRegion, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %class.SkRgnBuilder, align 8
  %10 = alloca %class.SkRegion, align 8
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %12 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %11, align 8
  %13 = icmp eq %"struct.SkRegion::RunHead"* %12, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %13, label %40, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %16 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 10
  %22 = load i8, i8* %21, align 1, !range !7
  br label %32

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 1
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 3, i32 0
  %26 = load %struct.SkPoint*, %struct.SkPoint** %25, align 8
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 3, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %24, %struct.SkPoint* %26, i32 %28) #9
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 10
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 1
  store i8 0, i8* %17, align 8
  br label %32

32:                                               ; preds = %20, %23
  %33 = phi i8 [ %22, %20 ], [ %31, %23 ]
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 4, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %32, %35, %3
  %41 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %42 = load i8, i8* %41, align 2
  %43 = and i8 %42, 2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %0, %class.SkRegion* dereferenceable(24) %2) #9
  %47 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %48 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %47, align 8
  %49 = icmp ne %"struct.SkRegion::RunHead"* %48, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %387

50:                                               ; preds = %40
  %51 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %0) #9
  br label %387

52:                                               ; preds = %35
  %53 = bitcast %"struct.SkRegion::RunHead"** %11 to i64*
  %54 = load i64, i64* %53, align 8
  switch i64 %54, label %55 [
    i64 -1, label %61
    i64 0, label %61
  ]

55:                                               ; preds = %52
  %56 = bitcast %class.SkRegion* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #9
  %57 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %6, %struct.SkIRect* dereferenceable(16) %57) #9
  %58 = call zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion* %0, %class.SkPath* dereferenceable(16) %1, %class.SkRegion* nonnull dereferenceable(24) %6)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #9
  br i1 %58, label %59, label %387

59:                                               ; preds = %55
  %60 = call zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion* %0, %class.SkRegion* dereferenceable(24) %0, %class.SkRegion* dereferenceable(24) %2, i32 1) #9
  br label %387

61:                                               ; preds = %52, %52
  %62 = bitcast %"class.SkPath::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false) #9
  %64 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 6
  %65 = bitcast float* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 -1, i64 16, i1 false) #9
  %66 = bitcast i8* %64 to i64*
  store i64 -6148914691236517206, i64* %66, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %4, %class.SkPath* dereferenceable(16) %1, i1 zeroext true) #9
  %67 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #9
  %68 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %69 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -1, i64 32, i1 false) #9
  %70 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %4, %struct.SkPoint* nonnull %68) #9
  %71 = icmp eq i32 %70, 6
  br i1 %71, label %118, label %72

72:                                               ; preds = %61, %111
  %73 = phi i32 [ %114, %111 ], [ %70, %61 ]
  %74 = phi float [ %113, %111 ], [ -3.276700e+04, %61 ]
  %75 = phi float [ %112, %111 ], [ 3.276700e+04, %61 ]
  %76 = phi i32 [ %81, %111 ], [ 0, %61 ]
  %77 = zext i32 %73 to i64
  %78 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZL26verb_to_initial_last_indexjE27gPathVerbToInitialLastIndex, i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = add i32 %76, %80
  %82 = add nsw i64 %77, -1
  %83 = icmp ult i64 %82, 4
  br i1 %83, label %84, label %103

84:                                               ; preds = %72
  %85 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZL26verb_to_initial_last_indexjE27gPathVerbToInitialLastIndex, i64 0, i64 %77
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  br label %88

88:                                               ; preds = %98, %84
  %89 = phi i64 [ 1, %84 ], [ %101, %98 ]
  %90 = phi float [ %74, %84 ], [ %100, %98 ]
  %91 = phi float [ %75, %84 ], [ %99, %98 ]
  %92 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 %89, i32 1
  %93 = load float, float* %92, align 4
  %94 = fcmp ogt float %91, %93
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = fcmp olt float %90, %93
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  br label %98

98:                                               ; preds = %97, %95, %88
  %99 = phi float [ %91, %97 ], [ %91, %95 ], [ %93, %88 ]
  %100 = phi float [ %93, %97 ], [ %90, %95 ], [ %90, %88 ]
  %101 = add nuw nsw i64 %89, 1
  %102 = icmp ult i64 %89, %87
  br i1 %102, label %88, label %111

103:                                              ; preds = %72
  %104 = icmp eq i32 %73, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %103
  %106 = load float, float* %69, align 4
  %107 = fcmp ogt float %75, %106
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = fcmp olt float %74, %106
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  br label %111

111:                                              ; preds = %98, %110, %108, %105, %103
  %112 = phi float [ %75, %110 ], [ %75, %108 ], [ %75, %103 ], [ %106, %105 ], [ %99, %98 ]
  %113 = phi float [ %106, %110 ], [ %74, %108 ], [ %74, %103 ], [ %74, %105 ], [ %100, %98 ]
  %114 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %4, %struct.SkPoint* nonnull %68) #9
  %115 = icmp eq i32 %114, 6
  br i1 %115, label %116, label %72

116:                                              ; preds = %111
  %117 = icmp eq i32 %81, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %116, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %62) #9
  %119 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %120 = load i8, i8* %119, align 2
  %121 = and i8 %120, 2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %118
  %124 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %0, %class.SkRegion* dereferenceable(24) %2) #9
  %125 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %126 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %125, align 8
  %127 = icmp ne %"struct.SkRegion::RunHead"* %126, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %387

128:                                              ; preds = %118
  %129 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %0) #9
  br label %387

130:                                              ; preds = %116
  %131 = fadd float %112, 5.000000e-01
  %132 = call float @llvm.floor.f32(float %131) #9
  %133 = fcmp olt float %132, 0x41DFFFFFE0000000
  %134 = select i1 %133, float %132, float 0x41DFFFFFE0000000
  %135 = fcmp ogt float %134, 0xC1DFFFFFE0000000
  %136 = select i1 %135, float %134, float 0xC1DFFFFFE0000000
  %137 = fptosi float %136 to i32
  %138 = fadd float %113, 5.000000e-01
  %139 = call float @llvm.floor.f32(float %138) #9
  %140 = fcmp olt float %139, 0x41DFFFFFE0000000
  %141 = select i1 %140, float %139, float 0x41DFFFFFE0000000
  %142 = fcmp ogt float %141, 0xC1DFFFFFE0000000
  %143 = select i1 %142, float %141, float 0xC1DFFFFFE0000000
  %144 = fptosi float %143 to i32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %62) #9
  %145 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #9
  store i32 -1431655766, i32* %7, align 4
  %146 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #9
  store i32 -1431655766, i32* %8, align 4
  %147 = call i32 @_ZNK8SkRegion20count_runtype_valuesEPiS0_(%class.SkRegion* %2, i32* nonnull %7, i32* nonnull %8) #9
  %148 = load i32, i32* %7, align 4
  %149 = icmp sgt i32 %148, %137
  %150 = select i1 %149, i32 %148, i32 %137
  %151 = load i32, i32* %8, align 4
  %152 = icmp slt i32 %151, %144
  %153 = select i1 %152, i32 %151, i32 %144
  %154 = icmp sgt i32 %153, %150
  br i1 %154, label %167, label %155

155:                                              ; preds = %130
  %156 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %157 = load i8, i8* %156, align 2
  %158 = and i8 %157, 2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %155
  %161 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %0, %class.SkRegion* dereferenceable(24) %2) #9
  %162 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %163 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %162, align 8
  %164 = icmp ne %"struct.SkRegion::RunHead"* %163, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %385

165:                                              ; preds = %155
  %166 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %0) #9
  br label %385

167:                                              ; preds = %130
  %168 = bitcast %class.SkRgnBuilder* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %168) #9
  %169 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 2
  %170 = bitcast %"struct.SkRgnBuilder::Scanline"** %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 -86, i64 32, i1 false)
  %171 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 0, i32 1
  %173 = bitcast %class.SkAutoMalloc* %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV12SkRgnBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %174 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 1
  store i32* null, i32** %174, align 8
  %175 = sub nsw i32 %153, %150
  %176 = icmp slt i32 %81, %147
  %177 = select i1 %176, i32 %147, i32 %81
  %178 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %179 = load i8, i8* %178, align 2
  %180 = and i8 %179, 2
  %181 = icmp ne i8 %180, 0
  %182 = call zeroext i1 @_ZN12SkRgnBuilder4initEiib(%class.SkRgnBuilder* nonnull %9, i32 %175, i32 %177, i1 zeroext %181)
  br i1 %182, label %185, label %183

183:                                              ; preds = %167
  %184 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %0) #9
  br label %380

185:                                              ; preds = %167
  %186 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 0
  call void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16) %1, %class.SkRegion* dereferenceable(24) %2, %class.SkBlitter* nonnull %186) #9
  %187 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 2
  %188 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %187, align 8
  %189 = icmp eq %"struct.SkRgnBuilder::Scanline"* %188, null
  br i1 %189, label %259, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 4
  %192 = bitcast i32** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %188, i64 1, i32 0
  %195 = ptrtoint i32* %194 to i64
  %196 = sub i64 %193, %195
  %197 = lshr exact i64 %196, 2
  %198 = trunc i64 %197 to i32
  %199 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %188, i64 0, i32 1
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 3
  %201 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %200, align 8
  %202 = icmp eq %"struct.SkRgnBuilder::Scanline"* %201, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %190
  %204 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %187, align 8
  br label %237

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %201, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = add nsw i32 %207, 1
  %209 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %187, align 8
  %210 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %209, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %208, %211
  br i1 %212, label %213, label %237

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %201, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %209, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %215, %217
  br i1 %218, label %219, label %237

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %201, i64 1, i32 0
  %221 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %209, i64 1, i32 0
  %222 = icmp sgt i32 %215, 0
  br i1 %222, label %223, label %235

223:                                              ; preds = %219
  %224 = zext i32 %215 to i64
  br label %227

225:                                              ; preds = %227
  %226 = icmp eq i64 %234, %224
  br i1 %226, label %235, label %227

227:                                              ; preds = %225, %223
  %228 = phi i64 [ 0, %223 ], [ %234, %225 ]
  %229 = getelementptr inbounds i32, i32* %220, i64 %228
  %230 = load i32, i32* %229, align 4, !alias.scope !8, !noalias !11
  %231 = getelementptr inbounds i32, i32* %221, i64 %228
  %232 = load i32, i32* %231, align 4, !alias.scope !11, !noalias !8
  %233 = icmp eq i32 %230, %232
  %234 = add nuw nsw i64 %228, 1
  br i1 %233, label %225, label %237

235:                                              ; preds = %225, %219
  store i32 %208, i32* %206, align 4
  %236 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %187, align 8
  br label %247

237:                                              ; preds = %227, %213, %205, %203
  %238 = phi %"struct.SkRgnBuilder::Scanline"* [ %204, %203 ], [ %209, %213 ], [ %209, %205 ], [ %209, %227 ]
  %239 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %238, i64 1, i32 0
  %240 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %238, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %239, i64 %242
  %244 = getelementptr inbounds i32, i32* %243, i64 1
  %245 = bitcast %"struct.SkRgnBuilder::Scanline"** %187 to i32**
  store i32* %244, i32** %245, align 8
  %246 = bitcast i32* %244 to %"struct.SkRgnBuilder::Scanline"*
  br label %247

247:                                              ; preds = %235, %237
  %248 = phi %"struct.SkRgnBuilder::Scanline"* [ %236, %235 ], [ %246, %237 ]
  %249 = icmp eq %"struct.SkRgnBuilder::Scanline"* %248, null
  br i1 %249, label %259, label %250

250:                                              ; preds = %247
  %251 = bitcast i32** %174 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = ptrtoint %"struct.SkRgnBuilder::Scanline"* %248 to i64
  %254 = sub i64 %253, %252
  %255 = lshr exact i64 %254, 2
  %256 = trunc i64 %255 to i32
  %257 = add nsw i32 %256, 2
  %258 = inttoptr i64 %252 to %"struct.SkRgnBuilder::Scanline"*
  switch i32 %256, label %277 [
    i32 -2, label %259
    i32 5, label %261
  ]

259:                                              ; preds = %185, %247, %250
  %260 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %0) #9
  br label %380

261:                                              ; preds = %250
  %262 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  %263 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %258, i64 1, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 5
  %266 = load i32, i32* %265, align 8
  %267 = getelementptr inbounds i32, i32* %263, i64 1
  %268 = load i32, i32* %267, align 4
  %269 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %258, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %270, 1
  %272 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  store i32 %264, i32* %272, align 4
  %273 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  store i32 %266, i32* %273, align 4
  %274 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  store i32 %268, i32* %274, align 4
  %275 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  store i32 %271, i32* %275, align 4
  %276 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %262) #9
  br label %380

277:                                              ; preds = %250
  %278 = bitcast %class.SkRegion* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #9
  %279 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %10, i64 0, i32 0, i32 0
  %280 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %10, i64 0, i32 0, i32 1
  %281 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %10, i64 0, i32 0, i32 2
  %282 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %10, i64 0, i32 0, i32 3
  %283 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %10, i64 0, i32 1
  %284 = bitcast %class.SkRegion* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %284, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %10) #9
  %285 = icmp slt i32 %257, 7
  br i1 %285, label %302, label %286

286:                                              ; preds = %277
  %287 = sext i32 %257 to i64
  %288 = shl nsw i64 %287, 2
  %289 = icmp ult i64 %288, 2147483632
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

291:                                              ; preds = %286
  %292 = add nuw nsw i64 %288, 16
  %293 = call i8* @_Z15sk_malloc_flagsmj(i64 %292, i32 2) #9
  %294 = bitcast i8* %293 to %"struct.SkRegion::RunHead"*
  %295 = bitcast i8* %293 to i32*
  store atomic i32 1, i32* %295 seq_cst, align 4
  %296 = getelementptr inbounds i8, i8* %293, i64 4
  %297 = bitcast i8* %296 to i32*
  store i32 %257, i32* %297, align 4
  %298 = getelementptr inbounds i8, i8* %293, i64 8
  %299 = bitcast i8* %298 to i32*
  store i32 0, i32* %299, align 4
  %300 = getelementptr inbounds i8, i8* %293, i64 12
  %301 = bitcast i8* %300 to i32*
  store i32 0, i32* %301, align 4
  br label %302

302:                                              ; preds = %277, %291
  %303 = phi %"struct.SkRegion::RunHead"* [ %294, %291 ], [ null, %277 ]
  store %"struct.SkRegion::RunHead"* %303, %"struct.SkRegion::RunHead"** %283, align 8
  %304 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %303, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = bitcast i32** %174 to %"struct.SkRgnBuilder::Scanline"**
  %306 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %305, align 8
  %307 = load %"struct.SkRgnBuilder::Scanline"*, %"struct.SkRgnBuilder::Scanline"** %187, align 8
  %308 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 5
  %309 = load i32, i32* %308, align 8
  %310 = getelementptr inbounds i32, i32* %304, i64 1
  store i32 %309, i32* %304, align 4
  br label %311

311:                                              ; preds = %330, %302
  %312 = phi i32* [ %310, %302 ], [ %332, %330 ]
  %313 = phi %"struct.SkRgnBuilder::Scanline"* [ %306, %302 ], [ %338, %330 ]
  %314 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %313, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  %316 = add nsw i32 %315, 1
  %317 = getelementptr inbounds i32, i32* %312, i64 1
  store i32 %316, i32* %312, align 4
  %318 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %313, i64 0, i32 1
  %319 = load i32, i32* %318, align 4
  %320 = ashr i32 %319, 1
  %321 = getelementptr inbounds i32, i32* %312, i64 2
  store i32 %320, i32* %317, align 4
  %322 = icmp eq i32 %319, 0
  br i1 %322, label %330, label %323

323:                                              ; preds = %311
  %324 = bitcast i32* %321 to i8*
  %325 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %313, i64 1, i32 0
  %326 = bitcast i32* %325 to i8*
  %327 = sext i32 %319 to i64
  %328 = shl nsw i64 %327, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %324, i8* align 4 %326, i64 %328, i1 false) #9
  %329 = getelementptr inbounds i32, i32* %321, i64 %327
  br label %330

330:                                              ; preds = %323, %311
  %331 = phi i32* [ %329, %323 ], [ %321, %311 ]
  %332 = getelementptr inbounds i32, i32* %331, i64 1
  store i32 2147483647, i32* %331, align 4
  %333 = getelementptr inbounds %"struct.SkRgnBuilder::Scanline", %"struct.SkRgnBuilder::Scanline"* %313, i64 1, i32 0
  %334 = load i32, i32* %318, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i32, i32* %333, i64 1
  %337 = getelementptr inbounds i32, i32* %336, i64 %335
  %338 = bitcast i32* %337 to %"struct.SkRgnBuilder::Scanline"*
  %339 = icmp ugt %"struct.SkRgnBuilder::Scanline"* %307, %338
  br i1 %339, label %311, label %340

340:                                              ; preds = %330
  store i32 2147483647, i32* %332, align 4
  %341 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %283, align 8
  %342 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %341, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds i32, i32* %342, i64 1
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %280, align 4
  br label %345

345:                                              ; preds = %368, %340
  %346 = phi i32* [ %343, %340 ], [ %373, %368 ]
  %347 = phi i32 [ 0, %340 ], [ %352, %368 ]
  %348 = phi i32 [ 0, %340 ], [ %370, %368 ]
  %349 = phi i32 [ 2147483647, %340 ], [ %371, %368 ]
  %350 = phi i32 [ -2147483647, %340 ], [ %372, %368 ]
  %351 = getelementptr inbounds i32, i32* %346, i64 1
  %352 = add nuw nsw i32 %347, 1
  %353 = getelementptr inbounds i32, i32* %346, i64 2
  %354 = load i32, i32* %351, align 4
  %355 = icmp sgt i32 %354, 0
  br i1 %355, label %356, label %368

356:                                              ; preds = %345
  %357 = load i32, i32* %353, align 4
  %358 = icmp sgt i32 %349, %357
  %359 = select i1 %358, i32 %357, i32 %349
  %360 = shl nsw i32 %354, 1
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i32, i32* %353, i64 %361
  %363 = getelementptr inbounds i32, i32* %362, i64 -1
  %364 = load i32, i32* %363, align 4
  %365 = icmp slt i32 %350, %364
  %366 = select i1 %365, i32 %364, i32 %350
  %367 = add nsw i32 %354, %348
  br label %368

368:                                              ; preds = %356, %345
  %369 = phi i32* [ %362, %356 ], [ %353, %345 ]
  %370 = phi i32 [ %367, %356 ], [ %348, %345 ]
  %371 = phi i32 [ %359, %356 ], [ %349, %345 ]
  %372 = phi i32 [ %366, %356 ], [ %350, %345 ]
  %373 = getelementptr inbounds i32, i32* %369, i64 1
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, 2147483647
  br i1 %375, label %376, label %345

376:                                              ; preds = %368
  %377 = load i32, i32* %346, align 4
  %378 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %341, i64 0, i32 2
  store i32 %352, i32* %378, align 4
  %379 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %341, i64 0, i32 3
  store i32 %370, i32* %379, align 4
  store i32 %371, i32* %279, align 8
  store i32 %372, i32* %281, align 8
  store i32 %377, i32* %282, align 4
  call void @_ZN8SkRegion4swapERS_(%class.SkRegion* %0, %class.SkRegion* nonnull dereferenceable(24) %10) #9
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #9
  br label %380

380:                                              ; preds = %259, %261, %376, %183
  %381 = phi i1 [ %184, %183 ], [ %260, %259 ], [ true, %261 ], [ true, %376 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV12SkRgnBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %382 = bitcast i32** %174 to i8**
  %383 = load i8*, i8** %382, align 8
  call void @_Z7sk_freePv(i8* %383) #9
  %384 = getelementptr inbounds %class.SkRgnBuilder, %class.SkRgnBuilder* %9, i64 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %384) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %168) #9
  br label %385

385:                                              ; preds = %165, %160, %380
  %386 = phi i1 [ %381, %380 ], [ %164, %160 ], [ %166, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #9
  br label %387

387:                                              ; preds = %385, %123, %128, %50, %45, %55, %59
  %388 = phi i1 [ %60, %59 ], [ false, %55 ], [ %49, %45 ], [ %51, %50 ], [ %386, %385 ], [ %127, %123 ], [ %129, %128 ]
  ret i1 %388
}

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #2

declare i32 @_ZNK8SkRegion20count_runtype_valuesEPiS0_(%class.SkRegion*, i32*, i32*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion*) local_unnamed_addr #1

declare void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24), %class.SkBlitter*) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #1

declare void @_ZN8SkRegion4swapERS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion*, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %3 = alloca <4 x float>, align 16
  %4 = alloca %"class.SkRegion::Iterator", align 8
  %5 = alloca %struct.EdgeLT, align 1
  %6 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %7 = bitcast %"struct.SkRegion::RunHead"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %16 [
    i64 -1, label %207
    i64 0, label %9
  ]

9:                                                ; preds = %2
  %10 = bitcast <4 x float>* %3 to %struct.SkRect*
  %11 = bitcast <4 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = bitcast %class.SkRegion* %0 to <4 x i32>*
  %13 = load <4 x i32>, <4 x i32>* %12, align 4
  %14 = sitofp <4 x i32> %13 to <4 x float>
  store <4 x float> %14, <4 x float>* %3, align 16
  %15 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %1, %struct.SkRect* nonnull dereferenceable(16) %10, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %207

16:                                               ; preds = %2
  %17 = bitcast %"class.SkRegion::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %4, %class.SkRegion* dereferenceable(24) %0) #9
  %18 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 3
  %19 = load i8, i8* %18, align 8, !range !7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %141

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 3
  %24 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 1
  %25 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 2
  br label %42

26:                                               ; preds = %65
  %27 = trunc i64 %47 to i32
  %28 = shl i64 %47, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 %29
  %31 = getelementptr inbounds %struct.EdgeLT, %struct.EdgeLT* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #9
  %32 = icmp slt i32 %27, 2
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = add nsw i32 %27, -2
  %35 = call i32 @llvm.ctlz.i32(i32 %34, i1 false) #9, !range !13
  %36 = shl nuw nsw i32 %35, 1
  %37 = sub nsw i32 64, %36
  call void @_Z12SkTIntroSortI4Edge6EdgeLTEviPT_iRKT0_(i32 %37, %struct.Edge* %67, i32 %27, %struct.EdgeLT* nonnull dereferenceable(1) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #9
  br label %40

38:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #9
  %39 = icmp eq i32 %27, 0
  br i1 %39, label %141, label %40

40:                                               ; preds = %33, %38
  %41 = phi i32 [ %27, %33 ], [ 1, %38 ]
  br label %87

42:                                               ; preds = %21, %65
  %43 = phi i64 [ 0, %21 ], [ %47, %65 ]
  %44 = phi i32 [ 0, %21 ], [ %68, %65 ]
  %45 = phi %struct.Edge* [ null, %21 ], [ %67, %65 ]
  %46 = phi i8* [ null, %21 ], [ %66, %65 ]
  %47 = add nuw nsw i64 %43, 2
  %48 = trunc i64 %47 to i32
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %51, label %50

50:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %42
  %52 = icmp slt i32 %44, %48
  br i1 %52, label %53, label %65

53:                                               ; preds = %51
  %54 = trunc i64 %43 to i32
  %55 = add i32 %54, 6
  %56 = lshr i32 %55, 2
  %57 = add nuw i32 %56, %55
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

60:                                               ; preds = %53
  %61 = sext i32 %57 to i64
  %62 = mul nsw i64 %61, 24
  %63 = call i8* @_Z16sk_realloc_throwPvm(i8* %46, i64 %62) #9
  %64 = bitcast i8* %63 to %struct.Edge*
  br label %65

65:                                               ; preds = %51, %60
  %66 = phi i8* [ %63, %60 ], [ %46, %51 ]
  %67 = phi %struct.Edge* [ %64, %60 ], [ %45, %51 ]
  %68 = phi i32 [ %57, %60 ], [ %44, %51 ]
  %69 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 %43
  %70 = load i32, i32* %22, align 8
  %71 = load i32, i32* %23, align 4
  %72 = load i32, i32* %24, align 4
  %73 = getelementptr inbounds %struct.Edge, %struct.Edge* %69, i64 0, i32 0
  store i32 %70, i32* %73, align 8
  %74 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 %43, i32 1
  store i32 %71, i32* %74, align 4
  %75 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 %43, i32 2
  store i32 %72, i32* %75, align 8
  %76 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 %43, i32 3
  store i8 0, i8* %76, align 4
  %77 = getelementptr inbounds %struct.Edge, %struct.Edge* %69, i64 1
  %78 = load i32, i32* %25, align 8
  %79 = load i32, i32* %24, align 4
  %80 = load i32, i32* %23, align 4
  %81 = getelementptr inbounds %struct.Edge, %struct.Edge* %77, i64 0, i32 0
  store i32 %78, i32* %81, align 8
  %82 = getelementptr inbounds %struct.Edge, %struct.Edge* %77, i64 0, i32 1
  store i32 %79, i32* %82, align 4
  %83 = getelementptr inbounds %struct.Edge, %struct.Edge* %77, i64 0, i32 2
  store i32 %80, i32* %83, align 8
  %84 = getelementptr inbounds %struct.Edge, %struct.Edge* %77, i64 0, i32 3
  store i8 0, i8* %84, align 4
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %4) #9
  %85 = load i8, i8* %18, align 8, !range !7
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %42, label %26

87:                                               ; preds = %40, %138
  %88 = phi %struct.Edge* [ %139, %138 ], [ %67, %40 ]
  %89 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 0, i32 3
  %90 = load i8, i8* %89, align 4
  %91 = icmp eq i8 %90, 3
  br i1 %91, label %138, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = and i8 %90, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %116

99:                                               ; preds = %92, %110
  %100 = phi %struct.Edge* [ %101, %110 ], [ %88, %92 ]
  %101 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i64 1
  %102 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i64 1, i32 3
  %103 = load i8, i8* %102, align 4
  %104 = and i8 %103, 2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %99
  %107 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i64 1, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %94, %108
  br i1 %109, label %111, label %110

110:                                              ; preds = %106, %99
  br label %99

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i64 1, i32 3
  %113 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i64 1, i32 4
  store %struct.Edge* %88, %struct.Edge** %113, align 8
  %114 = or i8 %103, 2
  store i8 %114, i8* %112, align 4
  %115 = load i8, i8* %89, align 4
  br label %116

116:                                              ; preds = %111, %92
  %117 = phi i8 [ %115, %111 ], [ %90, %92 ]
  %118 = and i8 %117, 2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %137

120:                                              ; preds = %116, %131
  %121 = phi %struct.Edge* [ %122, %131 ], [ %88, %116 ]
  %122 = getelementptr inbounds %struct.Edge, %struct.Edge* %121, i64 1
  %123 = getelementptr inbounds %struct.Edge, %struct.Edge* %121, i64 1, i32 3
  %124 = load i8, i8* %123, align 4
  %125 = and i8 %124, 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %120
  %128 = getelementptr inbounds %struct.Edge, %struct.Edge* %121, i64 1, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %96, %129
  br i1 %130, label %132, label %131

131:                                              ; preds = %127, %120
  br label %120

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.Edge, %struct.Edge* %121, i64 1, i32 3
  %134 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 0, i32 4
  store %struct.Edge* %122, %struct.Edge** %134, align 8
  %135 = load i8, i8* %133, align 4
  %136 = or i8 %135, 1
  store i8 %136, i8* %133, align 4
  br label %137

137:                                              ; preds = %132, %116
  store i8 3, i8* %89, align 4
  br label %138

138:                                              ; preds = %87, %137
  %139 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 1
  %140 = icmp eq %struct.Edge* %139, %30
  br i1 %140, label %141, label %87

141:                                              ; preds = %138, %16, %38
  %142 = phi i8* [ %66, %38 ], [ null, %16 ], [ %66, %138 ]
  %143 = phi %struct.Edge* [ %67, %38 ], [ null, %16 ], [ %67, %138 ]
  %144 = phi i32 [ 0, %38 ], [ 0, %16 ], [ %41, %138 ]
  %145 = shl i32 %144, 1
  call void @_ZN6SkPath10incReserveEi(%class.SkPath* %1, i32 %145) #9
  br label %146

146:                                              ; preds = %196, %141
  %147 = phi i32 [ %144, %141 ], [ %204, %196 ]
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi %struct.Edge* [ %143, %146 ], [ %153, %148 ]
  %150 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 0, i32 3
  %151 = load i8, i8* %150, align 4
  %152 = icmp eq i8 %151, 0
  %153 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 1
  br i1 %152, label %148, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 0, i32 3
  %156 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 0, i32 4
  %157 = load %struct.Edge*, %struct.Edge** %156, align 8
  %158 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = sitofp i32 %159 to float
  %161 = getelementptr inbounds %struct.Edge, %struct.Edge* %149, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = sitofp i32 %162 to float
  %164 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %160, float %163) #9
  store i8 0, i8* %155, align 4
  br label %165

165:                                              ; preds = %190, %154
  %166 = phi %struct.Edge* [ %157, %154 ], [ %192, %190 ]
  %167 = phi %struct.Edge* [ %149, %154 ], [ %166, %190 ]
  %168 = phi i32 [ 1, %154 ], [ %193, %190 ]
  %169 = getelementptr inbounds %struct.Edge, %struct.Edge* %167, i64 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %170, %172
  %174 = getelementptr inbounds %struct.Edge, %struct.Edge* %167, i64 0, i32 2
  %175 = load i32, i32* %174, align 8
  br i1 %173, label %176, label %180

176:                                              ; preds = %165
  %177 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %175, %178
  br i1 %179, label %190, label %180

180:                                              ; preds = %176, %165
  %181 = sitofp i32 %170 to float
  %182 = sitofp i32 %175 to float
  %183 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %181, float %182) #9
  %184 = load i32, i32* %171, align 8
  %185 = sitofp i32 %184 to float
  %186 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = sitofp i32 %187 to float
  %189 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %185, float %188) #9
  br label %190

190:                                              ; preds = %180, %176
  %191 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 4
  %192 = load %struct.Edge*, %struct.Edge** %191, align 8
  %193 = add nuw nsw i32 %168, 1
  %194 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 3
  store i8 0, i8* %194, align 4
  %195 = icmp eq %struct.Edge* %192, %149
  br i1 %195, label %196, label %165

196:                                              ; preds = %190
  %197 = load i32, i32* %171, align 8
  %198 = sitofp i32 %197 to float
  %199 = getelementptr inbounds %struct.Edge, %struct.Edge* %166, i64 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = sitofp i32 %200 to float
  %202 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %198, float %201) #9
  %203 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %1) #9
  %204 = sub nsw i32 %147, %193
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %146, label %206

206:                                              ; preds = %196
  call void @_Z7sk_freePv(i8* %142) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #9
  br label %207

207:                                              ; preds = %2, %9, %206
  %208 = phi i1 [ false, %2 ], [ true, %206 ], [ true, %9 ]
  ret i1 %208
}

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #1

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #1

declare void @_ZN6SkPath10incReserveEi(%class.SkPath*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRgnBuilder9blitAntiHEiiPKhPKs(%class.SkRgnBuilder*, i32, i32, i8*, i16*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #1

declare void @_ZN9SkBlitter8blitRectEiiii(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #1

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #1

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #9
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #9
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #9
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #9
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #9
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #1

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #1

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortI4Edge6EdgeLTEviPT_iRKT0_(i32, %struct.Edge*, i32, %struct.EdgeLT* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = alloca %struct.Edge, align 8
  %6 = alloca %struct.Edge, align 8
  %7 = alloca %struct.Edge, align 8
  %8 = alloca %struct.Edge, align 8
  %9 = alloca [12 x i8], align 4
  %10 = icmp slt i32 %2, 33
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = bitcast %struct.Edge* %7 to i8*
  %13 = bitcast %struct.Edge* %5 to i8*
  %14 = bitcast %struct.Edge* %6 to i8*
  br label %96

15:                                               ; preds = %169, %4
  %16 = phi i32 [ %2, %4 ], [ %180, %169 ]
  %17 = phi %struct.Edge* [ %1, %4 ], [ %179, %169 ]
  %18 = sext i32 %16 to i64
  %19 = add nsw i64 %18, -1
  %20 = getelementptr inbounds %struct.Edge, %struct.Edge* %17, i64 %19
  %21 = icmp slt i32 %16, 2
  br i1 %21, label %182, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.Edge, %struct.Edge* %17, i64 1
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 0
  br label %25

25:                                               ; preds = %93, %22
  %26 = phi %struct.Edge* [ %23, %22 ], [ %94, %93 ]
  %27 = phi %struct.Edge* [ %17, %22 ], [ %26, %93 ]
  %28 = getelementptr inbounds %struct.Edge, %struct.Edge* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %47

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 1
  %35 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %34, align 4
  %38 = icmp slt i32 %36, %37
  %39 = select i1 %38, i32 %36, i32 %37
  %40 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 0, i32 1
  %41 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %40, align 4
  %44 = icmp slt i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = icmp slt i32 %39, %45
  br i1 %46, label %54, label %93

47:                                               ; preds = %25
  %48 = icmp slt i32 %29, %31
  br i1 %48, label %49, label %93

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 2
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %49, %33
  %55 = phi i32 [ %53, %49 ], [ %36, %33 ]
  %56 = phi i32 [ %51, %49 ], [ %37, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %24)
  %57 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.Edge, %struct.Edge* %27, i64 1, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %59, i64 12, i1 false) #9
  %60 = icmp slt i32 %55, %56
  %61 = select i1 %60, i32 %55, i32 %56
  %62 = getelementptr inbounds %struct.Edge, %struct.Edge* %26, i64 -1
  %63 = bitcast %struct.Edge* %26 to i8*
  %64 = bitcast %struct.Edge* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #9
  %65 = icmp ugt %struct.Edge* %62, %17
  br i1 %65, label %66, label %87

66:                                               ; preds = %54, %82
  %67 = phi %struct.Edge* [ %83, %82 ], [ %62, %54 ]
  %68 = phi %struct.Edge* [ %67, %82 ], [ %26, %54 ]
  %69 = getelementptr inbounds %struct.Edge, %struct.Edge* %68, i64 -2, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %58, %70
  br i1 %71, label %72, label %80

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.Edge, %struct.Edge* %68, i64 -2, i32 1
  %74 = getelementptr inbounds %struct.Edge, %struct.Edge* %68, i64 -2, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* %73, align 4
  %77 = icmp slt i32 %75, %76
  %78 = select i1 %77, i32 %75, i32 %76
  %79 = icmp slt i32 %61, %78
  br i1 %79, label %82, label %87

80:                                               ; preds = %66
  %81 = icmp slt i32 %58, %70
  br i1 %81, label %82, label %87

82:                                               ; preds = %80, %72
  %83 = getelementptr inbounds %struct.Edge, %struct.Edge* %67, i64 -1
  %84 = bitcast %struct.Edge* %67 to i8*
  %85 = bitcast %struct.Edge* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #9
  %86 = icmp ugt %struct.Edge* %83, %17
  br i1 %86, label %66, label %87

87:                                               ; preds = %82, %80, %72, %54
  %88 = phi %struct.Edge* [ %26, %54 ], [ %68, %80 ], [ %67, %82 ], [ %68, %72 ]
  %89 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 -1, i32 0
  store i32 %58, i32* %89, align 8
  %90 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 -1, i32 1
  store i32 %56, i32* %90, align 4
  %91 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 -1, i32 2
  store i32 %55, i32* %91, align 8
  %92 = getelementptr inbounds %struct.Edge, %struct.Edge* %88, i64 -1, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* nonnull align 4 %24, i64 12, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %24)
  br label %93

93:                                               ; preds = %87, %47, %33
  %94 = getelementptr inbounds %struct.Edge, %struct.Edge* %26, i64 1
  %95 = icmp ugt %struct.Edge* %94, %20
  br i1 %95, label %182, label %25

96:                                               ; preds = %11, %169
  %97 = phi i32 [ %0, %11 ], [ %125, %169 ]
  %98 = phi %struct.Edge* [ %1, %11 ], [ %179, %169 ]
  %99 = phi i32 [ %2, %11 ], [ %180, %169 ]
  %100 = icmp eq i32 %97, 0
  br i1 %100, label %101, label %124

101:                                              ; preds = %96
  %102 = sext i32 %99 to i64
  %103 = lshr i64 %102, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %101
  %106 = add nsw i64 %102, -1
  br label %110

107:                                              ; preds = %114
  %108 = add nsw i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %182, label %110

110:                                              ; preds = %105, %107
  %111 = phi i64 [ %106, %105 ], [ %108, %107 ]
  %112 = bitcast %struct.Edge* %8 to i8*
  %113 = bitcast %struct.Edge* %98 to i8*
  br label %118

114:                                              ; preds = %101, %114
  %115 = phi i64 [ %116, %114 ], [ %103, %101 ]
  tail call void @_Z20SkTHeapSort_SiftDownI4Edge6EdgeLTEvPT_mmRKT0_(%struct.Edge* %98, i64 %115, i64 %102, %struct.EdgeLT* dereferenceable(1) %3) #9
  %116 = add nsw i64 %115, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %107, label %114

118:                                              ; preds = %118, %110
  %119 = phi i64 [ %111, %110 ], [ %122, %118 ]
  %120 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 %119
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 %113, i64 24, i1 false) #9
  %121 = bitcast %struct.Edge* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %121, i64 24, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* nonnull align 8 %112, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112)
  tail call void @_Z18SkTHeapSort_SiftUpI4Edge6EdgeLTEvPT_mmRKT0_(%struct.Edge* %98, i64 1, i64 %119, %struct.EdgeLT* dereferenceable(1) %3) #9
  %122 = add i64 %119, -1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %182, label %118

124:                                              ; preds = %96
  %125 = add nsw i32 %97, -1
  %126 = add nsw i32 %99, -1
  %127 = ashr i32 %126, 1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 %128
  %130 = sext i32 %99 to i64
  %131 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 -1
  %132 = getelementptr inbounds %struct.Edge, %struct.Edge* %131, i64 %130
  %133 = getelementptr inbounds %struct.Edge, %struct.Edge* %129, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 %128, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 %128, i32 2
  %138 = load i32, i32* %137, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %139 = bitcast %struct.Edge* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %139, i64 24, i1 false) #9
  %140 = bitcast %struct.Edge* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 24, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* nonnull align 8 %12, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  %141 = icmp ugt %struct.Edge* %132, %98
  br i1 %141, label %142, label %169

142:                                              ; preds = %124
  %143 = icmp slt i32 %138, %136
  %144 = select i1 %143, i32 %138, i32 %136
  br label %145

145:                                              ; preds = %165, %142
  %146 = phi %struct.Edge* [ %98, %142 ], [ %166, %165 ]
  %147 = phi %struct.Edge* [ %98, %142 ], [ %167, %165 ]
  %148 = getelementptr inbounds %struct.Edge, %struct.Edge* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, %134
  br i1 %150, label %151, label %159

151:                                              ; preds = %145
  %152 = getelementptr inbounds %struct.Edge, %struct.Edge* %147, i64 0, i32 1
  %153 = getelementptr inbounds %struct.Edge, %struct.Edge* %147, i64 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = load i32, i32* %152, align 4
  %156 = icmp slt i32 %154, %155
  %157 = select i1 %156, i32 %154, i32 %155
  %158 = icmp slt i32 %157, %144
  br i1 %158, label %161, label %165

159:                                              ; preds = %145
  %160 = icmp slt i32 %149, %134
  br i1 %160, label %161, label %165

161:                                              ; preds = %159, %151
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %162 = bitcast %struct.Edge* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %162, i64 24, i1 false) #9
  %163 = bitcast %struct.Edge* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 24, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* nonnull align 8 %13, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %164 = getelementptr inbounds %struct.Edge, %struct.Edge* %146, i64 1
  br label %165

165:                                              ; preds = %161, %159, %151
  %166 = phi %struct.Edge* [ %164, %161 ], [ %146, %159 ], [ %146, %151 ]
  %167 = getelementptr inbounds %struct.Edge, %struct.Edge* %147, i64 1
  %168 = icmp ult %struct.Edge* %167, %132
  br i1 %168, label %145, label %169

169:                                              ; preds = %165, %124
  %170 = phi %struct.Edge* [ %98, %124 ], [ %166, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14)
  %171 = bitcast %struct.Edge* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %171, i64 24, i1 false) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %140, i64 24, i1 false) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* nonnull align 8 %14, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14)
  %172 = ptrtoint %struct.Edge* %170 to i64
  %173 = ptrtoint %struct.Edge* %98 to i64
  %174 = sub i64 %172, %173
  %175 = sdiv exact i64 %174, 24
  %176 = trunc i64 %175 to i32
  tail call void @_Z12SkTIntroSortI4Edge6EdgeLTEviPT_iRKT0_(i32 %125, %struct.Edge* %98, i32 %176, %struct.EdgeLT* dereferenceable(1) %3)
  %177 = add nsw i32 %176, 1
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds %struct.Edge, %struct.Edge* %98, i64 %178
  %180 = sub nsw i32 %99, %177
  %181 = icmp slt i32 %180, 33
  br i1 %181, label %15, label %96

182:                                              ; preds = %118, %93, %107, %15
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z20SkTHeapSort_SiftDownI4Edge6EdgeLTEvPT_mmRKT0_(%struct.Edge*, i64, i64, %struct.EdgeLT* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = alloca [12 x i8], align 4
  %6 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6)
  %7 = add i64 %1, -1
  %8 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %14, i64 12, i1 false)
  %15 = icmp slt i32 %13, %11
  %16 = select i1 %15, i32 %13, i32 %11
  %17 = shl i64 %1, 1
  %18 = icmp ugt i64 %17, %2
  br i1 %18, label %77, label %19

19:                                               ; preds = %4, %67
  %20 = phi i64 [ %72, %67 ], [ %17, %4 ]
  %21 = phi i64 [ %51, %67 ], [ %1, %4 ]
  %22 = icmp ult i64 %20, %2
  br i1 %22, label %23, label %50

23:                                               ; preds = %19
  %24 = add i64 %20, -1
  %25 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %24, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %20, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %24, i32 1
  %32 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %24, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %31, align 4
  %35 = icmp slt i32 %33, %34
  %36 = select i1 %35, i32 %33, i32 %34
  %37 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %20, i32 1
  %38 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %20, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %37, align 4
  %41 = icmp slt i32 %39, %40
  %42 = select i1 %41, i32 %39, i32 %40
  %43 = icmp slt i32 %36, %42
  br label %46

44:                                               ; preds = %23
  %45 = icmp slt i32 %26, %28
  br label %46

46:                                               ; preds = %30, %44
  %47 = phi i1 [ %43, %30 ], [ %45, %44 ]
  %48 = zext i1 %47 to i64
  %49 = or i64 %20, %48
  br label %50

50:                                               ; preds = %46, %19
  %51 = phi i64 [ %20, %19 ], [ %49, %46 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %52
  %54 = getelementptr inbounds %struct.Edge, %struct.Edge* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %9, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %52, i32 1
  %59 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %52, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* %58, align 4
  %62 = icmp slt i32 %60, %61
  %63 = select i1 %62, i32 %60, i32 %61
  %64 = icmp slt i32 %16, %63
  br i1 %64, label %67, label %74

65:                                               ; preds = %50
  %66 = icmp slt i32 %9, %55
  br i1 %66, label %67, label %74

67:                                               ; preds = %57, %65
  %68 = add i64 %21, -1
  %69 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %68
  %70 = bitcast %struct.Edge* %69 to i8*
  %71 = bitcast %struct.Edge* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 24, i1 false)
  %72 = shl i64 %51, 1
  %73 = icmp ugt i64 %72, %2
  br i1 %73, label %74, label %19

74:                                               ; preds = %57, %67, %65
  %75 = phi i64 [ %21, %65 ], [ %51, %67 ], [ %21, %57 ]
  %76 = add i64 %75, -1
  br label %77

77:                                               ; preds = %74, %4
  %78 = phi i64 [ %76, %74 ], [ %7, %4 ]
  %79 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %78, i32 0
  store i32 %9, i32* %79, align 8
  %80 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %78, i32 1
  store i32 %11, i32* %80, align 4
  %81 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %78, i32 2
  store i32 %13, i32* %81, align 8
  %82 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %78, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* nonnull align 4 %6, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z18SkTHeapSort_SiftUpI4Edge6EdgeLTEvPT_mmRKT0_(%struct.Edge*, i64, i64, %struct.EdgeLT* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = alloca [12 x i8], align 4
  %6 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6)
  %7 = add i64 %1, -1
  %8 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %7, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %14, i64 12, i1 false)
  %15 = shl i64 %1, 1
  %16 = icmp ugt i64 %15, %2
  br i1 %16, label %17, label %24

17:                                               ; preds = %55, %4
  %18 = phi i64 [ %1, %4 ], [ %56, %55 ]
  %19 = lshr i64 %18, 1
  %20 = icmp ult i64 %19, %1
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = icmp slt i32 %13, %11
  %23 = select i1 %22, i32 %13, i32 %11
  br label %65

24:                                               ; preds = %4, %55
  %25 = phi i64 [ %63, %55 ], [ %15, %4 ]
  %26 = phi i64 [ %56, %55 ], [ %1, %4 ]
  %27 = icmp ult i64 %25, %2
  br i1 %27, label %28, label %55

28:                                               ; preds = %24
  %29 = add i64 %25, -1
  %30 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %29, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %25, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %49

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %29, i32 1
  %37 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %29, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %36, align 4
  %40 = icmp slt i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %25, i32 1
  %43 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %25, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %42, align 4
  %46 = icmp slt i32 %44, %45
  %47 = select i1 %46, i32 %44, i32 %45
  %48 = icmp slt i32 %41, %47
  br label %51

49:                                               ; preds = %28
  %50 = icmp slt i32 %31, %33
  br label %51

51:                                               ; preds = %35, %49
  %52 = phi i1 [ %48, %35 ], [ %50, %49 ]
  %53 = zext i1 %52 to i64
  %54 = or i64 %25, %53
  br label %55

55:                                               ; preds = %51, %24
  %56 = phi i64 [ %25, %24 ], [ %54, %51 ]
  %57 = add i64 %56, -1
  %58 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %57
  %59 = add i64 %26, -1
  %60 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %59
  %61 = bitcast %struct.Edge* %60 to i8*
  %62 = bitcast %struct.Edge* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false)
  %63 = shl i64 %56, 1
  %64 = icmp ugt i64 %63, %2
  br i1 %64, label %17, label %24

65:                                               ; preds = %21, %83
  %66 = phi i64 [ %19, %21 ], [ %88, %83 ]
  %67 = phi i64 [ %18, %21 ], [ %66, %83 ]
  %68 = add nsw i64 %66, -1
  %69 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %68
  %70 = getelementptr inbounds %struct.Edge, %struct.Edge* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, %9
  br i1 %72, label %73, label %81

73:                                               ; preds = %65
  %74 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %68, i32 1
  %75 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %68, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %74, align 4
  %78 = icmp slt i32 %76, %77
  %79 = select i1 %78, i32 %76, i32 %77
  %80 = icmp slt i32 %79, %23
  br i1 %80, label %83, label %90

81:                                               ; preds = %65
  %82 = icmp slt i32 %71, %9
  br i1 %82, label %83, label %90

83:                                               ; preds = %73, %81
  %84 = add i64 %67, -1
  %85 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %84
  %86 = bitcast %struct.Edge* %85 to i8*
  %87 = bitcast %struct.Edge* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false)
  %88 = lshr i64 %66, 1
  %89 = icmp ult i64 %88, %1
  br i1 %89, label %90, label %65

90:                                               ; preds = %81, %83, %73, %17
  %91 = phi i64 [ %18, %17 ], [ %67, %73 ], [ %66, %83 ], [ %67, %81 ]
  %92 = add i64 %91, -1
  %93 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %92, i32 0
  store i32 %9, i32* %93, align 8
  %94 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %92, i32 1
  store i32 %11, i32* %94, align 4
  %95 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %92, i32 2
  store i32 %13, i32* %95, align 8
  %96 = getelementptr inbounds %struct.Edge, %struct.Edge* %0, i64 %92, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* nonnull align 4 %6, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL10sk_memeq32PKiS0_i: argument 0"}
!4 = distinct !{!4, !"_ZL10sk_memeq32PKiS0_i"}
!5 = !{!6}
!6 = distinct !{!6, !4, !"_ZL10sk_memeq32PKiS0_i: argument 1"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZL10sk_memeq32PKiS0_i: argument 0"}
!10 = distinct !{!10, !"_ZL10sk_memeq32PKiS0_i"}
!11 = !{!12}
!12 = distinct !{!12, !10, !"_ZL10sk_memeq32PKiS0_i: argument 1"}
!13 = !{i32 0, i32 33}
