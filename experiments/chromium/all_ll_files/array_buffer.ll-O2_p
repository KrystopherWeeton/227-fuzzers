; ModuleID = '../../gin/array_buffer.cc'
source_filename = "../../gin/array_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gin::ArrayBufferAllocator" = type { %"class.v8::ArrayBuffer::Allocator" }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.gin::ArrayBuffer" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::ArrayBuffer" = type { i8 }
%"class.gin::ArrayBufferView" = type { %"class.gin::ArrayBuffer", i64, i64 }
%"class.v8::ArrayBufferView" = type { i8 }
%"class.v8::Value" = type { i8 }

$_ZN2v811ArrayBuffer9AllocatorD2Ev = comdat any

$_ZN3gin20ArrayBufferAllocatorD0Ev = comdat any

@_ZZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance = internal unnamed_addr global %"class.gin::ArrayBufferAllocator"* null, align 8
@_ZGVZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance = internal global i64 0, align 8
@_ZTVN3gin20ArrayBufferAllocatorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::ArrayBuffer::Allocator"*)* @_ZN2v811ArrayBuffer9AllocatorD2Ev to i8*), i8* bitcast (void (%"class.gin::ArrayBufferAllocator"*)* @_ZN3gin20ArrayBufferAllocatorD0Ev to i8*), i8* bitcast (i8* (%"class.gin::ArrayBufferAllocator"*, i64)* @_ZN3gin20ArrayBufferAllocator8AllocateEm to i8*), i8* bitcast (i8* (%"class.gin::ArrayBufferAllocator"*, i64)* @_ZN3gin20ArrayBufferAllocator21AllocateUninitializedEm to i8*), i8* bitcast (void (%"class.gin::ArrayBufferAllocator"*, i8*, i64)* @_ZN3gin20ArrayBufferAllocator4FreeEPvm to i8*), i8* bitcast (i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)* @_ZN2v811ArrayBuffer9Allocator10ReallocateEPvmm to i8*)] }, align 8

@_ZN3gin11ArrayBufferC1Ev = hidden unnamed_addr alias void (%"class.gin::ArrayBuffer"*), void (%"class.gin::ArrayBuffer"*)* @_ZN3gin11ArrayBufferC2Ev
@_ZN3gin11ArrayBufferC1EPN2v87IsolateENS1_5LocalINS1_11ArrayBufferEEE = hidden unnamed_addr alias void (%"class.gin::ArrayBuffer"*, %"class.v8::Isolate"*, %"class.v8::ArrayBuffer"*), void (%"class.gin::ArrayBuffer"*, %"class.v8::Isolate"*, %"class.v8::ArrayBuffer"*)* @_ZN3gin11ArrayBufferC2EPN2v87IsolateENS1_5LocalINS1_11ArrayBufferEEE
@_ZN3gin11ArrayBufferD1Ev = hidden unnamed_addr alias void (%"class.gin::ArrayBuffer"*), void (%"class.gin::ArrayBuffer"*)* @_ZN3gin11ArrayBufferD2Ev
@_ZN3gin15ArrayBufferViewC1Ev = hidden unnamed_addr alias void (%"class.gin::ArrayBufferView"*), void (%"class.gin::ArrayBufferView"*)* @_ZN3gin15ArrayBufferViewC2Ev
@_ZN3gin15ArrayBufferViewC1EPN2v87IsolateENS1_5LocalINS1_15ArrayBufferViewEEE = hidden unnamed_addr alias void (%"class.gin::ArrayBufferView"*, %"class.v8::Isolate"*, %"class.v8::ArrayBufferView"*), void (%"class.gin::ArrayBufferView"*, %"class.v8::Isolate"*, %"class.v8::ArrayBufferView"*)* @_ZN3gin15ArrayBufferViewC2EPN2v87IsolateENS1_5LocalINS1_15ArrayBufferViewEEE
@_ZN3gin15ArrayBufferViewD1Ev = hidden unnamed_addr alias void (%"class.gin::ArrayBufferView"*), void (%"class.gin::ArrayBufferView"*)* @_ZN3gin15ArrayBufferViewD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @_ZN3gin20ArrayBufferAllocator8AllocateEm(%"class.gin::ArrayBufferAllocator"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @calloc(i64 1, i64 %1) #10
  ret i8* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @_ZN3gin20ArrayBufferAllocator21AllocateUninitializedEm(%"class.gin::ArrayBufferAllocator"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 %1) #10
  ret i8* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin20ArrayBufferAllocator4FreeEPvm(%"class.gin::ArrayBufferAllocator"* nocapture readnone, i8* nocapture, i64) unnamed_addr #2 align 2 {
  tail call void @free(i8* %1) #10
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.gin::ArrayBufferAllocator"* @_ZN3gin20ArrayBufferAllocator14SharedInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 8) #11
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gin20ArrayBufferAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i8* %7, i8** bitcast (%"class.gin::ArrayBufferAllocator"** @_ZZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance) #10
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load %"class.gin::ArrayBufferAllocator"*, %"class.gin::ArrayBufferAllocator"** @_ZZN3gin20ArrayBufferAllocator14SharedInstanceEvE8instance, align 8
  ret %"class.gin::ArrayBufferAllocator"* %10
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin11ArrayBufferC2Ev(%"class.gin::ArrayBuffer"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gin::ArrayBuffer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin11ArrayBufferC2EPN2v87IsolateENS1_5LocalINS1_11ArrayBufferEEE(%"class.gin::ArrayBuffer"* nocapture, %"class.v8::Isolate"* nocapture readnone, %"class.v8::ArrayBuffer"*) unnamed_addr #2 align 2 {
  %4 = tail call { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v811ArrayBuffer15GetBackingStoreEv(%"class.v8::ArrayBuffer"* %2) #10
  %5 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %0, i64 0, i32 0, i32 0
  %6 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %4, 0
  store %"class.v8::BackingStore"* %6, %"class.v8::BackingStore"** %5, align 8
  %7 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %0, i64 0, i32 0, i32 1
  %8 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %4, 1
  store %"class.std::__1::__shared_weak_count"* %8, %"class.std::__1::__shared_weak_count"** %7, align 8
  ret void
}

declare { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v811ArrayBuffer15GetBackingStoreEv(%"class.v8::ArrayBuffer"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin11ArrayBufferD2Ev(%"class.gin::ArrayBuffer"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #10
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.gin::ArrayBuffer"* @_ZN3gin11ArrayBufferaSERKS0_(%"class.gin::ArrayBuffer"* returned, %"class.gin::ArrayBuffer"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.gin::ArrayBuffer"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = ptrtoint %"class.std::__1::__shared_weak_count"* %6 to i64
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %9, %2
  %13 = bitcast %"class.gin::ArrayBuffer"* %0 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__shared_weak_count"** %14 to i64*
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  store i64 %7, i64* %15, align 8
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %20 = atomicrmw add i64* %19, i64 -1 acq_rel
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0
  %24 = bitcast %"class.std::__1::__shared_weak_count"* %16 to void (%"class.std::__1::__shared_count"*)***
  %25 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %25, i64 2
  %27 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, align 8
  tail call void %27(%"class.std::__1::__shared_count"* %23) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %16) #10
  br label %28

28:                                               ; preds = %12, %18, %22
  ret %"class.gin::ArrayBuffer"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gin9ConverterINS_11ArrayBufferEvE6FromV8EPN2v87IsolateENS3_5LocalINS3_5ValueEEEPS1_(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.gin::ArrayBuffer"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"* %1) #10
  br i1 %4, label %5, label %43

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Value"* %1 to %"class.v8::ArrayBuffer"*
  %7 = tail call { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v811ArrayBuffer15GetBackingStoreEv(%"class.v8::ArrayBuffer"* %6) #10
  %8 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %7, 0
  %9 = ptrtoint %"class.v8::BackingStore"* %8 to i64
  %10 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %7, 1
  %11 = ptrtoint %"class.std::__1::__shared_weak_count"* %10 to i64
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %10, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %10, i64 0, i32 0, i32 1
  %15 = atomicrmw add i64* %14, i64 1 monotonic
  br label %16

16:                                               ; preds = %13, %5
  %17 = bitcast %"class.gin::ArrayBuffer"* %2 to i64*
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds %"class.gin::ArrayBuffer", %"class.gin::ArrayBuffer"* %2, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__shared_weak_count"** %18 to i64*
  %20 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %18, align 8
  store i64 %11, i64* %19, align 8
  %21 = icmp eq %"class.std::__1::__shared_weak_count"* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0, i32 1
  %24 = atomicrmw add i64* %23, i64 -1 acq_rel
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0
  %28 = bitcast %"class.std::__1::__shared_weak_count"* %20 to void (%"class.std::__1::__shared_count"*)***
  %29 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %29, i64 2
  %31 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, align 8
  tail call void %31(%"class.std::__1::__shared_count"* %27) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %20) #10
  br label %32

32:                                               ; preds = %16, %22, %26
  br i1 %12, label %43, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %10, i64 0, i32 0, i32 1
  %35 = atomicrmw add i64* %34, i64 -1 acq_rel
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %10, i64 0, i32 0
  %39 = bitcast %"class.std::__1::__shared_weak_count"* %10 to void (%"class.std::__1::__shared_count"*)***
  %40 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %40, i64 2
  %42 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %41, align 8
  tail call void %42(%"class.std::__1::__shared_count"* %38) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %10) #10
  br label %43

43:                                               ; preds = %37, %33, %32, %3
  %44 = phi i1 [ false, %3 ], [ true, %32 ], [ true, %33 ], [ true, %37 ]
  ret i1 %44
}

declare zeroext i1 @_ZNK2v85Value13IsArrayBufferEv(%"class.v8::Value"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin15ArrayBufferViewC2Ev(%"class.gin::ArrayBufferView"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gin::ArrayBufferView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin15ArrayBufferViewC2EPN2v87IsolateENS1_5LocalINS1_15ArrayBufferViewEEE(%"class.gin::ArrayBufferView"* nocapture, %"class.v8::Isolate"* nocapture readnone, %"class.v8::ArrayBufferView"*) unnamed_addr #2 align 2 {
  %4 = tail call %"class.v8::ArrayBuffer"* @_ZN2v815ArrayBufferView6BufferEv(%"class.v8::ArrayBufferView"* %2) #10
  %5 = tail call { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v811ArrayBuffer15GetBackingStoreEv(%"class.v8::ArrayBuffer"* %4) #10
  %6 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %5, 0
  store %"class.v8::BackingStore"* %7, %"class.v8::BackingStore"** %6, align 8
  %8 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %5, 1
  store %"class.std::__1::__shared_weak_count"* %9, %"class.std::__1::__shared_weak_count"** %8, align 8
  %10 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 1
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteOffsetEv(%"class.v8::ArrayBufferView"* %2) #10
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 2
  %13 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %2) #10
  store i64 %13, i64* %12, align 8
  ret void
}

declare %"class.v8::ArrayBuffer"* @_ZN2v815ArrayBufferView6BufferEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #7

declare i64 @_ZN2v815ArrayBufferView10ByteOffsetEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #7

declare i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin15ArrayBufferViewD2Ev(%"class.gin::ArrayBufferView"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #10
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.gin::ArrayBufferView"* @_ZN3gin15ArrayBufferViewaSERKS0_(%"class.gin::ArrayBufferView"* returned, %"class.gin::ArrayBufferView"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.gin::ArrayBufferView"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = ptrtoint %"class.std::__1::__shared_weak_count"* %6 to i64
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %9, %2
  %13 = bitcast %"class.gin::ArrayBufferView"* %0 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__shared_weak_count"** %14 to i64*
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  store i64 %7, i64* %15, align 8
  %17 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %20 = atomicrmw add i64* %19, i64 -1 acq_rel
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0
  %24 = bitcast %"class.std::__1::__shared_weak_count"* %16 to void (%"class.std::__1::__shared_count"*)***
  %25 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %25, i64 2
  %27 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, align 8
  tail call void %27(%"class.std::__1::__shared_count"* %23) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %16) #10
  br label %28

28:                                               ; preds = %12, %18, %22
  %29 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %1, i64 0, i32 1
  %31 = bitcast i64* %29 to i8*
  %32 = bitcast i64* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  ret %"class.gin::ArrayBufferView"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gin9ConverterINS_15ArrayBufferViewEvE6FromV8EPN2v87IsolateENS3_5LocalINS3_5ValueEEEPS1_(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.gin::ArrayBufferView"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %1) #10
  br i1 %4, label %5, label %48

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Value"* %1 to %"class.v8::ArrayBufferView"*
  %7 = tail call %"class.v8::ArrayBuffer"* @_ZN2v815ArrayBufferView6BufferEv(%"class.v8::ArrayBufferView"* %6) #10
  %8 = tail call { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v811ArrayBuffer15GetBackingStoreEv(%"class.v8::ArrayBuffer"* %7) #10
  %9 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %8, 0
  %10 = ptrtoint %"class.v8::BackingStore"* %9 to i64
  %11 = extractvalue { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* } %8, 1
  %12 = tail call i64 @_ZN2v815ArrayBufferView10ByteOffsetEv(%"class.v8::ArrayBufferView"* %6) #10
  %13 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %6) #10
  %14 = ptrtoint %"class.std::__1::__shared_weak_count"* %11 to i64
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  br label %19

19:                                               ; preds = %16, %5
  %20 = bitcast %"class.gin::ArrayBufferView"* %2 to i64*
  store i64 %10, i64* %20, align 8
  %21 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %2, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__shared_weak_count"** %21 to i64*
  %23 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  store i64 %14, i64* %22, align 8
  %24 = icmp eq %"class.std::__1::__shared_weak_count"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %23, i64 0, i32 0, i32 1
  %27 = atomicrmw add i64* %26, i64 -1 acq_rel
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %23, i64 0, i32 0
  %31 = bitcast %"class.std::__1::__shared_weak_count"* %23 to void (%"class.std::__1::__shared_count"*)***
  %32 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %32, i64 2
  %34 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %33, align 8
  tail call void %34(%"class.std::__1::__shared_count"* %30) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %23) #10
  br label %35

35:                                               ; preds = %19, %25, %29
  %36 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %2, i64 0, i32 1
  store i64 %12, i64* %36, align 8
  %37 = getelementptr inbounds %"class.gin::ArrayBufferView", %"class.gin::ArrayBufferView"* %2, i64 0, i32 2
  store i64 %13, i64* %37, align 8
  br i1 %15, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %40 = atomicrmw add i64* %39, i64 -1 acq_rel
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__shared_weak_count"* %11 to void (%"class.std::__1::__shared_count"*)***
  %45 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, i64 2
  %47 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, align 8
  tail call void %47(%"class.std::__1::__shared_count"* %43) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #10
  br label %48

48:                                               ; preds = %42, %38, %35, %3
  %49 = phi i1 [ false, %3 ], [ true, %35 ], [ true, %38 ], [ true, %42 ]
  ret i1 %49
}

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v811ArrayBuffer9AllocatorD2Ev(%"class.v8::ArrayBuffer::Allocator"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin20ArrayBufferAllocatorD0Ev(%"class.gin::ArrayBufferAllocator"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.gin::ArrayBufferAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

declare i8* @_ZN2v811ArrayBuffer9Allocator10ReallocateEPvmm(%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
