; ModuleID = '../../third_party/blink/renderer/core/css/cssom/style_property_map.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/style_property_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.112", i32, [4 x i8], %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.282", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.289", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.228", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i64 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::Worklist.173"* }
%"class.blink::Worklist.173" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.148" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.215", %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.222", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { i64 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { float }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.231", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.240" }
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242" }
%"class.WTF::VectorBufferBase.242" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.270" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.159"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.166"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.173"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.295" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.288 }
%class.scoped_refptr.288 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.289" = type { %"struct.std::__1::__atomic_base.290" }
%"struct.std::__1::__atomic_base.290" = type { %"struct.std::__1::__cxx_atomic_impl.291" }
%"struct.std::__1::__cxx_atomic_impl.291" = type { %"struct.std::__1::__cxx_atomic_base_impl.292" }
%"struct.std::__1::__cxx_atomic_base_impl.292" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.330" }
%"struct.std::__1::atomic.330" = type { %"struct.std::__1::__atomic_base.331" }
%"struct.std::__1::__atomic_base.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i32 }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.24", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.30", %"class.blink::Member.32", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.41", %"class.blink::Member.47", %"class.blink::Member.49", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.81" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.83" }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.21", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.21" = type { %"class.WTF::HashTable.22" }
%"class.WTF::HashTable.22" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.28"*, i32, i32 }
%"class.blink::Member.28" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.34", i32, i32 }
%"class.blink::HeapHashMap.34" = type { %"class.WTF::HashMap.37" }
%"class.WTF::HashMap.37" = type { %"class.WTF::HashTable.38" }
%"class.WTF::HashTable.38" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::V8UnionCSSStyleValueOrString"* }
%"class.blink::V8UnionCSSStyleValueOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.63", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::CSSStyleValue"* }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.66" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.66" = type { %"class.v8::TracedReference.67" }
%"class.v8::TracedReference.67" = type { %"class.v8::BasicTracedReference.68" }
%"class.v8::BasicTracedReference.68" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.63"*, i32, i32 }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.100, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.293", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.94" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::KURL"* }
%class.scoped_refptr.100 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.103" }
%"class.blink::HeapHashMap.103" = type { %"class.WTF::HashMap.106" }
%"class.WTF::HashMap.106" = type { %"class.WTF::HashTable.107" }
%"class.WTF::HashTable.107" = type <{ %"struct.WTF::KeyValuePair.109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.109" = type { %"class.blink::WeakMember.110", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.342" = type { %"class.WTF::StringTypeAdapter.343" }
%"class.WTF::StringTypeAdapter.343" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.71" }
%"class.blink::HeapVector.71" = type { %"class.WTF::Vector.74" }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76", [32 x i8] }
%"class.WTF::VectorBufferBase.76" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::CSSValue"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [23 x i8] c"Invalid propertyName: \00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Invalid type for property\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [48 x i8] c"Appending to custom properties is not supported\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"Property does not support multiple values\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Invalid property name: \00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase25is_overflow_clip_enabled_E = external local_unnamed_addr global i8, align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.11 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.16 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StylePropertyMap3setEPKNS_16ExecutionContextERKN3WTF6StringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERNS_14ExceptionStateE(%"class.blink::StylePropertyMap"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.53"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::HeapVector.85", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %103

13:                                               ; preds = %5
  %14 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #8
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %26
  tail call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %34, %19
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = zext i32 %37 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #8
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %41
  tail call void @llvm.trap() #8
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %24, align 4
  br label %51

51:                                               ; preds = %49, %36
  %52 = phi i32 [ %50, %49 ], [ %37, %36 ]
  %53 = load atomic i32, i32* %20 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = add i32 %52, -1
  store i32 %57, i32* %24, align 4
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i32 [ %57, %56 ], [ %52, %51 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %68 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %68, i64 3
  %70 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %69, align 8
  call void %70(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %62, %82, %85
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #8
  br label %102

102:                                              ; preds = %86, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %354

103:                                              ; preds = %5
  %104 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %11) #8
  %105 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %104, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %221, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %3, i64 0, i32 0
  %111 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %115, label %114

114:                                              ; preds = %109
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %354

115:                                              ; preds = %109
  %116 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %118 = tail call dereferenceable(8) %"class.blink::Member.59"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %110, i32 0) #8
  %119 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::V8UnionCSSStyleValueOrString"*, %"class.blink::V8UnionCSSStyleValueOrString"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  switch i32 %122, label %183 [
    i32 0, label %123
    i32 1, label %139
  ]

123:                                              ; preds = %115
  %124 = tail call dereferenceable(8) %"class.blink::Member.59"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %110, i32 0) #8
  %125 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.blink::V8UnionCSSStyleValueOrString"*, %"class.blink::V8UnionCSSStyleValueOrString"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %127, align 8
  %129 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %130 = tail call zeroext i1 @_ZN5blink10CSSOMTypes15PropertyCanTakeENS_13CSSPropertyIDERKN3WTF12AtomicStringERKNS_13CSSStyleValueE(i32 %11, %"class.WTF::AtomicString"* dereferenceable(8) %129, %"class.blink::CSSStyleValue"* dereferenceable(24) %128) #8
  br i1 %130, label %131, label %183

131:                                              ; preds = %123
  %132 = bitcast %"class.blink::CSSStyleValue"* %128 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)***
  %133 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)** %133, i64 12
  %135 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)** %134, align 8
  %136 = tail call %"class.WTF::StringImpl"* %135(%"class.blink::CSSStyleValue"* %128) #8
  %137 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  %138 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %137, i64* %138, align 8
  br label %185

139:                                              ; preds = %115
  %140 = tail call dereferenceable(8) %"class.blink::Member.59"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %110, i32 0) #8
  %141 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.blink::V8UnionCSSStyleValueOrString"*, %"class.blink::V8UnionCSSStyleValueOrString"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %142, i64 0, i32 3, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %161, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %161

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i33
  %155 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #8
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %164, !prof !2

160:                                              ; preds = %151
  tail call void @llvm.trap() #8
  unreachable

161:                                              ; preds = %146, %139
  %162 = ptrtoint %"class.WTF::StringImpl"* %144 to i64
  %163 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %162, i64* %163, align 8
  br label %185

164:                                              ; preds = %151
  %165 = trunc i33 %157 to i32
  store i32 %165, i32* %152, align 4
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %167 = ptrtoint %"class.WTF::StringImpl"* %144 to i64
  %168 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %167, i64* %168, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %169, label %188, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #8
  br label %183

183:                                              ; preds = %115, %123, %179, %182
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  br label %185

185:                                              ; preds = %161, %131, %183
  %186 = phi %"class.WTF::StringImpl"* [ %184, %183 ], [ %136, %131 ], [ %144, %161 ]
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %203, label %188

188:                                              ; preds = %164, %185
  %189 = phi %"class.WTF::StringImpl"* [ %186, %185 ], [ %144, %164 ]
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %104, i64 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %197 = load i32, i32* %196, align 8
  %198 = bitcast %"class.blink::StylePropertyMap"* %0 to i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)***
  %199 = load i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)**, i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)*** %198, align 8
  %200 = getelementptr inbounds i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)*, i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)** %199, i64 19
  %201 = load i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)*, i1 (%"class.blink::StylePropertyMap"*, i32, %"class.WTF::String"*, i32)** %200, align 8
  %202 = call zeroext i1 %201(%"class.blink::StylePropertyMap"* %0, i32 %195, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %197) #8
  br i1 %202, label %204, label %203

203:                                              ; preds = %185, %193, %188
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %204

204:                                              ; preds = %203, %193
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #8
  br label %220

220:                                              ; preds = %204, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  br label %354

221:                                              ; preds = %103
  %222 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #8
  %223 = icmp eq i32 %11, 1
  br i1 %223, label %224, label %255

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %251, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 acquire, align 4
  %231 = and i32 %230, 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %249, label %233

233:                                              ; preds = %228
  %234 = load atomic i32, i32* %229 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %251

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = zext i32 %239 to i33
  %241 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %240, i33 1) #8
  %242 = extractvalue { i33, i1 } %241, 1
  %243 = extractvalue { i33, i1 } %241, 0
  %244 = icmp slt i33 %243, 0
  %245 = or i1 %242, %244
  br i1 %245, label %246, label %247, !prof !2

246:                                              ; preds = %237
  tail call void @llvm.trap() #8
  unreachable

247:                                              ; preds = %237
  %248 = trunc i33 %243 to i32
  store i32 %248, i32* %238, align 4
  br label %251

249:                                              ; preds = %228
  %250 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %226) #8
  br label %251

251:                                              ; preds = %224, %233, %247, %249
  %252 = phi %"class.WTF::StringImpl"* [ %250, %249 ], [ %226, %233 ], [ %226, %247 ], [ null, %224 ]
  %253 = ptrtoint %"class.WTF::StringImpl"* %252 to i64
  %254 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %253, i64* %254, align 8
  br label %278

255:                                              ; preds = %221
  %256 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %257 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %260, label %278, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = zext i32 %268 to i33
  %270 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %269, i33 1) #8
  %271 = extractvalue { i33, i1 } %270, 1
  %272 = extractvalue { i33, i1 } %270, 0
  %273 = icmp slt i33 %272, 0
  %274 = or i1 %271, %273
  br i1 %274, label %275, label %276, !prof !2

275:                                              ; preds = %266
  tail call void @llvm.trap() #8
  unreachable

276:                                              ; preds = %266
  %277 = trunc i33 %272 to i32
  store i32 %277, i32* %267, align 4
  br label %278

278:                                              ; preds = %276, %261, %255, %251
  %279 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %104, i64 0, i32 3
  %280 = load i8, i8* %279, align 8
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %284, label %282

282:                                              ; preds = %278
  %283 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_126CoerceStyleValuesOrStringsERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24) %104, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::HeapVector.53"* dereferenceable(16) %3, %"class.blink::ExecutionContext"* dereferenceable(376) %1)
  br label %321

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 1
  br i1 %287, label %288, label %324

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %3, i64 0, i32 0
  %290 = tail call dereferenceable(8) %"class.blink::Member.59"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"* %289, i32 0) #8
  %291 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %290, i64 0, i32 0, i32 0
  %292 = load %"class.blink::V8UnionCSSStyleValueOrString"*, %"class.blink::V8UnionCSSStyleValueOrString"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %292, i64 0, i32 1
  %294 = load i32, i32* %293, align 8
  switch i32 %294, label %324 [
    i32 0, label %295
    i32 1, label %299
  ]

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %292, i64 0, i32 2, i32 0, i32 0
  %297 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %296, align 8
  %298 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_120StyleValueToCSSValueERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_13CSSStyleValueERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24) %104, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::CSSStyleValue"* dereferenceable(24) %297, %"class.blink::ExecutionContext"* dereferenceable(376) %1) #8
  br label %321

299:                                              ; preds = %288
  %300 = bitcast %"class.blink::HeapVector.85"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #8
  %301 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %104, i64 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %"class.blink::V8UnionCSSStyleValueOrString", %"class.blink::V8UnionCSSStyleValueOrString"* %292, i64 0, i32 3
  %304 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #8
  %305 = bitcast i8* %304 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"* %305, %"class.blink::ExecutionContext"* dereferenceable(376) %1) #8
  %306 = getelementptr inbounds i8, i8* %304, i64 -4
  %307 = bitcast i8* %306 to i16*
  %308 = load atomic i16, i16* %307 monotonic, align 2
  %309 = or i16 %308, 1
  store atomic i16 %309, i16* %307 release, align 2
  call void @_ZN5blink17StyleValueFactory10FromStringENS_13CSSPropertyIDERKN3WTF12AtomicStringERKNS2_6StringEPKNS_16CSSParserContextE(%"class.blink::HeapVector.85"* nonnull sret %6, i32 %302, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %303, %"class.blink::CSSParserContext"* %305) #8
  %310 = getelementptr inbounds %"class.blink::HeapVector.85", %"class.blink::HeapVector.85"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %319

313:                                              ; preds = %299
  %314 = getelementptr inbounds %"class.blink::HeapVector.85", %"class.blink::HeapVector.85"* %6, i64 0, i32 0
  %315 = call dereferenceable(8) %"class.blink::Member.63"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.88"* nonnull %314, i32 0) #8
  %316 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %315, i64 0, i32 0, i32 0
  %317 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %316, align 8
  %318 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_120StyleValueToCSSValueERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_13CSSStyleValueERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24) %104, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::CSSStyleValue"* dereferenceable(24) %317, %"class.blink::ExecutionContext"* dereferenceable(376) %1) #8
  br label %319

319:                                              ; preds = %313, %299
  %320 = phi %"class.blink::CSSValue"* [ %318, %313 ], [ null, %299 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %300) #8
  br label %321

321:                                              ; preds = %319, %295, %282
  %322 = phi %"class.blink::CSSValue"* [ %283, %282 ], [ %320, %319 ], [ %298, %295 ]
  %323 = icmp eq %"class.blink::CSSValue"* %322, null
  br i1 %323, label %324, label %325

324:                                              ; preds = %288, %284, %321
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %336

325:                                              ; preds = %321
  br i1 %223, label %326, label %331

326:                                              ; preds = %325
  %327 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)***
  %328 = load void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)**, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)** %328, i64 20
  %330 = load void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)** %329, align 8
  call void %330(%"class.blink::StylePropertyMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::CSSValue"* nonnull dereferenceable(3) %322) #8
  br label %336

331:                                              ; preds = %325
  %332 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)***
  %333 = load void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)**, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)** %333, i64 18
  %335 = load void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)** %334, align 8
  call void %335(%"class.blink::StylePropertyMap"* %0, i32 %11, %"class.blink::CSSValue"* nonnull dereferenceable(3) %322) #8
  br label %336

336:                                              ; preds = %326, %331, %324
  %337 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #8
  br label %353

353:                                              ; preds = %336, %349, %352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  br label %354

354:                                              ; preds = %114, %220, %353, %102
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.342", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.342", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #8
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #8
  %29 = bitcast %"class.WTF::StringTypeAdapter.342"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.342"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.343"* nonnull %47, i8* %50) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #8
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #8
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #8
  %90 = bitcast %"class.WTF::StringTypeAdapter.342"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.342"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #8
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.342", %"class.WTF::StringTypeAdapter.342"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.343"* nonnull %108, i16* %111) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #8
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10CSSOMTypes15PropertyCanTakeENS_13CSSPropertyIDERKN3WTF12AtomicStringERKNS_13CSSStyleValueE(i32, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSStyleValue"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_126CoerceStyleValuesOrStringsERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HeapVector.53"* dereferenceable(16), %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #0 {
  %5 = alloca %"class.blink::HeapVector.85", align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %94, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::HeapVector.85"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::HeapVector.85", %"class.blink::HeapVector.85"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapVector.85", %"class.blink::HeapVector.85"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.blink::HeapVector.85"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17StyleValueFactory26CoerceStyleValuesOrStringsERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERKNS_16ExecutionContextE(%"class.blink::HeapVector.85"* nonnull sret %5, %"class.blink::CSSProperty"* dereferenceable(24) %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::HeapVector.53"* dereferenceable(16) %2, %"class.blink::ExecutionContext"* dereferenceable(376) %3) #8
  %14 = load i32, i32* %12, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %92, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %18) #8
  %20 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %19, i64 0, i32 3
  %21 = load i8, i8* %20, align 8
  %22 = sext i8 %21 to i32
  switch i32 %22, label %39 [
    i32 32, label %23
    i32 44, label %26
    i32 47, label %29
  ]

23:                                               ; preds = %16
  %24 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %25 = bitcast i8* %24 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %25, i32 0) #8
  br label %32

26:                                               ; preds = %16
  %27 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %28 = bitcast i8* %27 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %28, i32 1) #8
  br label %32

29:                                               ; preds = %16
  %30 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %31 = bitcast i8* %30 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %31, i32 2) #8
  br label %32

32:                                               ; preds = %29, %26, %23
  %33 = phi i8* [ %30, %29 ], [ %27, %26 ], [ %24, %23 ]
  %34 = phi %"class.blink::CSSValueList"* [ %31, %29 ], [ %28, %26 ], [ %25, %23 ]
  %35 = getelementptr inbounds i8, i8* %33, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  br label %39

39:                                               ; preds = %32, %16
  %40 = phi %"class.blink::CSSValueList"* [ null, %16 ], [ %34, %32 ]
  %41 = load %"class.blink::Member.63"*, %"class.blink::Member.63"** %11, align 8
  %42 = load i32, i32* %12, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %90, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %40, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %40, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %40, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %47, i64 0, i32 0, i32 0, i32 0
  br label %51

51:                                               ; preds = %46, %87
  %52 = phi %"class.blink::Member.63"* [ %41, %46 ], [ %88, %87 ]
  %53 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %53, align 8
  %55 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_120StyleValueToCSSValueERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_13CSSStyleValueERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24) %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::CSSStyleValue"* dereferenceable(24) %54, %"class.blink::ExecutionContext"* dereferenceable(376) %3)
  %56 = icmp eq %"class.blink::CSSValue"* %55, null
  br i1 %56, label %92, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %55, i64 0, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, -4
  %61 = icmp eq i8 %60, 32
  %62 = icmp eq i8 %59, 42
  %63 = or i1 %62, %61
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = load i32, i32* %12, align 4
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"class.blink::CSSValue"* %55, %"class.blink::CSSValue"* null
  br label %92

68:                                               ; preds = %57
  %69 = load i32, i32* %48, align 4
  %70 = load i32, i32* %49, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %86, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %50, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %73, i64 %74
  %76 = ptrtoint %"class.blink::CSSValue"* %55 to i64
  %77 = bitcast %"class.blink::Member.77"* %75 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %55, i64 0, i32 0
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #8
  br label %83

83:                                               ; preds = %80, %72
  %84 = load i32, i32* %48, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %48, align 4
  br label %87

86:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %47, %"class.blink::CSSValue"* nonnull dereferenceable(3) %55) #8
  br label %87

87:                                               ; preds = %83, %86
  %88 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %52, i64 1
  %89 = icmp eq %"class.blink::Member.63"* %88, %44
  br i1 %89, label %90, label %51

90:                                               ; preds = %87, %39
  %91 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %40, i64 0, i32 0
  br label %92

92:                                               ; preds = %51, %64, %90, %9
  %93 = phi %"class.blink::CSSValue"* [ null, %9 ], [ %91, %90 ], [ %67, %64 ], [ null, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br label %94

94:                                               ; preds = %4, %92
  %95 = phi %"class.blink::CSSValue"* [ %93, %92 ], [ null, %4 ]
  ret %"class.blink::CSSValue"* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StylePropertyMap6appendEPKNS_16ExecutionContextERKN3WTF6StringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERNS_14ExceptionStateE(%"class.blink::StylePropertyMap"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector.53"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.53", %"class.blink::HeapVector.53"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %206, label %11

11:                                               ; preds = %5
  %12 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %104

14:                                               ; preds = %11
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %63, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %37

27:                                               ; preds = %20
  %28 = zext i32 %26 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #8
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  tail call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %27
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %25, align 4
  br label %37

37:                                               ; preds = %35, %20
  %38 = phi i32 [ %36, %35 ], [ %26, %20 ]
  %39 = load atomic i32, i32* %21 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %52

42:                                               ; preds = %37
  %43 = zext i32 %38 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #8
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  tail call void @llvm.trap() #8
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %25, align 4
  br label %52

52:                                               ; preds = %50, %37
  %53 = phi i32 [ %51, %50 ], [ %38, %37 ]
  %54 = load atomic i32, i32* %21 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = add i32 %53, -1
  store i32 %58, i32* %25, align 4
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #8
  br label %63

63:                                               ; preds = %14, %59, %62
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %65, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %67, align 8
  %68 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %69 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %69, i64 3
  %71 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %70, align 8
  call void %71(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %87

87:                                               ; preds = %63, %83, %86
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %206

104:                                              ; preds = %11
  %105 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %12) #8
  %106 = icmp eq i32 %12, 1
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %206

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %105, i64 0, i32 3
  %110 = load i8, i8* %109, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %108
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %206

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::StylePropertyMap", %"class.blink::StylePropertyMap"* %0, i64 0, i32 0
  %115 = bitcast %"class.blink::StylePropertyMap"* %0 to %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)***
  %116 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*** %115, align 8
  %117 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %116, i64 13
  %118 = load %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, i32)** %117, align 8
  %119 = tail call %"class.blink::CSSValue"* %118(%"class.blink::StylePropertyMapReadOnlyMainThread"* %114, i32 %12) #8
  %120 = icmp eq %"class.blink::CSSValue"* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %113
  %122 = bitcast %"class.blink::CSSValue"* %119 to %"class.blink::CSSValueList"*
  %123 = tail call %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"* nonnull %122) #8
  br label %150

124:                                              ; preds = %113
  %125 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %12) #8
  %126 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %125, i64 0, i32 3
  %127 = load i8, i8* %126, align 8
  %128 = sext i8 %127 to i32
  switch i32 %128, label %150 [
    i32 32, label %129
    i32 44, label %136
    i32 47, label %143
  ]

129:                                              ; preds = %124
  %130 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %131 = bitcast i8* %130 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %131, i32 0) #8
  %132 = getelementptr inbounds i8, i8* %130, i64 -4
  %133 = bitcast i8* %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = or i16 %134, 1
  store atomic i16 %135, i16* %133 release, align 2
  br label %150

136:                                              ; preds = %124
  %137 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %138 = bitcast i8* %137 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %138, i32 1) #8
  %139 = getelementptr inbounds i8, i8* %137, i64 -4
  %140 = bitcast i8* %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = or i16 %141, 1
  store atomic i16 %142, i16* %140 release, align 2
  br label %150

143:                                              ; preds = %124
  %144 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %145 = bitcast i8* %144 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %145, i32 2) #8
  %146 = getelementptr inbounds i8, i8* %144, i64 -4
  %147 = bitcast i8* %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = or i16 %148, 1
  store atomic i16 %149, i16* %147 release, align 2
  br label %150

150:                                              ; preds = %143, %136, %129, %124, %121
  %151 = phi %"class.blink::CSSValueList"* [ %123, %121 ], [ %145, %143 ], [ %138, %136 ], [ %131, %129 ], [ null, %124 ]
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %153 = tail call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_126CoerceStyleValuesOrStringsERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24) %105, %"class.WTF::AtomicString"* dereferenceable(8) %152, %"class.blink::HeapVector.53"* dereferenceable(16) %3, %"class.blink::ExecutionContext"* dereferenceable(376) %1)
  %154 = icmp eq %"class.blink::CSSValue"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %153, i64 0, i32 2
  %157 = load i8, i8* %156, align 1
  %158 = icmp ult i8 %157, 52
  br i1 %158, label %159, label %160

159:                                              ; preds = %155, %150
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %206

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %153, i64 2, i32 2
  %162 = bitcast i8* %161 to %"class.blink::Member.77"**
  %163 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %153, i64 6, i32 2
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %163, i64 %167
  %169 = icmp eq i32 %166, 0
  br i1 %169, label %175, label %170

170:                                              ; preds = %160
  %171 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %151, i64 0, i32 1, i32 0
  %172 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %151, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %173 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %151, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %174 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %171, i64 0, i32 0, i32 0, i32 0
  br label %181

175:                                              ; preds = %203, %160
  %176 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %151, i64 0, i32 0
  %177 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)***
  %178 = load void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)**, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)** %178, i64 18
  %180 = load void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)*, void (%"class.blink::StylePropertyMap"*, i32, %"class.blink::CSSValue"*)** %179, align 8
  tail call void %180(%"class.blink::StylePropertyMap"* %0, i32 %12, %"class.blink::CSSValue"* dereferenceable(3) %176) #8
  br label %206

181:                                              ; preds = %170, %203
  %182 = phi %"class.blink::Member.77"* [ %163, %170 ], [ %204, %203 ]
  %183 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %183, align 8
  %185 = load i32, i32* %172, align 4
  %186 = load i32, i32* %173, align 8
  %187 = icmp eq i32 %185, %186
  br i1 %187, label %202, label %188, !prof !2

188:                                              ; preds = %181
  %189 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %174, align 8
  %190 = zext i32 %185 to i64
  %191 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %189, i64 %190
  %192 = ptrtoint %"class.blink::CSSValue"* %184 to i64
  %193 = bitcast %"class.blink::Member.77"* %191 to i64*
  store atomic i64 %192, i64* %193 monotonic, align 8
  %194 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %184, i64 0, i32 0
  %198 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %197) #8
  br label %199

199:                                              ; preds = %196, %188
  %200 = load i32, i32* %172, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %172, align 4
  br label %203

202:                                              ; preds = %181
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %171, %"class.blink::CSSValue"* dereferenceable(3) %184) #8
  br label %203

203:                                              ; preds = %199, %202
  %204 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %182, i64 1
  %205 = icmp eq %"class.blink::Member.77"* %204, %168
  br i1 %205, label %175, label %181

206:                                              ; preds = %103, %159, %175, %112, %107, %5
  ret void
}

declare %"class.blink::CSSValueList"* @_ZNK5blink12CSSValueList4CopyEv(%"class.blink::CSSValueList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StylePropertyMap6removeEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMap"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #8
  switch i32 %8, label %152 [
    i32 0, label %9
    i32 1, label %99
  ]

9:                                                ; preds = %4
  %10 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %58, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %32

22:                                               ; preds = %15
  %23 = zext i32 %21 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #8
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %22
  tail call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %22
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %20, align 4
  br label %32

32:                                               ; preds = %30, %15
  %33 = phi i32 [ %31, %30 ], [ %21, %15 ]
  %34 = load atomic i32, i32* %16 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %32
  %38 = zext i32 %33 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %20, align 4
  br label %47

47:                                               ; preds = %45, %32
  %48 = phi i32 [ %46, %45 ], [ %33, %32 ]
  %49 = load atomic i32, i32* %16 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = add i32 %48, -1
  store i32 %53, i32* %20, align 4
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i32 [ %53, %52 ], [ %48, %47 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #8
  br label %58

58:                                               ; preds = %9, %54, %57
  %59 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %60, align 8
  %61 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %64 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %64, i64 3
  %66 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %65, align 8
  call void %66(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #8
  br label %82

82:                                               ; preds = %58, %78, %81
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #8
  br label %98

98:                                               ; preds = %82, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  br label %157

99:                                               ; preds = %4
  %100 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %127, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = and i32 %106, 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %104
  %110 = load atomic i32, i32* %105 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %127

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #8
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #8
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %127

125:                                              ; preds = %104
  %126 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %127

127:                                              ; preds = %99, %109, %123, %125
  %128 = phi %"class.WTF::StringImpl"* [ %126, %125 ], [ %102, %109 ], [ %102, %123 ], [ null, %99 ]
  %129 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  %130 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)***
  %132 = load void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)** %132, i64 22
  %134 = load void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StylePropertyMap"*, %"class.WTF::AtomicString"*)** %133, align 8
  call void %134(%"class.blink::StylePropertyMap"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #8
  %135 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %127
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #8
  br label %151

151:                                              ; preds = %127, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8
  br label %157

152:                                              ; preds = %4
  %153 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*, i32)***
  %154 = load void (%"class.blink::StylePropertyMap"*, i32)**, void (%"class.blink::StylePropertyMap"*, i32)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*, i32)*, void (%"class.blink::StylePropertyMap"*, i32)** %154, i64 21
  %156 = load void (%"class.blink::StylePropertyMap"*, i32)*, void (%"class.blink::StylePropertyMap"*, i32)** %155, align 8
  tail call void %156(%"class.blink::StylePropertyMap"* %0, i32 %8) #8
  br label %157

157:                                              ; preds = %151, %152, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StylePropertyMap5clearEv(%"class.blink::StylePropertyMap"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::StylePropertyMap"* %0 to void (%"class.blink::StylePropertyMap"*)***
  %3 = load void (%"class.blink::StylePropertyMap"*)**, void (%"class.blink::StylePropertyMap"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::StylePropertyMap"*)*, void (%"class.blink::StylePropertyMap"*)** %3, i64 23
  %5 = load void (%"class.blink::StylePropertyMap"*)*, void (%"class.blink::StylePropertyMap"*)** %4, align 8
  tail call void %5(%"class.blink::StylePropertyMap"* %0) #8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink17StyleValueFactory26CoerceStyleValuesOrStringsERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_10HeapVectorINS_6MemberINS_28V8UnionCSSStyleValueOrStringEEELj0EEERKNS_16ExecutionContextE(%"class.blink::HeapVector.85"* sret, %"class.blink::CSSProperty"* dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HeapVector.53"* dereferenceable(16), %"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_120StyleValueToCSSValueERKNS_11CSSPropertyERKN3WTF12AtomicStringERKNS_13CSSStyleValueERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* nocapture readonly dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSStyleValue"* dereferenceable(24), %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call zeroext i1 @_ZN5blink10CSSOMTypes15PropertyCanTakeENS_13CSSPropertyIDERKN3WTF12AtomicStringERKNS_13CSSStyleValueE(i32 %7, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::CSSStyleValue"* dereferenceable(24) %2) #8
  br i1 %8, label %9, label %493

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::CSSStyleValue"* %2 to i32 (%"class.blink::CSSStyleValue"*)***
  %11 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %11, i64 9
  %13 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::CSSStyleValue"* %2) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %9
  %17 = load i32, i32* %6, align 8
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)***
  %20 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)** %20, i64 12
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* %22(%"class.blink::CSSStyleValue"* %2) #8
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #8
  %26 = bitcast i8* %25 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"* %26, %"class.blink::ExecutionContext"* dereferenceable(376) %3) #8
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = call %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32 %17, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::CSSParserContext"* %26) #8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #8
  br label %47

47:                                               ; preds = %16, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %493

48:                                               ; preds = %9
  switch i32 %7, label %487 [
    i32 69, label %49
    i32 70, label %49
    i32 96, label %49
    i32 97, label %49
    i32 74, label %49
    i32 75, label %49
    i32 93, label %49
    i32 94, label %49
    i32 125, label %76
    i32 13, label %123
    i32 14, label %123
    i32 15, label %123
    i32 156, label %176
    i32 250, label %223
    i32 265, label %270
    i32 266, label %270
    i32 282, label %289
    i32 354, label %343
    i32 358, label %397
    i32 375, label %440
    i32 368, label %440
  ]

49:                                               ; preds = %48, %48, %48, %48, %48, %48, %48, %48
  %50 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %51 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %51, i64 10
  %53 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %52, align 8
  %54 = tail call %"class.blink::CSSValue"* %53(%"class.blink::CSSStyleValue"* %2) #8
  %55 = ptrtoint %"class.blink::CSSValue"* %54 to i64
  %56 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %54, i64 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp ult i8 %57, 2
  br i1 %58, label %59, label %487

59:                                               ; preds = %49
  %60 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm(i64 32) #8
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds i8, i8* %60, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, -8
  store i8 %63, i8* %61, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 2
  store i8 9, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %60, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %55, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 %55, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %60, i64 24
  %70 = bitcast i8* %69 to i32*
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %60, i64 -4
  %72 = bitcast i8* %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = or i16 %73, 1
  store atomic i16 %74, i16* %72 release, align 2
  %75 = bitcast i8* %60 to %"class.blink::CSSValue"*
  br label %493

76:                                               ; preds = %48
  %77 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %78 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %78, i64 10
  %80 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %79, align 8
  %81 = tail call %"class.blink::CSSValue"* %80(%"class.blink::CSSStyleValue"* %2) #8
  %82 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %81, i64 0, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp ult i8 %83, 3
  br i1 %84, label %85, label %487

85:                                               ; preds = %76
  %86 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %87 = bitcast i8* %86 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %87, i32 0) #8
  %88 = getelementptr inbounds i8, i8* %86, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  %92 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %77, align 8
  %93 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %92, i64 10
  %94 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %93, align 8
  %95 = tail call %"class.blink::CSSValue"* %94(%"class.blink::CSSStyleValue"* %2) #8
  %96 = getelementptr inbounds i8, i8* %86, i64 8
  %97 = getelementptr inbounds i8, i8* %86, i64 20
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds i8, i8* %86, i64 16
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %99, %102
  br i1 %103, label %119, label %104, !prof !2

104:                                              ; preds = %85
  %105 = bitcast i8* %96 to %"class.blink::Member.77"**
  %106 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %105, align 8
  %107 = zext i32 %99 to i64
  %108 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %106, i64 %107
  %109 = ptrtoint %"class.blink::CSSValue"* %95 to i64
  %110 = bitcast %"class.blink::Member.77"* %108 to i64*
  store atomic i64 %109, i64* %110 monotonic, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %95, i64 0, i32 0
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #8
  br label %116

116:                                              ; preds = %113, %104
  %117 = load i32, i32* %98, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %98, align 4
  br label %121

119:                                              ; preds = %85
  %120 = bitcast i8* %96 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %120, %"class.blink::CSSValue"* dereferenceable(3) %95) #8
  br label %121

121:                                              ; preds = %119, %116
  %122 = bitcast i8* %86 to %"class.blink::CSSValue"*
  br label %493

123:                                              ; preds = %48, %48, %48
  %124 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %125 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %124, align 8
  %126 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %125, i64 10
  %127 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %126, align 8
  %128 = tail call %"class.blink::CSSValue"* %127(%"class.blink::CSSStyleValue"* %2) #8
  %129 = icmp eq %"class.blink::CSSValue"* %128, null
  br i1 %129, label %487, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %128, i64 0, i32 2
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 2
  br i1 %133, label %134, label %487

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %128, i64 1, i32 1
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* %136, align 4
  switch i32 %137, label %138 [
    i32 3, label %487
    i32 56, label %487
  ]

138:                                              ; preds = %134
  %139 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %140 = bitcast i8* %139 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %140, i32 0) #8
  %141 = getelementptr inbounds i8, i8* %139, i64 -4
  %142 = bitcast i8* %141 to i16*
  %143 = load atomic i16, i16* %142 monotonic, align 2
  %144 = or i16 %143, 1
  store atomic i16 %144, i16* %142 release, align 2
  %145 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %124, align 8
  %146 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %145, i64 10
  %147 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %146, align 8
  %148 = tail call %"class.blink::CSSValue"* %147(%"class.blink::CSSStyleValue"* %2) #8
  %149 = getelementptr inbounds i8, i8* %139, i64 8
  %150 = getelementptr inbounds i8, i8* %139, i64 20
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i8, i8* %139, i64 16
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %152, %155
  br i1 %156, label %172, label %157, !prof !2

157:                                              ; preds = %138
  %158 = bitcast i8* %149 to %"class.blink::Member.77"**
  %159 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %158, align 8
  %160 = zext i32 %152 to i64
  %161 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %159, i64 %160
  %162 = ptrtoint %"class.blink::CSSValue"* %148 to i64
  %163 = bitcast %"class.blink::Member.77"* %161 to i64*
  store atomic i64 %162, i64* %163 monotonic, align 8
  %164 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %148, i64 0, i32 0
  %168 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %167) #8
  br label %169

169:                                              ; preds = %166, %157
  %170 = load i32, i32* %151, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %151, align 4
  br label %174

172:                                              ; preds = %138
  %173 = bitcast i8* %149 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %173, %"class.blink::CSSValue"* dereferenceable(3) %148) #8
  br label %174

174:                                              ; preds = %172, %169
  %175 = bitcast i8* %139 to %"class.blink::CSSValue"*
  br label %493

176:                                              ; preds = %48
  %177 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %178 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %177, align 8
  %179 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %178, i64 10
  %180 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %179, align 8
  %181 = tail call %"class.blink::CSSValue"* %180(%"class.blink::CSSStyleValue"* %2) #8
  %182 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %181, i64 0, i32 2
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 2
  br i1 %184, label %185, label %487

185:                                              ; preds = %176
  %186 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %187 = bitcast i8* %186 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %187, i32 0) #8
  %188 = getelementptr inbounds i8, i8* %186, i64 -4
  %189 = bitcast i8* %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = or i16 %190, 1
  store atomic i16 %191, i16* %189 release, align 2
  %192 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %177, align 8
  %193 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %192, i64 10
  %194 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %193, align 8
  %195 = tail call %"class.blink::CSSValue"* %194(%"class.blink::CSSStyleValue"* %2) #8
  %196 = getelementptr inbounds i8, i8* %186, i64 8
  %197 = getelementptr inbounds i8, i8* %186, i64 20
  %198 = bitcast i8* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds i8, i8* %186, i64 16
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %199, %202
  br i1 %203, label %219, label %204, !prof !2

204:                                              ; preds = %185
  %205 = bitcast i8* %196 to %"class.blink::Member.77"**
  %206 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %205, align 8
  %207 = zext i32 %199 to i64
  %208 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %206, i64 %207
  %209 = ptrtoint %"class.blink::CSSValue"* %195 to i64
  %210 = bitcast %"class.blink::Member.77"* %208 to i64*
  store atomic i64 %209, i64* %210 monotonic, align 8
  %211 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %204
  %214 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %195, i64 0, i32 0
  %215 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %214) #8
  br label %216

216:                                              ; preds = %213, %204
  %217 = load i32, i32* %198, align 4
  %218 = add i32 %217, 1
  store i32 %218, i32* %198, align 4
  br label %221

219:                                              ; preds = %185
  %220 = bitcast i8* %196 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %220, %"class.blink::CSSValue"* dereferenceable(3) %195) #8
  br label %221

221:                                              ; preds = %219, %216
  %222 = bitcast i8* %186 to %"class.blink::CSSValue"*
  br label %493

223:                                              ; preds = %48
  %224 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %225 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %224, align 8
  %226 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %225, i64 10
  %227 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %226, align 8
  %228 = tail call %"class.blink::CSSValue"* %227(%"class.blink::CSSStyleValue"* %2) #8
  %229 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %228, i64 0, i32 2
  %230 = load i8, i8* %229, align 1
  %231 = icmp ult i8 %230, 3
  br i1 %231, label %232, label %487

232:                                              ; preds = %223
  %233 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %234 = bitcast i8* %233 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %234, i32 0) #8
  %235 = getelementptr inbounds i8, i8* %233, i64 -4
  %236 = bitcast i8* %235 to i16*
  %237 = load atomic i16, i16* %236 monotonic, align 2
  %238 = or i16 %237, 1
  store atomic i16 %238, i16* %236 release, align 2
  %239 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %224, align 8
  %240 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %239, i64 10
  %241 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %240, align 8
  %242 = tail call %"class.blink::CSSValue"* %241(%"class.blink::CSSStyleValue"* %2) #8
  %243 = getelementptr inbounds i8, i8* %233, i64 8
  %244 = getelementptr inbounds i8, i8* %233, i64 20
  %245 = bitcast i8* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds i8, i8* %233, i64 16
  %248 = bitcast i8* %247 to i32*
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %246, %249
  br i1 %250, label %266, label %251, !prof !2

251:                                              ; preds = %232
  %252 = bitcast i8* %243 to %"class.blink::Member.77"**
  %253 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %252, align 8
  %254 = zext i32 %246 to i64
  %255 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %253, i64 %254
  %256 = ptrtoint %"class.blink::CSSValue"* %242 to i64
  %257 = bitcast %"class.blink::Member.77"* %255 to i64*
  store atomic i64 %256, i64* %257 monotonic, align 8
  %258 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %242, i64 0, i32 0
  %262 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %261) #8
  br label %263

263:                                              ; preds = %260, %251
  %264 = load i32, i32* %245, align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %245, align 4
  br label %268

266:                                              ; preds = %232
  %267 = bitcast i8* %243 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %267, %"class.blink::CSSValue"* dereferenceable(3) %242) #8
  br label %268

268:                                              ; preds = %266, %263
  %269 = bitcast i8* %233 to %"class.blink::CSSValue"*
  br label %493

270:                                              ; preds = %48, %48
  %271 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_overflow_clip_enabled_E, align 1, !range !3
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %487

273:                                              ; preds = %270
  %274 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %275 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %274, align 8
  %276 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %275, i64 10
  %277 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %276, align 8
  %278 = tail call %"class.blink::CSSValue"* %277(%"class.blink::CSSStyleValue"* %2) #8
  %279 = icmp eq %"class.blink::CSSValue"* %278, null
  br i1 %279, label %487, label %280

280:                                              ; preds = %273
  %281 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %278, i64 0, i32 2
  %282 = load i8, i8* %281, align 1
  %283 = icmp eq i8 %282, 2
  br i1 %283, label %284, label %487

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %278, i64 1, i32 1
  %286 = bitcast i8* %285 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 541
  br i1 %288, label %493, label %487

289:                                              ; preds = %48
  %290 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %291 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %290, align 8
  %292 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %291, i64 10
  %293 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %292, align 8
  %294 = tail call %"class.blink::CSSValue"* %293(%"class.blink::CSSStyleValue"* %2) #8
  %295 = icmp eq %"class.blink::CSSValue"* %294, null
  br i1 %295, label %487, label %296

296:                                              ; preds = %289
  %297 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %294, i64 0, i32 2
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 2
  br i1 %299, label %300, label %487

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %294, i64 1, i32 1
  %302 = bitcast i8* %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %303, 56
  br i1 %304, label %487, label %305

305:                                              ; preds = %300
  %306 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %307 = bitcast i8* %306 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %307, i32 0) #8
  %308 = getelementptr inbounds i8, i8* %306, i64 -4
  %309 = bitcast i8* %308 to i16*
  %310 = load atomic i16, i16* %309 monotonic, align 2
  %311 = or i16 %310, 1
  store atomic i16 %311, i16* %309 release, align 2
  %312 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %290, align 8
  %313 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %312, i64 10
  %314 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %313, align 8
  %315 = tail call %"class.blink::CSSValue"* %314(%"class.blink::CSSStyleValue"* %2) #8
  %316 = getelementptr inbounds i8, i8* %306, i64 8
  %317 = getelementptr inbounds i8, i8* %306, i64 20
  %318 = bitcast i8* %317 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = getelementptr inbounds i8, i8* %306, i64 16
  %321 = bitcast i8* %320 to i32*
  %322 = load i32, i32* %321, align 8
  %323 = icmp eq i32 %319, %322
  br i1 %323, label %339, label %324, !prof !2

324:                                              ; preds = %305
  %325 = bitcast i8* %316 to %"class.blink::Member.77"**
  %326 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %325, align 8
  %327 = zext i32 %319 to i64
  %328 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %326, i64 %327
  %329 = ptrtoint %"class.blink::CSSValue"* %315 to i64
  %330 = bitcast %"class.blink::Member.77"* %328 to i64*
  store atomic i64 %329, i64* %330 monotonic, align 8
  %331 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %336, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %315, i64 0, i32 0
  %335 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %334) #8
  br label %336

336:                                              ; preds = %333, %324
  %337 = load i32, i32* %318, align 4
  %338 = add i32 %337, 1
  store i32 %338, i32* %318, align 4
  br label %341

339:                                              ; preds = %305
  %340 = bitcast i8* %316 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %340, %"class.blink::CSSValue"* dereferenceable(3) %315) #8
  br label %341

341:                                              ; preds = %339, %336
  %342 = bitcast i8* %306 to %"class.blink::CSSValue"*
  br label %493

343:                                              ; preds = %48
  %344 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %345 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %344, align 8
  %346 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %345, i64 10
  %347 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %346, align 8
  %348 = tail call %"class.blink::CSSValue"* %347(%"class.blink::CSSStyleValue"* %2) #8
  %349 = icmp eq %"class.blink::CSSValue"* %348, null
  br i1 %349, label %487, label %350

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %348, i64 0, i32 2
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 2
  br i1 %353, label %354, label %487

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %348, i64 1, i32 1
  %356 = bitcast i8* %355 to i32*
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, 3
  br i1 %358, label %487, label %359

359:                                              ; preds = %354
  %360 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %361 = bitcast i8* %360 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %361, i32 0) #8
  %362 = getelementptr inbounds i8, i8* %360, i64 -4
  %363 = bitcast i8* %362 to i16*
  %364 = load atomic i16, i16* %363 monotonic, align 2
  %365 = or i16 %364, 1
  store atomic i16 %365, i16* %363 release, align 2
  %366 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %344, align 8
  %367 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %366, i64 10
  %368 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %367, align 8
  %369 = tail call %"class.blink::CSSValue"* %368(%"class.blink::CSSStyleValue"* %2) #8
  %370 = getelementptr inbounds i8, i8* %360, i64 8
  %371 = getelementptr inbounds i8, i8* %360, i64 20
  %372 = bitcast i8* %371 to i32*
  %373 = load i32, i32* %372, align 4
  %374 = getelementptr inbounds i8, i8* %360, i64 16
  %375 = bitcast i8* %374 to i32*
  %376 = load i32, i32* %375, align 8
  %377 = icmp eq i32 %373, %376
  br i1 %377, label %393, label %378, !prof !2

378:                                              ; preds = %359
  %379 = bitcast i8* %370 to %"class.blink::Member.77"**
  %380 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %379, align 8
  %381 = zext i32 %373 to i64
  %382 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %380, i64 %381
  %383 = ptrtoint %"class.blink::CSSValue"* %369 to i64
  %384 = bitcast %"class.blink::Member.77"* %382 to i64*
  store atomic i64 %383, i64* %384 monotonic, align 8
  %385 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %390, label %387

387:                                              ; preds = %378
  %388 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %369, i64 0, i32 0
  %389 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %388) #8
  br label %390

390:                                              ; preds = %387, %378
  %391 = load i32, i32* %372, align 4
  %392 = add i32 %391, 1
  store i32 %392, i32* %372, align 4
  br label %395

393:                                              ; preds = %359
  %394 = bitcast i8* %370 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %394, %"class.blink::CSSValue"* dereferenceable(3) %369) #8
  br label %395

395:                                              ; preds = %393, %390
  %396 = bitcast i8* %360 to %"class.blink::CSSValue"*
  br label %493

397:                                              ; preds = %48
  %398 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %399 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %398, align 8
  %400 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %399, i64 10
  %401 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %400, align 8
  %402 = tail call %"class.blink::CSSValue"* %401(%"class.blink::CSSStyleValue"* %2) #8
  %403 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %402, i64 0, i32 2
  %404 = load i8, i8* %403, align 1
  %405 = icmp ult i8 %404, 2
  br i1 %405, label %406, label %487

406:                                              ; preds = %397
  %407 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %408 = bitcast i8* %407 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %408, i32 0) #8
  %409 = getelementptr inbounds i8, i8* %407, i64 -4
  %410 = bitcast i8* %409 to i16*
  %411 = load atomic i16, i16* %410 monotonic, align 2
  %412 = or i16 %411, 1
  store atomic i16 %412, i16* %410 release, align 2
  %413 = getelementptr inbounds i8, i8* %407, i64 8
  %414 = getelementptr inbounds i8, i8* %407, i64 20
  %415 = bitcast i8* %414 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds i8, i8* %407, i64 16
  %418 = bitcast i8* %417 to i32*
  %419 = load i32, i32* %418, align 8
  %420 = icmp eq i32 %416, %419
  br i1 %420, label %436, label %421, !prof !2

421:                                              ; preds = %406
  %422 = bitcast i8* %413 to %"class.blink::Member.77"**
  %423 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %422, align 8
  %424 = zext i32 %416 to i64
  %425 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %423, i64 %424
  %426 = ptrtoint %"class.blink::CSSValue"* %402 to i64
  %427 = bitcast %"class.blink::Member.77"* %425 to i64*
  store atomic i64 %426, i64* %427 monotonic, align 8
  %428 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %433, label %430

430:                                              ; preds = %421
  %431 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %402, i64 0, i32 0
  %432 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %431) #8
  br label %433

433:                                              ; preds = %430, %421
  %434 = load i32, i32* %415, align 4
  %435 = add i32 %434, 1
  store i32 %435, i32* %415, align 4
  br label %438

436:                                              ; preds = %406
  %437 = bitcast i8* %413 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %437, %"class.blink::CSSValue"* dereferenceable(3) %402) #8
  br label %438

438:                                              ; preds = %436, %433
  %439 = bitcast i8* %407 to %"class.blink::CSSValue"*
  br label %493

440:                                              ; preds = %48, %48
  %441 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %442 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %441, align 8
  %443 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %442, i64 10
  %444 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %443, align 8
  %445 = tail call %"class.blink::CSSValue"* %444(%"class.blink::CSSStyleValue"* %2) #8
  %446 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %445, i64 0, i32 2
  %447 = load i8, i8* %446, align 1
  %448 = icmp eq i8 %447, 2
  br i1 %448, label %449, label %487

449:                                              ; preds = %440
  %450 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %451 = bitcast i8* %450 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %451, i32 0) #8
  %452 = getelementptr inbounds i8, i8* %450, i64 -4
  %453 = bitcast i8* %452 to i16*
  %454 = load atomic i16, i16* %453 monotonic, align 2
  %455 = or i16 %454, 1
  store atomic i16 %455, i16* %453 release, align 2
  %456 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %441, align 8
  %457 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %456, i64 10
  %458 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %457, align 8
  %459 = tail call %"class.blink::CSSValue"* %458(%"class.blink::CSSStyleValue"* %2) #8
  %460 = getelementptr inbounds i8, i8* %450, i64 8
  %461 = getelementptr inbounds i8, i8* %450, i64 20
  %462 = bitcast i8* %461 to i32*
  %463 = load i32, i32* %462, align 4
  %464 = getelementptr inbounds i8, i8* %450, i64 16
  %465 = bitcast i8* %464 to i32*
  %466 = load i32, i32* %465, align 8
  %467 = icmp eq i32 %463, %466
  br i1 %467, label %483, label %468, !prof !2

468:                                              ; preds = %449
  %469 = bitcast i8* %460 to %"class.blink::Member.77"**
  %470 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %469, align 8
  %471 = zext i32 %463 to i64
  %472 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %470, i64 %471
  %473 = ptrtoint %"class.blink::CSSValue"* %459 to i64
  %474 = bitcast %"class.blink::Member.77"* %472 to i64*
  store atomic i64 %473, i64* %474 monotonic, align 8
  %475 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %480, label %477

477:                                              ; preds = %468
  %478 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %459, i64 0, i32 0
  %479 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %478) #8
  br label %480

480:                                              ; preds = %477, %468
  %481 = load i32, i32* %462, align 4
  %482 = add i32 %481, 1
  store i32 %482, i32* %462, align 4
  br label %485

483:                                              ; preds = %449
  %484 = bitcast i8* %460 to %"class.WTF::Vector.74"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"* %484, %"class.blink::CSSValue"* dereferenceable(3) %459) #8
  br label %485

485:                                              ; preds = %483, %480
  %486 = bitcast i8* %450 to %"class.blink::CSSValue"*
  br label %493

487:                                              ; preds = %223, %76, %130, %280, %270, %296, %350, %134, %134, %440, %397, %343, %354, %289, %300, %273, %176, %123, %49, %284, %48
  %488 = bitcast %"class.blink::CSSStyleValue"* %2 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)***
  %489 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)*** %488, align 8
  %490 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)** %489, i64 11
  %491 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)** %490, align 8
  %492 = tail call %"class.blink::CSSValue"* %491(%"class.blink::CSSStyleValue"* %2, i32 %7) #8
  br label %493

493:                                              ; preds = %485, %438, %395, %341, %268, %221, %174, %121, %59, %284, %4, %487, %47
  %494 = phi %"class.blink::CSSValue"* [ %31, %47 ], [ %492, %487 ], [ %486, %485 ], [ %439, %438 ], [ %396, %395 ], [ %342, %341 ], [ %269, %268 ], [ %222, %221 ], [ %175, %174 ], [ %122, %121 ], [ %75, %59 ], [ null, %4 ], [ null, %284 ]
  ret %"class.blink::CSSValue"* %494
}

declare %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"*, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #8
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #8
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #8
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #8
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValuePairEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #2

declare void @_ZN5blink17StyleValueFactory10FromStringENS_13CSSPropertyIDERKN3WTF12AtomicStringERKNS2_6StringEPKNS_16CSSParserContextE(%"class.blink::HeapVector.85"* sret, i32, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.63"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.88"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.63"*, %"class.blink::Member.63"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.63", %"class.blink::Member.63"* %24, i64 %25
  ret %"class.blink::Member.63"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.74"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.74"* %0, i32 %5) #8
  %6 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.77"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #8
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.74"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.74"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.74"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %8, align 8
  %10 = icmp eq %"class.blink::Member.77"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.74"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.74"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.77"*
  %33 = icmp eq %"class.blink::Member.77"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #8
  %39 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %8, align 8
  %40 = icmp eq %"class.blink::Member.77"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.77"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.77"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.74"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.74"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %5, align 8
  %7 = icmp eq %"class.blink::Member.77"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.77"*
  %10 = icmp eq %"class.blink::Member.77"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.74"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.74"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.77"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.77"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.77"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #8
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #8
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.75"* %20, %"class.blink::Member.77"* %6) #8
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #8
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #8
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.77"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !4

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.77"*
  %58 = icmp ne %"class.blink::Member.77"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.77"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #8
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.77"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.77"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.77"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #8
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.74"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #8
  %87 = load %"class.blink::Member.77"*, %"class.blink::Member.77"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.77"*
  %90 = icmp eq %"class.blink::Member.77"* %87, %89
  br i1 %90, label %93, label %91, !prof !4

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.75"* %92, %"class.blink::Member.77"* %87) #8
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.74"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.74", %"class.WTF::Vector.74"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.14, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.16, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.77"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.77", %"class.blink::Member.77"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.77"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.75"*, %"class.blink::Member.77"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::Member.77"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.343"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.343"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.59"* @_ZNK3WTF6VectorIN5blink6MemberINS1_28V8UnionCSSStyleValueOrStringEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %24, i64 %25
  ret %"class.blink::Member.59"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
