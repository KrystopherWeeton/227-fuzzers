; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_allstates.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_allstates.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_AllStates = type <{ %class.CPDF_GraphicStates, %class.CFX_Matrix, %class.CFX_Matrix, %class.CFX_Matrix, %class.CFX_PTemplate, %class.CFX_PTemplate, float, float, float, [4 x i8] }>
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.35" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.43" }
%"class.fxcrt::SharedCopyOnWrite.43" = type { %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.48", %"class.fxcrt::UnownedPtr.170", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.109", %"class.fxcrt::RetainPtr.117", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.162", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.60", %"class.std::__1::unique_ptr.66", %"class.fxcrt::RetainPtr.72", %"class.fxcrt::RetainPtr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::vector.104", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.72" = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.76", %"class.fxcrt::RetainPtr.80" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.80" = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i8* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i8*, i8*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.108", i64 }
%"class.fxcrt::UnownedPtr.108" = type { i8* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::unique_ptr.111" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::unique_ptr.111"* }
%"class.fxcrt::RetainPtr.117" = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.127", %"class.fxcrt::RetainPtr.148" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.100", %"class.fxcrt::UnownedPtr.108" }
%"class.fxcrt::RetainPtr.127" = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.131" }
%"class.fxcrt::RetainPtr.131" = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.320", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.335", [4 x i8] }>
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.fxcrt::RetainPtr.148" = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.121" }
%"class.fxcrt::RetainPtr.121" = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::UnownedPtr.170" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.173" }
%"class.fxcrt::SharedCopyOnWrite.173" = type { %"class.fxcrt::RetainPtr.174" }
%"class.fxcrt::RetainPtr.174" = type { %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.178", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.190", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.184", float, float }
%"class.fxcrt::RetainPtr.178" = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.CPDF_Object* }
%"class.fxcrt::RetainPtr.190" = type { %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.184" = type { %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.CPDF_Object* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_PTemplate = type { float, float }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.198", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.fxcrt::RetainPtr.178"*, %"class.fxcrt::RetainPtr.178"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.fxcrt::RetainPtr.178"* }
%class.CPDF_StreamContentParser = type <{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::UnownedPtr.205", %"class.fxcrt::UnownedPtr.261", %class.CFX_Matrix, %class.CFX_FloatRect, i32, i32, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.std::__1::stack", %"class.std::__1::vector.3", %"class.fxcrt::UnownedPtr.288", %"class.std::__1::vector.289", float, float, float, float, i8, [7 x i8], %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.296", i8, i8, [6 x i8], %"class.std::__1::vector.302", [6 x float], [16 x %"struct.CPDF_StreamContentParser::ContentParam"], %"class.std::__1::vector.309", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.205" = type { %class.CPDF_PageObjectHolder* }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156", %"class.std::__1::map.206", %"class.std::__1::map.217", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.156", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.251" }
%"class.std::__1::map.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::map.217" = type { %"class.std::__1::__tree.218" }
%"class.std::__1::__tree.218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.241"**, %"class.std::__1::unique_ptr.241"**, %"class.std::__1::unique_ptr.241"**, %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.std::__1::unique_ptr.241"** }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::set.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.fxcrt::UnownedPtr.261" = type { %"class.std::__1::set.262"* }
%"class.std::__1::set.262" = type opaque
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %class.CPDF_StreamParser* }
%class.CPDF_StreamParser = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %class.CPDF_AllStates* }
%"class.std::__1::stack" = type { %"class.std::__1::deque.275" }
%"class.std::__1::deque.275" = type { %"class.std::__1::__deque_base.276" }
%"class.std::__1::__deque_base.276" = type { %"struct.std::__1::__split_buffer.277", i64, %"class.std::__1::__compressed_pair.284" }
%"struct.std::__1::__split_buffer.277" = type { %"class.std::__1::unique_ptr.278"**, %"class.std::__1::unique_ptr.278"**, %"class.std::__1::unique_ptr.278"**, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::unique_ptr.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.std::__1::unique_ptr.278"** }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.fxcrt::UnownedPtr.288" = type { %class.CPDF_TextObject* }
%class.CPDF_TextObject = type opaque
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.291" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::RetainPtr.296" = type { %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %class.CPDF_Image* }
%class.CPDF_Image = type opaque
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::unique_ptr.269"*, %"class.std::__1::unique_ptr.269"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::unique_ptr.269"* }
%"struct.CPDF_StreamContentParser::ContentParam" = type { i32, %class.FX_Number, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.178" }
%class.FX_Number = type { i8, i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { i32*, i32*, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { i32* }
%class.CPDF_DictionaryLocker = type { %"class.fxcrt::RetainPtr.127" }

@_ZTV14CPDF_AllStates = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_AllStates*)* @_ZN14CPDF_AllStatesD2Ev to i8*), i8* bitcast (void (%class.CPDF_AllStates*)* @_ZN14CPDF_AllStatesD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"TR2\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"op\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"BG2\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"UCR2\00", align 1

@_ZN14CPDF_AllStatesC1Ev = hidden unnamed_addr alias void (%class.CPDF_AllStates*), void (%class.CPDF_AllStates*)* @_ZN14CPDF_AllStatesC2Ev
@_ZN14CPDF_AllStatesD1Ev = hidden unnamed_addr alias void (%class.CPDF_AllStates*), void (%class.CPDF_AllStates*)* @_ZN14CPDF_AllStatesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStatesC2Ev(%class.CPDF_AllStates*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStatesC2Ev(%class.CPDF_GraphicStates* %2) #5
  %3 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV14CPDF_AllStates, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 1, i32 4
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %7, align 4
  %8 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 2, i32 2
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3, i32 0
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3, i32 1
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3, i32 2
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3, i32 3
  store float 1.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3, i32 4
  %15 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 8
  %16 = bitcast float* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 32, i1 false)
  store float 1.000000e+00, float* %15, align 8
  ret void
}

declare void @_ZN18CPDF_GraphicStatesC2Ev(%class.CPDF_GraphicStates*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18CPDF_GraphicStatesD2Ev(%class.CPDF_GraphicStates*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStatesD2Ev(%class.CPDF_AllStates*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStatesD2Ev(%class.CPDF_GraphicStates* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStatesD0Ev(%class.CPDF_AllStates*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStatesD2Ev(%class.CPDF_GraphicStates* %2) #5
  %3 = bitcast %class.CPDF_AllStates* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStates4CopyERKS_(%class.CPDF_AllStates*, %class.CPDF_AllStates* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStates10CopyStatesERKS_(%class.CPDF_GraphicStates* %3, %class.CPDF_GraphicStates* dereferenceable(48) %4) #5
  %5 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 1
  %6 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 1
  %7 = bitcast %class.CFX_Matrix* %6 to i8*
  %8 = bitcast %class.CFX_Matrix* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 3
  %10 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 3
  %11 = bitcast %class.CFX_Matrix* %10 to i8*
  %12 = bitcast %class.CFX_Matrix* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 24, i1 false)
  %13 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 2
  %14 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 2
  %15 = bitcast %class.CFX_Matrix* %14 to i8*
  %16 = bitcast %class.CFX_Matrix* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 24, i1 false)
  %17 = icmp eq %class.CPDF_AllStates* %0, %1
  br i1 %17, label %39, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 4
  %20 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 4
  %21 = bitcast %class.CFX_PTemplate* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %class.CFX_PTemplate* %19 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 4, i32 1
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 4, i32 1
  %28 = bitcast float* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 5
  %30 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 5
  %31 = bitcast %class.CFX_PTemplate* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %class.CFX_PTemplate* %29 to i32*
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 5, i32 1
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 5, i32 1
  %38 = bitcast float* %37 to i32*
  store i32 %36, i32* %38, align 4
  br label %39

39:                                               ; preds = %2, %18
  %40 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 6
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 6
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 8
  %45 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 7
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 7
  %49 = bitcast float* %48 to i32*
  store i32 %47, i32* %49, align 4
  %50 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %1, i64 0, i32 8
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 8
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 8
  ret void
}

declare void @_ZN18CPDF_GraphicStates10CopyStatesERKS_(%class.CPDF_GraphicStates*, %class.CPDF_GraphicStates* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStates11SetLineDashEPK10CPDF_Arrayff(%class.CPDF_AllStates*, %class.CPDF_Array*, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.17", align 16
  %6 = alloca %"class.std::__1::vector.17", align 16
  %7 = bitcast %"class.std::__1::vector.17"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.fxcrt::RetainPtr.178"** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.17"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 24, i1 false)
  %15 = load i64, i64* %13, align 8
  %16 = bitcast %"class.std::__1::vector.198"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  call void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.17"* nonnull sret %5, %class.CPDF_Array* %1, i64 %19) #5
  %20 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 2
  %21 = bitcast float** %9 to i64*
  %22 = bitcast %"class.std::__1::vector.17"* %5 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 16
  %24 = bitcast %"class.std::__1::vector.17"* %6 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 16
  %25 = bitcast float** %10 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast float** %27 to i64*
  store i64 %26, i64* %28, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 24, i1 false) #5
  call void @_ZN14CFX_GraphState11SetLineDashENSt3__16vectorIfNS0_9allocatorIfEEEEff(%class.CFX_GraphState* %20, %"class.std::__1::vector.17"* nonnull %6, float %2, float %3) #5
  %29 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 0
  %30 = load float*, float** %29, align 16
  %31 = icmp eq float* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 1
  %34 = bitcast float** %33 to i64*
  %35 = ptrtoint float* %30 to i64
  store i64 %35, i64* %34, align 8
  %36 = bitcast float* %30 to i8*
  call void @_ZdlPv(i8* %36) #6
  br label %37

37:                                               ; preds = %4, %32
  %38 = load float*, float** %8, align 16
  %39 = icmp eq float* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = ptrtoint float* %38 to i64
  store i64 %41, i64* %21, align 8
  %42 = bitcast float* %38 to i8*
  call void @_ZdlPv(i8* %42) #6
  br label %43

43:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.17"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZN14CFX_GraphState11SetLineDashENSt3__16vectorIfNS0_9allocatorIfEEEEff(%class.CFX_GraphState*, %"class.std::__1::vector.17"*, float, float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_AllStates12ProcessExtGSEP15CPDF_DictionaryP24CPDF_StreamContentParser(%class.CPDF_AllStates*, %class.CPDF_Dictionary*, %class.CPDF_StreamContentParser*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CPDF_DictionaryLocker, align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = bitcast %class.CPDF_DictionaryLocker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  %14 = getelementptr inbounds %class.CPDF_DictionaryLocker, %class.CPDF_DictionaryLocker* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %14, align 8
  call void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker* nonnull %4, %class.CPDF_Dictionary* %1) #5
  %15 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %14, align 8
  %16 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %3
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !4
  unreachable

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %15, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %15, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %22, %23
  br i1 %24, label %40, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 5
  %27 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  %28 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  %29 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  %30 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %2, i64 0, i32 11, i32 0, i32 0, i32 0
  %31 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  %32 = getelementptr inbounds %class.CPDF_StreamContentParser, %class.CPDF_StreamContentParser* %2, i64 0, i32 4, i32 0
  %33 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  %34 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 4
  %35 = bitcast %"class.fxcrt::RetainPtr.48"* %6 to i8*
  %36 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  %39 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 2
  br label %43

40:                                               ; preds = %350, %20
  %41 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 0, i32 5
  %42 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %0, i64 0, i32 2
  call void @_ZN17CPDF_GeneralState9SetMatrixERK10CFX_Matrix(%class.CPDF_GeneralState* %41, %class.CFX_Matrix* dereferenceable(24) %42) #5
  call void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  ret void

43:                                               ; preds = %25, %350
  %44 = phi %"class.std::__1::__tree_end_node"* [ %22, %25 ], [ %351, %350 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %class.CPDF_Object**
  %48 = load %class.CPDF_Object*, %class.CPDF_Object** %47, align 8
  %49 = icmp eq %class.CPDF_Object* %48, null
  br i1 %49, label %322, label %50

50:                                               ; preds = %43
  %51 = bitcast %class.CPDF_Object* %48 to %class.CPDF_Object* (%class.CPDF_Object*)***
  %52 = load %class.CPDF_Object* (%class.CPDF_Object*)**, %class.CPDF_Object* (%class.CPDF_Object*)*** %51, align 8
  %53 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %52, i64 5
  %54 = load %class.CPDF_Object* (%class.CPDF_Object*)*, %class.CPDF_Object* (%class.CPDF_Object*)** %53, align 8
  %55 = call %class.CPDF_Object* %54(%class.CPDF_Object* nonnull %48) #5
  %56 = icmp eq %class.CPDF_Object* %55, null
  br i1 %56, label %322, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.fxcrt::StringDataTemplate"**
  %59 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %58, align 8, !noalias !5
  %60 = icmp eq %"class.fxcrt::StringDataTemplate"* %59, null
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3, i64 0
  %62 = select i1 %60, i8* null, i8* %61
  br i1 %60, label %322, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 1
  %65 = load i64, i64* %64, align 8, !noalias !5
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %322, label %67

67:                                               ; preds = %63
  %68 = icmp ult i64 %65, 4
  %69 = select i1 %68, i64 %65, i64 4
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %124, label %71

71:                                               ; preds = %67
  %72 = add nsw i64 %69, -1
  %73 = and i64 %69, 3
  %74 = icmp ult i64 %72, 3
  br i1 %74, label %107, label %75

75:                                               ; preds = %71
  %76 = sub nsw i64 %69, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %104, %77 ]
  %79 = phi i32 [ 0, %75 ], [ %103, %77 ]
  %80 = phi i64 [ %76, %75 ], [ %105, %77 ]
  %81 = shl i32 %79, 8
  %82 = getelementptr inbounds i8, i8* %62, i64 %78
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = or i32 %81, %84
  %86 = or i64 %78, 1
  %87 = shl i32 %85, 8
  %88 = getelementptr inbounds i8, i8* %62, i64 %86
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = or i32 %87, %90
  %92 = or i64 %78, 2
  %93 = shl i32 %91, 8
  %94 = getelementptr inbounds i8, i8* %62, i64 %92
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = or i32 %93, %96
  %98 = or i64 %78, 3
  %99 = shl i32 %97, 8
  %100 = getelementptr inbounds i8, i8* %62, i64 %98
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = or i32 %99, %102
  %104 = add nuw i64 %78, 4
  %105 = add i64 %80, -4
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %77

107:                                              ; preds = %77, %71
  %108 = phi i32 [ undef, %71 ], [ %103, %77 ]
  %109 = phi i64 [ 0, %71 ], [ %104, %77 ]
  %110 = phi i32 [ 0, %71 ], [ %103, %77 ]
  %111 = icmp eq i64 %73, 0
  br i1 %111, label %124, label %112

112:                                              ; preds = %107, %112
  %113 = phi i64 [ %121, %112 ], [ %109, %107 ]
  %114 = phi i32 [ %120, %112 ], [ %110, %107 ]
  %115 = phi i64 [ %122, %112 ], [ %73, %107 ]
  %116 = shl i32 %114, 8
  %117 = getelementptr inbounds i8, i8* %62, i64 %113
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = or i32 %116, %119
  %121 = add nuw i64 %113, 1
  %122 = add i64 %115, -1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %112, !llvm.loop !8

124:                                              ; preds = %107, %112, %67
  %125 = phi i32 [ 0, %67 ], [ %108, %107 ], [ %120, %112 ]
  %126 = trunc i64 %69 to i32
  %127 = shl nuw nsw i32 %126, 3
  %128 = sub nsw i32 32, %127
  %129 = shl i32 %125, %128
  switch i32 %129, label %322 [
    i32 1280770048, label %130
    i32 1279459328, label %136
    i32 1279918080, label %143
    i32 1296826368, label %150
    i32 1140850688, label %156
    i32 1380515840, label %168
    i32 1181707892, label %173
    i32 1414660096, label %196
    i32 1414672896, label %198
    i32 1112342528, label %205
    i32 1397580147, label %224
    i32 1128333312, label %235
    i32 1667301376, label %245
    i32 1330642944, label %255
    i32 1869611008, label %269
    i32 1330662656, label %276
    i32 1111949312, label %282
    i32 1111962112, label %284
    i32 1430475264, label %285
    i32 1430475314, label %287
    i32 1213464576, label %288
    i32 1179385856, label %289
    i32 1397555200, label %295
    i32 1396768768, label %301
    i32 1095324416, label %308
    i32 1414201344, label %315
  ]

130:                                              ; preds = %124
  %131 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %132 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %131, align 8
  %133 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %132, i64 9
  %134 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %133, align 8
  %135 = call float %134(%class.CPDF_Object* nonnull %55) #5
  call void @_ZN14CFX_GraphState12SetLineWidthEf(%class.CFX_GraphState* %39, float %135) #5
  br label %322

136:                                              ; preds = %124
  %137 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %138 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %137, align 8
  %139 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %138, i64 10
  %140 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %139, align 8
  %141 = call i32 %140(%class.CPDF_Object* nonnull %55) #5
  %142 = trunc i32 %141 to i8
  call void @_ZN14CFX_GraphState10SetLineCapEN18CFX_GraphStateData7LineCapE(%class.CFX_GraphState* %39, i8 zeroext %142) #5
  br label %322

143:                                              ; preds = %124
  %144 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %145 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %144, align 8
  %146 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %145, i64 10
  %147 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %146, align 8
  %148 = call i32 %147(%class.CPDF_Object* nonnull %55) #5
  %149 = trunc i32 %148 to i8
  call void @_ZN14CFX_GraphState11SetLineJoinEN18CFX_GraphStateData8LineJoinE(%class.CFX_GraphState* %39, i8 zeroext %149) #5
  br label %322

150:                                              ; preds = %124
  %151 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %152 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %151, align 8
  %153 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %152, i64 9
  %154 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %153, align 8
  %155 = call float %154(%class.CPDF_Object* nonnull %55) #5
  call void @_ZN14CFX_GraphState13SetMiterLimitEf(%class.CFX_GraphState* %39, float %155) #5
  br label %322

156:                                              ; preds = %124
  %157 = bitcast %class.CPDF_Object* %55 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %158 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %157, align 8
  %159 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %158, i64 23
  %160 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %159, align 8
  %161 = call %class.CPDF_Array* %160(%class.CPDF_Object* nonnull %55) #5
  %162 = icmp eq %class.CPDF_Array* %161, null
  br i1 %162, label %322, label %163

163:                                              ; preds = %156
  %164 = call %class.CPDF_Array* @_ZN10CPDF_Array10GetArrayAtEm(%class.CPDF_Array* nonnull %161, i64 0) #5
  %165 = icmp eq %class.CPDF_Array* %164, null
  br i1 %165, label %322, label %166

166:                                              ; preds = %163
  %167 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %161, i64 1) #5
  call void @_ZN14CPDF_AllStates11SetLineDashEPK10CPDF_Arrayff(%class.CPDF_AllStates* %0, %class.CPDF_Array* nonnull %164, float %167, float 1.000000e+00)
  br label %322

168:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  %169 = bitcast %class.CPDF_Object* %55 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %170 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %170, i64 7
  %172 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %171, align 8
  call void %172(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Object* nonnull %55) #5
  call void @_ZN17CPDF_GeneralState15SetRenderIntentERKN5fxcrt10ByteStringE(%class.CPDF_GeneralState* %26, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  br label %322

173:                                              ; preds = %124
  %174 = bitcast %class.CPDF_Object* %55 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %175 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %174, align 8
  %176 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %175, i64 23
  %177 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %176, align 8
  %178 = call %class.CPDF_Array* %177(%class.CPDF_Object* nonnull %55) #5
  %179 = icmp eq %class.CPDF_Array* %178, null
  br i1 %179, label %322, label %180

180:                                              ; preds = %173
  %181 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %178, i64 1) #5
  call void @_ZN14CPDF_TextState11SetFontSizeEf(%class.CPDF_TextState* %34, float %181) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #5
  call void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Array* nonnull %178, i64 0) #5
  call void @_ZN24CPDF_StreamContentParser8FindFontERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.48"* nonnull sret %6, %class.CPDF_StreamContentParser* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #5
  call void @_ZN14CPDF_TextState7SetFontERKN5fxcrt9RetainPtrI9CPDF_FontEE(%class.CPDF_TextState* %34, %"class.fxcrt::RetainPtr.48"* nonnull dereferenceable(8) %6) #5
  %182 = load %class.CPDF_Font*, %class.CPDF_Font** %37, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %37, align 8
  %183 = icmp eq %class.CPDF_Font* %182, null
  br i1 %183, label %195, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %182, i64 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = add nsw i64 %186, -1
  store i64 %187, i64* %185, align 8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %195

189:                                              ; preds = %184
  %190 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %182, i64 0, i32 0
  %191 = bitcast %class.CPDF_Font* %182 to void (%"class.fxcrt::Retainable"*)***
  %192 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %192, i64 1
  %194 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %193, align 8
  call void %194(%"class.fxcrt::Retainable"* nonnull %190) #5
  br label %195

195:                                              ; preds = %180, %184, %189
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  br label %322

196:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #5
  %197 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  br i1 %197, label %322, label %198

198:                                              ; preds = %196, %124
  %199 = bitcast %class.CPDF_Object* %55 to i1 (%class.CPDF_Object*)***
  %200 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %199, align 8
  %201 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %200, i64 17
  %202 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %201, align 8
  %203 = call zeroext i1 %202(%class.CPDF_Object* nonnull %55) #5
  %204 = select i1 %203, %class.CPDF_Object* null, %class.CPDF_Object* %55
  call void @_ZN17CPDF_GeneralState5SetTREP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* %204) #5
  br label %322

205:                                              ; preds = %124
  %206 = bitcast %class.CPDF_Object* %55 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %207 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %206, align 8
  %208 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %207, i64 23
  %209 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %208, align 8
  %210 = call %class.CPDF_Array* %209(%class.CPDF_Object* nonnull %55) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  %211 = icmp eq %class.CPDF_Array* %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %205
  call void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* nonnull sret %9, %class.CPDF_Array* nonnull %210, i64 0) #5
  br label %218

213:                                              ; preds = %205
  %214 = bitcast %class.CPDF_Object* %55 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %215 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %215, i64 7
  %217 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %216, align 8
  call void %217(%"class.fxcrt::ByteString"* nonnull sret %9, %class.CPDF_Object* nonnull %55) #5
  br label %218

218:                                              ; preds = %213, %212
  call void @_ZN17CPDF_GeneralState12SetBlendModeERKN5fxcrt10ByteStringE(%class.CPDF_GeneralState* %26, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  %219 = call i32 @_ZNK17CPDF_GeneralState12GetBlendTypeEv(%class.CPDF_GeneralState* %26) #5
  %220 = icmp sgt i32 %219, 1
  br i1 %220, label %221, label %322

221:                                              ; preds = %218
  %222 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %32, align 8
  %223 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %222, i64 0, i32 7
  store i8 1, i8* %223, align 2
  br label %322

224:                                              ; preds = %124
  %225 = bitcast %class.CPDF_Object* %55 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %226 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %225, align 8
  %227 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %226, i64 27
  %228 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %227, align 8
  %229 = call %class.CPDF_Dictionary* %228(%class.CPDF_Object* nonnull %55) #5
  %230 = icmp eq %class.CPDF_Dictionary* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %224
  call void @_ZN17CPDF_GeneralState11SetSoftMaskEP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* nonnull %55) #5
  %232 = load %class.CPDF_AllStates*, %class.CPDF_AllStates** %30, align 8
  %233 = getelementptr inbounds %class.CPDF_AllStates, %class.CPDF_AllStates* %232, i64 0, i32 2
  call void @_ZN17CPDF_GeneralState14SetSMaskMatrixERK10CFX_Matrix(%class.CPDF_GeneralState* %26, %class.CFX_Matrix* dereferenceable(24) %233) #5
  br label %322

234:                                              ; preds = %224
  call void @_ZN17CPDF_GeneralState11SetSoftMaskEP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* null) #5
  br label %322

235:                                              ; preds = %124
  %236 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %237 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %236, align 8
  %238 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %237, i64 9
  %239 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %238, align 8
  %240 = call float %239(%class.CPDF_Object* nonnull %55) #5
  %241 = fcmp olt float %240, 0.000000e+00
  %242 = select i1 %241, float 0.000000e+00, float %240
  %243 = fcmp ogt float %242, 1.000000e+00
  %244 = select i1 %243, float 1.000000e+00, float %242
  call void @_ZN17CPDF_GeneralState14SetStrokeAlphaEf(%class.CPDF_GeneralState* %26, float %244) #5
  br label %322

245:                                              ; preds = %124
  %246 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %247 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %246, align 8
  %248 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %247, i64 9
  %249 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %248, align 8
  %250 = call float %249(%class.CPDF_Object* nonnull %55) #5
  %251 = fcmp olt float %250, 0.000000e+00
  %252 = select i1 %251, float 0.000000e+00, float %250
  %253 = fcmp ogt float %252, 1.000000e+00
  %254 = select i1 %253, float 1.000000e+00, float %252
  call void @_ZN17CPDF_GeneralState12SetFillAlphaEf(%class.CPDF_GeneralState* %26, float %254) #5
  br label %322

255:                                              ; preds = %124
  %256 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %257 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %256, align 8
  %258 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %257, i64 10
  %259 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %258, align 8
  %260 = call i32 %259(%class.CPDF_Object* nonnull %55) #5
  %261 = icmp ne i32 %260, 0
  call void @_ZN17CPDF_GeneralState11SetStrokeOPEb(%class.CPDF_GeneralState* %26, i1 zeroext %261) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #5
  %262 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  br i1 %262, label %322, label %263

263:                                              ; preds = %255
  %264 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %256, align 8
  %265 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %264, i64 10
  %266 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %265, align 8
  %267 = call i32 %266(%class.CPDF_Object* nonnull %55) #5
  %268 = icmp ne i32 %267, 0
  call void @_ZN17CPDF_GeneralState9SetFillOPEb(%class.CPDF_GeneralState* %26, i1 zeroext %268) #5
  br label %322

269:                                              ; preds = %124
  %270 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %271 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %270, align 8
  %272 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %271, i64 10
  %273 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %272, align 8
  %274 = call i32 %273(%class.CPDF_Object* nonnull %55) #5
  %275 = icmp ne i32 %274, 0
  call void @_ZN17CPDF_GeneralState9SetFillOPEb(%class.CPDF_GeneralState* %26, i1 zeroext %275) #5
  br label %322

276:                                              ; preds = %124
  %277 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %278 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %277, align 8
  %279 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %278, i64 10
  %280 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %279, align 8
  %281 = call i32 %280(%class.CPDF_Object* nonnull %55) #5
  call void @_ZN17CPDF_GeneralState9SetOPModeEi(%class.CPDF_GeneralState* %26, i32 %281) #5
  br label %322

282:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #5
  %283 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br i1 %283, label %322, label %284

284:                                              ; preds = %282, %124
  call void @_ZN17CPDF_GeneralState5SetBGEP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* nonnull %55) #5
  br label %322

285:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #5
  %286 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  br i1 %286, label %322, label %287

287:                                              ; preds = %285, %124
  call void @_ZN17CPDF_GeneralState6SetUCREP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* nonnull %55) #5
  br label %322

288:                                              ; preds = %124
  call void @_ZN17CPDF_GeneralState5SetHTEP11CPDF_Object(%class.CPDF_GeneralState* %26, %class.CPDF_Object* nonnull %55) #5
  br label %322

289:                                              ; preds = %124
  %290 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %291 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %290, align 8
  %292 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %291, i64 9
  %293 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %292, align 8
  %294 = call float %293(%class.CPDF_Object* nonnull %55) #5
  call void @_ZN17CPDF_GeneralState11SetFlatnessEf(%class.CPDF_GeneralState* %26, float %294) #5
  br label %322

295:                                              ; preds = %124
  %296 = bitcast %class.CPDF_Object* %55 to float (%class.CPDF_Object*)***
  %297 = load float (%class.CPDF_Object*)**, float (%class.CPDF_Object*)*** %296, align 8
  %298 = getelementptr inbounds float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %297, i64 9
  %299 = load float (%class.CPDF_Object*)*, float (%class.CPDF_Object*)** %298, align 8
  %300 = call float %299(%class.CPDF_Object* nonnull %55) #5
  call void @_ZN17CPDF_GeneralState13SetSmoothnessEf(%class.CPDF_GeneralState* %26, float %300) #5
  br label %322

301:                                              ; preds = %124
  %302 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %303 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %302, align 8
  %304 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %303, i64 10
  %305 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %304, align 8
  %306 = call i32 %305(%class.CPDF_Object* nonnull %55) #5
  %307 = icmp ne i32 %306, 0
  call void @_ZN17CPDF_GeneralState15SetStrokeAdjustEb(%class.CPDF_GeneralState* %26, i1 zeroext %307) #5
  br label %322

308:                                              ; preds = %124
  %309 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %310 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %309, align 8
  %311 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %310, i64 10
  %312 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %311, align 8
  %313 = call i32 %312(%class.CPDF_Object* nonnull %55) #5
  %314 = icmp ne i32 %313, 0
  call void @_ZN17CPDF_GeneralState14SetAlphaSourceEb(%class.CPDF_GeneralState* %26, i1 zeroext %314) #5
  br label %322

315:                                              ; preds = %124
  %316 = bitcast %class.CPDF_Object* %55 to i32 (%class.CPDF_Object*)***
  %317 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %316, align 8
  %318 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %317, i64 10
  %319 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %318, align 8
  %320 = call i32 %319(%class.CPDF_Object* nonnull %55) #5
  %321 = icmp ne i32 %320, 0
  call void @_ZN17CPDF_GeneralState15SetTextKnockoutEb(%class.CPDF_GeneralState* %26, i1 zeroext %321) #5
  br label %322

322:                                              ; preds = %57, %63, %43, %196, %282, %285, %218, %221, %195, %173, %156, %163, %166, %255, %263, %231, %234, %124, %315, %308, %301, %295, %289, %288, %287, %284, %276, %269, %245, %235, %198, %168, %150, %143, %136, %130, %50
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 1, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, null
  br i1 %325, label %326, label %334

326:                                              ; preds = %322
  %327 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node_base"*
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 2
  %329 = bitcast %"class.std::__1::__tree_end_node"* %328 to %"class.std::__1::__tree_end_node"**
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, %327
  br i1 %333, label %350, label %341

334:                                              ; preds = %322, %334
  %335 = phi %"class.std::__1::__tree_node_base"* [ %337, %334 ], [ %324, %322 ]
  %336 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %339, label %334

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0
  br label %350

341:                                              ; preds = %326, %341
  %342 = phi %"class.std::__1::__tree_end_node"** [ %345, %341 ], [ %329, %326 ]
  %343 = bitcast %"class.std::__1::__tree_end_node"** %342 to %"class.std::__1::__tree_node_base"**
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %344, i64 0, i32 2
  %346 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %345, align 8
  %347 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %346, i64 0, i32 0
  %348 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %347, align 8
  %349 = icmp eq %"class.std::__1::__tree_node_base"* %348, %344
  br i1 %349, label %350, label %341

350:                                              ; preds = %341, %326, %339
  %351 = phi %"class.std::__1::__tree_end_node"* [ %340, %339 ], [ %330, %326 ], [ %346, %341 ]
  %352 = icmp eq %"class.std::__1::__tree_end_node"* %351, %23
  br i1 %352, label %40, label %43
}

declare void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN14CFX_GraphState12SetLineWidthEf(%class.CFX_GraphState*, float) local_unnamed_addr #1

declare void @_ZN14CFX_GraphState10SetLineCapEN18CFX_GraphStateData7LineCapE(%class.CFX_GraphState*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN14CFX_GraphState11SetLineJoinEN18CFX_GraphStateData8LineJoinE(%class.CFX_GraphState*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN14CFX_GraphState13SetMiterLimitEf(%class.CFX_GraphState*, float) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZN10CPDF_Array10GetArrayAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState15SetRenderIntentERKN5fxcrt10ByteStringE(%class.CPDF_GeneralState*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

declare void @_ZN14CPDF_TextState11SetFontSizeEf(%class.CPDF_TextState*, float) local_unnamed_addr #1

declare void @_ZN14CPDF_TextState7SetFontERKN5fxcrt9RetainPtrI9CPDF_FontEE(%class.CPDF_TextState*, %"class.fxcrt::RetainPtr.48"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN24CPDF_StreamContentParser8FindFontERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.48"* sret, %class.CPDF_StreamContentParser*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

declare void @_ZN17CPDF_GeneralState5SetTREP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState12SetBlendModeERKN5fxcrt10ByteStringE(%class.CPDF_GeneralState*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK17CPDF_GeneralState12GetBlendTypeEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState11SetSoftMaskEP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState14SetSMaskMatrixERK10CFX_Matrix(%class.CPDF_GeneralState*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState14SetStrokeAlphaEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState12SetFillAlphaEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState11SetStrokeOPEb(%class.CPDF_GeneralState*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState9SetFillOPEb(%class.CPDF_GeneralState*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState9SetOPModeEi(%class.CPDF_GeneralState*, i32) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState5SetBGEP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState6SetUCREP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState5SetHTEP11CPDF_Object(%class.CPDF_GeneralState*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState11SetFlatnessEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState13SetSmoothnessEf(%class.CPDF_GeneralState*, float) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState15SetStrokeAdjustEb(%class.CPDF_GeneralState*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState14SetAlphaSourceEb(%class.CPDF_GeneralState*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState15SetTextKnockoutEb(%class.CPDF_GeneralState*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState9SetMatrixERK10CFX_Matrix(%class.CPDF_GeneralState*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 -2143076512}
!4 = !{i32 -2143076491}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
