; ModuleID = '../../third_party/blink/renderer/modules/xr/xr_frame.cc'
source_filename = "../../third_party/blink/renderer/modules/xr/xr_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.1091 = type { i64 }
%union.anon.1096 = type { %"struct.blink::XRSession::ReferenceSpaceInformation" }
%"struct.blink::XRSession::ReferenceSpaceInformation" = type { %"class.mojo::StructPtr.1042", %"class.blink::TransformationMatrix" }
%"class.mojo::StructPtr.1042" = type { %"class.std::__1::unique_ptr.1043" }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.device::mojom::blink::XRNativeOriginInformation"* }
%"class.device::mojom::blink::XRNativeOriginInformation" = type { i32, %"union.device::mojom::blink::XRNativeOriginInformation::Union_" }
%"union.device::mojom::blink::XRNativeOriginInformation::Union_" = type { i64 }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%union.anon.1032 = type { %"class.blink::TransformationMatrix" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.577", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.577" = type { %"class.base::RefCounted.578" }
%"class.base::RefCounted.578" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.581" }
%"class.blink::HeapHashMap.581" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type { %"class.blink::WeakMember.588", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.590", i32, [4 x i8], %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.728", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.745", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.763", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.94", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.605", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.617", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.634", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.655", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.676", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.708", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.626" = type { %"struct.std::__1::__atomic_base.627" }
%"struct.std::__1::__atomic_base.627" = type { %"struct.std::__1::__atomic_base.628" }
%"struct.std::__1::__atomic_base.628" = type { %"struct.std::__1::__cxx_atomic_impl.629" }
%"struct.std::__1::__cxx_atomic_impl.629" = type { %"struct.std::__1::__cxx_atomic_base_impl.630" }
%"struct.std::__1::__cxx_atomic_base_impl.630" = type { i64 }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::Worklist.637"* }
%"class.blink::Worklist.637" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::Worklist.644"* }
%"class.blink::Worklist.644" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::Worklist.651"* }
%"class.blink::Worklist.651" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::Worklist.658"* }
%"class.blink::Worklist.658" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.blink::Worklist.665"* }
%"class.blink::Worklist.665" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.blink::Worklist.672"* }
%"class.blink::Worklist.672" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.blink::Worklist.679"* }
%"class.blink::Worklist.679" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.626" }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.686", %"class.std::__1::__compressed_pair.694", %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.701", [4 x i8] }>
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688", %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { i64 }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { float }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.711", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.720" }
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.736" }
%"class.WTF::VectorBuffer.736" = type { %"class.WTF::VectorBufferBase.737" }
%"class.WTF::VectorBufferBase.737" = type { %"struct.std::__1::pair.738"*, i32, i32 }
%"struct.std::__1::pair.738" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.751" }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.637"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.644"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.651"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.658"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.665"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.993" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.769 }
%class.scoped_refptr.769 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::XRFrame" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member", i8, i8, [6 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::XRSession"* }
%"class.blink::XRSession" = type <{ %"class.blink::EventTargetWithInlineData", %"class.device::mojom::blink::XRSessionClient", %"class.device::mojom::blink::XRInputSourceButtonListener", %"class.blink::ActiveScriptWrappable", %"class.blink::HeapVector.10", i8, [7 x i8], %"class.WTF::Vector.18", %"class.blink::HeapVector.23", %"class.blink::Member.32", i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.blink::Member.34", %"class.blink::Member.36", %"class.blink::HeapVector.38", %"class.blink::Member.29", i8, i8, [6 x i8], %"class.WTF::HashSet", %"class.std::__1::unique_ptr.48", i8, [7 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.242", %"class.blink::HeapHashMap.249", %"class.blink::HeapHashMap.256", %"class.WTF::HashSet.263", %"class.WTF::HashSet.263", %"class.blink::Member.267", %"class.blink::Member.269", %"class.absl::optional.271", [4 x i8], %"class.blink::HeapVector.276", %"class.WTF::Vector.292", %"class.blink::Member.303", %"class.blink::Member.312", %"class.blink::Member.314", %"class.blink::Member.316", %"class.blink::Member.318", %"class.blink::Member.346", i8, [7 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapVector.348", i32, [4 x i8], %"class.mojo::StructPtr.356", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver", %"class.WTF::Vector.377", %"class.blink::Member.383", %"class.std::__1::unique_ptr.406", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, [3 x i8], float, i8, i8, [6 x i8], %"class.std::__1::unique_ptr.412", i8, i8, i16, i8, [3 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.5" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapVector.7"* }
%"class.blink::HeapVector.7" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.8"* }
%"class.WTF::Vector.8" = type opaque
%"class.device::mojom::blink::XRSessionClient" = type { i32 (...)** }
%"class.device::mojom::blink::XRInputSourceButtonListener" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapVector.10" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::Member.16"*, i32, i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::XRImageTrackingResult"* }
%"class.blink::XRImageTrackingResult" = type opaque
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.23" = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::XRSystem"* }
%"class.blink::XRSystem" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::XRRenderState"* }
%"class.blink::XRRenderState" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::XRLightProbe"* }
%"class.blink::XRLightProbe" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member", %"class.blink::Member.999", %"class.blink::Member.1001", i32, double, %"class.std::__1::unique_ptr.1009" }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::XRSpace"* }
%"class.blink::XRSpace" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::XRLightEstimate"* }
%"class.blink::XRLightEstimate" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1003", %"class.blink::Member.1007", %"class.blink::Member.1007" }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1005" }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::DOMPointReadOnly"* }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.std::__1::unique_ptr.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"class.blink::XRCubeMap"* }
%"class.blink::XRCubeMap" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.blink::XRSession::MetricsReporter"* }
%"struct.blink::XRSession::MetricsReporter" = type { %"class.mojo::Remote", %"class.WTF::HashSet" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.224" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.51, %"class.std::__1::unique_ptr.174", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.57, i32 }>
%class.scoped_refptr.51 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.57, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.136", %"class.absl::optional.141", %"class.absl::optional.98", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.165", i8, [7 x i8], %class.scoped_refptr.57, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.75", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.76" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.57, %"class.std::__1::unique_ptr.83", %"class.absl::optional", %"struct.std::__1::atomic.94", i8, i8, i8, i8, i32, i32, %"class.absl::optional.98", %"class.std::__1::unique_ptr.103", i8, i64, %class.scoped_refptr.132, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.135" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.82", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.82" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.57, i8, %"class.mojo::ScopedHandleBase.86", %class.scoped_refptr.87, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.88" }
%"class.mojo::ScopedHandleBase.86" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.87 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.88" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.92 }
%union.anon.92 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.93", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.93" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.106", i8, i64, %class.scoped_refptr.107, %class.scoped_refptr.128 }
%"class.base::RepeatingCallback.106" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.107 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.117", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.108 }
%class.scoped_refptr.108 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::map.117" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%class.scoped_refptr.128 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.132 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.998", [4 x i8], %"class.base::RepeatingCallback.177", %class.scoped_refptr.57, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.998" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, [7 x i8], %union.anon.145 }
%union.anon.145 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.150 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.150 = type { %"class.std::__1::map.153" }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.164"*, i64 }
%"class.std::__1::unique_ptr.164" = type opaque
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.177", %"class.base::OnceCallback.178", %"class.absl::optional.179", %"class.absl::optional.184", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.191", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.199", %"class.std::__1::map.210", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.219", i8, %class.scoped_refptr.57, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.220" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.178" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.57, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.189" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.189" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.194", %class.scoped_refptr.195 }
%"class.base::RepeatingCallback.194" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.195 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.base::OnceCallback.219" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.57 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.58" }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.device::mojom::blink::XRSessionMetricsRecorderProxy"* }
%"class.device::mojom::blink::XRSessionMetricsRecorderProxy" = type { %"class.device::mojom::blink::XRSessionMetricsRecorder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::blink::XRSessionMetricsRecorder" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.235" }
%"class.WTF::HashTable.235" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::HeapHashMap.242" = type { %"class.WTF::HashMap.245" }
%"class.WTF::HashMap.245" = type { %"class.WTF::HashTable.246" }
%"class.WTF::HashTable.246" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type opaque
%"class.blink::HeapHashMap.249" = type { %"class.WTF::HashMap.252" }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type opaque
%"class.blink::HeapHashMap.256" = type { %"class.WTF::HashMap.259" }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.262" = type opaque
%"class.WTF::HashSet.263" = type { %"class.WTF::HashTable.264" }
%"class.WTF::HashTable.264" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::XRPlaneManager"* }
%"class.blink::XRPlaneManager" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::XRDepthManager"* }
%"class.blink::XRDepthManager" = type opaque
%"class.absl::optional.271" = type { %"class.absl::optional_internal::optional_data.272" }
%"class.absl::optional_internal::optional_data.272" = type { %"class.absl::optional_internal::optional_data_base.273" }
%"class.absl::optional_internal::optional_data_base.273" = type { %"class.absl::optional_internal::optional_data_dtor_base.274" }
%"class.absl::optional_internal::optional_data_dtor_base.274" = type { i8, %union.anon.275 }
%union.anon.275 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::HeapVector.276" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.blink::Member.282"*, i32, i32 }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::XRViewData"* }
%"class.blink::XRViewData" = type <{ i32, [4 x i8], %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, [7 x i8], %"class.absl::optional.286", double, double, i8, [7 x i8] }>
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { double }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.device::mojom::blink::XRView"* }
%"class.device::mojom::blink::XRView" = type { i32, %"class.mojo::InlinedStructPtr", %"class.gfx::Transform", %"class.gfx::Size" }
%"class.mojo::InlinedStructPtr" = type { %"class.device::mojom::blink::VRFieldOfView", i32 }
%"class.device::mojom::blink::VRFieldOfView" = type { float, float, float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::XRInputSourceArray"* }
%"class.blink::XRInputSourceArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapHashMap.305" }
%"class.blink::HeapHashMap.305" = type { %"class.WTF::HashMap.308" }
%"class.WTF::HashMap.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"struct.WTF::KeyValuePair.311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.311" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::XRWebGLLayer"* }
%"class.blink::XRWebGLLayer" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::XRCanvasInputProvider"* }
%"class.blink::XRCanvasInputProvider" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.330" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.320", %"class.blink::Member.320" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.320", %"class.blink::Member.322", %"class.blink::Member.320", %"class.blink::Member.320", %"class.blink::Member.324" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.322", %"class.blink::Member.491", %"class.blink::Member.491", %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.522", %"class.blink::HeapVector.524" }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.533", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.541", %"class.WTF::Vector.541", i8, i32, %"class.blink::Member.546", %"class.blink::Member.404", %"class.blink::Member.548", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.562", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.530", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.573", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.506", %"class.blink::Member.318", %"class.blink::Member.775", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::UserActionElementSet", %"class.blink::Member.784", double, double, i64, i64, %"class.blink::HeapHashSet.786", %"class.blink::HeapHashSet.793", i16, i8, %"class.blink::Member.800", %"class.blink::Member.802", %"class.blink::Member.804", %"class.blink::Member.806", %"class.blink::TextLinkColors", %"class.blink::Member.808", i8, [7 x i8], %"class.blink::HeapHashMap.810", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.318", %"class.WTF::Vector.817", %"class.blink::Member.822", %"class.blink::Member.824", i8, %"class.blink::Member.318", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.826", %"class.blink::HeapVector.828", %"class.std::__1::unique_ptr.836", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.842", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.855", %"class.WTF::Vector.857", i8, i8, %"class.std::__1::unique_ptr.862", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.506", %"class.blink::HeapVector.868", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.876", i8, i32, %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::Member.882", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.884", %"class.WTF::HashMap.886", %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::Member.895", %"class.blink::Member.897", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.899", i8, i32, %"class.blink::Member.906", %"class.blink::Member.908", i32, %"class.blink::Member.910", %"class.blink::Member.912", %"class.blink::Member.914", %"class.std::__1::unique_ptr.916", i64, %"class.std::__1::unique_ptr.922", i32, i32, %"class.blink::Member.928", %"class.blink::Member.930", %"class.blink::Member.932", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.934", %"class.WTF::Vector.936", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.941", %"class.blink::Member.948", %"class.std::__1::unique_ptr.950", %"class.blink::Member.956", i8, i8, %"class.WTF::String", %"class.blink::Member.958", i8, [7 x i8], %"class.blink::HeapHashMap.960", %"class.blink::HeapObserverSet.967", %"class.blink::Member.975", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.977", i32, i8, i8, %"class.blink::WeakMember.979", %"class.blink::Member.980" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.533" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.534" }
%"class.blink::HeapHashMap.534" = type { %"class.WTF::HashMap.537" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.541" = type { %"class.WTF::VectorBuffer.542" }
%"class.WTF::VectorBuffer.542" = type { %"class.WTF::VectorBufferBase.543" }
%"class.WTF::VectorBufferBase.543" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.456", i32, i8, [3 x i8], %"class.blink::HeapVector.458", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.477", %"class.blink::Member.483", %"class.blink::Member.485", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.418" }
%"class.blink::HeapHashMap.418" = type { %"class.WTF::HashMap.421" }
%"class.WTF::HashMap.421" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.431" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.425" }
%"class.blink::HeapHashSet.425" = type { %"class.WTF::HashSet.428" }
%"class.WTF::HashSet.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.431" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.432" }
%"class.blink::HeapHashMap.432" = type { %"class.WTF::HashMap.435" }
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type { i8*, %"class.blink::Member.1119" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1121" }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.439, %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.446", %"class.blink::Member.404", i32, [4 x i8], %"class.WTF::HashSet.452", i32, i32 }
%class.scoped_refptr.439 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.458" = type { %"class.WTF::Vector.461" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::Member.464"*, i32, i32 }
%"class.blink::Member.464" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.470", i32, i32 }
%"class.blink::HeapHashMap.470" = type { %"class.WTF::HashMap.473" }
%"class.WTF::HashMap.473" = type { %"class.WTF::HashTable.474" }
%"class.WTF::HashTable.474" = type <{ %"struct.WTF::KeyValuePair.476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.476" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.556" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::KURL"* }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.573" = type { %"class.WTF::VectorBuffer.574" }
%"class.WTF::VectorBuffer.574" = type { %"class.WTF::VectorBufferBase.575" }
%"class.WTF::VectorBufferBase.575" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.576 }
%class.scoped_refptr.576 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.777" }
%"class.blink::HeapHashMap.777" = type { %"class.WTF::HashMap.780" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type opaque
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.786" = type { %"class.WTF::HashSet.789" }
%"class.WTF::HashSet.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"class.blink::WeakMember.792"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.792" = type opaque
%"class.blink::HeapHashSet.793" = type { %"class.WTF::HashSet.796" }
%"class.WTF::HashSet.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"class.blink::WeakMember.799"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.799" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.810" = type { %"class.WTF::HashMap.813" }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type opaque
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819" }
%"class.WTF::VectorBufferBase.819" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.828" = type { %"class.WTF::Vector.831" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"class.blink::Member.834"*, i32, i32 }
%"class.blink::Member.834" = type opaque
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.842" = type { %"class.WTF::HashSet.845" }
%"class.WTF::HashSet.845" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"class.blink::WeakMember.848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.848" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.849", i32, [4 x i8] }>
%"class.WTF::Vector.849" = type { %"class.WTF::VectorBuffer.850" }
%"class.WTF::VectorBuffer.850" = type { %"class.WTF::VectorBufferBase.851" }
%"class.WTF::VectorBufferBase.851" = type { %"struct.std::__1::pair.852"*, i32, i32 }
%"struct.std::__1::pair.852" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.857" = type { %"class.WTF::VectorBuffer.858" }
%"class.WTF::VectorBuffer.858" = type { %"class.WTF::VectorBufferBase.859" }
%"class.WTF::VectorBufferBase.859" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.506" = type { %"class.WTF::Vector.509" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.blink::HeapVector.868" = type { %"class.WTF::Vector.871" }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::Member.874"*, i32, i32 }
%"class.blink::Member.874" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.489" }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"struct.WTF::KeyValuePair.890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.890" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.774", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.772, %"class.base::WeakPtrFactory.773" }
%class.scoped_refptr.772 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.773" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.774" = type { %"class.blink::MemberBase.490" }
%"class.blink::HeapHashSet.899" = type { %"class.WTF::HashSet.902" }
%"class.WTF::HashSet.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"class.blink::Member.905"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.905" = type opaque
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938" }
%"class.WTF::VectorBufferBase.938" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.941" = type { %"class.WTF::HashMap.944" }
%"class.WTF::HashMap.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.960" = type { %"class.WTF::HashMap.963" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.966" = type opaque
%"class.blink::HeapObserverSet.967" = type { i32, [4 x i8], %"class.blink::HeapHashSet.968" }
%"class.blink::HeapHashSet.968" = type { %"class.WTF::HashSet.971" }
%"class.WTF::HashSet.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"class.blink::WeakMember.974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.974" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.489", %"class.blink::HeapHashSet.984", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.991", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.984" = type { %"class.WTF::HashSet.987" }
%"class.WTF::HashSet.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"class.blink::Member.990"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.990" = type opaque
%"class.blink::HeapTaskRunnerTimer.991" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.992", { i64, i64 } }
%"class.blink::WeakMember.992" = type { %"class.blink::MemberBase.978" }
%"class.blink::WeakMember.979" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::Node"* }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.495" }
%"class.blink::HeapHashMap.495" = type { %"class.WTF::HashMap.498" }
%"class.WTF::HashMap.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type { %"class.WTF::AtomicString", %"class.blink::Member.502" }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.318", i32, %"class.blink::HeapVector.506" }
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.519" }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::HeapHashMap.521"* }
%"class.blink::HeapHashMap.521" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.524" = type { %"class.WTF::Vector.527" }
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"class.blink::Member.530"*, i32, i32 }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.329" }
%"class.base::RefCounted.329" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.334", %"class.blink::Member.336", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.334" = type { %"class.WTF::SingleThreadedBitField.335" }
%"class.WTF::SingleThreadedBitField.335" = type { i32 }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.338 }
%class.scoped_refptr.338 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.339", %"class.WTF::AtomicString", %"class.WTF::Vector.341" }
%"class.WTF::RefCounted.339" = type { %"class.base::RefCounted.340" }
%"class.base::RefCounted.340" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343", [32 x i8] }
%"class.WTF::VectorBufferBase.343" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::XRDOMOverlayState"* }
%"class.blink::XRDOMOverlayState" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.239" }
%"class.WTF::HashSet.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"class.blink::Member.29"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.348" = type { %"class.WTF::Vector.351" }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"class.blink::Member.354"*, i32, i32 }
%"class.blink::Member.354" = type opaque
%"class.mojo::StructPtr.356" = type { %"class.std::__1::unique_ptr.357" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.device::mojom::blink::VRStageParameters"* }
%"class.device::mojom::blink::VRStageParameters" = type { %"class.gfx::Transform", %"class.absl::optional.360" }
%"class.absl::optional.360" = type { %"class.absl::optional_internal::optional_data.361" }
%"class.absl::optional_internal::optional_data.361" = type { %"class.absl::optional_internal::optional_data_base.362" }
%"class.absl::optional_internal::optional_data_base.362" = type { %"class.absl::optional_internal::optional_data_dtor_base.363" }
%"class.absl::optional_internal::optional_data_dtor_base.363" = type { i8, %union.anon.364 }
%union.anon.364 = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.gfx::Point3F"*, i32, i32 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.373" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<device::mojom::blink::XRSessionClient, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.375" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<device::mojom::blink::XRInputSourceButtonListener, blink::XRSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::Vector.377" = type { %"class.WTF::VectorBuffer.378" }
%"class.WTF::VectorBuffer.378" = type { %"class.WTF::VectorBufferBase.379" }
%"class.WTF::VectorBufferBase.379" = type { %"class.base::OnceCallback.380"*, i32, i32 }
%"class.base::OnceCallback.380" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::XRFrameRequestCallbackCollection"* }
%"class.blink::XRFrameRequestCallbackCollection" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.387", %"class.WTF::HashMap.394", %"class.WTF::Vector.399", %"class.blink::HeapHashMap.387", %"class.WTF::HashMap.394", i32, %"class.blink::Member.404" }
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { i32*, i32, i32 }
%"class.blink::HeapHashMap.387" = type { %"class.WTF::HashMap.390" }
%"class.WTF::HashMap.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"struct.WTF::KeyValuePair.393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.393" = type opaque
%"class.WTF::HashMap.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"struct.WTF::KeyValuePair.398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.398" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::XRSessionViewportScaler"* }
%"class.blink::XRSessionViewportScaler" = type opaque
%"class.blink::XRViewerPose" = type { %"class.blink::XRPose.base", %"class.blink::HeapVector.1017" }
%"class.blink::XRPose.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1015", i8 }>
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::XRRigidTransform"* }
%"class.blink::XRRigidTransform" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1007", %"class.blink::Member.1007", %"class.blink::Member.1015", %"class.blink::Member.1003", %"class.std::__1::unique_ptr.406" }
%"class.blink::HeapVector.1017" = type { %"class.WTF::Vector.1020" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"class.blink::Member.1023"*, i32, i32 }
%"class.blink::Member.1023" = type opaque
%"class.blink::XRReferenceSpace" = type <{ %"class.blink::XRSpace", i32, [4 x i8], %"class.std::__1::unique_ptr.406", %"class.blink::Member.1015", i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1025" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1025" = type { %"class.v8::TracedReference.1026" }
%"class.v8::TracedReference.1026" = type { %"class.v8::BasicTracedReference.1027" }
%"class.v8::BasicTracedReference.1027" = type { %"class.v8::TracedReferenceBase" }
%"class.absl::optional.1028" = type { %"class.absl::optional_internal::optional_data.1029" }
%"class.absl::optional_internal::optional_data.1029" = type { %"class.absl::optional_internal::optional_data_base.1030" }
%"class.absl::optional_internal::optional_data_base.1030" = type { %"class.absl::optional_internal::optional_data_dtor_base.1031" }
%"class.absl::optional_internal::optional_data_dtor_base.1031" = type { i8, %union.anon.1032 }
%"class.blink::XRAnchorSet" = type opaque
%"class.blink::XRPlaneSet" = type { %"class.blink::ScriptWrappable", %"class.blink::XRSetlike", %"class.blink::HeapHashSet.1033" }
%"class.blink::XRSetlike" = type { %"class.blink::SetlikeIterable" }
%"class.blink::SetlikeIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapHashSet.1033" = type { %"class.WTF::HashSet.1036" }
%"class.WTF::HashSet.1036" = type { %"class.WTF::HashTable.1037" }
%"class.WTF::HashTable.1037" = type <{ %"class.blink::Member.1039"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1039" = type opaque
%"class.blink::XRCPUDepthInformation" = type opaque
%"class.blink::XRView" = type { %"class.blink::ScriptWrappable", i32, %"class.WTF::String", %"class.blink::Member.1040", %"class.blink::Member.282", %"class.blink::Member.1015", %"class.blink::Member.1003" }
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::XRFrame"* }
%"class.blink::XRPose" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1015", i8, [7 x i8] }>
%"class.mojo::InlinedStructPtr.1046" = type { %"class.device::mojom::blink::XRHandJointSpaceInfo", i32 }
%"class.device::mojom::blink::XRHandJointSpaceInfo" = type { i32, i32 }
%"class.blink::HeapVector.1062" = type { %"class.WTF::Vector.1065" }
%"class.WTF::Vector.1065" = type { %"class.WTF::VectorBuffer.1066" }
%"class.WTF::VectorBuffer.1066" = type { %"class.WTF::VectorBufferBase.1067" }
%"class.WTF::VectorBufferBase.1067" = type { %"class.blink::Member.1068"*, i32, i32 }
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::XRHitTestResult"* }
%"class.blink::XRHitTestResult" = type opaque
%"class.blink::XRHitTestSource" = type { %"class.blink::ScriptWrappable", i64, %"class.blink::Member", %"class.WTF::Vector.1050" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"class.mojo::StructPtr.1053"*, i32, i32 }
%"class.mojo::StructPtr.1053" = type { %"class.std::__1::unique_ptr.1054" }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.device::mojom::blink::XRHitResult"* }
%"class.device::mojom::blink::XRHitResult" = type { %"class.device::Pose", i64 }
%"class.device::Pose" = type <{ %"class.gfx::Point3F", [4 x i8], %"class.gfx::Quaternion", %"class.gfx::Transform", [4 x i8] }>
%"class.gfx::Quaternion" = type { double, double, double, double }
%"class.blink::HeapVector.1070" = type { %"class.WTF::Vector.1073" }
%"class.WTF::Vector.1073" = type { %"class.WTF::VectorBuffer.1074" }
%"class.WTF::VectorBuffer.1074" = type { %"class.WTF::VectorBufferBase.1075" }
%"class.WTF::VectorBufferBase.1075" = type { %"class.blink::Member.1076"*, i32, i32 }
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::XRTransientInputHitTestResult"* }
%"class.blink::XRTransientInputHitTestResult" = type opaque
%"class.blink::XRTransientInputHitTestSource" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.1070", i64, %"class.blink::Member" }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.1085", %"class.blink::ScriptValue" }
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1025", %class.scoped_refptr.576 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1080, %"class.blink::Member.1081", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1080 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1083" }
%"class.blink::Persistent.1083" = type { %"class.blink::PersistentBase.1084" }
%"class.blink::PersistentBase.1084" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1087" = type { %"class.absl::optional_internal::optional_data.1088" }
%"class.absl::optional_internal::optional_data.1088" = type { %"class.absl::optional_internal::optional_data_base.1089" }
%"class.absl::optional_internal::optional_data_base.1089" = type { %"class.absl::optional_internal::optional_data_dtor_base.1090" }
%"class.absl::optional_internal::optional_data_dtor_base.1090" = type { i8, %union.anon.1091 }
%"class.absl::optional.1092" = type { %"class.absl::optional_internal::optional_data.1093" }
%"class.absl::optional_internal::optional_data.1093" = type { %"class.absl::optional_internal::optional_data_base.1094" }
%"class.absl::optional_internal::optional_data_base.1094" = type { %"class.absl::optional_internal::optional_data_dtor_base.1095" }
%"class.absl::optional_internal::optional_data_dtor_base.1095" = type { i8, %union.anon.1096 }
%"class.blink::XRJointPose" = type { %"class.blink::XRPose.base", float }
%"class.blink::XRJointSpace" = type <{ %"class.blink::XRSpace", %"class.std::__1::unique_ptr.406", i32, float, i32, [4 x i8] }>
%"class.blink::HeapVector.1101" = type { %"class.WTF::Vector.1104" }
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.1105" }
%"class.WTF::VectorBuffer.1105" = type { %"class.WTF::VectorBufferBase.1106" }
%"class.WTF::VectorBufferBase.1106" = type { %"class.blink::Member.1107"*, i32, i32 }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::XRJointSpace"* }
%"class.blink::NotShared" = type { %"class.blink::Member.1003" }
%"class.blink::HeapVector.1110" = type { %"class.WTF::Vector.1113" }
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %"class.blink::Member.999"*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink7XRFrameD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink7XRFrame18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12XRJointSpaceEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink7XRFrame14kInactiveFrameE = hidden constant [65 x i8] c"XRFrame access outside the callback that produced it is invalid.\00", align 16
@_ZN5blink7XRFrame18kNonAnimationFrameE = hidden constant [103 x i8] c"This method can only be called on XRFrame objects passed to XRSession.requestAnimationFrame callbacks.\00", align 16
@_ZTVN5blink7XRFrameE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::XRFrame"*)* @_ZN5blink7XRFrameD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XRFrame"*, %"class.blink::Visitor"*)* @_ZNK5blink7XRFrame5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XRFrame"*)* @_ZNK5blink7XRFrame18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@_ZN5blink12_GLOBAL__N_116kSessionMismatchE = internal constant [43 x i8] c"XRSpace and XRFrame sessions do not match.\00", align 16
@_ZN5blink12_GLOBAL__N_118kCannotReportPosesE = internal constant [49 x i8] c"Poses cannot be given out for the current state.\00", align 16
@_ZN5blink9XRSession26kPlanesFeatureNotSupportedE = external constant [57 x i8], align 16
@_ZN5blink9XRSession32kDepthSensingFeatureNotSupportedE = external constant [55 x i8], align 16
@_ZN5blink12_GLOBAL__N_112kInvalidViewE = internal constant [71 x i8] c"XRView passed in to the method did not originate from current XRFrame.\00", align 16
@_ZN5blink12_GLOBAL__N_125kHitTestSourceUnavailableE = internal constant [106 x i8] c"Unable to obtain hit test results for specified hit test source. Ensure that it was not already canceled.\00", align 16
@_ZN5blink9XRSession27kAnchorsFeatureNotSupportedE = external constant [49 x i8], align 16
@_ZN5blink9XRSession26kNoRigidTransformSpecifiedE = external constant [31 x i8], align 16
@_ZN5blink9XRSession17kNoSpaceSpecifiedE = external constant [22 x i8], align 16
@_ZN5blink12_GLOBAL__N_125kCannotObtainNativeOriginE = internal constant [85 x i8] c"The operation was unable to obtain necessary information and could not be completed.\00", align 16
@__const._ZN5blink7XRFrame12createAnchorEPNS_11ScriptStateEPNS_16XRRigidTransformEPNS_7XRSpaceERNS_14ExceptionStateE.maybe_plane_id = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1091 } } } } { { { { i8, [7 x i8], %union.anon.1091 } } } { { { i8, [7 x i8], %union.anon.1091 } } { { i8, [7 x i8], %union.anon.1091 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1091 { i64 -6148914691236517206 } } } } }, align 8
@__const._ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE.reference_space_information = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1096 } } } } { { { { i8, [7 x i8], %union.anon.1096 } } } { { { i8, [7 x i8], %union.anon.1096 } } { { i8, [7 x i8], %union.anon.1096 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1096 { %"struct.blink::XRSession::ReferenceSpaceInformation" { %"class.mojo::StructPtr.1042" { %"class.std::__1::unique_ptr.1043" { %"class.std::__1::__compressed_pair.1044" { %"struct.std::__1::__compressed_pair_elem.1045" { %"class.device::mojom::blink::XRNativeOriginInformation"* inttoptr (i64 -6148914691236517206 to %"class.device::mojom::blink::XRNativeOriginInformation"*) } } } }, %"class.blink::TransformationMatrix" { %"struct.blink::TransformationMatrix::Matrix4" { [4 x [4 x double]] [[4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF]] } } } } } } } }, align 8
@_ZN5blink9XRSession23kUnableToRetrieveMatrixE = external constant [95 x i8], align 16
@__const._ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE.mojo_from_native_origin = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1032 } } } } { { { { i8, [7 x i8], %union.anon.1032 } } } { { { i8, [7 x i8], %union.anon.1032 } } { { i8, [7 x i8], %union.anon.1032 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1032 { %"class.blink::TransformationMatrix" { %"struct.blink::TransformationMatrix::Matrix4" { [4 x [4 x double]] [[4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF]] } } } } } } }, align 8
@_ZN5blink12_GLOBAL__N_122kMismatchedBufferSizesE = internal constant [27 x i8] c"Buffer sizes must be equal\00", align 16
@_ZN5blink12_GLOBAL__N_123kSpacesSequenceTooLargeE = internal constant [47 x i8] c"Insufficient buffer capacity for pose results.\00", align 16
@_ZN5blink7XRFrame18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink7XRFrameC1EPNS_9XRSessionEb = hidden unnamed_addr alias void (%"class.blink::XRFrame"*, %"class.blink::XRSession"*, i1), void (%"class.blink::XRFrame"*, %"class.blink::XRSession"*, i1)* @_ZN5blink7XRFrameC2EPNS_9XRSessionEb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink7XRFrameC2EPNS_9XRSessionEb(%"class.blink::XRFrame"* nocapture, %"class.blink::XRSession"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7XRFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::XRSession"* %1, %"class.blink::XRSession"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 3
  store i8 %4, i8* %9, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRViewerPose"* @_ZN5blink7XRFrame13getViewerPoseEPNS_16XRReferenceSpaceERNS_14ExceptionStateE(%"class.blink::XRFrame"*, %"class.blink::XRReferenceSpace"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.absl::optional.1028", align 8
  %5 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %59

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN5blink7XRFrame18kNonAnimationFrameE, i64 0, i64 0)) #9
  br label %59

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::XRReferenceSpace", %"class.blink::XRReferenceSpace"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::XRReferenceSpace", %"class.blink::XRReferenceSpace"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %18, align 8
  %20 = icmp eq %"class.blink::XRSession"* %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %59

22:                                               ; preds = %14
  %23 = tail call zeroext i1 @_ZNK5blink9XRSession14CanReportPosesEv(%"class.blink::XRSession"* %17) #9
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZN5blink12_GLOBAL__N_118kCannotReportPosesE, i64 0, i64 0), i8* null) #9
  br label %59

25:                                               ; preds = %22
  %26 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %18, align 8
  tail call void @_ZNK5blink9XRSession10LogGetPoseEv(%"class.blink::XRSession"* %26) #9
  %27 = tail call i32 @_ZNK5blink16XRReferenceSpace7GetTypeEv(%"class.blink::XRReferenceSpace"* %1) #9
  %28 = getelementptr inbounds %"class.absl::optional.1028", %"class.absl::optional.1028"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %28) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1032 } } } }, { { { { i8, [7 x i8], %union.anon.1032 } } } }* @__const._ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE.mojo_from_native_origin, i64 0, i32 0, i32 0, i32 0, i32 0), i64 136, i1 false)
  call void @_ZN5blink7XRSpace16OffsetFromViewerEv(%"class.absl::optional.1028"* nonnull sret %4, %"class.blink::XRSpace"* %15) #9
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %57, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.absl::optional.1028", %"class.absl::optional.1028"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* %32) #9
  br i1 %33, label %34, label %57

34:                                               ; preds = %31
  %35 = load i8, i8* %28, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %34
  %39 = icmp eq i32 %27, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %38
  %41 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %18, align 8
  %42 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %41, i64 0, i32 41, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::XRSession", %"class.blink::XRSession"* %41, i64 0, i32 80
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  br label %49

49:                                               ; preds = %45, %40, %38
  %50 = phi i1 [ false, %38 ], [ %48, %45 ], [ true, %40 ]
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #9
  %52 = bitcast i8* %51 to %"class.blink::XRViewerPose"*
  call void @_ZN5blink12XRViewerPoseC1EPNS_7XRFrameERKNS_20TransformationMatrixEb(%"class.blink::XRViewerPose"* %52, %"class.blink::XRFrame"* %0, %"class.blink::TransformationMatrix"* dereferenceable(128) %32, i1 zeroext %50) #9
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  br label %57

57:                                               ; preds = %25, %31, %49
  %58 = phi %"class.blink::XRViewerPose"* [ %52, %49 ], [ null, %31 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %28) #9
  br label %59

59:                                               ; preds = %57, %24, %21, %13, %8
  %60 = phi %"class.blink::XRViewerPose"* [ null, %21 ], [ %58, %57 ], [ null, %24 ], [ null, %13 ], [ null, %8 ]
  ret %"class.blink::XRViewerPose"* %60
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9XRSession14CanReportPosesEv(%"class.blink::XRSession"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"*, i8*, i8*) local_unnamed_addr #2

declare void @_ZNK5blink9XRSession10LogGetPoseEv(%"class.blink::XRSession"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZNK5blink16XRReferenceSpace7GetTypeEv(%"class.blink::XRReferenceSpace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink7XRSpace16OffsetFromViewerEv(%"class.absl::optional.1028"* sret, %"class.blink::XRSpace"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRAnchorSet"* @_ZNK5blink7XRFrame14trackedAnchorsEv(%"class.blink::XRFrame"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %2, align 8
  %4 = tail call %"class.blink::XRAnchorSet"* @_ZNK5blink9XRSession14TrackedAnchorsEv(%"class.blink::XRSession"* %3) #9
  ret %"class.blink::XRAnchorSet"* %4
}

declare %"class.blink::XRAnchorSet"* @_ZNK5blink9XRSession14TrackedAnchorsEv(%"class.blink::XRSession"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRPlaneSet"* @_ZNK5blink7XRFrame14detectedPlanesERNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"* %4, i32 11) #9
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @_ZN5blink9XRSession26kPlanesFeatureNotSupportedE, i64 0, i64 0)) #9
  br label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %15

12:                                               ; preds = %7
  %13 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %3, align 8
  %14 = tail call %"class.blink::XRPlaneSet"* @_ZNK5blink9XRSession17GetDetectedPlanesEv(%"class.blink::XRSession"* %13) #9
  br label %15

15:                                               ; preds = %12, %11, %6
  %16 = phi %"class.blink::XRPlaneSet"* [ %14, %12 ], [ null, %11 ], [ null, %6 ]
  ret %"class.blink::XRPlaneSet"* %16
}

declare zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"*, i32) local_unnamed_addr #2

declare %"class.blink::XRPlaneSet"* @_ZNK5blink9XRSession17GetDetectedPlanesEv(%"class.blink::XRSession"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRLightEstimate"* @_ZNK5blink7XRFrame16getLightEstimateEPNS_12XRLightProbeERNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::XRLightProbe"* readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN5blink7XRFrame18kNonAnimationFrameE, i64 0, i64 0)) #9
  br label %25

13:                                               ; preds = %8
  %14 = icmp eq %"class.blink::XRLightProbe"* %1, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::XRLightProbe", %"class.blink::XRLightProbe"* %1, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %18, align 8
  %20 = icmp eq %"class.blink::XRSession"* %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::XRLightProbe", %"class.blink::XRLightProbe"* %1, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::XRLightEstimate"*, %"class.blink::XRLightEstimate"** %23, align 8
  br label %25

25:                                               ; preds = %13, %22, %21, %12, %7
  %26 = phi %"class.blink::XRLightEstimate"* [ null, %21 ], [ %24, %22 ], [ null, %12 ], [ null, %7 ], [ null, %13 ]
  ret %"class.blink::XRLightEstimate"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRCPUDepthInformation"* @_ZNK5blink7XRFrame19getDepthInformationEPNS_6XRViewERNS_14ExceptionStateE(%"class.blink::XRFrame"*, %"class.blink::XRView"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"* %5, i32 12) #9
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 9, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @_ZN5blink9XRSession32kDepthSensingFeatureNotSupportedE, i64 0, i64 0)) #9
  br label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN5blink7XRFrame18kNonAnimationFrameE, i64 0, i64 0)) #9
  br label %25

18:                                               ; preds = %13
  %19 = tail call %"class.blink::XRFrame"* @_ZNK5blink6XRView5frameEv(%"class.blink::XRView"* %1) #9
  %20 = icmp eq %"class.blink::XRFrame"* %19, %0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @_ZN5blink12_GLOBAL__N_112kInvalidViewE, i64 0, i64 0)) #9
  br label %25

22:                                               ; preds = %18
  %23 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %4, align 8
  %24 = tail call %"class.blink::XRCPUDepthInformation"* @_ZNK5blink9XRSession22GetCpuDepthInformationEPKNS_7XRFrameERNS_14ExceptionStateE(%"class.blink::XRSession"* %23, %"class.blink::XRFrame"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %25

25:                                               ; preds = %22, %21, %17, %12, %7
  %26 = phi %"class.blink::XRCPUDepthInformation"* [ null, %21 ], [ %24, %22 ], [ null, %17 ], [ null, %12 ], [ null, %7 ]
  ret %"class.blink::XRCPUDepthInformation"* %26
}

declare %"class.blink::XRFrame"* @_ZNK5blink6XRView5frameEv(%"class.blink::XRView"*) local_unnamed_addr #2

declare %"class.blink::XRCPUDepthInformation"* @_ZNK5blink9XRSession22GetCpuDepthInformationEPKNS_7XRFrameERNS_14ExceptionStateE(%"class.blink::XRSession"*, %"class.blink::XRFrame"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRPose"* @_ZN5blink7XRFrame7getPoseEPNS_7XRSpaceES2_RNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::XRSpace"*, %"class.blink::XRSpace"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = alloca %"class.mojo::StructPtr.1042", align 8
  %7 = alloca %"class.mojo::StructPtr.1042", align 8
  %8 = alloca %"class.blink::TransformationMatrix", align 8
  %9 = alloca %"class.blink::TransformationMatrix", align 8
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %168

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %1, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %18, align 8
  %20 = icmp eq %"class.blink::XRSession"* %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %168

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %2, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %23, align 8
  %25 = icmp eq %"class.blink::XRSession"* %24, %17
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %168

27:                                               ; preds = %22
  %28 = tail call zeroext i1 @_ZNK5blink9XRSession14CanReportPosesEv(%"class.blink::XRSession"* %17) #9
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZN5blink12_GLOBAL__N_118kCannotReportPosesE, i64 0, i64 0), i8* null) #9
  br label %168

30:                                               ; preds = %27
  %31 = icmp eq %"class.blink::XRSpace"* %1, %2
  br i1 %31, label %32, label %50

32:                                               ; preds = %30
  %33 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %34, align 8
  %35 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 1
  %36 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 1
  %37 = bitcast double* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %36, align 8
  %38 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 2
  %39 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 2
  %40 = bitcast double* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %39, align 8
  %41 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 3
  %42 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 3, i64 3
  %43 = bitcast double* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #9
  store double 1.000000e+00, double* %42, align 8
  %44 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #9
  %45 = bitcast i8* %44 to %"class.blink::XRPose"*
  call void @_ZN5blink6XRPoseC1ERKNS_20TransformationMatrixEb(%"class.blink::XRPose"* %45, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %5, i1 zeroext false) #9
  %46 = getelementptr inbounds i8, i8* %44, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #9
  br label %168

50:                                               ; preds = %30
  %51 = bitcast %"class.mojo::StructPtr.1042"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %52 = bitcast %"class.blink::XRSpace"* %1 to void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)***
  %53 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)**, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %53, i64 35
  %55 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %54, align 8
  call void %55(%"class.mojo::StructPtr.1042"* nonnull sret %6, %"class.blink::XRSpace"* %1) #9
  %56 = bitcast %"class.mojo::StructPtr.1042"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  %57 = bitcast %"class.blink::XRSpace"* %2 to void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)***
  %58 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)**, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %58, i64 35
  %60 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %59, align 8
  call void %60(%"class.mojo::StructPtr.1042"* nonnull sret %7, %"class.blink::XRSpace"* %2) #9
  %61 = getelementptr inbounds %"class.mojo::StructPtr.1042", %"class.mojo::StructPtr.1042"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %61, align 8
  %63 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %62, null
  %64 = getelementptr inbounds %"class.mojo::StructPtr.1042", %"class.mojo::StructPtr.1042"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %64, align 8
  %66 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %65, null
  %67 = or i1 %63, %66
  %68 = and i1 %63, %66
  br i1 %67, label %132, label %69

69:                                               ; preds = %50
  %70 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %132

75:                                               ; preds = %69
  switch i32 %71, label %132 [
    i32 0, label %76
    i32 1, label %84
    i32 2, label %90
    i32 3, label %96
    i32 4, label %104
  ]

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 1
  %78 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %77 to i32*
  %79 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 1
  %80 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %79 to i32*
  %81 = load i32, i32* %78, align 4
  %82 = load i32, i32* %80, align 4
  %83 = icmp eq i32 %81, %82
  br label %132

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 1, i32 0
  %87 = load i64, i64* %85, align 8
  %88 = load i64, i64* %86, align 8
  %89 = icmp eq i64 %87, %88
  br label %132

90:                                               ; preds = %75
  %91 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 1, i32 0
  %93 = load i64, i64* %91, align 8
  %94 = load i64, i64* %92, align 8
  %95 = icmp eq i64 %93, %94
  br label %132

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 1
  %98 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %97 to i32*
  %99 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 1
  %100 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %99 to i32*
  %101 = load i32, i32* %98, align 4
  %102 = load i32, i32* %100, align 4
  %103 = icmp eq i32 %101, %102
  br label %132

104:                                              ; preds = %75
  %105 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %62, i64 0, i32 1
  %106 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %105 to %"class.mojo::InlinedStructPtr.1046"**
  %107 = load %"class.mojo::InlinedStructPtr.1046"*, %"class.mojo::InlinedStructPtr.1046"** %106, align 8
  %108 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %65, i64 0, i32 1
  %109 = bitcast %"union.device::mojom::blink::XRNativeOriginInformation::Union_"* %108 to %"class.mojo::InlinedStructPtr.1046"**
  %110 = load %"class.mojo::InlinedStructPtr.1046"*, %"class.mojo::InlinedStructPtr.1046"** %109, align 8
  %111 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %107, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %110, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  %117 = or i1 %113, %116
  %118 = or i32 %115, %112
  %119 = icmp eq i32 %118, 0
  br i1 %117, label %132, label %120

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %107, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %110, i64 0, i32 0, i32 0
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %122, align 4
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %107, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1046", %"class.mojo::InlinedStructPtr.1046"* %110, i64 0, i32 0, i32 1
  %129 = load i32, i32* %127, align 4
  %130 = load i32, i32* %128, align 4
  %131 = icmp eq i32 %129, %130
  br label %132

132:                                              ; preds = %50, %69, %75, %76, %84, %90, %96, %104, %120, %126
  %133 = phi i1 [ %103, %96 ], [ %95, %90 ], [ %89, %84 ], [ %83, %76 ], [ false, %69 ], [ false, %75 ], [ false, %120 ], [ %131, %126 ], [ %119, %104 ], [ %68, %50 ]
  store %"class.device::mojom::blink::XRNativeOriginInformation"* null, %"class.device::mojom::blink::XRNativeOriginInformation"** %64, align 8
  br i1 %66, label %137, label %134

134:                                              ; preds = %132
  call void @_ZN6device5mojom5blink25XRNativeOriginInformationD1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %65) #9
  %135 = bitcast %"class.device::mojom::blink::XRNativeOriginInformation"* %65 to i8*
  call void @_ZdlPv(i8* %135) #10
  %136 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %61, align 8
  br label %137

137:                                              ; preds = %132, %134
  %138 = phi %"class.device::mojom::blink::XRNativeOriginInformation"* [ %62, %132 ], [ %136, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  store %"class.device::mojom::blink::XRNativeOriginInformation"* null, %"class.device::mojom::blink::XRNativeOriginInformation"** %61, align 8
  %139 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  call void @_ZN6device5mojom5blink25XRNativeOriginInformationD1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %138) #9
  %141 = bitcast %"class.device::mojom::blink::XRNativeOriginInformation"* %138 to i8*
  call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br i1 %133, label %143, label %162

143:                                              ; preds = %142
  %144 = bitcast %"class.blink::TransformationMatrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %144) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -1, i64 128, i1 false)
  %145 = bitcast %"class.blink::XRSpace"* %2 to void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)***
  %146 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)**, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %146, i64 30
  %148 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %147, align 8
  call void %148(%"class.blink::TransformationMatrix"* nonnull sret %8, %"class.blink::XRSpace"* %2) #9
  %149 = bitcast %"class.blink::TransformationMatrix"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %149) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -1, i64 128, i1 false)
  %150 = bitcast %"class.blink::XRSpace"* %1 to void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)***
  %151 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)**, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %151, i64 29
  %153 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %152, align 8
  call void %153(%"class.blink::TransformationMatrix"* nonnull sret %9, %"class.blink::XRSpace"* %1) #9
  %154 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %154) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* nonnull align 8 %144, i64 128, i1 false) #9
  %155 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %10, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %9) #9
  %156 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #9
  %157 = bitcast i8* %156 to %"class.blink::XRPose"*
  call void @_ZN5blink6XRPoseC1ERKNS_20TransformationMatrixEb(%"class.blink::XRPose"* %157, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %10, i1 zeroext false) #9
  %158 = getelementptr inbounds i8, i8* %156, i64 -4
  %159 = bitcast i8* %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = or i16 %160, 1
  store atomic i16 %161, i16* %159 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %154) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %144) #9
  br label %168

162:                                              ; preds = %142
  %163 = bitcast %"class.blink::XRSpace"* %1 to %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)***
  %164 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)**, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*** %163, align 8
  %165 = getelementptr inbounds %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %164, i64 33
  %166 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %165, align 8
  %167 = call %"class.blink::XRPose"* %166(%"class.blink::XRSpace"* %1, %"class.blink::XRSpace"* %2) #9
  br label %168

168:                                              ; preds = %162, %143, %32, %29, %26, %21, %14
  %169 = phi %"class.blink::XRPose"* [ null, %21 ], [ null, %26 ], [ %45, %32 ], [ %157, %143 ], [ %167, %162 ], [ null, %29 ], [ null, %14 ]
  ret %"class.blink::XRPose"* %169
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink7XRFrame10DeactivateEv(%"class.blink::XRFrame"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 3
  store i8 0, i8* %3, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink7XRFrame8IsActiveEv(%"class.blink::XRFrame"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7XRFrame17getHitTestResultsEPNS_15XRHitTestSourceERNS_14ExceptionStateE(%"class.blink::HeapVector.1062"* noalias sret, %"class.blink::XRFrame"* nocapture readonly, %"class.blink::XRHitTestSource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = icmp eq %"class.blink::XRHitTestSource"* %2, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink9XRSession27ValidateHitTestSourceExistsEPNS_15XRHitTestSourceE(%"class.blink::XRSession"* %8, %"class.blink::XRHitTestSource"* nonnull %2) #9
  br i1 %9, label %12, label %10

10:                                               ; preds = %4, %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @_ZN5blink12_GLOBAL__N_125kHitTestSourceUnavailableE, i64 0, i64 0)) #9
  %11 = bitcast %"class.blink::HeapVector.1062"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %13

12:                                               ; preds = %6
  tail call void @_ZN5blink15XRHitTestSource7ResultsEv(%"class.blink::HeapVector.1062"* sret %0, %"class.blink::XRHitTestSource"* nonnull %2) #9
  br label %13

13:                                               ; preds = %12, %10
  ret void
}

declare zeroext i1 @_ZNK5blink9XRSession27ValidateHitTestSourceExistsEPNS_15XRHitTestSourceE(%"class.blink::XRSession"*, %"class.blink::XRHitTestSource"*) local_unnamed_addr #2

declare void @_ZN5blink15XRHitTestSource7ResultsEv(%"class.blink::HeapVector.1062"* sret, %"class.blink::XRHitTestSource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7XRFrame34getHitTestResultsForTransientInputEPNS_29XRTransientInputHitTestSourceERNS_14ExceptionStateE(%"class.blink::HeapVector.1070"* noalias sret, %"class.blink::XRFrame"* nocapture readonly, %"class.blink::XRTransientInputHitTestSource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = icmp eq %"class.blink::XRTransientInputHitTestSource"* %2, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink9XRSession27ValidateHitTestSourceExistsEPNS_29XRTransientInputHitTestSourceE(%"class.blink::XRSession"* %8, %"class.blink::XRTransientInputHitTestSource"* nonnull %2) #9
  br i1 %9, label %12, label %10

10:                                               ; preds = %4, %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @_ZN5blink12_GLOBAL__N_125kHitTestSourceUnavailableE, i64 0, i64 0)) #9
  %11 = bitcast %"class.blink::HeapVector.1070"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %13

12:                                               ; preds = %6
  tail call void @_ZN5blink29XRTransientInputHitTestSource7ResultsEv(%"class.blink::HeapVector.1070"* sret %0, %"class.blink::XRTransientInputHitTestSource"* nonnull %2) #9
  br label %13

13:                                               ; preds = %12, %10
  ret void
}

declare zeroext i1 @_ZNK5blink9XRSession27ValidateHitTestSourceExistsEPNS_29XRTransientInputHitTestSourceE(%"class.blink::XRSession"*, %"class.blink::XRTransientInputHitTestSource"*) local_unnamed_addr #2

declare void @_ZN5blink29XRTransientInputHitTestSource7ResultsEv(%"class.blink::HeapVector.1070"* sret, %"class.blink::XRTransientInputHitTestSource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7XRFrame12createAnchorEPNS_11ScriptStateEPNS_16XRRigidTransformEPNS_7XRSpaceERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::XRFrame"* nocapture readonly, %"class.blink::ScriptState"*, %"class.blink::XRRigidTransform"*, %"class.blink::XRSpace"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.mojo::StructPtr.1042", align 8
  %8 = alloca %"class.blink::TransformationMatrix", align 8
  %9 = alloca %"class.blink::TransformationMatrix", align 8
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = alloca %"class.absl::optional.1087", align 8
  %12 = alloca %"class.absl::optional.1087", align 8
  %13 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink9XRSession16IsFeatureEnabledEN6device5mojom16XRSessionFeatureE(%"class.blink::XRSession"* %14, i32 9) #9
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZN5blink9XRSession27kAnchorsFeatureNotSupportedE, i64 0, i64 0)) #9
  %17 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false)
  br label %79

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  %23 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false)
  br label %79

24:                                               ; preds = %18
  %25 = icmp eq %"class.blink::XRRigidTransform"* %3, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZN5blink9XRSession26kNoRigidTransformSpecifiedE, i64 0, i64 0)) #9
  %27 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  br label %79

28:                                               ; preds = %24
  %29 = icmp eq %"class.blink::XRSpace"* %4, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN5blink9XRSession17kNoSpaceSpecifiedE, i64 0, i64 0)) #9
  %31 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false)
  br label %79

32:                                               ; preds = %28
  %33 = bitcast %"class.mojo::StructPtr.1042"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.mojo::StructPtr.1042", %"class.mojo::StructPtr.1042"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::blink::XRNativeOriginInformation"* inttoptr (i64 -6148914691236517206 to %"class.device::mojom::blink::XRNativeOriginInformation"*), %"class.device::mojom::blink::XRNativeOriginInformation"** %34, align 8
  %35 = bitcast %"class.blink::XRSpace"* %4 to void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)***
  %36 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)**, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %36, i64 35
  %38 = load void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)*, void (%"class.mojo::StructPtr.1042"*, %"class.blink::XRSpace"*)** %37, align 8
  call void %38(%"class.mojo::StructPtr.1042"* nonnull sret %7, %"class.blink::XRSpace"* nonnull %4) #9
  %39 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %34, align 8
  %40 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @_ZN5blink12_GLOBAL__N_125kCannotObtainNativeOriginE, i64 0, i64 0)) #9
  %42 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false)
  br label %73

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %39, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  %47 = getelementptr inbounds %"class.device::mojom::blink::XRNativeOriginInformation", %"class.device::mojom::blink::XRNativeOriginInformation"* %39, i64 0, i32 1, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = zext i1 %46 to i8
  %50 = bitcast %"class.blink::TransformationMatrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %50) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -1, i64 128, i1 false)
  %51 = bitcast %"class.blink::XRSpace"* %4 to void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)***
  %52 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)**, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %52, i64 29
  %54 = load void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)*, void (%"class.blink::TransformationMatrix"*, %"class.blink::XRSpace"*)** %53, align 8
  call void %54(%"class.blink::TransformationMatrix"* nonnull sret %8, %"class.blink::XRSpace"* nonnull %4) #9
  %55 = bitcast %"class.blink::TransformationMatrix"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %55) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -1, i64 128, i1 false)
  %56 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %56) #9
  call void @_ZN5blink16XRRigidTransform15TransformMatrixEv(%"class.blink::TransformationMatrix"* nonnull sret %10, %"class.blink::XRRigidTransform"* nonnull %3) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %50, i64 128, i1 false) #9
  %57 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %9, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %56) #9
  %58 = bitcast %"class.blink::XRSpace"* %4 to i1 (%"class.blink::XRSpace"*)***
  %59 = load i1 (%"class.blink::XRSpace"*)**, i1 (%"class.blink::XRSpace"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::XRSpace"*)*, i1 (%"class.blink::XRSpace"*)** %59, i64 31
  %61 = load i1 (%"class.blink::XRSpace"*)*, i1 (%"class.blink::XRSpace"*)** %60, align 8
  %62 = call zeroext i1 %61(%"class.blink::XRSpace"* nonnull %4) #9
  br i1 %62, label %63, label %68

63:                                               ; preds = %43
  %64 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %13, align 8
  %65 = getelementptr inbounds %"class.absl::optional.1087", %"class.absl::optional.1087"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %49, i8* %65, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1091 } } } }, { { { { i8, [7 x i8], %union.anon.1091 } } } }* @__const._ZN5blink7XRFrame12createAnchorEPNS_11ScriptStateEPNS_16XRRigidTransformEPNS_7XRSpaceERNS_14ExceptionStateE.maybe_plane_id, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %67 = getelementptr inbounds %"class.absl::optional.1087", %"class.absl::optional.1087"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %48, i64* %67, align 8
  call void @_ZN5blink9XRSession18CreateAnchorHelperEPNS_11ScriptStateERKNS_20TransformationMatrixERKN4mojo9StructPtrIN6device5mojom5blink25XRNativeOriginInformationEEEN4absl8optionalImEERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::XRSession"* %64, %"class.blink::ScriptState"* %2, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %9, %"class.mojo::StructPtr.1042"* nonnull dereferenceable(8) %7, %"class.absl::optional.1087"* nonnull byval(%"class.absl::optional.1087") align 8 %11, %"class.blink::ExceptionState"* dereferenceable(72) %5) #9
  br label %72

68:                                               ; preds = %43
  %69 = getelementptr inbounds %"class.absl::optional.1087", %"class.absl::optional.1087"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %49, i8* %69, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1091 } } } }, { { { { i8, [7 x i8], %union.anon.1091 } } } }* @__const._ZN5blink7XRFrame12createAnchorEPNS_11ScriptStateEPNS_16XRRigidTransformEPNS_7XRSpaceERNS_14ExceptionStateE.maybe_plane_id, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %71 = getelementptr inbounds %"class.absl::optional.1087", %"class.absl::optional.1087"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %48, i64* %71, align 8
  call void @_ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::XRFrame"* %1, %"class.blink::ScriptState"* %2, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %9, %"class.blink::XRSpace"* nonnull %4, %"class.absl::optional.1087"* nonnull byval(%"class.absl::optional.1087") align 8 %12, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  br label %72

72:                                               ; preds = %68, %63
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %50) #9
  br label %73

73:                                               ; preds = %72, %41
  %74 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %34, align 8
  store %"class.device::mojom::blink::XRNativeOriginInformation"* null, %"class.device::mojom::blink::XRNativeOriginInformation"** %34, align 8
  %75 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  call void @_ZN6device5mojom5blink25XRNativeOriginInformationD1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %74) #9
  %77 = bitcast %"class.device::mojom::blink::XRNativeOriginInformation"* %74 to i8*
  call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %79

79:                                               ; preds = %78, %30, %26, %22, %16
  ret void
}

declare void @_ZN5blink16XRRigidTransform15TransformMatrixEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::XRRigidTransform"*) local_unnamed_addr #2

declare void @_ZN5blink9XRSession18CreateAnchorHelperEPNS_11ScriptStateERKNS_20TransformationMatrixERKN4mojo9StructPtrIN6device5mojom5blink25XRNativeOriginInformationEEEN4absl8optionalImEERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::XRSession"*, %"class.blink::ScriptState"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.mojo::StructPtr.1042"* dereferenceable(8), %"class.absl::optional.1087"* byval(%"class.absl::optional.1087") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::XRFrame"* nocapture readonly, %"class.blink::ScriptState"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::XRSpace"*, %"class.absl::optional.1087"* nocapture readonly byval(%"class.absl::optional.1087") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.absl::optional.1092", align 8
  %9 = alloca %"class.blink::TransformationMatrix", align 8
  %10 = alloca %"class.absl::optional.1028", align 8
  %11 = alloca %"class.blink::TransformationMatrix", align 8
  %12 = alloca %"class.blink::TransformationMatrix", align 8
  %13 = getelementptr inbounds %"class.absl::optional.1092", %"class.absl::optional.1092"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %13) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1096 } } } }, { { { { i8, [7 x i8], %union.anon.1096 } } } }* @__const._ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE.reference_space_information, i64 0, i32 0, i32 0, i32 0, i32 0), i64 144, i1 false)
  %14 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %14, align 8
  call void @_ZNK5blink9XRSession27GetStationaryReferenceSpaceEv(%"class.absl::optional.1092"* nonnull sret %8, %"class.blink::XRSession"* %15) #9
  %16 = load i8, i8* %13, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %6, i32 11, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @_ZN5blink9XRSession23kUnableToRetrieveMatrixE, i64 0, i64 0)) #9
  %19 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false)
  br label %46

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.absl::optional.1092", %"class.absl::optional.1092"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.blink::TransformationMatrix"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -1, i64 128, i1 false)
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %9, %"class.blink::TransformationMatrix"* %21) #9
  %23 = getelementptr inbounds %"class.absl::optional.1028", %"class.absl::optional.1028"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %23) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1032 } } } }, { { { { i8, [7 x i8], %union.anon.1032 } } } }* @__const._ZN5blink7XRFrame34CreateAnchorFromNonStationarySpaceEPNS_11ScriptStateERKNS_20TransformationMatrixEPNS_7XRSpaceEN4absl8optionalImEERNS_14ExceptionStateE.mojo_from_native_origin, i64 0, i32 0, i32 0, i32 0, i32 0), i64 136, i1 false)
  %24 = bitcast %"class.blink::XRSpace"* %4 to void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)***
  %25 = load void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)**, void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)*, void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)** %25, i64 27
  %27 = load void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)*, void (%"class.absl::optional.1028"*, %"class.blink::XRSpace"*)** %26, align 8
  call void %27(%"class.absl::optional.1028"* nonnull sret %10, %"class.blink::XRSpace"* %4) #9
  %28 = load i8, i8* %23, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %6, i32 11, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @_ZN5blink9XRSession23kUnableToRetrieveMatrixE, i64 0, i64 0)) #9
  %31 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false)
  br label %45

32:                                               ; preds = %20
  %33 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.absl::optional.1028", %"class.absl::optional.1028"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = bitcast %"class.blink::TransformationMatrix"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %35, i64 128, i1 false) #9
  %36 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %11, %"class.blink::TransformationMatrix"* dereferenceable(128) %3) #9
  %37 = bitcast %"class.blink::TransformationMatrix"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %37) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %22, i64 128, i1 false) #9
  %38 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %12, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %11) #9
  %39 = load i8, i8* %13, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %32
  %43 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %14, align 8
  %44 = getelementptr inbounds %"class.absl::optional.1092", %"class.absl::optional.1092"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN5blink9XRSession18CreateAnchorHelperEPNS_11ScriptStateERKNS_20TransformationMatrixERKN4mojo9StructPtrIN6device5mojom5blink25XRNativeOriginInformationEEEN4absl8optionalImEERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::XRSession"* %43, %"class.blink::ScriptState"* %2, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %12, %"class.mojo::StructPtr.1042"* dereferenceable(8) %44, %"class.absl::optional.1087"* nonnull byval(%"class.absl::optional.1087") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #9
  br label %45

45:                                               ; preds = %42, %30
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %22) #9
  br label %46

46:                                               ; preds = %45, %18
  %47 = load i8, i8* %13, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.absl::optional.1092", %"class.absl::optional.1092"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.device::mojom::blink::XRNativeOriginInformation"*, %"class.device::mojom::blink::XRNativeOriginInformation"** %50, align 8
  store %"class.device::mojom::blink::XRNativeOriginInformation"* null, %"class.device::mojom::blink::XRNativeOriginInformation"** %50, align 8
  %52 = icmp eq %"class.device::mojom::blink::XRNativeOriginInformation"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  call void @_ZN6device5mojom5blink25XRNativeOriginInformationD1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"* nonnull %51) #9
  %54 = bitcast %"class.device::mojom::blink::XRNativeOriginInformation"* %51 to i8*
  call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %49
  store i8 0, i8* %13, align 8
  br label %56

56:                                               ; preds = %46, %55
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %13) #9
  ret void
}

declare void @_ZNK5blink9XRSession27GetStationaryReferenceSpaceEv(%"class.absl::optional.1092"* sret, %"class.blink::XRSession"*) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7XRFrame23getImageTrackingResultsERNS_14ExceptionStateE(%"class.blink::HeapVector.10"* noalias sret, %"class.blink::XRFrame"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %4, align 8
  tail call void @_ZN5blink9XRSession20ImageTrackingResultsERNS_14ExceptionStateE(%"class.blink::HeapVector.10"* sret %0, %"class.blink::XRSession"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  ret void
}

declare void @_ZN5blink9XRSession20ImageTrackingResultsERNS_14ExceptionStateE(%"class.blink::HeapVector.10"* sret, %"class.blink::XRSession"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRJointPose"* @_ZN5blink7XRFrame12getJointPoseEPNS_12XRJointSpaceEPNS_7XRSpaceERNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::XRJointSpace"*, %"class.blink::XRSpace"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %41

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %2, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %13, align 8
  %15 = icmp eq %"class.blink::XRSession"* %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::XRJointSpace", %"class.blink::XRJointSpace"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %17, align 8
  %19 = icmp eq %"class.blink::XRSession"* %12, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %16, %10
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %41

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::XRJointSpace", %"class.blink::XRJointSpace"* %1, i64 0, i32 0
  %23 = bitcast %"class.blink::XRJointSpace"* %1 to %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)***
  %24 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)**, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %24, i64 33
  %26 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %25, align 8
  %27 = tail call %"class.blink::XRPose"* %26(%"class.blink::XRSpace"* %22, %"class.blink::XRSpace"* %2) #9
  %28 = icmp eq %"class.blink::XRPose"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::XRJointSpace", %"class.blink::XRJointSpace"* %1, i64 0, i32 3
  %31 = load float, float* %30, align 4
  %32 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"class.blink::XRPose", %"class.blink::XRPose"* %27, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::XRRigidTransform"*, %"class.blink::XRRigidTransform"** %33, align 8
  call void @_ZN5blink16XRRigidTransform15TransformMatrixEv(%"class.blink::TransformationMatrix"* nonnull sret %5, %"class.blink::XRRigidTransform"* %34) #9
  %35 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #9
  %36 = bitcast i8* %35 to %"class.blink::XRJointPose"*
  call void @_ZN5blink11XRJointPoseC1ERKNS_20TransformationMatrixEf(%"class.blink::XRJointPose"* %36, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %5, float %31) #9
  %37 = getelementptr inbounds i8, i8* %35, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %32) #9
  br label %41

41:                                               ; preds = %29, %21, %20, %9
  %42 = phi %"class.blink::XRJointPose"* [ null, %20 ], [ null, %9 ], [ %36, %29 ], [ null, %21 ]
  ret %"class.blink::XRJointPose"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink7XRFrame14fillJointRadiiERNS_10HeapVectorINS_6MemberINS_12XRJointSpaceEEELj0EEENS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::HeapVector.1101"* dereferenceable(16), %"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %65

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HeapVector.1101", %"class.blink::HeapVector.1101"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.1101", %"class.blink::HeapVector.1101"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %15, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %23, %21 ], [ 0, %9 ]
  %26 = icmp eq i64 %25, %13
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = icmp eq i32 %12, 0
  br i1 %28, label %65, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  br label %32

31:                                               ; preds = %24
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZN5blink12_GLOBAL__N_122kMismatchedBufferSizesE, i64 0, i64 0)) #9
  br label %65

32:                                               ; preds = %29, %56
  %33 = phi i64 [ 0, %29 ], [ %60, %56 ]
  %34 = trunc i64 %33 to i32
  %35 = tail call dereferenceable(8) %"class.blink::Member.1107"* @_ZN3WTF6VectorIN5blink6MemberINS1_12XRJointSpaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1104"* %10, i32 %34) #9
  %36 = getelementptr inbounds %"class.blink::Member.1107", %"class.blink::Member.1107"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::XRJointSpace"*, %"class.blink::XRJointSpace"** %36, align 8
  %38 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %30, align 8
  %39 = getelementptr inbounds %"class.blink::XRJointSpace", %"class.blink::XRJointSpace"* %37, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %39, align 8
  %41 = icmp eq %"class.blink::XRSession"* %38, %40
  br i1 %41, label %42, label %64

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.blink::XRJointSpace", %"class.blink::XRJointSpace"* %37, i64 0, i32 3
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %14, align 8
  %47 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %46, i64 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %46, i64 0, i32 0, i32 1
  %54 = bitcast i8** %53 to float**
  %55 = load float*, float** %54, align 8
  br label %56

56:                                               ; preds = %52, %42
  %57 = phi float* [ %55, %52 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = bitcast float* %58 to i32*
  store i32 %45, i32* %59, align 4
  %60 = add nuw nsw i64 %33, 1
  %61 = load i32, i32* %11, align 4
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %32, label %65

64:                                               ; preds = %32
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %65

65:                                               ; preds = %56, %27, %8, %31, %64
  %66 = phi i1 [ false, %64 ], [ false, %31 ], [ false, %8 ], [ true, %27 ], [ true, %56 ]
  ret i1 %66
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink7XRFrame9fillPosesERNS_10HeapVectorINS_6MemberINS_7XRSpaceEEELj0EEEPS3_NS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::XRFrame"* nocapture readonly, %"class.blink::HeapVector.1110"* nocapture readonly dereferenceable(16), %"class.blink::XRSpace"*, %"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN5blink7XRFrame14kInactiveFrameE, i64 0, i64 0)) #9
  br label %147

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HeapVector.1110", %"class.blink::HeapVector.1110"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %16, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %18, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %16, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %10, %22
  %26 = phi i64 [ %24, %22 ], [ 0, %10 ]
  %27 = icmp ult i64 %26, %14
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZN5blink12_GLOBAL__N_123kSpacesSequenceTooLargeE, i64 0, i64 0)) #9
  br label %147

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %2, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %32, align 8
  %34 = icmp eq %"class.blink::XRSession"* %31, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %147

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HeapVector.1110", %"class.blink::HeapVector.1110"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::Member.999"*, %"class.blink::Member.999"** %37, align 8
  %39 = zext i32 %12 to i64
  %40 = getelementptr inbounds %"class.blink::Member.999", %"class.blink::Member.999"* %38, i64 %39
  %41 = icmp eq i32 %12, 0
  br i1 %41, label %143, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::Member.999", %"class.blink::Member.999"* %38, i64 0, i32 0, i32 0
  %44 = load %"class.blink::XRSpace"*, %"class.blink::XRSpace"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %45, align 8
  %47 = icmp eq %"class.blink::XRSession"* %31, %46
  br i1 %47, label %48, label %142

48:                                               ; preds = %42, %134
  %49 = phi %"class.blink::XRSpace"* [ %138, %134 ], [ %44, %42 ]
  %50 = phi i8 [ %131, %134 ], [ 1, %42 ]
  %51 = phi i32 [ %135, %134 ], [ 0, %42 ]
  %52 = phi %"class.blink::Member.999"* [ %132, %134 ], [ %38, %42 ]
  %53 = bitcast %"class.blink::XRSpace"* %49 to %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)***
  %54 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)**, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %54, i64 33
  %56 = load %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)*, %"class.blink::XRPose"* (%"class.blink::XRSpace"*, %"class.blink::XRSpace"*)** %55, align 8
  %57 = tail call %"class.blink::XRPose"* %56(%"class.blink::XRSpace"* %49, %"class.blink::XRSpace"* %2) #9
  %58 = icmp eq %"class.blink::XRPose"* %57, null
  br i1 %58, label %59, label %84

59:                                               ; preds = %48
  %60 = zext i32 %51 to i64
  br label %61

61:                                               ; preds = %164, %59
  %62 = phi i64 [ 0, %59 ], [ %168, %164 ]
  %63 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %15, align 8
  %64 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %63, i64 0, i32 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %65, i64 0, i32 2
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %63, i64 0, i32 0, i32 1
  %71 = bitcast i8** %70 to float**
  %72 = load float*, float** %71, align 8
  br label %73

73:                                               ; preds = %61, %69
  %74 = phi float* [ %72, %69 ], [ null, %61 ]
  %75 = add nuw nsw i64 %62, %60
  %76 = getelementptr inbounds float, float* %74, i64 %75
  store float 0x7FF8000000000000, float* %76, align 4
  %77 = or i64 %62, 1
  %78 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %15, align 8
  %79 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %78, i64 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %80, i64 0, i32 2
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %160, label %164

84:                                               ; preds = %48
  %85 = getelementptr inbounds %"class.blink::XRPose", %"class.blink::XRPose"* %57, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::XRRigidTransform"*, %"class.blink::XRRigidTransform"** %85, align 8
  %87 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink16XRRigidTransform6matrixEv(%"class.blink::XRRigidTransform"* %86) #9
  %88 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %87, i64 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %89, i64 0, i32 2
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %87, i64 0, i32 0, i32 1
  %95 = bitcast i8** %94 to float**
  %96 = load float*, float** %95, align 8
  br label %97

97:                                               ; preds = %84, %93
  %98 = phi float* [ %96, %93 ], [ null, %84 ]
  %99 = zext i32 %51 to i64
  br label %100

100:                                              ; preds = %153, %97
  %101 = phi i64 [ 0, %97 ], [ %158, %153 ]
  %102 = getelementptr inbounds float, float* %98, i64 %101
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %15, align 8
  %106 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %105, i64 0, i32 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %100
  %112 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %105, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to float**
  %114 = load float*, float** %113, align 8
  br label %115

115:                                              ; preds = %100, %111
  %116 = phi float* [ %114, %111 ], [ null, %100 ]
  %117 = add nuw nsw i64 %101, %99
  %118 = getelementptr inbounds float, float* %116, i64 %117
  %119 = bitcast float* %118 to i32*
  store i32 %104, i32* %119, align 4
  %120 = or i64 %101, 1
  %121 = getelementptr inbounds float, float* %98, i64 %120
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %15, align 8
  %125 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %124, i64 0, i32 0, i32 3, i32 0, i32 0
  %126 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %126, i64 0, i32 2
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %149, label %153

130:                                              ; preds = %153, %164
  %131 = phi i8 [ 0, %164 ], [ %50, %153 ]
  %132 = getelementptr inbounds %"class.blink::Member.999", %"class.blink::Member.999"* %52, i64 1
  %133 = icmp eq %"class.blink::Member.999"* %132, %40
  br i1 %133, label %143, label %134

134:                                              ; preds = %130
  %135 = add i32 %51, 16
  %136 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %30, align 8
  %137 = getelementptr inbounds %"class.blink::Member.999", %"class.blink::Member.999"* %132, i64 0, i32 0, i32 0
  %138 = load %"class.blink::XRSpace"*, %"class.blink::XRSpace"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::XRSpace", %"class.blink::XRSpace"* %138, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.blink::XRSession"*, %"class.blink::XRSession"** %139, align 8
  %141 = icmp eq %"class.blink::XRSession"* %136, %140
  br i1 %141, label %48, label %142

142:                                              ; preds = %134, %42
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZN5blink12_GLOBAL__N_116kSessionMismatchE, i64 0, i64 0)) #9
  br label %147

143:                                              ; preds = %130, %36
  %144 = phi i8 [ 1, %36 ], [ %131, %130 ]
  %145 = and i8 %144, 1
  %146 = icmp ne i8 %145, 0
  br label %147

147:                                              ; preds = %143, %142, %28, %35, %9
  %148 = phi i1 [ false, %9 ], [ false, %28 ], [ false, %35 ], [ %146, %143 ], [ false, %142 ]
  ret i1 %148

149:                                              ; preds = %115
  %150 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %124, i64 0, i32 0, i32 1
  %151 = bitcast i8** %150 to float**
  %152 = load float*, float** %151, align 8
  br label %153

153:                                              ; preds = %149, %115
  %154 = phi float* [ %152, %149 ], [ null, %115 ]
  %155 = add nuw nsw i64 %120, %99
  %156 = getelementptr inbounds float, float* %154, i64 %155
  %157 = bitcast float* %156 to i32*
  store i32 %123, i32* %157, align 4
  %158 = add nuw nsw i64 %101, 2
  %159 = icmp eq i64 %158, 16
  br i1 %159, label %130, label %100

160:                                              ; preds = %73
  %161 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %78, i64 0, i32 0, i32 1
  %162 = bitcast i8** %161 to float**
  %163 = load float*, float** %162, align 8
  br label %164

164:                                              ; preds = %160, %73
  %165 = phi float* [ %163, %160 ], [ null, %73 ]
  %166 = add nuw nsw i64 %77, %60
  %167 = getelementptr inbounds float, float* %165, i64 %166
  store float 0x7FF8000000000000, float* %167, align 4
  %168 = add nuw nsw i64 %62, 2
  %169 = icmp eq i64 %168, 16
  br i1 %169, label %130, label %61
}

declare %"class.blink::DOMTypedArray"* @_ZN5blink16XRRigidTransform6matrixEv(%"class.blink::XRRigidTransform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7XRFrame5TraceEPNS_7VisitorE(%"class.blink::XRFrame"*, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XRFrame", %"class.blink::XRFrame"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7XRFrameD0Ev(%"class.blink::XRFrame"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink7XRFrame18GetWrapperTypeInfoEv(%"class.blink::XRFrame"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink7XRFrame18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6device5mojom5blink25XRNativeOriginInformationD1Ev(%"class.device::mojom::blink::XRNativeOriginInformation"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink12XRViewerPoseC1EPNS_7XRFrameERKNS_20TransformationMatrixEb(%"class.blink::XRViewerPose"*, %"class.blink::XRFrame"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink6XRPoseC1ERKNS_20TransformationMatrixEb(%"class.blink::XRPose"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i1 zeroext) unnamed_addr #2

declare void @_ZN5blink11XRJointPoseC1ERKNS_20TransformationMatrixEf(%"class.blink::XRJointPose"*, %"class.blink::TransformationMatrix"* dereferenceable(128), float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1107"* @_ZN3WTF6VectorIN5blink6MemberINS1_12XRJointSpaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1104"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1104", %"class.WTF::Vector.1104"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1104", %"class.WTF::Vector.1104"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1107"*, %"class.blink::Member.1107"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1107", %"class.blink::Member.1107"* %24, i64 %25
  ret %"class.blink::Member.1107"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9XRSessionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XRSession"*
  tail call void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink9XRSession5TraceEPNS_7VisitorE(%"class.blink::XRSession"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
