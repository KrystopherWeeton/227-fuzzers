; ModuleID = '../../third_party/webrtc/modules/audio_processing/vad/pitch_based_vad.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/vad/pitch_based_vad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::PitchBasedVad" = type { %"struct.webrtc::GmmParameters", %"struct.webrtc::GmmParameters", double, %"class.std::__1::unique_ptr" }
%"struct.webrtc::GmmParameters" = type { double*, double*, double*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::VadCircularBuffer"* }
%"class.webrtc::VadCircularBuffer" = type { %"class.std::__1::unique_ptr.0", i8, i32, i32, double }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { double* }
%struct.AudioFeatures = type { [4 x double], [4 x double], [4 x double], [4 x double], i64, i8 }

@_ZN6webrtcL16kNoiseGmmWeightsE = internal constant [12 x double] [double 0xC025E272F1D92DFF, double 0xC0262B698FF21AA1, double 0xC02B5A80203C82C3, double 0xC031FA9B8635D897, double 0xC02C90E797DDA333, double 0xC02F4CCFCA0C0869, double 0xC0324FFFF0D11A67, double 0xC030FF793BA17A72, double 0xC02677443B38D860, double 0xC02C4329D6AD70C2, double 0xC02D6F3305BA9F87, double 0xC02B3152FD186FB9], align 16
@_ZN6webrtcL13kNoiseGmmMeanE = internal constant [12 x [3 x double]] [[3 x double] [double 0xC0001C6320E72FA7, double 0x406536781C89AF1F, double 0x40528AFB2CB94EF1], [3 x double] [double 0xBFFF2647E7B2F8AC, double 0x4061CCBFAA81348E, double 0x406485F657C9EDFC], [3 x double] [double 0xC00258758F0DC9EC, double 0x407826A5954DA679, double 0x406AAE788C26E1B9], [3 x double] [double 0xC00A09FA35FEBBA4, double 0x4090FABF9DD62837, double 0x406D23D6A043F797], [3 x double] [double 0xC0010D825FAF23DD, double 0x40B2E6378EFCFC57, double 0x40512B6E749A3914], [3 x double] [double 0xC00217FD90EF673D, double 0x40B2BA33B2540CC9, double 0x4063271ED42F074E], [3 x double] [double 0xC00A92C65C8B2099, double 0x40B0FF9C81FAFBD0, double 0x4060A69B39BD9A02], [3 x double] [double 0xC0018B10D90159D3, double 0x40AF1E829805E8C9, double 0x406AA7F92DD3C4B6], [3 x double] [double 0xC0003B5C4628DC22, double 0x40BCCA662060C8E5, double 0x405C212F8DEEF98A], [3 x double] [double 0xC002178E8D297B51, double 0x409833DEABBA1B84, double 0x4062B6F4987D2267], [3 x double] [double 0xC000088DC8E7BDBA, double 0x40ADE0B1F908AF17, double 0x405ADC172691D3C9], [3 x double] [double 0xC0026A5A7D65378D, double 0x40967E25DA46528C, double 0x40519A2550942C6A]], align 16
@_ZN6webrtcL21kNoiseGmmCovarInverseE = internal constant [12 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] [double 0x401D72E36C5B7A4C, double 0x3F73C9426BE47536, double 0x3F89425061B41C01], [3 x double] [double 0x3F73C9426BE47536, double 0x3F25AA320DE599A7, double 0xBF2FA7145B61FC2C], [3 x double] [double 0x3F89425061B41C01, double 0xBF2FA7145B61FC2C, double 0x3F7B0310D5536B8A]], [3 x [3 x double]] [[3 x double] [double 0x402167C20DF19141, double 0xBF41634C90CBD2AD, double 0x3F7648690E67296A], [3 x double] [double 0xBF41634C90CBD2AD, double 0x3F346350CC7E9DE0, double 0xBF286AC2EC0B550C], [3 x double] [double 0x3F7648690E67296A, double 0xBF286AC2EC0B550C, double 0x3F44A092C24AB17C]], [3 x [3 x double]] [[3 x double] [double 0x40122382C40D5F8C, double 0xBF7018AB0AE82EA5, double 0xBF6431EDCCAF695B], [3 x double] [double 0xBF7018AB0AE82EA5, double 0x3F09EF170B5DC4F8, double 0xBEE6C5BE640AC9BD], [3 x double] [double 0xBF6431EDCCAF695B, double 0xBEE6C5BE640AC9BD, double 0x3F185907E6506433]], [3 x [3 x double]] [[3 x double] [double 0x3FEDA87E375E66AD, double 0xBF3A79980183561F, double 0xBF6D331E578C673D], [3 x double] [double 0xBF3A79980183561F, double 0x3EC5232617CC4824, double 0x3E83B7EF075A45A6], [3 x double] [double 0xBF6D331E578C673D, double 0x3E83B7EF075A45A6, double 0x3F157E5A80619651]], [3 x [3 x double]] [[3 x double] [double 0x401E77F8C1A3B274, double 0xBF244D36BBAA84CE, double 0x3F98C17EEE9AA9AE], [3 x double] [double 0xBF244D36BBAA84CE, double 0x3E9781CEF2EEF2DC, double 0xBEDA4F0EF6261EC2], [3 x double] [double 0x3F98C17EEE9AA9AE, double 0xBEDA4F0EF6261EC2, double 0x3F8DB56B293E29F6]], [3 x [3 x double]] [[3 x double] [double 0x40209FB6219DA0A2, double 0xBF392BA2459CCD79, double 0xBF9FB7ED4BB7D76C], [3 x double] [double 0xBF392BA2459CCD79, double 0x3E9987CBEDF5FBBA, double 0xBEB32E0E422CBE2F], [3 x double] [double 0xBF9FB7ED4BB7D76C, double 0xBEB32E0E422CBE2F, double 0x3F4B5D414FB75F3C]], [3 x [3 x double]] [[3 x double] [double 0x3FEEF3FBCB95C51B, double 0x3F0E89B94ADA2D32, double 0xBF6A144CD5FD3132], [3 x double] [double 0x3F0E89B94ADA2D32, double 0x3E8E086D471EBA3E, double 0xBEA9FA4C4CD2145A], [3 x double] [double 0xBF6A144CD5FD3132, double 0xBEA9FA4C4CD2145A, double 0x3F393D41D5CD90E6]], [3 x [3 x double]] [[3 x double] [double 0x40208FB2FA677B05, double 0x3F0ECF18CBD2F24B, double 0x3F7CA4B970DC06E6], [3 x double] [double 0x3F0ECF18CBD2F24B, double 0x3E93B684A6FF59C0, double 0x3E96DFA4D4BD75DA], [3 x double] [double 0x3F7CA4B970DC06E6, double 0x3E96DFA4D4BD75DA, double 0x3F2A220E0A1EC8B1]], [3 x [3 x double]] [[3 x double] [double 0x40184CAFF5EFAAE0, double 0xBF86D5863468503E, double 0x3F74E3E0053FBD43], [3 x double] [double 0xBF86D5863468503E, double 0x3F46E9A40F88947D, double 0x3F0C23B6E594A776], [3 x double] [double 0x3F74E3E0053FBD43, double 0x3F0C23B6E594A776, double 0x3F41440A4B3BD838]], [3 x [3 x double]] [[3 x double] [double 0x401B9EA36795C583, double 0x3F3B91284634CAD7, double 0xBF638C1275A9787C], [3 x double] [double 0x3F3B91284634CAD7, double 0x3ECBC9785C9C249A, double 0xBE59FD7B8DE35E0C], [3 x double] [double 0xBF638C1275A9787C, double 0xBE59FD7B8DE35E0C, double 0x3F3D44D85613E01F]], [3 x [3 x double]] [[3 x double] [double 0x402A36BD9303FBB1, double 0xBF26C50745D79860, double 0xBF943BC03882374D], [3 x double] [double 0xBF26C50745D79860, double 0x3E92D21FB14193F0, double 0x3EB0B83D22293BC7], [3 x double] [double 0xBF943BC03882374D, double 0x3EB0B83D22293BC7, double 0x3F63C5B9D6A25F7B]], [3 x [3 x double]] [[3 x double] [double 0x4012C85BFF587DBD, double 0xBF311C279D49AA14, double 0x3F758F462F137AF6], [3 x double] [double 0xBF311C279D49AA14, double 0x3EBE9AEA90B44EBF, double 0xBEAA4B7787E3EDC8], [3 x double] [double 0x3F758F462F137AF6, double 0xBEAA4B7787E3EDC8, double 0x3F8B5BC4CF83FAD1]]], align 16
@_ZL16kVoiceGmmWeights = internal constant [12 x double] [double 0xC02BF53B7B5FB239, double 0xC027E7D1BBF6B1EE, double 0xC02A7AB104B338D1, double 0xC025E32A396C6A1E, double 0xC026B02120CF32C1, double 0xC02670AD4D1D5B89, double 0xC02481E936B56737, double 0xC0301438706F5613, double 0xC024ADCC4FF8D222, double 0xC032521F8BDBCBC5, double 0xC02A3CB9BA74E587, double 0xC0230CB29577F0D5], align 16
@_ZL13kVoiceGmmMean = internal constant [12 x [3 x double]] [[3 x double] [double 0xC001339D5313FDBC, double 0x407F1143D7906CBA, double 0x407DD13FFA3CD076], [3 x double] [double 0xBFEC8C106F1202D0, double 0x408280850BF35092, double 0x4066A171D5E68CA8], [3 x double] [double 0xBFF4B5B091652B34, double 0x407F273466DD02DB, double 0x40657FB86EDE853B], [3 x double] [double 0xBFF0A0C700BFB801, double 0x407F382E2DFBA6EA, double 0x405A75A74E4C9FDC], [3 x double] [double 0xBFF4AD38C626F864, double 0x4079F06D9E95CC38, double 0x405C371C92F020FF], [3 x double] [double 0xBFE93D6CAF9F9C6B, double 0x407C0BD452B502DA, double 0x4067B9184E288DF4], [3 x double] [double 0xBFEC16C0A285F811, double 0x407E69ECB00576AB, double 0x405C5E92C4A4F76A], [3 x double] [double 0xC000846C3CA9DA86, double 0x4083CB149506CCB0, double 0x406D184603EE3E42], [3 x double] [double 0xBFE65D5682041555, double 0x40828CF9F6237BBB, double 0x4068112EF5DE1DD4], [3 x double] [double 0xC00478DB60109524, double 0x40985C98C73EE697, double 0x406178A3AED96A3D], [3 x double] [double 0xBFFEBB302D3578D1, double 0x407E7FBE3855CFC8, double 0x4059AFB5BFF3CD8B], [3 x double] [double 0xBFE755810A4209E4, double 0x408055BDD1A52FEE, double 0x405D183034D56115]], align 16
@_ZL21kVoiceGmmCovarInverse = internal constant [12 x [3 x [3 x double]]] [[3 x [3 x double]] [[3 x double] [double 0x3FFD6347A73F3C12, double 0xBF4A89064CCAC364, double 0x3F72D890C0618E4C], [3 x double] [double 0xBF4A89064CCAC364, double 0x3F4D246C50C61A13, double 0xBF500F35DFE2F91E], [3 x double] [double 0x3F72D890C0618E4C, double 0xBF500F35DFE2F91E, double 0x3F56B9C0FB19AFB1]], [3 x [3 x double]] [[3 x double] [double 0x4050E7DD736895C8, double 0xBF945DDD22867C67, double 0xBF6CF6724A3A0ADE], [3 x double] [double 0xBF945DDD22867C67, double 0x3F04C5EEC26F0B76, double 0xBF056AB30C80C1B8], [3 x double] [double 0xBF6CF6724A3A0ADE, double 0xBF056AB30C80C1B8, double 0x3F4E890B75BCE007]], [3 x [3 x double]] [[3 x double] [double 0x4023F8E54AC33726, double 0xBF759F3BA5987769, double 0xBF79D19EE03EB7C3], [3 x double] [double 0xBF759F3BA5987769, double 0x3F07D24F495BBAA0, double 0x3F1089420956C428], [3 x double] [double 0xBF79D19EE03EB7C3, double 0x3F1089420956C428, double 0x3F419434E91B27F3]], [3 x [3 x double]] [[3 x double] [double 0x4040FEF1945AE838, double 0xBF59981289821D37, double 0xBFA48E00EC03734C], [3 x double] [double 0xBF59981289821D37, double 0x3F10C9C152834AEE, double 0x3F1041430B717B31], [3 x double] [double 0xBFA48E00EC03734C, double 0x3F1041430B717B31, double 0x3F6CC52DA68D9462]], [3 x [3 x double]] [[3 x double] [double 0x402AE8B50A4AD038, double 0xBF80458A1DBEA554, double 0xBFAB5C80443450BE], [3 x double] [double 0xBF80458A1DBEA554, double 0x3F1E8AF9D3E3222B, double 0x3F086F66AFC48254], [3 x double] [double 0xBFAB5C80443450BE, double 0x3F086F66AFC48254, double 0x3F664FAF2454B947]], [3 x [3 x double]] [[3 x double] [double 0x405B23B3B8A4167C, double 0xBF8FB87A17FC8583, double 0xBF934115E8494232], [3 x double] [double 0xBF8FB87A17FC8583, double 0x3F1E83BE3A4151C0, double 0x3EDB13DAD8F22D8B], [3 x double] [double 0xBF934115E8494232, double 0x3EDB13DAD8F22D8B, double 0x3F3C554D440887D4]], [3 x [3 x double]] [[3 x double] [double 0x405492D1014916FC, double 0xBF87BCA9365BC6E3, double 0xBFA932ED9FDADE44], [3 x double] [double 0xBF87BCA9365BC6E3, double 0x3F1376E7BDE759FC, double 0x3ECF4A45655FDE7A], [3 x double] [double 0xBFA932ED9FDADE44, double 0x3ECF4A45655FDE7A, double 0x3F6DD1BE272424F8]], [3 x [3 x double]] [[3 x double] [double 0x40027D9DC2321E18, double 0xBF49AA7969534FF4, double 0x3F486FC11275A512], [3 x double] [double 0xBF49AA7969534FF4, double 0x3EEB265D99C34543, double 0xBEC2B00B84CBD2B1], [3 x double] [double 0x3F486FC11275A512, double 0xBEC2B00B84CBD2B1, double 0x3F1B8E4D5C8ADE61]], [3 x [3 x double]] [[3 x double] [double 0x4077AC491C3B5A3B, double 0x3F59D8EC8911863F, double 0xBF955B0B885233A4], [3 x double] [double 0x3F59D8EC8911863F, double 0x3F08F5A722705E34, double 0xBEF888C888BC6F52], [3 x double] [double 0xBF955B0B885233A4, double 0xBEF888C888BC6F52, double 0x3F412DD1EFB294CD]], [3 x [3 x double]] [[3 x double] [double 0x3FE65AC4A5842C05, double 0xBF40D67D054609BE, double 0xBF3A49C0D4CCA173], [3 x double] [double 0xBF40D67D054609BE, double 0x3EB7927912E8F9D4, double 0xBEC192E98BA8419C], [3 x double] [double 0xBF3A49C0D4CCA173, double 0xBEC192E98BA8419C, double 0x3F3289ED9717CD60]], [3 x [3 x double]] [[3 x double] [double 0x4005058C8870EBCA, double 0xBF62FDBD092233C6, double 0xBF75BA2468341A43], [3 x double] [double 0xBF62FDBD092233C6, double 0x3F08120D0ADC5A1E, double 0x3F141F7D89F5B2A4], [3 x double] [double 0xBF75BA2468341A43, double 0x3F141F7D89F5B2A4, double 0x3F62B87201CC5F89]], [3 x [3 x double]] [[3 x double] [double 0x4067BE17AFA03C48, double 0xBF71566BE5F3DE62, double 0xBF9BB5D968BF40DB], [3 x double] [double 0xBF71566BE5F3DE62, double 0x3F11C2F1E23D2132, double 0x3EFC390D9ACA193C], [3 x double] [double 0xBF9BB5D968BF40DB, double 0x3EFC390D9ACA193C, double 0x3F6FD4FFB1DF0067]]], align 16

@_ZN6webrtc13PitchBasedVadC1Ev = hidden unnamed_addr alias void (%"class.webrtc::PitchBasedVad"*), void (%"class.webrtc::PitchBasedVad"*)* @_ZN6webrtc13PitchBasedVadC2Ev
@_ZN6webrtc13PitchBasedVadD1Ev = hidden unnamed_addr alias void (%"class.webrtc::PitchBasedVad"*), void (%"class.webrtc::PitchBasedVad"*)* @_ZN6webrtc13PitchBasedVadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13PitchBasedVadC2Ev(%"class.webrtc::PitchBasedVad"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 2
  store double 3.000000e-01, double* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 3
  %4 = tail call %"class.webrtc::VadCircularBuffer"* @_ZN6webrtc17VadCircularBuffer6CreateEi(i32 500) #5
  %5 = ptrtoint %"class.webrtc::VadCircularBuffer"* %4 to i64
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 0, i32 3
  store i32 3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 0, i32 4
  store i32 12, i32* %8, align 4
  %9 = bitcast %"class.webrtc::PitchBasedVad"* %0 to <2 x double*>*
  store <2 x double*> <double* getelementptr inbounds ([12 x double], [12 x double]* @_ZN6webrtcL16kNoiseGmmWeightsE, i64 0, i64 0), double* getelementptr inbounds ([12 x [3 x double]], [12 x [3 x double]]* @_ZN6webrtcL13kNoiseGmmMeanE, i64 0, i64 0, i64 0)>, <2 x double*>* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 0, i32 2
  store double* getelementptr inbounds ([12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* @_ZN6webrtcL21kNoiseGmmCovarInverseE, i64 0, i64 0, i64 0, i64 0), double** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 1, i32 3
  store i32 3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 1, i32 4
  store i32 12, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 1, i32 0
  %14 = bitcast double** %13 to <2 x double*>*
  store <2 x double*> <double* getelementptr inbounds ([12 x double], [12 x double]* @_ZL16kVoiceGmmWeights, i64 0, i64 0), double* getelementptr inbounds ([12 x [3 x double]], [12 x [3 x double]]* @_ZL13kVoiceGmmMean, i64 0, i64 0, i64 0)>, <2 x double*>* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 1, i32 2
  store double* getelementptr inbounds ([12 x [3 x [3 x double]]], [12 x [3 x [3 x double]]]* @_ZL21kVoiceGmmCovarInverse, i64 0, i64 0, i64 0, i64 0), double** %15, align 8
  ret void
}

declare %"class.webrtc::VadCircularBuffer"* @_ZN6webrtc17VadCircularBuffer6CreateEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13PitchBasedVadD2Ev(%"class.webrtc::PitchBasedVad"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %2, align 8
  store %"class.webrtc::VadCircularBuffer"* null, %"class.webrtc::VadCircularBuffer"** %2, align 8
  %4 = icmp eq %"class.webrtc::VadCircularBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN6webrtc17VadCircularBufferD1Ev(%"class.webrtc::VadCircularBuffer"* nonnull %3) #5
  %6 = bitcast %"class.webrtc::VadCircularBuffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc13PitchBasedVad18VoicingProbabilityERK13AudioFeaturesPd(%"class.webrtc::PitchBasedVad"*, %struct.AudioFeatures* nocapture readonly dereferenceable(144), double* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [3 x double], align 16
  %5 = bitcast [3 x double]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds [3 x double], [3 x double]* %4, i64 0, i64 0
  %7 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %1, i64 0, i32 4
  %8 = bitcast [3 x double]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 24, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %86, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds [3 x double], [3 x double]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [3 x double], [3 x double]* %4, i64 0, i64 1
  %14 = bitcast [3 x double]* %4 to i64*
  %15 = bitcast double* %13 to i64*
  %16 = bitcast double* %12 to i64*
  %17 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %11, %81
  %22 = phi i64 [ 0, %11 ], [ %83, %81 ]
  %23 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %1, i64 0, i32 0, i64 %22
  %24 = bitcast double* %23 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %14, align 16
  %26 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %1, i64 0, i32 2, i64 %22
  %27 = bitcast double* %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %15, align 8
  %29 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %1, i64 0, i32 1, i64 %22
  %30 = bitcast double* %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %16, align 16
  %32 = call double @_ZN6webrtc11EvaluateGmmEPKdRKNS_13GmmParametersE(double* nonnull %6, %"struct.webrtc::GmmParameters"* dereferenceable(32) %17) #5
  %33 = call double @_ZN6webrtc11EvaluateGmmEPKdRKNS_13GmmParametersE(double* nonnull %6, %"struct.webrtc::GmmParameters"* dereferenceable(32) %18) #5
  %34 = load double, double* %26, align 8
  %35 = fcmp olt double %34, 2.000000e+02
  %36 = fcmp ogt double %34, 2.000000e+03
  %37 = or i1 %35, %36
  br i1 %37, label %41, label %38

38:                                               ; preds = %21
  %39 = load double, double* %23, align 8
  %40 = fcmp olt double %39, -2.000000e+00
  br i1 %40, label %41, label %43

41:                                               ; preds = %38, %21
  %42 = fmul double %33, 0x3D719799812DEA11
  br label %47

43:                                               ; preds = %38
  %44 = fcmp ogt double %39, -9.000000e-01
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = fmul double %32, 0x3D719799812DEA11
  br label %47

47:                                               ; preds = %43, %45, %41
  %48 = phi double [ %33, %41 ], [ %46, %45 ], [ %33, %43 ]
  %49 = phi double [ %42, %41 ], [ %32, %45 ], [ %32, %43 ]
  %50 = load double, double* %19, align 8
  %51 = fmul double %49, %50
  %52 = fsub double 1.000000e+00, %50
  %53 = fmul double %48, %52
  %54 = fadd double %51, %53
  %55 = fdiv double %51, %54
  %56 = fcmp ogt double %55, 0x3FEFAE147AE147AE
  br i1 %56, label %60, label %57

57:                                               ; preds = %47
  %58 = fcmp olt double %55, 1.000000e-02
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  br label %60

60:                                               ; preds = %47, %57, %59
  %61 = phi double [ 1.000000e-02, %59 ], [ %55, %57 ], [ 0x3FEFAE147AE147AE, %47 ]
  %62 = getelementptr inbounds double, double* %2, i64 %22
  %63 = load double, double* %62, align 8
  %64 = fmul double %61, %63
  %65 = fsub double 1.000000e+00, %61
  %66 = fsub double 1.000000e+00, %63
  %67 = fmul double %65, %66
  %68 = fadd double %64, %67
  %69 = fdiv double %64, %68
  store double %69, double* %62, align 8
  %70 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %20, align 8
  call void @_ZN6webrtc17VadCircularBuffer6InsertEd(%"class.webrtc::VadCircularBuffer"* %70, double %69) #5
  %71 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %20, align 8
  %72 = call i32 @_ZN6webrtc17VadCircularBuffer15RemoveTransientEid(%"class.webrtc::VadCircularBuffer"* %71, i32 7, double 2.000000e-01) #5
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %60
  %75 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %20, align 8
  %76 = call double @_ZN6webrtc17VadCircularBuffer4MeanEv(%"class.webrtc::VadCircularBuffer"* %75) #5
  store double %76, double* %19, align 8
  %77 = fcmp ogt double %76, 0x3FEFAE147AE147AE
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = fcmp olt double %76, 1.000000e-02
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  br label %81

81:                                               ; preds = %80, %78, %74
  %82 = phi double [ 1.000000e-02, %80 ], [ %76, %78 ], [ 0x3FEFAE147AE147AE, %74 ]
  store double %82, double* %19, align 8
  %83 = add nuw i64 %22, 1
  %84 = load i64, i64* %7, align 8
  %85 = icmp ult i64 %83, %84
  br i1 %85, label %21, label %86

86:                                               ; preds = %60, %81, %3
  %87 = phi i32 [ 0, %3 ], [ 0, %81 ], [ -1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret i32 %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare double @_ZN6webrtc11EvaluateGmmEPKdRKNS_13GmmParametersE(double*, %"struct.webrtc::GmmParameters"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc13PitchBasedVad11UpdatePriorEd(%"class.webrtc::PitchBasedVad"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %3, align 8
  tail call void @_ZN6webrtc17VadCircularBuffer6InsertEd(%"class.webrtc::VadCircularBuffer"* %4, double %1) #5
  %5 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %3, align 8
  %6 = tail call i32 @_ZN6webrtc17VadCircularBuffer15RemoveTransientEid(%"class.webrtc::VadCircularBuffer"* %5, i32 7, double 2.000000e-01) #5
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = load %"class.webrtc::VadCircularBuffer"*, %"class.webrtc::VadCircularBuffer"** %3, align 8
  %10 = tail call double @_ZN6webrtc17VadCircularBuffer4MeanEv(%"class.webrtc::VadCircularBuffer"* %9) #5
  %11 = getelementptr inbounds %"class.webrtc::PitchBasedVad", %"class.webrtc::PitchBasedVad"* %0, i64 0, i32 2
  store double %10, double* %11, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ 0, %8 ], [ -1, %2 ]
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc17VadCircularBuffer6InsertEd(%"class.webrtc::VadCircularBuffer"*, double) local_unnamed_addr #1

declare i32 @_ZN6webrtc17VadCircularBuffer15RemoveTransientEid(%"class.webrtc::VadCircularBuffer"*, i32, double) local_unnamed_addr #1

declare double @_ZN6webrtc17VadCircularBuffer4MeanEv(%"class.webrtc::VadCircularBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc17VadCircularBufferD1Ev(%"class.webrtc::VadCircularBuffer"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
