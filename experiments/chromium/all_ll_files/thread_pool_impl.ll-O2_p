; ModuleID = '../../base/task/thread_pool/thread_pool_impl.cc'
source_filename = "../../base/task/thread_pool/thread_pool_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::internal::EnvironmentParams" = type { i8*, i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.base::internal::ThreadPoolImpl" = type { %"class.base::ThreadPoolInstance", %"class.base::TaskExecutor", %"class.base::internal::ThreadGroup::Delegate", %"class.base::internal::PooledTaskRunnerDelegate", %"class.std::__1::unique_ptr", %"class.base::internal::ServiceThread", %"class.base::internal::DelayedTaskManager", %"class.base::internal::PooledSingleThreadTaskRunnerManager", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", i8, i8, %"struct.std::__1::atomic.93", i8, i8, i32, i32, %"class.base::internal::TrackedRefFactory.74" }
%"class.base::ThreadPoolInstance" = type { i32 (...)** }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.base::internal::ThreadGroup::Delegate" = type { i32 (...)** }
%"class.base::internal::PooledTaskRunnerDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::TaskTrackerPosix"* }
%"class.base::internal::TaskTrackerPosix" = type { %"class.base::internal::TaskTracker", %class.scoped_refptr.43 }
%"class.base::internal::TaskTracker" = type { i32 (...)**, %"class.base::TaskAnnotator", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr.3", %"struct.std::__1::atomic", %"struct.std::__1::atomic.8", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.12", %"class.base::OnceCallback", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.22", %"class.base::internal::TrackedRefFactory" }
%"class.base::TaskAnnotator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::TaskTracker::State"* }
%"class.base::internal::TaskTracker::State" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.15, %union.anon.17, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.15 = type { i64 }
%union.anon.17 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::WaitableEvent"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.25, i8, [7 x i8] }>
%class.scoped_refptr.25 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.26", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.base::internal::TrackedRefFactory" = type { %"class.base::internal::TaskTracker"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.36" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.35 }
%union.anon.35 = type { %"class.base::WaitableEvent" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.base::internal::TrackedRef" }
%"class.base::internal::TrackedRef" = type { %"class.base::internal::TaskTracker"*, %"class.base::internal::TrackedRefFactory"* }
%class.scoped_refptr.43 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.44" }>
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::ServiceThread" = type { %"class.base::Thread.base", [7 x i8] }
%"class.base::Thread.base" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.48", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing" }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::DelayedTaskManager" = type { %"class.base::RepeatingCallback", %"class.base::TickClock"*, %"class.base::internal::CheckedLock", %class.scoped_refptr.54, %"class.base::internal::IntrusiveHeap" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::TickClock" = type { i32 (...)** }
%class.scoped_refptr.54 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask, base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::Impl" }
%"struct.base::IntrusiveHeap<base::internal::DelayedTaskManager::DelayedTask, base::internal::IntrusiveHeapImpl<base::internal::DelayedTaskManager::DelayedTask>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::DelayedTaskManager::DelayedTask> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::internal::DelayedTaskManager::DelayedTask"*, %"struct.base::internal::DelayedTaskManager::DelayedTask"*, %"class.std::__1::__compressed_pair.57" }
%"struct.base::internal::DelayedTaskManager::DelayedTask" = type <{ %"struct.base::internal::Task", %"class.base::OnceCallback.55", %class.scoped_refptr.56, i8, [7 x i8] }>
%"struct.base::internal::Task" = type { %"struct.base::PendingTask.base", [3 x i8] }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }
%"class.base::OnceCallback.55" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.56 = type { %"class.base::TaskRunner"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.44", [4 x i8] }>
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.base::internal::DelayedTaskManager::DelayedTask"* }
%"class.base::internal::PooledSingleThreadTaskRunnerManager" = type <{ %"class.base::internal::TrackedRef", %"class.base::internal::DelayedTaskManager"*, %"class.base::WorkerThreadObserver"*, %"class.base::internal::CheckedLock", %"class.std::__1::vector.62", i32, [4 x i8], [4 x [2 x %"class.base::internal::WorkerThread"*]], i8, [7 x i8] }>
%"class.base::WorkerThreadObserver" = type opaque
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %class.scoped_refptr.64*, %class.scoped_refptr.64*, %"class.std::__1::__compressed_pair.65" }
%class.scoped_refptr.64 = type { %"class.base::internal::WorkerThread"* }
%"class.base::internal::WorkerThread" = type <{ %"class.base::PlatformThread::Delegate", %"class.base::RefCountedThreadSafe.102", [4 x i8], %class.scoped_refptr.64, %"class.base::internal::CheckedLock", %"class.base::PlatformThreadHandle", %"class.base::TimeTicks", %"class.base::WaitableEvent", %"class.base::AtomicFlag", [7 x i8], %"class.std::__1::unique_ptr.108", %"class.base::internal::TrackedRef", %"class.base::WorkerThreadObserver"*, i32, i32, %"class.base::AtomicFlag", [7 x i8] }>
%"class.base::RefCountedThreadSafe.102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.base::internal::WorkerThread::Delegate"* }
%"class.base::internal::WorkerThread::Delegate" = type { i32 (...)** }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.103" }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { i8 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.scoped_refptr.64* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::ThreadGroup"* }
%"class.base::internal::ThreadGroup" = type { i32 (...)**, %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef.73", %"class.base::internal::CheckedLock", i8, [7 x i8], %"class.base::internal::PriorityQueue", %"struct.std::__1::atomic.86", %"class.base::internal::ThreadGroup"* }
%"class.base::internal::TrackedRef.73" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::internal::TrackedRefFactory.74"* }
%"class.base::internal::PriorityQueue" = type <{ %"class.base::internal::IntrusiveHeap.75", %"struct.std::__1::array.85", i8, [7 x i8] }>
%"class.base::internal::IntrusiveHeap.75" = type { %"class.base::IntrusiveHeap.76" }
%"class.base::IntrusiveHeap.76" = type { %"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" }
%"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.std::__1::__compressed_pair.80" }
%"class.base::internal::PriorityQueue::TaskSourceAndSortKey" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"* }
%"struct.std::__1::array.85" = type { [3 x i64] }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { %"struct.base::internal::ThreadGroup::YieldSortKey" }
%"struct.base::internal::ThreadGroup::YieldSortKey" = type { i8, i8 }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i8 }
%"class.base::internal::TrackedRefFactory.74" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.97" }
%"class.absl::optional.97" = type { %"class.absl::optional_internal::optional_data.98" }
%"class.absl::optional_internal::optional_data.98" = type { %"class.absl::optional_internal::optional_data_base.99" }
%"class.absl::optional_internal::optional_data_base.99" = type { %"class.absl::optional_internal::optional_data_dtor_base.100" }
%"class.absl::optional_internal::optional_data_dtor_base.100" = type { i8, %union.anon.101 }
%union.anon.101 = type { %"class.base::internal::TrackedRef.73" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::CommandLine" = type { %"class.std::__1::vector.185", %"class.std::__1::map", i64 }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.base::internal::ThreadGroupImpl" = type { %"class.base::internal::ThreadGroup", %"struct.base::internal::ThreadGroupImpl::InitializedInStart", %"class.std::__1::basic_string", i32, %"class.std::__1::vector.62", i64, i64, i64, i64, i32, i32, %"class.base::internal::WorkerThreadStack", %"class.std::__1::unique_ptr.12", i8, i8, i64, %"class.std::__1::unique_ptr.12", i8, [7 x i8], %"class.absl::optional", %"class.base::HistogramBase"*, %"class.base::internal::TrackedRefFactory.124" }
%"struct.base::internal::ThreadGroupImpl::InitializedInStart" = type { i64, %"class.base::TimeDelta", i32, %class.scoped_refptr.54, %"class.base::WorkerThreadObserver"*, i32, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::internal::WorkerThreadStack" = type { %"class.std::__1::vector.117" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.base::internal::WorkerThread"**, %"class.base::internal::WorkerThread"**, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.base::internal::WorkerThread"** }
%"class.base::HistogramBase" = type opaque
%"class.base::internal::TrackedRefFactory.124" = type { %"class.base::internal::ThreadGroupImpl"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.125" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"class.base::internal::TrackedRef.130" }
%"class.base::internal::TrackedRef.130" = type { %"class.base::internal::ThreadGroupImpl"*, %"class.base::internal::TrackedRefFactory.124"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.48", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"struct.base::ThreadPoolInstance::InitParams" = type { i32, i32, %"class.base::TimeDelta" }
%"struct.base::Thread::Options" = type <{ i32, [4 x i8], %"class.base::Thread::Delegate"*, i32, [4 x i8], %"class.base::sequence_manager::TimeDomain"*, %"class.base::RepeatingCallback.134", i64, i32, i8, i8, [2 x i8] }>
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::RepeatingCallback.134" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.135" = type { %"class.absl::optional_internal::optional_data.136" }
%"class.absl::optional_internal::optional_data.136" = type { %"class.absl::optional_internal::optional_data_base.137" }
%"class.absl::optional_internal::optional_data_base.137" = type { %"class.absl::optional_internal::optional_data_dtor_base.138" }
%"class.absl::optional_internal::optional_data_dtor_base.138" = type { i8, %union.anon.139 }
%union.anon.139 = type { %"class.base::TimeDelta" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.142" }
%"struct.std::__1::array.142" = type { [8 x i8] }
%"class.base::internal::Sequence" = type { %"class.base::internal::TaskSource.base", %"class.base::SequenceToken", %"class.std::__1::queue", %"struct.std::__1::atomic.149", i8, %"class.base::internal::SequenceLocalStorageMap" }
%"class.base::internal::TaskSource.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144", %"class.base::TaskTraits", %"struct.std::__1::atomic.145", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32 }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.base::HeapHandle" = type { i64 }
%"class.base::SequenceToken" = type { i32 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::internal::Task"*, i64 }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { %"class.base::TimeTicks" }
%"class.base::internal::SequenceLocalStorageMap" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.153" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.155" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::pair"* }
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.base::internal::PooledParallelTaskRunner" = type { %"class.base::TaskRunner.base", %"class.base::TaskTraits", %"class.base::internal::PooledTaskRunnerDelegate"*, %"class.base::internal::CheckedLock", %"class.base::internal::flat_tree.161" }
%"class.base::internal::flat_tree.161" = type { %"class.std::__1::vector.162" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.base::internal::Sequence"**, %"class.base::internal::Sequence"**, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.base::internal::Sequence"** }
%"class.base::internal::PooledSequencedTaskRunner" = type { %"class.base::UpdateableSequencedTaskRunner.base", %"class.base::internal::PooledTaskRunnerDelegate"*, %class.scoped_refptr.143 }
%"class.base::UpdateableSequencedTaskRunner.base" = type { %"class.base::SequencedTaskRunner.base" }
%class.scoped_refptr.143 = type { %"class.base::internal::Sequence"* }
%"class.base::UpdateableSequencedTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::internal::Sequence::Transaction" = type { %"class.base::internal::TaskSource::Transaction" }
%"class.base::internal::TaskSource::Transaction" = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144", %"class.base::TaskTraits", %"struct.std::__1::atomic.145", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32, [4 x i8] }>
%"class.base::internal::RegisteredTaskSource" = type { %class.scoped_refptr.176, %"class.base::internal::TaskTracker"* }
%class.scoped_refptr.176 = type { %"class.base::internal::TaskSource"* }
%"struct.base::internal::TransactionWithRegisteredTaskSource" = type { %"class.base::internal::RegisteredTaskSource", %"class.base::internal::TaskSource::Transaction" }
%"class.base::internal::JobTaskSource" = type { %"class.base::internal::TaskSource.base", %"class.base::internal::CheckedLock", %"class.base::internal::JobTaskSource::State", %"class.base::internal::JobTaskSource::JoinFlag", %"class.std::__1::unique_ptr.12", %"struct.std::__1::atomic.178", %"class.base::Location", %"class.base::RepeatingCallback.183", %"class.base::RepeatingCallback.184", %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.base::internal::PooledTaskRunnerDelegate"* }
%"class.base::internal::JobTaskSource::State" = type { %"struct.std::__1::atomic.178" }
%"class.base::internal::JobTaskSource::JoinFlag" = type { %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.base::RepeatingCallback.183" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.184" = type { %"class.base::internal::CallbackBaseCopyable" }

$_ZNSt3__111make_uniqueIN4base8internal15ThreadGroupImplEJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKPKcRKNS1_14ThreadPriorityENS2_10TrackedRefINS2_11TaskTrackerEEENSH_INS2_11ThreadGroup8DelegateEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEED2Ev = comdat any

$_ZN4base18ThreadPoolInstanceD2Ev = comdat any

$_ZN4base18ThreadPoolInstanceD0Ev = comdat any

$_ZN4base12TaskExecutorD2Ev = comdat any

$_ZN4base12TaskExecutorD0Ev = comdat any

$_ZN4base8internal11ThreadGroup8DelegateD2Ev = comdat any

$_ZN4base8internal11ThreadGroup8DelegateD0Ev = comdat any

$_ZTVN4base18ThreadPoolInstanceE = comdat any

$_ZTVN4base12TaskExecutorE = comdat any

$_ZTVN4base8internal11ThreadGroup8DelegateE = comdat any

@_ZTVN4base8internal14ThreadPoolImplE = hidden unnamed_addr constant { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImplD2Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImplD0Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::ThreadPoolInstance::InitParams"*, %"class.base::WorkerThreadObserver"*)* @_ZN4base8internal14ThreadPoolImpl5StartERKNS_18ThreadPoolInstance10InitParamsEPNS_20WorkerThreadObserverE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl8ShutdownEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl15FlushForTestingEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::OnceCallback"*)* @_ZN4base8internal14ThreadPoolImpl20FlushAsyncForTestingENS_12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl14JoinForTestingEv to i8*), i8* bitcast (i32 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZNK4base8internal14ThreadPoolImpl51GetMaxConcurrentNonBlockedTasksWithTraitsDeprecatedERKNS_10TaskTraitsE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl10BeginFenceEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl8EndFenceEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl20BeginBestEffortFenceEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImpl18EndBestEffortFenceEv to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::Location"*, %"class.base::TaskTraits"*, %"class.base::OnceCallback"*, i64)* @_ZN4base8internal14ThreadPoolImpl15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (%"class.base::TaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZN4base8internal14ThreadPoolImpl16CreateTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SequencedTaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZN4base8internal14ThreadPoolImpl25CreateSequencedTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*, i32)* @_ZN4base8internal14ThreadPoolImpl28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*)* @_ZN4base8internal14ThreadPoolImpl20EnqueueJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*)* @_ZN4base8internal14ThreadPoolImpl19RemoveJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)* @_ZN4base8internal14ThreadPoolImpl14UpdatePriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)* @_ZN4base8internal14ThreadPoolImpl17UpdateJobPriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE to i8*), i8* bitcast (%"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZN4base8internal14ThreadPoolImpl23GetThreadGroupForTraitsERKNS_10TaskTraitsE to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)* @_ZN4base8internal14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEE to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*)* @_ZN4base8internal14ThreadPoolImpl11ShouldYieldEPKNS0_10TaskSourceE to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn8_N4base8internal14ThreadPoolImplD1Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn8_N4base8internal14ThreadPoolImplD0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::Location"*, %"class.base::TaskTraits"*, %"class.base::OnceCallback"*, i64)* @_ZThn8_N4base8internal14ThreadPoolImpl15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (%"class.base::TaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZThn8_N4base8internal14ThreadPoolImpl16CreateTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SequencedTaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZThn8_N4base8internal14ThreadPoolImpl25CreateSequencedTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*, i32)* @_ZThn8_N4base8internal14ThreadPoolImpl28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn16_N4base8internal14ThreadPoolImplD1Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn16_N4base8internal14ThreadPoolImplD0Ev to i8*), i8* bitcast (%"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)* @_ZThn16_N4base8internal14ThreadPoolImpl23GetThreadGroupForTraitsERKNS_10TaskTraitsE to i8*)], [10 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn24_N4base8internal14ThreadPoolImplD1Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*)* @_ZThn24_N4base8internal14ThreadPoolImplD0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*)* @_ZThn24_N4base8internal14ThreadPoolImpl11ShouldYieldEPKNS0_10TaskSourceE to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)* @_ZThn24_N4base8internal14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEE to i8*), i8* bitcast (i1 (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*)* @_ZThn24_N4base8internal14ThreadPoolImpl20EnqueueJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*)* @_ZThn24_N4base8internal14ThreadPoolImpl19RemoveJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)* @_ZThn24_N4base8internal14ThreadPoolImpl14UpdatePriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE to i8*), i8* bitcast (void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)* @_ZThn24_N4base8internal14ThreadPoolImpl17UpdateJobPriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE to i8*)] }, align 8
@_ZN4base8internal12_GLOBAL__N_132kForegroundPoolEnvironmentParamsE = internal constant %"struct.base::internal::EnvironmentParams" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 1 }, align 8
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN4base8internal12_GLOBAL__N_132kBackgroundPoolEnvironmentParamsE = internal constant %"struct.base::internal::EnvironmentParams" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 0 }, align 8
@_ZN4base16kDisableJobYieldE = external global %"struct.base::Feature", align 8
@_ZN4base25kDisableFairJobSchedulingE = external global %"struct.base::Feature", align 8
@_ZN4base25kDisableJobUpdatePriorityE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [48 x i8] c"../../base/task/thread_pool/thread_pool_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [68 x i8] c"service_thread_.StartWithOptions(std::move(service_thread_options))\00", align 1
@_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE = internal unnamed_addr global i8 0, align 1
@_ZN4base32kUseFiveMinutesThreadReclaimTimeE = external global %"struct.base::Feature", align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"task.task\00", align 1
@_ZTVN4base18ThreadPoolInstanceE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ThreadPoolInstance"*)* @_ZN4base18ThreadPoolInstanceD2Ev to i8*), i8* bitcast (void (%"class.base::ThreadPoolInstance"*)* @_ZN4base18ThreadPoolInstanceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4base12TaskExecutorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::TaskExecutor"*)* @_ZN4base12TaskExecutorD2Ev to i8*), i8* bitcast (void (%"class.base::TaskExecutor"*)* @_ZN4base12TaskExecutorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4base8internal11ThreadGroup8DelegateE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ThreadGroup::Delegate"*)* @_ZN4base8internal11ThreadGroup8DelegateD2Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroup::Delegate"*)* @_ZN4base8internal11ThreadGroup8DelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN8switches23kDisableBestEffortTasksE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"Foreground\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"Background\00", align 1

@_ZN4base8internal14ThreadPoolImplC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::internal::ThreadPoolImpl"*, i8*, i64), void (%"class.base::internal::ThreadPoolImpl"*, i8*, i64)* @_ZN4base8internal14ThreadPoolImplC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base8internal14ThreadPoolImplC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrINS0_16TaskTrackerPosixENS3_14default_deleteIS8_EEEE = hidden unnamed_addr alias void (%"class.base::internal::ThreadPoolImpl"*, i8*, i64, %"class.base::internal::TaskTrackerPosix"*), void (%"class.base::internal::ThreadPoolImpl"*, i8*, i64, %"class.base::internal::TaskTrackerPosix"*)* @_ZN4base8internal14ThreadPoolImplC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrINS0_16TaskTrackerPosixENS3_14default_deleteIS8_EEEE
@_ZN4base8internal14ThreadPoolImplD1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadPoolImpl"*), void (%"class.base::internal::ThreadPoolImpl"*)* @_ZN4base8internal14ThreadPoolImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImplC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::ThreadPoolImpl"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 240) #11
  %5 = bitcast i8* %4 to %"class.base::internal::TaskTrackerPosix"*
  tail call void @_ZN4base8internal16TaskTrackerPosixC1Ev(%"class.base::internal::TaskTrackerPosix"* nonnull %5) #12
  tail call void @_ZN4base8internal14ThreadPoolImplC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrINS0_16TaskTrackerPosixENS3_14default_deleteIS8_EEEE(%"class.base::internal::ThreadPoolImpl"* %0, i8* %1, i64 %2, %"class.base::internal::TaskTrackerPosix"* nonnull %5)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImplC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrINS0_16TaskTrackerPosixENS3_14default_deleteIS8_EEEE(%"class.base::internal::ThreadPoolImpl"*, i8*, i64, %"class.base::internal::TaskTrackerPosix"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::TrackedRef", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %8 = alloca %"class.base::internal::TrackedRef", align 8
  %9 = alloca %"class.base::internal::TrackedRef.73", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %12 = alloca %"class.base::internal::TrackedRef", align 8
  %13 = alloca %"class.base::internal::TrackedRef.73", align 8
  %14 = ptrtoint %"class.base::internal::TaskTrackerPosix"* %3 to i64
  %15 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4base18ThreadPoolInstanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base12TaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  %16 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.base::internal::ThreadGroup::Delegate", %"class.base::internal::ThreadGroup::Delegate"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal11ThreadGroup8DelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 3
  tail call void @_ZN4base8internal24PooledTaskRunnerDelegateC2Ev(%"class.base::internal::PooledTaskRunnerDelegate"* %18) #12
  %19 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %19, align 8
  %20 = bitcast %"class.base::internal::ThreadGroup::Delegate"* %16 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %20, align 8
  %21 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4
  %22 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %14, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5
  tail call void @_ZN4base8internal13ServiceThreadC1Ev(%"class.base::internal::ServiceThread"* %23) #12
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  %25 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %26 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %25, i64 0, i32 0
  tail call void @_ZN4base8internal18DelayedTaskManagerC1EPKNS_9TickClockE(%"class.base::internal::DelayedTaskManager"* %24, %"class.base::TickClock"* %26) #12
  %27 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %28, align 8
  %30 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %29, i64 0, i32 0, i32 12
  %31 = bitcast %"class.base::internal::TrackedRefFactory"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !2
  %33 = bitcast %"class.base::internal::TrackedRef"* %5 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !2
  %34 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %5, i64 0, i32 1
  store %"class.base::internal::TrackedRefFactory"* %30, %"class.base::internal::TrackedRefFactory"** %34, align 8, !alias.scope !2
  %35 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %29, i64 0, i32 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic, !noalias !2
  call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManagerC1ENS0_10TrackedRefINS0_11TaskTrackerEEEPNS0_18DelayedTaskManagerE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %27, %"class.base::internal::TrackedRef"* nonnull %5, %"class.base::internal::DelayedTaskManager"* %24) #12
  %37 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %34, align 8
  %38 = icmp eq %"class.base::internal::TrackedRefFactory"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %34, align 8
  %45 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !7
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49, !prof !8

48:                                               ; preds = %43
  call void @llvm.trap() #12
  unreachable

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %50) #12
  br label %51

51:                                               ; preds = %4, %39, %49
  %52 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8
  %53 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %54 = bitcast %"class.std::__1::unique_ptr.70"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 20, i1 false)
  %55 = call zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() #12
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %58 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %57, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kDisableBestEffortTasksE, i64 0, i64 0)) #12
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi i1 [ false, %51 ], [ %58, %56 ]
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %53, align 4
  %62 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17
  %65 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %64, i64 0, i32 0
  store %"class.base::internal::ThreadGroup::Delegate"* %16, %"class.base::internal::ThreadGroup::Delegate"** %65, align 8
  %66 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %67, align 8
  %68 = ptrtoint %"class.base::internal::ThreadGroup::Delegate"* %16 to i64
  %69 = ptrtoint %"class.base::internal::TrackedRefFactory.74"* %64 to i64
  %70 = atomicrmw add i32* %66, i32 1 monotonic
  %71 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = bitcast %"class.base::internal::TrackedRef.73"* %72 to i64*
  store i64 %68, i64* %73, align 8
  %74 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %75 = bitcast %"class.base::internal::TrackedRefFactory.74"** %74 to i64*
  store i64 %69, i64* %75, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = icmp eq i64 %2, 0
  %78 = bitcast [2 x %"class.base::BasicStringPiece"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #12
  br i1 %77, label %79, label %80

79:                                               ; preds = %59
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #12
  br label %86

80:                                               ; preds = %59
  %81 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0
  %82 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 0
  store i8* %1, i8** %82, align 8
  %83 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 1
  store i64 %2, i64* %83, align 8
  %84 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 1
  store i64 10, i64* %85, align 8
  call void @_ZN4base10JoinStringESt16initializer_listINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEES5_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.base::BasicStringPiece"* nonnull %81, i64 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #12
  br label %86

86:                                               ; preds = %80, %79
  %87 = bitcast %"class.base::internal::TrackedRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #12
  %88 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %28, align 8
  %89 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %88, i64 0, i32 0, i32 12
  %90 = bitcast %"class.base::internal::TrackedRefFactory"* %89 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !9
  %92 = bitcast %"class.base::internal::TrackedRef"* %8 to i64*
  store i64 %91, i64* %92, align 8, !alias.scope !9
  %93 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %8, i64 0, i32 1
  store %"class.base::internal::TrackedRefFactory"* %89, %"class.base::internal::TrackedRefFactory"** %93, align 8, !alias.scope !9
  %94 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %88, i64 0, i32 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 monotonic, !noalias !9
  %96 = bitcast %"class.base::internal::TrackedRef.73"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #12
  %97 = bitcast %"class.base::internal::TrackedRefFactory.74"* %64 to i64*
  %98 = load i64, i64* %97, align 8, !noalias !14
  %99 = bitcast %"class.base::internal::TrackedRef.73"* %9 to i64*
  store i64 %98, i64* %99, align 8, !alias.scope !14
  %100 = getelementptr inbounds %"class.base::internal::TrackedRef.73", %"class.base::internal::TrackedRef.73"* %9, i64 0, i32 1
  store %"class.base::internal::TrackedRefFactory.74"* %64, %"class.base::internal::TrackedRefFactory.74"** %100, align 8, !alias.scope !14
  %101 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !14
  %102 = call %"class.base::internal::ThreadGroupImpl"* @_ZNSt3__111make_uniqueIN4base8internal15ThreadGroupImplEJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKPKcRKNS1_14ThreadPriorityENS2_10TrackedRefINS2_11TaskTrackerEEENSH_INS2_11ThreadGroup8DelegateEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i8** dereferenceable(8) getelementptr inbounds (%"struct.base::internal::EnvironmentParams", %"struct.base::internal::EnvironmentParams"* @_ZN4base8internal12_GLOBAL__N_132kForegroundPoolEnvironmentParamsE, i64 0, i32 0), i32* dereferenceable(4) getelementptr inbounds (%"struct.base::internal::EnvironmentParams", %"struct.base::internal::EnvironmentParams"* @_ZN4base8internal12_GLOBAL__N_132kForegroundPoolEnvironmentParamsE, i64 0, i32 1), %"class.base::internal::TrackedRef"* nonnull dereferenceable(16) %8, %"class.base::internal::TrackedRef.73"* nonnull dereferenceable(16) %9)
  %103 = getelementptr inbounds %"class.base::internal::ThreadGroupImpl", %"class.base::internal::ThreadGroupImpl"* %102, i64 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %52, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %104, align 8
  store %"class.base::internal::ThreadGroup"* %103, %"class.base::internal::ThreadGroup"** %104, align 8
  %106 = icmp eq %"class.base::internal::ThreadGroup"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %86
  %108 = bitcast %"class.base::internal::ThreadGroup"* %105 to void (%"class.base::internal::ThreadGroup"*)***
  %109 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %109, i64 1
  %111 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %110, align 8
  call void %111(%"class.base::internal::ThreadGroup"* nonnull %105) #12
  br label %112

112:                                              ; preds = %107, %86
  %113 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %100, align 8
  %114 = icmp eq %"class.base::internal::TrackedRefFactory.74"* %113, null
  br i1 %114, label %127, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %113, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw sub i32* %116, i32 1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %100, align 8
  %121 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %120, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %122 = load i8, i8* %121, align 8, !range !7
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125, !prof !8

124:                                              ; preds = %119
  call void @llvm.trap() #12
  unreachable

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %120, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %126) #12
  br label %127

127:                                              ; preds = %112, %115, %125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #12
  %128 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %93, align 8
  %129 = icmp eq %"class.base::internal::TrackedRefFactory"* %128, null
  br i1 %129, label %142, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %128, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw sub i32* %131, i32 1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %142

134:                                              ; preds = %130
  %135 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %93, align 8
  %136 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %135, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %137 = load i8, i8* %136, align 8, !range !7
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %140, !prof !8

139:                                              ; preds = %134
  call void @llvm.trap() #12
  unreachable

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %135, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %141) #12
  br label %142

142:                                              ; preds = %127, %130, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #12
  %143 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #11
  br label %150

150:                                              ; preds = %142, %147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  %151 = call zeroext i1 @_ZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEv() #12
  br i1 %151, label %152, label %226

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #12
  %154 = bitcast [2 x %"class.base::BasicStringPiece"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #12
  br i1 %77, label %155, label %156

155:                                              ; preds = %152
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 0, i64 24, i1 false) #12
  br label %162

156:                                              ; preds = %152
  %157 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0
  %158 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 0
  store i8* %1, i8** %158, align 8
  %159 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 1
  store i64 %2, i64* %159, align 8
  %160 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8** %160, align 8
  %161 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 1
  store i64 10, i64* %161, align 8
  call void @_ZN4base10JoinStringESt16initializer_listINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEES5_(%"class.std::__1::basic_string"* nonnull sret %10, %"class.base::BasicStringPiece"* nonnull %157, i64 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #12
  br label %162

162:                                              ; preds = %156, %155
  %163 = bitcast %"class.base::internal::TrackedRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #12
  %164 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %28, align 8
  %165 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %164, i64 0, i32 0, i32 12
  %166 = bitcast %"class.base::internal::TrackedRefFactory"* %165 to i64*
  %167 = load i64, i64* %166, align 8, !noalias !17
  %168 = bitcast %"class.base::internal::TrackedRef"* %12 to i64*
  store i64 %167, i64* %168, align 8, !alias.scope !17
  %169 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %12, i64 0, i32 1
  store %"class.base::internal::TrackedRefFactory"* %165, %"class.base::internal::TrackedRefFactory"** %169, align 8, !alias.scope !17
  %170 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %164, i64 0, i32 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 1 monotonic, !noalias !17
  %172 = bitcast %"class.base::internal::TrackedRef.73"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #12
  %173 = load i64, i64* %97, align 8, !noalias !22
  %174 = bitcast %"class.base::internal::TrackedRef.73"* %13 to i64*
  store i64 %173, i64* %174, align 8, !alias.scope !22
  %175 = getelementptr inbounds %"class.base::internal::TrackedRef.73", %"class.base::internal::TrackedRef.73"* %13, i64 0, i32 1
  store %"class.base::internal::TrackedRefFactory.74"* %64, %"class.base::internal::TrackedRefFactory.74"** %175, align 8, !alias.scope !22
  %176 = atomicrmw add i32* %66, i32 1 monotonic, !noalias !22
  %177 = call %"class.base::internal::ThreadGroupImpl"* @_ZNSt3__111make_uniqueIN4base8internal15ThreadGroupImplEJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKPKcRKNS1_14ThreadPriorityENS2_10TrackedRefINS2_11TaskTrackerEEENSH_INS2_11ThreadGroup8DelegateEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i8** dereferenceable(8) getelementptr inbounds (%"struct.base::internal::EnvironmentParams", %"struct.base::internal::EnvironmentParams"* @_ZN4base8internal12_GLOBAL__N_132kBackgroundPoolEnvironmentParamsE, i64 0, i32 0), i32* dereferenceable(4) getelementptr inbounds (%"struct.base::internal::EnvironmentParams", %"struct.base::internal::EnvironmentParams"* @_ZN4base8internal12_GLOBAL__N_132kBackgroundPoolEnvironmentParamsE, i64 0, i32 1), %"class.base::internal::TrackedRef"* nonnull dereferenceable(16) %12, %"class.base::internal::TrackedRef.73"* nonnull dereferenceable(16) %13)
  %178 = getelementptr inbounds %"class.base::internal::ThreadGroupImpl", %"class.base::internal::ThreadGroupImpl"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %180 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %179, align 8
  store %"class.base::internal::ThreadGroup"* %178, %"class.base::internal::ThreadGroup"** %179, align 8
  %181 = icmp eq %"class.base::internal::ThreadGroup"* %180, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %162
  %183 = bitcast %"class.base::internal::ThreadGroup"* %180 to void (%"class.base::internal::ThreadGroup"*)***
  %184 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %184, i64 1
  %186 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %185, align 8
  call void %186(%"class.base::internal::ThreadGroup"* nonnull %180) #12
  br label %187

187:                                              ; preds = %182, %162
  %188 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %175, align 8
  %189 = icmp eq %"class.base::internal::TrackedRefFactory.74"* %188, null
  br i1 %189, label %202, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %188, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw sub i32* %191, i32 1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %202

194:                                              ; preds = %190
  %195 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %175, align 8
  %196 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %195, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %197 = load i8, i8* %196, align 8, !range !7
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %200, !prof !8

199:                                              ; preds = %194
  call void @llvm.trap() #12
  unreachable

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %195, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %201) #12
  br label %202

202:                                              ; preds = %187, %190, %200
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #12
  %203 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %169, align 8
  %204 = icmp eq %"class.base::internal::TrackedRefFactory"* %203, null
  br i1 %204, label %217, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %203, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw sub i32* %206, i32 1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %217

209:                                              ; preds = %205
  %210 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %169, align 8
  %211 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %210, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %212 = load i8, i8* %211, align 8, !range !7
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %215, !prof !8

214:                                              ; preds = %209
  call void @llvm.trap() #12
  unreachable

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %210, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %216) #12
  br label %217

217:                                              ; preds = %202, %205, %215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #12
  %218 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  call void @_ZdlPv(i8* %224) #11
  br label %225

225:                                              ; preds = %217, %222
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #12
  br label %226

226:                                              ; preds = %150, %225
  ret void
}

declare void @_ZN4base8internal24PooledTaskRunnerDelegateC2Ev(%"class.base::internal::PooledTaskRunnerDelegate"*) unnamed_addr #2

declare void @_ZN4base8internal13ServiceThreadC1Ev(%"class.base::internal::ServiceThread"*) unnamed_addr #2

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4base8internal18DelayedTaskManagerC1EPKNS_9TickClockE(%"class.base::internal::DelayedTaskManager"*, %"class.base::TickClock"*) unnamed_addr #2

declare void @_ZN4base8internal35PooledSingleThreadTaskRunnerManagerC1ENS0_10TrackedRefINS0_11TaskTrackerEEEPNS0_18DelayedTaskManagerE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*, %"class.base::internal::TrackedRef"*, %"class.base::internal::DelayedTaskManager"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::ThreadGroupImpl"* @_ZNSt3__111make_uniqueIN4base8internal15ThreadGroupImplEJNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKPKcRKNS1_14ThreadPriorityENS2_10TrackedRefINS2_11TaskTrackerEEENSH_INS2_11ThreadGroup8DelegateEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.std::__1::basic_string"* dereferenceable(24), i8** dereferenceable(8), i32* dereferenceable(4), %"class.base::internal::TrackedRef"* dereferenceable(16), %"class.base::internal::TrackedRef.73"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.base::internal::TrackedRef"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.base::internal::TrackedRef.73"*
  %11 = tail call i8* @_Znwm(i64 480) #11
  %12 = bitcast i8* %11 to %"class.base::internal::ThreadGroupImpl"*
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = select i1 %16, i8* %18, i8* %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %15 to i64
  %24 = select i1 %16, i64 %22, i64 %23
  %25 = load i8*, i8** %1, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %5
  %28 = tail call i64 @strlen(i8* nonnull %25) #12
  br label %32

29:                                               ; preds = %5
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi i64 [ 0, %29 ], [ %28, %27 ]
  %34 = load i32, i32* %2, align 4
  %35 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %3, i64 0, i32 1
  %37 = bitcast %"class.base::internal::TrackedRef"* %3 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  store <2 x i64> %38, <2 x i64>* %7, align 16
  store %"class.base::internal::TrackedRefFactory"* null, %"class.base::internal::TrackedRefFactory"** %36, align 8
  %39 = getelementptr inbounds %"class.base::internal::TrackedRef.73", %"class.base::internal::TrackedRef.73"* %10, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::internal::TrackedRef.73", %"class.base::internal::TrackedRef.73"* %4, i64 0, i32 1
  %41 = bitcast %"class.base::internal::TrackedRef.73"* %4 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  store <2 x i64> %42, <2 x i64>* %9, align 16
  store %"class.base::internal::TrackedRefFactory.74"* null, %"class.base::internal::TrackedRefFactory.74"** %40, align 8
  call void @_ZN4base8internal15ThreadGroupImplC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS_14ThreadPriorityENS0_10TrackedRefINS0_11TaskTrackerEEENS8_INS0_11ThreadGroup8DelegateEEE(%"class.base::internal::ThreadGroupImpl"* nonnull %12, i8* %20, i64 %24, i8* %25, i64 %33, i32 %34, %"class.base::internal::TrackedRef"* nonnull %8, %"class.base::internal::TrackedRef.73"* nonnull %10) #12
  %43 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %39, align 8
  %44 = icmp eq %"class.base::internal::TrackedRefFactory.74"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %39, align 8
  %51 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55, !prof !8

54:                                               ; preds = %49
  call void @llvm.trap() #12
  unreachable

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %50, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %56) #12
  br label %57

57:                                               ; preds = %32, %45, %55
  %58 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %35, align 8
  %59 = icmp eq %"class.base::internal::TrackedRefFactory"* %58, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %58, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %35, align 8
  %66 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %65, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !7
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70, !prof !8

69:                                               ; preds = %64
  call void @llvm.trap() #12
  unreachable

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %65, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %71) #12
  br label %72

72:                                               ; preds = %57, %60, %70
  ret %"class.base::internal::ThreadGroupImpl"* %12
}

declare void @_ZN4base10JoinStringESt16initializer_listINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEES5_(%"class.std::__1::basic_string"* sret, %"class.base::BasicStringPiece"*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 3
  %5 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }, { [25 x i8*], [8 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN4base8internal14ThreadPoolImplE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %6, align 8
  store %"class.base::internal::ThreadGroup"* null, %"class.base::internal::ThreadGroup"** %6, align 8
  %8 = icmp eq %"class.base::internal::ThreadGroup"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::internal::ThreadGroup"* %7 to void (%"class.base::internal::ThreadGroup"*)***
  %11 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %11, i64 1
  %13 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %12, align 8
  tail call void %13(%"class.base::internal::ThreadGroup"* nonnull %7) #12
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %15, align 8
  store %"class.base::internal::ThreadGroup"* null, %"class.base::internal::ThreadGroup"** %15, align 8
  %17 = icmp eq %"class.base::internal::ThreadGroup"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.base::internal::ThreadGroup"* %16 to void (%"class.base::internal::ThreadGroup"*)***
  %20 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %20, i64 1
  %22 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %21, align 8
  tail call void %22(%"class.base::internal::ThreadGroup"* nonnull %16) #12
  br label %23

23:                                               ; preds = %14, %18
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 17
  tail call void @_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEED2Ev(%"class.base::internal::TrackedRefFactory.74"* %24) #12
  %25 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %15, align 8
  store %"class.base::internal::ThreadGroup"* null, %"class.base::internal::ThreadGroup"** %15, align 8
  %26 = icmp eq %"class.base::internal::ThreadGroup"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.base::internal::ThreadGroup"* %25 to void (%"class.base::internal::ThreadGroup"*)***
  %29 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %29, i64 1
  %31 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %30, align 8
  tail call void %31(%"class.base::internal::ThreadGroup"* nonnull %25) #12
  br label %32

32:                                               ; preds = %23, %27
  %33 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %6, align 8
  store %"class.base::internal::ThreadGroup"* null, %"class.base::internal::ThreadGroup"** %6, align 8
  %34 = icmp eq %"class.base::internal::ThreadGroup"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.base::internal::ThreadGroup"* %33 to void (%"class.base::internal::ThreadGroup"*)***
  %37 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %37, i64 1
  %39 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %38, align 8
  tail call void %39(%"class.base::internal::ThreadGroup"* nonnull %33) #12
  br label %40

40:                                               ; preds = %32, %35
  %41 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManagerD1Ev(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %41) #12
  %42 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  tail call void @_ZN4base8internal18DelayedTaskManagerD1Ev(%"class.base::internal::DelayedTaskManager"* %42) #12
  %43 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5
  %44 = bitcast %"class.base::internal::ServiceThread"* %43 to %"class.base::Thread"*
  tail call void @_ZN4base6ThreadD2Ev(%"class.base::Thread"* %44) #12
  %45 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %45, align 8
  store %"class.base::internal::TaskTrackerPosix"* null, %"class.base::internal::TaskTrackerPosix"** %45, align 8
  %47 = icmp eq %"class.base::internal::TaskTrackerPosix"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.base::internal::TaskTrackerPosix"* %46 to void (%"class.base::internal::TaskTrackerPosix"*)***
  %50 = load void (%"class.base::internal::TaskTrackerPosix"*)**, void (%"class.base::internal::TaskTrackerPosix"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::internal::TaskTrackerPosix"*)*, void (%"class.base::internal::TaskTrackerPosix"*)** %50, i64 1
  %52 = load void (%"class.base::internal::TaskTrackerPosix"*)*, void (%"class.base::internal::TaskTrackerPosix"*)** %51, align 8
  tail call void %52(%"class.base::internal::TaskTrackerPosix"* nonnull %46) #12
  br label %53

53:                                               ; preds = %40, %48
  tail call void @_ZN4base8internal24PooledTaskRunnerDelegateD2Ev(%"class.base::internal::PooledTaskRunnerDelegate"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEED2Ev(%"class.base::internal::TrackedRefFactory.74"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %6) #12
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %8, i32 0, i32 1) #12
  store i8 1, i8* %2, align 8
  %9 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %14 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %13, align 8
  %15 = icmp eq %"class.base::internal::TrackedRefFactory.74"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %13, align 8
  %22 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !7
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26, !prof !8

25:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %27) #12
  br label %28

28:                                               ; preds = %12, %16, %26
  store i8 0, i8* %9, align 8
  %29 = load i8, i8* %2, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32, !prof !8

31:                                               ; preds = %28
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %7, %28
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %8) #12
  %33 = load i8, i8* %9, align 8, !range !7
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %36, align 8
  %38 = icmp eq %"class.base::internal::TrackedRefFactory.74"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = load %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %36, align 8
  %45 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !7
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49, !prof !8

48:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74", %"class.base::internal::TrackedRefFactory.74"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %50) #12
  br label %51

51:                                               ; preds = %49, %39, %35
  store i8 0, i8* %9, align 8
  br label %52

52:                                               ; preds = %32, %51
  %53 = load i8, i8* %2, align 8, !range !7
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %8) #12
  store i8 0, i8* %2, align 8
  br label %56

56:                                               ; preds = %52, %55
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal35PooledSingleThreadTaskRunnerManagerD1Ev(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal18DelayedTaskManagerD1Ev(%"class.base::internal::DelayedTaskManager"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base6ThreadD2Ev(%"class.base::Thread"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal24PooledTaskRunnerDelegateD2Ev(%"class.base::internal::PooledTaskRunnerDelegate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4base8internal14ThreadPoolImplD1Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast %"class.base::internal::TrackedRefFactory.74"** %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N4base8internal14ThreadPoolImplD1Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon.101* %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4base8internal14ThreadPoolImplD1Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImplD0Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %0) #12
  %2 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4base8internal14ThreadPoolImplD0Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %3 = bitcast %"class.base::internal::TrackedRefFactory.74"** %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  %4 = bitcast %"class.base::internal::TrackedRefFactory.74"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N4base8internal14ThreadPoolImplD0Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon.101* %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  %4 = bitcast %union.anon.101* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4base8internal14ThreadPoolImplD0Ev(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast i8* %2 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImplD2Ev(%"class.base::internal::ThreadPoolImpl"* %3) #12
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl5StartERKNS_18ThreadPoolInstance10InitParamsEPNS_20WorkerThreadObserverE(%"class.base::internal::ThreadPoolImpl"*, %"struct.base::ThreadPoolInstance::InitParams"* nocapture readonly dereferenceable(16), %"class.base::WorkerThreadObserver"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.base::Thread::Options", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.absl::optional.135", align 8
  %7 = alloca %"class.absl::optional.135", align 8
  tail call void @_ZN4base8internal33InitializeThreadPrioritiesFeatureEv() #12
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base16kDisableJobYieldE) #12
  %9 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 10
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 8
  %11 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base25kDisableFairJobSchedulingE) #12
  %12 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 11
  %13 = zext i1 %11 to i8
  store i8 %13, i8* %12, align 1
  %14 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base25kDisableJobUpdatePriorityE) #12
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %15, i8* %16 seq_cst, align 1
  %17 = getelementptr inbounds %"struct.base::ThreadPoolInstance::InitParams", %"struct.base::ThreadPoolInstance::InitParams"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 2
  %20 = select i1 %19, i32 %18, i32 2
  %21 = bitcast %"struct.base::Thread::Options"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  call void @_ZN4base6Thread7OptionsC1Ev(%"struct.base::Thread::Options"* nonnull %4) #12
  %22 = getelementptr inbounds %"struct.base::Thread::Options", %"struct.base::Thread::Options"* %4, i64 0, i32 0
  store i32 3, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.base::Thread::Options", %"struct.base::Thread::Options"* %4, i64 0, i32 3
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5
  %25 = bitcast %"class.base::internal::ServiceThread"* %24 to %"class.base::Thread"*
  %26 = call zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"* %25, %"struct.base::Thread::Options"* nonnull dereferenceable(56) %4) #12
  br i1 %26, label %30, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 177, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %3, %27
  %31 = load i8, i8* @_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE, align 1, !range !7
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = call zeroext i1 @_ZNK4base6Thread22WaitUntilThreadStartedEv(%"class.base::Thread"* %25) #12
  br label %35

35:                                               ; preds = %30, %33
  %36 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %36, align 8
  %38 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5, i32 0, i32 11, i32 0, i32 0, i32 0
  %39 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %38, align 8
  %40 = icmp eq %"class.base::Thread::Delegate"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::Thread::Delegate"* %39 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %43 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %43, i64 2
  %45 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %44, align 8
  %46 = call %"class.base::SingleThreadTaskRunner"* %45(%"class.base::Thread::Delegate"* nonnull %39) #12
  %47 = ptrtoint %"class.base::SingleThreadTaskRunner"* %46 to i64
  br label %48

48:                                               ; preds = %35, %41
  %49 = phi i64 [ %47, %41 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %37, i64 0, i32 1
  %51 = bitcast %class.scoped_refptr.43* %50 to i64*
  %52 = getelementptr inbounds %class.scoped_refptr.43, %class.scoped_refptr.43* %50, i64 0, i32 0
  %53 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %52, align 8
  store i64 %49, i64* %51, align 8
  %54 = icmp eq %"class.base::SingleThreadTaskRunner"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %53, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe.44"* %61 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %62) #12
  br label %63

63:                                               ; preds = %48, %55, %60
  %64 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %73 = load i8, i8* %72, align 4, !range !7
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %71, %67, %63
  %76 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %36, align 8
  %77 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %76, i64 0, i32 0
  %78 = call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %77) #12
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = load i32, i32* %64, align 8
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i32 1, i32 2
  br label %83

83:                                               ; preds = %79, %75, %71
  %84 = phi i32 [ 0, %71 ], [ 0, %75 ], [ %82, %79 ]
  %85 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %36, align 8
  %86 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %85, i64 0, i32 0
  call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %86, i32 %84) #12
  %87 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %88 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %87, align 8
  %89 = bitcast %"class.base::internal::ThreadGroup"* %88 to void (%"class.base::internal::ThreadGroup"*)***
  %90 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %90, i64 6
  %92 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %91, align 8
  call void %92(%"class.base::internal::ThreadGroup"* %88) #12
  %93 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %94 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %93, align 8
  %95 = icmp eq %"class.base::internal::ThreadGroup"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %83
  %97 = bitcast %"class.base::internal::ThreadGroup"* %94 to void (%"class.base::internal::ThreadGroup"*)***
  %98 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %98, i64 6
  %100 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %99, align 8
  call void %100(%"class.base::internal::ThreadGroup"* nonnull %94) #12
  br label %101

101:                                              ; preds = %83, %96
  %102 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %102) #12
  %103 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %38, align 8
  %104 = icmp eq %"class.base::Thread::Delegate"* %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  br label %119

107:                                              ; preds = %101
  %108 = bitcast %"class.base::Thread::Delegate"* %103 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %109 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %108, align 8
  %110 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %109, i64 2
  %111 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %110, align 8
  %112 = call %"class.base::SingleThreadTaskRunner"* %111(%"class.base::Thread::Delegate"* nonnull %103) #12
  %113 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  %114 = bitcast %"class.base::SingleThreadTaskRunner"* %112 to %"class.base::SequencedTaskRunner"*
  %115 = icmp eq %"class.base::SingleThreadTaskRunner"* %112, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %112, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 1 monotonic
  br label %119

119:                                              ; preds = %105, %107, %116
  %120 = phi i1 [ true, %105 ], [ true, %107 ], [ false, %116 ]
  %121 = phi %"class.base::SequencedTaskRunner"* [ null, %105 ], [ %114, %107 ], [ %114, %116 ]
  %122 = phi %"class.base::internal::DelayedTaskManager"* [ %106, %105 ], [ %113, %107 ], [ %113, %116 ]
  %123 = phi %"class.base::SingleThreadTaskRunner"* [ null, %105 ], [ null, %107 ], [ %112, %116 ]
  call void @_ZN4base8internal18DelayedTaskManager5StartE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::DelayedTaskManager"* %122, %"class.base::SequencedTaskRunner"* %121) #12
  call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager5StartEPNS_20WorkerThreadObserverE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %102, %"class.base::WorkerThreadObserver"* %2) #12
  %124 = getelementptr inbounds %"struct.base::ThreadPoolInstance::InitParams", %"struct.base::ThreadPoolInstance::InitParams"* %1, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  %127 = select i1 %126, i32 0, i32 -1431655766
  %128 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base32kUseFiveMinutesThreadReclaimTimeE) #12
  %129 = getelementptr inbounds %"struct.base::ThreadPoolInstance::InitParams", %"struct.base::ThreadPoolInstance::InitParams"* %1, i64 0, i32 2, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = select i1 %128, i64 300000000, i64 %130
  %132 = bitcast %"class.base::internal::ThreadGroup"** %87 to %"class.base::internal::ThreadGroupImpl"**
  %133 = load %"class.base::internal::ThreadGroupImpl"*, %"class.base::internal::ThreadGroupImpl"** %132, align 8
  %134 = load i32, i32* %17, align 8
  br i1 %120, label %138, label %135

135:                                              ; preds = %119
  %136 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %123, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 1 monotonic
  br label %138

138:                                              ; preds = %119, %135
  %139 = load i8, i8* @_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE, align 1, !range !7
  %140 = icmp ne i8 %139, 0
  %141 = getelementptr inbounds %"class.absl::optional.135", %"class.absl::optional.135"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %141, align 8
  call void @_ZN4base8internal15ThreadGroupImpl5StartEiiNS_9TimeDeltaE13scoped_refptrINS_19SequencedTaskRunnerEEPNS_20WorkerThreadObserverENS0_11ThreadGroup17WorkerEnvironmentEbN4absl8optionalIS2_EE(%"class.base::internal::ThreadGroupImpl"* %133, i32 %134, i32 %20, i64 %131, %"class.base::SequencedTaskRunner"* %121, %"class.base::WorkerThreadObserver"* %2, i32 %127, i1 zeroext %140, %"class.absl::optional.135"* nonnull byval(%"class.absl::optional.135") align 8 %6) #12
  %142 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %93, align 8
  %143 = icmp eq %"class.base::internal::ThreadGroup"* %142, null
  br i1 %143, label %153, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.base::internal::ThreadGroup"* %142 to %"class.base::internal::ThreadGroupImpl"*
  br i1 %120, label %163, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %123, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic
  %149 = load i8, i8* @_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE, align 1, !range !7
  %150 = icmp ne i8 %149, 0
  %151 = getelementptr inbounds %"class.absl::optional.135", %"class.absl::optional.135"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %151, align 8
  call void @_ZN4base8internal15ThreadGroupImpl5StartEiiNS_9TimeDeltaE13scoped_refptrINS_19SequencedTaskRunnerEEPNS_20WorkerThreadObserverENS0_11ThreadGroup17WorkerEnvironmentEbN4absl8optionalIS2_EE(%"class.base::internal::ThreadGroupImpl"* nonnull %145, i32 %20, i32 %20, i64 %131, %"class.base::SequencedTaskRunner"* %121, %"class.base::WorkerThreadObserver"* %2, i32 %127, i1 zeroext %150, %"class.absl::optional.135"* nonnull byval(%"class.absl::optional.135") align 8 %7) #12
  %152 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 13
  store i8 1, i8* %152, align 1
  br label %155

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 13
  store i8 1, i8* %154, align 1
  br i1 %120, label %168, label %155

155:                                              ; preds = %146, %153
  %156 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %123, i64 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw sub i32* %157, i32 1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %168

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.base::RefCountedThreadSafe.44", %"class.base::RefCountedThreadSafe.44"* %156, i64 -2
  %162 = bitcast %"class.base::RefCountedThreadSafe.44"* %161 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %162) #12
  br label %168

163:                                              ; preds = %144
  %164 = load i8, i8* @_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE, align 1, !range !7
  %165 = icmp ne i8 %164, 0
  %166 = getelementptr inbounds %"class.absl::optional.135", %"class.absl::optional.135"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %166, align 8
  call void @_ZN4base8internal15ThreadGroupImpl5StartEiiNS_9TimeDeltaE13scoped_refptrINS_19SequencedTaskRunnerEEPNS_20WorkerThreadObserverENS0_11ThreadGroup17WorkerEnvironmentEbN4absl8optionalIS2_EE(%"class.base::internal::ThreadGroupImpl"* nonnull %145, i32 %20, i32 %20, i64 %131, %"class.base::SequencedTaskRunner"* %121, %"class.base::WorkerThreadObserver"* %2, i32 %127, i1 zeroext %165, %"class.absl::optional.135"* nonnull byval(%"class.absl::optional.135") align 8 %7) #12
  %167 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 13
  store i8 1, i8* %167, align 1
  br label %168

168:                                              ; preds = %163, %153, %155, %160
  call void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %21) #12
  ret void
}

declare void @_ZN4base8internal33InitializeThreadPrioritiesFeatureEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base6Thread7OptionsC1Ev(%"struct.base::Thread::Options"*) unnamed_addr #2

declare zeroext i1 @_ZN4base6Thread16StartWithOptionsERKNS0_7OptionsE(%"class.base::Thread"*, %"struct.base::Thread::Options"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare zeroext i1 @_ZNK4base6Thread22WaitUntilThreadStartedEv(%"class.base::Thread"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl18UpdateCanRunPolicyEv(%"class.base::internal::ThreadPoolImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %11 = load i8, i8* %10, align 4, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %9, %5, %1
  %14 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %16) #12
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %2, align 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  br label %22

22:                                               ; preds = %18, %13, %9
  %23 = phi i32 [ 0, %9 ], [ 0, %13 ], [ %21, %18 ]
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %25, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %26, i32 %23) #12
  %27 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %27, align 8
  %29 = bitcast %"class.base::internal::ThreadGroup"* %28 to void (%"class.base::internal::ThreadGroup"*)***
  %30 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %30, i64 6
  %32 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %31, align 8
  tail call void %32(%"class.base::internal::ThreadGroup"* %28) #12
  %33 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %33, align 8
  %35 = icmp eq %"class.base::internal::ThreadGroup"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %22
  %37 = bitcast %"class.base::internal::ThreadGroup"* %34 to void (%"class.base::internal::ThreadGroup"*)***
  %38 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %38, i64 6
  %40 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %39, align 8
  tail call void %40(%"class.base::internal::ThreadGroup"* nonnull %34) #12
  br label %41

41:                                               ; preds = %22, %36
  %42 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %42) #12
  ret void
}

declare void @_ZN4base8internal18DelayedTaskManager5StartE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::DelayedTaskManager"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager5StartEPNS_20WorkerThreadObserverE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*, %"class.base::WorkerThreadObserver"*) local_unnamed_addr #2

declare void @_ZN4base8internal15ThreadGroupImpl5StartEiiNS_9TimeDeltaE13scoped_refptrINS_19SequencedTaskRunnerEEPNS_20WorkerThreadObserverENS0_11ThreadGroup17WorkerEnvironmentEbN4absl8optionalIS2_EE(%"class.base::internal::ThreadGroupImpl"*, i32, i32, i64, %"class.base::SequencedTaskRunner"*, %"class.base::WorkerThreadObserver"*, i32, i1 zeroext, %"class.absl::optional.135"* byval(%"class.absl::optional.135") align 8) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6Thread7OptionsD1Ev(%"struct.base::Thread::Options"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14ThreadPoolImpl15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.base::internal::Task", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  call void @_ZN4base8internal4TaskC1ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksENS_9TimeDeltaE(%"struct.base::internal::Task"* nonnull %6, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %7, i64 %12, i64 %4) #12
  %13 = call i8* @_Znwm(i64 168) #11
  %14 = bitcast i8* %13 to %"class.base::internal::Sequence"*
  call void @_ZN4base8internal8SequenceC1ERKNS_10TaskTraitsEPNS_10TaskRunnerENS0_23TaskSourceExecutionModeE(%"class.base::internal::Sequence"* nonnull %14, %"class.base::TaskTraits"* dereferenceable(15) %2, %"class.base::TaskRunner"* null, i32 0) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)***
  %19 = load i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)**, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)** %19, i64 21
  %21 = load i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)** %20, align 8
  %22 = call zeroext i1 %21(%"class.base::internal::ThreadPoolImpl"* %0, %"struct.base::internal::Task"* nonnull %6, %"class.base::internal::Sequence"* nonnull %14) #12
  %23 = bitcast %"struct.base::internal::Task"* %6 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %23) #12
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #12
  ret i1 %22
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN4base8internal4TaskC1ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksENS_9TimeDeltaE(%"struct.base::internal::Task"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn8_N4base8internal14ThreadPoolImpl15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.base::internal::Task", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.base::internal::TrackedRefFactory.74"** %8 to %"class.base::internal::ThreadPoolImpl"*
  %10 = bitcast %"struct.base::internal::Task"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10)
  %11 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  call void @_ZN4base8internal4TaskC1ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksENS_9TimeDeltaE(%"struct.base::internal::Task"* nonnull %6, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %7, i64 %16, i64 %4) #12
  %17 = call i8* @_Znwm(i64 168) #11
  %18 = bitcast i8* %17 to %"class.base::internal::Sequence"*
  call void @_ZN4base8internal8SequenceC1ERKNS_10TaskTraitsEPNS_10TaskRunnerENS0_23TaskSourceExecutionModeE(%"class.base::internal::Sequence"* nonnull %18, %"class.base::TaskTraits"* dereferenceable(15) %2, %"class.base::TaskRunner"* null, i32 0) #12
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  %22 = bitcast %"class.base::internal::TrackedRefFactory.74"** %8 to i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)***
  %23 = load i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)**, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)** %23, i64 21
  %25 = load i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)*, i1 (%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.base::internal::ThreadPoolImpl"* %9, %"struct.base::internal::Task"* nonnull %6, %"class.base::internal::Sequence"* nonnull %18) #12
  %27 = bitcast %"struct.base::internal::Task"* %6 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %27) #12
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::TaskRunner"* @_ZN4base8internal14ThreadPoolImpl16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 104) #11
  %4 = bitcast i8* %3 to %"class.base::internal::PooledParallelTaskRunner"*
  %5 = icmp eq %"class.base::internal::ThreadPoolImpl"* %0, null
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 3
  %7 = select i1 %5, %"class.base::internal::PooledTaskRunnerDelegate"* null, %"class.base::internal::PooledTaskRunnerDelegate"* %6
  tail call void @_ZN4base8internal24PooledParallelTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledParallelTaskRunner"* nonnull %4, %"class.base::TaskTraits"* dereferenceable(15) %1, %"class.base::internal::PooledTaskRunnerDelegate"* %7) #12
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = bitcast i8* %3 to %"class.base::TaskRunner"*
  ret %"class.base::TaskRunner"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::TaskRunner"* @_ZThn8_N4base8internal14ThreadPoolImpl16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = tail call i8* @_Znwm(i64 104) #11
  %5 = bitcast i8* %4 to %"class.base::internal::PooledParallelTaskRunner"*
  %6 = icmp eq %"class.base::internal::TrackedRefFactory.74"** %3, null
  %7 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %3, i64 3
  %8 = bitcast %"class.base::internal::TrackedRefFactory.74"** %7 to %"class.base::internal::PooledTaskRunnerDelegate"*
  %9 = select i1 %6, %"class.base::internal::PooledTaskRunnerDelegate"* null, %"class.base::internal::PooledTaskRunnerDelegate"* %8
  tail call void @_ZN4base8internal24PooledParallelTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledParallelTaskRunner"* nonnull %5, %"class.base::TaskTraits"* dereferenceable(15) %1, %"class.base::internal::PooledTaskRunnerDelegate"* %9) #12
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = bitcast i8* %4 to %"class.base::TaskRunner"*
  ret %"class.base::TaskRunner"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN4base8internal14ThreadPoolImpl25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #11
  %4 = bitcast i8* %3 to %"class.base::internal::PooledSequencedTaskRunner"*
  %5 = icmp eq %"class.base::internal::ThreadPoolImpl"* %0, null
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 3
  %7 = select i1 %5, %"class.base::internal::PooledTaskRunnerDelegate"* null, %"class.base::internal::PooledTaskRunnerDelegate"* %6
  tail call void @_ZN4base8internal25PooledSequencedTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledSequencedTaskRunner"* nonnull %4, %"class.base::TaskTraits"* dereferenceable(15) %1, %"class.base::internal::PooledTaskRunnerDelegate"* %7) #12
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = bitcast i8* %3 to %"class.base::SequencedTaskRunner"*
  ret %"class.base::SequencedTaskRunner"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::SequencedTaskRunner"* @_ZThn8_N4base8internal14ThreadPoolImpl25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = tail call i8* @_Znwm(i64 32) #11
  %5 = bitcast i8* %4 to %"class.base::internal::PooledSequencedTaskRunner"*
  %6 = icmp eq %"class.base::internal::TrackedRefFactory.74"** %3, null
  %7 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %3, i64 3
  %8 = bitcast %"class.base::internal::TrackedRefFactory.74"** %7 to %"class.base::internal::PooledTaskRunnerDelegate"*
  %9 = select i1 %6, %"class.base::internal::PooledTaskRunnerDelegate"* null, %"class.base::internal::PooledTaskRunnerDelegate"* %8
  tail call void @_ZN4base8internal25PooledSequencedTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledSequencedTaskRunner"* nonnull %5, %"class.base::TaskTraits"* dereferenceable(15) %1, %"class.base::internal::PooledTaskRunnerDelegate"* %9) #12
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = bitcast i8* %4 to %"class.base::SequencedTaskRunner"*
  ret %"class.base::SequencedTaskRunner"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN4base8internal14ThreadPoolImpl28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  %5 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN4base8internal35PooledSingleThreadTaskRunnerManager28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %4, %"class.base::TaskTraits"* dereferenceable(15) %1, i32 %2) #12
  ret %"class.base::SingleThreadTaskRunner"* %5
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN4base8internal35PooledSingleThreadTaskRunnerManager28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*, %"class.base::TaskTraits"* dereferenceable(15), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZThn8_N4base8internal14ThreadPoolImpl28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %5 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.74"*, %"class.base::internal::TrackedRefFactory.74"** %4, i64 41
  %6 = bitcast %"class.base::internal::TrackedRefFactory.74"** %5 to %"class.base::internal::PooledSingleThreadTaskRunnerManager"*
  %7 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN4base8internal35PooledSingleThreadTaskRunnerManager28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %6, %"class.base::TaskTraits"* dereferenceable(15) %1, i32 %2) #12
  ret %"class.base::SingleThreadTaskRunner"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::UpdateableSequencedTaskRunner"* @_ZN4base8internal14ThreadPoolImpl35CreateUpdateableSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #11
  %4 = bitcast i8* %3 to %"class.base::internal::PooledSequencedTaskRunner"*
  %5 = icmp eq %"class.base::internal::ThreadPoolImpl"* %0, null
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 3
  %7 = select i1 %5, %"class.base::internal::PooledTaskRunnerDelegate"* null, %"class.base::internal::PooledTaskRunnerDelegate"* %6
  tail call void @_ZN4base8internal25PooledSequencedTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledSequencedTaskRunner"* nonnull %4, %"class.base::TaskTraits"* dereferenceable(15) %1, %"class.base::internal::PooledTaskRunnerDelegate"* %7) #12
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = bitcast i8* %3 to %"class.base::UpdateableSequencedTaskRunner"*
  ret %"class.base::UpdateableSequencedTaskRunner"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK4base8internal14ThreadPoolImpl30NextScheduledRunTimeForTestingEv(%"class.base::internal::ThreadPoolImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %3, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker34HasIncompleteTaskSourcesForTestingEv(%"class.base::internal::TaskTracker"* %4) #12
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  br label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  %10 = tail call { i8, i64 } @_ZNK4base8internal18DelayedTaskManager20NextScheduledRunTimeEv(%"class.base::internal::DelayedTaskManager"* %9) #12
  %11 = extractvalue { i8, i64 } %10, 0
  %12 = extractvalue { i8, i64 } %10, 1
  br label %13

13:                                               ; preds = %8, %6
  %14 = phi i8 [ 1, %6 ], [ %11, %8 ]
  %15 = phi i64 [ %7, %6 ], [ %12, %8 ]
  %16 = insertvalue { i8, i64 } undef, i8 %14, 0
  %17 = insertvalue { i8, i64 } %16, i64 %15, 1
  ret { i8, i64 } %17
}

declare zeroext i1 @_ZNK4base8internal11TaskTracker34HasIncompleteTaskSourcesForTestingEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

declare { i8, i64 } @_ZNK4base8internal18DelayedTaskManager20NextScheduledRunTimeEv(%"class.base::internal::DelayedTaskManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl33ProcessRipeDelayedTasksForTestingEv(%"class.base::internal::ThreadPoolImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  tail call void @_ZN4base8internal18DelayedTaskManager16ProcessRipeTasksEv(%"class.base::internal::DelayedTaskManager"* %2) #12
  ret void
}

declare void @_ZN4base8internal18DelayedTaskManager16ProcessRipeTasksEv(%"class.base::internal::DelayedTaskManager"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal14ThreadPoolImpl35SetSynchronousThreadStartForTestingEb(i1 zeroext) local_unnamed_addr #6 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN4base8internal12_GLOBAL__N_138g_synchronous_thread_start_for_testingE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base8internal14ThreadPoolImpl51GetMaxConcurrentNonBlockedTasksWithTraitsDeprecatedERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %4 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %4, i64 20
  %6 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %5, align 8
  %7 = tail call %"class.base::internal::ThreadGroup"* %6(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* dereferenceable(15) %1) #12
  %8 = bitcast %"class.base::internal::ThreadGroup"* %7 to i64 (%"class.base::internal::ThreadGroup"*)***
  %9 = load i64 (%"class.base::internal::ThreadGroup"*)**, i64 (%"class.base::internal::ThreadGroup"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.base::internal::ThreadGroup"*)*, i64 (%"class.base::internal::ThreadGroup"*)** %9, i64 5
  %11 = load i64 (%"class.base::internal::ThreadGroup"*)*, i64 (%"class.base::internal::ThreadGroup"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::ThreadGroup"* %7) #12
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::ThreadGroup"* @_ZNK4base8internal14ThreadPoolImpl23GetThreadGroupForTraitsERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %4 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %4, i64 20
  %6 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %5, align 8
  %7 = tail call %"class.base::internal::ThreadGroup"* %6(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* dereferenceable(15) %1) #12
  ret %"class.base::internal::ThreadGroup"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl8ShutdownEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5
  %3 = bitcast %"class.base::internal::ServiceThread"* %2 to %"class.base::Thread"*
  tail call void @_ZN4base6Thread4StopEv(%"class.base::Thread"* %3) #12
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker13StartShutdownEv(%"class.base::internal::TaskTracker"* %6) #12
  %7 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %16 = load i8, i8* %15, align 4, !range !7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %14, %10, %1
  %19 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %4, align 8
  %20 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %19, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %20) #12
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 8
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  br label %26

26:                                               ; preds = %22, %18, %14
  %27 = phi i32 [ 0, %14 ], [ 0, %18 ], [ %25, %22 ]
  %28 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %4, align 8
  %29 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %29, i32 %27) #12
  %30 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %30, align 8
  %32 = bitcast %"class.base::internal::ThreadGroup"* %31 to void (%"class.base::internal::ThreadGroup"*)***
  %33 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %33, i64 6
  %35 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %34, align 8
  tail call void %35(%"class.base::internal::ThreadGroup"* %31) #12
  %36 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %37 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %36, align 8
  %38 = icmp eq %"class.base::internal::ThreadGroup"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %26
  %40 = bitcast %"class.base::internal::ThreadGroup"* %37 to void (%"class.base::internal::ThreadGroup"*)***
  %41 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %41, i64 6
  %43 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %42, align 8
  tail call void %43(%"class.base::internal::ThreadGroup"* nonnull %37) #12
  br label %44

44:                                               ; preds = %26, %39
  %45 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %45) #12
  %46 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %4, align 8
  %47 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %46, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker16CompleteShutdownEv(%"class.base::internal::TaskTracker"* %47) #12
  ret void
}

declare void @_ZN4base6Thread4StopEv(%"class.base::Thread"*) local_unnamed_addr #2

declare void @_ZN4base8internal11TaskTracker13StartShutdownEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

declare void @_ZN4base8internal11TaskTracker16CompleteShutdownEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl15FlushForTestingEv(%"class.base::internal::ThreadPoolImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15FlushForTestingEv(%"class.base::internal::TaskTracker"* %4) #12
  ret void
}

declare void @_ZN4base8internal11TaskTracker15FlushForTestingEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl20FlushAsyncForTestingENS_12OnceCallbackIFvvEEE(%"class.base::internal::ThreadPoolImpl"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  call void @_ZN4base8internal11TaskTracker20FlushAsyncForTestingENS_12OnceCallbackIFvvEEE(%"class.base::internal::TaskTracker"* %6, %"class.base::OnceCallback"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #12
  ret void
}

declare void @_ZN4base8internal11TaskTracker20FlushAsyncForTestingENS_12OnceCallbackIFvvEEE(%"class.base::internal::TaskTracker"*, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl14JoinForTestingEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 5
  %3 = bitcast %"class.base::internal::ServiceThread"* %2 to %"class.base::Thread"*
  tail call void @_ZN4base6Thread4StopEv(%"class.base::Thread"* %3) #12
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager14JoinForTestingEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %4) #12
  %5 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %5, align 8
  %7 = bitcast %"class.base::internal::ThreadGroup"* %6 to void (%"class.base::internal::ThreadGroup"*)***
  %8 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %8, i64 4
  %10 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %9, align 8
  tail call void %10(%"class.base::internal::ThreadGroup"* %6) #12
  %11 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %11, align 8
  %13 = icmp eq %"class.base::internal::ThreadGroup"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.base::internal::ThreadGroup"* %12 to void (%"class.base::internal::ThreadGroup"*)***
  %16 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %16, i64 4
  %18 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %17, align 8
  tail call void %18(%"class.base::internal::ThreadGroup"* nonnull %12) #12
  br label %19

19:                                               ; preds = %1, %14
  ret void
}

declare void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager14JoinForTestingEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl10BeginFenceEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %12 = load i8, i8* %11, align 4, !range !7
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10, %6, %1
  %15 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %16, i64 0, i32 0
  %18 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %17) #12
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = load i32, i32* %2, align 8
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i32 1, i32 2
  br label %23

23:                                               ; preds = %19, %14, %10
  %24 = phi i32 [ 0, %10 ], [ 0, %14 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %25, align 8
  %27 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %26, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %27, i32 %24) #12
  %28 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %28, align 8
  %30 = bitcast %"class.base::internal::ThreadGroup"* %29 to void (%"class.base::internal::ThreadGroup"*)***
  %31 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %31, i64 6
  %33 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %32, align 8
  tail call void %33(%"class.base::internal::ThreadGroup"* %29) #12
  %34 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %35 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %34, align 8
  %36 = icmp eq %"class.base::internal::ThreadGroup"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.base::internal::ThreadGroup"* %35 to void (%"class.base::internal::ThreadGroup"*)***
  %39 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %39, i64 6
  %41 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %40, align 8
  tail call void %41(%"class.base::internal::ThreadGroup"* nonnull %35) #12
  br label %42

42:                                               ; preds = %23, %37
  %43 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %43) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl8EndFenceEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %12 = load i8, i8* %11, align 4, !range !7
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10, %6, %1
  %15 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %16, i64 0, i32 0
  %18 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %17) #12
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = load i32, i32* %2, align 8
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i32 1, i32 2
  br label %23

23:                                               ; preds = %19, %14, %10
  %24 = phi i32 [ 0, %10 ], [ 0, %14 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %25, align 8
  %27 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %26, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %27, i32 %24) #12
  %28 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %28, align 8
  %30 = bitcast %"class.base::internal::ThreadGroup"* %29 to void (%"class.base::internal::ThreadGroup"*)***
  %31 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %31, i64 6
  %33 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %32, align 8
  tail call void %33(%"class.base::internal::ThreadGroup"* %29) #12
  %34 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %35 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %34, align 8
  %36 = icmp eq %"class.base::internal::ThreadGroup"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.base::internal::ThreadGroup"* %35 to void (%"class.base::internal::ThreadGroup"*)***
  %39 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %39, i64 6
  %41 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %40, align 8
  tail call void %41(%"class.base::internal::ThreadGroup"* nonnull %35) #12
  br label %42

42:                                               ; preds = %23, %37
  %43 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %43) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl20BeginBestEffortFenceEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, %4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %11 = load i8, i8* %10, align 4, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %16) #12
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %5, align 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  br label %22

22:                                               ; preds = %18, %13, %9
  %23 = phi i32 [ 0, %9 ], [ 0, %13 ], [ %21, %18 ]
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %25, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %26, i32 %23) #12
  %27 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %27, align 8
  %29 = bitcast %"class.base::internal::ThreadGroup"* %28 to void (%"class.base::internal::ThreadGroup"*)***
  %30 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %30, i64 6
  %32 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %31, align 8
  tail call void %32(%"class.base::internal::ThreadGroup"* %28) #12
  %33 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %33, align 8
  %35 = icmp eq %"class.base::internal::ThreadGroup"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %22
  %37 = bitcast %"class.base::internal::ThreadGroup"* %34 to void (%"class.base::internal::ThreadGroup"*)***
  %38 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %38, i64 6
  %40 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %39, align 8
  tail call void %40(%"class.base::internal::ThreadGroup"* nonnull %34) #12
  br label %41

41:                                               ; preds = %22, %36
  %42 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %42) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl18EndBestEffortFenceEv(%"class.base::internal::ThreadPoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, %4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 14
  %11 = load i8, i8* %10, align 4, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* %16) #12
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %5, align 8
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  br label %22

22:                                               ; preds = %18, %13, %9
  %23 = phi i32 [ 0, %9 ], [ 0, %13 ], [ %21, %18 ]
  %24 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %25, i64 0, i32 0
  tail call void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* %26, i32 %23) #12
  %27 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %27, align 8
  %29 = bitcast %"class.base::internal::ThreadGroup"* %28 to void (%"class.base::internal::ThreadGroup"*)***
  %30 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %30, i64 6
  %32 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %31, align 8
  tail call void %32(%"class.base::internal::ThreadGroup"* %28) #12
  %33 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %33, align 8
  %35 = icmp eq %"class.base::internal::ThreadGroup"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %22
  %37 = bitcast %"class.base::internal::ThreadGroup"* %34 to void (%"class.base::internal::ThreadGroup"*)***
  %38 = load void (%"class.base::internal::ThreadGroup"*)**, void (%"class.base::internal::ThreadGroup"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %38, i64 6
  %40 = load void (%"class.base::internal::ThreadGroup"*)*, void (%"class.base::internal::ThreadGroup"*)** %39, align 8
  tail call void %40(%"class.base::internal::ThreadGroup"* nonnull %34) #12
  br label %41

41:                                               ; preds = %22, %36
  %42 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 7
  tail call void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"* %42) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14ThreadPoolImpl23PostTaskWithSequenceNowENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::Sequence::Transaction", align 8
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %7 = alloca %"struct.base::internal::Task", align 8
  %8 = alloca %"class.base::TaskTraits", align 1
  %9 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %10 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %11 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %12 = bitcast %"class.base::internal::Sequence::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.base::internal::Sequence::Transaction", %"class.base::internal::Sequence::Transaction"* %4, i64 0, i32 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %13, align 8
  call void @_ZN4base8internal8Sequence16BeginTransactionEv(%"class.base::internal::Sequence::Transaction"* nonnull sret %4, %"class.base::internal::Sequence"* %2) #12
  %14 = call zeroext i1 @_ZNK4base8internal8Sequence11Transaction12WillPushTaskEv(%"class.base::internal::Sequence::Transaction"* nonnull %4) #12
  %15 = bitcast %"class.base::internal::RegisteredTaskSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %5, i64 0, i32 0, i32 0
  %17 = bitcast %"class.base::internal::RegisteredTaskSource"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZN4base8internal20RegisteredTaskSourceC1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #12
  br i1 %14, label %18, label %32

18:                                               ; preds = %3
  %19 = bitcast %"class.base::internal::RegisteredTaskSource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %20, align 8
  %22 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %21, i64 0, i32 0
  %23 = bitcast %"class.base::internal::Sequence"* %2 to %"class.base::internal::TaskSource"*
  %24 = icmp eq %"class.base::internal::Sequence"* %2, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %18, %25
  call void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %6, %"class.base::internal::TaskTracker"* %22, %"class.base::internal::TaskSource"* %23) #12
  %29 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %5, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %6) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %30 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %16, align 8
  %31 = icmp eq %"class.base::internal::TaskSource"* %30, null
  br i1 %31, label %63, label %32

32:                                               ; preds = %28, %3
  %33 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %33, align 8
  %35 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::internal::Sequence::Transaction", %"class.base::internal::Sequence::Transaction"* %4, i64 0, i32 0
  %37 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %13, align 8, !noalias !25
  %38 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %37, i64 0, i32 2, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = call zeroext i1 @_ZN4base8internal11TaskTracker15WillPostTaskNowERKNS0_4TaskENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* %35, %"struct.base::internal::Task"* dereferenceable(112) %1, i8 zeroext %39) #12
  br i1 %40, label %41, label %63

41:                                               ; preds = %32
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %7, %"struct.base::internal::Task"* dereferenceable(112) %1) #12
  call void @_ZN4base8internal8Sequence11Transaction8PushTaskENS0_4TaskE(%"class.base::internal::Sequence::Transaction"* nonnull %4, %"struct.base::internal::Task"* nonnull %7) #12
  %42 = bitcast %"struct.base::internal::Task"* %7 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %42) #12
  %43 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %16, align 8
  %44 = icmp eq %"class.base::internal::TaskSource"* %43, null
  br i1 %44, label %63, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %8, i64 0, i32 1
  %48 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %13, align 8, !noalias !28
  %49 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds i8, i8* %46, i64 9
  call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 -86, i64 6, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %49, i64 9, i1 false) #12
  %51 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %48, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %51, i64 6, i1 false) #12
  %52 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %53 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %53, i64 20
  %55 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %54, align 8
  %56 = call %"class.base::internal::ThreadGroup"* %55(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %8) #12
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %10, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %5) #12
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* nonnull %11, %"class.base::internal::TaskSource::Transaction"* nonnull dereferenceable(8) %36) #12
  call void @_ZN4base8internal35TransactionWithRegisteredTaskSourceC1ENS0_20RegisteredTaskSourceENS0_10TaskSource11TransactionE(%"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %9, %"class.base::internal::RegisteredTaskSource"* nonnull %10, %"class.base::internal::TaskSource::Transaction"* nonnull %11) #12
  %57 = bitcast %"class.base::internal::ThreadGroup"* %56 to void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)***
  %58 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)**, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %58, i64 3
  %60 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %59, align 8
  call void %60(%"class.base::internal::ThreadGroup"* %56, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %9) #12
  %61 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %61) #12
  %62 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %62) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %11) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %46) #12
  br label %63

63:                                               ; preds = %28, %41, %45, %32
  %64 = phi i1 [ false, %28 ], [ false, %32 ], [ true, %45 ], [ true, %41 ]
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @_ZN4base8internal8Sequence11TransactionD1Ev(%"class.base::internal::Sequence::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %65 = icmp eq %"class.base::internal::Sequence"* %2, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %2, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %67, i64 -2
  %73 = bitcast %"class.base::RefCountedThreadSafe.144"* %72 to %"class.base::internal::TaskSource"*
  %74 = bitcast %"class.base::RefCountedThreadSafe.144"* %72 to void (%"class.base::internal::TaskSource"*)***
  %75 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %75, i64 4
  %77 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %76, align 8
  call void %77(%"class.base::internal::TaskSource"* nonnull %73) #12
  br label %78

78:                                               ; preds = %63, %66, %71
  ret i1 %64
}

declare void @_ZN4base8internal8Sequence16BeginTransactionEv(%"class.base::internal::Sequence::Transaction"* sret, %"class.base::internal::Sequence"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal8Sequence11Transaction12WillPushTaskEv(%"class.base::internal::Sequence::Transaction"*) local_unnamed_addr #2

declare void @_ZN4base8internal20RegisteredTaskSourceC1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #2

declare void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskSource"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #4

declare zeroext i1 @_ZN4base8internal11TaskTracker15WillPostTaskNowERKNS0_4TaskENS_12TaskPriorityE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"* dereferenceable(112), i8 zeroext) local_unnamed_addr #2

declare void @_ZN4base8internal8Sequence11Transaction8PushTaskENS0_4TaskE(%"class.base::internal::Sequence::Transaction"*, %"struct.base::internal::Task"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"*, %"struct.base::internal::Task"* dereferenceable(112)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"*, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base8internal35TransactionWithRegisteredTaskSourceC1ENS0_20RegisteredTaskSourceENS0_10TaskSource11TransactionE(%"struct.base::internal::TransactionWithRegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::TaskSource::Transaction"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8Sequence11TransactionD1Ev(%"class.base::internal::Sequence::Transaction"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"struct.base::internal::Task", align 8
  %6 = alloca %"struct.base::internal::Task", align 8
  %7 = alloca %"class.base::OnceCallback.55", align 8
  %8 = ptrtoint %"class.base::internal::Sequence"* %2 to i64
  %9 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %11 = icmp eq %"class.base::internal::BindStateBase"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 437, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #12
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %15

15:                                               ; preds = %3, %12
  %16 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %2, i64 0, i32 0, i32 2, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 127
  %22 = call zeroext i1 @_ZN4base8internal11TaskTracker12WillPostTaskEPNS0_4TaskENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"* %18, %"struct.base::internal::Task"* %1, i8 zeroext %21) #12
  br i1 %22, label %23, label %49

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %5, %"struct.base::internal::Task"* dereferenceable(112) %1) #12
  %28 = call zeroext i1 @_ZN4base8internal14ThreadPoolImpl23PostTaskWithSequenceNowENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"* %0, %"struct.base::internal::Task"* nonnull %5, %"class.base::internal::Sequence"* %2)
  %29 = bitcast %"struct.base::internal::Task"* %5 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %29) #12
  br label %63

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %2, i64 0, i32 0, i32 7
  %32 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %31, align 8
  %33 = icmp eq %"class.base::TaskRunner"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %34, %30
  %38 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 6
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %6, %"struct.base::internal::Task"* dereferenceable(112) %1) #12
  %39 = ptrtoint %"class.base::internal::ThreadPoolImpl"* %0 to i64
  %40 = call i8* @_Znwm(i64 56) #11, !noalias !31
  %41 = bitcast i8* %40 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.base::internal::Task"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS7_NS0_17UnretainedWrapperIS3_EEEEEFvS4_EE7RunOnceEPNS0_13BindStateBaseEOS4_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS6_NS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !31
  %42 = getelementptr inbounds i8, i8* %40, i64 40
  %43 = bitcast i8* %42 to i64*
  store i64 %8, i64* %43, align 8, !noalias !31
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = bitcast i8* %44 to i64*
  store i64 %39, i64* %45, align 8, !noalias !31
  %46 = bitcast %"class.base::OnceCallback.55"* %7 to i8**
  store i8* %40, i8** %46, align 8, !alias.scope !31
  call void @_ZN4base8internal18DelayedTaskManager14AddDelayedTaskENS0_4TaskENS_12OnceCallbackIFvS2_EEE13scoped_refptrINS_10TaskRunnerEE(%"class.base::internal::DelayedTaskManager"* %38, %"struct.base::internal::Task"* nonnull %6, %"class.base::OnceCallback.55"* nonnull %7, %"class.base::TaskRunner"* %32) #12
  %47 = getelementptr inbounds %"class.base::OnceCallback.55", %"class.base::OnceCallback.55"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #12
  %48 = bitcast %"struct.base::internal::Task"* %6 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %48) #12
  br label %63

49:                                               ; preds = %15
  %50 = icmp eq %"class.base::internal::Sequence"* %2, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %2, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe.144"* %57 to %"class.base::internal::TaskSource"*
  %59 = bitcast %"class.base::RefCountedThreadSafe.144"* %57 to void (%"class.base::internal::TaskSource"*)***
  %60 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %60, i64 4
  %62 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %61, align 8
  call void %62(%"class.base::internal::TaskSource"* nonnull %58) #12
  br label %63

63:                                               ; preds = %37, %27, %49, %51, %56
  %64 = phi i1 [ false, %49 ], [ false, %51 ], [ false, %56 ], [ true, %37 ], [ %28, %27 ]
  ret i1 %64
}

declare zeroext i1 @_ZN4base8internal11TaskTracker12WillPostTaskEPNS0_4TaskENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN4base8internal18DelayedTaskManager14AddDelayedTaskENS0_4TaskENS_12OnceCallbackIFvS2_EEE13scoped_refptrINS_10TaskRunnerEE(%"class.base::internal::DelayedTaskManager"*, %"struct.base::internal::Task"*, %"class.base::OnceCallback.55"*, %"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn24_N4base8internal14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"*, %"struct.base::internal::Task"*, %"class.base::internal::Sequence"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast i8* %4 to %"class.base::internal::ThreadPoolImpl"*
  %6 = tail call zeroext i1 @_ZN4base8internal14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"* %5, %"struct.base::internal::Task"* %1, %"class.base::internal::Sequence"* %2)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14ThreadPoolImpl11ShouldYieldEPKNS0_10TaskSourceE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TaskTraits", align 1
  %4 = alloca %"class.base::TaskTraits", align 1
  %5 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %56

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i8, i8* %9 monotonic, align 1
  %11 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 0, i8* %11, align 1, !alias.scope !36
  %14 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 0, i32 1, i32 0, i64 0
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 1, !alias.scope !36
  %16 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 1
  store i8 %10, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 2
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 3
  %19 = or i8 %13, -128
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 4
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 5
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 6
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %24 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %24, i64 20
  %26 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %25, align 8
  %27 = call %"class.base::internal::ThreadGroup"* %26(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %11) #12
  %28 = call zeroext i1 @_ZNK4base8internal11ThreadGroup22IsBoundToCurrentThreadEv(%"class.base::internal::ThreadGroup"* %27) #12
  br i1 %28, label %29, label %56

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %30) #12
  %31 = load i8, i8* %12, align 1
  store i8 0, i8* %30, align 1, !alias.scope !39
  %32 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 0, i32 1, i32 0, i64 0
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33, align 1, !alias.scope !39
  %34 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 1
  store i8 %10, i8* %34, align 1
  %35 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 2
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 3
  %37 = or i8 %31, -128
  store i8 %37, i8* %36, align 1
  %38 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 4
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 5
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 6
  store i8 0, i8* %40, align 1
  %41 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %23, align 8
  %42 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %41, i64 20
  %43 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %42, align 8
  %44 = call %"class.base::internal::ThreadGroup"* %43(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %4) #12
  %45 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 11
  %46 = load i8, i8* %45, align 1, !range !7
  %47 = icmp ne i8 %46, 0
  %48 = bitcast %"class.base::internal::TaskSource"* %1 to { i64, i64 } (%"class.base::internal::TaskSource"*, i1)***
  %49 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)**, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*** %48, align 8
  %50 = getelementptr inbounds { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %49, i64 2
  %51 = load { i64, i64 } (%"class.base::internal::TaskSource"*, i1)*, { i64, i64 } (%"class.base::internal::TaskSource"*, i1)** %50, align 8
  %52 = call { i64, i64 } %51(%"class.base::internal::TaskSource"* %1, i1 zeroext %47) #12
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  %55 = call zeroext i1 @_ZN4base8internal11ThreadGroup11ShouldYieldENS0_17TaskSourceSortKeyE(%"class.base::internal::ThreadGroup"* %44, i64 %53, i64 %54) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %30) #12
  br label %56

56:                                               ; preds = %29, %8, %2
  %57 = phi i1 [ false, %2 ], [ %55, %29 ], [ true, %8 ]
  ret i1 %57
}

declare zeroext i1 @_ZNK4base8internal11ThreadGroup22IsBoundToCurrentThreadEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal11ThreadGroup11ShouldYieldENS0_17TaskSourceSortKeyE(%"class.base::internal::ThreadGroup"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn24_N4base8internal14ThreadPoolImpl11ShouldYieldEPKNS0_10TaskSourceE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i8* %3 to %"class.base::internal::ThreadPoolImpl"*
  %5 = tail call zeroext i1 @_ZN4base8internal14ThreadPoolImpl11ShouldYieldEPKNS0_10TaskSourceE(%"class.base::internal::ThreadPoolImpl"* %4, %"class.base::internal::TaskSource"* %1)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14ThreadPoolImpl20EnqueueJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %4 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %7 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %8 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %9 = bitcast %"class.base::internal::RegisteredTaskSource"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::internal::RegisteredTaskSource"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.base::internal::TaskTrackerPosix"*, %"class.base::internal::TaskTrackerPosix"** %11, align 8
  %14 = getelementptr inbounds %"class.base::internal::TaskTrackerPosix", %"class.base::internal::TaskTrackerPosix"* %13, i64 0, i32 0
  %15 = bitcast %"class.base::internal::JobTaskSource"* %1 to %"class.base::internal::TaskSource"*
  call void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %3, %"class.base::internal::TaskTracker"* %14, %"class.base::internal::TaskSource"* %15) #12
  %16 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8
  %17 = icmp eq %"class.base::internal::TaskSource"* %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.base::internal::TaskSource::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %4, i64 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %20, align 8
  call void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* nonnull sret %4, %"class.base::internal::TaskSource"* nonnull %16) #12
  %21 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  %23 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %20, align 8, !noalias !42
  %24 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds i8, i8* %21, i64 9
  call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 -86, i64 6, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %24, i64 9, i1 false) #12
  %26 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %23, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %26, i64 6, i1 false) #12
  %27 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %28 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %28, i64 20
  %30 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %29, align 8
  %31 = call %"class.base::internal::ThreadGroup"* %30(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #12
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %7, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %3) #12
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* nonnull %8, %"class.base::internal::TaskSource::Transaction"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal35TransactionWithRegisteredTaskSourceC1ENS0_20RegisteredTaskSourceENS0_10TaskSource11TransactionE(%"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %6, %"class.base::internal::RegisteredTaskSource"* nonnull %7, %"class.base::internal::TaskSource::Transaction"* nonnull %8) #12
  %32 = bitcast %"class.base::internal::ThreadGroup"* %31 to void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)***
  %33 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)**, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %33, i64 3
  %35 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %34, align 8
  call void %35(%"class.base::internal::ThreadGroup"* %31, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %6) #12
  %36 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %6, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %36) #12
  %37 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %6, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %37) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %8) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %21) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %38

38:                                               ; preds = %2, %18
  %39 = phi i1 [ true, %18 ], [ false, %2 ]
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i1 %39
}

declare void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* sret, %"class.base::internal::TaskSource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn24_N4base8internal14ThreadPoolImpl20EnqueueJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i8* %3 to %"class.base::internal::ThreadPoolImpl"*
  %5 = tail call zeroext i1 @_ZN4base8internal14ThreadPoolImpl20EnqueueJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE(%"class.base::internal::ThreadPoolImpl"* %4, %"class.base::internal::JobTaskSource"* %1)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl19RemoveJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %4 = alloca %"class.base::TaskTraits", align 1
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = bitcast %"class.base::internal::TaskSource::Transaction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %3, i64 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %7, align 8
  %8 = bitcast %"class.base::internal::JobTaskSource"* %1 to %"class.base::internal::TaskSource"*
  call void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* nonnull sret %3, %"class.base::internal::TaskSource"* %8) #12
  %9 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %9) #12
  %10 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %7, align 8, !noalias !45
  %11 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %10, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 %11, i64 9, i1 false) #12
  %12 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %10, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 6, i1 false) #12
  %14 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %15 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %15, i64 20
  %17 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %16, align 8
  %18 = call %"class.base::internal::ThreadGroup"* %17(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %9) #12
  call void @_ZN4base8internal11ThreadGroup16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %5, %"class.base::internal::ThreadGroup"* %18, %"class.base::internal::TaskSource"* dereferenceable(96) %8) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %19 = icmp eq %"class.base::internal::JobTaskSource"* %1, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.base::internal::JobTaskSource", %"class.base::internal::JobTaskSource"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.144"* %26 to %"class.base::internal::TaskSource"*
  %28 = bitcast %"class.base::RefCountedThreadSafe.144"* %26 to void (%"class.base::internal::TaskSource"*)***
  %29 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %29, i64 4
  %31 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %30, align 8
  call void %31(%"class.base::internal::TaskSource"* nonnull %27) #12
  br label %32

32:                                               ; preds = %2, %20, %25
  ret void
}

declare void @_ZN4base8internal11ThreadGroup16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource"* dereferenceable(96)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4base8internal14ThreadPoolImpl19RemoveJobTaskSourceE13scoped_refptrINS0_13JobTaskSourceEE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::JobTaskSource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %4 = alloca %"class.base::TaskTraits", align 1
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast i8* %6 to %"class.base::internal::ThreadPoolImpl"*
  %8 = bitcast %"class.base::internal::RegisteredTaskSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast %"class.base::internal::TaskSource::Transaction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %3, i64 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %10, align 8
  %11 = bitcast %"class.base::internal::JobTaskSource"* %1 to %"class.base::internal::TaskSource"*
  call void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* nonnull sret %3, %"class.base::internal::TaskSource"* %11) #12
  %12 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %12) #12
  %13 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8, !noalias !48
  %14 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %13, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %14, i64 9, i1 false) #12
  %15 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %13, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 6, i1 false) #12
  %17 = bitcast i8* %6 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %18 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %18, i64 20
  %20 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %19, align 8
  %21 = call %"class.base::internal::ThreadGroup"* %20(%"class.base::internal::ThreadPoolImpl"* %7, %"class.base::TaskTraits"* nonnull dereferenceable(15) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %12) #12
  call void @_ZN4base8internal11ThreadGroup16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %5, %"class.base::internal::ThreadGroup"* %21, %"class.base::internal::TaskSource"* dereferenceable(96) %11) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %22 = icmp eq %"class.base::internal::JobTaskSource"* %1, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.base::internal::JobTaskSource", %"class.base::internal::JobTaskSource"* %1, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.144"* %29 to %"class.base::internal::TaskSource"*
  %31 = bitcast %"class.base::RefCountedThreadSafe.144"* %29 to void (%"class.base::internal::TaskSource"*)***
  %32 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %32, i64 4
  %34 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %33, align 8
  call void %34(%"class.base::internal::TaskSource"* nonnull %30) #12
  br label %35

35:                                               ; preds = %2, %23, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl14UpdatePriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"class.base::TaskTraits", align 1
  %7 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %8 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %9 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %10 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %11 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %12 = bitcast %"class.base::internal::TaskSource::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %4, i64 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %13, align 8
  call void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* nonnull sret %4, %"class.base::internal::TaskSource"* %1) #12
  %14 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %13, align 8, !noalias !51
  %15 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %14, i64 0, i32 2, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, %2
  br i1 %17, label %56, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %14, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %20) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %19, i64 9, i1 false) #12
  %21 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %15, i64 6, i1 false) #12
  %22 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)***
  %23 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %23, i64 20
  %25 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %24, align 8
  %26 = call %"class.base::internal::ThreadGroup"* %25(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %20) #12
  call void @_ZN4base8internal10TaskSource11Transaction14UpdatePriorityENS_12TaskPriorityE(%"class.base::internal::TaskSource::Transaction"* nonnull %4, i8 zeroext %2) #12
  %27 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %27) #12
  %28 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %13, align 8, !noalias !54
  %29 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %28, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 %29, i64 9, i1 false) #12
  %30 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %6, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %28, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 6, i1 false) #12
  %32 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)**, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*** %22, align 8
  %33 = getelementptr inbounds %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %32, i64 20
  %34 = load %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)*, %"class.base::internal::ThreadGroup"* (%"class.base::internal::ThreadPoolImpl"*, %"class.base::TaskTraits"*)** %33, align 8
  %35 = call %"class.base::internal::ThreadGroup"* %34(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::TaskTraits"* nonnull dereferenceable(15) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %27) #12
  %36 = icmp eq %"class.base::internal::ThreadGroup"* %35, %26
  br i1 %36, label %37, label %42

37:                                               ; preds = %18
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* nonnull %7, %"class.base::internal::TaskSource::Transaction"* nonnull dereferenceable(8) %4) #12
  %38 = bitcast %"class.base::internal::ThreadGroup"* %26 to void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)***
  %39 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)**, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)** %39, i64 2
  %41 = load void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)*, void (%"class.base::internal::ThreadGroup"*, %"class.base::internal::TaskSource::Transaction"*)** %40, align 8
  call void %41(%"class.base::internal::ThreadGroup"* %26, %"class.base::internal::TaskSource::Transaction"* nonnull %7) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %7) #12
  br label %56

42:                                               ; preds = %18
  %43 = bitcast %"class.base::internal::RegisteredTaskSource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %8, i64 0, i32 0, i32 0
  %45 = bitcast %"class.base::internal::RegisteredTaskSource"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @_ZN4base8internal11ThreadGroup16RemoveTaskSourceERKNS0_10TaskSourceE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %8, %"class.base::internal::ThreadGroup"* %26, %"class.base::internal::TaskSource"* dereferenceable(96) %1) #12
  %46 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %44, align 8
  %47 = icmp eq %"class.base::internal::TaskSource"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %10, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %8) #12
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* nonnull %11, %"class.base::internal::TaskSource::Transaction"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal35TransactionWithRegisteredTaskSourceC1ENS0_20RegisteredTaskSourceENS0_10TaskSource11TransactionE(%"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %9, %"class.base::internal::RegisteredTaskSource"* nonnull %10, %"class.base::internal::TaskSource::Transaction"* nonnull %11) #12
  %49 = bitcast %"class.base::internal::ThreadGroup"* %35 to void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)***
  %50 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)**, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %50, i64 3
  %52 = load void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)*, void (%"class.base::internal::ThreadGroup"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)** %51, align 8
  call void %52(%"class.base::internal::ThreadGroup"* %35, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %9) #12
  %53 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %53) #12
  %54 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %54) #12
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %11) #12
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %10) #12
  br label %55

55:                                               ; preds = %42, %48
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  br label %56

56:                                               ; preds = %37, %55, %3
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %57 = icmp eq %"class.base::internal::TaskSource"* %1, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 1
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw sub i32* %60, i32 1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %59, i64 -2
  %65 = bitcast %"class.base::RefCountedThreadSafe.144"* %64 to %"class.base::internal::TaskSource"*
  %66 = bitcast %"class.base::RefCountedThreadSafe.144"* %64 to void (%"class.base::internal::TaskSource"*)***
  %67 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %67, i64 4
  %69 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %68, align 8
  call void %69(%"class.base::internal::TaskSource"* nonnull %65) #12
  br label %70

70:                                               ; preds = %56, %58, %63
  ret void
}

declare void @_ZN4base8internal10TaskSource11Transaction14UpdatePriorityENS_12TaskPriorityE(%"class.base::internal::TaskSource::Transaction"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4base8internal14ThreadPoolImpl14UpdatePriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast i8* %4 to %"class.base::internal::ThreadPoolImpl"*
  tail call void @_ZN4base8internal14ThreadPoolImpl14UpdatePriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE(%"class.base::internal::ThreadPoolImpl"* %5, %"class.base::internal::TaskSource"* %1, i8 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14ThreadPoolImpl17UpdateJobPriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = bitcast %"class.base::internal::ThreadPoolImpl"* %0 to void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)***
  %10 = load void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)**, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)** %10, i64 18
  %12 = load void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)** %11, align 8
  tail call void %12(%"class.base::internal::ThreadPoolImpl"* %0, %"class.base::internal::TaskSource"* %1, i8 zeroext %2) #12
  br label %27

13:                                               ; preds = %3
  %14 = icmp eq %"class.base::internal::TaskSource"* %1, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.144"* %21 to %"class.base::internal::TaskSource"*
  %23 = bitcast %"class.base::RefCountedThreadSafe.144"* %21 to void (%"class.base::internal::TaskSource"*)***
  %24 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %24, i64 4
  %26 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %25, align 8
  tail call void %26(%"class.base::internal::TaskSource"* nonnull %22) #12
  br label %27

27:                                               ; preds = %8, %13, %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4base8internal14ThreadPoolImpl17UpdateJobPriorityE13scoped_refptrINS0_10TaskSourceEENS_12TaskPriorityE(%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 522
  %6 = load atomic i8, i8* %5 seq_cst, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = bitcast i8* %4 to %"class.base::internal::ThreadPoolImpl"*
  %11 = bitcast i8* %4 to void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)***
  %12 = load void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)**, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)** %12, i64 18
  %14 = load void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)*, void (%"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::TaskSource"*, i8)** %13, align 8
  tail call void %14(%"class.base::internal::ThreadPoolImpl"* %10, %"class.base::internal::TaskSource"* %1, i8 zeroext %2) #12
  br label %29

15:                                               ; preds = %3
  %16 = icmp eq %"class.base::internal::TaskSource"* %1, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.144"* %23 to %"class.base::internal::TaskSource"*
  %25 = bitcast %"class.base::RefCountedThreadSafe.144"* %23 to void (%"class.base::internal::TaskSource"*)***
  %26 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %26, i64 4
  %28 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %27, align 8
  tail call void %28(%"class.base::internal::TaskSource"* nonnull %24) #12
  br label %29

29:                                               ; preds = %9, %15, %17, %22
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::internal::ThreadGroup"* @_ZN4base8internal14ThreadPoolImpl23GetThreadGroupForTraitsERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"* nocapture readonly, %"class.base::TaskTraits"* nocapture readonly dereferenceable(15)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 127
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %12, align 8
  %14 = icmp eq %"class.base::internal::ThreadGroup"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %11, %6, %2
  %16 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %16, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi %"class.base::internal::ThreadGroup"* [ %17, %15 ], [ %13, %11 ]
  ret %"class.base::internal::ThreadGroup"* %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::internal::ThreadGroup"* @_ZThn16_N4base8internal14ThreadPoolImpl23GetThreadGroupForTraitsERKNS_10TaskTraitsE(%"class.base::internal::ThreadPoolImpl"* nocapture readonly, %"class.base::TaskTraits"* nocapture readonly dereferenceable(15)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadPoolImpl", %"class.base::internal::ThreadPoolImpl"* %0, i64 -1, i32 17, i32 4, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 127
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = getelementptr inbounds %union.anon.101, %union.anon.101* %3, i64 32
  %14 = bitcast %union.anon.101* %13 to %"class.base::internal::ThreadGroup"**
  %15 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %14, align 8
  %16 = icmp eq %"class.base::internal::ThreadGroup"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %12, %7, %2
  %18 = getelementptr inbounds %union.anon.101, %union.anon.101* %3, i64 31, i32 0, i32 1
  %19 = bitcast %"class.base::internal::TrackedRefFactory.74"** %18 to %"class.base::internal::ThreadGroup"**
  %20 = load %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup"** %19, align 8
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi %"class.base::internal::ThreadGroup"* [ %20, %17 ], [ %15, %12 ]
  ret %"class.base::internal::ThreadGroup"* %22
}

declare zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #2

declare void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal35PooledSingleThreadTaskRunnerManager21DidUpdateCanRunPolicyEv(%"class.base::internal::PooledSingleThreadTaskRunnerManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base18ThreadPoolInstanceD2Ev(%"class.base::ThreadPoolInstance"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base18ThreadPoolInstanceD0Ev(%"class.base::ThreadPoolInstance"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12TaskExecutorD2Ev(%"class.base::TaskExecutor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12TaskExecutorD0Ev(%"class.base::TaskExecutor"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal11ThreadGroup8DelegateD2Ev(%"class.base::internal::ThreadGroup::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal11ThreadGroup8DelegateD0Ev(%"class.base::internal::ThreadGroup::Delegate"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4base8internal16TaskTrackerPosixC1Ev(%"class.base::internal::TaskTrackerPosix"*) unnamed_addr #2

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #4

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #2

declare void @_ZN4base8internal15ThreadGroupImplC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS_14ThreadPriorityENS0_10TrackedRefINS0_11TaskTrackerEEENS8_INS0_11ThreadGroup8DelegateEEE(%"class.base::internal::ThreadGroupImpl"*, i8*, i64, i8*, i64, i32, %"class.base::internal::TrackedRef"*, %"class.base::internal::TrackedRef.73"*) unnamed_addr #2

declare void @_ZN4base8internal8SequenceC1ERKNS_10TaskTraitsEPNS_10TaskRunnerENS0_23TaskSourceExecutionModeE(%"class.base::internal::Sequence"*, %"class.base::TaskTraits"* dereferenceable(15), %"class.base::TaskRunner"*, i32) unnamed_addr #2

declare void @_ZN4base8internal24PooledParallelTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledParallelTaskRunner"*, %"class.base::TaskTraits"* dereferenceable(15), %"class.base::internal::PooledTaskRunnerDelegate"*) unnamed_addr #2

declare void @_ZN4base8internal25PooledSequencedTaskRunnerC1ERKNS_10TaskTraitsEPNS0_24PooledTaskRunnerDelegateE(%"class.base::internal::PooledSequencedTaskRunner"*, %"class.base::TaskTraits"* dereferenceable(15), %"class.base::internal::PooledTaskRunnerDelegate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS7_NS0_17UnretainedWrapperIS3_EEEEEFvS4_EE7RunOnceEPNS0_13BindStateBaseEOS4_"(%"class.base::internal::BindStateBase"* nocapture, %"struct.base::internal::Task"* dereferenceable(112)) #0 align 2 {
  %3 = alloca %"struct.base::internal::Task", align 8
  %4 = alloca %"struct.base::internal::Task", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.base::internal::ThreadPoolImpl"**
  %8 = load %"class.base::internal::ThreadPoolImpl"*, %"class.base::internal::ThreadPoolImpl"** %7, align 8
  %9 = bitcast %"struct.base::internal::Task"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #12
  %10 = bitcast void ()** %5 to %"class.base::internal::Sequence"**
  %11 = load %"class.base::internal::Sequence"*, %"class.base::internal::Sequence"** %10, align 8
  store %"class.base::internal::Sequence"* null, %"class.base::internal::Sequence"** %10, align 8
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %4, %"struct.base::internal::Task"* dereferenceable(112) %1) #12
  %12 = bitcast %"struct.base::internal::Task"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #12
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %3, %"struct.base::internal::Task"* nonnull dereferenceable(112) %4) #12
  %13 = call zeroext i1 @_ZN4base8internal14ThreadPoolImpl23PostTaskWithSequenceNowENS0_4TaskE13scoped_refptrINS0_8SequenceEE(%"class.base::internal::ThreadPoolImpl"* %8, %"struct.base::internal::Task"* nonnull %3, %"class.base::internal::Sequence"* %11) #12
  %14 = bitcast %"struct.base::internal::Task"* %3 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #12
  %15 = bitcast %"struct.base::internal::Task"* %4 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS6_NS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::Sequence"**
  %6 = load %"class.base::internal::Sequence"*, %"class.base::internal::Sequence"** %5, align 8
  %7 = icmp eq %"class.base::internal::Sequence"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::Sequence", %"class.base::internal::Sequence"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.144", %"class.base::RefCountedThreadSafe.144"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.144"* %14 to %"class.base::internal::TaskSource"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.144"* %14 to void (%"class.base::internal::TaskSource"*)***
  %17 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %17, i64 4
  %19 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %18, align 8
  tail call void %19(%"class.base::internal::TaskSource"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv"}
!5 = distinct !{!5, !6, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv"}
!12 = distinct !{!12, !13, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEE13GetTrackedRefEv: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEE13GetTrackedRefEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEE13GetTrackedRefEv"}
!20 = distinct !{!20, !21, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal11TaskTracker13GetTrackedRefEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEE13GetTrackedRefEv: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal17TrackedRefFactoryINS0_11ThreadGroup8DelegateEE13GetTrackedRefEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS7_NS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS0_14ThreadPoolImpl20PostTaskWithSequenceENS0_4TaskE13scoped_refptrINS0_8SequenceEEE3$_0JS7_NS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIZNS_8internal14ThreadPoolImpl20PostTaskWithSequenceENS1_4TaskE13scoped_refptrINS1_8SequenceEEE3$_0JS6_NS1_17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIZNS_8internal14ThreadPoolImpl20PostTaskWithSequenceENS1_4TaskE13scoped_refptrINS1_8SequenceEEE3$_0JS6_NS1_17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityENS_12ThreadPolicyEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!38 = distinct !{!38, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityENS_12ThreadPolicyEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityENS_12ThreadPolicyEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!41 = distinct !{!41, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityENS_12ThreadPolicyEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!44 = distinct !{!44, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!47 = distinct !{!47, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!50 = distinct !{!50, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!53 = distinct !{!53, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
