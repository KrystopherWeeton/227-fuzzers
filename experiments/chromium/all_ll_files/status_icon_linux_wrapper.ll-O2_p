; ModuleID = '../../chrome/browser/ui/views/status_icons/status_icon_linux_wrapper.cc'
source_filename = "../../chrome/browser/ui/views/status_icons/status_icon_linux_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.StatusIconLinuxWrapper = type { %class.StatusIcon, %"class.views::StatusIconLinux::Delegate", %"class.StatusIconMenuModel::Observer", %class.DesktopNotificationBalloon, %class.scoped_refptr.42, %"class.std::__1::unique_ptr.217", %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia", %"class.std::__1::basic_string", %class.StatusIconMenuModel* }
%class.StatusIcon = type { i32 (...)**, %"class.base::ObserverList", %"class.std::__1::unique_ptr" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.StatusIconMenuModel* }
%"class.views::StatusIconLinux::Delegate" = type { i32 (...)** }
%"class.StatusIconMenuModel::Observer" = type { i32 (...)** }
%class.DesktopNotificationBalloon = type { i32 (...)** }
%class.scoped_refptr.42 = type { %class.StatusIconLinuxDbus* }
%class.StatusIconLinuxDbus = type { %"class.views::StatusIconLinux", %"class.ui::SimpleMenuModel::Delegate", %"class.base::RefCounted", %class.scoped_refptr.43, i32, %"class.dbus::ObjectProxy"*, %"class.dbus::ExportedObject"*, %"class.base::RepeatingCallback.179", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", i8, %class.scoped_refptr.45, i64, %"class.base::FilePath", %"class.base::WeakPtrFactory.216" }
%"class.views::StatusIconLinux" = type { i32 (...)**, %"class.views::StatusIconLinux::Delegate"* }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.43 = type { %"class.dbus::Bus"* }
%"class.dbus::Bus" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.44", i32, i32, %class.scoped_refptr.45, %"class.base::WaitableEvent", %struct.DBusConnection*, i32, %class.scoped_refptr.45, %"class.std::__1::set", %"class.std::__1::map.62", %"class.std::__1::set.71", %"class.std::__1::set.81", %"class.std::__1::map.91", %"class.std::__1::map.102", %"class.std::__1::map.113", %"class.std::__1::map.122", i8, i8, i32, i32, %"class.std::__1::basic_string.131" }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.47, i8, [7 x i8] }>
%class.scoped_refptr.47 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.48", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.49" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%struct.DBusConnection = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::set.71" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::set.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.122" = type { %"class.std::__1::__tree.123" }
%"class.std::__1::__tree.123" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::basic_string.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.134 }
%union.anon.134 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.dbus::ObjectProxy" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.140", %class.scoped_refptr.43, %"class.std::__1::basic_string.131", %"class.dbus::ObjectPath", %"class.std::__1::map.141", %"class.base::RepeatingCallback", %"class.std::__1::vector.152", %"class.std::__1::set", i8, %"class.std::__1::basic_string.131", %"class.std::__1::set.159" }
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.dbus::ObjectPath" = type { %"class.std::__1::basic_string.131" }
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.150 }
%class.scoped_refptr.150 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.151", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.151" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.154" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.base::OnceCallback"* }
%"class.std::__1::set.159" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.dbus::ExportedObject" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.169", %class.scoped_refptr.43, %"class.dbus::ObjectPath", i8, %"class.std::__1::map.170" }
%"class.base::RefCountedThreadSafe.169" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.DbusProperties* }
%class.DbusProperties = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.DbusMenu* }
%class.DbusMenu = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.ui::SimpleMenuModel"* }
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector.9", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.23" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.16", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.16" = type { %"class.absl::variant_internal::VariantStateBase.17" }
%"class.absl::variant_internal::VariantStateBase.17" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %class.ConcatMenuModel* }
%class.ConcatMenuModel = type { %"class.ui::MenuModel", %"class.ui::MenuModel"*, %"class.ui::MenuModel"* }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.views::MenuRunner"* }
%"class.views::MenuRunner" = type { i32, %"class.views::internal::MenuRunnerImplInterface"*, %"class.std::__1::unique_ptr.207" }
%"class.views::internal::MenuRunnerImplInterface" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.views::MenuRunnerHandler"* }
%"class.views::MenuRunnerHandler" = type opaque
%class.scoped_refptr.45 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46" }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.131" }
%"class.base::WeakPtrFactory.216" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.views::StatusIconLinux"* }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.StatusIconMenuModel = type { %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.base::SupportsWeakPtr.28", %"class.std::__1::map", %"class.base::ObserverList.37", %"class.StatusIconMenuModel::Delegate"* }
%"class.base::SupportsWeakPtr.28" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::ObserverList.37" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.38", i64, i32, [4 x i8] }>
%"class.base::LinkedList.38" = type { %"class.base::LinkNode.39" }
%"class.base::LinkNode.39" = type { %"class.base::internal::LinkNodeBase" }
%"class.StatusIconMenuModel::Delegate" = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.SkBitmap = type { %class.sk_sp.573, %class.SkPixmap, %class.sk_sp.576 }
%class.sk_sp.573 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.574, i32, i32 }
%class.sk_sp.574 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.575, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.575 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.576 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"*, %"class.std::__1::__compressed_pair.583" }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.335, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.579, %class.sk_sp.335, %"class.gfx::Rect", i32, %class.sk_sp.580, %class.sk_sp.581, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.579, %class.scoped_refptr.582 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.580 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.581 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.579 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.scoped_refptr.582 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.335 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.336", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.gfx::ImageSkiaRep"* }
%"struct.message_center::NotifierId" = type { i32, %"class.std::__1::basic_string.131", %class.GURL, %"class.std::__1::basic_string.131" }
%class.GURL = type { %"class.std::__1::basic_string.131", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.224" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.GURL* }
%class.StatusIconButtonLinux = type { %"class.views::StatusIconLinux", %"class.views::Button", %"class.views::ContextMenuController", %"class.std::__1::unique_ptr.552", %"class.aura::WindowTreeHost"*, %"class.std::__1::unique_ptr.204" }
%"class.views::Button" = type { %"class.views::View.base", %"class.views::AnimationDelegateViews", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.views::Button::PressedCallback", i32, i32, %"class.gfx::ThrobAnimation", i8, i8, i32, i8, i8, i8, i8, %"class.std::__1::unique_ptr.483", %"class.views::FocusRing"*, %"class.std::__1::unique_ptr.539", %"class.std::__1::unique_ptr.545", %"class.base::CallbackListSubscription" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.291", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.299", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.312", %"class.absl::optional.318", i8, [7 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.355", i8, i8, [3 x i8], %"class.std::__1::vector.360", %"class.std::__1::unique_ptr.367", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.445", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.base::ObserverList.471", i32 }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.233", %"class.ui::Layer"*, %"class.base::ObserverList.239" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.239" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.240", i64, i32, [4 x i8] }>
%"class.base::LinkedList.240" = type { %"class.base::LinkNode.241" }
%"class.base::LinkNode.241" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.243", %"class.std::__1::vector.259", %"class.ui::EventHandler"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.266" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.259" = type { %"class.std::__1::__vector_base.260" }
%"class.std::__1::__vector_base.260" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.259" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.252" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.245" }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.base::flat_map.255"* }
%"class.base::flat_map.255" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.271" }
%"class.std::__1::map.271" = type { %"class.std::__1::__tree.272" }
%"class.std::__1::__tree.272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.282" }
%"class.std::__1::map.282" = type { %"class.std::__1::__tree.283" }
%"class.std::__1::__tree.283" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.298 }
%union.anon.298 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::vector.291"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.305, %class.SkTDArray.306, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.305 = type { i8*, i32, i32 }
%class.SkTDArray.306 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.307 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.307 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.308", [3 x i8] }
%"struct.std::__1::atomic.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { i8 }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.335, float, [4 x i8] }>
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.340", %"class.base::ObserverList.351", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.340" = type { %"class.std::__1::__tree.341" }
%"class.std::__1::__tree.341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::ObserverList.351" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.352", i64, i32, [4 x i8] }>
%"class.base::LinkedList.352" = type { %"class.base::LinkNode.353" }
%"class.base::LinkNode.353" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, %union.anon.359 }
%union.anon.359 = type { i8 }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.418", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.435", i32, [4 x i8], %"class.base::ObserverList.441", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.380", %"class.base::ObserverList.392", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.405", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.411", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.291", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.417" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list.373" }
%"class.std::__1::list.373" = type { %"class.std::__1::__list_imp.374" }
%"class.std::__1::__list_imp.374" = type { %"struct.std::__1::__list_node_base.375", %"class.std::__1::__compressed_pair.376" }
%"struct.std::__1::__list_node_base.375" = type { %"struct.std::__1::__list_node_base.375"*, %"struct.std::__1::__list_node_base.375"* }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.380" = type <{ %"class.std::__1::vector.381", %"class.base::LinkedList.389", i64, i32, [4 x i8] }>
%"class.std::__1::vector.381" = type { %"class.std::__1::__vector_base.382" }
%"class.std::__1::__vector_base.382" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.384" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.389" = type { %"class.base::LinkNode.390" }
%"class.base::LinkNode.390" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.392" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.393", i64, i32, [4 x i8] }>
%"class.base::LinkedList.393" = type { %"class.base::LinkNode.394" }
%"class.base::LinkNode.394" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.396", i8, %"class.base::RepeatingCallback.403", %"class.base::WeakPtrFactory.404" }
%"class.std::__1::list.396" = type { %"class.std::__1::__list_imp.397" }
%"class.std::__1::__list_imp.397" = type { %"struct.std::__1::__list_node_base.398", %"class.std::__1::__compressed_pair.399" }
%"struct.std::__1::__list_node_base.398" = type { %"struct.std::__1::__list_node_base.398"*, %"struct.std::__1::__list_node_base.398"* }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::RepeatingCallback.403" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.404" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::WidgetDelegate" = type opaque
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.561", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.417" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.424" }
%"class.std::__1::map.424" = type { %"class.std::__1::__tree.425" }
%"class.std::__1::__tree.425" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.441" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.442", i64, i32, [4 x i8] }>
%"class.base::LinkedList.442" = type { %"class.base::LinkNode.443" }
%"class.base::LinkNode.443" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::vector.448"* }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.450" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.ui::Accelerator"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.291", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.299", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.312", %"class.absl::optional.318", i8, [7 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.355", i8, i8, [3 x i8], %"class.std::__1::vector.360", %"class.std::__1::unique_ptr.367", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.445", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.base::ObserverList.471", i32, [4 x i8] }>
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.471" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.472", i64, i32, [4 x i8] }>
%"class.base::LinkedList.472" = type { %"class.base::LinkNode.473" }
%"class.base::LinkNode.473" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::AnimationDelegateViews" = type { %"class.gfx::AnimationDelegate", %"class.views::ViewObserver", %"class.gfx::AnimationContainerObserver", %"class.views::View"*, %"class.gfx::AnimationContainer"*, %"class.views::CompositorAnimationRunner"*, %"class.base::ScopedObservation.475" }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%"class.gfx::AnimationContainerObserver" = type { i32 (...)** }
%"class.gfx::AnimationContainer" = type opaque
%"class.views::CompositorAnimationRunner" = type opaque
%"class.base::ScopedObservation.475" = type { %"class.views::ViewObserver"*, %"class.views::View"* }
%"class.views::Button::PressedCallback" = type { %"class.base::RepeatingCallback.476" }
%"class.base::RepeatingCallback.476" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.gfx::ThrobAnimation" = type <{ %"class.gfx::SlideAnimation", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.gfx::SlideAnimation" = type { %"class.gfx::LinearAnimation.base", %"class.gfx::AnimationDelegate"*, i32, %"class.absl::optional.478", double, double, double, %"class.base::TimeDelta", double }
%"class.gfx::LinearAnimation.base" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8 }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr.477, %"class.base::TimeTicks" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%class.scoped_refptr.477 = type { %"class.gfx::AnimationContainer"* }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.views::InkDropHost"* }
%"class.views::InkDropHost" = type { i32 (...)**, %"class.views::View"*, i32, %"class.views::InkDropHost::ViewLayerTransformObserver", %"class.std::__1::unique_ptr.486", %"class.views::InkDropHost::InkDropHostEventHandlerDelegate", %"class.views::InkDropEventHandler", %"class.views::InkDropEventHandler"*, float, %"class.absl::optional.504", %"class.absl::optional.509", i32, i32, i8, %"class.std::__1::unique_ptr.514", %"class.base::RepeatingCallback.520", %"class.base::RepeatingCallback.521", %"class.base::RepeatingCallback.522", %"class.base::RepeatingCallback.523", %"class.base::RepeatingCallback.524", %"class.base::RepeatingCallbackList" }
%"class.views::InkDropHost::ViewLayerTransformObserver" = type { %"class.views::ViewObserver", %"class.base::ScopedObservation.475", %"class.views::InkDropHost"* }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.views::InkDrop"* }
%"class.views::InkDrop" = type opaque
%"class.views::InkDropHost::InkDropHostEventHandlerDelegate" = type { %"class.views::InkDropEventHandler::Delegate", %"class.views::InkDropHost"* }
%"class.views::InkDropEventHandler::Delegate" = type { i32 (...)** }
%"class.views::InkDropEventHandler" = type { %"class.ui::EventHandler", %"class.views::ViewObserver", %"class.std::__1::unique_ptr.492", %"class.views::View"*, %"class.views::InkDropEventHandler::Delegate"*, %"class.std::__1::unique_ptr.498", %"class.base::ScopedObservation.475" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.ui::ScopedTargetHandler"* }
%"class.ui::ScopedTargetHandler" = type opaque
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.504" = type { %"class.absl::optional_internal::optional_data.505" }
%"class.absl::optional_internal::optional_data.505" = type { %"class.absl::optional_internal::optional_data_base.506" }
%"class.absl::optional_internal::optional_data_base.506" = type { %"class.absl::optional_internal::optional_data_dtor_base.507" }
%"class.absl::optional_internal::optional_data_dtor_base.507" = type { i8, %union.anon.508 }
%union.anon.508 = type { i32 }
%"class.absl::optional.509" = type { %"class.absl::optional_internal::optional_data.510" }
%"class.absl::optional_internal::optional_data.510" = type { %"class.absl::optional_internal::optional_data_base.511" }
%"class.absl::optional_internal::optional_data_base.511" = type { %"class.absl::optional_internal::optional_data_dtor_base.512" }
%"class.absl::optional_internal::optional_data_dtor_base.512" = type { i8, %union.anon.513 }
%union.anon.513 = type { float }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.views::InkDropMask"* }
%"class.views::InkDropMask" = type opaque
%"class.base::RepeatingCallback.520" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.521" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.522" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.523" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.524" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.views::FocusRing" = type { %"class.views::View.base", %"class.views::ViewObserver", %"class.std::__1::unique_ptr.528", i8, i8, %"class.absl::optional.504", %"class.absl::optional.534", %"class.base::ScopedObservation.475" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.views::HighlightPathGenerator"* }
%"class.views::HighlightPathGenerator" = type opaque
%"class.absl::optional.534" = type { %"class.absl::optional_internal::optional_data.535" }
%"class.absl::optional_internal::optional_data.535" = type { %"class.absl::optional_internal::optional_data_base.536" }
%"class.absl::optional_internal::optional_data_base.536" = type { %"class.absl::optional_internal::optional_data_dtor_base.537" }
%"class.absl::optional_internal::optional_data_dtor_base.537" = type { i8, %union.anon.538 }
%union.anon.538 = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.views::View"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.views::Painter"* }
%"class.views::Painter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.views::ButtonController"* }
%"class.views::ButtonController" = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback.551" }
%"class.base::OnceCallback.551" = type { %"class.base::internal::CallbackBase" }
%"class.views::ContextMenuController" = type { i32 (...)**, i8, %"class.base::WeakPtrFactory.458" }
%"class.base::WeakPtrFactory.458" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.views::Widget"* }
%"class.aura::WindowTreeHost" = type opaque

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTV22StatusIconLinuxWrapper = hidden unnamed_addr constant { [16 x i8*], [10 x i8*], [5 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapperD2Ev to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapperD0Ev to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*, %"class.gfx::ImageSkia"*)* @_ZN22StatusIconLinuxWrapper8SetImageERKN3gfx9ImageSkiaE to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*, %"class.std::__1::basic_string"*)* @_ZN22StatusIconLinuxWrapper10SetToolTipERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.message_center::NotifierId"*)* @_ZN22StatusIconLinuxWrapper14DisplayBalloonERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESC_RKN14message_center10NotifierIdE to i8*), i8* bitcast (void (%class.StatusIcon*)* @_ZN10StatusIcon12ForceVisibleEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*, %class.StatusIconMenuModel*)* @_ZN22StatusIconLinuxWrapper25UpdatePlatformContextMenuEP19StatusIconMenuModel to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapper7OnClickEv to i8*), i8* bitcast (i1 (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapper14HasClickActionEv to i8*), i8* bitcast (%"class.gfx::ImageSkia"* (%class.StatusIconLinuxWrapper*)* @_ZNK22StatusIconLinuxWrapper8GetImageEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%class.StatusIconLinuxWrapper*)* @_ZNK22StatusIconLinuxWrapper10GetToolTipEv to i8*), i8* bitcast (%"class.ui::MenuModel"* (%class.StatusIconLinuxWrapper*)* @_ZNK22StatusIconLinuxWrapper12GetMenuModelEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapper26OnImplInitializationFailedEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapper18OnMenuStateChangedEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn72_N22StatusIconLinuxWrapper7OnClickEv to i8*), i8* bitcast (i1 (%class.StatusIconLinuxWrapper*)* @_ZThn72_N22StatusIconLinuxWrapper14HasClickActionEv to i8*), i8* bitcast (%"class.gfx::ImageSkia"* (%class.StatusIconLinuxWrapper*)* @_ZThn72_NK22StatusIconLinuxWrapper8GetImageEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%class.StatusIconLinuxWrapper*)* @_ZThn72_NK22StatusIconLinuxWrapper10GetToolTipEv to i8*), i8* bitcast (%"class.ui::MenuModel"* (%class.StatusIconLinuxWrapper*)* @_ZThn72_NK22StatusIconLinuxWrapper12GetMenuModelEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn72_N22StatusIconLinuxWrapper26OnImplInitializationFailedEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn72_N22StatusIconLinuxWrapperD1Ev to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn72_N22StatusIconLinuxWrapperD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn80_N22StatusIconLinuxWrapper18OnMenuStateChangedEv to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn80_N22StatusIconLinuxWrapperD1Ev to i8*), i8* bitcast (void (%class.StatusIconLinuxWrapper*)* @_ZThn80_N22StatusIconLinuxWrapperD0Ev to i8*)] }, align 8

@_ZN22StatusIconLinuxWrapperC1EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE = hidden unnamed_addr alias void (%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*), void (%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*)* @_ZN22StatusIconLinuxWrapperC2EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE
@_ZN22StatusIconLinuxWrapperC1E13scoped_refptrI19StatusIconLinuxDbusERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE = hidden unnamed_addr alias void (%class.StatusIconLinuxWrapper*, %class.StatusIconLinuxDbus*, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*), void (%class.StatusIconLinuxWrapper*, %class.StatusIconLinuxDbus*, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*)* @_ZN22StatusIconLinuxWrapperC2E13scoped_refptrI19StatusIconLinuxDbusERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE
@_ZN22StatusIconLinuxWrapperC1ENSt3__110unique_ptrIN5views15StatusIconLinuxENS0_14default_deleteIS3_EEEENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE = hidden unnamed_addr alias void (%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*), void (%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"*, %"class.std::__1::basic_string"*)* @_ZN22StatusIconLinuxWrapperC2ENSt3__110unique_ptrIN5views15StatusIconLinuxENS0_14default_deleteIS3_EEEENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE
@_ZN22StatusIconLinuxWrapperD1Ev = hidden unnamed_addr alias void (%class.StatusIconLinuxWrapper*), void (%class.StatusIconLinuxWrapper*)* @_ZN22StatusIconLinuxWrapperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapperC2EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0
  tail call void @_ZN10StatusIconC2Ev(%class.StatusIcon* %6) #10
  %7 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast %"class.views::StatusIconLinux::Delegate"* %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 3
  tail call void @_ZN26DesktopNotificationBalloonC1Ev(%class.DesktopNotificationBalloon* %10) #10
  %11 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  %13 = bitcast %class.StatusIconLinuxDbus** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  store %"class.views::StatusIconLinux"* %1, %"class.views::StatusIconLinux"** %12, align 8
  %14 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 7
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 8
  tail call fastcc void @_ZN12_GLOBAL__N_115GetBestImageRepERKN3gfx9ImageSkiaE(%"class.gfx::ImageSkia"* sret %15, %"class.gfx::ImageSkia"* dereferenceable(8) %3)
  %16 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %5
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #10
  br label %199

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 11
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %32 = trunc i64 %28 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  br label %52

35:                                               ; preds = %24
  %36 = icmp ugt i64 %28, 9223372036854775791
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %38) #11
  unreachable

39:                                               ; preds = %35
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  %50 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %51, align 8
  br label %52

52:                                               ; preds = %44, %30
  %53 = phi i16* [ %31, %30 ], [ %47, %44 ]
  %54 = add nuw nsw i64 %28, 1
  %55 = add i64 %28, 1
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %146, label %57

57:                                               ; preds = %52
  %58 = add i64 %28, 1
  %59 = getelementptr i16, i16* %53, i64 %58
  %60 = getelementptr i16, i16* %26, i64 %58
  %61 = icmp ult i16* %53, %60
  %62 = icmp ult i16* %26, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %57
  %65 = and i64 %55, -16
  %66 = sub i64 %54, %65
  %67 = getelementptr i16, i16* %26, i64 %65
  %68 = getelementptr i16, i16* %53, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %26, i64 %77
  %80 = getelementptr i16, i16* %53, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %26, i64 %89
  %91 = getelementptr i16, i16* %53, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %26, i64 %100
  %102 = getelementptr i16, i16* %53, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %26, i64 %111
  %113 = getelementptr i16, i16* %53, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !2
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !2
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !5, !noalias !2
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !5, !noalias !2
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !7

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %26, i64 %129
  %132 = getelementptr i16, i16* %53, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !9

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %55, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %57, %52
  %147 = phi i64 [ %54, %57 ], [ %54, %52 ], [ %66, %144 ]
  %148 = phi i16* [ %26, %57 ], [ %26, %52 ], [ %67, %144 ]
  %149 = phi i16* [ %53, %57 ], [ %53, %52 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !11

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !12

199:                                              ; preds = %164, %169, %144, %21
  %200 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 10
  store %class.StatusIconMenuModel* null, %class.StatusIconMenuModel** %200, align 8
  %201 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %12, align 8
  tail call void @_ZN5views15StatusIconLinux11SetDelegateEPNS0_8DelegateE(%"class.views::StatusIconLinux"* %201, %"class.views::StatusIconLinux::Delegate"* %7) #10
  ret void
}

declare void @_ZN10StatusIconC2Ev(%class.StatusIcon*) unnamed_addr #1

declare void @_ZN26DesktopNotificationBalloonC1Ev(%class.DesktopNotificationBalloon*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115GetBestImageRepERKN3gfx9ImageSkiaE(%"class.gfx::ImageSkia"* noalias sret, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %"class.std::__1::vector.577", align 8
  %5 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #10
  %6 = bitcast %"class.std::__1::vector.577"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZNK3gfx9ImageSkia10image_repsEv(%"class.std::__1::vector.577"* nonnull sret %4, %"class.gfx::ImageSkia"* %1) #10
  %7 = getelementptr inbounds %"class.std::__1::vector.577", %"class.std::__1::vector.577"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.577", %"class.std::__1::vector.577"* %4, i64 0, i32 0, i32 1
  %10 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %9, align 8
  %11 = icmp eq %"class.gfx::ImageSkiaRep"* %8, %10
  br i1 %11, label %14, label %31

12:                                               ; preds = %42
  %13 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %7, align 8
  br label %14

14:                                               ; preds = %12, %2
  %15 = phi %"class.gfx::ImageSkiaRep"* [ %13, %12 ], [ %8, %2 ]
  %16 = icmp eq %"class.gfx::ImageSkiaRep"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.gfx::ImageSkiaRep"* %15 to i8*
  %19 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %9, align 8
  %20 = icmp eq %"class.gfx::ImageSkiaRep"* %19, %15
  br i1 %20, label %28, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"class.gfx::ImageSkiaRep"* [ %23, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %22, i64 -1
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %23) #10
  %24 = icmp eq %"class.gfx::ImageSkiaRep"* %23, %15
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector.577"* %4 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %17
  %29 = phi i8* [ %27, %25 ], [ %18, %17 ]
  store %"class.gfx::ImageSkiaRep"* %15, %"class.gfx::ImageSkiaRep"** %9, align 8
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %14, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret %0, %class.SkBitmap* nonnull dereferenceable(56) %3, float 1.000000e+00) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret void

31:                                               ; preds = %2, %42
  %32 = phi float [ %43, %42 ], [ 0.000000e+00, %2 ]
  %33 = phi %"class.gfx::ImageSkiaRep"* [ %44, %42 ], [ %8, %2 ]
  %34 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %33, i64 0, i32 6
  %35 = load float, float* %34, align 8
  %36 = fcmp oeq float %35, 0.000000e+00
  %37 = select i1 %36, float 1.000000e+00, float %35
  %38 = fcmp ogt float %37, %32
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %33) #10
  %41 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %3, %class.SkBitmap* dereferenceable(56) %40) #10
  br label %42

42:                                               ; preds = %39, %31
  %43 = phi float [ %37, %39 ], [ %32, %31 ]
  %44 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %33, i64 1
  %45 = icmp eq %"class.gfx::ImageSkiaRep"* %44, %10
  br i1 %45, label %12, label %31
}

declare void @_ZN5views15StatusIconLinux11SetDelegateEPNS0_8DelegateE(%"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux::Delegate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapperC2E13scoped_refptrI19StatusIconLinuxDbusERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper*, %class.StatusIconLinuxDbus*, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %1, i64 0, i32 0
  tail call void @_ZN22StatusIconLinuxWrapperC2EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper* %0, %"class.views::StatusIconLinux"* %5, i32 0, %"class.gfx::ImageSkia"* dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %6 = icmp eq %class.StatusIconLinuxDbus* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %1, i64 0, i32 2, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  br label %9

9:                                                ; preds = %4, %7
  %10 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 4
  %11 = ptrtoint %class.StatusIconLinuxDbus* %1 to i64
  %12 = bitcast %class.scoped_refptr.42* %10 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr.42, %class.scoped_refptr.42* %10, i64 0, i32 0
  %14 = load %class.StatusIconLinuxDbus*, %class.StatusIconLinuxDbus** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %class.StatusIconLinuxDbus* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %14, i64 0, i32 2
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 -6
  %24 = bitcast %"class.base::RefCounted"* %23 to %class.StatusIconLinuxDbus*
  %25 = bitcast %"class.base::RefCounted"* %23 to void (%class.StatusIconLinuxDbus*)***
  %26 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %26, i64 1
  %28 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %27, align 8
  tail call void %28(%class.StatusIconLinuxDbus* nonnull %24) #10
  br label %29

29:                                               ; preds = %9, %16, %22
  br i1 %6, label %43, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %1, i64 0, i32 2
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #10
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 -6
  %38 = bitcast %"class.base::RefCounted"* %37 to %class.StatusIconLinuxDbus*
  %39 = bitcast %"class.base::RefCounted"* %37 to void (%class.StatusIconLinuxDbus*)***
  %40 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %40, i64 1
  %42 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %41, align 8
  tail call void %42(%class.StatusIconLinuxDbus* nonnull %38) #10
  br label %43

43:                                               ; preds = %29, %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapperC2ENSt3__110unique_ptrIN5views15StatusIconLinuxENS0_14default_deleteIS3_EEEENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper*, %"class.views::StatusIconLinux"*, i32, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.views::StatusIconLinux"* %1 to i64
  tail call void @_ZN22StatusIconLinuxWrapperC2EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper* %0, %"class.views::StatusIconLinux"* %1, i32 %2, %"class.gfx::ImageSkia"* dereferenceable(8) %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %7 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.217"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.views::StatusIconLinux"* %9, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.views::StatusIconLinux"* %9 to void (%"class.views::StatusIconLinux"*)***
  %14 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %14, i64 1
  %16 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %15, align 8
  tail call void %16(%"class.views::StatusIconLinux"* nonnull %9) #10
  br label %17

17:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 1
  %4 = bitcast %"class.views::StatusIconLinux::Delegate"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [10 x i8*], [5 x i8*] }, { [16 x i8*], [10 x i8*], [5 x i8*] }* @_ZTV22StatusIconLinuxWrapper, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 10
  %6 = load %class.StatusIconMenuModel*, %class.StatusIconMenuModel** %5, align 8
  %7 = icmp eq %class.StatusIconMenuModel* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 2
  tail call void @_ZN19StatusIconMenuModel14RemoveObserverEPNS_8ObserverE(%class.StatusIconMenuModel* nonnull %6, %"class.StatusIconMenuModel::Observer"* %9) #10
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 8
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %20) #10
  %21 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %21, align 8
  store %"class.views::StatusIconLinux"* null, %"class.views::StatusIconLinux"** %21, align 8
  %23 = icmp eq %"class.views::StatusIconLinux"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.views::StatusIconLinux"* %22 to void (%"class.views::StatusIconLinux"*)***
  %26 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %26, i64 1
  %28 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %27, align 8
  tail call void %28(%"class.views::StatusIconLinux"* nonnull %22) #10
  br label %29

29:                                               ; preds = %19, %24
  %30 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 4, i32 0
  %31 = load %class.StatusIconLinuxDbus*, %class.StatusIconLinuxDbus** %30, align 8
  %32 = icmp eq %class.StatusIconLinuxDbus* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %31, i64 0, i32 2
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #10
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 -6
  %41 = bitcast %"class.base::RefCounted"* %40 to %class.StatusIconLinuxDbus*
  %42 = bitcast %"class.base::RefCounted"* %40 to void (%class.StatusIconLinuxDbus*)***
  %43 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %43, i64 1
  %45 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %44, align 8
  tail call void %45(%class.StatusIconLinuxDbus* nonnull %41) #10
  br label %46

46:                                               ; preds = %29, %33, %39
  %47 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 3
  tail call void @_ZN26DesktopNotificationBalloonD1Ev(%class.DesktopNotificationBalloon* %47) #10
  tail call void @_ZN5views15StatusIconLinux8DelegateD2Ev(%"class.views::StatusIconLinux::Delegate"* %3) #10
  %48 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0
  tail call void @_ZN10StatusIconD2Ev(%class.StatusIcon* %48) #10
  ret void
}

declare void @_ZN19StatusIconMenuModel14RemoveObserverEPNS_8ObserverE(%class.StatusIconMenuModel*, %"class.StatusIconMenuModel::Observer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN26DesktopNotificationBalloonD1Ev(%class.DesktopNotificationBalloon*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5views15StatusIconLinux8DelegateD2Ev(%"class.views::StatusIconLinux::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10StatusIconD2Ev(%class.StatusIcon*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N22StatusIconLinuxWrapperD1Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.42* %2 to %class.StatusIconLinuxWrapper*
  tail call void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N22StatusIconLinuxWrapperD1Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 3
  %3 = bitcast %class.DesktopNotificationBalloon* %2 to %class.StatusIconLinuxWrapper*
  tail call void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapperD0Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  tail call void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper* %0) #10
  %2 = bitcast %class.StatusIconLinuxWrapper* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N22StatusIconLinuxWrapperD0Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.42* %2 to %class.StatusIconLinuxWrapper*
  tail call void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper* %3) #10
  %4 = bitcast %class.scoped_refptr.42* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N22StatusIconLinuxWrapperD0Ev(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 3
  %3 = bitcast %class.DesktopNotificationBalloon* %2 to %class.StatusIconLinuxWrapper*
  tail call void @_ZN22StatusIconLinuxWrapperD2Ev(%class.StatusIconLinuxWrapper* %3) #10
  %4 = bitcast %class.DesktopNotificationBalloon* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper8SetImageERKN3gfx9ImageSkiaE(%class.StatusIconLinuxWrapper*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  call fastcc void @_ZN12_GLOBAL__N_115GetBestImageRepERKN3gfx9ImageSkiaE(%"class.gfx::ImageSkia"* nonnull sret %3, %"class.gfx::ImageSkia"* dereferenceable(8) %1)
  %5 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 8
  %6 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %5, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %3) #10
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %7 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  %8 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %7, align 8
  %9 = icmp eq %"class.views::StatusIconLinux"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.views::StatusIconLinux"* %8 to void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)***
  %12 = load void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)**, void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)*, void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)** %12, i64 2
  %14 = load void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)*, void (%"class.views::StatusIconLinux"*, %"class.gfx::ImageSkia"*)** %13, align 8
  call void %14(%"class.views::StatusIconLinux"* nonnull %8, %"class.gfx::ImageSkia"* dereferenceable(8) %5) #10
  br label %15

15:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper10SetToolTipERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %5 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  %6 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %5, align 8
  %7 = icmp eq %"class.views::StatusIconLinux"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.views::StatusIconLinux"* %6 to void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)**, void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)*, void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)** %10, i64 3
  %12 = load void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)*, void (%"class.views::StatusIconLinux"*, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.views::StatusIconLinux"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !13
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !13
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !16, !noalias !13
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !16, !noalias !13
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !13
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !13
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !16, !noalias !13
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !16, !noalias !13
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !13
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !13
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !16, !noalias !13
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !16, !noalias !13
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !13
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !13
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !16, !noalias !13
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !16, !noalias !13
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !18

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !13
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !16, !noalias !13
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !16, !noalias !13
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !19

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !20

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !21

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !22
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !22
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !25, !noalias !22
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !25, !noalias !22
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !22
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !22
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !25, !noalias !22
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !25, !noalias !22
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !22
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !22
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !25, !noalias !22
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !25, !noalias !22
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !22
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !22
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !25, !noalias !22
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !25, !noalias !22
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !27

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !22
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !22
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !25, !noalias !22
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !25, !noalias !22
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !28

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !29

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !30

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !31
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !31
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !34, !noalias !31
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !34, !noalias !31
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !31
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !31
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !34, !noalias !31
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !34, !noalias !31
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !31
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !31
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !34, !noalias !31
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !34, !noalias !31
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !31
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !31
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !34, !noalias !31
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !34, !noalias !31
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !36

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !31
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !31
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !34, !noalias !31
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !34, !noalias !31
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !37

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !38

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !39

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper14DisplayBalloonERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESC_RKN14message_center10NotifierIdE(%class.StatusIconLinuxWrapper*, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"struct.message_center::NotifierId"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 3
  tail call void @_ZN26DesktopNotificationBalloon14DisplayBalloonERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESC_RKN14message_center10NotifierIdE(%class.DesktopNotificationBalloon* %6, %"class.gfx::ImageSkia"* dereferenceable(8) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"struct.message_center::NotifierId"* dereferenceable(176) %4) #10
  ret void
}

declare void @_ZN26DesktopNotificationBalloon14DisplayBalloonERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESC_RKN14message_center10NotifierIdE(%class.DesktopNotificationBalloon*, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"struct.message_center::NotifierId"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper7OnClickEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0
  tail call void @_ZN10StatusIcon18DispatchClickEventEv(%class.StatusIcon* %2) #10
  ret void
}

declare void @_ZN10StatusIcon18DispatchClickEventEv(%class.StatusIcon*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N22StatusIconLinuxWrapper7OnClickEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.42* %2 to %class.StatusIcon*
  tail call void @_ZN10StatusIcon18DispatchClickEventEv(%class.StatusIcon* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22StatusIconLinuxWrapper14HasClickActionEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK10StatusIcon12HasObserversEv(%class.StatusIcon* %2) #10
  ret i1 %3
}

declare zeroext i1 @_ZNK10StatusIcon12HasObserversEv(%class.StatusIcon*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_N22StatusIconLinuxWrapper14HasClickActionEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.42* %2 to %class.StatusIcon*
  %4 = tail call zeroext i1 @_ZNK10StatusIcon12HasObserversEv(%class.StatusIcon* %3) #10
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.gfx::ImageSkia"* @_ZNK22StatusIconLinuxWrapper8GetImageEv(%class.StatusIconLinuxWrapper* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 8
  ret %"class.gfx::ImageSkia"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.gfx::ImageSkia"* @_ZThn72_NK22StatusIconLinuxWrapper8GetImageEv(%class.StatusIconLinuxWrapper* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %class.scoped_refptr.42, %class.scoped_refptr.42* %2, i64 16
  %4 = bitcast %class.scoped_refptr.42* %3 to %"class.gfx::ImageSkia"*
  ret %"class.gfx::ImageSkia"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK22StatusIconLinuxWrapper10GetToolTipEv(%class.StatusIconLinuxWrapper* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 9
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZThn72_NK22StatusIconLinuxWrapper10GetToolTipEv(%class.StatusIconLinuxWrapper* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %class.scoped_refptr.42, %class.scoped_refptr.42* %2, i64 17
  %4 = bitcast %class.scoped_refptr.42* %3 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::MenuModel"* @_ZNK22StatusIconLinuxWrapper12GetMenuModelEv(%class.StatusIconLinuxWrapper* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 10
  %3 = bitcast %class.StatusIconMenuModel** %2 to %"class.ui::MenuModel"**
  %4 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %3, align 8
  ret %"class.ui::MenuModel"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::MenuModel"* @_ZThn72_NK22StatusIconLinuxWrapper12GetMenuModelEv(%class.StatusIconLinuxWrapper* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %class.scoped_refptr.42, %class.scoped_refptr.42* %2, i64 20
  %4 = bitcast %class.scoped_refptr.42* %3 to %"class.ui::MenuModel"**
  %5 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %4, align 8
  ret %"class.ui::MenuModel"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper26OnImplInitializationFailedEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %58 [
    i32 0, label %4
    i32 1, label %41
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 4
  %6 = bitcast %class.scoped_refptr.42* %5 to i64*
  %7 = getelementptr inbounds %class.scoped_refptr.42, %class.scoped_refptr.42* %5, i64 0, i32 0
  %8 = load %class.StatusIconLinuxDbus*, %class.StatusIconLinuxDbus** %7, align 8
  store i64 0, i64* %6, align 8
  %9 = icmp eq %class.StatusIconLinuxDbus* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %8, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #10
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 -6
  %18 = bitcast %"class.base::RefCounted"* %17 to %class.StatusIconLinuxDbus*
  %19 = bitcast %"class.base::RefCounted"* %17 to void (%class.StatusIconLinuxDbus*)***
  %20 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %20, i64 1
  %22 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %21, align 8
  tail call void %22(%class.StatusIconLinuxDbus* nonnull %18) #10
  br label %23

23:                                               ; preds = %4, %10, %16
  %24 = tail call i8* @_Znwm(i64 1080) #12
  %25 = bitcast i8* %24 to %class.StatusIconButtonLinux*
  tail call void @_ZN21StatusIconButtonLinuxC1Ev(%class.StatusIconButtonLinux* nonnull %25) #10
  %26 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %27 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %26, align 8
  %28 = bitcast %"class.views::StatusIconLinux"** %26 to i8**
  store i8* %24, i8** %28, align 8
  %29 = icmp eq %"class.views::StatusIconLinux"* %27, null
  %30 = bitcast i8* %24 to %"class.views::StatusIconLinux"*
  br i1 %29, label %37, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.views::StatusIconLinux"* %27 to void (%"class.views::StatusIconLinux"*)***
  %33 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %33, i64 1
  %35 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %34, align 8
  tail call void %35(%"class.views::StatusIconLinux"* nonnull %27) #10
  %36 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %26, align 8
  br label %37

37:                                               ; preds = %31, %23
  %38 = phi %"class.views::StatusIconLinux"* [ %36, %31 ], [ %30, %23 ]
  %39 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  store %"class.views::StatusIconLinux"* %38, %"class.views::StatusIconLinux"** %39, align 8
  store i32 1, i32* %2, align 8
  %40 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 1
  tail call void @_ZN5views15StatusIconLinux11SetDelegateEPNS0_8DelegateE(%"class.views::StatusIconLinux"* %38, %"class.views::StatusIconLinux::Delegate"* %40) #10
  br label %58

41:                                               ; preds = %1
  %42 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %42, align 8
  store %"class.views::StatusIconLinux"* null, %"class.views::StatusIconLinux"** %42, align 8
  %44 = icmp eq %"class.views::StatusIconLinux"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.views::StatusIconLinux"* %43 to void (%"class.views::StatusIconLinux"*)***
  %47 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %47, i64 1
  %49 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %48, align 8
  tail call void %49(%"class.views::StatusIconLinux"* nonnull %43) #10
  br label %50

50:                                               ; preds = %41, %45
  %51 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  store %"class.views::StatusIconLinux"* null, %"class.views::StatusIconLinux"** %51, align 8
  store i32 2, i32* %2, align 8
  %52 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 10
  %53 = load %class.StatusIconMenuModel*, %class.StatusIconMenuModel** %52, align 8
  %54 = icmp eq %class.StatusIconMenuModel* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 2
  tail call void @_ZN19StatusIconMenuModel14RemoveObserverEPNS_8ObserverE(%class.StatusIconMenuModel* nonnull %53, %"class.StatusIconMenuModel::Observer"* %56) #10
  br label %57

57:                                               ; preds = %50, %55
  store %class.StatusIconMenuModel* null, %class.StatusIconMenuModel** %52, align 8
  br label %58

58:                                               ; preds = %37, %57, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N22StatusIconLinuxWrapper26OnImplInitializationFailedEv(%class.StatusIconLinuxWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.42* %2 to %class.StatusIconLinuxWrapper*
  tail call void @_ZN22StatusIconLinuxWrapper26OnImplInitializationFailedEv(%class.StatusIconLinuxWrapper* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper18OnMenuStateChangedEv(%class.StatusIconLinuxWrapper* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  %3 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %2, align 8
  %4 = icmp eq %"class.views::StatusIconLinux"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.views::StatusIconLinux"* %3 to void (%"class.views::StatusIconLinux"*)***
  %7 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %7, i64 5
  %9 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %8, align 8
  tail call void %9(%"class.views::StatusIconLinux"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N22StatusIconLinuxWrapper18OnMenuStateChangedEv(%class.StatusIconLinuxWrapper* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 -1, i32 3
  %3 = getelementptr inbounds %class.DesktopNotificationBalloon, %class.DesktopNotificationBalloon* %2, i64 14
  %4 = bitcast %class.DesktopNotificationBalloon* %3 to %"class.views::StatusIconLinux"**
  %5 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %4, align 8
  %6 = icmp eq %"class.views::StatusIconLinux"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.views::StatusIconLinux"* %5 to void (%"class.views::StatusIconLinux"*)***
  %9 = load void (%"class.views::StatusIconLinux"*)**, void (%"class.views::StatusIconLinux"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %9, i64 5
  %11 = load void (%"class.views::StatusIconLinux"*)*, void (%"class.views::StatusIconLinux"*)** %10, align 8
  tail call void %11(%"class.views::StatusIconLinux"* nonnull %5) #10
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.StatusIconLinuxWrapper* @_ZN22StatusIconLinuxWrapper23CreateWrappedStatusIconERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.gfx::ImageSkia"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 168) #12
  %4 = bitcast i8* %3 to %class.StatusIconLinuxWrapper*
  %5 = tail call i8* @_Znwm(i64 184) #12
  %6 = bitcast i8* %5 to %class.StatusIconLinuxDbus*
  tail call void @_ZN19StatusIconLinuxDbusC1Ev(%class.StatusIconLinuxDbus* nonnull %6) #10
  %7 = getelementptr inbounds i8, i8* %5, i64 24
  %8 = bitcast i8* %7 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %9 = bitcast i8* %5 to %"class.views::StatusIconLinux"*
  tail call void @_ZN22StatusIconLinuxWrapperC2EPN5views15StatusIconLinuxENS_14StatusIconTypeERKN3gfx9ImageSkiaERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%class.StatusIconLinuxWrapper* nonnull %4, %"class.views::StatusIconLinux"* nonnull %9, i32 0, %"class.gfx::ImageSkia"* dereferenceable(8) %0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %10 = getelementptr inbounds i8, i8* %3, i64 96
  %11 = ptrtoint i8* %5 to i64
  %12 = bitcast i8* %10 to i64*
  %13 = bitcast i8* %10 to %class.StatusIconLinuxDbus**
  %14 = load %class.StatusIconLinuxDbus*, %class.StatusIconLinuxDbus** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %class.StatusIconLinuxDbus* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.StatusIconLinuxDbus, %class.StatusIconLinuxDbus* %14, i64 0, i32 2
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 -6
  %24 = bitcast %"class.base::RefCounted"* %23 to %class.StatusIconLinuxDbus*
  %25 = bitcast %"class.base::RefCounted"* %23 to void (%class.StatusIconLinuxDbus*)***
  %26 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %26, i64 1
  %28 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %27, align 8
  tail call void %28(%class.StatusIconLinuxDbus* nonnull %24) #10
  br label %29

29:                                               ; preds = %22, %16, %2
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #10
  %30 = bitcast i8* %7 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = bitcast i8* %5 to void (%class.StatusIconLinuxDbus*)***
  %35 = load void (%class.StatusIconLinuxDbus*)**, void (%class.StatusIconLinuxDbus*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %35, i64 1
  %37 = load void (%class.StatusIconLinuxDbus*)*, void (%class.StatusIconLinuxDbus*)** %36, align 8
  tail call void %37(%class.StatusIconLinuxDbus* nonnull %6) #10
  br label %38

38:                                               ; preds = %29, %33
  ret %class.StatusIconLinuxWrapper* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22StatusIconLinuxWrapper25UpdatePlatformContextMenuEP19StatusIconMenuModel(%class.StatusIconLinuxWrapper*, %class.StatusIconMenuModel*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 6
  %4 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %3, align 8
  %5 = icmp eq %"class.views::StatusIconLinux"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 10
  %8 = load %class.StatusIconMenuModel*, %class.StatusIconMenuModel** %7, align 8
  %9 = icmp eq %class.StatusIconMenuModel* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 2
  tail call void @_ZN19StatusIconMenuModel14RemoveObserverEPNS_8ObserverE(%class.StatusIconMenuModel* nonnull %8, %"class.StatusIconMenuModel::Observer"* %11) #10
  %12 = load %"class.views::StatusIconLinux"*, %"class.views::StatusIconLinux"** %3, align 8
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.views::StatusIconLinux"* [ %4, %6 ], [ %12, %10 ]
  %15 = getelementptr inbounds %class.StatusIconMenuModel, %class.StatusIconMenuModel* %1, i64 0, i32 0, i32 0
  %16 = bitcast %"class.views::StatusIconLinux"* %14 to void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)***
  %17 = load void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)**, void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)*, void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)** %17, i64 4
  %19 = load void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)*, void (%"class.views::StatusIconLinux"*, %"class.ui::MenuModel"*)** %18, align 8
  tail call void %19(%"class.views::StatusIconLinux"* %14, %"class.ui::MenuModel"* %15) #10
  store %class.StatusIconMenuModel* %1, %class.StatusIconMenuModel** %7, align 8
  %20 = icmp eq %class.StatusIconMenuModel* %1, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %class.StatusIconLinuxWrapper, %class.StatusIconLinuxWrapper* %0, i64 0, i32 2
  tail call void @_ZN19StatusIconMenuModel11AddObserverEPNS_8ObserverE(%class.StatusIconMenuModel* nonnull %1, %"class.StatusIconMenuModel::Observer"* %22) #10
  br label %23

23:                                               ; preds = %13, %2, %21
  ret void
}

declare void @_ZN19StatusIconMenuModel11AddObserverEPNS_8ObserverE(%class.StatusIconMenuModel*, %"class.StatusIconMenuModel::Observer"*) local_unnamed_addr #1

declare void @_ZN10StatusIcon12ForceVisibleEv(%class.StatusIcon*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZNK3gfx9ImageSkia10image_repsEv(%"class.std::__1::vector.577"* sret, %"class.gfx::ImageSkia"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret, %class.SkBitmap* dereferenceable(56), float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !40
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !40
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !43, !noalias !40
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !43, !noalias !40
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !40
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !40
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !43, !noalias !40
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !43, !noalias !40
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !40
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !40
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !43, !noalias !40
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !43, !noalias !40
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !40
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !40
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !43, !noalias !40
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !43, !noalias !40
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !45

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !40
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !40
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !43, !noalias !40
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !43, !noalias !40
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !46

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !47

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !48

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !49

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !50

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !51

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !53
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !53
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !56, !noalias !53
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !56, !noalias !53
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !53
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !53
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !56, !noalias !53
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !56, !noalias !53
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !53
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !53
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !56, !noalias !53
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !56, !noalias !53
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !53
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !53
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !56, !noalias !53
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !56, !noalias !53
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !58

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !53
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !53
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !56, !noalias !53
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !56, !noalias !53
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !59

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !60

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !61

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN21StatusIconButtonLinuxC1Ev(%class.StatusIconButtonLinux*) unnamed_addr #1

declare void @_ZN19StatusIconLinuxDbusC1Ev(%class.StatusIconLinuxDbus*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !52, !8}
!52 = !{!"llvm.loop.unroll.runtime.disable"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
