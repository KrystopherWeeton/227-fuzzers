; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_platform_data.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_platform_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::WebSandboxSupport" = type { i32 (...)** }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"struct.SkTypeface::LocalizedString" = type { %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp.13 }
%class.sk_sp.13 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.15, %class.scoped_refptr.18, %class.scoped_refptr.28, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.34 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.14 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.14 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.35", [4 x i8] }>
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.15 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.16", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.18 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.19", %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.blink::FontSettings.19" = type { %"class.WTF::Vector.20" }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.blink::FontTagValuePair.23"*, i32, i32 }
%"class.blink::FontTagValuePair.23" = type { i32, float }
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.28 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.29", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.31, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.31 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.32", [4 x i8] }>
%"class.WTF::RefCounted.32" = type { %"class.base::RefCounted.33" }
%"class.base::RefCounted.33" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.34 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"struct.std::__1::__less" = type { i8 }
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%class.sk_sp.42 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

@_ZN5blink9FontCache20device_scale_factor_E = external local_unnamed_addr global float, align 4
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1

@_ZN5blink16FontPlatformDataC1EN3WTF25HashTableDeletedValueTypeE = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*, i32), void (%"class.blink::FontPlatformData"*, i32)* @_ZN5blink16FontPlatformDataC2EN3WTF25HashTableDeletedValueTypeE
@_ZN5blink16FontPlatformDataC1Ev = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*), void (%"class.blink::FontPlatformData"*)* @_ZN5blink16FontPlatformDataC2Ev
@_ZN5blink16FontPlatformDataC1EfbbNS_15FontOrientationE = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*, float, i1, i1, i32), void (%"class.blink::FontPlatformData"*, float, i1, i1, i32)* @_ZN5blink16FontPlatformDataC2EfbbNS_15FontOrientationE
@_ZN5blink16FontPlatformDataC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"*), void (%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"*)* @_ZN5blink16FontPlatformDataC2ERKS0_
@_ZN5blink16FontPlatformDataC1ERKS0_f = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"*, float), void (%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"*, float)* @_ZN5blink16FontPlatformDataC2ERKS0_f
@_ZN5blink16FontPlatformDataC1E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*, %class.sk_sp*, %"class.std::__1::basic_string"*, float, i1, i1, i32), void (%"class.blink::FontPlatformData"*, %class.sk_sp*, %"class.std::__1::basic_string"*, float, i1, i1, i32)* @_ZN5blink16FontPlatformDataC2E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE
@_ZN5blink16FontPlatformDataD1Ev = hidden unnamed_addr alias void (%"class.blink::FontPlatformData"*), void (%"class.blink::FontPlatformData"*)* @_ZN5blink16FontPlatformDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2EN3WTF25HashTableDeletedValueTypeE(%"class.blink::FontPlatformData"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  %5 = bitcast %"class.blink::FontPlatformData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 39, i1 false)
  store i8 2, i8* %4, align 1
  %6 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 1
  store i8 2, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 2
  store i8 2, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 4
  store i8 2, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 5
  store i8 2, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 6
  store i8 2, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  store %"class.blink::HarfBuzzFace"* null, %"class.blink::HarfBuzzFace"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  store i8 1, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2Ev(%"class.blink::FontPlatformData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  %4 = bitcast %"class.blink::FontPlatformData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 39, i1 false)
  store i8 2, i8* %3, align 1
  %5 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 1
  store i8 2, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 2
  store i8 2, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 4
  store i8 2, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 5
  store i8 2, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 6
  store i8 2, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  store %"class.blink::HarfBuzzFace"* null, %"class.blink::HarfBuzzFace"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2EfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"* nocapture, float, i1 zeroext, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %6 = zext i1 %2 to i8
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %9 = bitcast %"class.blink::FontPlatformData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  store float %1, float* %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  store i8 %6, i8* %10, align 4
  %11 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  store i8 %7, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  store i32 %4, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  store i8 2, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 1
  store i8 2, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 2
  store i8 2, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 4
  store i8 2, i8* %18, align 1
  %19 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 5
  store i8 2, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 6
  store i8 2, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  store %"class.blink::HarfBuzzFace"* null, %"class.blink::HarfBuzzFace"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  store i8 0, i8* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2ERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkTypeface*, %class.SkTypeface** %4, align 8
  %6 = icmp eq %class.SkTypeface* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkTypeface* %5, %class.SkTypeface** %3, align 8
  %11 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #10
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %22, i64 %24) #10
  br label %25

25:                                               ; preds = %17, %20
  %26 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 2
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = bitcast float* %26 to i32*
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  store i8 %33, i8* %31, align 4
  %34 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  %35 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  store i8 %36, i8* %34, align 1
  %37 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  %38 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 5
  %39 = load i8, i8* %38, align 2, !range !2
  store i8 %39, i8* %37, align 2
  %40 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  %41 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 7
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  %44 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 7, i1 false)
  %45 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  store %"class.blink::HarfBuzzFace"* null, %"class.blink::HarfBuzzFace"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  store i8 0, i8* %46, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2ERKS0_f(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* nocapture readonly dereferenceable(72), float) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 0, i32 0
  %8 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %9 = icmp eq %class.SkTypeface* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %3, %10
  store %class.SkTypeface* %8, %class.SkTypeface** %6, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i8* [ %22, %20 ], [ %24, %23 ]
  %27 = tail call i64 @strlen(i8* %26) #10
  %28 = icmp ugt i64 %27, -17
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #11
  unreachable

31:                                               ; preds = %25
  %32 = icmp ult i64 %27, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %31
  %34 = add nuw i64 %27, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

42:                                               ; preds = %31
  %43 = trunc i64 %27 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  %46 = icmp eq i64 %27, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42, %33
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %41, %33 ]
  %49 = phi i8* [ %14, %42 ], [ %36, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %26, i64 %27, i1 false) #10
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %48, %47 ]
  %52 = phi i8* [ %14, %42 ], [ %49, %47 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %27
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 3
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 4
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp ne i8 %58, 0
  %60 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 7
  %61 = load i32, i32* %60, align 8
  call void @_ZN5blink16FontPlatformDataC2E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"* %0, %class.sk_sp* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, float %2, i1 zeroext %56, i1 zeroext %59, i32 %61)
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %50, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br i1 %9, label %79, label %69

69:                                               ; preds = %68
  %70 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkTypeface* %8 to %class.SkRefCntBase*
  %75 = bitcast %class.SkTypeface* %8 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  tail call void %78(%class.SkRefCntBase* nonnull %74) #10
  br label %79

79:                                               ; preds = %68, %69, %73
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataC2E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"*, %class.sk_sp* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), float, i1 zeroext, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"struct.blink::WebFontRenderStyle", align 8
  %9 = zext i1 %4 to i8
  %10 = zext i1 %5 to i8
  %11 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %13 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %7, %15
  store %class.SkTypeface* %13, %class.SkTypeface** %11, align 8
  %19 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #10
  br label %32

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %29, i64 %31) #10
  br label %32

32:                                               ; preds = %24, %27
  %33 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  store float %3, float* %33, align 8
  %34 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  store i8 %9, i8* %34, align 4
  %35 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  store i8 %10, i8* %35, align 1
  %36 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  store i32 %6, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8
  %39 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %38, i64 0, i32 0
  store i8 2, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 1
  store i8 2, i8* %40, align 1
  %41 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 2
  store i8 2, i8* %41, align 1
  %42 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 3
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 4
  store i8 2, i8* %43, align 1
  %44 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 5
  store i8 2, i8* %44, align 1
  %45 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 6
  store i8 2, i8* %45, align 1
  %46 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  store %"class.blink::HarfBuzzFace"* null, %"class.blink::HarfBuzzFace"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  store i8 0, i8* %47, align 8
  %48 = tail call i56 @_ZN5blink18WebFontRenderStyle10GetDefaultEv() #10
  %49 = bitcast %"struct.blink::WebFontRenderStyle"* %38 to i56*
  store i56 %48, i56* %49, align 4
  %50 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %50) #10
  %51 = load float, float* %33, align 8
  %52 = load %class.SkTypeface*, %class.SkTypeface** %11, align 8
  %53 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %52, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = tail call i56 @_ZN5blink16FontPlatformData22QuerySystemRenderStyleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEf11SkFontStyle(%"class.blink::FontPlatformData"* undef, %"class.std::__1::basic_string"* dereferenceable(24) %19, float %51, i32 %54)
  %56 = bitcast %"struct.blink::WebFontRenderStyle"* %8 to i56*
  store i56 %55, i56* %56, align 8
  %57 = tail call zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() #10
  br i1 %57, label %58, label %62

58:                                               ; preds = %32
  %59 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %8, i64 0, i32 6
  %60 = tail call zeroext i1 @_ZN5blink14WebTestSupport39IsTextSubpixelPositioningAllowedForTestEv() #10
  %61 = select i1 %60, i8 2, i8 0
  store i8 %61, i8* %59, align 2
  br label %62

62:                                               ; preds = %58, %32
  call void @_ZN5blink18WebFontRenderStyle12OverrideWithERKS0_(%"struct.blink::WebFontRenderStyle"* %38, %"struct.blink::WebFontRenderStyle"* nonnull dereferenceable(7) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %50) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i56 @_ZN5blink18WebFontRenderStyle10GetDefaultEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i56 @_ZN5blink16FontPlatformData22QuerySystemRenderStyleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEf11SkFontStyle(%"class.blink::FontPlatformData"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), float, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::WebFontRenderStyle", align 8
  %6 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.blink::WebFontRenderStyle", %"struct.blink::WebFontRenderStyle"* %5, i64 0, i32 6
  store i8 2, i8* %6, align 8
  store i8 2, i8* %7, align 1
  store i8 2, i8* %8, align 2
  store i8 0, i8* %9, align 1
  store i8 2, i8* %10, align 4
  store i8 2, i8* %11, align 1
  store i8 2, i8* %12, align 2
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %52, label %22

22:                                               ; preds = %4
  %23 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #10
  %24 = bitcast %"class.blink::Platform"* %23 to %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)***
  %25 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)**, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %25, i64 2
  %27 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %26, align 8
  %28 = tail call %"class.blink::WebSandboxSupport"* %27(%"class.blink::Platform"* %23) #10
  %29 = icmp eq %"class.blink::WebSandboxSupport"* %28, null
  br i1 %29, label %52, label %30

30:                                               ; preds = %22
  %31 = and i32 %3, 65528
  %32 = icmp ugt i32 %31, 599
  %33 = icmp ugt i32 %3, 16777215
  %34 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #10
  %35 = bitcast %"class.blink::Platform"* %34 to %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)***
  %36 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)**, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %36, i64 2
  %38 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %37, align 8
  %39 = tail call %"class.blink::WebSandboxSupport"* %38(%"class.blink::Platform"* %34) #10
  %40 = load i8, i8* %14, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %45 = select i1 %41, i8* %43, i8* %44
  %46 = fptosi float %2 to i32
  %47 = load float, float* @_ZN5blink9FontCache20device_scale_factor_E, align 4
  %48 = bitcast %"class.blink::WebSandboxSupport"* %39 to void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)***
  %49 = load void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)**, void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)*, void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)** %49, i64 4
  %51 = load void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)*, void (%"class.blink::WebSandboxSupport"*, i8*, i32, i1, i1, float, %"struct.blink::WebFontRenderStyle"*)** %50, align 8
  call void %51(%"class.blink::WebSandboxSupport"* %39, i8* %45, i32 %46, i1 zeroext %32, i1 zeroext %33, float %47, %"struct.blink::WebFontRenderStyle"* nonnull %5) #10
  br label %52

52:                                               ; preds = %22, %4, %30
  %53 = bitcast %"struct.blink::WebFontRenderStyle"* %5 to i56*
  %54 = load i56, i56* %53, align 8
  ret i56 %54
}

declare zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14WebTestSupport39IsTextSubpixelPositioningAllowedForTestEv() local_unnamed_addr #2

declare void @_ZN5blink18WebFontRenderStyle12OverrideWithERKS0_(%"struct.blink::WebFontRenderStyle"*, %"struct.blink::WebFontRenderStyle"* dereferenceable(7)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FontPlatformDataD2Ev(%"class.blink::FontPlatformData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10, i32 0
  %3 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %2, align 8
  %4 = icmp eq %"class.blink::HarfBuzzFace"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink12HarfBuzzFaceD1Ev(%"class.blink::HarfBuzzFace"* nonnull %3) #10
  %11 = bitcast %"class.blink::HarfBuzzFace"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %5, %10
  %13 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %12, %18
  %22 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %23 = load %class.SkTypeface*, %class.SkTypeface** %22, align 8
  %24 = icmp eq %class.SkTypeface* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkTypeface* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkTypeface* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  tail call void %34(%class.SkRefCntBase* nonnull %30) #10
  br label %35

35:                                               ; preds = %21, %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.blink::FontPlatformData"* @_ZN5blink16FontPlatformDataaSERKS0_(%"class.blink::FontPlatformData"* returned, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::FontPlatformData"* %0, %1
  br i1 %3, label %89, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkTypeface*, %class.SkTypeface** %5, align 8
  %7 = icmp eq %class.SkTypeface* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  store %class.SkTypeface* %6, %class.SkTypeface** %12, align 8
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkTypeface* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkTypeface* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  %26 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %31, label %46, label %36

36:                                               ; preds = %25
  br i1 %35, label %40, label %37

37:                                               ; preds = %36
  %38 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #10
  br label %56

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %27, i8* %42, i64 %44) #10
  br label %56

46:                                               ; preds = %25
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %52 = zext i8 %34 to i64
  %53 = select i1 %35, i8* %48, i8* %51
  %54 = select i1 %35, i64 %50, i64 %52
  %55 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %27, i8* %53, i64 %54) #10
  br label %56

56:                                               ; preds = %37, %40, %46
  %57 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 2
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %61 = bitcast float* %60 to i32*
  store i32 %59, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !2
  %64 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  store i8 %63, i8* %64, align 4
  %65 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 4
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  store i8 %66, i8* %67, align 1
  %68 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 5
  %69 = load i8, i8* %68, align 2, !range !2
  %70 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  store i8 %69, i8* %70, align 2
  %71 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10
  %72 = bitcast %class.scoped_refptr* %71 to i64*
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 0, i32 0
  %74 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %73, align 8
  store i64 0, i64* %72, align 8
  %75 = icmp eq %"class.blink::HarfBuzzFace"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %56
  %77 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #10
  %78 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink12HarfBuzzFaceD1Ev(%"class.blink::HarfBuzzFace"* nonnull %74) #10
  %82 = bitcast %"class.blink::HarfBuzzFace"* %74 to i8*
  tail call void @free(i8* %82) #10
  br label %83

83:                                               ; preds = %56, %76, %81
  %84 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  %88 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 1 %88, i64 7, i1 false)
  br label %89

89:                                               ; preds = %2, %83
  ret %"class.blink::FontPlatformData"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"* nocapture readonly, %"class.blink::FontPlatformData"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = icmp eq %class.SkTypeface* %4, null
  %6 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 0, i32 0
  %7 = load %class.SkTypeface*, %class.SkTypeface** %6, align 8
  br i1 %5, label %12, label %8

8:                                                ; preds = %2
  %9 = icmp eq %class.SkTypeface* %7, null
  br i1 %9, label %92, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZN10SkTypeface5EqualEPKS_S1_(%class.SkTypeface* nonnull %4, %class.SkTypeface* nonnull %7) #10
  br i1 %11, label %14, label %92

12:                                               ; preds = %2
  %13 = icmp eq %class.SkTypeface* %4, %7
  br i1 %13, label %14, label %92

14:                                               ; preds = %10, %12
  %15 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 2
  %18 = load float, float* %17, align 8
  %19 = fcmp oeq float %16, %18
  br i1 %19, label %20, label %92

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 11
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %22, %24
  br i1 %25, label %26, label %92

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %28, %30
  br i1 %31, label %32, label %92

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %34, %36
  br i1 %37, label %38, label %92

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  %40 = load i8, i8* %39, align 2, !range !2
  %41 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 5
  %42 = load i8, i8* %41, align 2, !range !2
  %43 = icmp eq i8 %40, %42
  br i1 %43, label %44, label %92

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %46, %48
  br i1 %49, label %50, label %92

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %52, %54
  br i1 %55, label %56, label %92

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %58, %60
  br i1 %61, label %62, label %92

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 3
  %64 = load i8, i8* %63, align 1
  %65 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 3
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %64, %66
  br i1 %67, label %68, label %92

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 4
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 4
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %70, %72
  br i1 %73, label %74, label %92

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 5
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 5
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %76, %78
  br i1 %79, label %80, label %92

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8, i32 6
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 8, i32 6
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %82, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %1, i64 0, i32 7
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %88, %90
  br label %92

92:                                               ; preds = %8, %44, %50, %56, %62, %68, %74, %10, %86, %80, %38, %32, %26, %20, %14, %12
  %93 = phi i1 [ false, %80 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %12 ], [ %91, %86 ], [ false, %10 ], [ false, %74 ], [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %8 ]
  ret i1 %93
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkTypeface*, %class.SkTypeface** %2, align 8
  ret %class.SkTypeface* %3
}

declare zeroext i1 @_ZN10SkTypeface5EqualEPKS_S1_(%class.SkTypeface*, %class.SkTypeface*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16FontPlatformData8UniqueIDEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkTypeface*, %class.SkTypeface** %2, align 8
  %4 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData14FontFamilyNameEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkTypeface::LocalizedString", align 8
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = tail call %"class.SkTypeface::LocalizedStrings"* @_ZNK10SkTypeface24createFamilyNameIteratorEv(%class.SkTypeface* %4) #10
  %6 = bitcast %"struct.SkTypeface::LocalizedString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.SkTypeface::LocalizedString"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #10
  %10 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 1
  call void @_ZN8SkStringC1Ev(%class.SkString* %10) #10
  %11 = bitcast %"class.SkTypeface::LocalizedStrings"* %5 to i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)***
  br label %12

12:                                               ; preds = %17, %1
  %13 = load i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)**, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*** %11, align 8
  %14 = getelementptr inbounds i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)** %13, i64 2
  %15 = load i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.SkTypeface::LocalizedStrings"* %5, %"struct.SkTypeface::LocalizedString"* nonnull %2) #10
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %19 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %17
  %23 = icmp eq %"class.SkTypeface::LocalizedStrings"* %5, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.SkTypeface::LocalizedStrings"* %5 to void (%"class.SkTypeface::LocalizedStrings"*)***
  %26 = load void (%"class.SkTypeface::LocalizedStrings"*)**, void (%"class.SkTypeface::LocalizedStrings"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkTypeface::LocalizedStrings"*)*, void (%"class.SkTypeface::LocalizedStrings"*)** %26, i64 1
  %28 = load void (%"class.SkTypeface::LocalizedStrings"*)*, void (%"class.SkTypeface::LocalizedStrings"*)** %27, align 8
  call void %28(%"class.SkTypeface::LocalizedStrings"* nonnull %5) #10
  br label %29

29:                                               ; preds = %22, %24
  %30 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %30, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %30, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %31, i64 %34) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* %10) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.WTF::StringImpl"* %35
}

declare %"class.SkTypeface::LocalizedStrings"* @_ZNK10SkTypeface24createFamilyNameIteratorEv(%class.SkTypeface*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %4 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %3, align 8
  %5 = icmp eq %"class.blink::HarfBuzzFace"* %4, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %9 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = tail call noalias i8* @malloc(i64 40) #10
  %13 = bitcast i8* %12 to %"class.blink::HarfBuzzFace"*
  tail call void @_ZN5blink12HarfBuzzFaceC1EPNS_16FontPlatformDataEm(%"class.blink::HarfBuzzFace"* %13, %"class.blink::FontPlatformData"* %0, i64 %11) #10
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast %class.scoped_refptr* %2 to i64*
  %16 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %3, align 8
  store i64 %14, i64* %15, align 8
  %17 = icmp eq %"class.blink::HarfBuzzFace"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  tail call void @_ZN5blink12HarfBuzzFaceD1Ev(%"class.blink::HarfBuzzFace"* nonnull %16) #10
  %24 = bitcast %"class.blink::HarfBuzzFace"* %16 to i8*
  tail call void @free(i8* %24) #10
  br label %25

25:                                               ; preds = %1, %23, %18, %6
  %26 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %3, align 8
  ret %"class.blink::HarfBuzzFace"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16FontPlatformData28HasSpaceInLigaturesOrKerningEj(%"class.blink::FontPlatformData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %5 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %4, align 8
  %6 = icmp eq %"class.blink::HarfBuzzFace"* %5, null
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %10 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = tail call noalias i8* @malloc(i64 40) #10
  %14 = bitcast i8* %13 to %"class.blink::HarfBuzzFace"*
  tail call void @_ZN5blink12HarfBuzzFaceC1EPNS_16FontPlatformDataEm(%"class.blink::HarfBuzzFace"* %14, %"class.blink::FontPlatformData"* %0, i64 %12) #10
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %class.scoped_refptr* %3 to i64*
  %17 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %4, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.blink::HarfBuzzFace"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"class.blink::HarfBuzzFace", %"class.blink::HarfBuzzFace"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @_ZN5blink12HarfBuzzFaceD1Ev(%"class.blink::HarfBuzzFace"* nonnull %17) #10
  %25 = bitcast %"class.blink::HarfBuzzFace"* %17 to i8*
  tail call void @free(i8* %25) #10
  br label %26

26:                                               ; preds = %24, %19
  %27 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %4, align 8
  br label %28

28:                                               ; preds = %26, %7
  %29 = phi %"class.blink::HarfBuzzFace"* [ %27, %26 ], [ %14, %7 ]
  %30 = icmp eq %"class.blink::HarfBuzzFace"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %2, %28
  %32 = phi %"class.blink::HarfBuzzFace"* [ %29, %28 ], [ %5, %2 ]
  %33 = tail call zeroext i1 @_ZN5blink12HarfBuzzFace28HasSpaceInLigaturesOrKerningEj(%"class.blink::HarfBuzzFace"* nonnull %32, i32 %1) #10
  br label %34

34:                                               ; preds = %28, %31
  %35 = phi i1 [ %33, %31 ], [ false, %28 ]
  ret i1 %35
}

declare zeroext i1 @_ZN5blink12HarfBuzzFace28HasSpaceInLigaturesOrKerningEj(%"class.blink::HarfBuzzFace"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkTypeface*, %class.SkTypeface** %2, align 8
  %4 = tail call i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface* %3) #10
  %5 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = shl nuw nsw i8 %6, 3
  %8 = zext i8 %7 to i32
  %9 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = shl i32 %10, 2
  %12 = or i32 %11, %8
  %13 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = shl nuw nsw i8 %14, 1
  %16 = zext i8 %15 to i32
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = mul nsw i32 %21, 16843009
  %23 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = xor i32 %25, %4
  %27 = xor i32 %26, %22
  ret i32 %27
}

declare i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FontPlatformData21FontContainsCharacterEi(%"class.blink::FontPlatformData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkFont, align 8
  %4 = bitcast %class.SkFont* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %5, align 8
  %6 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %6, align 8
  %7 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %9 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 4
  %10 = bitcast i8* %9 to i32*
  store i32 -1431655766, i32* %10, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %3) #10
  call void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"* %0, %class.SkFont* nonnull %3, float 1.000000e+00, %"class.blink::FontDescription"* undef)
  %11 = call zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont* nonnull %3, i32 %1) #10
  %12 = icmp ne i16 %11, 0
  %13 = load %class.SkTypeface*, %class.SkTypeface** %5, align 8
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkTypeface* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkTypeface* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %2, %15, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret i1 %12
}

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"*, %class.SkFont*, float, %"class.blink::FontDescription"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink18WebFontRenderStyle13ApplyToSkFontEP6SkFontf(%"struct.blink::WebFontRenderStyle"* %6, %class.SkFont* %1, float %2) #10
  %7 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = fcmp ult float %8, 0.000000e+00
  %10 = select i1 %9, float 1.200000e+01, float %8
  tail call void @_ZN6SkFont7setSizeEf(%class.SkFont* %1, float %10) #10
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  store %class.SkTypeface* %13, %class.SkTypeface** %11, align 8
  %18 = atomicrmw add i32* %16, i32 1 monotonic
  br label %20

19:                                               ; preds = %4
  store %class.SkTypeface* null, %class.SkTypeface** %11, align 8
  br label %20

20:                                               ; preds = %19, %15
  %21 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %22 = load %class.SkTypeface*, %class.SkTypeface** %21, align 8
  store %class.SkTypeface* %13, %class.SkTypeface** %21, align 8
  %23 = icmp eq %class.SkTypeface* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkTypeface* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkTypeface* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #10
  br label %34

34:                                               ; preds = %28, %24, %20
  %35 = load %class.SkTypeface*, %class.SkTypeface** %11, align 8
  %36 = icmp eq %class.SkTypeface* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkTypeface* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkTypeface* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  tail call void %46(%class.SkRefCntBase* nonnull %42) #10
  br label %47

47:                                               ; preds = %34, %37, %41
  %48 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = icmp ne i8 %49, 0
  tail call void @_ZN6SkFont11setEmboldenEb(%class.SkFont* %1, i1 zeroext %50) #10
  %51 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 4
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = select i1 %53, float 0.000000e+00, float -2.500000e-01
  tail call void @_ZN6SkFont8setSkewXEf(%class.SkFont* %1, float %54) #10
  %55 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 5
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = icmp eq i8 %56, 0
  tail call void @_ZN6SkFont18setEmbeddedBitmapsEb(%class.SkFont* %1, i1 zeroext %57) #10
  ret void
}

declare zeroext i16 @_ZNK6SkFont14unicharToGlyphEi(%class.SkFont*, i32) local_unnamed_addr #2

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

declare void @_ZNK5blink18WebFontRenderStyle13ApplyToSkFontEP6SkFontf(%"struct.blink::WebFontRenderStyle"*, %class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont11setEmboldenEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6SkFont8setSkewXEf(%class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont18setEmbeddedBitmapsEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16FontPlatformData21ComputeTypefaceDigestEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"struct.std::__1::__less", align 1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %7 = alloca %class.sk_sp.42, align 8
  %8 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %10 = tail call i32 @_ZNK10SkTypeface11countTablesEv(%class.SkTypeface* %9) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %69, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %6) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %6) #10
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = sext i32 %10 to i64
  store i64 %15, i64* %5, align 8
  %16 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %6, i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %17 = zext i32 %10 to i64
  %18 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %17) #10
  %19 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  %20 = shl nuw nsw i64 %17, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 %20, i1 false) #10
  %21 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %22 = bitcast i8* %19 to i32*
  %23 = call i32 @_ZNK10SkTypeface12getTableTagsEPj(%class.SkTypeface* %21, i32* %22) #10
  %24 = getelementptr inbounds i32, i32* %22, i64 %17
  %25 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %22, i32* %24, %"struct.std::__1::__less"* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #10
  %26 = icmp eq i32* %24, %22
  br i1 %26, label %30, label %27

27:                                               ; preds = %12
  %28 = bitcast i64* %2 to i8*
  %29 = bitcast i64* %4 to i8*
  br label %36

30:                                               ; preds = %36, %12
  %31 = bitcast %class.sk_sp.42* %7 to i8*
  %32 = getelementptr inbounds %class.sk_sp.42, %class.sk_sp.42* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %32, align 8
  %33 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  call void @_ZNK10SkTypeface13copyTableDataEj(%class.sk_sp.42* nonnull sret %7, %class.SkTypeface* %33, i32 1668112752) #10
  %34 = load %class.SkData*, %class.SkData** %32, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %53, label %48

36:                                               ; preds = %27, %36
  %37 = phi i32* [ %22, %27 ], [ %44, %36 ]
  %38 = load i32, i32* %37, align 4
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %6) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %2, align 8
  %40 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %6, i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %41 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %42 = call i64 @_ZNK10SkTypeface12getTableSizeEj(%class.SkTypeface* %41, i32 %38) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* %40) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store i64 %42, i64* %4, align 8
  %43 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %40, i64 8, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %44 = getelementptr inbounds i32, i32* %37, i64 1
  %45 = icmp eq i32* %44, %24
  br i1 %45, label %30, label %36

46:                                               ; preds = %109
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #10
  br label %47

47:                                               ; preds = %109, %46
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #10
  br label %69

48:                                               ; preds = %30
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %30, %48
  %54 = phi i64 [ %52, %48 ], [ 0, %30 ]
  %55 = phi i8* [ %50, %48 ], [ null, %30 ]
  %56 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %6, i64 %54, i8* %55) #10
  %57 = load %class.SkData*, %class.SkData** %32, align 8
  %58 = icmp eq %class.SkData* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #10
  %64 = bitcast %class.SkData* %57 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %64) #10
  br label %65

65:                                               ; preds = %53, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %32, align 8
  %66 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  call void @_ZNK10SkTypeface13copyTableDataEj(%class.sk_sp.42* nonnull sret %7, %class.SkTypeface* %66, i32 1751474532) #10
  %67 = load %class.SkData*, %class.SkData** %32, align 8
  %68 = icmp eq %class.SkData* %67, null
  br i1 %68, label %76, label %71

69:                                               ; preds = %1, %47
  %70 = phi i64 [ %110, %47 ], [ 0, %1 ]
  ret i64 %70

71:                                               ; preds = %65
  %72 = getelementptr inbounds %class.SkData, %class.SkData* %67, i64 0, i32 3
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %class.SkData, %class.SkData* %67, i64 0, i32 4
  %75 = load i64, i64* %74, align 8
  br label %76

76:                                               ; preds = %71, %65
  %77 = phi i64 [ %75, %71 ], [ 0, %65 ]
  %78 = phi i8* [ %73, %71 ], [ null, %65 ]
  %79 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %6, i64 %77, i8* %78) #10
  %80 = load %class.SkData*, %class.SkData** %32, align 8
  %81 = icmp eq %class.SkData* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.SkData, %class.SkData* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %80) #10
  %87 = bitcast %class.SkData* %80 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %87) #10
  br label %88

88:                                               ; preds = %86, %82, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %32, align 8
  %89 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  call void @_ZNK10SkTypeface13copyTableDataEj(%class.sk_sp.42* nonnull sret %7, %class.SkTypeface* %89, i32 1851878757) #10
  %90 = load %class.SkData*, %class.SkData** %32, align 8
  %91 = icmp eq %class.SkData* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkData, %class.SkData* %90, i64 0, i32 3
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %class.SkData, %class.SkData* %90, i64 0, i32 4
  %96 = load i64, i64* %95, align 8
  br label %97

97:                                               ; preds = %92, %88
  %98 = phi i64 [ %96, %92 ], [ 0, %88 ]
  %99 = phi i8* [ %94, %92 ], [ null, %88 ]
  %100 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %6, i64 %98, i8* %99) #10
  %101 = load %class.SkData*, %class.SkData** %32, align 8
  %102 = icmp eq %class.SkData* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %class.SkData, %class.SkData* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %101) #10
  %108 = bitcast %class.SkData* %101 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %108) #10
  br label %109

109:                                              ; preds = %107, %103, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  %110 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %6) #10
  %111 = icmp eq i8* %19, null
  br i1 %111, label %47, label %46, !prof !3
}

declare i32 @_ZNK10SkTypeface11countTablesEv(%class.SkTypeface*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"*) unnamed_addr #2

declare i32 @_ZNK10SkTypeface12getTableTagsEPj(%class.SkTypeface*, i32*) local_unnamed_addr #2

declare i64 @_ZNK10SkTypeface12getTableSizeEj(%class.SkTypeface*, i32) local_unnamed_addr #2

declare void @_ZNK10SkTypeface13copyTableDataEj(%class.sk_sp.42* sret, %class.SkTypeface*, i32) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #2

declare i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData17GetPostScriptNameEv(%"class.blink::FontPlatformData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %0, i64 0, i32 0, i32 0
  %5 = load %class.SkTypeface*, %class.SkTypeface** %4, align 8
  %6 = icmp eq %class.SkTypeface* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  br label %27

9:                                                ; preds = %1
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #10
  %12 = load %class.SkTypeface*, %class.SkTypeface** %4, align 8
  %13 = call zeroext i1 @_ZNK10SkTypeface17getPostScriptNameEP8SkString(%class.SkTypeface* %12, %class.SkString* nonnull %3) #10
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %16 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %15, i64 0, i32 2
  %17 = icmp eq i8* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = call i64 @strlen(i8* nonnull %16) #13
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i64 [ %19, %18 ], [ 0, %14 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %16, i64 %21) #10
  br label %24

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  br label %24

24:                                               ; preds = %22, %20
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi %"class.WTF::StringImpl"* [ %26, %24 ], [ null, %7 ]
  ret %"class.WTF::StringImpl"* %28
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare zeroext i1 @_ZNK10SkTypeface17getPostScriptNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink12HarfBuzzFaceC1EPNS_16FontPlatformDataEm(%"class.blink::HarfBuzzFace"*, %"class.blink::FontPlatformData"*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink12HarfBuzzFaceD1Ev(%"class.blink::HarfBuzzFace"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
