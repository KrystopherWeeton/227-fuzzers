; ModuleID = '../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::FramebufferNULL" = type { %"class.rx::FramebufferImpl" }
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT", %"class.std::__1::vector.28", i32, %"class.angle::BitSetT", %"class.angle::BitSetT.35", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.36", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gl::FramebufferAttachment"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.angle::BitSetT" = type { i8 }
%"class.angle::BitSetT.35" = type { i64 }
%"class.angle::BitSetT.36" = type { i64 }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.547", [4 x i8], %"class.std::__1::unique_ptr.548", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.554", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.586", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.596", i8*, %"class.std::__1::vector.596", %"class.std::__1::unique_ptr.603", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.36", %"class.gl::StateCache", %"class.angle::BitSetT.176", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %struct.Optional.617, %struct.Optional.617, %"class.std::__1::shared_ptr.618", %"class.std::__1::unique_ptr.619", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.384", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.385", %"class.gl::Program"*, %"class.gl::BindingPointer.387", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.389", %"class.gl::VertexArray"*, %"class.angle::BitSetT.35", i64, %"class.angle::PackedEnumMap.417", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.325", %"class.angle::BitSetArray", %"class.std::__1::vector.429", %"class.std::__1::vector.438", %"class.angle::PackedEnumMap.445", %"class.angle::PackedEnumMap.449", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.angle::BitSetArray.458", %"class.angle::BitSetT.459", %"class.angle::BitSetT.176", %"class.gl::BindingPointer.460", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.487", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.176", %"class.angle::BitSetT.546", [4 x i8], %"class.angle::BitSetT.36", %"class.angle::BitSetT.174", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.28", %"class.std::__1::vector.28", %"class.std::__1::vector.28", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.39", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.37", i32 }
%"struct.std::__1::array.37" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.38" }
%"struct.std::__1::array.38" = type { [6 x i32] }
%"class.angle::PackedEnumMap.39" = type { %"struct.std::__1::array.40" }
%"struct.std::__1::array.40" = type { [6 x i64] }
%"struct.std::__1::array.41" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.42" }
%"class.angle::PackedEnumMap.42" = type { %"struct.std::__1::array.43" }
%"struct.std::__1::array.43" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.44" }
%"class.std::__1::set.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.62", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.62" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.78", %"class.gl::ResourceMap.132" }
%"class.gl::ResourceMap.78" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.123" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.95", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.117", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector.28", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.86", %"class.std::__1::vector.86", %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.79", i8, [3 x i8], %"class.angle::BitSetT.93", i32, %struct.Optional, %struct.Optional, %struct.Optional.94, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.88" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.79" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.81" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.28", i8, i8, %"class.std::__1::vector.79", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT.93" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.94 = type { i8, i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.123" = type { %"class.absl::container_internal::raw_hash_map.124" }
%"class.absl::container_internal::raw_hash_map.124" = type { %"class.absl::container_internal::raw_hash_set.125" }
%"class.absl::container_internal::raw_hash_set.125" = type { i8*, %"union.absl::container_internal::map_slot_type.126"*, i64, i64, %"class.absl::container_internal::CompressedTuple.127" }
%"union.absl::container_internal::map_slot_type.126" = type opaque
%"class.absl::container_internal::CompressedTuple.127" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.128" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.128" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.132" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.249" }
%"class.absl::flat_hash_map.249" = type { %"class.absl::container_internal::raw_hash_map.250" }
%"class.absl::container_internal::raw_hash_map.250" = type { %"class.absl::container_internal::raw_hash_set.251" }
%"class.absl::container_internal::raw_hash_set.251" = type { i8*, %"union.absl::container_internal::map_slot_type.252"*, i64, i64, %"class.absl::container_internal::CompressedTuple.253" }
%"union.absl::container_internal::map_slot_type.252" = type { %"struct.std::__1::pair.633" }
%"struct.std::__1::pair.633" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.253" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.254" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.254" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.258" }
%"class.gl::TypedResourceManager.258" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.259" }
%"class.gl::ResourceMap.259" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.278" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.261", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.274", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.276", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.261" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.265", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.262, i8, [3 x i8] }>
%union.anon.262 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.267" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.272", i64, i64 }
%"class.gl::BindingPointer.272" = type { %"class.angle::BindingPointer.273" }
%"class.angle::BindingPointer.273" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.274" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.275", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.275" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.276" = type { %"struct.std::__1::array.277", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.277" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.278" = type { %"class.absl::container_internal::raw_hash_map.279" }
%"class.absl::container_internal::raw_hash_map.279" = type { %"class.absl::container_internal::raw_hash_set.280" }
%"class.absl::container_internal::raw_hash_set.280" = type { i8*, %"union.absl::container_internal::map_slot_type.281"*, i64, i64, %"class.absl::container_internal::CompressedTuple.282" }
%"union.absl::container_internal::map_slot_type.281" = type { %"struct.std::__1::pair.635" }
%"struct.std::__1::pair.635" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.282" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.287" }
%"class.gl::TypedResourceManager.287" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.288" }
%"class.gl::ResourceMap.288" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.289" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.289" = type { %"class.absl::container_internal::raw_hash_map.290" }
%"class.absl::container_internal::raw_hash_map.290" = type { %"class.absl::container_internal::raw_hash_set.291" }
%"class.absl::container_internal::raw_hash_set.291" = type { i8*, %"union.absl::container_internal::map_slot_type.292"*, i64, i64, %"class.absl::container_internal::CompressedTuple.293" }
%"union.absl::container_internal::map_slot_type.292" = type { %"struct.std::__1::pair.637" }
%"struct.std::__1::pair.637" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.293" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.298" }
%"class.gl::TypedResourceManager.298" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.299" }
%"class.gl::ResourceMap.299" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.302" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.301", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.301" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.302" = type { %"class.absl::container_internal::raw_hash_map.303" }
%"class.absl::container_internal::raw_hash_map.303" = type { %"class.absl::container_internal::raw_hash_set.304" }
%"class.absl::container_internal::raw_hash_set.304" = type { i8*, %"union.absl::container_internal::map_slot_type.305"*, i64, i64, %"class.absl::container_internal::CompressedTuple.306" }
%"union.absl::container_internal::map_slot_type.305" = type { %"struct.std::__1::pair.639" }
%"struct.std::__1::pair.639" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.306" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.307" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.307" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.311" }
%"class.gl::TypedResourceManager.311" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.312" }
%"class.gl::ResourceMap.312" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.313" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.313" = type { %"class.absl::container_internal::raw_hash_map.314" }
%"class.absl::container_internal::raw_hash_map.314" = type { %"class.absl::container_internal::raw_hash_set.315" }
%"class.absl::container_internal::raw_hash_set.315" = type { i8*, %"union.absl::container_internal::map_slot_type.316"*, i64, i64, %"class.absl::container_internal::CompressedTuple.317" }
%"union.absl::container_internal::map_slot_type.316" = type opaque
%"class.absl::container_internal::CompressedTuple.317" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.322" }
%"class.gl::TypedResourceManager.322" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.323" }
%"class.gl::ResourceMap.323" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.334" }
%"class.absl::flat_hash_map.334" = type { %"class.absl::container_internal::raw_hash_map.335" }
%"class.absl::container_internal::raw_hash_map.335" = type { %"class.absl::container_internal::raw_hash_set.336" }
%"class.absl::container_internal::raw_hash_set.336" = type { i8*, %"union.absl::container_internal::map_slot_type.337"*, i64, i64, %"class.absl::container_internal::CompressedTuple.338" }
%"union.absl::container_internal::map_slot_type.337" = type { %"struct.std::__1::pair.641" }
%"struct.std::__1::pair.641" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.343" }
%"class.gl::TypedResourceManager.343" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.344" }
%"class.gl::ResourceMap.344" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.355" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.346", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.347", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.325", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.346" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.353", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.353" = type { %"struct.std::__1::array.354" }
%"struct.std::__1::array.354" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.355" = type { %"class.absl::container_internal::raw_hash_map.356" }
%"class.absl::container_internal::raw_hash_map.356" = type { %"class.absl::container_internal::raw_hash_set.357" }
%"class.absl::container_internal::raw_hash_set.357" = type { i8*, %"union.absl::container_internal::map_slot_type.358"*, i64, i64, %"class.absl::container_internal::CompressedTuple.359" }
%"union.absl::container_internal::map_slot_type.358" = type { %"struct.std::__1::pair.643" }
%"struct.std::__1::pair.643" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.364" }
%"class.gl::ResourceMap.364" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.365" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.365" = type { %"class.absl::container_internal::raw_hash_map.366" }
%"class.absl::container_internal::raw_hash_map.366" = type { %"class.absl::container_internal::raw_hash_set.367" }
%"class.absl::container_internal::raw_hash_set.367" = type { i8*, %"union.absl::container_internal::map_slot_type.368"*, i64, i64, %"class.absl::container_internal::CompressedTuple.369" }
%"union.absl::container_internal::map_slot_type.368" = type opaque
%"class.absl::container_internal::CompressedTuple.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.374" }
%"class.gl::ResourceMap.374" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.375" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.375" = type { %"class.absl::container_internal::raw_hash_map.376" }
%"class.absl::container_internal::raw_hash_map.376" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, %"union.absl::container_internal::map_slot_type.378"*, i64, i64, %"class.absl::container_internal::CompressedTuple.379" }
%"union.absl::container_internal::map_slot_type.378" = type opaque
%"class.absl::container_internal::CompressedTuple.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT", %"class.angle::BitSetT", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.384" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.324, %"class.std::__1::vector.325", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.332", %"class.angle::BitSetT", %struct.Optional.333 }
%struct.Optional.324 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.332" = type { i64 }
%struct.Optional.333 = type { i8, %"class.angle::BitSetT.332" }
%"class.gl::BindingPointer.385" = type { %"class.angle::BindingPointer.386" }
%"class.angle::BindingPointer.386" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.243", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.209" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.133", i32, %"class.std::__1::vector.135", %"class.std::__1::vector.142", %"class.std::__1::vector.149", %"class.gl::Range", %"class.angle::BitSetT", %"class.std::__1::vector.28", %"class.angle::BitSetT.35", i8, i8, i8, i8, %"class.angle::BitSetT.93", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.133" = type { %"struct.std::__1::array.134" }
%"struct.std::__1::array.134" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.144" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.152" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.151" }>
%"class.angle::BitSetT.151" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.234" }
%"class.absl::flat_hash_map.234" = type { %"class.absl::container_internal::raw_hash_map.235" }
%"class.absl::container_internal::raw_hash_map.235" = type { %"class.absl::container_internal::raw_hash_set.236" }
%"class.absl::container_internal::raw_hash_set.236" = type { i8*, %"union.absl::container_internal::map_slot_type.237"*, i64, i64, %"class.absl::container_internal::CompressedTuple.238" }
%"union.absl::container_internal::map_slot_type.237" = type opaque
%"class.absl::container_internal::CompressedTuple.238" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.239" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.239" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.157" }
%"class.absl::flat_hash_map.157" = type { %"class.absl::container_internal::raw_hash_map.158" }
%"class.absl::container_internal::raw_hash_map.158" = type { %"class.absl::container_internal::raw_hash_set.159" }
%"class.absl::container_internal::raw_hash_set.159" = type { i8*, %"union.absl::container_internal::map_slot_type.160"*, i64, i64, %"class.absl::container_internal::CompressedTuple.161" }
%"union.absl::container_internal::map_slot_type.160" = type opaque
%"class.absl::container_internal::CompressedTuple.161" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.162" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.162" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.209" = type { i64 }
%"class.gl::BindingPointer.387" = type { %"class.angle::BindingPointer.388" }
%"class.angle::BindingPointer.388" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.151", %"class.angle::BitSetT.151", [6 x i8], %"class.angle::BitSetT.174", i32, [4 x i8], %"class.angle::BitSetT.35", %"class.angle::BitSetT.174", %"class.angle::BitSetArray", %"struct.std::__1::array.177", %"struct.std::__1::array.178", %"class.angle::BitSetArray", %"struct.std::__1::array.179", %"struct.std::__1::array.180", %"class.angle::BitSetArray", %"struct.std::__1::array.180", i8, [7 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.142", %"class.std::__1::vector.142", i8, [7 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.181", %"class.std::__1::vector.188", i32, [4 x i8], %"class.std::__1::vector.195", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.202", %"class.angle::BitSetT.209", %"class.std::__1::vector.210", %"class.gl::Range", %"class.std::__1::vector.202", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.217", %"class.std::__1::vector.224", %"class.std::__1::vector.224", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.231", %"class.angle::PackedEnumMap.231", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.233, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.177" = type { [96 x i32] }
%"struct.std::__1::array.178" = type { [96 x i8] }
%"struct.std::__1::array.179" = type { [96 x i8] }
%"struct.std::__1::array.180" = type { [96 x %"class.angle::BitSetT.151"] }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.183" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { i32*, i32*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { i32* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.197" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector.28" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.212" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.219" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.226" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.231" = type { %"struct.std::__1::array.232" }
%"struct.std::__1::array.232" = type { [6 x %"class.std::__1::vector.79"] }
%struct.Optional.233 = type { i8, i8 }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.392" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.391, i32 }
%union.anon.391 = type { [4 x float] }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.411", %"struct.std::__1::array.412", %"struct.std::__1::array.414", %struct.Optional.416, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.325", %"class.angle::BitSetT.174", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.397", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.404", %"class.angle::BitSetT.174", %"class.angle::BitSetT.35", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.399" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.272", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.406" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.272", %"class.angle::BitSetT.174" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.411" = type { i64 }
%"struct.std::__1::array.412" = type { [16 x %"class.angle::BitSetT.413"] }
%"class.angle::BitSetT.413" = type { i64 }
%"struct.std::__1::array.414" = type { [16 x %"class.angle::BitSetT.415"] }
%"class.angle::BitSetT.415" = type { i64 }
%struct.Optional.416 = type { i8, %"class.angle::BitSetT.411" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.417" = type { %"struct.std::__1::array.418" }
%"struct.std::__1::array.418" = type { [11 x %"class.std::__1::vector.419"] }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"class.gl::BindingPointer.421"*, %"class.gl::BindingPointer.421"*, %"class.std::__1::__compressed_pair.423" }
%"class.gl::BindingPointer.421" = type { %"class.angle::BindingPointer.422" }
%"class.angle::BindingPointer.422" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.gl::BindingPointer.421"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.428" }
%"struct.std::__1::array.428" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.gl::BindingPointer.431"*, %"class.gl::BindingPointer.431"*, %"class.std::__1::__compressed_pair.433" }
%"class.gl::BindingPointer.431" = type { %"class.angle::BindingPointer.432" }
%"class.angle::BindingPointer.432" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.gl::BindingPointer.431"* }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.440" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.421", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.445" = type { %"struct.std::__1::array.446" }
%"struct.std::__1::array.446" = type { [7 x %"class.gl::BindingPointer.447"] }
%"class.gl::BindingPointer.447" = type { %"class.angle::BindingPointer.448" }
%"class.angle::BindingPointer.448" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.449" = type { %"struct.std::__1::array.450" }
%"struct.std::__1::array.450" = type { [13 x %"class.gl::BindingPointer.272"] }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.458" = type { %"struct.std::__1::array.175" }
%"struct.std::__1::array.175" = type { [2 x %"class.angle::BitSetT.176"] }
%"class.angle::BitSetT.459" = type { i64 }
%"class.gl::BindingPointer.460" = type { %"class.angle::BindingPointer.461" }
%"class.angle::BindingPointer.461" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.463", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.463" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.451" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.473" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.464" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.482" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.475" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.477" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.28", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.487" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.174", %"class.std::__1::vector.488", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.496", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.501", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.516", %"class.std::__1::vector.523", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.530", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.539", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.angle::BitSetT.490"*, %"class.angle::BitSetT.490"*, %"class.std::__1::__compressed_pair.491" }
%"class.angle::BitSetT.490" = type opaque
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.angle::BitSetT.490"* }
%"class.std::__1::vector.496" = type { i64*, i64, %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.503" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.508", i64 }
%"struct.std::__1::array.508" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.509", i32, i32 }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { float*, float*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { float* }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.525" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.534" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.532", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.532" = type { %"class.angle::VectorBase.533" }
%"class.angle::VectorBase.533" = type { [4 x float] }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.539" = type { %"class.std::__1::__vector_base.540" }
%"class.std::__1::__vector_base.540" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.541" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.532" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.546" = type { i32 }
%"class.angle::BitSetT.174" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.175" }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.44" }
%"class.angle::BitSetT.547" = type { i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.101" }
%"class.angle::BindingPointer.101" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.102", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.108" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.108" = type { %"struct.std::__1::array.109" }
%"struct.std::__1::array.109" = type { [6 x %"class.std::__1::vector.110"] }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.112" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.554" = type { %"struct.std::__1::array.555" }
%"struct.std::__1::array.555" = type { [11 x %"class.gl::BindingPointer.421"] }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.557" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.586" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.587" }
%"class.absl::flat_hash_map.587" = type { %"class.absl::container_internal::raw_hash_map.588" }
%"class.absl::container_internal::raw_hash_map.588" = type { %"class.absl::container_internal::raw_hash_set.589" }
%"class.absl::container_internal::raw_hash_set.589" = type { i8*, %"union.absl::container_internal::map_slot_type.590"*, i64, i64, %"class.absl::container_internal::CompressedTuple.591" }
%"union.absl::container_internal::map_slot_type.590" = type opaque
%"class.absl::container_internal::CompressedTuple.591" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector.28", %"class.std::__1::vector.54", %"class.std::__1::vector.28", i8, [7 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.56" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.596" = type { %"class.std::__1::__vector_base.597" }
%"class.std::__1::__vector_base.597" = type { i8**, i8**, %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { i8** }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.176", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.609", %"class.angle::PackedEnumMap.611", %"class.angle::PackedEnumMap.613", %"class.angle::PackedEnumMap.615", %"class.angle::PackedEnumMap.615", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.609" = type { %"struct.std::__1::array.610" }
%"struct.std::__1::array.610" = type { [16 x i8] }
%"class.angle::PackedEnumMap.611" = type { %"struct.std::__1::array.612" }
%"struct.std::__1::array.612" = type { [12 x i8] }
%"class.angle::PackedEnumMap.613" = type { %"struct.std::__1::array.614" }
%"struct.std::__1::array.614" = type { [4 x i8] }
%"class.angle::PackedEnumMap.615" = type { %"struct.std::__1::array.616" }
%"struct.std::__1::array.616" = type { [19 x i32] }
%"class.angle::BitSetT.176" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.617 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.618" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::BufferNULL" = type { %"class.rx::BufferImpl", %"class.std::__1::vector.625", %"class.rx::AllocationTrackerNULL"* }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { i8*, i8*, %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { i8* }
%"class.rx::AllocationTrackerNULL" = type { i64, i64 }
%"class.rx::ContextNULL" = type { %"class.rx::ContextImpl", %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.rx::AllocationTrackerNULL"* }

$_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE = comdat any

$_ZN2rx15FramebufferImpl7destroyEPKN2gl7ContextE = comdat any

$_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv = comdat any

@_ZTVN2rx15FramebufferNULLE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::FramebufferNULL"*)* @_ZN2rx15FramebufferNULLD2Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferNULL"*)* @_ZN2rx15FramebufferNULLD0Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferImpl"*, %"class.gl::Context"*)* @_ZN2rx15FramebufferImpl7destroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx15FramebufferNULL7discardEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx15FramebufferNULL10invalidateEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"*)* @_ZN2rx15FramebufferNULL13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32)* @_ZN2rx15FramebufferNULL5clearEPKN2gl7ContextEj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32, i32, float*)* @_ZN2rx15FramebufferNULL13clearBufferfvEPKN2gl7ContextEjiPKf to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx15FramebufferNULL14clearBufferuivEPKN2gl7ContextEjiPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx15FramebufferNULL13clearBufferivEPKN2gl7ContextEjiPKi to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32, i32, float, i32)* @_ZN2rx15FramebufferNULL13clearBufferfiEPKN2gl7ContextEjifi to i8*), i8* bitcast (%"struct.gl::InternalFormat"* (%"class.rx::FramebufferImpl"*, %"class.gl::Context"*)* @_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, i32, i32, %"struct.gl::PixelPackState"*, %"class.gl::Buffer"*, i8*)* @_ZN2rx15FramebufferNULL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, %"struct.gl::Rectangle"*, i32, i32)* @_ZN2rx15FramebufferNULL4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj to i8*), i8* bitcast ({ i32, i8* } (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*)* @_ZNK2rx15FramebufferNULL11checkStatusEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i32, %"class.angle::BitSetT.332"*, i32)* @_ZN2rx15FramebufferNULL9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferNULL"*, %"class.gl::Context"*, i64, float*)* @_ZNK2rx15FramebufferNULL17getSamplePositionEPKN2gl7ContextEmPf to i8*), i8* bitcast (i1 (%"class.rx::FramebufferImpl"*)* @_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Integer overflow.\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp\00", align 1
@__func__._ZN2rx15FramebufferNULL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv = private unnamed_addr constant [11 x i8] c"readPixels\00", align 1

@_ZN2rx15FramebufferNULLC1ERKN2gl16FramebufferStateE = hidden unnamed_addr alias void (%"class.rx::FramebufferNULL"*, %"class.gl::FramebufferState"*), void (%"class.rx::FramebufferNULL"*, %"class.gl::FramebufferState"*)* @_ZN2rx15FramebufferNULLC2ERKN2gl16FramebufferStateE
@_ZN2rx15FramebufferNULLD1Ev = hidden unnamed_addr alias void (%"class.rx::FramebufferNULL"*), void (%"class.rx::FramebufferNULL"*)* @_ZN2rx15FramebufferNULLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"struct.gl::InternalFormat"* @_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE(%"class.rx::FramebufferImpl"*, %"class.gl::Context"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.gl::Format", align 8
  %4 = getelementptr inbounds %"class.rx::FramebufferImpl", %"class.rx::FramebufferImpl"* %0, i64 0, i32 1
  %5 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %4, align 8
  %6 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"* %5) #7
  %7 = bitcast %"struct.gl::Format"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 2
  %9 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %8, align 8, !noalias !2
  %10 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4, !noalias !2
  %12 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 1
  %13 = bitcast %"class.gl::FramebufferAttachmentObject"* %9 to void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)***
  %14 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)**, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %14, i64 3
  %16 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %15, align 8, !noalias !2
  call void %16(%"struct.gl::Format"* nonnull sret %3, %"class.gl::FramebufferAttachmentObject"* %9, i32 %11, %"class.gl::ImageIndex"* dereferenceable(16) %12) #7
  %17 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %3, i64 0, i32 0
  %18 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  ret %"struct.gl::InternalFormat"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx15FramebufferNULLC2ERKN2gl16FramebufferStateE(%"class.rx::FramebufferNULL"* nocapture, %"class.gl::FramebufferState"* dereferenceable(464)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferNULL", %"class.rx::FramebufferNULL"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::FramebufferNULL", %"class.rx::FramebufferNULL"* %0, i64 0, i32 0, i32 1
  store %"class.gl::FramebufferState"* %1, %"class.gl::FramebufferState"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx15FramebufferNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx15FramebufferNULLD2Ev(%"class.rx::FramebufferNULL"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx15FramebufferNULLD0Ev(%"class.rx::FramebufferNULL"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.rx::FramebufferNULL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL7discardEPKN2gl7ContextEmPKj(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i64, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL10invalidateEPKN2gl7ContextEmPKj(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i64, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i64, i32* nocapture readnone, %"struct.gl::Rectangle"* nocapture readnone dereferenceable(16)) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL5clearEPKN2gl7ContextEj(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL13clearBufferfvEPKN2gl7ContextEjiPKf(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i32, float* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL14clearBufferuivEPKN2gl7ContextEjiPKj(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i32, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL13clearBufferivEPKN2gl7ContextEjiPKi(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i32, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL13clearBufferfiEPKN2gl7ContextEjifi(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i32, float, i32) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv(%"class.rx::FramebufferNULL"* nocapture readonly, %"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* dereferenceable(16), i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"* readonly, i8*) unnamed_addr #5 align 2 {
  %9 = alloca %"struct.gl::Rectangle", align 4
  %10 = alloca %"struct.gl::Rectangle", align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = icmp eq %"class.gl::Buffer"* %6, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 5
  %16 = bitcast %"class.rx::BufferImpl"** %15 to %"class.rx::BufferNULL"**
  %17 = load %"class.rx::BufferNULL"*, %"class.rx::BufferNULL"** %16, align 8
  %18 = tail call i8* @_ZN2rx10BufferNULL10getDataPtrEv(%"class.rx::BufferNULL"* %17) #7
  %19 = ptrtoint i8* %7 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  br label %21

21:                                               ; preds = %8, %14
  %22 = phi i8* [ %20, %14 ], [ %7, %8 ]
  %23 = getelementptr inbounds %"class.rx::FramebufferNULL", %"class.rx::FramebufferNULL"* %0, i64 0, i32 0, i32 1
  %24 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %23, align 8
  %25 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"* %24, i32 %3) #7
  %26 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 2
  %27 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 1, i32 1
  %29 = bitcast %"class.gl::FramebufferAttachmentObject"* %27 to { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %30 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %29, align 8
  %31 = getelementptr inbounds { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %30, i64 2
  %32 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %31, align 8
  %33 = tail call { i64, i32 } %32(%"class.gl::FramebufferAttachmentObject"* %27, %"class.gl::ImageIndex"* dereferenceable(16) %28) #7
  %34 = extractvalue { i64, i32 } %33, 0
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = bitcast %"struct.gl::Rectangle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #7
  %39 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 3
  store i32 0, i32* %39, align 4
  store i32 0, i32* %40, align 4
  store i32 %35, i32* %41, align 4
  store i32 %37, i32* %42, align 4
  %43 = bitcast %"struct.gl::Rectangle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 0, i64 16, i1 false) #7
  %48 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9, %"struct.gl::Rectangle"* nonnull %10) #7
  br i1 %48, label %49, label %119

49:                                               ; preds = %21
  %50 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32 %3, i32 %4) #7
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %52 = bitcast %"class.rx::ContextImpl"** %51 to %"class.rx::ContextNULL"**
  %53 = load %"class.rx::ContextNULL"*, %"class.rx::ContextNULL"** %52, align 8
  %54 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #7
  store i32 0, i32* %11, align 4
  %55 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %5, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %5, i64 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = call zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"* %50, i32 %4, i32 %56, i32 %58, i32 %60, i32* nonnull %11) #7
  br i1 %61, label %63, label %62, !prof !5

62:                                               ; preds = %49
  call void @_ZN2rx11ContextNULL11handleErrorEjPKcS2_S2_j(%"class.rx::ContextNULL"* %53, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN2rx15FramebufferNULL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv, i64 0, i64 0), i32 123) #7
  br label %117

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %5, i64 0, i32 0
  %65 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #7
  store i32 0, i32* %12, align 4
  %66 = load i32, i32* %11, align 4
  %67 = call zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"* %50, i32 %4, i32 %66, i32 0, %"struct.gl::PixelStoreStateBase"* dereferenceable(24) %64, i1 zeroext false, i32* nonnull %12) #7
  br i1 %67, label %69, label %68, !prof !5

68:                                               ; preds = %63
  call void @_ZN2rx11ContextNULL11handleErrorEjPKcS2_S2_j(%"class.rx::ContextNULL"* %53, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN2rx15FramebufferNULL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv, i64 0, i64 0), i32 127) #7
  br label %115

69:                                               ; preds = %63
  %70 = load i32, i32* %45, align 4
  %71 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %50, i64 0, i32 11
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %47, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %115

75:                                               ; preds = %69
  %76 = load i32, i32* %12, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %22, i64 %77
  %79 = load i32, i32* %11, align 4
  %80 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub nsw i32 %70, %81
  %83 = mul i32 %79, %82
  %84 = load i32, i32* %44, align 4
  %85 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %84, %86
  %88 = mul i32 %72, %87
  %89 = add i32 %83, %88
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %78, i64 %90
  %92 = load i32, i32* %46, align 4
  %93 = mul i32 %92, %72
  %94 = zext i32 %93 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %91, i8 42, i64 %94, i1 false)
  %95 = add nsw i32 %70, 1
  %96 = load i32, i32* %45, align 4
  %97 = load i32, i32* %47, align 4
  %98 = add nsw i32 %97, %96
  %99 = icmp slt i32 %95, %98
  br i1 %99, label %100, label %115

100:                                              ; preds = %75, %100
  %101 = phi i32 [ %110, %100 ], [ %95, %75 ]
  %102 = phi i8* [ %105, %100 ], [ %91, %75 ]
  %103 = load i32, i32* %11, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = load i32, i32* %71, align 4
  %107 = load i32, i32* %46, align 4
  %108 = mul i32 %107, %106
  %109 = zext i32 %108 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %105, i8 42, i64 %109, i1 false)
  %110 = add nsw i32 %101, 1
  %111 = load i32, i32* %45, align 4
  %112 = load i32, i32* %47, align 4
  %113 = add nsw i32 %112, %111
  %114 = icmp slt i32 %110, %113
  br i1 %114, label %100, label %115

115:                                              ; preds = %100, %75, %69, %68
  %116 = phi i32 [ 1, %68 ], [ 0, %69 ], [ 0, %75 ], [ 0, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #7
  br label %117

117:                                              ; preds = %115, %62
  %118 = phi i32 [ 1, %62 ], [ %116, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #7
  br label %119

119:                                              ; preds = %21, %117
  %120 = phi i32 [ %118, %117 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #7
  ret i32 %120
}

declare i8* @_ZN2rx10BufferNULL10getDataPtrEv(%"class.rx::BufferNULL"*) local_unnamed_addr #2

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #2

declare dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"*, i32, i32, i32, i32, i32*) local_unnamed_addr #2

declare void @_ZN2rx11ContextNULL11handleErrorEjPKcS2_S2_j(%"class.rx::ContextNULL"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"*, i32, i32, i32, %"struct.gl::PixelStoreStateBase"* dereferenceable(24), i1 zeroext, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, %"struct.gl::Rectangle"* nocapture readnone dereferenceable(16), %"struct.gl::Rectangle"* nocapture readnone dereferenceable(16), i32, i32) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i8* } @_ZNK2rx15FramebufferNULL11checkStatusEPKN2gl7ContextE(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #5 align 2 {
  %3 = tail call { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() #7
  ret { i32, i8* } %3
}

declare { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx15FramebufferNULL9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, %"class.angle::BitSetT.332"* nocapture readnone dereferenceable(8), i32) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2rx15FramebufferNULL17getSamplePositionEPKN2gl7ContextEmPf(%"class.rx::FramebufferNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i64, float* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx15FramebufferImpl7destroyEPKN2gl7ContextE(%"class.rx::FramebufferImpl"*, %"class.gl::Context"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv(%"class.rx::FramebufferImpl"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2gl21FramebufferAttachment9getFormatEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2gl21FramebufferAttachment9getFormatEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
