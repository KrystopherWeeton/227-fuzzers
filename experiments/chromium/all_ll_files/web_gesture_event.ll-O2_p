; ModuleID = '../../third_party/blink/common/input/web_gesture_event.cc'
source_filename = "../../third_party/blink/common/input/web_gesture_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebGestureEvent" = type <{ %"class.blink::WebInputEvent", i8, [3 x i8], i32, i32, [4 x i8], %union.anon, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>
%union.anon = type { %struct.anon.5 }
%struct.anon.5 = type { i64, float, float, i32, i8, i32, i8, i8, i8, i8 }
%"class.gfx::PointF" = type { float, float }
%struct.anon.6 = type { float, float, float, float, i32, i8 }
%struct.anon.10 = type { i8, i8, float }
%struct.anon.7 = type { i8, i32, i8, i8 }
%struct.anon.8 = type { float, float, i8 }
%struct.anon = type { i32, float, float, i8 }
%struct.anon.4 = type { float, float }
%struct.anon.3 = type { float, float }
%struct.anon.1 = type { float, float }
%struct.anon.2 = type { float, float }

$_ZN5blink13WebInputEventD2Ev = comdat any

$_ZN5blink15WebGestureEventD0Ev = comdat any

@_ZTVN5blink15WebGestureEventE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebInputEvent"*)* @_ZN5blink13WebInputEventD2Ev to i8*), i8* bitcast (void (%"class.blink::WebGestureEvent"*)* @_ZN5blink15WebGestureEventD0Ev to i8*), i8* bitcast (%"class.blink::WebInputEvent"* (%"class.blink::WebGestureEvent"*)* @_ZNK5blink15WebGestureEvent5CloneEv to i8*), i8* bitcast (i1 (%"class.blink::WebGestureEvent"*, %"class.blink::WebInputEvent"*)* @_ZNK5blink15WebGestureEvent11CanCoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void (%"class.blink::WebGestureEvent"*, %"class.blink::WebInputEvent"*)* @_ZN5blink15WebGestureEvent8CoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (i64 (%"class.blink::WebGestureEvent"*)* @_ZNK5blink15WebGestureEvent18GetScrollInputTypeEv to i8*)] }, align 8
@__const._ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE.gesture_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@switch.table._ZNK5blink15WebGestureEvent18GetScrollInputTypeEv = private unnamed_addr constant [5 x i64] [i64 0, i64 1, i64 1, i64 1, i64 1], align 8
@switch.table._ZNK5blink15WebGestureEvent18GetScrollInputTypeEv.1 = private unnamed_addr constant [5 x i64] [i64 0, i64 4294967296, i64 0, i64 8589934592, i64 12884901888], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZNK5blink15WebGestureEvent5CloneEv(%"class.blink::WebGestureEvent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %6 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 32, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 40
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 68, i1 false) #13
  %9 = bitcast i8* %2 to %"class.blink::WebInputEvent"*
  ret %"class.blink::WebInputEvent"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15WebGestureEvent11CanCoalesceERKNS_13WebInputEventE(%"class.blink::WebGestureEvent"* nocapture readonly, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -11
  %6 = icmp ult i32 %5, 17
  br i1 %6, label %7, label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %4
  br i1 %10, label %11, label %42

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 2, i32 3
  %15 = bitcast %"class.base::TimeTicks"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %42

24:                                               ; preds = %18
  switch i32 %4, label %41 [
    i32 13, label %42
    i32 18, label %25
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7, i32 0
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 2, i32 1
  %29 = load float, float* %28, align 4
  %30 = fsub float %27, %29
  %31 = tail call float @llvm.fabs.f32(float %30) #13
  %32 = fcmp olt float %31, 1.000000e+00
  br i1 %32, label %33, label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7, i32 1
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds float, float* %28, i64 1
  %37 = load float, float* %36, align 4
  %38 = fsub float %35, %37
  %39 = tail call float @llvm.fabs.f32(float %38) #13
  %40 = fcmp olt float %39, 1.000000e+00
  br i1 %40, label %42, label %41

41:                                               ; preds = %24, %33, %25
  br label %42

42:                                               ; preds = %24, %18, %11, %7, %33, %41, %2
  %43 = phi i1 [ false, %2 ], [ false, %18 ], [ false, %11 ], [ false, %7 ], [ true, %24 ], [ false, %41 ], [ true, %33 ]
  ret i1 %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15WebGestureEvent8CoalesceERKNS_13WebInputEventE(%"class.blink::WebGestureEvent"* nocapture, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %32 [
    i32 13, label %5
    i32 18, label %18
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1, i32 2, i32 1
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %9 = bitcast %union.anon* %8 to %struct.anon.6*
  %10 = bitcast %union.anon* %8 to float*
  %11 = load float, float* %10, align 8
  %12 = fadd float %7, %11
  store float %12, float* %10, align 8
  %13 = getelementptr inbounds float, float* %6, i64 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %9, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %14, %16
  store float %17, float* %15, align 4
  br label %32

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1, i32 2, i32 1
  %20 = getelementptr inbounds float, float* %19, i64 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %23 = bitcast %union.anon* %22 to %struct.anon.10*
  %24 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %23, i64 0, i32 2
  %25 = load float, float* %24, align 4
  %26 = fmul float %21, %25
  store float %26, float* %24, align 4
  %27 = fcmp olt float %26, 0x3810000000000000
  br i1 %27, label %28, label %29

28:                                               ; preds = %18
  store float 0x3810000000000000, float* %24, align 4
  br label %32

29:                                               ; preds = %18
  %30 = fcmp ogt float %26, 0x47EFFFFFE0000000
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store float 0x47EFFFFFE0000000, float* %24, align 4
  br label %32

32:                                               ; preds = %2, %29, %31, %28, %5
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink15WebGestureEvent18GetScrollInputTypeEv(%"class.blink::WebGestureEvent"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -11
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZNK5blink15WebGestureEvent18GetScrollInputTypeEv, i64 0, i64 %9
  %11 = load i64, i64* %10, align 8
  %12 = sext i32 %8 to i64
  %13 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZNK5blink15WebGestureEvent18GetScrollInputTypeEv.1, i64 0, i64 %12
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %6, %1
  %16 = phi i64 [ 0, %1 ], [ %11, %6 ]
  %17 = phi i64 [ 0, %1 ], [ %14, %6 ]
  %18 = or i64 %17, %16
  ret i64 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink15WebGestureEvent17DeltaXInRootFrameEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 11
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %7 = bitcast %union.anon* %6 to float*
  %8 = select i1 %4, float* %5, float* %7
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 5
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %15 = load float, float* %14, align 8
  %16 = fdiv float %9, %15
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi float [ %16, %13 ], [ %9, %1 ]
  ret float %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink15WebGestureEvent17DeltaYInRootFrameEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 11
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %7 = bitcast %union.anon* %6 to %struct.anon.6*
  %8 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %7, i64 0, i32 1
  %9 = select i1 %4, float* %5, float* %8
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 5
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %16 = load float, float* %15, align 8
  %17 = fdiv float %10, %16
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi float [ %17, %14 ], [ %10, %1 ]
  ret float %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink15WebGestureEvent10DeltaUnitsEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %8 [
    i32 11, label %4
    i32 13, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  br label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  br label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %10 = bitcast %union.anon* %9 to i8*
  br label %11

11:                                               ; preds = %8, %6, %4
  %12 = phi i8* [ %5, %4 ], [ %7, %6 ], [ %10, %8 ]
  %13 = load i8, i8* %12, align 4
  ret i8 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15WebGestureEvent13InertialPhaseEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %8 [
    i32 11, label %4
    i32 13, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 5
  br label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 3
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %10 = bitcast %union.anon* %9 to %struct.anon.7*
  %11 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %10, i64 0, i32 1
  br label %12

12:                                               ; preds = %8, %6, %4
  %13 = phi i32* [ %5, %4 ], [ %7, %6 ], [ %11, %8 ]
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15WebGestureEvent9SyntheticEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 11
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 7
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = bitcast float* %6 to i8*
  %8 = select i1 %4, i8* %5, i8* %7
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink15WebGestureEvent9VelocityXEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 13
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %7 = bitcast %union.anon* %6 to float*
  %8 = select i1 %4, float* %5, float* %7
  %9 = load float, float* %8, align 8
  ret float %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink15WebGestureEvent9VelocityYEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 13
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %7 = bitcast %union.anon* %6 to %struct.anon.8*
  %8 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %7, i64 0, i32 1
  %9 = select i1 %4, float* %5, float* %8
  %10 = load float, float* %9, align 4
  ret float %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK5blink15WebGestureEvent18TapAreaInRootFrameEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %61 [
    i32 25, label %4
    i32 23, label %15
    i32 24, label %15
    i32 21, label %26
    i32 26, label %26
    i32 27, label %26
    i32 19, label %39
    i32 20, label %50
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %7 = load float, float* %6, align 8
  %8 = bitcast %union.anon* %5 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 8
  %10 = insertelement <2 x float> undef, float %7, i32 0
  %11 = shufflevector <2 x float> %10, <2 x float> undef, <2 x i32> zeroinitializer
  %12 = fdiv <2 x float> %9, %11
  %13 = fcmp ogt <2 x float> %12, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %14 = select <2 x i1> %13, <2 x float> %12, <2 x float> zeroinitializer
  br label %61

15:                                               ; preds = %1, %1
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 8
  %19 = bitcast %union.anon* %16 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = insertelement <2 x float> undef, float %18, i32 0
  %22 = shufflevector <2 x float> %21, <2 x float> undef, <2 x i32> zeroinitializer
  %23 = fdiv <2 x float> %20, %22
  %24 = fcmp ogt <2 x float> %23, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %25 = select <2 x i1> %24, <2 x float> %23, <2 x float> zeroinitializer
  br label %61

26:                                               ; preds = %1, %1, %1
  %27 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %28 = bitcast %union.anon* %27 to %struct.anon*
  %29 = getelementptr inbounds %struct.anon, %struct.anon* %28, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %31 = load float, float* %30, align 8
  %32 = bitcast float* %29 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  %34 = insertelement <2 x float> undef, float %31, i32 0
  %35 = shufflevector <2 x float> %34, <2 x float> undef, <2 x i32> zeroinitializer
  %36 = fdiv <2 x float> %33, %35
  %37 = fcmp ogt <2 x float> %36, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %38 = select <2 x i1> %37, <2 x float> %36, <2 x float> zeroinitializer
  br label %61

39:                                               ; preds = %1
  %40 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %41 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %42 = load float, float* %41, align 8
  %43 = bitcast %union.anon* %40 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 8
  %45 = insertelement <2 x float> undef, float %42, i32 0
  %46 = shufflevector <2 x float> %45, <2 x float> undef, <2 x i32> zeroinitializer
  %47 = fdiv <2 x float> %44, %46
  %48 = fcmp ogt <2 x float> %47, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %49 = select <2 x i1> %48, <2 x float> %47, <2 x float> zeroinitializer
  br label %61

50:                                               ; preds = %1
  %51 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %52 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %53 = load float, float* %52, align 8
  %54 = bitcast %union.anon* %51 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 8
  %56 = insertelement <2 x float> undef, float %53, i32 0
  %57 = shufflevector <2 x float> %56, <2 x float> undef, <2 x i32> zeroinitializer
  %58 = fdiv <2 x float> %55, %57
  %59 = fcmp ogt <2 x float> %58, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %60 = select <2 x i1> %59, <2 x float> %58, <2 x float> zeroinitializer
  br label %61

61:                                               ; preds = %1, %50, %39, %26, %15, %4
  %62 = phi <2 x float> [ %60, %50 ], [ %49, %39 ], [ %38, %26 ], [ %25, %15 ], [ %14, %4 ], [ zeroinitializer, %1 ]
  ret <2 x float> %62
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink15WebGestureEvent19PositionInRootFrameEv(%"class.blink::WebGestureEvent"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fdiv float 1.000000e+00, %4
  %6 = tail call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %2, float %5, float %5) #13
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 0
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fadd <2 x float> %9, %6
  ret <2 x float> %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15WebGestureEvent8TapCountEv(%"class.blink::WebGestureEvent"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %3 = bitcast %union.anon* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebGestureEvent20ApplyTouchAdjustmentERKN3gfx6PointFE(%"class.blink::WebGestureEvent"*, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %5 = load float, float* %4, align 8
  %6 = fdiv float 1.000000e+00, %5
  %7 = tail call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %3, float %6, float %6) #13
  %8 = bitcast %"class.gfx::PointF"* %1 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = fsub <2 x float> %9, %7
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2
  %12 = bitcast %"class.gfx::Vector2dF"* %11 to <2 x float>*
  store <2 x float> %10, <2 x float>* %12, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebGestureEvent16FlattenTransformEv(%"class.blink::WebGestureEvent"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %3 = load float, float* %2, align 8
  %4 = fcmp une float %3, 1.000000e+00
  br i1 %4, label %5, label %77

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %77 [
    i32 11, label %8
    i32 13, label %19
    i32 25, label %32
    i32 23, label %41
    i32 24, label %41
    i32 21, label %50
    i32 26, label %50
    i32 27, label %50
    i32 19, label %59
    i32 20, label %68
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 5
  br i1 %11, label %77, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load float, float* %13, align 8
  %15 = fdiv float %14, %3
  store float %15, float* %13, align 8
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fdiv float %17, %3
  store float %18, float* %16, align 4
  br label %77

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 5
  br i1 %23, label %77, label %24

24:                                               ; preds = %19
  %25 = bitcast %union.anon* %20 to %struct.anon.6*
  %26 = bitcast %union.anon* %20 to float*
  %27 = load float, float* %26, align 8
  %28 = fdiv float %27, %3
  store float %28, float* %26, align 8
  %29 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %25, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fdiv float %30, %3
  store float %31, float* %29, align 4
  br label %77

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %34 = bitcast %union.anon* %33 to %struct.anon.4*
  %35 = bitcast %union.anon* %33 to float*
  %36 = load float, float* %35, align 8
  %37 = fdiv float %36, %3
  store float %37, float* %35, align 8
  %38 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %34, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fdiv float %39, %3
  store float %40, float* %38, align 4
  br label %77

41:                                               ; preds = %5, %5
  %42 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %43 = bitcast %union.anon* %42 to %struct.anon.3*
  %44 = bitcast %union.anon* %42 to float*
  %45 = load float, float* %44, align 8
  %46 = fdiv float %45, %3
  store float %46, float* %44, align 8
  %47 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %43, i64 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fdiv float %48, %3
  store float %49, float* %47, align 4
  br label %77

50:                                               ; preds = %5, %5, %5
  %51 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %52 = bitcast %union.anon* %51 to %struct.anon*
  %53 = getelementptr inbounds %struct.anon, %struct.anon* %52, i64 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = fdiv float %54, %3
  store float %55, float* %53, align 4
  %56 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %57 = load float, float* %56, align 8
  %58 = fdiv float %57, %3
  store float %58, float* %56, align 8
  br label %77

59:                                               ; preds = %5
  %60 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %61 = bitcast %union.anon* %60 to %struct.anon.1*
  %62 = bitcast %union.anon* %60 to float*
  %63 = load float, float* %62, align 8
  %64 = fdiv float %63, %3
  store float %64, float* %62, align 8
  %65 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %61, i64 0, i32 1
  %66 = load float, float* %65, align 4
  %67 = fdiv float %66, %3
  store float %67, float* %65, align 4
  br label %77

68:                                               ; preds = %5
  %69 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %71 = bitcast %union.anon* %69 to float*
  %72 = load float, float* %71, align 8
  %73 = fdiv float %72, %3
  store float %73, float* %71, align 8
  %74 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i64 0, i32 1
  %75 = load float, float* %74, align 4
  %76 = fdiv float %75, %3
  store float %76, float* %74, align 4
  br label %77

77:                                               ; preds = %8, %19, %32, %41, %50, %59, %68, %12, %24, %5, %1
  %78 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7
  %79 = fdiv float 1.000000e+00, %3
  %80 = tail call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %78, float %79, float %79) #13
  %81 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 0
  %82 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 1
  %83 = bitcast float* %81 to <2 x float>*
  %84 = load <2 x float>, <2 x float>* %83, align 4
  %85 = fadd <2 x float> %84, %80
  %86 = bitcast %"class.gfx::PointF"* %78 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 8
  %87 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2
  %88 = bitcast %"class.gfx::Vector2dF"* %87 to i32*
  store i32 0, i32* %88, align 4
  %89 = bitcast float* %82 to i32*
  store i32 0, i32* %89, align 4
  store float 1.000000e+00, float* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15WebGestureEvent25IsCompatibleScrollorPinchERKS0_S2_(%"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112), %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %19 [
    i32 13, label %5
    i32 18, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 2
  br label %19

19:                                               ; preds = %2, %15, %11, %5
  %20 = phi i1 [ false, %11 ], [ false, %5 ], [ %18, %15 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.blink::WebGestureEvent"*, %"class.blink::WebGestureEvent"* } @_ZN5blink15WebGestureEvent22CoalesceScrollAndPinchEPKS0_RS1_S3_(%"class.blink::WebGestureEvent"* readonly, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112), %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = tail call i8* @_Znwm(i64 112) #12
  %14 = bitcast i8* %13 to %"class.blink::WebGestureEvent"*
  %15 = bitcast i8* %13 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to float*
  store float 1.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 24
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 32
  %25 = bitcast i8* %24 to i32*
  store i32 13, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 36
  %27 = bitcast i8* %26 to i32*
  store i32 %8, i32* %27, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 40
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 44
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds i8, i8* %13, i64 48
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %13, i64 88
  %34 = getelementptr inbounds i8, i8* %13, i64 104
  %35 = bitcast i8* %34 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 16, i1 false) #13
  store i32 %12, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %13, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #13
  %37 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  %39 = tail call i8* @_Znwm(i64 112) #12
  %40 = bitcast i8* %39 to %"class.blink::WebGestureEvent"*
  %41 = bitcast i8* %39 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %16, i64 32, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %28, i64 68, i1 false) #13
  %44 = getelementptr inbounds i8, i8* %39, i64 32
  %45 = bitcast i8* %44 to i32*
  store i32 18, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 18
  %49 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %2, i64 0, i32 7
  %50 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 7
  %51 = select i1 %48, %"class.gfx::PointF"* %49, %"class.gfx::PointF"* %50
  %52 = getelementptr inbounds i8, i8* %39, i64 88
  %53 = bitcast %"class.gfx::PointF"* %51 to i64*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %53, align 4
  store i64 %55, i64* %54, align 8
  %56 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %56) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE.gesture_transform to i8*), i64 68, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE(%"class.gfx::Transform"* nonnull sret %4, %"class.blink::WebGestureEvent"* dereferenceable(112) %1)
  %57 = icmp eq %"class.blink::WebGestureEvent"* %0, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %3
  %59 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %59) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE(%"class.gfx::Transform"* nonnull sret %5, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %0)
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull dereferenceable(68) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %59) #13
  br label %60

60:                                               ; preds = %3, %58
  %61 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %61) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE(%"class.gfx::Transform"* nonnull sret %6, %"class.blink::WebGestureEvent"* dereferenceable(112) %2)
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull dereferenceable(68) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 0, i64 0, i64 0
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 0, i64 3, i64 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 0, i64 3, i64 1
  %67 = load float, float* %66, align 4
  %68 = bitcast i8* %52 to float*
  %69 = load float, float* %68, align 4
  %70 = fadd float %65, %69
  %71 = fdiv float %70, %63
  %72 = fsub float %71, %69
  %73 = bitcast i8* %36 to float*
  store float %72, float* %73, align 8
  %74 = getelementptr inbounds i8, i8* %39, i64 92
  %75 = bitcast i8* %74 to float*
  %76 = load float, float* %75, align 4
  %77 = fadd float %67, %76
  %78 = fdiv float %77, %63
  %79 = fsub float %78, %76
  %80 = getelementptr inbounds i8, i8* %13, i64 60
  %81 = bitcast i8* %80 to float*
  store float %79, float* %81, align 4
  %82 = getelementptr inbounds i8, i8* %39, i64 60
  %83 = bitcast i8* %82 to float*
  store float %63, float* %83, align 4
  %84 = insertvalue { %"class.blink::WebGestureEvent"*, %"class.blink::WebGestureEvent"* } undef, %"class.blink::WebGestureEvent"* %14, 0
  %85 = insertvalue { %"class.blink::WebGestureEvent"*, %"class.blink::WebGestureEvent"* } %84, %"class.blink::WebGestureEvent"* %40, 1
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %56) #13
  ret { %"class.blink::WebGestureEvent"*, %"class.blink::WebGestureEvent"* } %85
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE(%"class.gfx::Transform"* noalias sret, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) unnamed_addr #0 {
  %3 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN5blink12_GLOBAL__N_120GetTransformForEventERKNS_15WebGestureEventE.gesture_transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #13
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %28 [
    i32 13, label %7
    i32 18, label %12
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 6
  %9 = bitcast %union.anon* %8 to %struct.anon.6*
  %10 = bitcast %union.anon* %8 to float*
  %11 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %9, i64 0, i32 1
  br label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 6
  %14 = bitcast %union.anon* %13 to %struct.anon.10*
  %15 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %14, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 7, i32 0
  %18 = load float, float* %17, align 4
  %19 = fsub float -0.000000e+00, %18
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 7, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float -0.000000e+00, %21
  tail call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %0, float %19, float %22) #13
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %0, float %16, float %16) #13
  br label %23

23:                                               ; preds = %7, %12
  %24 = phi float* [ %20, %12 ], [ %11, %7 ]
  %25 = phi float* [ %17, %12 ], [ %10, %7 ]
  %26 = load float, float* %25, align 4
  %27 = load float, float* %24, align 4
  tail call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %0, float %26, float %27) #13
  br label %28

28:                                               ; preds = %23, %2
  ret void
}

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #7

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGestureEvent"* @_ZN5blink15WebGestureEvent29GenerateInjectedScrollGestureENS_5mojom9EventTypeEN4base9TimeTicksENS1_13GestureDeviceEN3gfx6PointFENS6_9Vector2dFEN2ui17ScrollGranularityE(i32, i64, i32, <2 x float>, <2 x float>, i8 zeroext) local_unnamed_addr #6 align 2 {
  %7 = tail call i8* @_Znwm(i64 112) #12
  %8 = bitcast i8* %7 to %"class.blink::WebGestureEvent"*
  %9 = bitcast i8* %7 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to float*
  store float 1.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to float*
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  %17 = bitcast i8* %16 to i64*
  store i64 %1, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 32
  %19 = bitcast i8* %18 to i32*
  store i32 %0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 36
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 40
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %7, i64 44
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %7, i64 48
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %7, i64 88
  %28 = getelementptr inbounds i8, i8* %7, i64 104
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 16, i1 false) #13
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %7, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #13
  switch i32 %0, label %50 [
    i32 11, label %31
    i32 13, label %34
  ]

31:                                               ; preds = %6
  %32 = extractelement <2 x float> %4, i32 0
  %33 = getelementptr inbounds i8, i8* %7, i64 64
  br label %36

34:                                               ; preds = %6
  %35 = extractelement <2 x float> %4, i32 0
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i8* [ %30, %34 ], [ %33, %31 ]
  %38 = phi float [ %35, %34 ], [ %32, %31 ]
  %39 = phi i64 [ 60, %34 ], [ 68, %31 ]
  %40 = phi i64 [ 72, %34 ], [ 80, %31 ]
  %41 = fsub float -0.000000e+00, %38
  %42 = bitcast i8* %37 to float*
  store float %41, float* %42, align 8
  %43 = extractelement <2 x float> %4, i32 1
  %44 = fsub float -0.000000e+00, %43
  %45 = getelementptr inbounds i8, i8* %7, i64 %39
  %46 = bitcast i8* %45 to float*
  store float %44, float* %46, align 4
  %47 = getelementptr inbounds i8, i8* %7, i64 %40
  %48 = bitcast i8* %47 to i32*
  store i32 1, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 76
  store i8 %5, i8* %49, align 4
  br label %50

50:                                               ; preds = %36, %6
  %51 = bitcast i8* %27 to <2 x float>*
  store <2 x float> %3, <2 x float>* %51, align 8
  ret %"class.blink::WebGestureEvent"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebInputEventD2Ev(%"class.blink::WebInputEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15WebGestureEventD0Ev(%"class.blink::WebGestureEvent"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::WebGestureEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #7

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #7

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
